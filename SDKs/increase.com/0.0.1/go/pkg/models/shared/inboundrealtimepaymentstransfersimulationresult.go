// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
	"time"
)

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Declined Transaction's currency. This will match the currency on the Declined Transcation's Account.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionCurrencyEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionCurrencyEnumCad InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionCurrencyEnum = "CAD"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionCurrencyEnumChf InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionCurrencyEnum = "CHF"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionCurrencyEnumEur InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionCurrencyEnum = "EUR"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionCurrencyEnumGbp InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionCurrencyEnum = "GBP"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionCurrencyEnumJpy InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionCurrencyEnum = "JPY"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionCurrencyEnumUsd InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionCurrencyEnum = "USD"
)

func (e *InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionCurrencyEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum - Why the ACH transfer was declined.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumAchRouteCanceled             InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "ach_route_canceled"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumAchRouteDisabled             InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "ach_route_disabled"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumBreachesLimit                InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "breaches_limit"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumCreditEntryRefusedByReceiver InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "credit_entry_refused_by_receiver"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumDuplicateReturn              InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "duplicate_return"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumEntityNotActive              InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "entity_not_active"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumTransactionNotAllowed        InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "transaction_not_allowed"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumGroupLocked                  InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "group_locked"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumInsufficientFunds            InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "insufficient_funds"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumNoAchRoute                   InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "no_ach_route"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnumOriginatorRequest            InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum = "originator_request"
)

func (e *InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ach_route_canceled":
		fallthrough
	case "ach_route_disabled":
		fallthrough
	case "breaches_limit":
		fallthrough
	case "credit_entry_refused_by_receiver":
		fallthrough
	case "duplicate_return":
		fallthrough
	case "entity_not_active":
		fallthrough
	case "transaction_not_allowed":
		fallthrough
	case "group_locked":
		fallthrough
	case "insufficient_funds":
		fallthrough
	case "no_ach_route":
		fallthrough
	case "originator_request":
		*e = InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDecline - A ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `ach_decline`.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDecline struct {
	// The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount                             int64  `json:"amount"`
	OriginatorCompanyDescriptiveDate   string `json:"originator_company_descriptive_date"`
	OriginatorCompanyDiscretionaryData string `json:"originator_company_discretionary_data"`
	OriginatorCompanyID                string `json:"originator_company_id"`
	OriginatorCompanyName              string `json:"originator_company_name"`
	// Why the ACH transfer was declined.
	Reason           InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDeclineReasonEnum `json:"reason"`
	ReceiverIDNumber string                                                                                                          `json:"receiver_id_number"`
	ReceiverName     string                                                                                                          `json:"receiver_name"`
	TraceNumber      string                                                                                                          `json:"trace_number"`
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnumCad InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum = "CAD"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnumChf InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum = "CHF"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnumEur InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum = "EUR"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnumGbp InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum = "GBP"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnumJpy InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum = "JPY"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnumUsd InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum = "USD"
)

func (e *InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum - The payment network used to process this card authorization
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnumVisa InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum = "visa"
)

func (e *InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "visa":
		*e = InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum - For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumMailPhoneOrder                                          InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "mail_phone_order"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumRecurring                                               InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "recurring"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumInstallment                                             InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "installment"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumUnknownMailPhoneOrder                                   InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "unknown_mail_phone_order"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumSecureElectronicCommerce                                InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "secure_electronic_commerce"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumNonAuthenticatedSecurityTransactionAt3dsCapableMerchant InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "non_authenticated_security_transaction_at_3ds_capable_merchant"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumNonAuthenticatedSecurityTransaction                     InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "non_authenticated_security_transaction"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnumNonSecureTransaction                                    InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum = "non_secure_transaction"
)

func (e *InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "mail_phone_order":
		fallthrough
	case "recurring":
		fallthrough
	case "installment":
		fallthrough
	case "unknown_mail_phone_order":
		fallthrough
	case "secure_electronic_commerce":
		fallthrough
	case "non_authenticated_security_transaction_at_3ds_capable_merchant":
		fallthrough
	case "non_authenticated_security_transaction":
		fallthrough
	case "non_secure_transaction":
		*e = InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum - The method used to enter the cardholder's primary account number and card expiration date
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumManual                     InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "manual"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumMagneticStripeNoCvv        InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "magnetic_stripe_no_cvv"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumOpticalCode                InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "optical_code"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumIntegratedCircuitCard      InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "integrated_circuit_card"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumContactless                InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "contactless"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumCredentialOnFile           InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "credential_on_file"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumMagneticStripe             InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "magnetic_stripe"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumContactlessMagneticStripe  InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "contactless_magnetic_stripe"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnumIntegratedCircuitCardNoCvv InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum = "integrated_circuit_card_no_cvv"
)

func (e *InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "manual":
		fallthrough
	case "magnetic_stripe_no_cvv":
		fallthrough
	case "optical_code":
		fallthrough
	case "integrated_circuit_card":
		fallthrough
	case "contactless":
		fallthrough
	case "credential_on_file":
		fallthrough
	case "magnetic_stripe":
		fallthrough
	case "contactless_magnetic_stripe":
		fallthrough
	case "integrated_circuit_card_no_cvv":
		*e = InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisa - Fields specific to the `visa` network
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisa struct {
	// For electronic commerce transactions, this identifies the level of security used in obtaining the customer's payment credential. For mail or telephone order transactions, identifies the type of mail or telephone order.
	ElectronicCommerceIndicator InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaElectronicCommerceIndicatorEnum `json:"electronic_commerce_indicator"`
	// The method used to enter the cardholder's primary account number and card expiration date
	PointOfServiceEntryMode InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisaPointOfServiceEntryModeEnum `json:"point_of_service_entry_mode"`
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetails - Fields specific to the `network`
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetails struct {
	// Fields specific to the `visa` network
	Visa InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetailsVisa `json:"visa"`
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum - Why the transaction was declined.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumCardNotActive               InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "card_not_active"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumEntityNotActive             InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "entity_not_active"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumGroupLocked                 InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "group_locked"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumInsufficientFunds           InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "insufficient_funds"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumCvv2Mismatch                InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "cvv2_mismatch"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumTransactionNotAllowed       InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "transaction_not_allowed"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumBreachesLimit               InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "breaches_limit"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumWebhookDeclined             InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "webhook_declined"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumWebhookTimedOut             InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "webhook_timed_out"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnumDeclinedByStandInProcessing InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum = "declined_by_stand_in_processing"
)

func (e *InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "card_not_active":
		fallthrough
	case "entity_not_active":
		fallthrough
	case "group_locked":
		fallthrough
	case "insufficient_funds":
		fallthrough
	case "cvv2_mismatch":
		fallthrough
	case "transaction_not_allowed":
		fallthrough
	case "breaches_limit":
		fallthrough
	case "webhook_declined":
		fallthrough
	case "webhook_timed_out":
		fallthrough
	case "declined_by_stand_in_processing":
		*e = InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline - A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline struct {
	// The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
	Currency InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineCurrencyEnum `json:"currency"`
	// If the authorization was attempted using a Digital Wallet Token (such as an Apple Pay purchase), the identifier of the token that was used.
	DigitalWalletTokenID string `json:"digital_wallet_token_id"`
	// The merchant identifier (commonly abbreviated as MID) of the merchant the card is transacting with.
	MerchantAcceptorID string `json:"merchant_acceptor_id"`
	// The Merchant Category Code (commonly abbreviated as MCC) of the merchant the card is transacting with.
	MerchantCategoryCode string `json:"merchant_category_code"`
	// The city the merchant resides in.
	MerchantCity string `json:"merchant_city"`
	// The country the merchant resides in.
	MerchantCountry string `json:"merchant_country"`
	// The merchant descriptor of the merchant the card is transacting with.
	MerchantDescriptor string `json:"merchant_descriptor"`
	// The state the merchant resides in.
	MerchantState string `json:"merchant_state"`
	// The payment network used to process this card authorization
	Network InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkEnum `json:"network"`
	// Fields specific to the `network`
	NetworkDetails InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineNetworkDetails `json:"network_details"`
	// The identifier of the Real-Time Decision sent to approve or decline this transaction.
	RealTimeDecisionID string `json:"real_time_decision_id"`
	// Why the transaction was declined.
	Reason InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDeclineReasonEnum `json:"reason"`
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnumCad InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum = "CAD"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnumChf InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum = "CHF"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnumEur InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum = "EUR"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnumGbp InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum = "GBP"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnumJpy InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum = "JPY"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnumUsd InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum = "USD"
)

func (e *InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDecline - A Deprecated Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_route_decline`.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDecline struct {
	// The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
	Currency             InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDeclineCurrencyEnum `json:"currency"`
	MerchantAcceptorID   string                                                                                                                       `json:"merchant_acceptor_id"`
	MerchantCategoryCode string                                                                                                                       `json:"merchant_category_code"`
	MerchantCity         string                                                                                                                       `json:"merchant_city"`
	MerchantCountry      string                                                                                                                       `json:"merchant_country"`
	MerchantDescriptor   string                                                                                                                       `json:"merchant_descriptor"`
	MerchantState        string                                                                                                                       `json:"merchant_state"`
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum - The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnumAchDecline                             InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum = "ach_decline"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnumCardDecline                            InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum = "card_decline"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnumCheckDecline                           InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum = "check_decline"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnumInboundRealTimePaymentsTransferDecline InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum = "inbound_real_time_payments_transfer_decline"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnumInternationalAchDecline                InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum = "international_ach_decline"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnumCardRouteDecline                       InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum = "card_route_decline"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnumOther                                  InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum = "other"
)

func (e *InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ach_decline":
		fallthrough
	case "card_decline":
		fallthrough
	case "check_decline":
		fallthrough
	case "inbound_real_time_payments_transfer_decline":
		fallthrough
	case "international_ach_decline":
		fallthrough
	case "card_route_decline":
		fallthrough
	case "other":
		*e = InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum - Why the check was declined.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumAchRouteCanceled      InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "ach_route_canceled"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumAchRouteDisabled      InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "ach_route_disabled"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumBreachesLimit         InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "breaches_limit"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumEntityNotActive       InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "entity_not_active"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumGroupLocked           InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "group_locked"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumInsufficientFunds     InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "insufficient_funds"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumUnableToLocateAccount InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "unable_to_locate_account"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumUnableToProcess       InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "unable_to_process"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumReferToImage          InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "refer_to_image"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumStopPaymentRequested  InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "stop_payment_requested"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnumReturned              InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum = "returned"
)

func (e *InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ach_route_canceled":
		fallthrough
	case "ach_route_disabled":
		fallthrough
	case "breaches_limit":
		fallthrough
	case "entity_not_active":
		fallthrough
	case "group_locked":
		fallthrough
	case "insufficient_funds":
		fallthrough
	case "unable_to_locate_account":
		fallthrough
	case "unable_to_process":
		fallthrough
	case "refer_to_image":
		fallthrough
	case "stop_payment_requested":
		fallthrough
	case "returned":
		*e = InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDecline - A Check Decline object. This field will be present in the JSON response if and only if `category` is equal to `check_decline`.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDecline struct {
	// The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount        int64  `json:"amount"`
	AuxiliaryOnUs string `json:"auxiliary_on_us"`
	// Why the check was declined.
	Reason InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDeclineReasonEnum `json:"reason"`
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the declined transfer's currency. This will always be "USD" for a Real Time Payments transfer.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnumCad InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum = "CAD"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnumChf InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum = "CHF"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnumEur InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum = "EUR"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnumGbp InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum = "GBP"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnumJpy InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum = "JPY"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnumUsd InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum = "USD"
)

func (e *InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum - Why the transfer was declined.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnumAccountNumberCanceled      InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum = "account_number_canceled"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnumAccountNumberDisabled      InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum = "account_number_disabled"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnumGroupLocked                InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum = "group_locked"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnumEntityNotActive            InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum = "entity_not_active"
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnumRealTimePaymentsNotEnabled InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum = "real_time_payments_not_enabled"
)

func (e *InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "account_number_canceled":
		fallthrough
	case "account_number_disabled":
		fallthrough
	case "group_locked":
		fallthrough
	case "entity_not_active":
		fallthrough
	case "real_time_payments_not_enabled":
		*e = InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDecline - A Inbound Real Time Payments Transfer Decline object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_decline`.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDecline struct {
	// The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The name the sender of the transfer specified as the recipient of the transfer.
	CreditorName string `json:"creditor_name"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the declined transfer's currency. This will always be "USD" for a Real Time Payments transfer.
	Currency InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineCurrencyEnum `json:"currency"`
	// The account number of the account that sent the transfer.
	DebtorAccountNumber string `json:"debtor_account_number"`
	// The name provided by the sender of the transfer.
	DebtorName string `json:"debtor_name"`
	// The routing number of the account that sent the transfer.
	DebtorRoutingNumber string `json:"debtor_routing_number"`
	// Why the transfer was declined.
	Reason InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDeclineReasonEnum `json:"reason"`
	// Additional information included with the transfer.
	RemittanceInformation string `json:"remittance_information"`
	// The Real Time Payments network identification of the declined transfer.
	TransactionIdentification string `json:"transaction_identification"`
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInternationalACHDecline - A International ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `international_ach_decline`.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInternationalACHDecline struct {
	// The declined amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount                                                 int64  `json:"amount"`
	DestinationCountryCode                                 string `json:"destination_country_code"`
	DestinationCurrencyCode                                string `json:"destination_currency_code"`
	ForeignExchangeIndicator                               string `json:"foreign_exchange_indicator"`
	ForeignExchangeReference                               string `json:"foreign_exchange_reference"`
	ForeignExchangeReferenceIndicator                      string `json:"foreign_exchange_reference_indicator"`
	ForeignPaymentAmount                                   int64  `json:"foreign_payment_amount"`
	ForeignTraceNumber                                     string `json:"foreign_trace_number"`
	InternationalTransactionTypeCode                       string `json:"international_transaction_type_code"`
	OriginatingCurrencyCode                                string `json:"originating_currency_code"`
	OriginatingDepositoryFinancialInstitutionBranchCountry string `json:"originating_depository_financial_institution_branch_country"`
	OriginatingDepositoryFinancialInstitutionID            string `json:"originating_depository_financial_institution_id"`
	OriginatingDepositoryFinancialInstitutionIDQualifier   string `json:"originating_depository_financial_institution_id_qualifier"`
	OriginatingDepositoryFinancialInstitutionName          string `json:"originating_depository_financial_institution_name"`
	OriginatorCity                                         string `json:"originator_city"`
	OriginatorCompanyEntryDescription                      string `json:"originator_company_entry_description"`
	OriginatorCountry                                      string `json:"originator_country"`
	OriginatorIdentification                               string `json:"originator_identification"`
	OriginatorName                                         string `json:"originator_name"`
	OriginatorPostalCode                                   string `json:"originator_postal_code"`
	OriginatorStateOrProvince                              string `json:"originator_state_or_province"`
	OriginatorStreetAddress                                string `json:"originator_street_address"`
	PaymentRelatedInformation                              string `json:"payment_related_information"`
	PaymentRelatedInformation2                             string `json:"payment_related_information2"`
	ReceiverCity                                           string `json:"receiver_city"`
	ReceiverCountry                                        string `json:"receiver_country"`
	ReceiverIdentificationNumber                           string `json:"receiver_identification_number"`
	ReceiverPostalCode                                     string `json:"receiver_postal_code"`
	ReceiverStateOrProvince                                string `json:"receiver_state_or_province"`
	ReceiverStreetAddress                                  string `json:"receiver_street_address"`
	ReceivingCompanyOrIndividualName                       string `json:"receiving_company_or_individual_name"`
	ReceivingDepositoryFinancialInstitutionCountry         string `json:"receiving_depository_financial_institution_country"`
	ReceivingDepositoryFinancialInstitutionID              string `json:"receiving_depository_financial_institution_id"`
	ReceivingDepositoryFinancialInstitutionIDQualifier     string `json:"receiving_depository_financial_institution_id_qualifier"`
	ReceivingDepositoryFinancialInstitutionName            string `json:"receiving_depository_financial_institution_name"`
	TraceNumber                                            string `json:"trace_number"`
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSource - This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant's industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSource struct {
	// A ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `ach_decline`.
	AchDecline InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceACHDecline `json:"ach_decline"`
	// A Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_decline`.
	CardDecline InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCardDecline `json:"card_decline"`
	// A Deprecated Card Decline object. This field will be present in the JSON response if and only if `category` is equal to `card_route_decline`.
	CardRouteDecline InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceDeprecatedCardDecline `json:"card_route_decline"`
	// The type of decline that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
	Category InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCategoryEnum `json:"category"`
	// A Check Decline object. This field will be present in the JSON response if and only if `category` is equal to `check_decline`.
	CheckDecline InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceCheckDecline `json:"check_decline"`
	// A Inbound Real Time Payments Transfer Decline object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_decline`.
	InboundRealTimePaymentsTransferDecline InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInboundRealTimePaymentsTransferDecline `json:"inbound_real_time_payments_transfer_decline"`
	// A International ACH Decline object. This field will be present in the JSON response if and only if `category` is equal to `international_ach_decline`.
	InternationalAchDecline InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSourceInternationalACHDecline `json:"international_ach_decline"`
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionTypeEnum - A constant representing the object's type. For this resource it will always be `declined_transaction`.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionTypeEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionTypeEnumDeclinedTransaction InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionTypeEnum = "declined_transaction"
)

func (e *InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "declined_transaction":
		*e = InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionTypeEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultDeclinedTransaction - If the Real Time Payments Transfer attempt fails, this will contain the resulting [Declined Transaction](#declined-transactions) object. The Declined Transaction's `source` will be of `category: inbound_real_time_payments_transfer_decline`.
type InboundRealTimePaymentsTransferSimulationResultDeclinedTransaction struct {
	// The identifier for the Account the Declined Transaction belongs to.
	AccountID string `json:"account_id"`
	// The Declined Transaction amount in the minor unit of its currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured.
	CreatedAt time.Time `json:"created_at"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Declined Transaction's currency. This will match the currency on the Declined Transcation's Account.
	Currency InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionCurrencyEnum `json:"currency"`
	// This is the description the vendor provides.
	Description string `json:"description"`
	// The Declined Transaction identifier.
	ID string `json:"id"`
	// The identifier for the route this Declined Transaction came through. Routes are things like cards and ACH details.
	RouteID string `json:"route_id"`
	// The type of the route this Declined Transaction came through.
	RouteType string `json:"route_type"`
	// This is an object giving more details on the network-level event that caused the Declined Transaction. For example, for a card transaction this lists the merchant's industry and location. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.
	Source InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionDeclinedTransactionSource `json:"source"`
	// A constant representing the object's type. For this resource it will always be `declined_transaction`.
	Type InboundRealTimePaymentsTransferSimulationResultDeclinedTransactionTypeEnum `json:"type"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transcation's Account.
type InboundRealTimePaymentsTransferSimulationResultTransactionCurrencyEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionCurrencyEnumCad InboundRealTimePaymentsTransferSimulationResultTransactionCurrencyEnum = "CAD"
	InboundRealTimePaymentsTransferSimulationResultTransactionCurrencyEnumChf InboundRealTimePaymentsTransferSimulationResultTransactionCurrencyEnum = "CHF"
	InboundRealTimePaymentsTransferSimulationResultTransactionCurrencyEnumEur InboundRealTimePaymentsTransferSimulationResultTransactionCurrencyEnum = "EUR"
	InboundRealTimePaymentsTransferSimulationResultTransactionCurrencyEnumGbp InboundRealTimePaymentsTransferSimulationResultTransactionCurrencyEnum = "GBP"
	InboundRealTimePaymentsTransferSimulationResultTransactionCurrencyEnumJpy InboundRealTimePaymentsTransferSimulationResultTransactionCurrencyEnum = "JPY"
	InboundRealTimePaymentsTransferSimulationResultTransactionCurrencyEnumUsd InboundRealTimePaymentsTransferSimulationResultTransactionCurrencyEnum = "USD"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionCurrencyEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnumCad InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum = "CAD"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnumChf InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum = "CHF"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnumEur InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum = "EUR"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnumGbp InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum = "GBP"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnumJpy InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum = "JPY"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnumUsd InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum = "USD"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntention - A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntention struct {
	// The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
	Currency InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntentionCurrencyEnum `json:"currency"`
	// The description you chose to give the transfer.
	Description string `json:"description"`
	// The identifier of the Account to where the Account Transfer was sent.
	DestinationAccountID string `json:"destination_account_id"`
	// The identifier of the Account from where the Account Transfer was sent.
	SourceAccountID string `json:"source_account_id"`
	// The identifier of the Account Transfer that led to this Pending Transaction.
	TransferID string `json:"transfer_id"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHCheckConversion - A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHCheckConversion struct {
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The identifier of the File containing an image of the returned check.
	FileID string `json:"file_id"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHCheckConversionReturn - A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHCheckConversionReturn struct {
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// Why the transfer was returned.
	ReturnReasonCode string `json:"return_reason_code"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferIntention - A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferIntention struct {
	AccountNumber string `json:"account_number"`
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount              int64  `json:"amount"`
	RoutingNumber       string `json:"routing_number"`
	StatementDescriptor string `json:"statement_descriptor"`
	// The identifier of the ACH Transfer that led to this Transaction.
	TransferID string `json:"transfer_id"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferRejection - A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferRejection struct {
	// The identifier of the ACH Transfer that led to this Transaction.
	TransferID string `json:"transfer_id"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum - Why the ACH Transfer was returned.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumInsufficientFund                                          InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "insufficient_fund"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumNoAccount                                                 InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "no_account"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumAccountClosed                                             InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "account_closed"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumInvalidAccountNumberStructure                             InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "invalid_account_number_structure"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumAccountFrozenEntryReturnedPerOfacInstruction              InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "account_frozen_entry_returned_per_ofac_instruction"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumCreditEntryRefusedByReceiver                              InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "credit_entry_refused_by_receiver"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumUnauthorizedDebitToConsumerAccountUsingCorporateSecCode   InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "unauthorized_debit_to_consumer_account_using_corporate_sec_code"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumCorporateCustomerAdvisedNotAuthorized                     InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "corporate_customer_advised_not_authorized"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumPaymentStopped                                            InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "payment_stopped"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumNonTransactionAccount                                     InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "non_transaction_account"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumUncollectedFunds                                          InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "uncollected_funds"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumRoutingNumberCheckDigitError                              InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "routing_number_check_digit_error"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumCustomerAdvisedUnauthorizedImproperIneligibleOrIncomplete InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "customer_advised_unauthorized_improper_ineligible_or_incomplete"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumAmountFieldError                                          InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "amount_field_error"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumAuthorizationRevokedByCustomer                            InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "authorization_revoked_by_customer"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumInvalidAchRoutingNumber                                   InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "invalid_ach_routing_number"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumFileRecordEditCriteria                                    InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "file_record_edit_criteria"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumEnrInvalidIndividualName                                  InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "enr_invalid_individual_name"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumReturnedPerOdfiRequest                                    InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "returned_per_odfi_request"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumAddendaError                                              InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "addenda_error"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumLimitedParticipationDfi                                   InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "limited_participation_dfi"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumIncorrectlyCodedOutboundInternationalPayment              InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "incorrectly_coded_outbound_international_payment"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnumOther                                                     InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum = "other"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_fund":
		fallthrough
	case "no_account":
		fallthrough
	case "account_closed":
		fallthrough
	case "invalid_account_number_structure":
		fallthrough
	case "account_frozen_entry_returned_per_ofac_instruction":
		fallthrough
	case "credit_entry_refused_by_receiver":
		fallthrough
	case "unauthorized_debit_to_consumer_account_using_corporate_sec_code":
		fallthrough
	case "corporate_customer_advised_not_authorized":
		fallthrough
	case "payment_stopped":
		fallthrough
	case "non_transaction_account":
		fallthrough
	case "uncollected_funds":
		fallthrough
	case "routing_number_check_digit_error":
		fallthrough
	case "customer_advised_unauthorized_improper_ineligible_or_incomplete":
		fallthrough
	case "amount_field_error":
		fallthrough
	case "authorization_revoked_by_customer":
		fallthrough
	case "invalid_ach_routing_number":
		fallthrough
	case "file_record_edit_criteria":
		fallthrough
	case "enr_invalid_individual_name":
		fallthrough
	case "returned_per_odfi_request":
		fallthrough
	case "addenda_error":
		fallthrough
	case "limited_participation_dfi":
		fallthrough
	case "incorrectly_coded_outbound_international_payment":
		fallthrough
	case "other":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturn - A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturn struct {
	// The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.
	CreatedAt time.Time `json:"created_at"`
	// Why the ACH Transfer was returned.
	ReturnReasonCode InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturnReturnReasonCodeEnum `json:"return_reason_code"`
	// The identifier of the Tranasaction associated with this return.
	TransactionID string `json:"transaction_id"`
	// The identifier of the ACH Transfer associated with this return.
	TransferID string `json:"transfer_id"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardDisputeAcceptance - A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardDisputeAcceptance struct {
	// The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was accepted.
	AcceptedAt time.Time `json:"accepted_at"`
	// The identifier of the Card Dispute that was accepted.
	CardDisputeID string `json:"card_dispute_id"`
	// The identifier of the Transaction that was created to return the disputed funds to your account.
	TransactionID string `json:"transaction_id"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnumCad InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum = "CAD"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnumChf InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum = "CHF"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnumEur InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum = "EUR"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnumGbp InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum = "GBP"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnumJpy InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum = "JPY"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnumUsd InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum = "USD"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundTypeEnum - A constant representing the object's type. For this resource it will always be `card_refund`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundTypeEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundTypeEnumCardRefund InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundTypeEnum = "card_refund"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "card_refund":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundTypeEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefund - A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefund struct {
	// The pending amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The identifier for the Transaction this refunds, if any.
	CardSettlementTransactionID string `json:"card_settlement_transaction_id"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
	Currency InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundCurrencyEnum `json:"currency"`
	// A constant representing the object's type. For this resource it will always be `card_refund`.
	Type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefundTypeEnum `json:"type"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the refund currency.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnumCad InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum = "CAD"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnumChf InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum = "CHF"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnumEur InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum = "EUR"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnumGbp InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum = "GBP"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnumJpy InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum = "JPY"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnumUsd InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum = "USD"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefund - A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefund struct {
	// The refunded amount in the minor unit of the refunded currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the refund currency.
	Currency             InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefundCurrencyEnum `json:"currency"`
	MerchantAcceptorID   string                                                                                                      `json:"merchant_acceptor_id"`
	MerchantCategoryCode string                                                                                                      `json:"merchant_category_code"`
	MerchantCity         string                                                                                                      `json:"merchant_city"`
	MerchantCountry      string                                                                                                      `json:"merchant_country"`
	MerchantDescriptor   string                                                                                                      `json:"merchant_descriptor"`
	MerchantState        string                                                                                                      `json:"merchant_state"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the settlement currency.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnumCad InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum = "CAD"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnumChf InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum = "CHF"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnumEur InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum = "EUR"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnumGbp InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum = "GBP"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnumJpy InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum = "JPY"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnumUsd InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum = "USD"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlement - A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlement struct {
	// The settled amount in the minor unit of the settlement currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the settlement currency.
	Currency             InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlementCurrencyEnum `json:"currency"`
	MerchantAcceptorID   string                                                                                                          `json:"merchant_acceptor_id"`
	MerchantCategoryCode string                                                                                                          `json:"merchant_category_code"`
	MerchantCity         string                                                                                                          `json:"merchant_city"`
	MerchantCountry      string                                                                                                          `json:"merchant_country"`
	MerchantDescriptor   string                                                                                                          `json:"merchant_descriptor"`
	MerchantState        string                                                                                                          `json:"merchant_state"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnumCad InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum = "CAD"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnumChf InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum = "CHF"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnumEur InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum = "EUR"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnumGbp InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum = "GBP"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnumJpy InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum = "JPY"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnumUsd InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum = "USD"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum - A constant representing the object's type. For this resource it will always be `card_settlement`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnumCardSettlement InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum = "card_settlement"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "card_settlement":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlement - A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlement struct {
	// The amount in the minor unit of the transaction's settlement currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's settlement currency.
	Currency             InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementCurrencyEnum `json:"currency"`
	MerchantCategoryCode string                                                                                                `json:"merchant_category_code"`
	MerchantCity         string                                                                                                `json:"merchant_city"`
	MerchantCountry      string                                                                                                `json:"merchant_country"`
	MerchantName         string                                                                                                `json:"merchant_name"`
	MerchantState        string                                                                                                `json:"merchant_state"`
	// The identifier of the Pending Transaction associated with this Transaction.
	PendingTransactionID string `json:"pending_transaction_id"`
	// The amount in the minor unit of the transaction's presentment currency.
	PresentmentAmount int64 `json:"presentment_amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's presentment currency.
	PresentmentCurrency string `json:"presentment_currency"`
	// A constant representing the object's type. For this resource it will always be `card_settlement`.
	Type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlementTypeEnum `json:"type"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum - The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumAccountTransferIntention                    InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "account_transfer_intention"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumAchCheckConversionReturn                    InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "ach_check_conversion_return"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumAchCheckConversion                          InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "ach_check_conversion"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumAchTransferIntention                        InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "ach_transfer_intention"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumAchTransferRejection                        InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "ach_transfer_rejection"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumAchTransferReturn                           InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "ach_transfer_return"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumCardDisputeAcceptance                       InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "card_dispute_acceptance"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumCardRefund                                  InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "card_refund"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumCardSettlement                              InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "card_settlement"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumCheckDepositAcceptance                      InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "check_deposit_acceptance"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumCheckDepositReturn                          InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "check_deposit_return"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumCheckTransferIntention                      InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "check_transfer_intention"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumCheckTransferReturn                         InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "check_transfer_return"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumCheckTransferRejection                      InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "check_transfer_rejection"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumCheckTransferStopPaymentRequest             InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "check_transfer_stop_payment_request"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumDisputeResolution                           InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "dispute_resolution"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumEmpyrealCashDeposit                         InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "empyreal_cash_deposit"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumInboundAchTransfer                          InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "inbound_ach_transfer"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumInboundAchTransferReturnIntention           InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "inbound_ach_transfer_return_intention"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumInboundCheck                                InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "inbound_check"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumInboundInternationalAchTransfer             InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "inbound_international_ach_transfer"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumInboundRealTimePaymentsTransferConfirmation InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "inbound_real_time_payments_transfer_confirmation"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumInboundWireDrawdownPaymentReversal          InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "inbound_wire_drawdown_payment_reversal"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumInboundWireDrawdownPayment                  InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "inbound_wire_drawdown_payment"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumInboundWireReversal                         InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "inbound_wire_reversal"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumInboundWireTransfer                         InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "inbound_wire_transfer"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumInterestPayment                             InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "interest_payment"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumInternalGeneralLedgerTransaction            InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "internal_general_ledger_transaction"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumInternalSource                              InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "internal_source"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumCardRouteRefund                             InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "card_route_refund"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumCardRouteSettlement                         InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "card_route_settlement"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumRealTimePaymentsTransferAcknowledgement     InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "real_time_payments_transfer_acknowledgement"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumSampleFunds                                 InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "sample_funds"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumWireDrawdownPaymentIntention                InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "wire_drawdown_payment_intention"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumWireDrawdownPaymentRejection                InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "wire_drawdown_payment_rejection"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumWireTransferIntention                       InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "wire_transfer_intention"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumWireTransferRejection                       InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "wire_transfer_rejection"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnumOther                                       InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum = "other"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "account_transfer_intention":
		fallthrough
	case "ach_check_conversion_return":
		fallthrough
	case "ach_check_conversion":
		fallthrough
	case "ach_transfer_intention":
		fallthrough
	case "ach_transfer_rejection":
		fallthrough
	case "ach_transfer_return":
		fallthrough
	case "card_dispute_acceptance":
		fallthrough
	case "card_refund":
		fallthrough
	case "card_settlement":
		fallthrough
	case "check_deposit_acceptance":
		fallthrough
	case "check_deposit_return":
		fallthrough
	case "check_transfer_intention":
		fallthrough
	case "check_transfer_return":
		fallthrough
	case "check_transfer_rejection":
		fallthrough
	case "check_transfer_stop_payment_request":
		fallthrough
	case "dispute_resolution":
		fallthrough
	case "empyreal_cash_deposit":
		fallthrough
	case "inbound_ach_transfer":
		fallthrough
	case "inbound_ach_transfer_return_intention":
		fallthrough
	case "inbound_check":
		fallthrough
	case "inbound_international_ach_transfer":
		fallthrough
	case "inbound_real_time_payments_transfer_confirmation":
		fallthrough
	case "inbound_wire_drawdown_payment_reversal":
		fallthrough
	case "inbound_wire_drawdown_payment":
		fallthrough
	case "inbound_wire_reversal":
		fallthrough
	case "inbound_wire_transfer":
		fallthrough
	case "interest_payment":
		fallthrough
	case "internal_general_ledger_transaction":
		fallthrough
	case "internal_source":
		fallthrough
	case "card_route_refund":
		fallthrough
	case "card_route_settlement":
		fallthrough
	case "real_time_payments_transfer_acknowledgement":
		fallthrough
	case "sample_funds":
		fallthrough
	case "wire_drawdown_payment_intention":
		fallthrough
	case "wire_drawdown_payment_rejection":
		fallthrough
	case "wire_transfer_intention":
		fallthrough
	case "wire_transfer_rejection":
		fallthrough
	case "other":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnumCad InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum = "CAD"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnumChf InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum = "CHF"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnumEur InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum = "EUR"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnumGbp InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum = "GBP"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnumJpy InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum = "JPY"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnumUsd InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum = "USD"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptance - A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptance struct {
	// The account number printed on the check.
	AccountNumber string `json:"account_number"`
	// The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// An additional line of metadata printed on the check. This typically includes the check number for business checks.
	AuxiliaryOnUs string `json:"auxiliary_on_us"`
	// The ID of the Check Deposit that was accepted.
	CheckDepositID string `json:"check_deposit_id"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
	Currency InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptanceCurrencyEnum `json:"currency"`
	// The routing number printed on the check.
	RoutingNumber string `json:"routing_number"`
	// The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.
	SerialNumber string `json:"serial_number"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnumCad InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum = "CAD"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnumChf InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum = "CHF"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnumEur InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum = "EUR"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnumGbp InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum = "GBP"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnumJpy InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum = "JPY"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnumUsd InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum = "USD"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum: %s", s)
	}
}

type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumAchConversionNotSupported InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "ach_conversion_not_supported"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumClosedAccount             InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "closed_account"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumDuplicateSubmission       InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "duplicate_submission"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumInsufficientFunds         InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "insufficient_funds"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumNoAccount                 InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "no_account"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumNotAuthorized             InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "not_authorized"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumStaleDated                InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "stale_dated"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumStopPayment               InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "stop_payment"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumUnknownReason             InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "unknown_reason"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumUnmatchedDetails          InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "unmatched_details"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnumUnreadableImage           InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum = "unreadable_image"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ach_conversion_not_supported":
		fallthrough
	case "closed_account":
		fallthrough
	case "duplicate_submission":
		fallthrough
	case "insufficient_funds":
		fallthrough
	case "no_account":
		fallthrough
	case "not_authorized":
		fallthrough
	case "stale_dated":
		fallthrough
	case "stop_payment":
		fallthrough
	case "unknown_reason":
		fallthrough
	case "unmatched_details":
		fallthrough
	case "unreadable_image":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturn - A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturn struct {
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The identifier of the Check Deposit that was returned.
	CheckDepositID string `json:"check_deposit_id"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
	Currency     InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnCurrencyEnum     `json:"currency"`
	ReturnReason InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturnReturnReasonEnum `json:"return_reason"`
	// The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned.
	ReturnedAt time.Time `json:"returned_at"`
	// The identifier of the transaction that reversed the original check deposit transaction.
	TransactionID string `json:"transaction_id"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnumCad InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum = "CAD"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnumChf InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum = "CHF"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnumEur InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum = "EUR"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnumGbp InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum = "GBP"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnumJpy InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum = "JPY"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnumUsd InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum = "USD"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntention - A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntention struct {
	// The city of the check's destination.
	AddressCity string `json:"address_city"`
	// The street address of the check's destination.
	AddressLine1 string `json:"address_line1"`
	// The second line of the address of the check's destination.
	AddressLine2 string `json:"address_line2"`
	// The state of the check's destination.
	AddressState string `json:"address_state"`
	// The postal code of the check's destination.
	AddressZip string `json:"address_zip"`
	// The transfer amount in USD cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.
	Currency InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntentionCurrencyEnum `json:"currency"`
	// The name that will be printed on the check.
	RecipientName string `json:"recipient_name"`
	// The identifier of the Check Transfer with which this is associated.
	TransferID string `json:"transfer_id"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferRejection - A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferRejection struct {
	// The identifier of the Check Transfer that led to this Transaction.
	TransferID string `json:"transfer_id"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferReturn - A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferReturn struct {
	// If available, a document with additional information about the return.
	FileID string `json:"file_id"`
	// The identifier of the returned Check Transfer.
	TransferID string `json:"transfer_id"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum - A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnumCheckTransferStopPaymentRequest InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum = "check_transfer_stop_payment_request"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "check_transfer_stop_payment_request":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequest - A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequest struct {
	// The time the stop-payment was requested.
	RequestedAt time.Time `json:"requested_at"`
	// The transaction ID of the corresponding credit transaction.
	TransactionID string `json:"transaction_id"`
	// The ID of the check transfer that was stopped.
	TransferID string `json:"transfer_id"`
	// A constant representing the object's type. For this resource it will always be `check_transfer_stop_payment_request`.
	Type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequestTypeEnum `json:"type"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnumCad InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum = "CAD"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnumChf InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum = "CHF"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnumEur InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum = "EUR"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnumGbp InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum = "GBP"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnumJpy InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum = "JPY"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnumUsd InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum = "USD"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolution - A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolution struct {
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
	Currency InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolutionCurrencyEnum `json:"currency"`
	// The identifier of the Transaction that was disputed.
	DisputedTransactionID string `json:"disputed_transaction_id"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceEmpyrealCashDeposit - A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceEmpyrealCashDeposit struct {
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount      int64     `json:"amount"`
	BagID       string    `json:"bag_id"`
	DepositDate time.Time `json:"deposit_date"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundACHTransfer - A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundACHTransfer struct {
	// The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount                             int64  `json:"amount"`
	OriginatorCompanyDescriptiveDate   string `json:"originator_company_descriptive_date"`
	OriginatorCompanyDiscretionaryData string `json:"originator_company_discretionary_data"`
	OriginatorCompanyEntryDescription  string `json:"originator_company_entry_description"`
	OriginatorCompanyID                string `json:"originator_company_id"`
	OriginatorCompanyName              string `json:"originator_company_name"`
	ReceiverIDNumber                   string `json:"receiver_id_number"`
	ReceiverName                       string `json:"receiver_name"`
	TraceNumber                        string `json:"trace_number"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnumCad InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum = "CAD"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnumChf InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum = "CHF"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnumEur InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum = "EUR"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnumGbp InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum = "GBP"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnumJpy InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum = "JPY"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnumUsd InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum = "USD"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheck - A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheck struct {
	// The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount                int64  `json:"amount"`
	CheckFrontImageFileID string `json:"check_front_image_file_id"`
	CheckNumber           string `json:"check_number"`
	CheckRearImageFileID  string `json:"check_rear_image_file_id"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
	Currency InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheckCurrencyEnum `json:"currency"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundInternationalACHTransfer - A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundInternationalACHTransfer struct {
	// The amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
	Amount                                                 int64  `json:"amount"`
	DestinationCountryCode                                 string `json:"destination_country_code"`
	DestinationCurrencyCode                                string `json:"destination_currency_code"`
	ForeignExchangeIndicator                               string `json:"foreign_exchange_indicator"`
	ForeignExchangeReference                               string `json:"foreign_exchange_reference"`
	ForeignExchangeReferenceIndicator                      string `json:"foreign_exchange_reference_indicator"`
	ForeignPaymentAmount                                   int64  `json:"foreign_payment_amount"`
	ForeignTraceNumber                                     string `json:"foreign_trace_number"`
	InternationalTransactionTypeCode                       string `json:"international_transaction_type_code"`
	OriginatingCurrencyCode                                string `json:"originating_currency_code"`
	OriginatingDepositoryFinancialInstitutionBranchCountry string `json:"originating_depository_financial_institution_branch_country"`
	OriginatingDepositoryFinancialInstitutionID            string `json:"originating_depository_financial_institution_id"`
	OriginatingDepositoryFinancialInstitutionIDQualifier   string `json:"originating_depository_financial_institution_id_qualifier"`
	OriginatingDepositoryFinancialInstitutionName          string `json:"originating_depository_financial_institution_name"`
	OriginatorCity                                         string `json:"originator_city"`
	OriginatorCompanyEntryDescription                      string `json:"originator_company_entry_description"`
	OriginatorCountry                                      string `json:"originator_country"`
	OriginatorIdentification                               string `json:"originator_identification"`
	OriginatorName                                         string `json:"originator_name"`
	OriginatorPostalCode                                   string `json:"originator_postal_code"`
	OriginatorStateOrProvince                              string `json:"originator_state_or_province"`
	OriginatorStreetAddress                                string `json:"originator_street_address"`
	PaymentRelatedInformation                              string `json:"payment_related_information"`
	PaymentRelatedInformation2                             string `json:"payment_related_information2"`
	ReceiverCity                                           string `json:"receiver_city"`
	ReceiverCountry                                        string `json:"receiver_country"`
	ReceiverIdentificationNumber                           string `json:"receiver_identification_number"`
	ReceiverPostalCode                                     string `json:"receiver_postal_code"`
	ReceiverStateOrProvince                                string `json:"receiver_state_or_province"`
	ReceiverStreetAddress                                  string `json:"receiver_street_address"`
	ReceivingCompanyOrIndividualName                       string `json:"receiving_company_or_individual_name"`
	ReceivingDepositoryFinancialInstitutionCountry         string `json:"receiving_depository_financial_institution_country"`
	ReceivingDepositoryFinancialInstitutionID              string `json:"receiving_depository_financial_institution_id"`
	ReceivingDepositoryFinancialInstitutionIDQualifier     string `json:"receiving_depository_financial_institution_id_qualifier"`
	ReceivingDepositoryFinancialInstitutionName            string `json:"receiving_depository_financial_institution_name"`
	TraceNumber                                            string `json:"trace_number"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be "USD" for a Real Time Payments transfer.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnumCad InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum = "CAD"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnumChf InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum = "CHF"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnumEur InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum = "EUR"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnumGbp InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum = "GBP"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnumJpy InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum = "JPY"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnumUsd InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum = "USD"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation - A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation struct {
	// The amount in the minor unit of the transfer's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The name the sender of the transfer specified as the recipient of the transfer.
	CreditorName string `json:"creditor_name"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code of the transfer's currency. This will always be "USD" for a Real Time Payments transfer.
	Currency InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmationCurrencyEnum `json:"currency"`
	// The account number of the account that sent the transfer.
	DebtorAccountNumber string `json:"debtor_account_number"`
	// The name provided by the sender of the transfer.
	DebtorName string `json:"debtor_name"`
	// The routing number of the account that sent the transfer.
	DebtorRoutingNumber string `json:"debtor_routing_number"`
	// Additional information included with the transfer.
	RemittanceInformation string `json:"remittance_information"`
	// The Real Time Payments network identification of the transfer
	TransactionIdentification string `json:"transaction_identification"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPayment - A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPayment struct {
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount                             int64  `json:"amount"`
	BeneficiaryAddressLine1            string `json:"beneficiary_address_line1"`
	BeneficiaryAddressLine2            string `json:"beneficiary_address_line2"`
	BeneficiaryAddressLine3            string `json:"beneficiary_address_line3"`
	BeneficiaryName                    string `json:"beneficiary_name"`
	BeneficiaryReference               string `json:"beneficiary_reference"`
	Description                        string `json:"description"`
	InputMessageAccountabilityData     string `json:"input_message_accountability_data"`
	OriginatorAddressLine1             string `json:"originator_address_line1"`
	OriginatorAddressLine2             string `json:"originator_address_line2"`
	OriginatorAddressLine3             string `json:"originator_address_line3"`
	OriginatorName                     string `json:"originator_name"`
	OriginatorToBeneficiaryInformation string `json:"originator_to_beneficiary_information"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPaymentReversal - A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPaymentReversal struct {
	// The amount that was reversed.
	Amount int64 `json:"amount"`
	// The description on the reversal message from Fedwire.
	Description string `json:"description"`
	// The Fedwire cycle date for the wire reversal.
	InputCycleDate types.Date `json:"input_cycle_date"`
	// The Fedwire transaction identifier.
	InputMessageAccountabilityData string `json:"input_message_accountability_data"`
	// The Fedwire sequence number.
	InputSequenceNumber string `json:"input_sequence_number"`
	// The Fedwire input source identifier.
	InputSource string `json:"input_source"`
	// The Fedwire cycle date for the wire transfer that was reversed.
	PreviousMessageInputCycleDate types.Date `json:"previous_message_input_cycle_date"`
	// The Fedwire transaction identifier for the wire transfer that was reversed.
	PreviousMessageInputMessageAccountabilityData string `json:"previous_message_input_message_accountability_data"`
	// The Fedwire sequence number for the wire transfer that was reversed.
	PreviousMessageInputSequenceNumber string `json:"previous_message_input_sequence_number"`
	// The Fedwire input source identifier for the wire transfer that was reversed.
	PreviousMessageInputSource string `json:"previous_message_input_source"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireReversal - A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireReversal struct {
	// The amount that was reversed.
	Amount int64 `json:"amount"`
	// The description on the reversal message from Fedwire.
	Description string `json:"description"`
	// Additional financial institution information included in the wire reversal.
	FinancialInstitutionToFinancialInstitutionInformation string `json:"financial_institution_to_financial_institution_information"`
	// The Fedwire cycle date for the wire reversal.
	InputCycleDate types.Date `json:"input_cycle_date"`
	// The Fedwire transaction identifier.
	InputMessageAccountabilityData string `json:"input_message_accountability_data"`
	// The Fedwire sequence number.
	InputSequenceNumber string `json:"input_sequence_number"`
	// The Fedwire input source identifier.
	InputSource string `json:"input_source"`
	// The Fedwire cycle date for the wire transfer that was reversed.
	PreviousMessageInputCycleDate types.Date `json:"previous_message_input_cycle_date"`
	// The Fedwire transaction identifier for the wire transfer that was reversed.
	PreviousMessageInputMessageAccountabilityData string `json:"previous_message_input_message_accountability_data"`
	// The Fedwire sequence number for the wire transfer that was reversed.
	PreviousMessageInputSequenceNumber string `json:"previous_message_input_sequence_number"`
	// The Fedwire input source identifier for the wire transfer that was reversed.
	PreviousMessageInputSource string `json:"previous_message_input_source"`
	// Information included in the wire reversal for the receiving financial institution.
	ReceiverFinancialInstitutionInformation string `json:"receiver_financial_institution_information"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireTransfer - A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireTransfer struct {
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount                                  int64  `json:"amount"`
	BeneficiaryAddressLine1                 string `json:"beneficiary_address_line1"`
	BeneficiaryAddressLine2                 string `json:"beneficiary_address_line2"`
	BeneficiaryAddressLine3                 string `json:"beneficiary_address_line3"`
	BeneficiaryName                         string `json:"beneficiary_name"`
	BeneficiaryReference                    string `json:"beneficiary_reference"`
	Description                             string `json:"description"`
	InputMessageAccountabilityData          string `json:"input_message_accountability_data"`
	OriginatorAddressLine1                  string `json:"originator_address_line1"`
	OriginatorAddressLine2                  string `json:"originator_address_line2"`
	OriginatorAddressLine3                  string `json:"originator_address_line3"`
	OriginatorName                          string `json:"originator_name"`
	OriginatorToBeneficiaryInformation      string `json:"originator_to_beneficiary_information"`
	OriginatorToBeneficiaryInformationLine1 string `json:"originator_to_beneficiary_information_line1"`
	OriginatorToBeneficiaryInformationLine2 string `json:"originator_to_beneficiary_information_line2"`
	OriginatorToBeneficiaryInformationLine3 string `json:"originator_to_beneficiary_information_line3"`
	OriginatorToBeneficiaryInformationLine4 string `json:"originator_to_beneficiary_information_line4"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnumCad InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum = "CAD"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnumChf InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum = "CHF"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnumEur InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum = "EUR"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnumGbp InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum = "GBP"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnumJpy InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum = "JPY"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnumUsd InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum = "USD"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPayment - A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPayment struct {
	// The account on which the interest was accrued.
	AccruedOnAccountID string `json:"accrued_on_account_id"`
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.
	Currency InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPaymentCurrencyEnum `json:"currency"`
	// The end of the period for which this transaction paid interest.
	PeriodEnd time.Time `json:"period_end"`
	// The start of the period for which this transaction paid interest.
	PeriodStart time.Time `json:"period_start"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum - The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnumCad InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum = "CAD"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnumChf InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum = "CHF"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnumEur InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum = "EUR"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnumGbp InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum = "GBP"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnumJpy InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum = "JPY"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnumUsd InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum = "USD"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CAD":
		fallthrough
	case "CHF":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "JPY":
		fallthrough
	case "USD":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum: %s", s)
	}
}

type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnumBankMigration      InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum = "bank_migration"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnumCashback           InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum = "cashback"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnumEmpyrealAdjustment InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum = "empyreal_adjustment"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnumError              InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum = "error"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnumErrorCorrection    InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum = "error_correction"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnumFees               InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum = "fees"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnumInterest           InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum = "interest"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnumSampleFunds        InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum = "sample_funds"
	InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnumSampleFundsReturn  InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum = "sample_funds_return"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "bank_migration":
		fallthrough
	case "cashback":
		fallthrough
	case "empyreal_adjustment":
		fallthrough
	case "error":
		fallthrough
	case "error_correction":
		fallthrough
	case "fees":
		fallthrough
	case "interest":
		fallthrough
	case "sample_funds":
		fallthrough
	case "sample_funds_return":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSource - A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSource struct {
	// The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction currency.
	Currency InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceCurrencyEnum `json:"currency"`
	Reason   InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSourceReasonEnum   `json:"reason"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceSampleFunds - A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceSampleFunds struct {
	// Where the sample funds came from.
	Originator string `json:"originator"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentIntention - A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentIntention struct {
	AccountNumber string `json:"account_number"`
	// The transfer amount in USD cents.
	Amount             int64  `json:"amount"`
	MessageToRecipient string `json:"message_to_recipient"`
	RoutingNumber      string `json:"routing_number"`
	TransferID         string `json:"transfer_id"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentRejection - A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentRejection struct {
	TransferID string `json:"transfer_id"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireTransferIntention - A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireTransferIntention struct {
	// The destination account number.
	AccountNumber string `json:"account_number"`
	// The transfer amount in USD cents.
	Amount int64 `json:"amount"`
	// The message that will show on the recipient's bank statement.
	MessageToRecipient string `json:"message_to_recipient"`
	// The American Bankers' Association (ABA) Routing Transit Number (RTN).
	RoutingNumber string `json:"routing_number"`
	TransferID    string `json:"transfer_id"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireTransferRejection - A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireTransferRejection struct {
	TransferID string `json:"transfer_id"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource - This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.
type InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource struct {
	// A Account Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `account_transfer_intention`.
	AccountTransferIntention InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceAccountTransferIntention `json:"account_transfer_intention"`
	// A ACH Check Conversion object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion`.
	AchCheckConversion InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHCheckConversion `json:"ach_check_conversion"`
	// A ACH Check Conversion Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_check_conversion_return`.
	AchCheckConversionReturn InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHCheckConversionReturn `json:"ach_check_conversion_return"`
	// A ACH Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_intention`.
	AchTransferIntention InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferIntention `json:"ach_transfer_intention"`
	// A ACH Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_rejection`.
	AchTransferRejection InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferRejection `json:"ach_transfer_rejection"`
	// A ACH Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `ach_transfer_return`.
	AchTransferReturn InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceACHTransferReturn `json:"ach_transfer_return"`
	// A Card Dispute Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `card_dispute_acceptance`.
	CardDisputeAcceptance InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardDisputeAcceptance `json:"card_dispute_acceptance"`
	// A Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_refund`.
	CardRefund InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardRefund `json:"card_refund"`
	// A Deprecated Card Refund object. This field will be present in the JSON response if and only if `category` is equal to `card_route_refund`.
	CardRouteRefund InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardRefund `json:"card_route_refund"`
	// A Deprecated Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_route_settlement`.
	CardRouteSettlement InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDeprecatedCardSettlement `json:"card_route_settlement"`
	// A Card Settlement object. This field will be present in the JSON response if and only if `category` is equal to `card_settlement`.
	CardSettlement InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCardSettlement `json:"card_settlement"`
	// The type of transaction that took place. We may add additional possible values for this enum over time; your application should be able to handle such additions gracefully.
	Category InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCategoryEnum `json:"category"`
	// A Check Deposit Acceptance object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_acceptance`.
	CheckDepositAcceptance InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositAcceptance `json:"check_deposit_acceptance"`
	// A Check Deposit Return object. This field will be present in the JSON response if and only if `category` is equal to `check_deposit_return`.
	CheckDepositReturn InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckDepositReturn `json:"check_deposit_return"`
	// A Check Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_intention`.
	CheckTransferIntention InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferIntention `json:"check_transfer_intention"`
	// A Check Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_rejection`.
	CheckTransferRejection InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferRejection `json:"check_transfer_rejection"`
	// A Check Transfer Return object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_return`.
	CheckTransferReturn InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferReturn `json:"check_transfer_return"`
	// A Check Transfer Stop Payment Request object. This field will be present in the JSON response if and only if `category` is equal to `check_transfer_stop_payment_request`.
	CheckTransferStopPaymentRequest InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceCheckTransferStopPaymentRequest `json:"check_transfer_stop_payment_request"`
	// A Dispute Resolution object. This field will be present in the JSON response if and only if `category` is equal to `dispute_resolution`.
	DisputeResolution InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceDisputeResolution `json:"dispute_resolution"`
	// A Empyreal Cash Deposit object. This field will be present in the JSON response if and only if `category` is equal to `empyreal_cash_deposit`.
	EmpyrealCashDeposit InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceEmpyrealCashDeposit `json:"empyreal_cash_deposit"`
	// A Inbound ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_ach_transfer`.
	InboundAchTransfer InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundACHTransfer `json:"inbound_ach_transfer"`
	// A Inbound Check object. This field will be present in the JSON response if and only if `category` is equal to `inbound_check`.
	InboundCheck InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundCheck `json:"inbound_check"`
	// A Inbound International ACH Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_international_ach_transfer`.
	InboundInternationalAchTransfer InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundInternationalACHTransfer `json:"inbound_international_ach_transfer"`
	// A Inbound Real Time Payments Transfer Confirmation object. This field will be present in the JSON response if and only if `category` is equal to `inbound_real_time_payments_transfer_confirmation`.
	InboundRealTimePaymentsTransferConfirmation InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundRealTimePaymentsTransferConfirmation `json:"inbound_real_time_payments_transfer_confirmation"`
	// A Inbound Wire Drawdown Payment object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment`.
	InboundWireDrawdownPayment InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPayment `json:"inbound_wire_drawdown_payment"`
	// A Inbound Wire Drawdown Payment Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_drawdown_payment_reversal`.
	InboundWireDrawdownPaymentReversal InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireDrawdownPaymentReversal `json:"inbound_wire_drawdown_payment_reversal"`
	// A Inbound Wire Reversal object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_reversal`.
	InboundWireReversal InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireReversal `json:"inbound_wire_reversal"`
	// A Inbound Wire Transfer object. This field will be present in the JSON response if and only if `category` is equal to `inbound_wire_transfer`.
	InboundWireTransfer InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInboundWireTransfer `json:"inbound_wire_transfer"`
	// A Interest Payment object. This field will be present in the JSON response if and only if `category` is equal to `interest_payment`.
	InterestPayment InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInterestPayment `json:"interest_payment"`
	// A Internal Source object. This field will be present in the JSON response if and only if `category` is equal to `internal_source`.
	InternalSource InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceInternalSource `json:"internal_source"`
	// A Sample Funds object. This field will be present in the JSON response if and only if `category` is equal to `sample_funds`.
	SampleFunds InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceSampleFunds `json:"sample_funds"`
	// A Wire Drawdown Payment Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_intention`.
	WireDrawdownPaymentIntention InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentIntention `json:"wire_drawdown_payment_intention"`
	// A Wire Drawdown Payment Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_drawdown_payment_rejection`.
	WireDrawdownPaymentRejection InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireDrawdownPaymentRejection `json:"wire_drawdown_payment_rejection"`
	// A Wire Transfer Intention object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_intention`.
	WireTransferIntention InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireTransferIntention `json:"wire_transfer_intention"`
	// A Wire Transfer Rejection object. This field will be present in the JSON response if and only if `category` is equal to `wire_transfer_rejection`.
	WireTransferRejection InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSourceWireTransferRejection `json:"wire_transfer_rejection"`
}

// InboundRealTimePaymentsTransferSimulationResultTransactionTypeEnum - A constant representing the object's type. For this resource it will always be `transaction`.
type InboundRealTimePaymentsTransferSimulationResultTransactionTypeEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTransactionTypeEnumTransaction InboundRealTimePaymentsTransferSimulationResultTransactionTypeEnum = "transaction"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTransactionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "transaction":
		*e = InboundRealTimePaymentsTransferSimulationResultTransactionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTransactionTypeEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResultTransaction - If the Real Time Payments Transfer attempt succeeds, this will contain the resulting [Transaction](#transactions) object. The Transaction's `source` will be of `category: inbound_real_time_payments_transfer_confirmation`.
type InboundRealTimePaymentsTransferSimulationResultTransaction struct {
	// The identifier for the Account the Transaction belongs to.
	AccountID string `json:"account_id"`
	// The Transaction amount in the minor unit of its currency. For dollars, for example, this is cents.
	Amount int64 `json:"amount"`
	// The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date on which the Transaction occured.
	CreatedAt time.Time `json:"created_at"`
	// The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the Transaction's currency. This will match the currency on the Transcation's Account.
	Currency InboundRealTimePaymentsTransferSimulationResultTransactionCurrencyEnum `json:"currency"`
	// For a Transaction related to a transfer, this is the description you provide. For a Transaction related to a payment, this is the description the vendor provides.
	Description string `json:"description"`
	// The Transaction identifier.
	ID string `json:"id"`
	// The identifier for the route this Transaction came through. Routes are things like cards and ACH details.
	RouteID string `json:"route_id"`
	// The type of the route this Transaction came through.
	RouteType string `json:"route_type"`
	// This is an object giving more details on the network-level event that caused the Transaction. Note that for backwards compatibility reasons, additional undocumented keys may appear in this object. These should be treated as deprecated and will be removed in the future.
	Source InboundRealTimePaymentsTransferSimulationResultTransactionTransactionSource `json:"source"`
	// A constant representing the object's type. For this resource it will always be `transaction`.
	Type InboundRealTimePaymentsTransferSimulationResultTransactionTypeEnum `json:"type"`
}

// InboundRealTimePaymentsTransferSimulationResultTypeEnum - A constant representing the object's type. For this resource it will always be `inbound_real_time_payments_transfer_simulation_result`.
type InboundRealTimePaymentsTransferSimulationResultTypeEnum string

const (
	InboundRealTimePaymentsTransferSimulationResultTypeEnumInboundRealTimePaymentsTransferSimulationResult InboundRealTimePaymentsTransferSimulationResultTypeEnum = "inbound_real_time_payments_transfer_simulation_result"
)

func (e *InboundRealTimePaymentsTransferSimulationResultTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "inbound_real_time_payments_transfer_simulation_result":
		*e = InboundRealTimePaymentsTransferSimulationResultTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InboundRealTimePaymentsTransferSimulationResultTypeEnum: %s", s)
	}
}

// InboundRealTimePaymentsTransferSimulationResult - The results of an inbound Real Time Payments Transfer simulation.
type InboundRealTimePaymentsTransferSimulationResult struct {
	// If the Real Time Payments Transfer attempt fails, this will contain the resulting [Declined Transaction](#declined-transactions) object. The Declined Transaction's `source` will be of `category: inbound_real_time_payments_transfer_decline`.
	DeclinedTransaction InboundRealTimePaymentsTransferSimulationResultDeclinedTransaction `json:"declined_transaction"`
	// If the Real Time Payments Transfer attempt succeeds, this will contain the resulting [Transaction](#transactions) object. The Transaction's `source` will be of `category: inbound_real_time_payments_transfer_confirmation`.
	Transaction InboundRealTimePaymentsTransferSimulationResultTransaction `json:"transaction"`
	// A constant representing the object's type. For this resource it will always be `inbound_real_time_payments_transfer_simulation_result`.
	Type InboundRealTimePaymentsTransferSimulationResultTypeEnum `json:"type"`
}
