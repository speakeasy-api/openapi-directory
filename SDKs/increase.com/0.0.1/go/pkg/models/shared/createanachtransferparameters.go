// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// CreateAnAchTransferParametersFundingEnum - The type of the account to which the transfer will be sent.
type CreateAnAchTransferParametersFundingEnum string

const (
	CreateAnAchTransferParametersFundingEnumChecking CreateAnAchTransferParametersFundingEnum = "checking"
	CreateAnAchTransferParametersFundingEnumSavings  CreateAnAchTransferParametersFundingEnum = "savings"
)

func (e CreateAnAchTransferParametersFundingEnum) ToPointer() *CreateAnAchTransferParametersFundingEnum {
	return &e
}

func (e *CreateAnAchTransferParametersFundingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "checking":
		fallthrough
	case "savings":
		*e = CreateAnAchTransferParametersFundingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAchTransferParametersFundingEnum: %v", v)
	}
}

// CreateAnAchTransferParametersStandardEntryClassCodeEnum - The Standard Entry Class (SEC) code to use for the transfer.
type CreateAnAchTransferParametersStandardEntryClassCodeEnum string

const (
	CreateAnAchTransferParametersStandardEntryClassCodeEnumCorporateCreditOrDebit        CreateAnAchTransferParametersStandardEntryClassCodeEnum = "corporate_credit_or_debit"
	CreateAnAchTransferParametersStandardEntryClassCodeEnumPrearrangedPaymentsAndDeposit CreateAnAchTransferParametersStandardEntryClassCodeEnum = "prearranged_payments_and_deposit"
	CreateAnAchTransferParametersStandardEntryClassCodeEnumInternetInitiated             CreateAnAchTransferParametersStandardEntryClassCodeEnum = "internet_initiated"
)

func (e CreateAnAchTransferParametersStandardEntryClassCodeEnum) ToPointer() *CreateAnAchTransferParametersStandardEntryClassCodeEnum {
	return &e
}

func (e *CreateAnAchTransferParametersStandardEntryClassCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "corporate_credit_or_debit":
		fallthrough
	case "prearranged_payments_and_deposit":
		fallthrough
	case "internet_initiated":
		*e = CreateAnAchTransferParametersStandardEntryClassCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAnAchTransferParametersStandardEntryClassCodeEnum: %v", v)
	}
}

type CreateAnAchTransferParameters struct {
	// The Increase identifier for the account that will send the transfer.
	AccountID string `json:"account_id"`
	// The account number for the destination account.
	AccountNumber *string `json:"account_number,omitempty"`
	// Additional information that will be sent to the recipient. This is included in the transfer data sent to the receiving bank.
	Addendum *string `json:"addendum,omitempty"`
	// The transfer amount in cents. A positive amount originates a credit transfer pushing funds to the receiving account. A negative amount originates a debit transfer pulling funds from the receiving account.
	Amount int64 `json:"amount"`
	// The description of the date of the transfer, usually in the format `YYMMDD`. This is included in the transfer data sent to the receiving bank.
	CompanyDescriptiveDate *string `json:"company_descriptive_date,omitempty"`
	// The data you choose to associate with the transfer. This is included in the transfer data sent to the receiving bank.
	CompanyDiscretionaryData *string `json:"company_discretionary_data,omitempty"`
	// A description of the transfer. This is included in the transfer data sent to the receiving bank.
	CompanyEntryDescription *string `json:"company_entry_description,omitempty"`
	// The name by which the recipient knows you. This is included in the transfer data sent to the receiving bank.
	CompanyName *string `json:"company_name,omitempty"`
	// The transfer effective date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
	EffectiveDate *types.Date `json:"effective_date,omitempty"`
	// The ID of an External Account to initiate a transfer to. If this parameter is provided, `account_number`, `routing_number`, and `funding` must be absent.
	ExternalAccountID *string `json:"external_account_id,omitempty"`
	// The type of the account to which the transfer will be sent.
	Funding *CreateAnAchTransferParametersFundingEnum `json:"funding,omitempty"`
	// Your identifer for the transfer recipient.
	IndividualID *string `json:"individual_id,omitempty"`
	// The name of the transfer recipient. This value is informational and not verified by the recipient's bank.
	IndividualName *string `json:"individual_name,omitempty"`
	// Whether the transfer requires explicit approval via the dashboard or API.
	RequireApproval *bool `json:"require_approval,omitempty"`
	// The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account.
	RoutingNumber *string `json:"routing_number,omitempty"`
	// The Standard Entry Class (SEC) code to use for the transfer.
	StandardEntryClassCode *CreateAnAchTransferParametersStandardEntryClassCodeEnum `json:"standard_entry_class_code,omitempty"`
	// A description you choose to give the transfer. This will be saved with the transfer details, displayed in the dashboard, and returned by the API. If `individual_name` and `company_name` are not explicitly set by this API, the `statement_descriptor` will be sent in those fields to the receiving bank to help the customer recognize the transfer. You are highly encouraged to pass `individual_name` and `company_name` instead of relying on this fallback.
	StatementDescriptor string `json:"statement_descriptor"`
}
