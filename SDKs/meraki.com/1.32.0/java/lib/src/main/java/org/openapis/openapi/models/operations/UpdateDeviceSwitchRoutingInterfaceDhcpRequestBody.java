/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateDeviceSwitchRoutingInterfaceDhcpRequestBody {
    /**
     * The PXE boot server filename for the DHCP server running on the switch interface
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bootFileName")
    public String bootFileName;

    public UpdateDeviceSwitchRoutingInterfaceDhcpRequestBody withBootFileName(String bootFileName) {
        this.bootFileName = bootFileName;
        return this;
    }
    
    /**
     * The PXE boot server IP for the DHCP server running on the switch interface
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bootNextServer")
    public String bootNextServer;

    public UpdateDeviceSwitchRoutingInterfaceDhcpRequestBody withBootNextServer(String bootNextServer) {
        this.bootNextServer = bootNextServer;
        return this;
    }
    
    /**
     * Enable DHCP boot options to provide PXE boot options configs for the dhcp server running on the switch interface
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bootOptionsEnabled")
    public Boolean bootOptionsEnabled;

    public UpdateDeviceSwitchRoutingInterfaceDhcpRequestBody withBootOptionsEnabled(Boolean bootOptionsEnabled) {
        this.bootOptionsEnabled = bootOptionsEnabled;
        return this;
    }
    
    /**
     * The DHCP lease time config for the dhcp server running on switch interface ('30 minutes', '1 hour', '4 hours', '12 hours', '1 day' or '1 week')
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dhcpLeaseTime")
    public UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDhcpLeaseTimeEnum dhcpLeaseTime;

    public UpdateDeviceSwitchRoutingInterfaceDhcpRequestBody withDhcpLeaseTime(UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDhcpLeaseTimeEnum dhcpLeaseTime) {
        this.dhcpLeaseTime = dhcpLeaseTime;
        return this;
    }
    
    /**
     * The DHCP mode options for the switch interface ('dhcpDisabled', 'dhcpRelay' or 'dhcpServer')
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dhcpMode")
    public UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDhcpModeEnum dhcpMode;

    public UpdateDeviceSwitchRoutingInterfaceDhcpRequestBody withDhcpMode(UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDhcpModeEnum dhcpMode) {
        this.dhcpMode = dhcpMode;
        return this;
    }
    
    /**
     * Array of DHCP options consisting of code, type and value for the DHCP server running on the switch interface
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dhcpOptions")
    public UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDhcpOptions[] dhcpOptions;

    public UpdateDeviceSwitchRoutingInterfaceDhcpRequestBody withDhcpOptions(UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDhcpOptions[] dhcpOptions) {
        this.dhcpOptions = dhcpOptions;
        return this;
    }
    
    /**
     * The DHCP relay server IPs to which DHCP packets would get relayed for the switch interface
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dhcpRelayServerIps")
    public String[] dhcpRelayServerIps;

    public UpdateDeviceSwitchRoutingInterfaceDhcpRequestBody withDhcpRelayServerIps(String[] dhcpRelayServerIps) {
        this.dhcpRelayServerIps = dhcpRelayServerIps;
        return this;
    }
    
    /**
     * The DHCP name server IPs when DHCP name server option is 'custom'
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dnsCustomNameservers")
    public String[] dnsCustomNameservers;

    public UpdateDeviceSwitchRoutingInterfaceDhcpRequestBody withDnsCustomNameservers(String[] dnsCustomNameservers) {
        this.dnsCustomNameservers = dnsCustomNameservers;
        return this;
    }
    
    /**
     * The DHCP name server option for the dhcp server running on the switch interface ('googlePublicDns', 'openDns' or 'custom')
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dnsNameserversOption")
    public UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDnsNameserversOptionEnum dnsNameserversOption;

    public UpdateDeviceSwitchRoutingInterfaceDhcpRequestBody withDnsNameserversOption(UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyDnsNameserversOptionEnum dnsNameserversOption) {
        this.dnsNameserversOption = dnsNameserversOption;
        return this;
    }
    
    /**
     * Array of DHCP fixed IP assignments for the DHCP server running on the switch interface
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fixedIpAssignments")
    public UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyFixedIpAssignments[] fixedIpAssignments;

    public UpdateDeviceSwitchRoutingInterfaceDhcpRequestBody withFixedIpAssignments(UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyFixedIpAssignments[] fixedIpAssignments) {
        this.fixedIpAssignments = fixedIpAssignments;
        return this;
    }
    
    /**
     * Array of DHCP reserved IP assignments for the DHCP server running on the switch interface
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reservedIpRanges")
    public UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyReservedIpRanges[] reservedIpRanges;

    public UpdateDeviceSwitchRoutingInterfaceDhcpRequestBody withReservedIpRanges(UpdateDeviceSwitchRoutingInterfaceDhcpRequestBodyReservedIpRanges[] reservedIpRanges) {
        this.reservedIpRanges = reservedIpRanges;
        return this;
    }
    
    public UpdateDeviceSwitchRoutingInterfaceDhcpRequestBody(){}
}
