// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetNamespacesRepositoriesImagesPathParams struct {
	// Namespace of the repository.
	Namespace string `pathParam:"style=simple,explode=false,name=namespace"`
	// Name of the repository.
	Repository string `pathParam:"style=simple,explode=false,name=repository"`
}

// GetNamespacesRepositoriesImagesOrderingEnum - Orders the results by this property.
//
// Prefixing with `-` sorts by descending order.
type GetNamespacesRepositoriesImagesOrderingEnum string

const (
	GetNamespacesRepositoriesImagesOrderingEnumLastActivity      GetNamespacesRepositoriesImagesOrderingEnum = "last_activity"
	GetNamespacesRepositoriesImagesOrderingEnumMinusLastActivity GetNamespacesRepositoriesImagesOrderingEnum = "-last_activity"
	GetNamespacesRepositoriesImagesOrderingEnumDigest            GetNamespacesRepositoriesImagesOrderingEnum = "digest"
	GetNamespacesRepositoriesImagesOrderingEnumMinusDigest       GetNamespacesRepositoriesImagesOrderingEnum = "-digest"
)

func (e *GetNamespacesRepositoriesImagesOrderingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "last_activity":
		fallthrough
	case "-last_activity":
		fallthrough
	case "digest":
		fallthrough
	case "-digest":
		*e = GetNamespacesRepositoriesImagesOrderingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNamespacesRepositoriesImagesOrderingEnum: %s", s)
	}
}

// GetNamespacesRepositoriesImagesStatusEnum - Filters to only show images of this status.
type GetNamespacesRepositoriesImagesStatusEnum string

const (
	GetNamespacesRepositoriesImagesStatusEnumActive   GetNamespacesRepositoriesImagesStatusEnum = "active"
	GetNamespacesRepositoriesImagesStatusEnumInactive GetNamespacesRepositoriesImagesStatusEnum = "inactive"
)

func (e *GetNamespacesRepositoriesImagesStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		*e = GetNamespacesRepositoriesImagesStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetNamespacesRepositoriesImagesStatusEnum: %s", s)
	}
}

type GetNamespacesRepositoriesImagesQueryParams struct {
	// Sets the time from which an image must have been pushed or pulled to
	// be counted as active.
	//
	// Defaults to 1 month before the current time.
	//
	ActiveFrom *string `queryParam:"style=form,explode=true,name=active_from"`
	// Filters to only show images with:
	// - `true`: at least 1 current tag.
	// - `false`: no current tags.
	//
	CurrentlyTagged *bool `queryParam:"style=form,explode=true,name=currently_tagged"`
	// Orders the results by this property.
	//
	// Prefixing with `-` sorts by descending order.
	//
	Ordering *GetNamespacesRepositoriesImagesOrderingEnum `queryParam:"style=form,explode=true,name=ordering"`
	// Page number to get. Defaults to 1.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Number of images to get per page. Defaults to 10. Max of 100.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// Filters to only show images of this status.
	Status *GetNamespacesRepositoriesImagesStatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type GetNamespacesRepositoriesImagesRequest struct {
	PathParams  GetNamespacesRepositoriesImagesPathParams
	QueryParams GetNamespacesRepositoriesImagesQueryParams
}

type GetNamespacesRepositoriesImagesResponse struct {
	ContentType string
	// Unauthorized - user does not have read access to the namespace.
	ErrorResponse *shared.ErrorResponse
	// Success
	GetNamespaceRepositoryImagesResponse *shared.GetNamespaceRepositoryImagesResponse
	StatusCode                           int
	RawResponse                          *http.Response
}
