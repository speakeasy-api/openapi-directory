/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Logo } from "./logo";
import { Translation } from "./translation";
import { Expose, Transform, Type } from "class-transformer";

export class Category extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "listing_description_text_template" })
  listingDescriptionTextTemplate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "listing_features_text_template" })
  listingFeaturesTextTemplate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "listing_pricing_text_template" })
  listingPricingTextTemplate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "logo" })
  @Type(() => Logo)
  logo?: Logo;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug: string;

  @SpeakeasyMetadata({ elemType: Translation })
  @Expose({ name: "translations" })
  @Type(() => Translation)
  translations?: Translation[];

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}
