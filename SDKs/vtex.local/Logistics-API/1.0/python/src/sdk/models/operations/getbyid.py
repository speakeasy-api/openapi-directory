"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetByIDRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand"""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Type of the content being sent"""  
    pickup_point_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'pickupPointId', 'style': 'simple', 'explode': False }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetByIDGetByIDAddress4Country:
    
    acronym: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acronym') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetByIDGetByIDAddress4Location5:
    
    latitude: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('latitude') }})  
    longitude: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('longitude') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetByIDGetByIDAddress4:
    
    city: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('city') }})  
    complement: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('complement') }})  
    country: GetByIDGetByIDAddress4Country = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country') }})  
    location: GetByIDGetByIDAddress4Location5 = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location') }})  
    neighborhood: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('neighborhood') }})  
    number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number') }})  
    postal_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postalCode') }})  
    state: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state') }})  
    street: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('street') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetByIDGetByIDBusinessHour:
    
    closing_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('closingTime') }})  
    day_of_week: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dayOfWeek') }})  
    opening_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('openingTime') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetByIDGetByID:
    
    address: GetByIDGetByIDAddress4 = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address') }})  
    business_hours: list[GetByIDGetByIDBusinessHour] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('businessHours') }})  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})  
    formatted_address: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('formatted_address') }})  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    instructions: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instructions') }})  
    is_active: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isActive') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    warehouse_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('warehouseId') }})  
    

@dataclasses.dataclass
class GetByIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_by_id: Optional[GetByIDGetByID] = dataclasses.field(default=None)  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    