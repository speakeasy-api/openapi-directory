// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LambdaInputPayloadEncodingTypeEnum string

const (
	LambdaInputPayloadEncodingTypeEnumJSON   LambdaInputPayloadEncodingTypeEnum = "json"
	LambdaInputPayloadEncodingTypeEnumBinary LambdaInputPayloadEncodingTypeEnum = "binary"
)

func (e LambdaInputPayloadEncodingTypeEnum) ToPointer() *LambdaInputPayloadEncodingTypeEnum {
	return &e
}

func (e *LambdaInputPayloadEncodingTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "binary":
		*e = LambdaInputPayloadEncodingTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LambdaInputPayloadEncodingTypeEnum: %v", v)
	}
}
