/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * QueryRequest - Request payload sent by a physical web client. This request includes all necessary context to load a particular user experience record.
 */
public class QueryRequest {
    /**
     * The effective connection type is a query dimension that specifies the effective network class that the record's data should belong to. This field uses the values ["offline", "slow-2G", "2G", "3G", "4G"] as specified in: https://wicg.github.io/netinfo/#effective-connection-types Note: If no effective connection type is specified, then a special record with aggregated data over all effective connection types will be returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effectiveConnectionType")
    public String effectiveConnectionType;
    public QueryRequest withEffectiveConnectionType(String effectiveConnectionType) {
        this.effectiveConnectionType = effectiveConnectionType;
        return this;
    }
    
    /**
     * The form factor is a query dimension that specifies the device class that the record's data should belong to. Note: If no form factor is specified, then a special record with aggregated data over all form factors will be returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("formFactor")
    public QueryRequestFormFactorEnum formFactor;
    public QueryRequest withFormFactor(QueryRequestFormFactorEnum formFactor) {
        this.formFactor = formFactor;
        return this;
    }
    
    /**
     * The metrics that should be included in the response. If none are specified then any metrics found will be returned. Allowed values: ["first_contentful_paint", "first_input_delay", "largest_contentful_paint", "cumulative_layout_shift", "experimental_time_to_first_byte", "experimental_interaction_to_next_paint"]
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metrics")
    public String[] metrics;
    public QueryRequest withMetrics(String[] metrics) {
        this.metrics = metrics;
        return this;
    }
    
    /**
     * The url pattern "origin" refers to a url pattern that is the origin of a website. Examples: "https://example.com", "https://cloud.google.com"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("origin")
    public String origin;
    public QueryRequest withOrigin(String origin) {
        this.origin = origin;
        return this;
    }
    
    /**
     * The url pattern "url" refers to a url pattern that is any arbitrary url. Examples: "https://example.com/", "https://cloud.google.com/why-google-cloud/"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public QueryRequest withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
