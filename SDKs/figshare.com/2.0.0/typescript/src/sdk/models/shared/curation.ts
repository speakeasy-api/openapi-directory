/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The status of the review.
 */
export enum CurationStatusEnum {
  Pending = "pending",
  Approved = "approved",
  Rejected = "rejected",
  Closed = "closed",
}

/**
 * OK. A list of curation reviews.
 */
export class Curation extends SpeakeasyBase {
  /**
   * The ID of the account of the owner of the article of this review.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_id" })
  accountId: number;

  /**
   * The ID of the article of this review.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "article_id" })
  articleId: number;

  /**
   * The ID of the account to which this review is assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assigned_to" })
  assignedTo: number;

  /**
   * The number of comments in the review.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comments_count" })
  commentsCount: number;

  /**
   * The creation date of the review.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_date" })
  createdDate: string;

  /**
   * The group in which the article is present.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group_id" })
  groupId: number;

  /**
   * The review id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * The date the review has been modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modified_date" })
  modifiedDate: string;

  /**
   * The last time a comment has been added to the review.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "review_date" })
  reviewDate: string;

  /**
   * The status of the review.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: CurationStatusEnum;

  /**
   * The Version number of the article in review.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version: number;
}
