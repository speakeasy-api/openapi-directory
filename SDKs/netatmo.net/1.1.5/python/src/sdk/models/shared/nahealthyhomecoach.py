"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import nadashboarddata as shared_nadashboarddata
from ..shared import naplace as shared_naplace
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NAHealthyHomeCoach:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('_id'), 'exclude': lambda f: f is None }})  
    cipher_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cipher_id'), 'exclude': lambda f: f is None }})  
    co2_calibrating: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('co2_calibrating'), 'exclude': lambda f: f is None }})  
    dashboard_data: Optional[shared_nadashboarddata.NADashboardData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dashboard_data'), 'exclude': lambda f: f is None }})  
    data_type: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data_type'), 'exclude': lambda f: f is None }})  
    date_setup: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_setup'), 'exclude': lambda f: f is None }})  
    firmware: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firmware'), 'exclude': lambda f: f is None }})  
    last_setup: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_setup'), 'exclude': lambda f: f is None }})  
    last_status_store: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_status_store'), 'exclude': lambda f: f is None }})  
    last_upgrade: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_upgrade'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    place: Optional[shared_naplace.NAPlace] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('place'), 'exclude': lambda f: f is None }})  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Included in every device or module. It defines the type of the device/module. Its values are among :
    NHC: Healthy Home Coach
    """  
    wifi_status: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('wifi_status'), 'exclude': lambda f: f is None }})
    r"""It contains the current wifi status. The different thresholds to take into account are
    RSSI_THRESHOLD_0 = 86 bad signal
    RSSI_THRESHOLD_1 = 71 middle quality signal
    RSSI_THRESHOLD_2 = 56 good signal
    """  
    