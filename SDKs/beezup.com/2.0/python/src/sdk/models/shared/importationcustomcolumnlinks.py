"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import links_catalog_deletecustomcolumnlink as shared_links_catalog_deletecustomcolumnlink
from ..shared import links_catalog_getcustomcolumnexpressionlink as shared_links_catalog_getcustomcolumnexpressionlink
from ..shared import links_importation_getproductsamplecustomcolumnvaluelink as shared_links_importation_getproductsamplecustomcolumnvaluelink
from ..shared import links_importation_mapcustomcolumnlink as shared_links_importation_mapcustomcolumnlink
from ..shared import links_importation_savecustomcolumnlink as shared_links_importation_savecustomcolumnlink
from ..shared import links_importation_unmapcustomcolumnlink as shared_links_importation_unmapcustomcolumnlink
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImportationCustomColumnLinks:
    
    delete: shared_links_catalog_deletecustomcolumnlink.LinksCatalogDeleteCustomColumnLink = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('delete') }})  
    expression: shared_links_catalog_getcustomcolumnexpressionlink.LinksCatalogGetCustomColumnExpressionLink = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expression') }})  
    save: shared_links_importation_savecustomcolumnlink.LinksImportationSaveCustomColumnLink = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('save') }})  
    map: Optional[shared_links_importation_mapcustomcolumnlink.LinksImportationMapCustomColumnLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('map'), 'exclude': lambda f: f is None }})  
    product_sample_value: Optional[shared_links_importation_getproductsamplecustomcolumnvaluelink.LinksImportationGetProductSampleCustomColumnValueLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productSampleValue'), 'exclude': lambda f: f is None }})  
    unmap: Optional[shared_links_importation_unmapcustomcolumnlink.LinksImportationUnmapCustomColumnLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unmap'), 'exclude': lambda f: f is None }})  
    