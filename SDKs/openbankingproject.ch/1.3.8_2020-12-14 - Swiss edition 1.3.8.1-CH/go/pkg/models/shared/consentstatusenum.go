// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ConsentStatusEnum - This is the overall lifecycle status of the consent.
//
// Valid values are:
//   - 'received': The consent data have been received and are technically correct.
//     The data is not authorised yet.
//   - 'rejected': The consent data have been rejected e.g. since no successful authorisation has taken place.
//   - 'valid': The consent is accepted and valid for GET account data calls and others as specified in the consent object.
//   - 'revokedByPsu': The consent has been revoked by the PSU towards the ASPSP.
//   - 'expired': The consent expired.
//   - 'terminatedByTpp': The corresponding TPP has terminated the consent by applying the DELETE method to the consent resource.
//   - 'partiallyAuthorised': The consent is due to a multi-level authorisation, some but not all mandated authorisations have been performed yet.
//
// The ASPSP might add further codes. These codes then shall be contained in the ASPSP's documentation of the XS2A interface
// and has to be added to this API definition as well.
type ConsentStatusEnum string

const (
	ConsentStatusEnumReceived            ConsentStatusEnum = "received"
	ConsentStatusEnumRejected            ConsentStatusEnum = "rejected"
	ConsentStatusEnumValid               ConsentStatusEnum = "valid"
	ConsentStatusEnumRevokedByPsu        ConsentStatusEnum = "revokedByPsu"
	ConsentStatusEnumExpired             ConsentStatusEnum = "expired"
	ConsentStatusEnumTerminatedByTpp     ConsentStatusEnum = "terminatedByTpp"
	ConsentStatusEnumPartiallyAuthorised ConsentStatusEnum = "partiallyAuthorised"
)

func (e ConsentStatusEnum) ToPointer() *ConsentStatusEnum {
	return &e
}

func (e *ConsentStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "received":
		fallthrough
	case "rejected":
		fallthrough
	case "valid":
		fallthrough
	case "revokedByPsu":
		fallthrough
	case "expired":
		fallthrough
	case "terminatedByTpp":
		fallthrough
	case "partiallyAuthorised":
		*e = ConsentStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConsentStatusEnum: %v", v)
	}
}
