/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ActivityObjectAttachments {
    /**
     * If the attachment is an article, this property contains a snippet of text from the article. It can also include descriptions for other types.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content")
    public String content;

    public ActivityObjectAttachments withContent(String content) {
        this.content = content;
        return this;
    }
    
    /**
     * The title of the attachment, such as a photo caption or an article title.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public ActivityObjectAttachments withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * If the attachment is a video, the embeddable link.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("embed")
    public ActivityObjectAttachmentsEmbed embed;

    public ActivityObjectAttachments withEmbed(ActivityObjectAttachmentsEmbed embed) {
        this.embed = embed;
        return this;
    }
    
    /**
     * The full image URL for photo attachments.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullImage")
    public ActivityObjectAttachmentsFullImage fullImage;

    public ActivityObjectAttachments withFullImage(ActivityObjectAttachmentsFullImage fullImage) {
        this.fullImage = fullImage;
        return this;
    }
    
    /**
     * The ID of the attachment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public ActivityObjectAttachments withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The preview image for photos or videos.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image")
    public ActivityObjectAttachmentsImage image;

    public ActivityObjectAttachments withImage(ActivityObjectAttachmentsImage image) {
        this.image = image;
        return this;
    }
    
    /**
     * The type of media object. Possible values include, but are not limited to, the following values:  
     * - "photo" - A photo. 
     * - "album" - A photo album. 
     * - "video" - A video. 
     * - "article" - An article, specified by a link.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("objectType")
    public String objectType;

    public ActivityObjectAttachments withObjectType(String objectType) {
        this.objectType = objectType;
        return this;
    }
    
    /**
     * If the attachment is an album, this property is a list of potential additional thumbnails from the album.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumbnails")
    public ActivityObjectAttachmentsThumbnails[] thumbnails;

    public ActivityObjectAttachments withThumbnails(ActivityObjectAttachmentsThumbnails[] thumbnails) {
        this.thumbnails = thumbnails;
        return this;
    }
    
    /**
     * The link to the attachment, which should be of type text/html.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public ActivityObjectAttachments withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public ActivityObjectAttachments(){}
}
