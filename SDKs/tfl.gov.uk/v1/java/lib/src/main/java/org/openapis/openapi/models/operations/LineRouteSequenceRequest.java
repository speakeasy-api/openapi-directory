/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class LineRouteSequenceRequest {
    /**
     * The direction of travel. Can be inbound or outbound.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=direction")
    public LineRouteSequenceDirectionEnum direction;

    public LineRouteSequenceRequest withDirection(LineRouteSequenceDirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * That excludes crowding from line disruptions. Can be true or false.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=excludeCrowding")
    public Boolean excludeCrowding;

    public LineRouteSequenceRequest withExcludeCrowding(Boolean excludeCrowding) {
        this.excludeCrowding = excludeCrowding;
        return this;
    }
    
    /**
     * A single line id e.g. victoria
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=id")
    public String id;

    public LineRouteSequenceRequest withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * A comma seperated list of service types to filter on. Supported values: Regular, Night. Defaulted to 'Regular' if not specified
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=serviceTypes")
    public LineRouteSequenceServiceTypesEnum[] serviceTypes;

    public LineRouteSequenceRequest withServiceTypes(LineRouteSequenceServiceTypesEnum[] serviceTypes) {
        this.serviceTypes = serviceTypes;
        return this;
    }
    
    public LineRouteSequenceRequest(@JsonProperty("direction") LineRouteSequenceDirectionEnum direction, @JsonProperty("id") String id) {
        this.direction = direction;
        this.id = id;
  }
}
