<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class ListTimelineEventsRequestBody
{
    /**
     * <p>Filters the timeline events based on the provided conditional values. You can filter timeline events with the following keys:</p> <ul> <li> <p> <code>eventTime</code> </p> </li> <li> <p> <code>eventType</code> </p> </li> </ul> <p>Note the following when deciding how to use Filters:</p> <ul> <li> <p>If you don't specify a Filter, the response includes all timeline events.</p> </li> <li> <p>If you specify more than one filter in a single request, the response returns timeline events that match all filters.</p> </li> <li> <p>If you specify a filter with more than one value, the response returns timeline events that match any of the values provided.</p> </li> </ul>
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Filter> $filters
     */
	#[\JMS\Serializer\Annotation\SerializedName('filters')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Filter>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $filters = null;
    
    /**
     * The Amazon Resource Name (ARN) of the incident that includes the timeline event.
     * 
     * @var string $incidentRecordArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('incidentRecordArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $incidentRecordArn;
    
    /**
     * The maximum number of results per page.
     * 
     * @var ?int $maxResults
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxResults')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxResults = null;
    
    /**
     * The pagination token to continue to the next page of results.
     * 
     * @var ?string $nextToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('nextToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nextToken = null;
    
    /**
     * Sort timeline events by the specified key value pair.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ListTimelineEventsRequestBodySortByEnum $sortBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('sortBy')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\ListTimelineEventsRequestBodySortByEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ListTimelineEventsRequestBodySortByEnum $sortBy = null;
    
    /**
     * Sorts the order of timeline events by the value specified in the <code>sortBy</code> field.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ListTimelineEventsRequestBodySortOrderEnum $sortOrder
     */
	#[\JMS\Serializer\Annotation\SerializedName('sortOrder')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\ListTimelineEventsRequestBodySortOrderEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ListTimelineEventsRequestBodySortOrderEnum $sortOrder = null;
    
	public function __construct()
	{
		$this->filters = null;
		$this->incidentRecordArn = "";
		$this->maxResults = null;
		$this->nextToken = null;
		$this->sortBy = null;
		$this->sortOrder = null;
	}
}
