<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class CreateMediaProcessorCreateMediaProcessorRequest
{
    /**
     * The [Media Extension](/docs/live/api/media-extensions-overview) name or URL. Ex: `video-composer-v2`
     * 
     * @var string $extension
     */
	#[SpeakeasyMetadata('form:name=Extension')]
    public string $extension;
    
    /**
     * The context of the Media Extension, represented as a JSON dictionary. See the documentation for the specific [Media Extension](/docs/live/api/media-extensions-overview) you are using for more information about the context to send.
     * 
     * @var string $extensionContext
     */
	#[SpeakeasyMetadata('form:name=ExtensionContext')]
    public string $extensionContext;
    
    /**
     * User-defined environment variables for the Media Extension, represented as a JSON dictionary of key/value strings. See the documentation for the specific [Media Extension](/docs/live/api/media-extensions-overview) you are using for more information about whether you need to provide this.
     * 
     * @var mixed $extensionEnvironment
     */
	#[SpeakeasyMetadata('form:name=ExtensionEnvironment')]
    public mixed $extensionEnvironment = null;
    
    /**
     * The maximum time, in seconds, that the MediaProcessor can run before automatically ends. The default value is 300 seconds, and the maximum value is 90000 seconds. Once this maximum duration is reached, Twilio will end the MediaProcessor, regardless of whether media is still streaming.
     * 
     * @var ?int $maxDuration
     */
	#[SpeakeasyMetadata('form:name=MaxDuration')]
    public ?int $maxDuration = null;
    
    /**
     * The URL to which Twilio will send asynchronous webhook requests for every MediaProcessor event. See [Status Callbacks](/docs/live/status-callbacks) for details.
     * 
     * @var ?string $statusCallback
     */
	#[SpeakeasyMetadata('form:name=StatusCallback')]
    public ?string $statusCallback = null;
    
    /**
     * The HTTP method Twilio should use to call the `status_callback` URL. Can be `POST` or `GET` and the default is `POST`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateMediaProcessorCreateMediaProcessorRequestStatusCallbackMethodEnum $statusCallbackMethod
     */
	#[SpeakeasyMetadata('form:name=StatusCallbackMethod')]
    public ?CreateMediaProcessorCreateMediaProcessorRequestStatusCallbackMethodEnum $statusCallbackMethod = null;
    
	public function __construct()
	{
		$this->extension = "";
		$this->extensionContext = "";
		$this->extensionEnvironment = null;
		$this->maxDuration = null;
		$this->statusCallback = null;
		$this->statusCallbackMethod = null;
	}
}
