/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetNetworkFirmwareUpgradesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceAvailableVersions extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the current version on the device
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceCurrentVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the version the device upgraded from
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceLastUpgradeFromVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the version the device upgraded to
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceLastUpgradeToVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the last firmware upgrade on the device
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceLastUpgrade extends SpeakeasyBase {
  /**
   * Details of the version the device upgraded from
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fromVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceLastUpgradeFromVersion
  )
  fromVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceLastUpgradeFromVersion;

  /**
   * Timestamp of the last successful firmware upgrade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  time?: Date;

  /**
   * Details of the version the device upgraded to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceLastUpgradeToVersion
  )
  toVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceLastUpgradeToVersion;
}

/**
 * Details of the version the device will upgrade to if it exists
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceNextUpgradeToVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the next firmware upgrade on the device
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceNextUpgrade extends SpeakeasyBase {
  /**
   * Timestamp of the next scheduled firmware upgrade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  time?: Date;

  /**
   * Details of the version the device will upgrade to if it exists
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceNextUpgradeToVersion
  )
  toVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceNextUpgradeToVersion;
}

/**
 * The network device to be updated
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsAppliance extends SpeakeasyBase {
  /**
   * Firmware versions available for upgrade
   */
  @SpeakeasyMetadata({
    elemType:
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceAvailableVersions,
  })
  @Expose({ name: "availableVersions" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceAvailableVersions
  )
  availableVersions?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceAvailableVersions[];

  /**
   * Details of the current version on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceCurrentVersion
  )
  currentVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceCurrentVersion;

  /**
   * Details of the last firmware upgrade on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpgrade" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceLastUpgrade
  )
  lastUpgrade?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceLastUpgrade;

  /**
   * Details of the next firmware upgrade on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextUpgrade" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceNextUpgrade
  )
  nextUpgrade?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsApplianceNextUpgrade;

  /**
   * Whether or not the network wants beta firmware
   */
  @SpeakeasyMetadata()
  @Expose({ name: "participateInNextBetaRelease" })
  participateInNextBetaRelease?: boolean;
}

export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraAvailableVersions extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the current version on the device
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraCurrentVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the version the device upgraded from
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraLastUpgradeFromVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the version the device upgraded to
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraLastUpgradeToVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the last firmware upgrade on the device
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraLastUpgrade extends SpeakeasyBase {
  /**
   * Details of the version the device upgraded from
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fromVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraLastUpgradeFromVersion
  )
  fromVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraLastUpgradeFromVersion;

  /**
   * Timestamp of the last successful firmware upgrade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  time?: Date;

  /**
   * Details of the version the device upgraded to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraLastUpgradeToVersion
  )
  toVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraLastUpgradeToVersion;
}

/**
 * Details of the version the device will upgrade to if it exists
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraNextUpgradeToVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the next firmware upgrade on the device
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraNextUpgrade extends SpeakeasyBase {
  /**
   * Timestamp of the next scheduled firmware upgrade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  time?: Date;

  /**
   * Details of the version the device will upgrade to if it exists
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraNextUpgradeToVersion
  )
  toVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraNextUpgradeToVersion;
}

/**
 * The network device to be updated
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsCamera extends SpeakeasyBase {
  /**
   * Firmware versions available for upgrade
   */
  @SpeakeasyMetadata({
    elemType:
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraAvailableVersions,
  })
  @Expose({ name: "availableVersions" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraAvailableVersions
  )
  availableVersions?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraAvailableVersions[];

  /**
   * Details of the current version on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraCurrentVersion
  )
  currentVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraCurrentVersion;

  /**
   * Details of the last firmware upgrade on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpgrade" })
  @Type(
    () => GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraLastUpgrade
  )
  lastUpgrade?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraLastUpgrade;

  /**
   * Details of the next firmware upgrade on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextUpgrade" })
  @Type(
    () => GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraNextUpgrade
  )
  nextUpgrade?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsCameraNextUpgrade;

  /**
   * Whether or not the network wants beta firmware
   */
  @SpeakeasyMetadata()
  @Expose({ name: "participateInNextBetaRelease" })
  participateInNextBetaRelease?: boolean;
}

export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayAvailableVersions extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the current version on the device
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayCurrentVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the version the device upgraded from
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayLastUpgradeFromVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the version the device upgraded to
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayLastUpgradeToVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the last firmware upgrade on the device
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayLastUpgrade extends SpeakeasyBase {
  /**
   * Details of the version the device upgraded from
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fromVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayLastUpgradeFromVersion
  )
  fromVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayLastUpgradeFromVersion;

  /**
   * Timestamp of the last successful firmware upgrade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  time?: Date;

  /**
   * Details of the version the device upgraded to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayLastUpgradeToVersion
  )
  toVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayLastUpgradeToVersion;
}

/**
 * Details of the version the device will upgrade to if it exists
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayNextUpgradeToVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the next firmware upgrade on the device
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayNextUpgrade extends SpeakeasyBase {
  /**
   * Timestamp of the next scheduled firmware upgrade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  time?: Date;

  /**
   * Details of the version the device will upgrade to if it exists
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayNextUpgradeToVersion
  )
  toVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayNextUpgradeToVersion;
}

/**
 * The network device to be updated
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGateway extends SpeakeasyBase {
  /**
   * Firmware versions available for upgrade
   */
  @SpeakeasyMetadata({
    elemType:
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayAvailableVersions,
  })
  @Expose({ name: "availableVersions" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayAvailableVersions
  )
  availableVersions?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayAvailableVersions[];

  /**
   * Details of the current version on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayCurrentVersion
  )
  currentVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayCurrentVersion;

  /**
   * Details of the last firmware upgrade on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpgrade" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayLastUpgrade
  )
  lastUpgrade?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayLastUpgrade;

  /**
   * Details of the next firmware upgrade on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextUpgrade" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayNextUpgrade
  )
  nextUpgrade?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGatewayNextUpgrade;

  /**
   * Whether or not the network wants beta firmware
   */
  @SpeakeasyMetadata()
  @Expose({ name: "participateInNextBetaRelease" })
  participateInNextBetaRelease?: boolean;
}

export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorAvailableVersions extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the current version on the device
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorCurrentVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the version the device upgraded from
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorLastUpgradeFromVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the version the device upgraded to
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorLastUpgradeToVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the last firmware upgrade on the device
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorLastUpgrade extends SpeakeasyBase {
  /**
   * Details of the version the device upgraded from
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fromVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorLastUpgradeFromVersion
  )
  fromVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorLastUpgradeFromVersion;

  /**
   * Timestamp of the last successful firmware upgrade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  time?: Date;

  /**
   * Details of the version the device upgraded to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorLastUpgradeToVersion
  )
  toVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorLastUpgradeToVersion;
}

/**
 * Details of the version the device will upgrade to if it exists
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorNextUpgradeToVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the next firmware upgrade on the device
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorNextUpgrade extends SpeakeasyBase {
  /**
   * Timestamp of the next scheduled firmware upgrade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  time?: Date;

  /**
   * Details of the version the device will upgrade to if it exists
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorNextUpgradeToVersion
  )
  toVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorNextUpgradeToVersion;
}

/**
 * The network device to be updated
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensor extends SpeakeasyBase {
  /**
   * Firmware versions available for upgrade
   */
  @SpeakeasyMetadata({
    elemType:
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorAvailableVersions,
  })
  @Expose({ name: "availableVersions" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorAvailableVersions
  )
  availableVersions?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorAvailableVersions[];

  /**
   * Details of the current version on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorCurrentVersion
  )
  currentVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorCurrentVersion;

  /**
   * Details of the last firmware upgrade on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpgrade" })
  @Type(
    () => GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorLastUpgrade
  )
  lastUpgrade?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorLastUpgrade;

  /**
   * Details of the next firmware upgrade on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextUpgrade" })
  @Type(
    () => GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorNextUpgrade
  )
  nextUpgrade?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensorNextUpgrade;

  /**
   * Whether or not the network wants beta firmware
   */
  @SpeakeasyMetadata()
  @Expose({ name: "participateInNextBetaRelease" })
  participateInNextBetaRelease?: boolean;
}

export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchAvailableVersions extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the current version on the device
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchCurrentVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the version the device upgraded from
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchLastUpgradeFromVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the version the device upgraded to
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchLastUpgradeToVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the last firmware upgrade on the device
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchLastUpgrade extends SpeakeasyBase {
  /**
   * Details of the version the device upgraded from
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fromVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchLastUpgradeFromVersion
  )
  fromVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchLastUpgradeFromVersion;

  /**
   * Timestamp of the last successful firmware upgrade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  time?: Date;

  /**
   * Details of the version the device upgraded to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchLastUpgradeToVersion
  )
  toVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchLastUpgradeToVersion;
}

/**
 * Details of the version the device will upgrade to if it exists
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchNextUpgradeToVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the next firmware upgrade on the device
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchNextUpgrade extends SpeakeasyBase {
  /**
   * Timestamp of the next scheduled firmware upgrade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  time?: Date;

  /**
   * Details of the version the device will upgrade to if it exists
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchNextUpgradeToVersion
  )
  toVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchNextUpgradeToVersion;
}

/**
 * The network device to be updated
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitch extends SpeakeasyBase {
  /**
   * Firmware versions available for upgrade
   */
  @SpeakeasyMetadata({
    elemType:
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchAvailableVersions,
  })
  @Expose({ name: "availableVersions" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchAvailableVersions
  )
  availableVersions?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchAvailableVersions[];

  /**
   * Details of the current version on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchCurrentVersion
  )
  currentVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchCurrentVersion;

  /**
   * Details of the last firmware upgrade on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpgrade" })
  @Type(
    () => GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchLastUpgrade
  )
  lastUpgrade?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchLastUpgrade;

  /**
   * Details of the next firmware upgrade on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextUpgrade" })
  @Type(
    () => GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchNextUpgrade
  )
  nextUpgrade?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitchNextUpgrade;

  /**
   * Whether or not the network wants beta firmware
   */
  @SpeakeasyMetadata()
  @Expose({ name: "participateInNextBetaRelease" })
  participateInNextBetaRelease?: boolean;
}

export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessAvailableVersions extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the current version on the device
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessCurrentVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the version the device upgraded from
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessLastUpgradeFromVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the version the device upgraded to
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessLastUpgradeToVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the last firmware upgrade on the device
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessLastUpgrade extends SpeakeasyBase {
  /**
   * Details of the version the device upgraded from
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fromVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessLastUpgradeFromVersion
  )
  fromVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessLastUpgradeFromVersion;

  /**
   * Timestamp of the last successful firmware upgrade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  time?: Date;

  /**
   * Details of the version the device upgraded to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessLastUpgradeToVersion
  )
  toVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessLastUpgradeToVersion;
}

/**
 * Details of the version the device will upgrade to if it exists
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessNextUpgradeToVersion extends SpeakeasyBase {
  /**
   * Name of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firmware" })
  firmware?: string;

  /**
   * Firmware version identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Release date of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  releaseDate?: Date;

  /**
   * Release type of the firmware version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "releaseType" })
  releaseType?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the next firmware upgrade on the device
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessNextUpgrade extends SpeakeasyBase {
  /**
   * Timestamp of the next scheduled firmware upgrade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  time?: Date;

  /**
   * Details of the version the device will upgrade to if it exists
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessNextUpgradeToVersion
  )
  toVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessNextUpgradeToVersion;
}

/**
 * The network device to be updated
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProductsWireless extends SpeakeasyBase {
  /**
   * Firmware versions available for upgrade
   */
  @SpeakeasyMetadata({
    elemType:
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessAvailableVersions,
  })
  @Expose({ name: "availableVersions" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessAvailableVersions
  )
  availableVersions?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessAvailableVersions[];

  /**
   * Details of the current version on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessCurrentVersion
  )
  currentVersion?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessCurrentVersion;

  /**
   * Details of the last firmware upgrade on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpgrade" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessLastUpgrade
  )
  lastUpgrade?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessLastUpgrade;

  /**
   * Details of the next firmware upgrade on the device
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextUpgrade" })
  @Type(
    () =>
      GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessNextUpgrade
  )
  nextUpgrade?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsWirelessNextUpgrade;

  /**
   * Whether or not the network wants beta firmware
   */
  @SpeakeasyMetadata()
  @Expose({ name: "participateInNextBetaRelease" })
  participateInNextBetaRelease?: boolean;
}

/**
 * The network devices to be updated
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONProducts extends SpeakeasyBase {
  /**
   * The network device to be updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appliance" })
  @Type(() => GetNetworkFirmwareUpgrades200ApplicationJSONProductsAppliance)
  appliance?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsAppliance;

  /**
   * The network device to be updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "camera" })
  @Type(() => GetNetworkFirmwareUpgrades200ApplicationJSONProductsCamera)
  camera?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsCamera;

  /**
   * The network device to be updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cellularGateway" })
  @Type(
    () => GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGateway
  )
  cellularGateway?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsCellularGateway;

  /**
   * The network device to be updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sensor" })
  @Type(() => GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensor)
  sensor?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsSensor;

  /**
   * The network device to be updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "switch" })
  @Type(() => GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitch)
  switch?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsSwitch;

  /**
   * The network device to be updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wireless" })
  @Type(() => GetNetworkFirmwareUpgrades200ApplicationJSONProductsWireless)
  wireless?: GetNetworkFirmwareUpgrades200ApplicationJSONProductsWireless;
}

/**
 * Day of the week
 */
export enum GetNetworkFirmwareUpgrades200ApplicationJSONUpgradeWindowDayOfWeekEnum {
  Fri = "fri",
  Friday = "friday",
  Mon = "mon",
  Monday = "monday",
  Sat = "sat",
  Saturday = "saturday",
  Sun = "sun",
  Sunday = "sunday",
  Thu = "thu",
  Thursday = "thursday",
  Tue = "tue",
  Tuesday = "tuesday",
  Wed = "wed",
  Wednesday = "wednesday",
}

/**
 * Hour of the day
 */
export enum GetNetworkFirmwareUpgrades200ApplicationJSONUpgradeWindowHourOfDayEnum {
  Zero00 = "0:00",
  Ten00 = "10:00",
  Eleven00 = "11:00",
  Twelve00 = "12:00",
  Thirteen00 = "13:00",
  Fourteen00 = "14:00",
  Fifteen00 = "15:00",
  Sixteen00 = "16:00",
  Seventeen00 = "17:00",
  Eighteen00 = "18:00",
  Nineteen00 = "19:00",
  One00 = "1:00",
  Twenty00 = "20:00",
  TwentyOne00 = "21:00",
  TwentyTwo00 = "22:00",
  TwentyThree00 = "23:00",
  Two00 = "2:00",
  Three00 = "3:00",
  Four00 = "4:00",
  Five00 = "5:00",
  Six00 = "6:00",
  Seven00 = "7:00",
  Eight00 = "8:00",
  Nine00 = "9:00",
}

/**
 * Upgrade window for devices in network
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSONUpgradeWindow extends SpeakeasyBase {
  /**
   * Day of the week
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dayOfWeek" })
  dayOfWeek?: GetNetworkFirmwareUpgrades200ApplicationJSONUpgradeWindowDayOfWeekEnum;

  /**
   * Hour of the day
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hourOfDay" })
  hourOfDay?: GetNetworkFirmwareUpgrades200ApplicationJSONUpgradeWindowHourOfDayEnum;
}

/**
 * Successful operation
 */
export class GetNetworkFirmwareUpgrades200ApplicationJSON extends SpeakeasyBase {
  /**
   * The network devices to be updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "products" })
  @Type(() => GetNetworkFirmwareUpgrades200ApplicationJSONProducts)
  products?: GetNetworkFirmwareUpgrades200ApplicationJSONProducts;

  /**
   * The timezone for the network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timezone" })
  timezone?: string;

  /**
   * Upgrade window for devices in network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "upgradeWindow" })
  @Type(() => GetNetworkFirmwareUpgrades200ApplicationJSONUpgradeWindow)
  upgradeWindow?: GetNetworkFirmwareUpgrades200ApplicationJSONUpgradeWindow;
}

export class GetNetworkFirmwareUpgradesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  getNetworkFirmwareUpgrades200ApplicationJSONObject?: GetNetworkFirmwareUpgrades200ApplicationJSON;
}
