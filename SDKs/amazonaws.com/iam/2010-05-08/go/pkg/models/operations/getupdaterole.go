// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETUpdateRoleActionEnum
type GETUpdateRoleActionEnum string

const (
	GETUpdateRoleActionEnumUpdateRole GETUpdateRoleActionEnum = "UpdateRole"
)

func (e *GETUpdateRoleActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UpdateRole":
		*e = GETUpdateRoleActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateRoleActionEnum: %s", s)
	}
}

// GETUpdateRoleVersionEnum
type GETUpdateRoleVersionEnum string

const (
	GETUpdateRoleVersionEnumTwoThousandAndTen0508 GETUpdateRoleVersionEnum = "2010-05-08"
)

func (e *GETUpdateRoleVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-08":
		*e = GETUpdateRoleVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateRoleVersionEnum: %s", s)
	}
}

type GETUpdateRoleRequest struct {
	Action GETUpdateRoleActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The new description that you want to apply to the specified role.
	Description *string `queryParam:"style=form,explode=true,name=Description"`
	// <p>The maximum session duration (in seconds) that you want to set for the specified role. If you do not specify a value for this setting, the default value of one hour is applied. This setting can have a value from 1 hour to 12 hours.</p> <p>Anyone who assumes the role from the CLI or API can use the <code>DurationSeconds</code> API parameter or the <code>duration-seconds</code> CLI parameter to request a longer session. The <code>MaxSessionDuration</code> setting determines the maximum duration that can be requested using the <code>DurationSeconds</code> parameter. If users don't specify a value for the <code>DurationSeconds</code> parameter, their security credentials are valid for one hour by default. This applies when you use the <code>AssumeRole*</code> API operations or the <code>assume-role*</code> CLI operations but does not apply when you use those operations to create a console URL. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html">Using IAM roles</a> in the <i>IAM User Guide</i>.</p>
	MaxSessionDuration *int64 `queryParam:"style=form,explode=true,name=MaxSessionDuration"`
	// The name of the role that you want to modify.
	RoleName          string                   `queryParam:"style=form,explode=true,name=RoleName"`
	Version           GETUpdateRoleVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETUpdateRoleResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
