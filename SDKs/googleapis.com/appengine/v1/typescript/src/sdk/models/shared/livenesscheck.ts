/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances.
 */
export class LivenessCheck extends SpeakeasyBase {
  /**
   * Interval between health checks.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "checkInterval" })
  checkInterval?: string;

  /**
   * Number of consecutive failed checks required before considering the VM unhealthy.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "failureThreshold" })
  failureThreshold?: number;

  /**
   * Host header to send when performing a HTTP Liveness check. Example: "myapp.appspot.com"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "host" })
  host?: string;

  /**
   * The initial delay before starting to execute the checks.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "initialDelay" })
  initialDelay?: string;

  /**
   * The request path.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;

  /**
   * Number of consecutive successful checks required before considering the VM healthy.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "successThreshold" })
  successThreshold?: number;

  /**
   * Time before the check is considered failed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeout" })
  timeout?: string;
}
