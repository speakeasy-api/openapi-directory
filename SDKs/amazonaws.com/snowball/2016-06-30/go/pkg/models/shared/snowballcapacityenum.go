// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SnowballCapacityEnum string

const (
	SnowballCapacityEnumT50          SnowballCapacityEnum = "T50"
	SnowballCapacityEnumT80          SnowballCapacityEnum = "T80"
	SnowballCapacityEnumT100         SnowballCapacityEnum = "T100"
	SnowballCapacityEnumT42          SnowballCapacityEnum = "T42"
	SnowballCapacityEnumT98          SnowballCapacityEnum = "T98"
	SnowballCapacityEnumT8           SnowballCapacityEnum = "T8"
	SnowballCapacityEnumT14          SnowballCapacityEnum = "T14"
	SnowballCapacityEnumT32          SnowballCapacityEnum = "T32"
	SnowballCapacityEnumNoPreference SnowballCapacityEnum = "NoPreference"
)

func (e *SnowballCapacityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "T50":
		fallthrough
	case "T80":
		fallthrough
	case "T100":
		fallthrough
	case "T42":
		fallthrough
	case "T98":
		fallthrough
	case "T8":
		fallthrough
	case "T14":
		fallthrough
	case "T32":
		fallthrough
	case "NoPreference":
		*e = SnowballCapacityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SnowballCapacityEnum: %s", s)
	}
}
