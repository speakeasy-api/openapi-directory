"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import billbee_interfaces_shipping_shipmentdata_dimensions as shared_billbee_interfaces_shipping_shipmentdata_dimensions
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RechnungsdruckWebAppControllersAPIShipmentWithLabel:
    r"""Details on the order and the shipping methods, that should be used."""
    
    change_state_to_send: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ChangeStateToSend'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'ChangeStateToSend' }})
    r"""Optional parameter to automatically change the orderstate to sent after creating the shipment"""  
    client_reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientReference'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'ClientReference' }})
    r"""Optional specify a reference text to be included on the label. Works not with all carriers"""  
    dimension: Optional[shared_billbee_interfaces_shipping_shipmentdata_dimensions.BillbeeInterfacesShippingShipmentDataDimensions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Dimension'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Dimension', 'json': True }})  
    order_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OrderId'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'OrderId' }})
    r"""The Billbee internal id of the order to ship"""  
    printer_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PrinterName'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'PrinterName' }})
    r"""Optional the name of a connected cloudprinter to send the label to"""  
    product_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProductId'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'ProductId' }})
    r"""the id of the shipping provider product to be used"""  
    provider_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProviderId'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'ProviderId' }})
    r"""The id of the provider. You can query all providers with the shippingproviders endpoint"""  
    ship_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShipDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'ShipDate' }})
    r"""Optional specify the shipdate to be transmitted to the carrier"""  
    weight_in_gram: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WeightInGram'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'WeightInGram' }})
    r"""Optional the shipments weight in gram to override the calculated weight"""  
    