/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETWorkflowsTasksRequest {
    /**
     * `Bearer {token}` for a valid OAuth token.
     * 
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Authorization")
    public String authorization;
    public GETWorkflowsTasksRequest withAuthorization(String authorization) {
        this.authorization = authorization;
        return this;
    }
    
    /**
     * An entity ID. If you have [Zuora Multi-entity](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/Multi-entity) enabled and the OAuth token is valid for more than one entity, you must use this header to specify which entity to perform the operation in. If the OAuth token is only valid for a single entity, or you do not have Zuora Multi-entity enabled, you do not need to set this header.
     * 
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Zuora-Entity-Ids")
    public String zuoraEntityIds;
    public GETWorkflowsTasksRequest withZuoraEntityIds(String zuoraEntityIds) {
        this.zuoraEntityIds = zuoraEntityIds;
        return this;
    }
    
    /**
     * A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
     * 
     * The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`"`), and quote (`'`).
     * 
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Zuora-Track-Id")
    public String zuoraTrackId;
    public GETWorkflowsTasksRequest withZuoraTrackId(String zuoraTrackId) {
        this.zuoraTrackId = zuoraTrackId;
        return this;
    }
    
    /**
     * If specified, the operation retrieves tasks that is the specified type.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=action_type")
    public String actionType;
    public GETWorkflowsTasksRequest withActionType(String actionType) {
        this.actionType = actionType;
        return this;
    }
    
    /**
     * If specified, the operation retrieves tasks with the specified api call type used.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=call_type")
    public String callType;
    public GETWorkflowsTasksRequest withCallType(String callType) {
        this.callType = callType;
        return this;
    }
    
    /**
     * If specified, the operation retrieves the task that is with specified id.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=id")
    public String id;
    public GETWorkflowsTasksRequest withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * If set to true, the operation retrieves workflows that have the scheduled trigger enabled. If set to false, the operation retrieves workflows that have the scheduled trigger disabled. If not specfied, the operation will not use this filter.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=instance")
    public Boolean instance;
    public GETWorkflowsTasksRequest withInstance(Boolean instance) {
        this.instance = instance;
        return this;
    }
    
    /**
     * If specified, the operation retrieves tasks that is in the specified name.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=name")
    public String name;
    public GETWorkflowsTasksRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * If specified, the operation retrieves tasks with the specified object.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=object")
    public String object;
    public GETWorkflowsTasksRequest withObject(String object) {
        this.object = object;
        return this;
    }
    
    /**
     * If specified, the operation retrieves tasks with the specified object id.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=object_id")
    public String objectId;
    public GETWorkflowsTasksRequest withObjectId(String objectId) {
        this.objectId = objectId;
        return this;
    }
    
    /**
     * If you want to retrieve only the workflows on a specific page, you can specify the `page` number in the query.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;
    public GETWorkflowsTasksRequest withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * The number of workflows shown in a single call. If the `page` parameter is not specified, the operation will return only the first page of results. If there are multiple pages of results, use it with the `page` parameter to get the results on subsequent pages.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page_length")
    public Long pageLength;
    public GETWorkflowsTasksRequest withPageLength(Long pageLength) {
        this.pageLength = pageLength;
        return this;
    }
    
    /**
     * If specified, the operation retrieves tasks that with the specified filter tags.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=tags")
    public String tags;
    public GETWorkflowsTasksRequest withTags(String tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * If specified, the operation retrieves tasks that for the specified workflow id.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=workflow_id")
    public String workflowId;
    public GETWorkflowsTasksRequest withWorkflowId(String workflowId) {
        this.workflowId = workflowId;
        return this;
    }
    
}
