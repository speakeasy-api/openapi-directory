"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import creativespecification as shared_creativespecification
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CreativeRestrictionsCreativeFormatEnum(str, Enum):
    r"""The format of the environment that the creatives will be displayed in."""
    CREATIVE_FORMAT_UNSPECIFIED = 'CREATIVE_FORMAT_UNSPECIFIED'
    DISPLAY = 'DISPLAY'
    VIDEO = 'VIDEO'

class CreativeRestrictionsSkippableAdTypeEnum(str, Enum):
    r"""Skippable video ads allow viewers to skip ads after 5 seconds."""
    SKIPPABLE_AD_TYPE_UNSPECIFIED = 'SKIPPABLE_AD_TYPE_UNSPECIFIED'
    SKIPPABLE = 'SKIPPABLE'
    INSTREAM_SELECT = 'INSTREAM_SELECT'
    NOT_SKIPPABLE = 'NOT_SKIPPABLE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreativeRestrictions:
    r"""Represents creative restrictions associated to Programmatic Guaranteed/ Preferred Deal in Ad Manager. This doesn't apply to Private Auction and AdX Preferred Deals."""
    
    creative_format: Optional[CreativeRestrictionsCreativeFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creativeFormat'), 'exclude': lambda f: f is None }})
    r"""The format of the environment that the creatives will be displayed in."""  
    creative_specifications: Optional[list[shared_creativespecification.CreativeSpecification]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creativeSpecifications'), 'exclude': lambda f: f is None }})  
    skippable_ad_type: Optional[CreativeRestrictionsSkippableAdTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('skippableAdType'), 'exclude': lambda f: f is None }})
    r"""Skippable video ads allow viewers to skip ads after 5 seconds."""  
    