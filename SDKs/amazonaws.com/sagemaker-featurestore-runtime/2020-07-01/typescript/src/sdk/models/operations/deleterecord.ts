/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class DeleteRecordRequest extends SpeakeasyBase {
  /**
   * Timestamp indicating when the deletion event occurred. <code>EventTime</code> can be used to query data at a certain point in time.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EventTime",
  })
  eventTime: string;

  /**
   * The name of the feature group to delete the record from.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=FeatureGroupName",
  })
  featureGroupName: string;

  /**
   * The value for the <code>RecordIdentifier</code> that uniquely identifies the record, in string format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=RecordIdentifierValueAsString",
  })
  recordIdentifierValueAsString: string;

  /**
   * A list of stores from which you're deleting the record. By default, Feature Store deletes the record from all of the stores that you're using for the <code>FeatureGroup</code>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=TargetStores",
  })
  targetStores?: shared.TargetStoreEnum[];

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class DeleteRecordResponse extends SpeakeasyBase {
  /**
   * AccessForbidden
   */
  @SpeakeasyMetadata()
  accessForbidden?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalFailure
   */
  @SpeakeasyMetadata()
  internalFailure?: any;

  /**
   * ServiceUnavailable
   */
  @SpeakeasyMetadata()
  serviceUnavailable?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ValidationError
   */
  @SpeakeasyMetadata()
  validationError?: any;
}
