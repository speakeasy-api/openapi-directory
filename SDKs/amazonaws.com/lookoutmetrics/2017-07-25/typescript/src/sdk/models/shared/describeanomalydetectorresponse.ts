/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AnomalyDetectorConfigSummary } from "./anomalydetectorconfigsummary";
import { AnomalyDetectorFailureTypeEnum } from "./anomalydetectorfailuretypeenum";
import { AnomalyDetectorStatusEnum } from "./anomalydetectorstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeAnomalyDetectorResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AnomalyDetectorArn" })
  anomalyDetectorArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AnomalyDetectorConfig" })
  @Type(() => AnomalyDetectorConfigSummary)
  anomalyDetectorConfig?: AnomalyDetectorConfigSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "AnomalyDetectorDescription" })
  anomalyDetectorDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AnomalyDetectorName" })
  anomalyDetectorName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "FailureReason" })
  failureReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FailureType" })
  failureType?: AnomalyDetectorFailureTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "KmsKeyArn" })
  kmsKeyArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModificationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModificationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: AnomalyDetectorStatusEnum;
}
