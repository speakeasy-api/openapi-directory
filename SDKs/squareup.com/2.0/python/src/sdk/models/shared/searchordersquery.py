"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import searchordersfilter as shared_searchordersfilter
from ..shared import searchorderssort as shared_searchorderssort
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SearchOrdersQuery:
    r"""Contains query criteria for the search."""
    
    filter: Optional[shared_searchordersfilter.SearchOrdersFilter] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filter'), 'exclude': lambda f: f is None }})
    r"""Filtering criteria to use for a `SearchOrders` request. Multiple filters
    are ANDed together.
    """  
    sort: Optional[shared_searchorderssort.SearchOrdersSort] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sort'), 'exclude': lambda f: f is None }})
    r"""Sorting criteria for a `SearchOrders` request. Results can only be sorted
    by a timestamp field.
    """  
    