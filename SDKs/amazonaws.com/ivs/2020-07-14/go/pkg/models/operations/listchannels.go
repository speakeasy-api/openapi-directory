// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListChannelsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListChannelsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListChannelsRequestBody struct {
	// Filters the channel list to match the specified name.
	FilterByName *string `json:"filterByName,omitempty"`
	// Filters the channel list to match the specified recording-configuration ARN.
	FilterByRecordingConfigurationArn *string `json:"filterByRecordingConfigurationArn,omitempty"`
	// Maximum number of channels to return. Default: 100.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// The first channel to retrieve. This is used for pagination; see the <code>nextToken</code> response field.
	NextToken *string `json:"nextToken,omitempty"`
}

type ListChannelsRequest struct {
	QueryParams ListChannelsQueryParams
	Headers     ListChannelsHeaders
	Request     ListChannelsRequestBody `request:"mediaType=application/json"`
}

type ListChannelsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	ListChannelsResponse *shared.ListChannelsResponse
	StatusCode           int
	RawResponse          *http.Response
	// ValidationException
	ValidationException interface{}
}
