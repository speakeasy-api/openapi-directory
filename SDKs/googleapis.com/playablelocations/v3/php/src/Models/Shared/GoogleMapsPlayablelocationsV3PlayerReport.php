<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleMapsPlayablelocationsV3PlayerReport - A report submitted by a player about a playable location that is considered inappropriate for use in the game.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleMapsPlayablelocationsV3PlayerReport
{
    /**
     * Language code (in BCP-47 format) indicating the language of the freeform description provided in `reason_details`. Examples are "en", "en-US" or "ja-Latn". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     * 
     * @var ?string $languageCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('languageCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $languageCode = null;
    
    /**
     * Required. The name of the playable location.
     * 
     * @var ?string $locationName
     */
	#[\JMS\Serializer\Annotation\SerializedName('locationName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $locationName = null;
    
    /**
     * Required. A free-form description detailing why the playable location is considered bad.
     * 
     * @var ?string $reasonDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('reasonDetails')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reasonDetails = null;
    
    /**
     * Required. One or more reasons why this playable location is considered bad.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GoogleMapsPlayablelocationsV3PlayerReportReasonsEnum> $reasons
     */
	#[\JMS\Serializer\Annotation\SerializedName('reasons')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\GoogleMapsPlayablelocationsV3PlayerReportReasonsEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $reasons = null;
    
	public function __construct()
	{
		$this->languageCode = null;
		$this->locationName = null;
		$this->reasonDetails = null;
		$this->reasons = null;
	}
}
