/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Result - A custom search result.
 */
public class Result {
    /**
     * Indicates the ID of Google's cached version of the search result.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cacheId")
    public String cacheId;

    public Result withCacheId(String cacheId) {
        this.cacheId = cacheId;
        return this;
    }
    
    /**
     * An abridged version of this search result\u2019s URL, e.g. www.example.com.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayLink")
    public String displayLink;

    public Result withDisplayLink(String displayLink) {
        this.displayLink = displayLink;
        return this;
    }
    
    /**
     * The file format of the search result.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileFormat")
    public String fileFormat;

    public Result withFileFormat(String fileFormat) {
        this.fileFormat = fileFormat;
        return this;
    }
    
    /**
     * The URL displayed after the snippet for each search result.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("formattedUrl")
    public String formattedUrl;

    public Result withFormattedUrl(String formattedUrl) {
        this.formattedUrl = formattedUrl;
        return this;
    }
    
    /**
     * The HTML-formatted URL displayed after the snippet for each search result.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("htmlFormattedUrl")
    public String htmlFormattedUrl;

    public Result withHtmlFormattedUrl(String htmlFormattedUrl) {
        this.htmlFormattedUrl = htmlFormattedUrl;
        return this;
    }
    
    /**
     * The snippet of the search result, in HTML.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("htmlSnippet")
    public String htmlSnippet;

    public Result withHtmlSnippet(String htmlSnippet) {
        this.htmlSnippet = htmlSnippet;
        return this;
    }
    
    /**
     * The title of the search result, in HTML.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("htmlTitle")
    public String htmlTitle;

    public Result withHtmlTitle(String htmlTitle) {
        this.htmlTitle = htmlTitle;
        return this;
    }
    
    /**
     * Image belonging to a custom search result.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image")
    public ResultImage image;

    public Result withImage(ResultImage image) {
        this.image = image;
        return this;
    }
    
    /**
     * A unique identifier for the type of current object. For this API, it is `customsearch#result.`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Result withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Encapsulates all information about refinement labels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public ResultLabels[] labels;

    public Result withLabels(ResultLabels[] labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * The full URL to which the search result is pointing, e.g. http://www.example.com/foo/bar.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("link")
    public String link;

    public Result withLink(String link) {
        this.link = link;
        return this;
    }
    
    /**
     * The MIME type of the search result.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mime")
    public String mime;

    public Result withMime(String mime) {
        this.mime = mime;
        return this;
    }
    
    /**
     * Contains [PageMap](https://developers.google.com/custom-search/docs/structured_data#pagemaps) information for this search result.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pagemap")
    public java.util.Map<String, Object> pagemap;

    public Result withPagemap(java.util.Map<String, Object> pagemap) {
        this.pagemap = pagemap;
        return this;
    }
    
    /**
     * The snippet of the search result, in plain text.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("snippet")
    public String snippet;

    public Result withSnippet(String snippet) {
        this.snippet = snippet;
        return this;
    }
    
    /**
     * The title of the search result, in plain text.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public Result withTitle(String title) {
        this.title = title;
        return this;
    }
    
    public Result(){}
}
