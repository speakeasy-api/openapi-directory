// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type AnalyticsEventsDeleteSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type AnalyticsEventsDeleteRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The id of the event.
	EventName string `pathParam:"style=simple,explode=false,name=event_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

// AnalyticsEventsDeleteDefaultApplicationJSONErrorCodeEnum - The status code return by the API. It can be 400 or 403 or 500.
type AnalyticsEventsDeleteDefaultApplicationJSONErrorCodeEnum string

const (
	AnalyticsEventsDeleteDefaultApplicationJSONErrorCodeEnumFourHundred         AnalyticsEventsDeleteDefaultApplicationJSONErrorCodeEnum = "400"
	AnalyticsEventsDeleteDefaultApplicationJSONErrorCodeEnumFourHundredAndThree AnalyticsEventsDeleteDefaultApplicationJSONErrorCodeEnum = "403"
	AnalyticsEventsDeleteDefaultApplicationJSONErrorCodeEnumFiveHundred         AnalyticsEventsDeleteDefaultApplicationJSONErrorCodeEnum = "500"
)

func (e *AnalyticsEventsDeleteDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		fallthrough
	case "403":
		fallthrough
	case "500":
		*e = AnalyticsEventsDeleteDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AnalyticsEventsDeleteDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type AnalyticsEventsDeleteDefaultApplicationJSONError struct {
	// The status code return by the API. It can be 400 or 403 or 500.
	Code *AnalyticsEventsDeleteDefaultApplicationJSONErrorCodeEnum `json:"code,omitempty"`
	// The reason for the request failed.
	Message *string `json:"message,omitempty"`
}

// AnalyticsEventsDeleteDefaultApplicationJSON - Error
type AnalyticsEventsDeleteDefaultApplicationJSON struct {
	Error *AnalyticsEventsDeleteDefaultApplicationJSONError `json:"error,omitempty"`
}

type AnalyticsEventsDeleteResponse struct {
	// Error code with reason.
	AnalyticsEventsDeleteDefaultApplicationJSONObject *AnalyticsEventsDeleteDefaultApplicationJSON
	ContentType                                       string
	StatusCode                                        int
	RawResponse                                       *http.Response
}
