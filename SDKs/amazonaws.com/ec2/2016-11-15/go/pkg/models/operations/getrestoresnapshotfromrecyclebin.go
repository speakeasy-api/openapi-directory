// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETRestoreSnapshotFromRecycleBinActionEnum
type GETRestoreSnapshotFromRecycleBinActionEnum string

const (
	GETRestoreSnapshotFromRecycleBinActionEnumRestoreSnapshotFromRecycleBin GETRestoreSnapshotFromRecycleBinActionEnum = "RestoreSnapshotFromRecycleBin"
)

func (e GETRestoreSnapshotFromRecycleBinActionEnum) ToPointer() *GETRestoreSnapshotFromRecycleBinActionEnum {
	return &e
}

func (e *GETRestoreSnapshotFromRecycleBinActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RestoreSnapshotFromRecycleBin":
		*e = GETRestoreSnapshotFromRecycleBinActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRestoreSnapshotFromRecycleBinActionEnum: %v", v)
	}
}

// GETRestoreSnapshotFromRecycleBinVersionEnum
type GETRestoreSnapshotFromRecycleBinVersionEnum string

const (
	GETRestoreSnapshotFromRecycleBinVersionEnumTwoThousandAndSixteen1115 GETRestoreSnapshotFromRecycleBinVersionEnum = "2016-11-15"
)

func (e GETRestoreSnapshotFromRecycleBinVersionEnum) ToPointer() *GETRestoreSnapshotFromRecycleBinVersionEnum {
	return &e
}

func (e *GETRestoreSnapshotFromRecycleBinVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETRestoreSnapshotFromRecycleBinVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRestoreSnapshotFromRecycleBinVersionEnum: %v", v)
	}
}

type GETRestoreSnapshotFromRecycleBinRequest struct {
	Action GETRestoreSnapshotFromRecycleBinActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the snapshot to restore.
	SnapshotID        string                                      `queryParam:"style=form,explode=true,name=SnapshotId"`
	Version           GETRestoreSnapshotFromRecycleBinVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETRestoreSnapshotFromRecycleBinResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
