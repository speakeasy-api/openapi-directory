// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestTypeEnum - Represent how to pass parameters to fetch access token
type GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestTypeEnum string

const (
	GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestTypeEnumRequestTypeUnspecified GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestTypeEnum = "REQUEST_TYPE_UNSPECIFIED"
	GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestTypeEnumRequestBody            GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestTypeEnum = "REQUEST_BODY"
	GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestTypeEnumQueryParameters        GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestTypeEnum = "QUERY_PARAMETERS"
	GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestTypeEnumEncodedHeader          GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestTypeEnum = "ENCODED_HEADER"
)

func (e GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestTypeEnum) ToPointer() *GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestTypeEnum {
	return &e
}

func (e *GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "REQUEST_TYPE_UNSPECIFIED":
		fallthrough
	case "REQUEST_BODY":
		fallthrough
	case "QUERY_PARAMETERS":
		fallthrough
	case "ENCODED_HEADER":
		*e = GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestTypeEnum: %v", v)
	}
}

// GoogleCloudIntegrationsV1alphaOAuth2ClientCredentials - For client credentials grant, the client sends a POST request with grant_type as 'client_credentials' to the authorization server. The authorization server will respond with a JSON object containing the access token.
type GoogleCloudIntegrationsV1alphaOAuth2ClientCredentials struct {
	// The access token represents the authorization of a specific application to access specific parts of a userâ€™s data.
	AccessToken *GoogleCloudIntegrationsV1alphaAccessToken `json:"accessToken,omitempty"`
	// The client's ID.
	ClientID *string `json:"clientId,omitempty"`
	// The client's secret.
	ClientSecret *string `json:"clientSecret,omitempty"`
	// Represent how to pass parameters to fetch access token
	RequestType *GoogleCloudIntegrationsV1alphaOAuth2ClientCredentialsRequestTypeEnum `json:"requestType,omitempty"`
	// A space-delimited list of requested scope permissions.
	Scope *string `json:"scope,omitempty"`
	// The token endpoint is used by the client to obtain an access token by presenting its authorization grant or refresh token.
	TokenEndpoint *string `json:"tokenEndpoint,omitempty"`
	// A generic multi-map that holds key value pairs. They keys and values can be of any type, unless specified.
	TokenParams *GoogleCloudIntegrationsV1alphaParameterMap `json:"tokenParams,omitempty"`
}
