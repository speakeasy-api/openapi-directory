/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ConversionProperties - Properties of a conversion job
 */
public class ConversionProperties {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataTimestamp")
    public String dataTimestamp;

    public ConversionProperties withDataTimestamp(String dataTimestamp) {
        this.dataTimestamp = dataTimestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("forceUefi")
    public Boolean forceUefi;

    public ConversionProperties withForceUefi(Boolean forceUefi) {
        this.forceUefi = forceUefi;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rootVolumeName")
    public String rootVolumeName;

    public ConversionProperties withRootVolumeName(String rootVolumeName) {
        this.rootVolumeName = rootVolumeName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("volumeToConversionMap")
    public java.util.Map<String, java.util.Map<String, String>> volumeToConversionMap;

    public ConversionProperties withVolumeToConversionMap(java.util.Map<String, java.util.Map<String, String>> volumeToConversionMap) {
        this.volumeToConversionMap = volumeToConversionMap;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("volumeToVolumeSize")
    public java.util.Map<String, Long> volumeToVolumeSize;

    public ConversionProperties withVolumeToVolumeSize(java.util.Map<String, Long> volumeToVolumeSize) {
        this.volumeToVolumeSize = volumeToVolumeSize;
        return this;
    }
    
    public ConversionProperties(){}
}
