// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VerificationStateEnum string

const (
	VerificationStateEnumFalsePositive  VerificationStateEnum = "FALSE_POSITIVE"
	VerificationStateEnumBenignPositive VerificationStateEnum = "BENIGN_POSITIVE"
	VerificationStateEnumTruePositive   VerificationStateEnum = "TRUE_POSITIVE"
	VerificationStateEnumUnknown        VerificationStateEnum = "UNKNOWN"
)

func (e *VerificationStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FALSE_POSITIVE":
		fallthrough
	case "BENIGN_POSITIVE":
		fallthrough
	case "TRUE_POSITIVE":
		fallthrough
	case "UNKNOWN":
		*e = VerificationStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VerificationStateEnum: %s", s)
	}
}
