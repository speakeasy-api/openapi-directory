/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Buyer } from "./buyer";
import { Price } from "./price";
import { Expose, Type } from "class-transformer";

/**
 * Used to specify pricing rules for buyers. Each PricePerBuyer in a product can become [0,1] deals. To check if there is a PricePerBuyer for a particular buyer we look for the most specific matching rule - we first look for a rule matching the buyer and otherwise look for a matching rule where no buyer is set.
 */
export class PricePerBuyer extends SpeakeasyBase {
  /**
   * Optional access type for this buyer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "auctionTier" })
  auctionTier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "billedBuyer" })
  @Type(() => Buyer)
  billedBuyer?: Buyer;

  @SpeakeasyMetadata()
  @Expose({ name: "buyer" })
  @Type(() => Buyer)
  buyer?: Buyer;

  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  @Type(() => Price)
  price?: Price;
}
