/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TestCreateTestSeriesTestSeriesTestRunSummary - Most important information about a test run.
 */
public class TestCreateTestSeriesTestSeriesTestRunSummary {
    /**
     * Tells whether the test run has completed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("completed")
    public Boolean completed;

    public TestCreateTestSeriesTestSeriesTestRunSummary withCompleted(Boolean completed) {
        this.completed = completed;
        return this;
    }
    
    /**
     * Date of the test run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date")
    public String date;

    public TestCreateTestSeriesTestSeriesTestRunSummary withDate(String date) {
        this.date = date;
        return this;
    }
    
    /**
     * Number of failed tests
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failed")
    public Double failed;

    public TestCreateTestSeriesTestSeriesTestRunSummary withFailed(Double failed) {
        this.failed = failed;
        return this;
    }
    
    /**
     * Number of passed tests
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("passed")
    public Double passed;

    public TestCreateTestSeriesTestSeriesTestRunSummary withPassed(Double passed) {
        this.passed = passed;
        return this;
    }
    
    /**
     * Human-readable status of the test run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statusDescription")
    public String statusDescription;

    public TestCreateTestSeriesTestSeriesTestRunSummary withStatusDescription(String statusDescription) {
        this.statusDescription = statusDescription;
        return this;
    }
    
    public TestCreateTestSeriesTestSeriesTestRunSummary(){}
}
