// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ConversionsGetDatapointsStatusEnum - Status of datapoint ("deleted"/"active"/"paused"/"spam")
type ConversionsGetDatapointsStatusEnum string

const (
	ConversionsGetDatapointsStatusEnumDeleted ConversionsGetDatapointsStatusEnum = "deleted"
	ConversionsGetDatapointsStatusEnumActive  ConversionsGetDatapointsStatusEnum = "active"
	ConversionsGetDatapointsStatusEnumPaused  ConversionsGetDatapointsStatusEnum = "paused"
	ConversionsGetDatapointsStatusEnumSpam    ConversionsGetDatapointsStatusEnum = "spam"
)

func (e ConversionsGetDatapointsStatusEnum) ToPointer() *ConversionsGetDatapointsStatusEnum {
	return &e
}

func (e *ConversionsGetDatapointsStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "deleted":
		fallthrough
	case "active":
		fallthrough
	case "paused":
		fallthrough
	case "spam":
		*e = ConversionsGetDatapointsStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConversionsGetDatapointsStatusEnum: %v", v)
	}
}

// ConversionsGetDatapointsTypeEnum - Type of datapoint ("tl"/"tp")
type ConversionsGetDatapointsTypeEnum string

const (
	ConversionsGetDatapointsTypeEnumTp ConversionsGetDatapointsTypeEnum = "tp"
	ConversionsGetDatapointsTypeEnumTl ConversionsGetDatapointsTypeEnum = "tl"
)

func (e ConversionsGetDatapointsTypeEnum) ToPointer() *ConversionsGetDatapointsTypeEnum {
	return &e
}

func (e *ConversionsGetDatapointsTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "tp":
		fallthrough
	case "tl":
		*e = ConversionsGetDatapointsTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConversionsGetDatapointsTypeEnum: %v", v)
	}
}

type ConversionsGetDatapointsRequest struct {
	// Id of the conversion
	ConversionID int64 `pathParam:"style=simple,explode=false,name=conversionId"`
	// Exclude datapoints created before this date (YYYYMMDD)
	CreatedAfter *string `queryParam:"style=form,explode=true,name=createdAfter"`
	// Exclude datapoints created after this date (YYYYMMDD)
	CreatedBefore *string `queryParam:"style=form,explode=true,name=createdBefore"`
	// Limit results to this number
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Offset where to start from
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Status of datapoint ("deleted"/"active"/"paused"/"spam")
	Status *ConversionsGetDatapointsStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// Filter by this tag name
	Tags *string `queryParam:"style=form,explode=true,name=tags"`
	// Filter fields by this pattern
	TextSearch *string `queryParam:"style=form,explode=true,name=textSearch"`
	// Type of datapoint ("tl"/"tp")
	Type *ConversionsGetDatapointsTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

type ConversionsGetDatapointsResponse struct {
	APICoreResponsesEntitiesResponseAPICoreResponsesEntityURISystemInt64 *shared.APICoreResponsesEntitiesResponseAPICoreResponsesEntityURISystemInt64
	ContentType                                                          string
	StatusCode                                                           int
	RawResponse                                                          *http.Response
}
