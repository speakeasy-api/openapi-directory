"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class AuthorizationCodeGrantTypeEnum(str, Enum):
    AUTHORIZATION_CODE = 'authorization_code'
    CLIENT_CREDENTIALS = 'client_credentials'


@dataclasses.dataclass
class AuthorizationCode:
    
    authorization_code: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'authorization_code' }})
    r"""Authorization code"""  
    client_id: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'client_id' }})
    r"""Client ID"""  
    client_secret: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'client_secret' }})
    r"""Client secret"""  
    grant_type: Optional[AuthorizationCodeGrantTypeEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'grant_type' }})  
    redirect_uri: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'redirect_uri' }})
    r"""Redirect URI"""  
    