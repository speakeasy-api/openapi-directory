<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Api
{
    /**
     * Link to the API reference of the API.
     * 
     * @var ?string $apiReferenceUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('api_reference_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $apiReferenceUrl = null;
    
    /**
     * List of categories the API belongs to.
     * 
     * @var ?array<string> $categories
     */
	#[\JMS\Serializer\Annotation\SerializedName('categories')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $categories = null;
    
    /**
     * Description of the API.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * List of event types this API supports.
     * 
     * @var ?array<string> $events
     */
	#[\JMS\Serializer\Annotation\SerializedName('events')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $events = null;
    
    /**
     * ID of the API.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Name of the API.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * ID of the Postman collection of the API.
     * 
     * @var ?string $postmanCollectionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('postman_collection_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postmanCollectionId = null;
    
    /**
     * List of resources supported in this API.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ApiResources> $resources
     */
	#[\JMS\Serializer\Annotation\SerializedName('resources')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ApiResources>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $resources = null;
    
    /**
     * Link to the latest OpenAPI specification of the API.
     * 
     * @var ?string $specUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('spec_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $specUrl = null;
    
    /**
     * Status of the API. APIs with status live or beta are callable.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ApiStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ApiStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ApiStatusEnum $status = null;
    
    /**
     * Indicates whether the API is a Unified API. If unified_api is false, the API is a Platform API.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ApiTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ApiTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ApiTypeEnum $type = null;
    
	public function __construct()
	{
		$this->apiReferenceUrl = null;
		$this->categories = null;
		$this->description = null;
		$this->events = null;
		$this->id = null;
		$this->name = null;
		$this->postmanCollectionId = null;
		$this->resources = null;
		$this->specUrl = null;
		$this->status = null;
		$this->type = null;
	}
}
