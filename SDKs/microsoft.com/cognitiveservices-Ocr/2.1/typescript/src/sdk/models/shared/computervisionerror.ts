/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The error code.
 */
export enum ComputerVisionErrorCodeEnum {
  InvalidImageFormat = "InvalidImageFormat",
  UnsupportedMediaType = "UnsupportedMediaType",
  InvalidImageUrl = "InvalidImageUrl",
  NotSupportedFeature = "NotSupportedFeature",
  NotSupportedImage = "NotSupportedImage",
  Timeout = "Timeout",
  InternalServerError = "InternalServerError",
  InvalidImageSize = "InvalidImageSize",
  BadArgument = "BadArgument",
  DetectFaceError = "DetectFaceError",
  NotSupportedLanguage = "NotSupportedLanguage",
  InvalidThumbnailSize = "InvalidThumbnailSize",
  InvalidDetails = "InvalidDetails",
  InvalidModel = "InvalidModel",
  CancelledRequest = "CancelledRequest",
  NotSupportedVisualFeature = "NotSupportedVisualFeature",
  FailedToProcess = "FailedToProcess",
  Unspecified = "Unspecified",
  StorageException = "StorageException",
}

/**
 * Details about the API request error.
 */
export class ComputerVisionError extends SpeakeasyBase {
  /**
   * The error code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: ComputerVisionErrorCodeEnum;

  /**
   * A message explaining the error reported by the service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  /**
   * A unique request identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId?: string;
}
