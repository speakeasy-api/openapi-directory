// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type KnowledgeBaseTypeEnum string

const (
	KnowledgeBaseTypeEnumExternal KnowledgeBaseTypeEnum = "EXTERNAL"
	KnowledgeBaseTypeEnumCustom   KnowledgeBaseTypeEnum = "CUSTOM"
)

func (e KnowledgeBaseTypeEnum) ToPointer() *KnowledgeBaseTypeEnum {
	return &e
}

func (e *KnowledgeBaseTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXTERNAL":
		fallthrough
	case "CUSTOM":
		*e = KnowledgeBaseTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for KnowledgeBaseTypeEnum: %v", v)
	}
}
