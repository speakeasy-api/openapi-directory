/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class DateTimeRange {
    /**
     * Dates are specified in the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-DD format, e.g. 2018-12-25
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("date")
    public LocalDate date;
    public DateTimeRange withDate(LocalDate date) {
        this.date = date;
        return this;
    }
    
    /**
     * Either 1, 2 or 3 extra days around the local date (IxD for +/- x days - Ex: I3D), Either 1 to 3 days after the local date (PxD for +x days - Ex: P3D), or 1 to 3 days before the local date (MxD for -x days - Ex: M3D)
     * 
     * Can not be combined with "originRadius" or "destinationRadius".
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dateWindow")
    public String dateWindow;
    public DateTimeRange withDateWindow(String dateWindow) {
        this.dateWindow = dateWindow;
        return this;
    }
    
    /**
     * Local time. hh:mm:ss format, e.g 10:30:00
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("time")
    public String time;
    public DateTimeRange withTime(String time) {
        this.time = time;
        return this;
    }
    
    /**
     * 1 to 12 hours around (both +and -) the local time. Possibly limited by the number of extra days when specified, i.e.  in some situations, it may not be used to exceed the maximum date range. [1-12]H format, e.g. 6H
     * 
     * Can not be combined with "originRadius" or "destinationRadius".
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeWindow")
    public String timeWindow;
    public DateTimeRange withTimeWindow(String timeWindow) {
        this.timeWindow = timeWindow;
        return this;
    }
    
}
