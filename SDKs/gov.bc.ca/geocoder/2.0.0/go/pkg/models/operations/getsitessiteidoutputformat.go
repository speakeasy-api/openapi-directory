// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetSitesSiteIDOutputFormatLocationDescriptorEnum - Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
type GetSitesSiteIDOutputFormatLocationDescriptorEnum string

const (
	GetSitesSiteIDOutputFormatLocationDescriptorEnumAny            GetSitesSiteIDOutputFormatLocationDescriptorEnum = "any"
	GetSitesSiteIDOutputFormatLocationDescriptorEnumAccessPoint    GetSitesSiteIDOutputFormatLocationDescriptorEnum = "accessPoint"
	GetSitesSiteIDOutputFormatLocationDescriptorEnumFrontDoorPoint GetSitesSiteIDOutputFormatLocationDescriptorEnum = "frontDoorPoint"
	GetSitesSiteIDOutputFormatLocationDescriptorEnumParcelPoint    GetSitesSiteIDOutputFormatLocationDescriptorEnum = "parcelPoint"
	GetSitesSiteIDOutputFormatLocationDescriptorEnumRooftopPoint   GetSitesSiteIDOutputFormatLocationDescriptorEnum = "rooftopPoint"
	GetSitesSiteIDOutputFormatLocationDescriptorEnumRoutingPoint   GetSitesSiteIDOutputFormatLocationDescriptorEnum = "routingPoint"
)

func (e GetSitesSiteIDOutputFormatLocationDescriptorEnum) ToPointer() *GetSitesSiteIDOutputFormatLocationDescriptorEnum {
	return &e
}

func (e *GetSitesSiteIDOutputFormatLocationDescriptorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "any":
		fallthrough
	case "accessPoint":
		fallthrough
	case "frontDoorPoint":
		fallthrough
	case "parcelPoint":
		fallthrough
	case "rooftopPoint":
		fallthrough
	case "routingPoint":
		*e = GetSitesSiteIDOutputFormatLocationDescriptorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSitesSiteIDOutputFormatLocationDescriptorEnum: %v", v)
	}
}

// GetSitesSiteIDOutputFormatOutputFormatEnum - Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>.
//
// Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
type GetSitesSiteIDOutputFormatOutputFormatEnum string

const (
	GetSitesSiteIDOutputFormatOutputFormatEnumJSON    GetSitesSiteIDOutputFormatOutputFormatEnum = "json"
	GetSitesSiteIDOutputFormatOutputFormatEnumGeojson GetSitesSiteIDOutputFormatOutputFormatEnum = "geojson"
	GetSitesSiteIDOutputFormatOutputFormatEnumXhtml   GetSitesSiteIDOutputFormatOutputFormatEnum = "xhtml"
	GetSitesSiteIDOutputFormatOutputFormatEnumKml     GetSitesSiteIDOutputFormatOutputFormatEnum = "kml"
	GetSitesSiteIDOutputFormatOutputFormatEnumGml     GetSitesSiteIDOutputFormatOutputFormatEnum = "gml"
	GetSitesSiteIDOutputFormatOutputFormatEnumCsv     GetSitesSiteIDOutputFormatOutputFormatEnum = "csv"
	GetSitesSiteIDOutputFormatOutputFormatEnumShpz    GetSitesSiteIDOutputFormatOutputFormatEnum = "shpz"
)

func (e GetSitesSiteIDOutputFormatOutputFormatEnum) ToPointer() *GetSitesSiteIDOutputFormatOutputFormatEnum {
	return &e
}

func (e *GetSitesSiteIDOutputFormatOutputFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "geojson":
		fallthrough
	case "xhtml":
		fallthrough
	case "kml":
		fallthrough
	case "gml":
		fallthrough
	case "csv":
		fallthrough
	case "shpz":
		*e = GetSitesSiteIDOutputFormatOutputFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSitesSiteIDOutputFormatOutputFormatEnum: %v", v)
	}
}

// GetSitesSiteIDOutputFormatOutputSrsEnum - The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
type GetSitesSiteIDOutputFormatOutputSrsEnum int64

const (
	GetSitesSiteIDOutputFormatOutputSrsEnumFourThousandThreeHundredAndTwentySix  GetSitesSiteIDOutputFormatOutputSrsEnum = 4326
	GetSitesSiteIDOutputFormatOutputSrsEnumFourThousandTwoHundredAndSixtyNine    GetSitesSiteIDOutputFormatOutputSrsEnum = 4269
	GetSitesSiteIDOutputFormatOutputSrsEnumThreeThousandAndFive                  GetSitesSiteIDOutputFormatOutputSrsEnum = 3005
	GetSitesSiteIDOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndSeven  GetSitesSiteIDOutputFormatOutputSrsEnum = 26907
	GetSitesSiteIDOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndEight  GetSitesSiteIDOutputFormatOutputSrsEnum = 26908
	GetSitesSiteIDOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndNine   GetSitesSiteIDOutputFormatOutputSrsEnum = 26909
	GetSitesSiteIDOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndTen    GetSitesSiteIDOutputFormatOutputSrsEnum = 26910
	GetSitesSiteIDOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndEleven GetSitesSiteIDOutputFormatOutputSrsEnum = 26911
)

func (e GetSitesSiteIDOutputFormatOutputSrsEnum) ToPointer() *GetSitesSiteIDOutputFormatOutputSrsEnum {
	return &e
}

func (e *GetSitesSiteIDOutputFormatOutputSrsEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 4326:
		fallthrough
	case 4269:
		fallthrough
	case 3005:
		fallthrough
	case 26907:
		fallthrough
	case 26908:
		fallthrough
	case 26909:
		fallthrough
	case 26910:
		fallthrough
	case 26911:
		*e = GetSitesSiteIDOutputFormatOutputSrsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSitesSiteIDOutputFormatOutputSrsEnum: %v", v)
	}
}

type GetSitesSiteIDOutputFormatRequest struct {
	// If true, include only basic match and address details in results. Not supported for shp, csv, and gml formats.
	Brief *bool `queryParam:"style=form,explode=true,name=brief"`
	// Describes the nature of the address location. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#locationDescriptor target="_blank">locationDescriptor</a>
	LocationDescriptor *GetSitesSiteIDOutputFormatLocationDescriptorEnum `queryParam:"style=form,explode=true,name=locationDescriptor"`
	// Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>.
	//
	// Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
	OutputFormat GetSitesSiteIDOutputFormatOutputFormatEnum `pathParam:"style=simple,explode=false,name=outputFormat"`
	// The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
	OutputSRS *GetSitesSiteIDOutputFormatOutputSrsEnum `queryParam:"style=form,explode=true,name=outputSRS"`
	// The distance to move the accessPoint away from the curb and towards the inside of the parcel (in metres). Ignored if locationDescriptor not set to accessPoint.
	SetBack *int64 `queryParam:"style=form,explode=true,name=setBack"`
	// A unique, but not immutable, site identifier.
	SiteID string `pathParam:"style=simple,explode=false,name=siteID"`
}

type GetSitesSiteIDOutputFormatResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
