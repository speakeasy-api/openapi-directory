"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import network as shared_network
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NetworkSetting:
    
    ip_address: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IpAddress') }})
    r"""The private IP address that is assigned to the container."""  
    public_ip_address: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PublicIpAddress') }})
    r"""The Public IP address that was bound to the container."""  
    bridge: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Bridge'), 'exclude': lambda f: f is None }})
    r"""The name of the private network bridge."""  
    gateway: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Gateway'), 'exclude': lambda f: f is None }})
    r"""The IP address of the private network gateway in IPv4 format."""  
    ip_prefix_len: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IpPrefixLen'), 'exclude': lambda f: f is None }})  
    mac_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MacAddress'), 'exclude': lambda f: f is None }})
    r"""The MAC address that was assigned to the container."""  
    network: Optional[shared_network.Network] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Network'), 'exclude': lambda f: f is None }})  
    port_mapping: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PortMapping'), 'exclude': lambda f: f is None }})
    r"""Specific to Docker. List of private container ports and their mapping to the host ports. In IBM Containers all container ports are exposed on the host by default. This attribute is returned as an empty list."""  
    ports: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Ports'), 'exclude': lambda f: f is None }})
    r"""All ports of the container that were exposed to the public."""  
    