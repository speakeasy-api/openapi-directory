/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PostUsersIdUserConnectionsIdConnectionRequestBody extends SpeakeasyBase {
  /**
   * Set if the connection synchronization is active
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=active" })
  active?: boolean;

  /**
   * Try to update a connection with the decoupled error
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=decoupled" })
  decoupled?: boolean;

  /**
   * Set expiration of the connection to this date
   */
  @SpeakeasyMetadata({
    data: "multipart_form, name=expire;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  expire?: Date;

  /**
   * Set login to this new login
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=login" })
  login?: string;

  /**
   * Set password to this new password
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=password" })
  password?: string;
}

export class PostUsersIdUserConnectionsIdConnectionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody?: PostUsersIdUserConnectionsIdConnectionRequestBody;

  /**
   * Do the connection update/synchronization in background
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=background",
  })
  background?: boolean;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expand",
  })
  expand?: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_connection",
  })
  idConnection: number;

  /**
   * Hint: you can use 'me' or 'all'
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_user",
  })
  idUser: string;

  /**
   * Whether the connection synchronization is asked by the PSU or not (default is true)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=psu_requested",
  })
  psuRequested?: boolean;

  /**
   * Refresh the PSU's SCA for openapi source
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=refresh_psd2_auth",
  })
  refreshPsd2Auth?: boolean;
}

export class PostUsersIdUserConnectionsIdConnectionResponse extends SpeakeasyBase {
  /**
   * Successful POST on Connection resource
   */
  @SpeakeasyMetadata()
  connection?: shared.Connection;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
