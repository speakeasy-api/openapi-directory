<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateReplicationConfigurationRequestBody
{
    /**
     * Whether to associate the default Elastic Disaster Recovery Security group with the Replication Configuration.
     * 
     * @var ?bool $associateDefaultSecurityGroup
     */
	#[\JMS\Serializer\Annotation\SerializedName('associateDefaultSecurityGroup')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $associateDefaultSecurityGroup = null;
    
    /**
     * Configure bandwidth throttling for the outbound data transfer rate of the Source Server in Mbps.
     * 
     * @var ?int $bandwidthThrottling
     */
	#[\JMS\Serializer\Annotation\SerializedName('bandwidthThrottling')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $bandwidthThrottling = null;
    
    /**
     * Whether to create a Public IP for the Recovery Instance by default.
     * 
     * @var ?bool $createPublicIP
     */
	#[\JMS\Serializer\Annotation\SerializedName('createPublicIP')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $createPublicIP = null;
    
    /**
     * The data plane routing mechanism that will be used for replication.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateReplicationConfigurationRequestBodyDataPlaneRoutingEnum $dataPlaneRouting
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataPlaneRouting')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateReplicationConfigurationRequestBodyDataPlaneRoutingEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateReplicationConfigurationRequestBodyDataPlaneRoutingEnum $dataPlaneRouting = null;
    
    /**
     * The Staging Disk EBS volume type to be used during replication.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnum $defaultLargeStagingDiskType
     */
	#[\JMS\Serializer\Annotation\SerializedName('defaultLargeStagingDiskType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateReplicationConfigurationRequestBodyDefaultLargeStagingDiskTypeEnum $defaultLargeStagingDiskType = null;
    
    /**
     * The type of EBS encryption to be used during replication.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\UpdateReplicationConfigurationRequestBodyEbsEncryptionEnum $ebsEncryption
     */
	#[\JMS\Serializer\Annotation\SerializedName('ebsEncryption')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\UpdateReplicationConfigurationRequestBodyEbsEncryptionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UpdateReplicationConfigurationRequestBodyEbsEncryptionEnum $ebsEncryption = null;
    
    /**
     * The ARN of the EBS encryption key to be used during replication.
     * 
     * @var ?string $ebsEncryptionKeyArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('ebsEncryptionKeyArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ebsEncryptionKeyArn = null;
    
    /**
     * The name of the Replication Configuration.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The Point in time (PIT) policy to manage snapshots taken during replication.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PITPolicyRule> $pitPolicy
     */
	#[\JMS\Serializer\Annotation\SerializedName('pitPolicy')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PITPolicyRule>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $pitPolicy = null;
    
    /**
     * The configuration of the disks of the Source Server to be replicated.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ReplicationConfigurationReplicatedDisk> $replicatedDisks
     */
	#[\JMS\Serializer\Annotation\SerializedName('replicatedDisks')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ReplicationConfigurationReplicatedDisk>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $replicatedDisks = null;
    
    /**
     * The instance type to be used for the replication server.
     * 
     * @var ?string $replicationServerInstanceType
     */
	#[\JMS\Serializer\Annotation\SerializedName('replicationServerInstanceType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $replicationServerInstanceType = null;
    
    /**
     * The security group IDs that will be used by the replication server.
     * 
     * @var ?array<string> $replicationServersSecurityGroupsIDs
     */
	#[\JMS\Serializer\Annotation\SerializedName('replicationServersSecurityGroupsIDs')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $replicationServersSecurityGroupsIDs = null;
    
    /**
     * The ID of the Source Server for this Replication Configuration.
     * 
     * @var string $sourceServerID
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceServerID')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sourceServerID;
    
    /**
     * The subnet to be used by the replication staging area.
     * 
     * @var ?string $stagingAreaSubnetId
     */
	#[\JMS\Serializer\Annotation\SerializedName('stagingAreaSubnetId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stagingAreaSubnetId = null;
    
    /**
     * A set of tags to be associated with all resources created in the replication staging area: EC2 replication server, EBS volumes, EBS snapshots, etc.
     * 
     * @var ?array<string, string> $stagingAreaTags
     */
	#[\JMS\Serializer\Annotation\SerializedName('stagingAreaTags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $stagingAreaTags = null;
    
    /**
     * Whether to use a dedicated Replication Server in the replication staging area.
     * 
     * @var ?bool $useDedicatedReplicationServer
     */
	#[\JMS\Serializer\Annotation\SerializedName('useDedicatedReplicationServer')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $useDedicatedReplicationServer = null;
    
	public function __construct()
	{
		$this->associateDefaultSecurityGroup = null;
		$this->bandwidthThrottling = null;
		$this->createPublicIP = null;
		$this->dataPlaneRouting = null;
		$this->defaultLargeStagingDiskType = null;
		$this->ebsEncryption = null;
		$this->ebsEncryptionKeyArn = null;
		$this->name = null;
		$this->pitPolicy = null;
		$this->replicatedDisks = null;
		$this->replicationServerInstanceType = null;
		$this->replicationServersSecurityGroupsIDs = null;
		$this->sourceServerID = "";
		$this->stagingAreaSubnetId = null;
		$this->stagingAreaTags = null;
		$this->useDedicatedReplicationServer = null;
	}
}
