"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SelfManagedKafkaAccessConfigurationVpc:
    r"""This structure specifies the VPC subnets and security groups for the stream, and whether a public IP address is to be used."""
    
    security_group: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SecurityGroup'), 'exclude': lambda f: f is None }})  
    subnets: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Subnets'), 'exclude': lambda f: f is None }})  
    