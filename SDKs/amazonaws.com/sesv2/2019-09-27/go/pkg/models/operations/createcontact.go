// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateContactPathParams struct {
	// The name of the contact list to which the contact should be added.
	ContactListName string `pathParam:"style=simple,explode=false,name=ContactListName"`
}

type CreateContactHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateContactRequestBody struct {
	// The attribute data attached to a contact.
	AttributesData *string `json:"AttributesData,omitempty"`
	// The contact's email address.
	EmailAddress string `json:"EmailAddress"`
	// The contact's preferences for being opted-in to or opted-out of topics.
	TopicPreferences []shared.TopicPreference `json:"TopicPreferences,omitempty"`
	// A boolean value status noting if the contact is unsubscribed from all contact list topics.
	UnsubscribeAll *bool `json:"UnsubscribeAll,omitempty"`
}

type CreateContactRequest struct {
	PathParams CreateContactPathParams
	Headers    CreateContactHeaders
	Request    CreateContactRequestBody `request:"mediaType=application/json"`
}

type CreateContactResponse struct {
	// AlreadyExistsException
	AlreadyExistsException interface{}
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// Success
	CreateContactResponse map[string]interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
