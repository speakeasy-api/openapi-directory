/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ApplicationCodeConfiguration } from "./applicationcodeconfiguration";
import { ApplicationSnapshotConfiguration } from "./applicationsnapshotconfiguration";
import { EnvironmentProperties } from "./environmentproperties";
import { FlinkApplicationConfiguration } from "./flinkapplicationconfiguration";
import { SqlApplicationConfiguration } from "./sqlapplicationconfiguration";
import { VpcConfiguration } from "./vpcconfiguration";
import { ZeppelinApplicationConfiguration } from "./zeppelinapplicationconfiguration";
import { Expose, Type } from "class-transformer";

/**
 * Specifies the creation parameters for a Kinesis Data Analytics application.
 */
export class ApplicationConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ApplicationCodeConfiguration" })
  @Type(() => ApplicationCodeConfiguration)
  applicationCodeConfiguration?: ApplicationCodeConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "ApplicationSnapshotConfiguration" })
  @Type(() => ApplicationSnapshotConfiguration)
  applicationSnapshotConfiguration?: ApplicationSnapshotConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "EnvironmentProperties" })
  @Type(() => EnvironmentProperties)
  environmentProperties?: EnvironmentProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "FlinkApplicationConfiguration" })
  @Type(() => FlinkApplicationConfiguration)
  flinkApplicationConfiguration?: FlinkApplicationConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "SqlApplicationConfiguration" })
  @Type(() => SqlApplicationConfiguration)
  sqlApplicationConfiguration?: SqlApplicationConfiguration;

  @SpeakeasyMetadata({ elemType: VpcConfiguration })
  @Expose({ name: "VpcConfigurations" })
  @Type(() => VpcConfiguration)
  vpcConfigurations?: VpcConfiguration[];

  @SpeakeasyMetadata()
  @Expose({ name: "ZeppelinApplicationConfiguration" })
  @Type(() => ZeppelinApplicationConfiguration)
  zeppelinApplicationConfiguration?: ZeppelinApplicationConfiguration;
}
