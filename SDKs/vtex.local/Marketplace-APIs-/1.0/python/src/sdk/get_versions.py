"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations

class GetVersions:
    r"""Search and filter all versions of suggestions, using specific criteria"""
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_suggestionbyversion(self, request: operations.GetSuggestionbyversionRequest) -> operations.GetSuggestionbyversionResponse:
        r"""Get Version by ID
        Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. 
        
        This endpoint retrieves a specific *version* of a chosen SKU sent by the seller. Add the Seller's ID, Seller's SKU ID, and version ID in the path to detail your search.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetSuggestionbyversionRequest, base_url, '/suggestions/{sellerId}/{sellerskuid}/versions/{version}', request)
        
        headers = utils.get_headers(request)
        query_params = utils.get_query_params(operations.GetSuggestionbyversionRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetSuggestionbyversionResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_versions(self, request: operations.GetVersionsRequest) -> operations.GetVersionsResponse:
        r"""Get all Versions
        Whenever an SKU Suggestion is updated or changed, a new version of the original one is created. All versions are logged, so you can search for previous our current states of SKU suggestions. 
        
        This endpoint retrieves the data of *all* previous and latest versions of a specific SKU suggestion, sent by the seller. Whenever an SKU is updated, it is important to map previous versions, to compare and identify changes. 
        
        The response's object [latestversion] provides the information of the most recent version of that SKU suggestion.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetVersionsRequest, base_url, '/suggestions/{sellerId}/{sellerskuid}/versions', request)
        
        headers = utils.get_headers(request)
        query_params = utils.get_query_params(operations.GetVersionsRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetVersionsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    