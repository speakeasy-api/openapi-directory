// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

// AccountResponseAppKey - Deprecated. Check appKeys object for all appKeys
type AccountResponseAppKey struct {
	Name  *string `json:"name,omitempty"`
	Token *string `json:"token,omitempty"`
}

type AccountResponseContact struct {
	// Email of the contact
	Email *string `json:"email,omitempty"`
	// Name of the contact
	Name *string `json:"name,omitempty"`
	// Phone of the contact
	Phone *string `json:"phone,omitempty"`
}

// AccountResponseSponsor - Object representing the sponsor user
type AccountResponseSponsor struct {
	// Email of the sponsor user
	Email *string `json:"email,omitempty"`
	// Name of the sponsor user
	Name *string `json:"name,omitempty"`
	// Phone of the sponsor user
	Phone *string `json:"phone,omitempty"`
}

// AccountResponse - Successful response for `/api/vlm/account`
type AccountResponse struct {
	// Account name
	AccountName *string `json:"accountName,omitempty"`
	// Address of contact
	Address *string `json:"address,omitempty"`
	// Deprecated. Check appKeys object for all appKeys
	AppKey *AccountResponseAppKey `json:"appKey,omitempty"`
	// Array of application keys
	AppKeys []AppKeyItems `json:"appKeys,omitempty"`
	// City of contact
	City *string `json:"city,omitempty"`
	// CNPJ (Tax ID) of account
	Cnpj *string `json:"cnpj,omitempty"`
	// Company name
	CompanyName *string `json:"companyName,omitempty"`
	// Additional address of contact
	Complement *string                 `json:"complement,omitempty"`
	Contact    *AccountResponseContact `json:"contact,omitempty"`
	// Country of contact
	Country *string `json:"country,omitempty"`
	// The date when the account was created
	CreationDate *time.Time `json:"creationDate,omitempty"`
	DefaultURL   *string    `json:"defaultUrl,omitempty"`
	// Neighborhood of contact
	District *string `json:"district,omitempty"`
	// If logo has been setup
	HasLogo *bool `json:"hasLogo,omitempty"`
	// If it has a parent account
	HaveParentAccount *bool `json:"haveParentAccount,omitempty"`
	// Hosts of all stores
	Hosts []string `json:"hosts,omitempty"`
	// ID of the account
	ID *string `json:"id,omitempty"`
	// The date when the account was deactivated
	InactivationDate *time.Time `json:"inactivationDate,omitempty"`
	// If account is active or not
	IsActive *bool `json:"isActive,omitempty"`
	// If it is in production
	IsOperating *bool `json:"isOperating,omitempty"`
	// Licenses of the account
	Licenses []LicenseItems `json:"licenses,omitempty"`
	// Filename of account logo
	Logo *string `json:"logo,omitempty"`
	Lv   *string `json:"lv,omitempty"`
	// Trading name
	Name *string `json:"name,omitempty"`
	// Number of the address of contact
	Number *string `json:"number,omitempty"`
	// The date when the account went into production
	OperationDate *time.Time `json:"operationDate,omitempty"`
	// The ID of the parent account
	ParentAccountID *string `json:"parentAccountId,omitempty"`
	// The name of the parent account
	ParentAccountName *string `json:"parentAccountName,omitempty"`
	// Zip Code of contact
	PostalCode *string `json:"postalCode,omitempty"`
	// Array of objects representing a store
	Sites []SiteItems `json:"sites,omitempty"`
	// Object representing the sponsor user
	Sponsor *AccountResponseSponsor `json:"sponsor,omitempty"`
	// State/Province of contact
	State *string `json:"state,omitempty"`
	// Telephone of contact
	Telephone *string `json:"telephone,omitempty"`
	// Trading name
	TradingName *string `json:"tradingName,omitempty"`
}
