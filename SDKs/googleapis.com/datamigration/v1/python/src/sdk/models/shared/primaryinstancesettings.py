"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import machineconfig as shared_machineconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PrimaryInstanceSettings:
    r"""Settings for the cluster's primary instance"""
    
    database_flags: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('databaseFlags'), 'exclude': lambda f: f is None }})
    r"""Database flags to pass to AlloyDB when DMS is creating the AlloyDB cluster and instances. See the AlloyDB documentation for how these can be used."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Required. The ID of the AlloyDB primary instance. The ID must satisfy the regex expression \\"[a-z0-9-]+\\"."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Labels for the AlloyDB primary instance created by DMS. An object containing a list of 'key', 'value' pairs."""  
    machine_config: Optional[shared_machineconfig.MachineConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('machineConfig'), 'exclude': lambda f: f is None }})
    r"""MachineConfig describes the configuration of a machine."""  
    private_ip: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('privateIp'), 'exclude': lambda f: f is None }})
    r"""Output only. The private IP address for the Instance. This is the connection endpoint for an end-user application."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PrimaryInstanceSettingsInput:
    r"""Settings for the cluster's primary instance"""
    
    database_flags: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('databaseFlags'), 'exclude': lambda f: f is None }})
    r"""Database flags to pass to AlloyDB when DMS is creating the AlloyDB cluster and instances. See the AlloyDB documentation for how these can be used."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Required. The ID of the AlloyDB primary instance. The ID must satisfy the regex expression \\"[a-z0-9-]+\\"."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Labels for the AlloyDB primary instance created by DMS. An object containing a list of 'key', 'value' pairs."""  
    machine_config: Optional[shared_machineconfig.MachineConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('machineConfig'), 'exclude': lambda f: f is None }})
    r"""MachineConfig describes the configuration of a machine."""  
    