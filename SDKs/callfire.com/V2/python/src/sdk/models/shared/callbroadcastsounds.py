"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CallBroadcastSoundsDncSoundTextVoiceEnum(str, Enum):
    r"""The voice to be used (MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1)"""
    MALE1 = 'MALE1'
    FEMALE1 = 'FEMALE1'
    FEMALE2 = 'FEMALE2'
    SPANISH1 = 'SPANISH1'
    FRENCHCANADIAN1 = 'FRENCHCANADIAN1'

class CallBroadcastSoundsLiveSoundTextVoiceEnum(str, Enum):
    r"""The voice to be used (MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1) for a live sound"""
    MALE1 = 'MALE1'
    FEMALE1 = 'FEMALE1'
    FEMALE2 = 'FEMALE2'
    SPANISH1 = 'SPANISH1'
    FRENCHCANADIAN1 = 'FRENCHCANADIAN1'

class CallBroadcastSoundsMachineSoundTextVoiceEnum(str, Enum):
    r"""The voice to be used (MALE1, FEMALE1 , FEMALE2, SPANISH1, FRENCHCANADIAN1) for a machine sound"""
    MALE1 = 'MALE1'
    FEMALE1 = 'FEMALE1'
    FEMALE2 = 'FEMALE2'
    SPANISH1 = 'SPANISH1'
    FRENCHCANADIAN1 = 'FRENCHCANADIAN1'

class CallBroadcastSoundsTransferSoundTextVoiceEnum(str, Enum):
    r"""The voice to be used (MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1) for a sound transfer"""
    MALE1 = 'MALE1'
    FEMALE1 = 'FEMALE1'
    FEMALE2 = 'FEMALE2'
    SPANISH1 = 'SPANISH1'
    FRENCHCANADIAN1 = 'FRENCHCANADIAN1'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CallBroadcastSounds:
    r"""A set of sounds assigned to a voice broadcast to play according to an answering machine configuration. You can add the existing sounds from the account's sound library or to provide a text which will be converted into a speech. There are four sound options available for a Voice Broadcast campaign"""
    
    dnc_digit: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dncDigit'), 'exclude': lambda f: f is None }})
    r"""Digit pressed to place contact in DNC list"""  
    dnc_sound_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dncSoundId'), 'exclude': lambda f: f is None }})
    r"""An id of sound file to play when recipient decided to opt out and pressed DNC digit"""  
    dnc_sound_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dncSoundText'), 'exclude': lambda f: f is None }})
    r"""Text to be turned into sound, plays to notify that Do Not Call digit has been pressed and inform your contact of their placement on the Do Not Call list"""  
    dnc_sound_text_voice: Optional[CallBroadcastSoundsDncSoundTextVoiceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dncSoundTextVoice'), 'exclude': lambda f: f is None }})
    r"""The voice to be used (MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1)"""  
    live_sound_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('liveSoundId'), 'exclude': lambda f: f is None }})
    r"""An id of sound file to play if phone is answered"""  
    live_sound_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('liveSoundText'), 'exclude': lambda f: f is None }})
    r"""Text to be used to turned into a sound. This text will be played when the phone is answered"""  
    live_sound_text_voice: Optional[CallBroadcastSoundsLiveSoundTextVoiceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('liveSoundTextVoice'), 'exclude': lambda f: f is None }})
    r"""The voice to be used (MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1) for a live sound"""  
    machine_sound_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('machineSoundId'), 'exclude': lambda f: f is None }})
    r"""An id of a sound file to play if answering machine is detected"""  
    machine_sound_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('machineSoundText'), 'exclude': lambda f: f is None }})
    r"""Text to be turned into a sound. This text will be played when answering machine is detected"""  
    machine_sound_text_voice: Optional[CallBroadcastSoundsMachineSoundTextVoiceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('machineSoundTextVoice'), 'exclude': lambda f: f is None }})
    r"""The voice to be used (MALE1, FEMALE1 , FEMALE2, SPANISH1, FRENCHCANADIAN1) for a machine sound"""  
    transfer_digit: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transferDigit'), 'exclude': lambda f: f is None }})
    r"""Digit pressed to initiate a transfer"""  
    transfer_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transferNumber'), 'exclude': lambda f: f is None }})
    r"""Phone number in E.164 format (11-digit) to transfer call to.  Example: 12132000384, 67076"""  
    transfer_sound_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transferSoundId'), 'exclude': lambda f: f is None }})
    r"""An id of a file to play if call is transferred"""  
    transfer_sound_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transferSoundText'), 'exclude': lambda f: f is None }})
    r"""Text to be turned into a sound. This text will be played when the transfer digit is played"""  
    transfer_sound_text_voice: Optional[CallBroadcastSoundsTransferSoundTextVoiceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transferSoundTextVoice'), 'exclude': lambda f: f is None }})
    r"""The voice to be used (MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1) for a sound transfer"""  
    