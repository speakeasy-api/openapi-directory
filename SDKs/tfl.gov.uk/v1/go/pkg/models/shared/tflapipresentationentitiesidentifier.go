// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TflAPIPresentationEntitiesIdentifierRouteTypeEnum string

const (
	TflAPIPresentationEntitiesIdentifierRouteTypeEnumUnknown            TflAPIPresentationEntitiesIdentifierRouteTypeEnum = "Unknown"
	TflAPIPresentationEntitiesIdentifierRouteTypeEnumAll                TflAPIPresentationEntitiesIdentifierRouteTypeEnum = "All"
	TflAPIPresentationEntitiesIdentifierRouteTypeEnumCycleSuperhighways TflAPIPresentationEntitiesIdentifierRouteTypeEnum = "Cycle Superhighways"
	TflAPIPresentationEntitiesIdentifierRouteTypeEnumQuietways          TflAPIPresentationEntitiesIdentifierRouteTypeEnum = "Quietways"
	TflAPIPresentationEntitiesIdentifierRouteTypeEnumCycleways          TflAPIPresentationEntitiesIdentifierRouteTypeEnum = "Cycleways"
	TflAPIPresentationEntitiesIdentifierRouteTypeEnumMiniHollands       TflAPIPresentationEntitiesIdentifierRouteTypeEnum = "Mini-Hollands"
	TflAPIPresentationEntitiesIdentifierRouteTypeEnumCentralLondonGrid  TflAPIPresentationEntitiesIdentifierRouteTypeEnum = "Central London Grid"
	TflAPIPresentationEntitiesIdentifierRouteTypeEnumStreetspaceRoute   TflAPIPresentationEntitiesIdentifierRouteTypeEnum = "Streetspace Route"
)

func (e *TflAPIPresentationEntitiesIdentifierRouteTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "All":
		fallthrough
	case "Cycle Superhighways":
		fallthrough
	case "Quietways":
		fallthrough
	case "Cycleways":
		fallthrough
	case "Mini-Hollands":
		fallthrough
	case "Central London Grid":
		fallthrough
	case "Streetspace Route":
		*e = TflAPIPresentationEntitiesIdentifierRouteTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TflAPIPresentationEntitiesIdentifierRouteTypeEnum: %s", s)
	}
}

type TflAPIPresentationEntitiesIdentifierStatusEnum string

const (
	TflAPIPresentationEntitiesIdentifierStatusEnumUnknown                                    TflAPIPresentationEntitiesIdentifierStatusEnum = "Unknown"
	TflAPIPresentationEntitiesIdentifierStatusEnumAll                                        TflAPIPresentationEntitiesIdentifierStatusEnum = "All"
	TflAPIPresentationEntitiesIdentifierStatusEnumOpen                                       TflAPIPresentationEntitiesIdentifierStatusEnum = "Open"
	TflAPIPresentationEntitiesIdentifierStatusEnumInProgress                                 TflAPIPresentationEntitiesIdentifierStatusEnum = "In Progress"
	TflAPIPresentationEntitiesIdentifierStatusEnumPlanned                                    TflAPIPresentationEntitiesIdentifierStatusEnum = "Planned"
	TflAPIPresentationEntitiesIdentifierStatusEnumPlannedSubjectToFeasibilityAndConsultation TflAPIPresentationEntitiesIdentifierStatusEnum = "Planned - Subject to feasibility and consultation."
	TflAPIPresentationEntitiesIdentifierStatusEnumNotOpen                                    TflAPIPresentationEntitiesIdentifierStatusEnum = "Not Open"
)

func (e *TflAPIPresentationEntitiesIdentifierStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unknown":
		fallthrough
	case "All":
		fallthrough
	case "Open":
		fallthrough
	case "In Progress":
		fallthrough
	case "Planned":
		fallthrough
	case "Planned - Subject to feasibility and consultation.":
		fallthrough
	case "Not Open":
		*e = TflAPIPresentationEntitiesIdentifierStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TflAPIPresentationEntitiesIdentifierStatusEnum: %s", s)
	}
}

type TflAPIPresentationEntitiesIdentifier struct {
	Crowding  *TflAPIPresentationEntitiesCrowding                `json:"crowding,omitempty"`
	FullName  *string                                            `json:"fullName,omitempty"`
	ID        *string                                            `json:"id,omitempty"`
	Name      *string                                            `json:"name,omitempty"`
	RouteType *TflAPIPresentationEntitiesIdentifierRouteTypeEnum `json:"routeType,omitempty"`
	Status    *TflAPIPresentationEntitiesIdentifierStatusEnum    `json:"status,omitempty"`
	Type      *string                                            `json:"type,omitempty"`
	URI       *string                                            `json:"uri,omitempty"`
}
