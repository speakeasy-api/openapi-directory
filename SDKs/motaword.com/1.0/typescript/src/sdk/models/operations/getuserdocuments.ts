/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum GetUserDocumentsOrderByEnum {
  Id = "id",
  UpdatedAt = "updated_at",
  CreatedAt = "created_at",
  Name = "name",
}

export enum GetUserDocumentsTypeFilterEnum {
  All = "ALL",
  TextDocuments = "TEXT_DOCUMENTS",
  Presentations = "PRESENTATIONS",
  Spreadsheets = "SPREADSHEETS",
  Pdfs = "PDFS",
  Images = "IMAGES",
  Subtitles = "SUBTITLES",
  Designs = "DESIGNS",
  Localization = "LOCALIZATION",
  Web = "WEB",
  StyleGuides = "STYLE_GUIDES",
  Glossaries = "GLOSSARIES",
}

export class GetUserDocumentsRequest extends SpeakeasyBase {
  /**
   * searches in source language of documents, in source and target languages of document's quote
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=language_code",
  })
  languageCode?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=order_by",
  })
  orderBy?: GetUserDocumentsOrderByEnum;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=order_type",
  })
  orderType?: shared.ListOrderTypeEnum;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * When true, this will return the most 4 recent active documents.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=recent",
  })
  recent?: boolean;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search",
  })
  search?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=type_filter",
  })
  typeFilter?: GetUserDocumentsTypeFilterEnum;

  /**
   * User ID
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userId",
  })
  userId: number;
}

export class GetUserDocumentsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Document list
   */
  @SpeakeasyMetadata()
  documentList?: shared.DocumentList;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
