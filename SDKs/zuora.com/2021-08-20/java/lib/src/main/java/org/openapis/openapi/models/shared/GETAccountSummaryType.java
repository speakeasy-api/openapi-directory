/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GETAccountSummaryType {
    /**
     * Container for basic information about the account.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("basicInfo")
    public GETAccountSummaryTypeBasicInfo basicInfo;
    public GETAccountSummaryType withBasicInfo(GETAccountSummaryTypeBasicInfo basicInfo) {
        this.basicInfo = basicInfo;
        return this;
    }
    
    /**
     * Container for bill-to contact information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billToContact")
    public GETAccountSummaryTypeBillToContact billToContact;
    public GETAccountSummaryType withBillToContact(GETAccountSummaryTypeBillToContact billToContact) {
        this.billToContact = billToContact;
        return this;
    }
    
    /**
     * Container for invoices. Only returns the last 6 invoices.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoices")
    public GETAccountSummaryInvoiceType[] invoices;
    public GETAccountSummaryType withInvoices(GETAccountSummaryInvoiceType[] invoices) {
        this.invoices = invoices;
        return this;
    }
    
    /**
     * Container for payments. Only returns the last 6 payments.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payments")
    public GETAccountSummaryPaymentType[] payments;
    public GETAccountSummaryType withPayments(GETAccountSummaryPaymentType[] payments) {
        this.payments = payments;
        return this;
    }
    
    /**
     * Container for sold-to contact information; uses the same structure as `billToContact`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("soldToContact")
    public GETAccountSummaryTypeSoldToContact soldToContact;
    public GETAccountSummaryType withSoldToContact(GETAccountSummaryTypeSoldToContact soldToContact) {
        this.soldToContact = soldToContact;
        return this;
    }
    
    /**
     * Container for subscriptions.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptions")
    public GETAccountSummarySubscriptionType[] subscriptions;
    public GETAccountSummaryType withSubscriptions(GETAccountSummarySubscriptionType[] subscriptions) {
        this.subscriptions = subscriptions;
        return this;
    }
    
    /**
     * Returns `true` if the request was processed successfully.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Boolean success;
    public GETAccountSummaryType withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
    /**
     * Container for tax exempt information, used to establish the tax exempt status of a customer account.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxInfo")
    public GETAccountSummaryTypeTaxInfo taxInfo;
    public GETAccountSummaryType withTaxInfo(GETAccountSummaryTypeTaxInfo taxInfo) {
        this.taxInfo = taxInfo;
        return this;
    }
    
    /**
     * Container for usage data. Only returns the last 6 months of usage.
     * 
     * **Note:** If the Active Rating feature is enabled, no usage data is returned in the response body field.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usage")
    public GETAccountSummaryUsageType[] usage;
    public GETAccountSummaryType withUsage(GETAccountSummaryUsageType[] usage) {
        this.usage = usage;
        return this;
    }
    
}
