// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETIdentityDkimAttributesActionEnum
type GETGETIdentityDkimAttributesActionEnum string

const (
	GETGETIdentityDkimAttributesActionEnumGetIdentityDkimAttributes GETGETIdentityDkimAttributesActionEnum = "GetIdentityDkimAttributes"
)

func (e GETGETIdentityDkimAttributesActionEnum) ToPointer() *GETGETIdentityDkimAttributesActionEnum {
	return &e
}

func (e *GETGETIdentityDkimAttributesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetIdentityDkimAttributes":
		*e = GETGETIdentityDkimAttributesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETIdentityDkimAttributesActionEnum: %v", v)
	}
}

// GETGETIdentityDkimAttributesVersionEnum
type GETGETIdentityDkimAttributesVersionEnum string

const (
	GETGETIdentityDkimAttributesVersionEnumTwoThousandAndTen1201 GETGETIdentityDkimAttributesVersionEnum = "2010-12-01"
)

func (e GETGETIdentityDkimAttributesVersionEnum) ToPointer() *GETGETIdentityDkimAttributesVersionEnum {
	return &e
}

func (e *GETGETIdentityDkimAttributesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETGETIdentityDkimAttributesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETIdentityDkimAttributesVersionEnum: %v", v)
	}
}

type GETGETIdentityDkimAttributesRequest struct {
	Action GETGETIdentityDkimAttributesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A list of one or more verified identities - email addresses, domains, or both.
	Identities        []string                                `queryParam:"style=form,explode=true,name=Identities"`
	Version           GETGETIdentityDkimAttributesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETIdentityDkimAttributesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
