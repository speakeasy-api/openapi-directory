/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum InvoiceTypeEnum {
  CommercialInvoice = "commercial-invoice",
  CreditNote = "credit-note",
  AmendingInvoice = "amending-invoice",
  SelfBilling = "self-billing",
  CreditSelfBilling = "credit-self-billing",
  DownPaymentInvoice = "down-payment-invoice",
  InformationsInvoice = "informations-invoice",
}

export class Invoice extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AccountedOn" })
  accountedOn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Author" })
  author?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "BeforeVAT" })
  beforeVAT?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Class" })
  class?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Code" })
  code?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Comment" })
  comment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Date" })
  date?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DueDate" })
  dueDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Extension" })
  extension?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FolderDate" })
  folderDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InclVAT" })
  inclVAT?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceDate" })
  invoiceDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Number" })
  number?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PaymentDate" })
  paymentDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: InvoiceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "VAT" })
  vat?: number;
}
