<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SslConfigTemplate - Ssl config details of a connector version
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SslConfigTemplate
{
    /**
     * Any additional fields that need to be rendered
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ConfigVariableTemplate> $additionalVariables
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalVariables')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ConfigVariableTemplate>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalVariables = null;
    
    /**
     * List of supported Client Cert Types
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SslConfigTemplateClientCertTypeEnum> $clientCertType
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientCertType')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\SslConfigTemplateClientCertTypeEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $clientCertType = null;
    
    /**
     * Boolean for determining if the connector version mandates TLS.
     * 
     * @var ?bool $isTlsMandatory
     */
	#[\JMS\Serializer\Annotation\SerializedName('isTlsMandatory')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isTlsMandatory = null;
    
    /**
     * List of supported Server Cert Types
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SslConfigTemplateServerCertTypeEnum> $serverCertType
     */
	#[\JMS\Serializer\Annotation\SerializedName('serverCertType')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\SslConfigTemplateServerCertTypeEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $serverCertType = null;
    
    /**
     * Controls the ssl type for the given connector version
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SslConfigTemplateSslTypeEnum $sslType
     */
	#[\JMS\Serializer\Annotation\SerializedName('sslType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SslConfigTemplateSslTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SslConfigTemplateSslTypeEnum $sslType = null;
    
	public function __construct()
	{
		$this->additionalVariables = null;
		$this->clientCertType = null;
		$this->isTlsMandatory = null;
		$this->serverCertType = null;
		$this->sslType = null;
	}
}
