/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ConnectorSourceField {
    /**
     * ID of the related connector source
     */
    @JsonProperty("id_connector_source")
    public Long idConnectorSource;
    public ConnectorSourceField withIdConnectorSource(Long idConnectorSource) {
        this.idConnectorSource = idConnectorSource;
        return this;
    }
    
    /**
     * Label to display to user
     */
    @JsonProperty("label")
    public String label;
    public ConnectorSourceField withLabel(String label) {
        this.label = label;
        return this;
    }
    
    /**
     * Name of the config
     */
    @JsonProperty("name")
    public String name;
    public ConnectorSourceField withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * If set, the value must match this regexp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regex")
    public String regex;
    public ConnectorSourceField withRegex(String regex) {
        this.regex = regex;
        return this;
    }
    
    /**
     * If true, config has to be set to use this source
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("required")
    public Boolean required;
    public ConnectorSourceField withRequired(Boolean required) {
        this.required = required;
        return this;
    }
    
    /**
     * If true, value must be hidden on fronts
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret")
    public Boolean secret;
    public ConnectorSourceField withSecret(Boolean secret) {
        this.secret = secret;
        return this;
    }
    
    /**
     * Type of config
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public ConnectorSourceField withType(String type) {
        this.type = type;
        return this;
    }
    
}
