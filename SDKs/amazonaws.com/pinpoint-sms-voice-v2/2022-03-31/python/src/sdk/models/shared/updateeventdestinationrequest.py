"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cloudwatchlogsdestination as shared_cloudwatchlogsdestination
from ..shared import eventtype_enum as shared_eventtype_enum
from ..shared import kinesisfirehosedestination as shared_kinesisfirehosedestination
from ..shared import snsdestination as shared_snsdestination
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateEventDestinationRequest:
    
    configuration_set_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConfigurationSetName') }})  
    event_destination_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EventDestinationName') }})  
    cloud_watch_logs_destination: Optional[shared_cloudwatchlogsdestination.CloudWatchLogsDestination] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CloudWatchLogsDestination'), 'exclude': lambda f: f is None }})  
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Enabled'), 'exclude': lambda f: f is None }})  
    kinesis_firehose_destination: Optional[shared_kinesisfirehosedestination.KinesisFirehoseDestination] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KinesisFirehoseDestination'), 'exclude': lambda f: f is None }})  
    matching_event_types: Optional[list[shared_eventtype_enum.EventTypeEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MatchingEventTypes'), 'exclude': lambda f: f is None }})  
    sns_destination: Optional[shared_snsdestination.SnsDestination] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SnsDestination'), 'exclude': lambda f: f is None }})  
    