/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BlueprintDetails } from "./blueprintdetails";
import { WorkflowGraph } from "./workflowgraph";
import { WorkflowRun } from "./workflowrun";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A workflow is a collection of multiple dependent Glue jobs and crawlers that are run to complete a complex ETL task. A workflow manages the execution and monitoring of all its jobs and crawlers.
 */
export class Workflow extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BlueprintDetails" })
  @Type(() => BlueprintDetails)
  blueprintDetails?: BlueprintDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DefaultRunProperties" })
  defaultRunProperties?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Graph" })
  @Type(() => WorkflowGraph)
  graph?: WorkflowGraph;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastRun" })
  @Type(() => WorkflowRun)
  lastRun?: WorkflowRun;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxConcurrentRuns" })
  maxConcurrentRuns?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;
}
