// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PublisherReviewStatusStatusEnum - Status of the publisher review.
type PublisherReviewStatusStatusEnum string

const (
	PublisherReviewStatusStatusEnumReviewStatusUnspecified PublisherReviewStatusStatusEnum = "REVIEW_STATUS_UNSPECIFIED"
	PublisherReviewStatusStatusEnumReviewStatusApproved    PublisherReviewStatusStatusEnum = "REVIEW_STATUS_APPROVED"
	PublisherReviewStatusStatusEnumReviewStatusRejected    PublisherReviewStatusStatusEnum = "REVIEW_STATUS_REJECTED"
	PublisherReviewStatusStatusEnumReviewStatusPending     PublisherReviewStatusStatusEnum = "REVIEW_STATUS_PENDING"
)

func (e *PublisherReviewStatusStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "REVIEW_STATUS_UNSPECIFIED":
		fallthrough
	case "REVIEW_STATUS_APPROVED":
		fallthrough
	case "REVIEW_STATUS_REJECTED":
		fallthrough
	case "REVIEW_STATUS_PENDING":
		*e = PublisherReviewStatusStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PublisherReviewStatusStatusEnum: %s", s)
	}
}

// PublisherReviewStatus - Publisher review status for the creative.
type PublisherReviewStatus struct {
	// The publisher reviewing the creative.
	PublisherName *string `json:"publisherName,omitempty"`
	// Status of the publisher review.
	Status *PublisherReviewStatusStatusEnum `json:"status,omitempty"`
}
