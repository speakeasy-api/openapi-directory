// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AccountStateStatusEnum - If verified, future locations that are created are automatically connected to Google Maps, and have Google+ pages created, without requiring moderation.
type AccountStateStatusEnum string

const (
	AccountStateStatusEnumAccountStatusUnspecified AccountStateStatusEnum = "ACCOUNT_STATUS_UNSPECIFIED"
	AccountStateStatusEnumVerified                 AccountStateStatusEnum = "VERIFIED"
	AccountStateStatusEnumUnverified               AccountStateStatusEnum = "UNVERIFIED"
	AccountStateStatusEnumVerificationRequested    AccountStateStatusEnum = "VERIFICATION_REQUESTED"
)

func (e AccountStateStatusEnum) ToPointer() *AccountStateStatusEnum {
	return &e
}

func (e *AccountStateStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACCOUNT_STATUS_UNSPECIFIED":
		fallthrough
	case "VERIFIED":
		fallthrough
	case "UNVERIFIED":
		fallthrough
	case "VERIFICATION_REQUESTED":
		*e = AccountStateStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountStateStatusEnum: %v", v)
	}
}

// AccountState - Indicates status of the account, such as whether the account has been verified by Google.
type AccountState struct {
	// If verified, future locations that are created are automatically connected to Google Maps, and have Google+ pages created, without requiring moderation.
	Status *AccountStateStatusEnum `json:"status,omitempty"`
}
