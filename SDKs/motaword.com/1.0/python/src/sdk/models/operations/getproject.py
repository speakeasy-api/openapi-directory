"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import project as shared_project
from enum import Enum
from typing import Optional

class GetProjectWithEnum(str, Enum):
    CLIENT = 'client'
    VENDOR = 'vendor'
    SCORE = 'score'


@dataclasses.dataclass
class GetProjectRequest:
    
    id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Project ID"""  
    with_: Optional[list[GetProjectWithEnum]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'with[]', 'style': 'form', 'explode': True }})
    r"""Include detailed information. Possible values 'client', 'vendor', 'score'"""  
    

@dataclasses.dataclass
class GetProjectResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""ProjectNotFound"""  
    project: Optional[shared_project.Project] = dataclasses.field(default=None)
    r"""Project model"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    