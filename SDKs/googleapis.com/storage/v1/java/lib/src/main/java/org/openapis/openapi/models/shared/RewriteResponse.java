/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RewriteResponse - A rewrite response.
 */
public class RewriteResponse {
    /**
     * true if the copy is finished; otherwise, false if the copy is in progress. This property is always present in the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("done")
    public Boolean done;
    public RewriteResponse withDone(Boolean done) {
        this.done = done;
        return this;
    }
    
    /**
     * The kind of item this is.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public RewriteResponse withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The total size of the object being copied in bytes. This property is always present in the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("objectSize")
    public String objectSize;
    public RewriteResponse withObjectSize(String objectSize) {
        this.objectSize = objectSize;
        return this;
    }
    
    /**
     * An object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource")
    public Object resource;
    public RewriteResponse withResource(Object resource) {
        this.resource = resource;
        return this;
    }
    
    /**
     * A token to use in subsequent requests to continue copying data. This token is present in the response only when there is more data to copy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rewriteToken")
    public String rewriteToken;
    public RewriteResponse withRewriteToken(String rewriteToken) {
        this.rewriteToken = rewriteToken;
        return this;
    }
    
    /**
     * The total bytes written so far, which can be used to provide a waiting user with a progress indicator. This property is always present in the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalBytesRewritten")
    public String totalBytesRewritten;
    public RewriteResponse withTotalBytesRewritten(String totalBytesRewritten) {
        this.totalBytesRewritten = totalBytesRewritten;
        return this;
    }
    
}
