"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import virtualgatewaybackenddefaults as shared_virtualgatewaybackenddefaults
from ..shared import virtualgatewaylistener as shared_virtualgatewaylistener
from ..shared import virtualgatewaylogging as shared_virtualgatewaylogging
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VirtualGatewaySpec:
    r"""An object that represents the specification of a service mesh resource."""
    
    listeners: list[shared_virtualgatewaylistener.VirtualGatewayListener] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listeners') }})  
    backend_defaults: Optional[shared_virtualgatewaybackenddefaults.VirtualGatewayBackendDefaults] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('backendDefaults'), 'exclude': lambda f: f is None }})  
    logging: Optional[shared_virtualgatewaylogging.VirtualGatewayLogging] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logging'), 'exclude': lambda f: f is None }})
    r"""An object that represents logging information."""  
    