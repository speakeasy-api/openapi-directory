"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ProductVisibilityTracksEnum(str, Enum):
    APP_TRACK_UNSPECIFIED = 'appTrackUnspecified'
    PRODUCTION = 'production'
    BETA = 'beta'
    ALPHA = 'alpha'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProductVisibility:
    r"""A product to be made visible to a user."""
    
    product_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productId'), 'exclude': lambda f: f is None }})
    r"""The product ID to make visible to the user. Required for each item in the productVisibility list."""  
    track_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trackIds'), 'exclude': lambda f: f is None }})
    r"""Grants the user visibility to the specified product track(s), identified by trackIds."""  
    tracks: Optional[list[ProductVisibilityTracksEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tracks'), 'exclude': lambda f: f is None }})
    r"""Deprecated. Use trackIds instead."""  
    