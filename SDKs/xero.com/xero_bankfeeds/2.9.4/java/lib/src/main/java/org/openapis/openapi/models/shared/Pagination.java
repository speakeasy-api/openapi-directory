/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Pagination {
    /**
     * Number of items returned
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemCount")
    public Long itemCount;

    public Pagination withItemCount(Long itemCount) {
        this.itemCount = itemCount;
        return this;
    }
    
    /**
     * Page number which specifies the set of records to retrieve. Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?page=2 to get the second set of the records. When page value is not a number or a negative number, by default, the first set of records is returned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page")
    public Long page;

    public Pagination withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * Number of pages available
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageCount")
    public Long pageCount;

    public Pagination withPageCount(Long pageCount) {
        this.pageCount = pageCount;
        return this;
    }
    
    /**
     * Page size which specifies how many records per page will be returned (default 50). Example - https://api.xero.com/bankfeeds.xro/1.0/Statements?pageSize=100 to specify page size of 100.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageSize")
    public Long pageSize;

    public Pagination withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    public Pagination(){}
}
