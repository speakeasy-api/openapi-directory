/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Event's Access Date
 */
export class AccessDates extends SpeakeasyBase {
  /**
   * Boolean flag to indicate whether or not the access end date is approximated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endApproximate" })
  endApproximate?: boolean;

  /**
   * Event's end access time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endDateTime?: Date;

  /**
   * Boolean flag to indicate whether or not the access start date is approximated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startApproximate" })
  startApproximate?: boolean;

  /**
   * Event's start access time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDateTime?: Date;
}
