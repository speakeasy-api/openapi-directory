// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type StartExperimentRequestBody struct {
	// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
	ClientToken string `json:"clientToken"`
	// The ID of the experiment template.
	ExperimentTemplateID string `json:"experimentTemplateId"`
	// The tags to apply to the experiment.
	Tags map[string]string `json:"tags,omitempty"`
}

type StartExperimentRequest struct {
	RequestBody       StartExperimentRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type StartExperimentResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// Success
	StartExperimentResponse *shared.StartExperimentResponse
	StatusCode              int
	RawResponse             *http.Response
	// ValidationException
	ValidationException interface{}
}
