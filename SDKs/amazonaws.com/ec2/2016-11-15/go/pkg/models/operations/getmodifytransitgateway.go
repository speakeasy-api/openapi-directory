// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GETModifyTransitGatewayActionEnum
type GETModifyTransitGatewayActionEnum string

const (
	GETModifyTransitGatewayActionEnumModifyTransitGateway GETModifyTransitGatewayActionEnum = "ModifyTransitGateway"
)

func (e GETModifyTransitGatewayActionEnum) ToPointer() *GETModifyTransitGatewayActionEnum {
	return &e
}

func (e *GETModifyTransitGatewayActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ModifyTransitGateway":
		*e = GETModifyTransitGatewayActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyTransitGatewayActionEnum: %v", v)
	}
}

// GETModifyTransitGatewayOptions - The transit gateway options.
type GETModifyTransitGatewayOptions struct {
	AddTransitGatewayCidrBlocks    []string                                      `queryParam:"name=AddTransitGatewayCidrBlocks"`
	AmazonSideAsn                  *int64                                        `queryParam:"name=AmazonSideAsn"`
	AssociationDefaultRouteTableID *string                                       `queryParam:"name=AssociationDefaultRouteTableId"`
	AutoAcceptSharedAttachments    *shared.AutoAcceptSharedAttachmentsValueEnum  `queryParam:"name=AutoAcceptSharedAttachments"`
	DefaultRouteTableAssociation   *shared.DefaultRouteTableAssociationValueEnum `queryParam:"name=DefaultRouteTableAssociation"`
	DefaultRouteTablePropagation   *shared.DefaultRouteTablePropagationValueEnum `queryParam:"name=DefaultRouteTablePropagation"`
	DNSSupport                     *shared.DNSSupportValueEnum                   `queryParam:"name=DnsSupport"`
	PropagationDefaultRouteTableID *string                                       `queryParam:"name=PropagationDefaultRouteTableId"`
	RemoveTransitGatewayCidrBlocks []string                                      `queryParam:"name=RemoveTransitGatewayCidrBlocks"`
	VpnEcmpSupport                 *shared.VpnEcmpSupportValueEnum               `queryParam:"name=VpnEcmpSupport"`
}

// GETModifyTransitGatewayVersionEnum
type GETModifyTransitGatewayVersionEnum string

const (
	GETModifyTransitGatewayVersionEnumTwoThousandAndSixteen1115 GETModifyTransitGatewayVersionEnum = "2016-11-15"
)

func (e GETModifyTransitGatewayVersionEnum) ToPointer() *GETModifyTransitGatewayVersionEnum {
	return &e
}

func (e *GETModifyTransitGatewayVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETModifyTransitGatewayVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyTransitGatewayVersionEnum: %v", v)
	}
}

type GETModifyTransitGatewayRequest struct {
	Action GETModifyTransitGatewayActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The description for the transit gateway.
	Description *string `queryParam:"style=form,explode=true,name=Description"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The options to modify.
	Options *GETModifyTransitGatewayOptions `queryParam:"style=form,explode=true,name=Options"`
	// The ID of the transit gateway.
	TransitGatewayID  string                             `queryParam:"style=form,explode=true,name=TransitGatewayId"`
	Version           GETModifyTransitGatewayVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyTransitGatewayResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
