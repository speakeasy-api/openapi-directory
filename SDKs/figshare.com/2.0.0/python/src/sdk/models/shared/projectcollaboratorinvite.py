"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ProjectCollaboratorInviteRoleNameEnum(str, Enum):
    r"""Role of the the collaborator inside the project"""
    VIEWER = 'viewer'
    COLLABORATOR = 'collaborator'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProjectCollaboratorInvite:
    r"""viewer or collaborator role. User user_id or email of user"""
    
    role_name: ProjectCollaboratorInviteRoleNameEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('role_name') }})
    r"""Role of the the collaborator inside the project"""  
    comment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comment'), 'exclude': lambda f: f is None }})
    r"""Text sent when inviting the user to the project"""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""Collaborator email"""  
    user_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_id'), 'exclude': lambda f: f is None }})
    r"""User id of the collaborator"""  
    