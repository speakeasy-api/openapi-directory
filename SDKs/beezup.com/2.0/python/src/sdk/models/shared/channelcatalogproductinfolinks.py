"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import links_disablechannelcatalogproductlink as shared_links_disablechannelcatalogproductlink
from ..shared import links_getchannelcatalogproductinfolink as shared_links_getchannelcatalogproductinfolink
from ..shared import links_overridechannelcatalogproductvalueslink as shared_links_overridechannelcatalogproductvalueslink
from ..shared import links_reenablechannelcatalogproductlink as shared_links_reenablechannelcatalogproductlink
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ChannelCatalogProductInfoLinks:
    r"""Indicates the differents actions you can do on a channel product"""
    
    override: shared_links_overridechannelcatalogproductvalueslink.LinksOverrideChannelCatalogProductValuesLink = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('override') }})  
    self_: shared_links_getchannelcatalogproductinfolink.LinksGetChannelCatalogProductInfoLink = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('self') }})  
    disable: Optional[shared_links_disablechannelcatalogproductlink.LinksDisableChannelCatalogProductLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disable'), 'exclude': lambda f: f is None }})  
    reenable: Optional[shared_links_reenablechannelcatalogproductlink.LinksReenableChannelCatalogProductLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reenable'), 'exclude': lambda f: f is None }})  
    