/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Rule - Represents a Google Tag Manager Rule.
 */
public class Rule {
    /**
     * GTM Account ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public Rule withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The list of conditions that make up this rule (implicit AND between them). @mutable tagmanager.accounts.containers.rules.create @mutable tagmanager.accounts.containers.rules.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("condition")
    public Condition[] condition;
    public Rule withCondition(Condition[] condition) {
        this.condition = condition;
        return this;
    }
    
    /**
     * GTM Container ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containerId")
    public String containerId;
    public Rule withContainerId(String containerId) {
        this.containerId = containerId;
        return this;
    }
    
    /**
     * The fingerprint of the GTM Rule as computed at storage time. This value is recomputed whenever the rule is modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fingerprint")
    public String fingerprint;
    public Rule withFingerprint(String fingerprint) {
        this.fingerprint = fingerprint;
        return this;
    }
    
    /**
     * Rule display name. @mutable tagmanager.accounts.containers.rules.create @mutable tagmanager.accounts.containers.rules.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Rule withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * User notes on how to apply this rule in the container. @mutable tagmanager.accounts.containers.rules.create @mutable tagmanager.accounts.containers.rules.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public Rule withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * The Rule ID uniquely identifies the GTM Rule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ruleId")
    public String ruleId;
    public Rule withRuleId(String ruleId) {
        this.ruleId = ruleId;
        return this;
    }
    
}
