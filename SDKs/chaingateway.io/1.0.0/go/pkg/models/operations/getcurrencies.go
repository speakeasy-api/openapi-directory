// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type Getcurrencies200ApplicationJSONData struct {
	Aave                  *string `json:"Aave,omitempty"`
	Algorand              *string `json:"Algorand,omitempty"`
	Amp                   *string `json:"Amp,omitempty"`
	ApeCoin               *string `json:"ApeCoin,omitempty"`
	Arweave               *string `json:"Arweave,omitempty"`
	Avalanche             *string `json:"Avalanche,omitempty"`
	AxieInfinity          *string `json:"Axie Infinity,omitempty"`
	Bnb                   *string `json:"BNB,omitempty"`
	BasicAttentionToken   *string `json:"Basic Attention Token,omitempty"`
	BinanceUSD            *string `json:"Binance USD,omitempty"`
	BitDAO                *string `json:"BitDAO,omitempty"`
	BitTorrent            *string `json:"BitTorrent,omitempty"`
	Bitcoin               *string `json:"Bitcoin,omitempty"`
	BitcoinCash           *string `json:"Bitcoin Cash,omitempty"`
	BitcoinSV             *string `json:"Bitcoin SV,omitempty"`
	BondedLuna            *string `json:"Bonded Luna,omitempty"`
	Cardano               *string `json:"Cardano,omitempty"`
	Celo                  *string `json:"Celo,omitempty"`
	Chain                 *string `json:"Chain,omitempty"`
	Chainlink             *string `json:"Chainlink,omitempty"`
	Chiliz                *string `json:"Chiliz,omitempty"`
	ConvexFinance         *string `json:"Convex Finance,omitempty"`
	CosmosHub             *string `json:"Cosmos Hub,omitempty"`
	Cronos                *string `json:"Cronos,omitempty"`
	CurveDAOToken         *string `json:"Curve DAO Token,omitempty"`
	Dai                   *string `json:"Dai,omitempty"`
	Dash                  *string `json:"Dash,omitempty"`
	DeFiChain             *string `json:"DeFiChain,omitempty"`
	Decentraland          *string `json:"Decentraland,omitempty"`
	Dogecoin              *string `json:"Dogecoin,omitempty"`
	Eos                   *string `json:"EOS,omitempty"`
	Elrond                *string `json:"Elrond,omitempty"`
	EnjinCoin             *string `json:"Enjin Coin,omitempty"`
	Ethereum              *string `json:"Ethereum,omitempty"`
	EthereumClassic       *string `json:"Ethereum Classic,omitempty"`
	FTXToken              *string `json:"FTX Token,omitempty"`
	Fantom                *string `json:"Fantom,omitempty"`
	Filecoin              *string `json:"Filecoin,omitempty"`
	Flow                  *string `json:"Flow,omitempty"`
	Frax                  *string `json:"Frax,omitempty"`
	FraxShare             *string `json:"Frax Share,omitempty"`
	Gala                  *string `json:"Gala,omitempty"`
	Harmony               *string `json:"Harmony,omitempty"`
	Hedera                *string `json:"Hedera,omitempty"`
	Helium                *string `json:"Helium,omitempty"`
	HuobiBTC              *string `json:"Huobi BTC,omitempty"`
	HuobiToken            *string `json:"Huobi Token,omitempty"`
	Iota                  *string `json:"IOTA,omitempty"`
	InternetComputer      *string `json:"Internet Computer,omitempty"`
	Klaytn                *string `json:"Klaytn,omitempty"`
	KuCoinToken           *string `json:"KuCoin Token,omitempty"`
	Kusama                *string `json:"Kusama,omitempty"`
	LEOToken              *string `json:"LEO Token,omitempty"`
	LidoStakedEther       *string `json:"Lido Staked Ether,omitempty"`
	Litecoin              *string `json:"Litecoin,omitempty"`
	Loopring              *string `json:"Loopring,omitempty"`
	MagicInternetMoney    *string `json:"Magic Internet Money,omitempty"`
	Maker                 *string `json:"Maker,omitempty"`
	MinaProtocol          *string `json:"Mina Protocol,omitempty"`
	Monero                *string `json:"Monero,omitempty"`
	NEARProtocol          *string `json:"NEAR Protocol,omitempty"`
	Neo                   *string `json:"NEO,omitempty"`
	Nexo                  *string `json:"NEXO,omitempty"`
	Okb                   *string `json:"OKB,omitempty"`
	Osmosis               *string `json:"Osmosis,omitempty"`
	PancakeSwap           *string `json:"PancakeSwap,omitempty"`
	PaxDollar             *string `json:"Pax Dollar,omitempty"`
	Polkadot              *string `json:"Polkadot,omitempty"`
	Polygon               *string `json:"Polygon,omitempty"`
	Quant                 *string `json:"Quant,omitempty"`
	Radix                 *string `json:"Radix,omitempty"`
	Stepn                 *string `json:"STEPN,omitempty"`
	ShibaInu              *string `json:"Shiba Inu,omitempty"`
	Solana                *string `json:"Solana,omitempty"`
	Stacks                *string `json:"Stacks,omitempty"`
	Stellar               *string `json:"Stellar,omitempty"`
	SynthetixNetworkToken *string `json:"Synthetix Network Token,omitempty"`
	THORChain             *string `json:"THORChain,omitempty"`
	Tron                  *string `json:"TRON,omitempty"`
	Terra                 *string `json:"Terra,omitempty"`
	TerraUSD              *string `json:"TerraUSD,omitempty"`
	Tether                *string `json:"Tether,omitempty"`
	Tezos                 *string `json:"Tezos,omitempty"`
	TheGraph              *string `json:"The Graph,omitempty"`
	TheSandbox            *string `json:"The Sandbox,omitempty"`
	ThetaFuel             *string `json:"Theta Fuel,omitempty"`
	ThetaNetwork          *string `json:"Theta Network,omitempty"`
	TrueUSD               *string `json:"TrueUSD,omitempty"`
	USDCoin               *string `json:"USD Coin,omitempty"`
	Uniswap               *string `json:"Uniswap,omitempty"`
	VeChain               *string `json:"VeChain,omitempty"`
	Waves                 *string `json:"Waves,omitempty"`
	WrappedBitcoin        *string `json:"Wrapped Bitcoin,omitempty"`
	Xrp                   *string `json:"XRP,omitempty"`
	Zcash                 *string `json:"Zcash,omitempty"`
	Zilliqa               *string `json:"Zilliqa,omitempty"`
	CDAI                  *string `json:"cDAI,omitempty"`
	CETH                  *string `json:"cETH,omitempty"`
	CUSDC                 *string `json:"cUSDC,omitempty"`
	ECash                 *string `json:"eCash,omitempty"`
}

// Getcurrencies200ApplicationJSON - getCurrencies
type Getcurrencies200ApplicationJSON struct {
	Data    *Getcurrencies200ApplicationJSONData `json:"data,omitempty"`
	Message *string                              `json:"message,omitempty"`
	Ok      *bool                                `json:"ok,omitempty"`
	Status  *float64                             `json:"status,omitempty"`
}

type GetcurrenciesResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// getCurrencies
	Getcurrencies200ApplicationJSONObject *Getcurrencies200ApplicationJSON
}
