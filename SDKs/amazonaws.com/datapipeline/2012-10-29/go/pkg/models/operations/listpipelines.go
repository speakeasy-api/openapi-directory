// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListPipelinesXAmzTargetEnum
type ListPipelinesXAmzTargetEnum string

const (
	ListPipelinesXAmzTargetEnumDataPipelineListPipelines ListPipelinesXAmzTargetEnum = "DataPipeline.ListPipelines"
)

func (e ListPipelinesXAmzTargetEnum) ToPointer() *ListPipelinesXAmzTargetEnum {
	return &e
}

func (e *ListPipelinesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DataPipeline.ListPipelines":
		*e = ListPipelinesXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListPipelinesXAmzTargetEnum: %v", v)
	}
}

type ListPipelinesRequest struct {
	ListPipelinesInput shared.ListPipelinesInput   `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         ListPipelinesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=marker"`
}

type ListPipelinesResponse struct {
	ContentType string
	// InternalServiceError
	InternalServiceError interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	ListPipelinesOutput *shared.ListPipelinesOutput
	StatusCode          int
	RawResponse         *http.Response
}
