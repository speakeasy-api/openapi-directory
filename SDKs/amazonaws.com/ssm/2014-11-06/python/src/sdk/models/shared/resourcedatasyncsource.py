"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import resourcedatasyncawsorganizationssource as shared_resourcedatasyncawsorganizationssource
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ResourceDataSyncSource:
    r"""Information about the source of the data included in the resource data sync."""
    
    source_regions: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourceRegions') }})  
    source_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourceType') }})  
    aws_organizations_source: Optional[shared_resourcedatasyncawsorganizationssource.ResourceDataSyncAwsOrganizationsSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwsOrganizationsSource'), 'exclude': lambda f: f is None }})  
    enable_all_ops_data_sources: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EnableAllOpsDataSources'), 'exclude': lambda f: f is None }})  
    include_future_regions: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IncludeFutureRegions'), 'exclude': lambda f: f is None }})  
    