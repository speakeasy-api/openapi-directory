"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import sales as shared_sales
from enum import Enum
from typing import Optional

class GetSalesCountCarTypeEnum(str, Enum):
    r"""Inventory type for which sales count is to be searched, default is used"""
    NEW = 'new'
    USED = 'used'

class GetSalesCountCountryEnum(str, Enum):
    r"""Country for which the sales records are to be searched"""
    US_LOWER = 'us'
    CA_LOWER = 'ca'
    US_UPPER = 'US'
    CA_UPPER = 'CA'


@dataclasses.dataclass
class GetSalesCountRequest:
    
    api_key: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'api_key', 'style': 'form', 'explode': True }})
    r"""The API Authentication Key. Mandatory with all API calls."""  
    car_type: Optional[GetSalesCountCarTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'car_type', 'style': 'form', 'explode': True }})
    r"""Inventory type for which sales count is to be searched, default is used"""  
    city_state: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'city_state', 'style': 'form', 'explode': True }})
    r"""City level sales count, pipe seperated like city_state=jacksonville|FL"""  
    country: Optional[GetSalesCountCountryEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'country', 'style': 'form', 'explode': True }})
    r"""Country for which the sales records are to be searched"""  
    make: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'make', 'style': 'form', 'explode': True }})
    r"""Make for which sales count is to be searched"""  
    mm: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'mm', 'style': 'form', 'explode': True }})
    r"""Make-Model for which sales count is to be searched, pipe seperated like mm=ford|f-150"""  
    state: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'state', 'style': 'form', 'explode': True }})
    r"""State level sales count"""  
    taxonomy_vin: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'taxonomy_vin', 'style': 'form', 'explode': True }})
    r"""taxonomy_vin for which sales count is to be searched"""  
    vin: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'vin', 'style': 'form', 'explode': True }})
    r"""VIN that will be transformed to taxonomy_vin"""  
    ymm: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'ymm', 'style': 'form', 'explode': True }})
    r"""Year-Make-Model for which sales count is to be searched, pipe seperated like ymm=2015|ford|f-150"""  
    ymmt: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'ymmt', 'style': 'form', 'explode': True }})
    r"""Year-Make-Model-Trim for which sales count is to be searched, pipe seperated like ymmt=2015|ford|f-150|platinum"""  
    

@dataclasses.dataclass
class GetSalesCountResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    sales: Optional[shared_sales.Sales] = dataclasses.field(default=None)
    r"""Sales count for given parameters"""  
    