"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import imageproperties as shared_imageproperties
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateImagePropertiesRequest:
    r"""Update the properties of an Image."""
    
    fields_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fields'), 'exclude': lambda f: f is None }})
    r"""The fields that should be updated. At least one field must be specified. The root `imageProperties` is implied and should not be specified. A single `\\"*\\"` can be used as short-hand for listing every field. For example to update the image outline color, set `fields` to `\\"outline.outlineFill.solidFill.color\\"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset."""  
    image_properties: Optional[shared_imageproperties.ImageProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageProperties'), 'exclude': lambda f: f is None }})
    r"""The properties of the Image."""  
    object_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('objectId'), 'exclude': lambda f: f is None }})
    r"""The object ID of the image the updates are applied to."""  
    