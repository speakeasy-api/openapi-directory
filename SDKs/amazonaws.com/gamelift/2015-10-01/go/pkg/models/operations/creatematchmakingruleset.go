// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateMatchmakingRuleSetXAmzTargetEnum
type CreateMatchmakingRuleSetXAmzTargetEnum string

const (
	CreateMatchmakingRuleSetXAmzTargetEnumGameLiftCreateMatchmakingRuleSet CreateMatchmakingRuleSetXAmzTargetEnum = "GameLift.CreateMatchmakingRuleSet"
)

func (e *CreateMatchmakingRuleSetXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GameLift.CreateMatchmakingRuleSet":
		*e = CreateMatchmakingRuleSetXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateMatchmakingRuleSetXAmzTargetEnum: %s", s)
	}
}

type CreateMatchmakingRuleSetRequest struct {
	CreateMatchmakingRuleSetInput shared.CreateMatchmakingRuleSetInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                 *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256             *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                      *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken             *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                 *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders             *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                    CreateMatchmakingRuleSetXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateMatchmakingRuleSetResponse struct {
	ContentType string
	// Success
	CreateMatchmakingRuleSetOutput *shared.CreateMatchmakingRuleSetOutput
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// TaggingFailedException
	TaggingFailedException interface{}
	// UnsupportedRegionException
	UnsupportedRegionException interface{}
}
