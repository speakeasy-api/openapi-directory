/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AllEntityTypeEnum } from "./allentitytypeenum";
import { SortByClause } from "./sortbyclause";
import { TimeRange } from "./timerange";
import { Expose, Type } from "class-transformer";

/**
 * Search Request
 */
export class SearchRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cursor" })
  cursor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "entity_type" })
  entityType?: AllEntityTypeEnum;

  /**
   * query filter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filter" })
  filter?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "sort_by" })
  @Type(() => SortByClause)
  sortBy?: SortByClause;

  @SpeakeasyMetadata()
  @Expose({ name: "time_range" })
  @Type(() => TimeRange)
  timeRange?: TimeRange;
}
