"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import four_hundred_and_oneresponse as shared_four_hundred_and_oneresponse
from ..shared import security as shared_security
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class UnliWithoutApplicationnkApplicationSecurity:
    
    basic_auth: Optional[shared_security.SchemeBasicAuth] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic' }})  
    bearer_auth: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    
class UnliWithoutApplicationnkApplicationProviderEnum(str, Enum):
    r"""Provider of the account you want to unlink an application from"""
    MESSENGER = 'messenger'
    VIBER_SERVICE_MSG = 'viber_service_msg'
    WHATSAPP = 'whatsapp'


@dataclasses.dataclass
class UnliWithoutApplicationnkApplicationRequest:
    
    application_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'application_id', 'style': 'simple', 'explode': False }})
    r"""Id of the application you want to unlink"""  
    external_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'external_id', 'style': 'simple', 'explode': False }})
    r"""External id of the account you want to unlink an application from"""  
    provider: UnliWithoutApplicationnkApplicationProviderEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'provider', 'style': 'simple', 'explode': False }})
    r"""Provider of the account you want to unlink an application from"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UnliWithoutApplicationnkApplication409ApplicationJSON:
    r"""Conflict."""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""The application is not linked or doesn't exist."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UnliWithoutApplicationnkApplication403ApplicationJSON:
    r"""Forbidden."""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class UnliWithoutApplicationnkApplicationResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    four_hundred_and_one_response: Optional[shared_four_hundred_and_oneresponse.FourHundredAndOneResponse] = dataclasses.field(default=None)
    r"""Unauthorized."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    unli_without_applicationnk_application_403_application_json_object: Optional[UnliWithoutApplicationnkApplication403ApplicationJSON] = dataclasses.field(default=None)
    r"""Forbidden."""  
    unli_without_applicationnk_application_409_application_json_object: Optional[UnliWithoutApplicationnkApplication409ApplicationJSON] = dataclasses.field(default=None)
    r"""Conflict."""  
    