"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudcontactcenterinsightsv1analysis as shared_googlecloudcontactcenterinsightsv1analysis
from ..shared import googlecloudcontactcenterinsightsv1conversationcallmetadata as shared_googlecloudcontactcenterinsightsv1conversationcallmetadata
from ..shared import googlecloudcontactcenterinsightsv1conversationdatasource as shared_googlecloudcontactcenterinsightsv1conversationdatasource
from ..shared import googlecloudcontactcenterinsightsv1conversationtranscript as shared_googlecloudcontactcenterinsightsv1conversationtranscript
from ..shared import googlecloudcontactcenterinsightsv1dialogflowintent as shared_googlecloudcontactcenterinsightsv1dialogflowintent
from ..shared import googlecloudcontactcenterinsightsv1runtimeannotation as shared_googlecloudcontactcenterinsightsv1runtimeannotation
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudContactcenterinsightsV1ConversationMediumEnum(str, Enum):
    r"""Immutable. The conversation medium, if unspecified will default to PHONE_CALL."""
    MEDIUM_UNSPECIFIED = 'MEDIUM_UNSPECIFIED'
    PHONE_CALL = 'PHONE_CALL'
    CHAT = 'CHAT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudContactcenterinsightsV1Conversation:
    r"""The conversation resource."""
    
    agent_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('agentId'), 'exclude': lambda f: f is None }})
    r"""An opaque, user-specified string representing the human agent who handled the conversation."""  
    call_metadata: Optional[shared_googlecloudcontactcenterinsightsv1conversationcallmetadata.GoogleCloudContactcenterinsightsV1ConversationCallMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callMetadata'), 'exclude': lambda f: f is None }})
    r"""Call-specific metadata."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time at which the conversation was created."""  
    data_source: Optional[shared_googlecloudcontactcenterinsightsv1conversationdatasource.GoogleCloudContactcenterinsightsV1ConversationDataSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataSource'), 'exclude': lambda f: f is None }})
    r"""The conversation source, which is a combination of transcript and audio."""  
    dialogflow_intents: Optional[dict[str, shared_googlecloudcontactcenterinsightsv1dialogflowintent.GoogleCloudContactcenterinsightsV1DialogflowIntent]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dialogflowIntents'), 'exclude': lambda f: f is None }})
    r"""Output only. All the matched Dialogflow intents in the call. The key corresponds to a Dialogflow intent, format: projects/{project}/agent/{agent}/intents/{intent}"""  
    duration: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('duration'), 'exclude': lambda f: f is None }})
    r"""Output only. The duration of the conversation."""  
    expire_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expireTime'), 'exclude': lambda f: f is None }})
    r"""The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry."""  
    language_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('languageCode'), 'exclude': lambda f: f is None }})
    r"""A user-specified language code for the conversation."""  
    latest_analysis: Optional[shared_googlecloudcontactcenterinsightsv1analysis.GoogleCloudContactcenterinsightsV1Analysis] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('latestAnalysis'), 'exclude': lambda f: f is None }})
    r"""The analysis resource."""  
    medium: Optional[GoogleCloudContactcenterinsightsV1ConversationMediumEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('medium'), 'exclude': lambda f: f is None }})
    r"""Immutable. The conversation medium, if unspecified will default to PHONE_CALL."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}"""  
    obfuscated_user_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('obfuscatedUserId'), 'exclude': lambda f: f is None }})
    r"""Obfuscated user ID which the customer sent to us."""  
    runtime_annotations: Optional[list[shared_googlecloudcontactcenterinsightsv1runtimeannotation.GoogleCloudContactcenterinsightsV1RuntimeAnnotation]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('runtimeAnnotations'), 'exclude': lambda f: f is None }})
    r"""Output only. The annotations that were generated during the customer and agent interaction."""  
    start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'exclude': lambda f: f is None }})
    r"""The time at which the conversation started."""  
    transcript: Optional[shared_googlecloudcontactcenterinsightsv1conversationtranscript.GoogleCloudContactcenterinsightsV1ConversationTranscript] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transcript'), 'exclude': lambda f: f is None }})
    r"""A message representing the transcript of a conversation."""  
    ttl: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ttl'), 'exclude': lambda f: f is None }})
    r"""Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time."""  
    turn_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('turnCount'), 'exclude': lambda f: f is None }})
    r"""Output only. The number of turns in the conversation."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The most recent time at which the conversation was updated."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudContactcenterinsightsV1ConversationInput:
    r"""The conversation resource."""
    
    agent_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('agentId'), 'exclude': lambda f: f is None }})
    r"""An opaque, user-specified string representing the human agent who handled the conversation."""  
    call_metadata: Optional[shared_googlecloudcontactcenterinsightsv1conversationcallmetadata.GoogleCloudContactcenterinsightsV1ConversationCallMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callMetadata'), 'exclude': lambda f: f is None }})
    r"""Call-specific metadata."""  
    data_source: Optional[shared_googlecloudcontactcenterinsightsv1conversationdatasource.GoogleCloudContactcenterinsightsV1ConversationDataSourceInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataSource'), 'exclude': lambda f: f is None }})
    r"""The conversation source, which is a combination of transcript and audio."""  
    expire_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expireTime'), 'exclude': lambda f: f is None }})
    r"""The time at which this conversation should expire. After this time, the conversation data and any associated analyses will be deleted."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""A map for the user to specify any custom fields. A maximum of 20 labels per conversation is allowed, with a maximum of 256 characters per entry."""  
    language_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('languageCode'), 'exclude': lambda f: f is None }})
    r"""A user-specified language code for the conversation."""  
    latest_analysis: Optional[shared_googlecloudcontactcenterinsightsv1analysis.GoogleCloudContactcenterinsightsV1AnalysisInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('latestAnalysis'), 'exclude': lambda f: f is None }})
    r"""The analysis resource."""  
    medium: Optional[GoogleCloudContactcenterinsightsV1ConversationMediumEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('medium'), 'exclude': lambda f: f is None }})
    r"""Immutable. The conversation medium, if unspecified will default to PHONE_CALL."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Immutable. The resource name of the conversation. Format: projects/{project}/locations/{location}/conversations/{conversation}"""  
    obfuscated_user_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('obfuscatedUserId'), 'exclude': lambda f: f is None }})
    r"""Obfuscated user ID which the customer sent to us."""  
    start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'exclude': lambda f: f is None }})
    r"""The time at which the conversation started."""  
    transcript: Optional[shared_googlecloudcontactcenterinsightsv1conversationtranscript.GoogleCloudContactcenterinsightsV1ConversationTranscript] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transcript'), 'exclude': lambda f: f is None }})
    r"""A message representing the transcript of a conversation."""  
    ttl: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ttl'), 'exclude': lambda f: f is None }})
    r"""Input only. The TTL for this resource. If specified, then this TTL will be used to calculate the expire time."""  
    