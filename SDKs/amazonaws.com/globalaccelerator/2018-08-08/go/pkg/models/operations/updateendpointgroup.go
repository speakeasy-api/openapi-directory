// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateEndpointGroupXAmzTargetEnum
type UpdateEndpointGroupXAmzTargetEnum string

const (
	UpdateEndpointGroupXAmzTargetEnumGlobalAcceleratorV20180706UpdateEndpointGroup UpdateEndpointGroupXAmzTargetEnum = "GlobalAccelerator_V20180706.UpdateEndpointGroup"
)

func (e *UpdateEndpointGroupXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GlobalAccelerator_V20180706.UpdateEndpointGroup":
		*e = UpdateEndpointGroupXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateEndpointGroupXAmzTargetEnum: %s", s)
	}
}

type UpdateEndpointGroupRequest struct {
	UpdateEndpointGroupRequest shared.UpdateEndpointGroupRequest `request:"mediaType=application/json"`
	XAmzAlgorithm              *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                 UpdateEndpointGroupXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateEndpointGroupResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// EndpointGroupNotFoundException
	EndpointGroupNotFoundException interface{}
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// Success
	UpdateEndpointGroupResponse *shared.UpdateEndpointGroupResponse
}
