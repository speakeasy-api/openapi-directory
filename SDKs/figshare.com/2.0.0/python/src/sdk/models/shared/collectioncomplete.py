"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import author as shared_author
from ..shared import category as shared_category
from ..shared import customarticlefield as shared_customarticlefield
from ..shared import fundinginformation as shared_fundinginformation
from ..shared import timeline as shared_timeline
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CollectionComplete:
    r"""OK. Collection representation"""
    
    articles_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('articles_count') }})
    r"""Number of articles in collection"""  
    authors: list[shared_author.Author] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authors') }})
    r"""List of collection authors"""  
    categories: list[shared_category.Category] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('categories') }})
    r"""List of collection categories"""  
    citation: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('citation') }})
    r"""Collection citation"""  
    created_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_date') }})
    r"""Date when collection was created"""  
    custom_fields: list[shared_customarticlefield.CustomArticleField] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('custom_fields') }})
    r"""Collection custom fields"""  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})
    r"""Collection description"""  
    doi: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('doi') }})
    r"""Collection DOI"""  
    funding: list[shared_fundinginformation.FundingInformation] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('funding') }})
    r"""Full Collection funding information"""  
    group_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('group_id') }})
    r"""Collection group"""  
    group_resource_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('group_resource_id') }})
    r"""Collection group resource id"""  
    handle: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('handle') }})
    r"""Collection Handle"""  
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Collection id"""  
    institution_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('institution_id') }})
    r"""Collection institution"""  
    modified_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modified_date') }})
    r"""Date when collection was last modified"""  
    public: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('public') }})
    r"""True if collection is published"""  
    published_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('published_date') }})
    r"""Date when collection was published"""  
    references: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('references') }})
    r"""List of collection references"""  
    resource_doi: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resource_doi') }})
    r"""Collection resource doi"""  
    resource_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resource_id') }})
    r"""Collection resource id"""  
    resource_link: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resource_link') }})
    r"""Collection resource link"""  
    resource_title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resource_title') }})
    r"""Collection resource title"""  
    resource_version: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resource_version') }})
    r"""Collection resource version"""  
    tags: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tags') }})
    r"""List of collection tags"""  
    timeline: shared_timeline.Timeline = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeline') }})  
    title: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title') }})
    r"""Collection title"""  
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})
    r"""Api endpoint"""  
    version: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version') }})
    r"""Collection version"""  
    