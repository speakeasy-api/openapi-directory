// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AnimationFadeFadeTypeEnum - Required. Type of fade animation: `FADE_IN` or `FADE_OUT`.
type AnimationFadeFadeTypeEnum string

const (
	AnimationFadeFadeTypeEnumFadeTypeUnspecified AnimationFadeFadeTypeEnum = "FADE_TYPE_UNSPECIFIED"
	AnimationFadeFadeTypeEnumFadeIn              AnimationFadeFadeTypeEnum = "FADE_IN"
	AnimationFadeFadeTypeEnumFadeOut             AnimationFadeFadeTypeEnum = "FADE_OUT"
)

func (e AnimationFadeFadeTypeEnum) ToPointer() *AnimationFadeFadeTypeEnum {
	return &e
}

func (e *AnimationFadeFadeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FADE_TYPE_UNSPECIFIED":
		fallthrough
	case "FADE_IN":
		fallthrough
	case "FADE_OUT":
		*e = AnimationFadeFadeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnimationFadeFadeTypeEnum: %v", v)
	}
}

// AnimationFade - Display overlay object with fade animation.
type AnimationFade struct {
	// The time to end the fade animation, in seconds. Default: `start_time_offset` + 1s
	EndTimeOffset *string `json:"endTimeOffset,omitempty"`
	// Required. Type of fade animation: `FADE_IN` or `FADE_OUT`.
	FadeType *AnimationFadeFadeTypeEnum `json:"fadeType,omitempty"`
	// The time to start the fade animation, in seconds. Default: 0
	StartTimeOffset *string `json:"startTimeOffset,omitempty"`
	// 2D normalized coordinates. Default: `{0.0, 0.0}`
	Xy *NormalizedCoordinate `json:"xy,omitempty"`
}
