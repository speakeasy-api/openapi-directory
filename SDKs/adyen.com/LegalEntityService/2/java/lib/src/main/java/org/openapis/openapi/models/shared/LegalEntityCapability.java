/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class LegalEntityCapability {
    /**
     * Indicates whether the capability is allowed. Adyen sets this to **true** if the verification is successful 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowed")
    public Boolean allowed;
    public LegalEntityCapability withAllowed(Boolean allowed) {
        this.allowed = allowed;
        return this;
    }
    
    /**
     * The capability level that is allowed for the legal entity.
     * 
     * Possible values: **notApplicable**, **low**, **medium**, **high**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowedLevel")
    public LegalEntityCapabilityAllowedLevelEnum allowedLevel;
    public LegalEntityCapability withAllowedLevel(LegalEntityCapabilityAllowedLevelEnum allowedLevel) {
        this.allowedLevel = allowedLevel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowedSettings")
    public CapabilitySettings allowedSettings;
    public LegalEntityCapability withAllowedSettings(CapabilitySettings allowedSettings) {
        this.allowedSettings = allowedSettings;
        return this;
    }
    
    /**
     * Contains verification errors and the actions that you can take to resolve them.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("problems")
    public CapabilityProblem[] problems;
    public LegalEntityCapability withProblems(CapabilityProblem[] problems) {
        this.problems = problems;
        return this;
    }
    
    /**
     * Indicates whether the capability is requested. To check whether the Legal Entity is permitted to use the capability, 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requested")
    public Boolean requested;
    public LegalEntityCapability withRequested(Boolean requested) {
        this.requested = requested;
        return this;
    }
    
    /**
     * The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.
     * 
     * Possible values: **notApplicable**, **low**, **medium**, **high**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestedLevel")
    public LegalEntityCapabilityRequestedLevelEnum requestedLevel;
    public LegalEntityCapability withRequestedLevel(LegalEntityCapabilityRequestedLevelEnum requestedLevel) {
        this.requestedLevel = requestedLevel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestedSettings")
    public CapabilitySettings requestedSettings;
    public LegalEntityCapability withRequestedSettings(CapabilitySettings requestedSettings) {
        this.requestedSettings = requestedSettings;
        return this;
    }
    
    /**
     * Capability status for transfer instruments associated with legal entity
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferInstruments")
    public SupportingEntityCapability[] transferInstruments;
    public LegalEntityCapability withTransferInstruments(SupportingEntityCapability[] transferInstruments) {
        this.transferInstruments = transferInstruments;
        return this;
    }
    
    /**
     * The status of the verification checks for the capability.
     * 
     * Possible values:
     * 
     * * **pending**: Adyen is running the verification.
     * 
     * * **invalid**: The verification failed. Check if the `errors` array contains more information.
     * 
     * * **valid**: The verification has been successfully completed.
     * 
     * * **rejected**: Adyen has verified the information, but found reasons to not allow the capability.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verificationStatus")
    public String verificationStatus;
    public LegalEntityCapability withVerificationStatus(String verificationStatus) {
        this.verificationStatus = verificationStatus;
        return this;
    }
    
}
