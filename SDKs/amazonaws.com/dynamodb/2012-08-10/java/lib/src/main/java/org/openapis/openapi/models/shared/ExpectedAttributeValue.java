/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ExpectedAttributeValue - &lt;p&gt;Represents a condition to be compared with an attribute value. This condition can be used with &lt;code&gt;DeleteItem&lt;/code&gt;, &lt;code&gt;PutItem&lt;/code&gt;, or &lt;code&gt;UpdateItem&lt;/code&gt; operations; if the comparison evaluates to true, the operation succeeds; if not, the operation fails. You can use &lt;code&gt;ExpectedAttributeValue&lt;/code&gt; in one of two different ways:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Use &lt;code&gt;AttributeValueList&lt;/code&gt; to specify one or more values to compare against an attribute. Use &lt;code&gt;ComparisonOperator&lt;/code&gt; to specify how you want to perform the comparison. If the comparison evaluates to true, then the conditional operation succeeds.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Use &lt;code&gt;Value&lt;/code&gt; to specify a value that DynamoDB will compare against an attribute. If the values match, then &lt;code&gt;ExpectedAttributeValue&lt;/code&gt; evaluates to true and the conditional operation succeeds. Optionally, you can also set &lt;code&gt;Exists&lt;/code&gt; to false, indicating that you &lt;i&gt;do not&lt;/i&gt; expect to find the attribute value in the table. In this case, the conditional operation succeeds only if the comparison evaluates to false.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt; &lt;code&gt;Value&lt;/code&gt; and &lt;code&gt;Exists&lt;/code&gt; are incompatible with &lt;code&gt;AttributeValueList&lt;/code&gt; and &lt;code&gt;ComparisonOperator&lt;/code&gt;. Note that if you use both sets of parameters at once, DynamoDB will return a &lt;code&gt;ValidationException&lt;/code&gt; exception.&lt;/p&gt;
 */
public class ExpectedAttributeValue {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AttributeValueList")
    public AttributeValue[] attributeValueList;

    public ExpectedAttributeValue withAttributeValueList(AttributeValue[] attributeValueList) {
        this.attributeValueList = attributeValueList;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ComparisonOperator")
    public ComparisonOperatorEnum comparisonOperator;

    public ExpectedAttributeValue withComparisonOperator(ComparisonOperatorEnum comparisonOperator) {
        this.comparisonOperator = comparisonOperator;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Exists")
    public Boolean exists;

    public ExpectedAttributeValue withExists(Boolean exists) {
        this.exists = exists;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Value")
    public AttributeValue value;

    public ExpectedAttributeValue withValue(AttributeValue value) {
        this.value = value;
        return this;
    }
    
    public ExpectedAttributeValue(){}
}
