/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ForumGetTopicsPagedRequest extends SpeakeasyBase {
  /**
   * A category filter
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=categoryFilter",
  })
  categoryFilter: number;

  /**
   * The group, if any.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=group",
  })
  group: number;

  /**
   * Comma seperated list of locales posts must match to return in the result list. Default 'en'
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=locales",
  })
  locales?: string;

  /**
   * Zero paged page number
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=page",
  })
  page: number;

  /**
   * Unused
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=pageSize",
  })
  pageSize: number;

  /**
   * A date filter.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=quickDate",
  })
  quickDate: number;

  /**
   * The sort mode.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=sort",
  })
  sort: number;

  /**
   * The tags to search, if any.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=tagstring",
  })
  tagstring?: string;
}

/**
 * Look at the Response property for more information about the nature of this response
 */
export class ForumGetTopicsPaged200Wildcard extends SpeakeasyBase {
  @SpeakeasyMetadata()
  detailedErrorTrace?: string;

  @SpeakeasyMetadata()
  errorCode?: number;

  @SpeakeasyMetadata()
  errorStatus?: string;

  @SpeakeasyMetadata()
  message?: string;

  @SpeakeasyMetadata()
  messageData?: Record<string, string>;

  @SpeakeasyMetadata()
  response?: shared.ForumPostSearchResponse;

  @SpeakeasyMetadata()
  throttleSeconds?: number;
}

export class ForumGetTopicsPagedResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
