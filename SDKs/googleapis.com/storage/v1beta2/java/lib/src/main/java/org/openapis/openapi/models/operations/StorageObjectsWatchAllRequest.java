/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class StorageObjectsWatchAllRequest {
    @SpeakeasyMetadata("request:mediaType=application/json")
    public org.openapis.openapi.models.shared.Channel channel;

    public StorageObjectsWatchAllRequest withChannel(org.openapis.openapi.models.shared.Channel channel) {
        this.channel = channel;
        return this;
    }
    
    /**
     * Data format for the response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alt")
    public org.openapis.openapi.models.shared.AltEnum alt;

    public StorageObjectsWatchAllRequest withAlt(org.openapis.openapi.models.shared.AltEnum alt) {
        this.alt = alt;
        return this;
    }
    
    /**
     * Name of the bucket in which to look for objects.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=bucket")
    public String bucket;

    public StorageObjectsWatchAllRequest withBucket(String bucket) {
        this.bucket = bucket;
        return this;
    }
    
    /**
     * Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=delimiter")
    public String delimiter;

    public StorageObjectsWatchAllRequest withDelimiter(String delimiter) {
        this.delimiter = delimiter;
        return this;
    }
    
    /**
     * Selector specifying which fields to include in a partial response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;

    public StorageObjectsWatchAllRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;

    public StorageObjectsWatchAllRequest withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=maxResults")
    public Long maxResults;

    public StorageObjectsWatchAllRequest withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * OAuth 2.0 token for the current user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oauth_token")
    public String oauthToken;

    public StorageObjectsWatchAllRequest withOauthToken(String oauthToken) {
        this.oauthToken = oauthToken;
        return this;
    }
    
    /**
     * A previously-returned page token representing part of the larger set of results to view.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=pageToken")
    public String pageToken;

    public StorageObjectsWatchAllRequest withPageToken(String pageToken) {
        this.pageToken = pageToken;
        return this;
    }
    
    /**
     * Filter results to objects whose names begin with this prefix.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prefix")
    public String prefix;

    public StorageObjectsWatchAllRequest withPrefix(String prefix) {
        this.prefix = prefix;
        return this;
    }
    
    /**
     * Returns response with indentations and line breaks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prettyPrint")
    public Boolean prettyPrint;

    public StorageObjectsWatchAllRequest withPrettyPrint(Boolean prettyPrint) {
        this.prettyPrint = prettyPrint;
        return this;
    }
    
    /**
     * Set of properties to return. Defaults to noAcl.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=projection")
    public StorageObjectsWatchAllProjectionEnum projection;

    public StorageObjectsWatchAllRequest withProjection(StorageObjectsWatchAllProjectionEnum projection) {
        this.projection = projection;
        return this;
    }
    
    /**
     * An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=quotaUser")
    public String quotaUser;

    public StorageObjectsWatchAllRequest withQuotaUser(String quotaUser) {
        this.quotaUser = quotaUser;
        return this;
    }
    
    /**
     * Deprecated. Please use quotaUser instead.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=userIp")
    public String userIp;

    public StorageObjectsWatchAllRequest withUserIp(String userIp) {
        this.userIp = userIp;
        return this;
    }
    
    /**
     * If true, lists all versions of a file as distinct results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=versions")
    public Boolean versions;

    public StorageObjectsWatchAllRequest withVersions(Boolean versions) {
        this.versions = versions;
        return this;
    }
    
    public StorageObjectsWatchAllRequest(@JsonProperty("bucket") String bucket) {
        this.bucket = bucket;
  }
}
