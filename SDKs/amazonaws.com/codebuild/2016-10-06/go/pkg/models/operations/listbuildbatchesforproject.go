// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListBuildBatchesForProjectXAmzTargetEnum
type ListBuildBatchesForProjectXAmzTargetEnum string

const (
	ListBuildBatchesForProjectXAmzTargetEnumCodeBuild20161006ListBuildBatchesForProject ListBuildBatchesForProjectXAmzTargetEnum = "CodeBuild_20161006.ListBuildBatchesForProject"
)

func (e ListBuildBatchesForProjectXAmzTargetEnum) ToPointer() *ListBuildBatchesForProjectXAmzTargetEnum {
	return &e
}

func (e *ListBuildBatchesForProjectXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodeBuild_20161006.ListBuildBatchesForProject":
		*e = ListBuildBatchesForProjectXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBuildBatchesForProjectXAmzTargetEnum: %v", v)
	}
}

type ListBuildBatchesForProjectRequest struct {
	ListBuildBatchesForProjectInput shared.ListBuildBatchesForProjectInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      ListBuildBatchesForProjectXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListBuildBatchesForProjectResponse struct {
	ContentType string
	// InvalidInputException
	InvalidInputException interface{}
	// Success
	ListBuildBatchesForProjectOutput *shared.ListBuildBatchesForProjectOutput
	StatusCode                       int
	RawResponse                      *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
