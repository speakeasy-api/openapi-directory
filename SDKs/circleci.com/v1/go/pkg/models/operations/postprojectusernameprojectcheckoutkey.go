// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PostProjectUsernameProjectCheckoutKeyPathParams struct {
	// XXXXXXXXX
	//
	Project string `pathParam:"style=simple,explode=false,name=project"`
	// XXXXXXXXX
	//
	Username string `pathParam:"style=simple,explode=false,name=username"`
}

// PostProjectUsernameProjectCheckoutKeyRequestBodyEnum - The type of key to create. Can be 'deploy-key' or 'github-user-key'.
type PostProjectUsernameProjectCheckoutKeyRequestBodyEnum string

const (
	PostProjectUsernameProjectCheckoutKeyRequestBodyEnumDeployKey     PostProjectUsernameProjectCheckoutKeyRequestBodyEnum = "deploy-key"
	PostProjectUsernameProjectCheckoutKeyRequestBodyEnumGithubUserKey PostProjectUsernameProjectCheckoutKeyRequestBodyEnum = "github-user-key"
)

func (e *PostProjectUsernameProjectCheckoutKeyRequestBodyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "deploy-key":
		fallthrough
	case "github-user-key":
		*e = PostProjectUsernameProjectCheckoutKeyRequestBodyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostProjectUsernameProjectCheckoutKeyRequestBodyEnum: %s", s)
	}
}

type PostProjectUsernameProjectCheckoutKeyRequest struct {
	PathParams PostProjectUsernameProjectCheckoutKeyPathParams
	// The type of key to create. Can be 'deploy-key' or 'github-user-key'.
	//
	Request *PostProjectUsernameProjectCheckoutKeyRequestBodyEnum `request:"mediaType=application/json"`
}

type PostProjectUsernameProjectCheckoutKeyResponse struct {
	ContentType string
	// checkout key
	Key         *shared.Key
	StatusCode  int
	RawResponse *http.Response
}
