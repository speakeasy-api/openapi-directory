// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListBookkeepingAccountsRequest struct {
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	Limit  *int64  `queryParam:"style=form,explode=true,name=limit"`
}

type ListBookkeepingAccountsDefaultApplicationJSON13StatusEnum int64

const (
	ListBookkeepingAccountsDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ListBookkeepingAccountsDefaultApplicationJSON13StatusEnum = 429
)

func (e ListBookkeepingAccountsDefaultApplicationJSON13StatusEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = ListBookkeepingAccountsDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON13TypeEnum string

const (
	ListBookkeepingAccountsDefaultApplicationJSON13TypeEnumRateLimitedError ListBookkeepingAccountsDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e ListBookkeepingAccountsDefaultApplicationJSON13TypeEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = ListBookkeepingAccountsDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON13 struct {
	Detail     string                                                    `json:"detail"`
	RetryAfter *int64                                                    `json:"retry_after,omitempty"`
	Status     ListBookkeepingAccountsDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                    `json:"title"`
	Type       ListBookkeepingAccountsDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ListBookkeepingAccountsDefaultApplicationJSON12StatusEnum int64

const (
	ListBookkeepingAccountsDefaultApplicationJSON12StatusEnumFourHundredAndThree ListBookkeepingAccountsDefaultApplicationJSON12StatusEnum = 403
)

func (e ListBookkeepingAccountsDefaultApplicationJSON12StatusEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListBookkeepingAccountsDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON12TypeEnum string

const (
	ListBookkeepingAccountsDefaultApplicationJSON12TypeEnumPrivateFeatureError ListBookkeepingAccountsDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e ListBookkeepingAccountsDefaultApplicationJSON12TypeEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = ListBookkeepingAccountsDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON12 struct {
	Detail string                                                    `json:"detail"`
	Status ListBookkeepingAccountsDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ListBookkeepingAccountsDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ListBookkeepingAccountsDefaultApplicationJSON11StatusEnum int64

const (
	ListBookkeepingAccountsDefaultApplicationJSON11StatusEnumFourHundredAndFour ListBookkeepingAccountsDefaultApplicationJSON11StatusEnum = 404
)

func (e ListBookkeepingAccountsDefaultApplicationJSON11StatusEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ListBookkeepingAccountsDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON11TypeEnum string

const (
	ListBookkeepingAccountsDefaultApplicationJSON11TypeEnumObjectNotFoundError ListBookkeepingAccountsDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e ListBookkeepingAccountsDefaultApplicationJSON11TypeEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = ListBookkeepingAccountsDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON11 struct {
	Detail string                                                    `json:"detail"`
	Status ListBookkeepingAccountsDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ListBookkeepingAccountsDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ListBookkeepingAccountsDefaultApplicationJSON10StatusEnum int64

const (
	ListBookkeepingAccountsDefaultApplicationJSON10StatusEnumFourHundred ListBookkeepingAccountsDefaultApplicationJSON10StatusEnum = 400
)

func (e ListBookkeepingAccountsDefaultApplicationJSON10StatusEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ListBookkeepingAccountsDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON10TypeEnum string

const (
	ListBookkeepingAccountsDefaultApplicationJSON10TypeEnumMalformedRequestError ListBookkeepingAccountsDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e ListBookkeepingAccountsDefaultApplicationJSON10TypeEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = ListBookkeepingAccountsDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON10 struct {
	Detail string                                                    `json:"detail"`
	Status ListBookkeepingAccountsDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ListBookkeepingAccountsDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ListBookkeepingAccountsDefaultApplicationJSON9StatusEnum int64

const (
	ListBookkeepingAccountsDefaultApplicationJSON9StatusEnumFourHundred ListBookkeepingAccountsDefaultApplicationJSON9StatusEnum = 400
)

func (e ListBookkeepingAccountsDefaultApplicationJSON9StatusEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ListBookkeepingAccountsDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON9TypeEnum string

const (
	ListBookkeepingAccountsDefaultApplicationJSON9TypeEnumInvalidParametersError ListBookkeepingAccountsDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e ListBookkeepingAccountsDefaultApplicationJSON9TypeEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = ListBookkeepingAccountsDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                 `json:"errors"`
	Status ListBookkeepingAccountsDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListBookkeepingAccountsDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ListBookkeepingAccountsDefaultApplicationJSON8StatusEnum int64

const (
	ListBookkeepingAccountsDefaultApplicationJSON8StatusEnumFourHundredAndNine ListBookkeepingAccountsDefaultApplicationJSON8StatusEnum = 409
)

func (e ListBookkeepingAccountsDefaultApplicationJSON8StatusEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ListBookkeepingAccountsDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON8TypeEnum string

const (
	ListBookkeepingAccountsDefaultApplicationJSON8TypeEnumInvalidOperationError ListBookkeepingAccountsDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e ListBookkeepingAccountsDefaultApplicationJSON8TypeEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = ListBookkeepingAccountsDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON8 struct {
	Detail string                                                   `json:"detail"`
	Status ListBookkeepingAccountsDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListBookkeepingAccountsDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ListBookkeepingAccountsDefaultApplicationJSON7StatusEnum int64

const (
	ListBookkeepingAccountsDefaultApplicationJSON7StatusEnumFourHundredAndOne ListBookkeepingAccountsDefaultApplicationJSON7StatusEnum = 401
)

func (e ListBookkeepingAccountsDefaultApplicationJSON7StatusEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = ListBookkeepingAccountsDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON7TypeEnum string

const (
	ListBookkeepingAccountsDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ListBookkeepingAccountsDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e ListBookkeepingAccountsDefaultApplicationJSON7TypeEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = ListBookkeepingAccountsDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON7 struct {
	Detail string                                                   `json:"detail"`
	Status ListBookkeepingAccountsDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListBookkeepingAccountsDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ListBookkeepingAccountsDefaultApplicationJSON6StatusEnum int64

const (
	ListBookkeepingAccountsDefaultApplicationJSON6StatusEnumFiveHundred ListBookkeepingAccountsDefaultApplicationJSON6StatusEnum = 500
)

func (e ListBookkeepingAccountsDefaultApplicationJSON6StatusEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = ListBookkeepingAccountsDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON6TypeEnum string

const (
	ListBookkeepingAccountsDefaultApplicationJSON6TypeEnumInternalServerError ListBookkeepingAccountsDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e ListBookkeepingAccountsDefaultApplicationJSON6TypeEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = ListBookkeepingAccountsDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON6 struct {
	Detail string                                                   `json:"detail"`
	Status ListBookkeepingAccountsDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListBookkeepingAccountsDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ListBookkeepingAccountsDefaultApplicationJSON5StatusEnum int64

const (
	ListBookkeepingAccountsDefaultApplicationJSON5StatusEnumFourHundredAndThree ListBookkeepingAccountsDefaultApplicationJSON5StatusEnum = 403
)

func (e ListBookkeepingAccountsDefaultApplicationJSON5StatusEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListBookkeepingAccountsDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON5TypeEnum string

const (
	ListBookkeepingAccountsDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ListBookkeepingAccountsDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e ListBookkeepingAccountsDefaultApplicationJSON5TypeEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = ListBookkeepingAccountsDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON5 struct {
	Detail string                                                   `json:"detail"`
	Status ListBookkeepingAccountsDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListBookkeepingAccountsDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ListBookkeepingAccountsDefaultApplicationJSON4StatusEnum int64

const (
	ListBookkeepingAccountsDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ListBookkeepingAccountsDefaultApplicationJSON4StatusEnum = 422
)

func (e ListBookkeepingAccountsDefaultApplicationJSON4StatusEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = ListBookkeepingAccountsDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON4TypeEnum string

const (
	ListBookkeepingAccountsDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ListBookkeepingAccountsDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e ListBookkeepingAccountsDefaultApplicationJSON4TypeEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = ListBookkeepingAccountsDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON4 struct {
	Detail string                                                   `json:"detail"`
	Status ListBookkeepingAccountsDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListBookkeepingAccountsDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ListBookkeepingAccountsDefaultApplicationJSON3StatusEnum int64

const (
	ListBookkeepingAccountsDefaultApplicationJSON3StatusEnumFourHundredAndNine ListBookkeepingAccountsDefaultApplicationJSON3StatusEnum = 409
)

func (e ListBookkeepingAccountsDefaultApplicationJSON3StatusEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ListBookkeepingAccountsDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON3TypeEnum string

const (
	ListBookkeepingAccountsDefaultApplicationJSON3TypeEnumIdempotencyConflictError ListBookkeepingAccountsDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e ListBookkeepingAccountsDefaultApplicationJSON3TypeEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = ListBookkeepingAccountsDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON3 struct {
	Detail string                                                   `json:"detail"`
	Status ListBookkeepingAccountsDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListBookkeepingAccountsDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ListBookkeepingAccountsDefaultApplicationJSON2StatusEnum int64

const (
	ListBookkeepingAccountsDefaultApplicationJSON2StatusEnumFourHundredAndThree ListBookkeepingAccountsDefaultApplicationJSON2StatusEnum = 403
)

func (e ListBookkeepingAccountsDefaultApplicationJSON2StatusEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListBookkeepingAccountsDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON2TypeEnum string

const (
	ListBookkeepingAccountsDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ListBookkeepingAccountsDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e ListBookkeepingAccountsDefaultApplicationJSON2TypeEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = ListBookkeepingAccountsDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON2 struct {
	Detail string                                                   `json:"detail"`
	Status ListBookkeepingAccountsDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListBookkeepingAccountsDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ListBookkeepingAccountsDefaultApplicationJSON1StatusEnum int64

const (
	ListBookkeepingAccountsDefaultApplicationJSON1StatusEnumFourHundredAndFour ListBookkeepingAccountsDefaultApplicationJSON1StatusEnum = 404
)

func (e ListBookkeepingAccountsDefaultApplicationJSON1StatusEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ListBookkeepingAccountsDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON1TypeEnum string

const (
	ListBookkeepingAccountsDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ListBookkeepingAccountsDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e ListBookkeepingAccountsDefaultApplicationJSON1TypeEnum) ToPointer() *ListBookkeepingAccountsDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *ListBookkeepingAccountsDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = ListBookkeepingAccountsDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBookkeepingAccountsDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type ListBookkeepingAccountsDefaultApplicationJSON1 struct {
	Detail string                                                   `json:"detail"`
	Status ListBookkeepingAccountsDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ListBookkeepingAccountsDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ListBookkeepingAccountsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Bookkeeping Account List
	BookkeepingAccountList *shared.BookkeepingAccountList
	// Error
	Error interface{}
}
