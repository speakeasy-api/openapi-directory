// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteMLModelXAmzTargetEnum
type DeleteMLModelXAmzTargetEnum string

const (
	DeleteMLModelXAmzTargetEnumAmazonMl20141212DeleteMlModel DeleteMLModelXAmzTargetEnum = "AmazonML_20141212.DeleteMLModel"
)

func (e *DeleteMLModelXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonML_20141212.DeleteMLModel":
		*e = DeleteMLModelXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteMLModelXAmzTargetEnum: %s", s)
	}
}

type DeleteMLModelRequest struct {
	DeleteMLModelInput shared.DeleteMLModelInput   `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         DeleteMLModelXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteMLModelResponse struct {
	ContentType string
	// Success
	DeleteMLModelOutput *shared.DeleteMLModelOutput
	// InternalServerException
	InternalServerException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
