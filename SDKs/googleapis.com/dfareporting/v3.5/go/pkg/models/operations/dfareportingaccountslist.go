// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DfareportingAccountsListSecurity struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DfareportingAccountsListPathParams struct {
	// User profile ID associated with this request.
	ProfileID string `pathParam:"style=simple,explode=false,name=profileId"`
}

// DfareportingAccountsListSortFieldEnum - Field by which to sort the list.
type DfareportingAccountsListSortFieldEnum string

const (
	DfareportingAccountsListSortFieldEnumID   DfareportingAccountsListSortFieldEnum = "ID"
	DfareportingAccountsListSortFieldEnumName DfareportingAccountsListSortFieldEnum = "NAME"
)

func (e *DfareportingAccountsListSortFieldEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ID":
		fallthrough
	case "NAME":
		*e = DfareportingAccountsListSortFieldEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DfareportingAccountsListSortFieldEnum: %s", s)
	}
}

// DfareportingAccountsListSortOrderEnum - Order of sorted results.
type DfareportingAccountsListSortOrderEnum string

const (
	DfareportingAccountsListSortOrderEnumAscending  DfareportingAccountsListSortOrderEnum = "ASCENDING"
	DfareportingAccountsListSortOrderEnumDescending DfareportingAccountsListSortOrderEnum = "DESCENDING"
)

func (e *DfareportingAccountsListSortOrderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ASCENDING":
		fallthrough
	case "DESCENDING":
		*e = DfareportingAccountsListSortOrderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DfareportingAccountsListSortOrderEnum: %s", s)
	}
}

type DfareportingAccountsListQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Select only active accounts. Don't set this field to select both active and non-active accounts.
	Active *bool `queryParam:"style=form,explode=true,name=active"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Select only accounts with these IDs.
	Ids []string `queryParam:"style=form,explode=true,name=ids"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// Maximum number of results to return.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Value of the nextPageToken from the previous result page.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Allows searching for objects by name or ID. Wildcards (*) are allowed. For example, "account*2015" will return objects with names like "account June 2015", "account April 2015", or simply "account 2015". Most of the searches also add wildcards implicitly at the start and the end of the search string. For example, a search string of "account" will match objects with name "my account", "account 2015", or simply "account".
	SearchString *string `queryParam:"style=form,explode=true,name=searchString"`
	// Field by which to sort the list.
	SortField *DfareportingAccountsListSortFieldEnum `queryParam:"style=form,explode=true,name=sortField"`
	// Order of sorted results.
	SortOrder *DfareportingAccountsListSortOrderEnum `queryParam:"style=form,explode=true,name=sortOrder"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type DfareportingAccountsListRequest struct {
	PathParams  DfareportingAccountsListPathParams
	QueryParams DfareportingAccountsListQueryParams
	Security    DfareportingAccountsListSecurity
}

type DfareportingAccountsListResponse struct {
	// Successful response
	AccountsListResponse *shared.AccountsListResponse
	ContentType          string
	StatusCode           int
	RawResponse          *http.Response
}
