// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type TestGetTestRunStateSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type TestGetTestRunStatePathParams struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
	// The ID of the test run
	TestRunID string `pathParam:"style=simple,explode=false,name=test_run_id"`
}

type TestGetTestRunStateRequest struct {
	PathParams TestGetTestRunStatePathParams
	Security   TestGetTestRunStateSecurity
}

// TestGetTestRunStateTestRunState - Current status of a test run
type TestGetTestRunStateTestRunState struct {
	// The exit code that the client should use when exiting. Used for indicating status to the caller of the client.
	// 0: test run completes with no failing tests
	// 1: test run completes with at least one failing test
	// 2: test run failed to complete. Status for test run is unknown
	//
	ExitCode *int64 `json:"exit_code,omitempty"`
	// Multi-line message that describes the status
	Message []string `json:"message,omitempty"`
	// Time (in seconds) that the client should wait for before checking the status again
	WaitTime *int64 `json:"wait_time,omitempty"`
}

type TestGetTestRunStateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	TestRunState *TestGetTestRunStateTestRunState
}
