/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetServerTypesIdRequest extends SpeakeasyBase {
  /**
   * ID of Server Type
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: number;
}

/**
 * Type of cpu
 */
export enum GetServerTypesId200ApplicationJSONServerTypeCpuTypeEnum {
  Shared = "shared",
  Dedicated = "dedicated",
}

/**
 * Hourly costs for a Server type in this Location
 */
export class GetServerTypesId200ApplicationJSONServerTypePricesPriceHourly extends SpeakeasyBase {
  /**
   * Price with VAT added
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gross" })
  gross: string;

  /**
   * Price without VAT
   */
  @SpeakeasyMetadata()
  @Expose({ name: "net" })
  net: string;
}

/**
 * Monthly costs for a Server type in this Location
 */
export class GetServerTypesId200ApplicationJSONServerTypePricesPriceMonthly extends SpeakeasyBase {
  /**
   * Price with VAT added
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gross" })
  gross: string;

  /**
   * Price without VAT
   */
  @SpeakeasyMetadata()
  @Expose({ name: "net" })
  net: string;
}

export class GetServerTypesId200ApplicationJSONServerTypePrices extends SpeakeasyBase {
  /**
   * Name of the Location the price is for
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location: string;

  /**
   * Hourly costs for a Server type in this Location
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price_hourly" })
  @Type(() => GetServerTypesId200ApplicationJSONServerTypePricesPriceHourly)
  priceHourly: GetServerTypesId200ApplicationJSONServerTypePricesPriceHourly;

  /**
   * Monthly costs for a Server type in this Location
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price_monthly" })
  @Type(() => GetServerTypesId200ApplicationJSONServerTypePricesPriceMonthly)
  priceMonthly: GetServerTypesId200ApplicationJSONServerTypePricesPriceMonthly;
}

/**
 * Type of Server boot drive. Local has higher speed. Network has better availability.
 */
export enum GetServerTypesId200ApplicationJSONServerTypeStorageTypeEnum {
  Local = "local",
  Network = "network",
}

export class GetServerTypesId200ApplicationJSONServerType extends SpeakeasyBase {
  /**
   * Number of cpu cores a Server of this type will have
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cores" })
  cores: number;

  /**
   * Type of cpu
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cpu_type" })
  cpuType: GetServerTypesId200ApplicationJSONServerTypeCpuTypeEnum;

  /**
   * True if Server type is deprecated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deprecated" })
  deprecated: boolean;

  /**
   * Description of the Server type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * Disk size a Server of this type will have in GB
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disk" })
  disk: number;

  /**
   * ID of the Server type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Memory a Server of this type will have in GB
   */
  @SpeakeasyMetadata()
  @Expose({ name: "memory" })
  memory: number;

  /**
   * Unique identifier of the Server type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Prices in different Locations
   */
  @SpeakeasyMetadata({
    elemType: GetServerTypesId200ApplicationJSONServerTypePrices,
  })
  @Expose({ name: "prices" })
  @Type(() => GetServerTypesId200ApplicationJSONServerTypePrices)
  prices: GetServerTypesId200ApplicationJSONServerTypePrices[];

  /**
   * Type of Server boot drive. Local has higher speed. Network has better availability.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storage_type" })
  storageType: GetServerTypesId200ApplicationJSONServerTypeStorageTypeEnum;
}

/**
 * The `server_type` key in the reply contains a Server type object with this structure
 */
export class GetServerTypesId200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "server_type" })
  @Type(() => GetServerTypesId200ApplicationJSONServerType)
  serverType: GetServerTypesId200ApplicationJSONServerType;
}

export class GetServerTypesIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The `server_type` key in the reply contains a Server type object with this structure
   */
  @SpeakeasyMetadata()
  getServerTypesId200ApplicationJSONObject?: GetServerTypesId200ApplicationJSON;
}
