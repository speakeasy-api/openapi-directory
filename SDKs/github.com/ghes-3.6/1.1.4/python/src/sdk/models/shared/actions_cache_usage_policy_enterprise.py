"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionsCacheUsagePolicyEnterprise:
    r"""GitHub Actions cache usage policy for an enterprise."""
    
    max_repo_cache_size_limit_in_gb: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_repo_cache_size_limit_in_gb'), 'exclude': lambda f: f is None }})
    r"""For repositories in an enterprise, the maximum value that can be set as the limit for the sum of all caches in a repository, in gigabytes."""  
    repo_cache_size_limit_in_gb: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repo_cache_size_limit_in_gb'), 'exclude': lambda f: f is None }})
    r"""For repositories in an enterprise, the default size limit for the sum of all caches in a repository, in gigabytes."""  
    