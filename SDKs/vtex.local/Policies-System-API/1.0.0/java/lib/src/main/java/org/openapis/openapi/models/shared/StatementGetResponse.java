/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class StatementGetResponse {
    /**
     * Actions that the Policy will execute
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("actions")
    public Object[] actions;
    public StatementGetResponse withActions(Object[] actions) {
        this.actions = actions;
        return this;
    }
    
    /**
     * Condition to activate this policy. This object can have a maximum of ten recursive conditions
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("condition")
    public StatementGetResponseCondition condition;
    public StatementGetResponse withCondition(StatementGetResponseCondition condition) {
        this.condition = condition;
        return this;
    }
    
    /**
     * This field is not functional at the moment. To create a correct request, fill the field with `Allow`
     */
    @JsonProperty("effect")
    public String effect;
    public StatementGetResponse withEffect(String effect) {
        this.effect = effect;
        return this;
    }
    
    /**
     * This operation will determine if all the conditions need to be valid or at least one of them, if the conditions array is not empty.  The possible values to these fields are `None`, `stringEquals`, `stringEqualsIgnoreCase`, `numericEquals`, `numericLessThan`, `numericLessThanEquals`,   `numericGreaterThan`, `numericGreaterThanEquals`, `bool`, `not`, `or`, `and`, `dateTimeUtcGreaterThan`, `dateTimeUtcLessThan`, and `between`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operation")
    public String operation;
    public StatementGetResponse withOperation(String operation) {
        this.operation = operation;
        return this;
    }
    
    /**
     * Scope on which this policy must be evaluated
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource")
    public String resource;
    public StatementGetResponse withResource(String resource) {
        this.resource = resource;
        return this;
    }
    
}
