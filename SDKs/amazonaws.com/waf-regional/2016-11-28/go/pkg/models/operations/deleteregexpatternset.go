// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteRegexPatternSetXAmzTargetEnum
type DeleteRegexPatternSetXAmzTargetEnum string

const (
	DeleteRegexPatternSetXAmzTargetEnumAwswafRegional20161128DeleteRegexPatternSet DeleteRegexPatternSetXAmzTargetEnum = "AWSWAF_Regional_20161128.DeleteRegexPatternSet"
)

func (e DeleteRegexPatternSetXAmzTargetEnum) ToPointer() *DeleteRegexPatternSetXAmzTargetEnum {
	return &e
}

func (e *DeleteRegexPatternSetXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSWAF_Regional_20161128.DeleteRegexPatternSet":
		*e = DeleteRegexPatternSetXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteRegexPatternSetXAmzTargetEnum: %v", v)
	}
}

type DeleteRegexPatternSetRequest struct {
	DeleteRegexPatternSetRequest shared.DeleteRegexPatternSetRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   DeleteRegexPatternSetXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteRegexPatternSetResponse struct {
	ContentType string
	// Success
	DeleteRegexPatternSetResponse *shared.DeleteRegexPatternSetResponse
	StatusCode                    int
	RawResponse                   *http.Response
	// WAFInternalErrorException
	WAFInternalErrorException interface{}
	// WAFInvalidAccountException
	WAFInvalidAccountException interface{}
	// WAFNonEmptyEntityException
	WAFNonEmptyEntityException interface{}
	// WAFNonexistentItemException
	WAFNonexistentItemException interface{}
	// WAFReferencedItemException
	WAFReferencedItemException interface{}
	// WAFStaleDataException
	WAFStaleDataException interface{}
}
