// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTListAccessKeysActionEnum
type POSTListAccessKeysActionEnum string

const (
	POSTListAccessKeysActionEnumListAccessKeys POSTListAccessKeysActionEnum = "ListAccessKeys"
)

func (e POSTListAccessKeysActionEnum) ToPointer() *POSTListAccessKeysActionEnum {
	return &e
}

func (e *POSTListAccessKeysActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ListAccessKeys":
		*e = POSTListAccessKeysActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListAccessKeysActionEnum: %v", v)
	}
}

// POSTListAccessKeysVersionEnum
type POSTListAccessKeysVersionEnum string

const (
	POSTListAccessKeysVersionEnumTwoThousandAndTen0508 POSTListAccessKeysVersionEnum = "2010-05-08"
)

func (e POSTListAccessKeysVersionEnum) ToPointer() *POSTListAccessKeysVersionEnum {
	return &e
}

func (e *POSTListAccessKeysVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = POSTListAccessKeysVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListAccessKeysVersionEnum: %v", v)
	}
}

type POSTListAccessKeysRequest struct {
	Action POSTListAccessKeysActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxItems          *string                       `queryParam:"style=form,explode=true,name=MaxItems"`
	RequestBody       []byte                        `request:"mediaType=text/xml"`
	Version           POSTListAccessKeysVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTListAccessKeysResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
