/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { LimitInfo } from "./limitinfo";
import { Expose, Transform } from "class-transformer";

/**
 * Get Rate Limits Response
 */
export class GetRateLimitsResponse extends SpeakeasyBase {
  /**
   * Map of endpoint rate limits for the Android platform
   */
  @SpeakeasyMetadata({ elemType: LimitInfo })
  @Expose({ name: "android" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, LimitInfo> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], LimitInfo);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  android?: Record<string, LimitInfo>;

  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration: string;

  /**
   * Map of endpoint rate limits for the iOS platform
   */
  @SpeakeasyMetadata({ elemType: LimitInfo })
  @Expose({ name: "ios" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, LimitInfo> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], LimitInfo);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  ios?: Record<string, LimitInfo>;

  /**
   * Map of endpoint rate limits for the server-side platform
   */
  @SpeakeasyMetadata({ elemType: LimitInfo })
  @Expose({ name: "server_side" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, LimitInfo> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], LimitInfo);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  serverSide?: Record<string, LimitInfo>;

  /**
   * Map of endpoint rate limits for the web platform
   */
  @SpeakeasyMetadata({ elemType: LimitInfo })
  @Expose({ name: "web" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, LimitInfo> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], LimitInfo);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  web?: Record<string, LimitInfo>;
}
