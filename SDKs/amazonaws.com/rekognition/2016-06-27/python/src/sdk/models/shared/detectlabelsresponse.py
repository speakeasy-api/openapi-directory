"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import detectlabelsimageproperties as shared_detectlabelsimageproperties
from ..shared import label as shared_label
from ..shared import orientationcorrection_enum as shared_orientationcorrection_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DetectLabelsResponse:
    r"""Success"""
    
    image_properties: Optional[shared_detectlabelsimageproperties.DetectLabelsImageProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ImageProperties'), 'exclude': lambda f: f is None }})  
    label_model_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LabelModelVersion'), 'exclude': lambda f: f is None }})  
    labels: Optional[list[shared_label.Label]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Labels'), 'exclude': lambda f: f is None }})  
    orientation_correction: Optional[shared_orientationcorrection_enum.OrientationCorrectionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OrientationCorrection'), 'exclude': lambda f: f is None }})  
    