<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class ChannelCatalogsProductsOverrides 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Copy channel catalog product value override
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\ConfigureChannelCatalogProductValueOverrideCopyRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\ConfigureChannelCatalogProductValueOverrideCopyResponse
     */
	public function configureChannelCatalogProductValueOverrideCopy(
        \OpenAPI\OpenAPI\Models\Operations\ConfigureChannelCatalogProductValueOverrideCopyRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\ConfigureChannelCatalogProductValueOverrideCopyResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides/copy', \OpenAPI\OpenAPI\Models\Operations\ConfigureChannelCatalogProductValueOverrideCopyRequest::class, $request);
        
        $options = ['http_errors' => false];
        
        $httpResponse = $this->_defaultClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\ConfigureChannelCatalogProductValueOverrideCopyResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 204) {
        }
        else {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->beezUPCommonErrorResponseMessage = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\BeezUPCommonErrorResponseMessage', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Delete a specific channel catalog product value override
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\DeleteChannelCatalogProductValueOverrideRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\DeleteChannelCatalogProductValueOverrideResponse
     */
	public function deleteChannelCatalogProductValueOverride(
        \OpenAPI\OpenAPI\Models\Operations\DeleteChannelCatalogProductValueOverrideRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\DeleteChannelCatalogProductValueOverrideResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides/{channelColumnId}', \OpenAPI\OpenAPI\Models\Operations\DeleteChannelCatalogProductValueOverrideRequest::class, $request);
        
        $options = ['http_errors' => false];
        
        $httpResponse = $this->_defaultClient->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\DeleteChannelCatalogProductValueOverrideResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 204) {
        }
        else {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->beezUPCommonErrorResponseMessage = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\BeezUPCommonErrorResponseMessage', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get channel catalog product value override compatibilities status
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetChannelCatalogProductValueOverrideCopyRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetChannelCatalogProductValueOverrideCopyResponse
     */
	public function getChannelCatalogProductValueOverrideCopy(
        \OpenAPI\OpenAPI\Models\Operations\GetChannelCatalogProductValueOverrideCopyRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetChannelCatalogProductValueOverrideCopyResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides/copy', \OpenAPI\OpenAPI\Models\Operations\GetChannelCatalogProductValueOverrideCopyRequest::class, $request);
        
        $options = ['http_errors' => false];
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetChannelCatalogProductValueOverrideCopyResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 204) {
        }
        else {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->beezUPCommonErrorResponseMessage = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\BeezUPCommonErrorResponseMessage', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Override channel catalog product values
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\OverrideChannelCatalogProductValuesRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\OverrideChannelCatalogProductValuesResponse
     */
	public function overrideChannelCatalogProductValues(
        \OpenAPI\OpenAPI\Models\Operations\OverrideChannelCatalogProductValuesRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\OverrideChannelCatalogProductValuesResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v2/user/channelCatalogs/{channelCatalogId}/products/{productId}/overrides', \OpenAPI\OpenAPI\Models\Operations\OverrideChannelCatalogProductValuesRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "requestBody", "json");
        if ($body === null) {
            throw new \Exception('Request body is required');
        }
        $options = array_merge_recursive($options, $body);
        
        $httpResponse = $this->_defaultClient->request('PUT', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\OverrideChannelCatalogProductValuesResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 204) {
        }
        else {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->beezUPCommonErrorResponseMessage = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\BeezUPCommonErrorResponseMessage', 'json');
            }
        }

        return $response;
    }
}