<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CommandInvocation - An invocation is a copy of a command sent to a specific managed node. A command can apply to one or more managed nodes. A command invocation applies to one managed node. For example, if a user runs <code>SendCommand</code> against three managed nodes, then a command invocation is created for each requested managed node ID. A command invocation returns status and detail information about a command you ran. 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CommandInvocation
{
	#[\JMS\Serializer\Annotation\SerializedName('CloudWatchOutputConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CloudWatchOutputConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CloudWatchOutputConfig $cloudWatchOutputConfig = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('CommandId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $commandId = null;
    
    /**
     * $commandPlugins
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CommandPlugin> $commandPlugins
     */
	#[\JMS\Serializer\Annotation\SerializedName('CommandPlugins')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CommandPlugin>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $commandPlugins = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Comment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comment = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('DocumentName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $documentName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('DocumentVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $documentVersion = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('InstanceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $instanceId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('InstanceName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $instanceName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('NotificationConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NotificationConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NotificationConfig $notificationConfig = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('RequestedDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $requestedDateTime = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ServiceRole')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serviceRole = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('StandardErrorUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $standardErrorUrl = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('StandardOutputUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $standardOutputUrl = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CommandInvocationStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CommandInvocationStatusEnum $status = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('StatusDetails')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $statusDetails = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('TraceOutput')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $traceOutput = null;
    
	public function __construct()
	{
		$this->cloudWatchOutputConfig = null;
		$this->commandId = null;
		$this->commandPlugins = null;
		$this->comment = null;
		$this->documentName = null;
		$this->documentVersion = null;
		$this->instanceId = null;
		$this->instanceName = null;
		$this->notificationConfig = null;
		$this->requestedDateTime = null;
		$this->serviceRole = null;
		$this->standardErrorUrl = null;
		$this->standardOutputUrl = null;
		$this->status = null;
		$this->statusDetails = null;
		$this->traceOutput = null;
	}
}
