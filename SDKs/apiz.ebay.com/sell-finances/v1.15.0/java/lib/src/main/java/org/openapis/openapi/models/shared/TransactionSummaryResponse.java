/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TransactionSummaryResponse - This type is the base response type of the &lt;strong&gt;getTransactionSummary&lt;/strong&gt; method, and based on the filters that are used in the &lt;strong&gt;getTransactionSummary&lt;/strong&gt; call URI, the response may include  total count and amount of the seller's sales and credits, total count and amount of buyer refunds, and total count and amount of seller payment holds.
 */
public class TransactionSummaryResponse {
    /**
     * This type is used to express the dollar value and currency used for any transaction retrieved with the &lt;strong&gt;Finances API&lt;/strong&gt;, including an order total, a seller payout, a buyer refund, or a seller credit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adjustmentAmount")
    public Amount adjustmentAmount;

    public TransactionSummaryResponse withAdjustmentAmount(Amount adjustmentAmount) {
        this.adjustmentAmount = adjustmentAmount;
        return this;
    }
    
    /**
     * The credit debit sign indicator for adjustment. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adjustmentBookingEntry")
    public String adjustmentBookingEntry;

    public TransactionSummaryResponse withAdjustmentBookingEntry(String adjustmentBookingEntry) {
        this.adjustmentBookingEntry = adjustmentBookingEntry;
        return this;
    }
    
    /**
     * Total adjustment count for given payee within a specified period.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adjustmentCount")
    public Integer adjustmentCount;

    public TransactionSummaryResponse withAdjustmentCount(Integer adjustmentCount) {
        this.adjustmentCount = adjustmentCount;
        return this;
    }
    
    /**
     * This type is used to express the dollar value and currency used for any transaction retrieved with the &lt;strong&gt;Finances API&lt;/strong&gt;, including an order total, a seller payout, a buyer refund, or a seller credit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("balanceTransferAmount")
    public Amount balanceTransferAmount;

    public TransactionSummaryResponse withBalanceTransferAmount(Amount balanceTransferAmount) {
        this.balanceTransferAmount = balanceTransferAmount;
        return this;
    }
    
    /**
     * The credit debit sign indicator for the balance transfer. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("balanceTransferBookingEntry")
    public String balanceTransferBookingEntry;

    public TransactionSummaryResponse withBalanceTransferBookingEntry(String balanceTransferBookingEntry) {
        this.balanceTransferBookingEntry = balanceTransferBookingEntry;
        return this;
    }
    
    /**
     * The total balance transfer count for given payee within the specified period.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("balanceTransferCount")
    public Integer balanceTransferCount;

    public TransactionSummaryResponse withBalanceTransferCount(Integer balanceTransferCount) {
        this.balanceTransferCount = balanceTransferCount;
        return this;
    }
    
    /**
     * This type is used to express the dollar value and currency used for any transaction retrieved with the &lt;strong&gt;Finances API&lt;/strong&gt;, including an order total, a seller payout, a buyer refund, or a seller credit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditAmount")
    public Amount creditAmount;

    public TransactionSummaryResponse withCreditAmount(Amount creditAmount) {
        this.creditAmount = creditAmount;
        return this;
    }
    
    /**
     * The enumeration value indicates whether the dollar amount in the &lt;strong&gt;creditAmount&lt;/strong&gt; field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be &lt;code&gt;CREDIT&lt;/code&gt;. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditBookingEntry")
    public String creditBookingEntry;

    public TransactionSummaryResponse withCreditBookingEntry(String creditBookingEntry) {
        this.creditBookingEntry = creditBookingEntry;
        return this;
    }
    
    /**
     * This integer value indicates the total number of the seller's sales and/or credits that match the input criteria. &lt;br&gt;&lt;br&gt;&lt;span class="tablenote"&gt;&lt;strong&gt;Note:&lt;/strong&gt; Unless the &lt;b&gt;transactionType&lt;/b&gt; filter is used in the request to retrieve a specific type of monetary transaction (sale, buyer refund, or seller credit), the &lt;b&gt;creditCount&lt;/b&gt; and &lt;b&gt;creditAmount&lt;/b&gt; fields account for both order sales and seller credits (the count and value is not distinguished between the two monetary transaction types).&lt;/span&gt;&lt;br&gt;&lt;br&gt;This field is generally returned, even if &lt;code&gt;0&lt;/code&gt;, but it will not be returned if a &lt;strong&gt;transactionType&lt;/strong&gt; filter is used, and its value is set to either &lt;code&gt;REFUND&lt;/code&gt;, &lt;code&gt;DISPUTE&lt;/code&gt;, or &lt;code&gt;SHIPPING_LABEL&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditCount")
    public Integer creditCount;

    public TransactionSummaryResponse withCreditCount(Integer creditCount) {
        this.creditCount = creditCount;
        return this;
    }
    
    /**
     * This type is used to express the dollar value and currency used for any transaction retrieved with the &lt;strong&gt;Finances API&lt;/strong&gt;, including an order total, a seller payout, a buyer refund, or a seller credit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disputeAmount")
    public Amount disputeAmount;

    public TransactionSummaryResponse withDisputeAmount(Amount disputeAmount) {
        this.disputeAmount = disputeAmount;
        return this;
    }
    
    /**
     * The enumeration value indicates whether the dollar amount in the &lt;strong&gt;disputeAmount&lt;/strong&gt; field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be &lt;code&gt;DEBIT&lt;/code&gt;, but its possible that &lt;code&gt;CREDIT&lt;/code&gt; could be returned if the seller contested one or more payment disputes and won the dispute. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disputeBookingEntry")
    public String disputeBookingEntry;

    public TransactionSummaryResponse withDisputeBookingEntry(String disputeBookingEntry) {
        this.disputeBookingEntry = disputeBookingEntry;
        return this;
    }
    
    /**
     * This integer value indicates the total number of payment disputes that have been initiated by one or more buyers. Only the orders that match the input criteria are considered. The Payment Disputes methods in the Fulfillment API can be used by the seller to retrieve more information about any payment disputes. &lt;br&gt;&lt;br&gt;This field is generally returned, even if &lt;code&gt;0&lt;/code&gt;, but it will not be returned if a &lt;strong&gt;transactionType&lt;/strong&gt; filter is used, and its value is set to any value other than &lt;code&gt;DISPUTE&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disputeCount")
    public Integer disputeCount;

    public TransactionSummaryResponse withDisputeCount(Integer disputeCount) {
        this.disputeCount = disputeCount;
        return this;
    }
    
    /**
     * This type is used to express the dollar value and currency used for any transaction retrieved with the &lt;strong&gt;Finances API&lt;/strong&gt;, including an order total, a seller payout, a buyer refund, or a seller credit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loanRepaymentAmount")
    public Amount loanRepaymentAmount;

    public TransactionSummaryResponse withLoanRepaymentAmount(Amount loanRepaymentAmount) {
        this.loanRepaymentAmount = loanRepaymentAmount;
        return this;
    }
    
    /**
     * The enumeration value indicates whether the &lt;code&gt;loanRepaymentAmount&lt;/code&gt; is a &lt;code&gt;DEBIT&lt;/code&gt; against, or a &lt;code&gt;CREDIT&lt;/code&gt; to, the sellers's account.&lt;br&gt;&lt;br&gt;For most &lt;code&gt;loanRepaymentAmount&lt;/code&gt; transactions, &lt;code&gt;loanRepaymentBookingEntry&lt;/code&gt; will be &lt;b&gt;DEBIT&lt;/b&gt;. However, if a loan repayment transaction is reversed, that transaction will be shown as a &lt;b&gt;CREDIT&lt;/b&gt;. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loanRepaymentBookingEntry")
    public String loanRepaymentBookingEntry;

    public TransactionSummaryResponse withLoanRepaymentBookingEntry(String loanRepaymentBookingEntry) {
        this.loanRepaymentBookingEntry = loanRepaymentBookingEntry;
        return this;
    }
    
    /**
     * This integer value indicates the total number of &lt;code&gt;LOAN_REPAYMENT&lt;/code&gt; transactions (i.e., &lt;code&gt;DEBIT&lt;/code&gt; and &lt;code&gt;CREDIT&lt;/code&gt;,) that match the input criteria.&lt;br&gt;&lt;br&gt;This field is generally returned even if it equals &lt;b&gt;0&lt;/b&gt;. However it will not be returned if a &lt;code&gt;transactionType&lt;/code&gt; filter is used and its value has been set to any enumeration value other than &lt;code&gt;LOAN_REPAYMENT&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loanRepaymentCount")
    public Integer loanRepaymentCount;

    public TransactionSummaryResponse withLoanRepaymentCount(Integer loanRepaymentCount) {
        this.loanRepaymentCount = loanRepaymentCount;
        return this;
    }
    
    /**
     * This type is used to express the dollar value and currency used for any transaction retrieved with the &lt;strong&gt;Finances API&lt;/strong&gt;, including an order total, a seller payout, a buyer refund, or a seller credit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nonSaleChargeAmount")
    public Amount nonSaleChargeAmount;

    public TransactionSummaryResponse withNonSaleChargeAmount(Amount nonSaleChargeAmount) {
        this.nonSaleChargeAmount = nonSaleChargeAmount;
        return this;
    }
    
    /**
     * The credit/debit sign indicator for the non-sale charge. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nonSaleChargeBookingEntry")
    public String nonSaleChargeBookingEntry;

    public TransactionSummaryResponse withNonSaleChargeBookingEntry(String nonSaleChargeBookingEntry) {
        this.nonSaleChargeBookingEntry = nonSaleChargeBookingEntry;
        return this;
    }
    
    /**
     * The total non-sale charge count for given payee within a specified period.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nonSaleChargeCount")
    public Integer nonSaleChargeCount;

    public TransactionSummaryResponse withNonSaleChargeCount(Integer nonSaleChargeCount) {
        this.nonSaleChargeCount = nonSaleChargeCount;
        return this;
    }
    
    /**
     * This type is used to express the dollar value and currency used for any transaction retrieved with the &lt;strong&gt;Finances API&lt;/strong&gt;, including an order total, a seller payout, a buyer refund, or a seller credit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onHoldAmount")
    public Amount onHoldAmount;

    public TransactionSummaryResponse withOnHoldAmount(Amount onHoldAmount) {
        this.onHoldAmount = onHoldAmount;
        return this;
    }
    
    /**
     * The enumeration value indicates whether the dollar amount in the &lt;strong&gt;onHoldAmount&lt;/strong&gt; field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be &lt;code&gt;CREDIT&lt;/code&gt;, since on-hold funds should eventually be released as part of a payout to the seller once the hold is cleared. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onHoldBookingEntry")
    public String onHoldBookingEntry;

    public TransactionSummaryResponse withOnHoldBookingEntry(String onHoldBookingEntry) {
        this.onHoldBookingEntry = onHoldBookingEntry;
        return this;
    }
    
    /**
     * This integer value indicates the total number of order sales where the associated funds are on hold. Only the orders that match the input criteria are considered.&lt;br&gt;&lt;br&gt;This field is generally returned, even if &lt;code&gt;0&lt;/code&gt;, but it will not be returned if a &lt;strong&gt;transactionStatus&lt;/strong&gt; filter is used, and its value is set to any value other than &lt;code&gt;FUNDS_ON_HOLD&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onHoldCount")
    public Integer onHoldCount;

    public TransactionSummaryResponse withOnHoldCount(Integer onHoldCount) {
        this.onHoldCount = onHoldCount;
        return this;
    }
    
    /**
     * This type is used to express the dollar value and currency used for any transaction retrieved with the &lt;strong&gt;Finances API&lt;/strong&gt;, including an order total, a seller payout, a buyer refund, or a seller credit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refundAmount")
    public Amount refundAmount;

    public TransactionSummaryResponse withRefundAmount(Amount refundAmount) {
        this.refundAmount = refundAmount;
        return this;
    }
    
    /**
     * The enumeration value indicates whether the dollar amount in the &lt;strong&gt;refundAmount&lt;/strong&gt; field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be &lt;code&gt;DEBIT&lt;/code&gt; since this a refund from the seller to the buyer. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refundBookingEntry")
    public String refundBookingEntry;

    public TransactionSummaryResponse withRefundBookingEntry(String refundBookingEntry) {
        this.refundBookingEntry = refundBookingEntry;
        return this;
    }
    
    /**
     * This integer value indicates the total number of buyer refunds that match the input criteria. &lt;br&gt;&lt;br&gt;This field is generally returned, even if &lt;code&gt;0&lt;/code&gt;, but it will not be returned if a &lt;strong&gt;transactionType&lt;/strong&gt; filter is used, and its value is set to any value other than &lt;code&gt;REFUND&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refundCount")
    public Integer refundCount;

    public TransactionSummaryResponse withRefundCount(Integer refundCount) {
        this.refundCount = refundCount;
        return this;
    }
    
    /**
     * This type is used to express the dollar value and currency used for any transaction retrieved with the &lt;strong&gt;Finances API&lt;/strong&gt;, including an order total, a seller payout, a buyer refund, or a seller credit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingLabelAmount")
    public Amount shippingLabelAmount;

    public TransactionSummaryResponse withShippingLabelAmount(Amount shippingLabelAmount) {
        this.shippingLabelAmount = shippingLabelAmount;
        return this;
    }
    
    /**
     * The enumeration value indicates whether the dollar amount in the &lt;strong&gt;shippingLabelAmount&lt;/strong&gt; field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be &lt;code&gt;DEBIT&lt;/code&gt;, as eBay will charge the seller when eBay shipping labels are purchased, but it can be &lt;code&gt;CREDIT&lt;/code&gt; if the seller was refunded for a shipping label or was possibly overcharged for a shipping label. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingLabelBookingEntry")
    public String shippingLabelBookingEntry;

    public TransactionSummaryResponse withShippingLabelBookingEntry(String shippingLabelBookingEntry) {
        this.shippingLabelBookingEntry = shippingLabelBookingEntry;
        return this;
    }
    
    /**
     * This is the total number of eBay shipping labels purchased by the seller. The count returned here may depend on the specified input criteria.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingLabelCount")
    public Integer shippingLabelCount;

    public TransactionSummaryResponse withShippingLabelCount(Integer shippingLabelCount) {
        this.shippingLabelCount = shippingLabelCount;
        return this;
    }
    
    /**
     * This type is used to express the dollar value and currency used for any transaction retrieved with the &lt;strong&gt;Finances API&lt;/strong&gt;, including an order total, a seller payout, a buyer refund, or a seller credit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferAmount")
    public Amount transferAmount;

    public TransactionSummaryResponse withTransferAmount(Amount transferAmount) {
        this.transferAmount = transferAmount;
        return this;
    }
    
    /**
     * The enumeration value indicates whether the dollar amount in the &lt;strong&gt;transferAmount&lt;/strong&gt; field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be &lt;code&gt;DEBIT&lt;/code&gt; since this a seller reimbursement to eBay for buyer refunds. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferBookingEntry")
    public String transferBookingEntry;

    public TransactionSummaryResponse withTransferBookingEntry(String transferBookingEntry) {
        this.transferBookingEntry = transferBookingEntry;
        return this;
    }
    
    /**
     * This integer value indicates the total number of buyer refund transfers that match the input criteria. &lt;br&gt;&lt;br&gt;This field is generally returned, even if &lt;code&gt;0&lt;/code&gt;, but it will not be returned if a &lt;strong&gt;transactionType&lt;/strong&gt; filter is used, and its value is set to any value other than &lt;code&gt;TRANSFER&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferCount")
    public Integer transferCount;

    public TransactionSummaryResponse withTransferCount(Integer transferCount) {
        this.transferCount = transferCount;
        return this;
    }
    
    /**
     * This type is used to express the dollar value and currency used for any transaction retrieved with the &lt;strong&gt;Finances API&lt;/strong&gt;, including an order total, a seller payout, a buyer refund, or a seller credit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("withdrawalAmount")
    public Amount withdrawalAmount;

    public TransactionSummaryResponse withWithdrawalAmount(Amount withdrawalAmount) {
        this.withdrawalAmount = withdrawalAmount;
        return this;
    }
    
    /**
     * The enumeration value indicates whether the dollar amount in the &lt;strong&gt;withdrawalAmount&lt;/strong&gt; field is a charge (debit) to the seller or a credit. Typically, the enumeration value returned here will be &lt;code&gt;DEBIT&lt;/code&gt; since this transaction involves a debit to the seller's available payout funds. For implementation help, refer to &lt;a href='https://developer.ebay.com/api-docs/sell/finances/types/pay:BookingEntryEnum'&gt;eBay API documentation&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("withdrawalBookingEntry")
    public String withdrawalBookingEntry;

    public TransactionSummaryResponse withWithdrawalBookingEntry(String withdrawalBookingEntry) {
        this.withdrawalBookingEntry = withdrawalBookingEntry;
        return this;
    }
    
    /**
     * This integer value indicates the total number of on-demand payouts (withdrawals) that match the input criteria. &lt;br&gt;&lt;br&gt;This field is generally returned, even if &lt;code&gt;0&lt;/code&gt;, but it will not be returned if a &lt;strong&gt;transactionType&lt;/strong&gt; filter is used, and its value is set to any value other than &lt;code&gt;WITHDRAWAL&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("withdrawalCount")
    public Integer withdrawalCount;

    public TransactionSummaryResponse withWithdrawalCount(Integer withdrawalCount) {
        this.withdrawalCount = withdrawalCount;
        return this;
    }
    
    public TransactionSummaryResponse(){}
}
