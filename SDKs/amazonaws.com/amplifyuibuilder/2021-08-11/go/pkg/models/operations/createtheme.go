// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateThemePathParams struct {
	// The unique ID of the Amplify app associated with the theme.
	AppID string `pathParam:"style=simple,explode=false,name=appId"`
	// The name of the backend environment that is a part of the Amplify app.
	EnvironmentName string `pathParam:"style=simple,explode=false,name=environmentName"`
}

type CreateThemeQueryParams struct {
	// The unique client token.
	ClientToken *string `queryParam:"style=form,explode=true,name=clientToken"`
}

type CreateThemeHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateThemeRequestBodyThemeToCreate - Represents all of the information that is required to create a theme.
type CreateThemeRequestBodyThemeToCreate struct {
	Name      *string              `json:"name,omitempty"`
	Overrides []shared.ThemeValues `json:"overrides,omitempty"`
	Tags      map[string]string    `json:"tags,omitempty"`
	Values    []shared.ThemeValues `json:"values,omitempty"`
}

type CreateThemeRequestBody struct {
	// Represents all of the information that is required to create a theme.
	ThemeToCreate CreateThemeRequestBodyThemeToCreate `json:"themeToCreate"`
}

type CreateThemeRequest struct {
	PathParams  CreateThemePathParams
	QueryParams CreateThemeQueryParams
	Headers     CreateThemeHeaders
	Request     CreateThemeRequestBody `request:"mediaType=application/json"`
}

type CreateThemeResponse struct {
	ContentType string
	// Success
	CreateThemeResponse *shared.CreateThemeResponse
	// InternalServerException
	InternalServerException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// ResourceConflictException
	ResourceConflictException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
}
