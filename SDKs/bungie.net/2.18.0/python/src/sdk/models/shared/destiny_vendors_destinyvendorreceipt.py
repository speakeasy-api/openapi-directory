"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import destiny_destinyitemquantity as shared_destiny_destinyitemquantity
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class DestinyVendorsDestinyVendorReceiptItemReceived:
    r"""Used in a number of Destiny contracts to return data about an item stack and its quantity. Can optionally return an itemInstanceId if the item is instanced - in which case, the quantity returned will be 1. If it's not... uh, let me know okay? Thanks."""
    
    has_conditional_visibility: Optional[bool] = dataclasses.field(default=None)
    r"""Indicates that this item quantity may be conditionally shown or hidden, based on various sources of state. For example: server flags, account state, or character progress."""  
    item_hash: Optional[int] = dataclasses.field(default=None)
    r"""The hash identifier for the item in question. Use it to look up the item's DestinyInventoryItemDefinition."""  
    item_instance_id: Optional[int] = dataclasses.field(default=None)
    r"""If this quantity is referring to a specific instance of an item, this will have the item's instance ID. Normally, this will be null."""  
    quantity: Optional[int] = dataclasses.field(default=None)
    r"""The amount of the item needed/available depending on the context of where DestinyItemQuantity is being used."""  
    

@dataclasses.dataclass
class DestinyVendorsDestinyVendorReceipt:
    r"""If a character purchased an item that is refundable, a Vendor Receipt will be created on the user's Destiny Profile. These expire after a configurable period of time, but until then can be used to get refunds on items. BNet does not provide the ability to refund a purchase *yet*, but you know."""
    
    currency_paid: Optional[list[shared_destiny_destinyitemquantity.DestinyDestinyItemQuantity]] = dataclasses.field(default=None)
    r"""The amount paid for the item, in terms of items that were consumed in the purchase and their quantity."""  
    expires_on: Optional[datetime] = dataclasses.field(default=None)
    r"""The date at which this receipt is rendered invalid."""  
    item_received: Optional[DestinyVendorsDestinyVendorReceiptItemReceived] = dataclasses.field(default=None)
    r"""The item that was received, and its quantity."""  
    license_unlock_hash: Optional[int] = dataclasses.field(default=None)
    r"""The unlock flag used to determine whether you still have the purchased item."""  
    purchased_by_character_id: Optional[int] = dataclasses.field(default=None)
    r"""The ID of the character who made the purchase."""  
    refund_policy: Optional[int] = dataclasses.field(default=None)
    r"""Whether you can get a refund, and what happens in order for the refund to be received. See the DestinyVendorItemRefundPolicy enum for details."""  
    sequence_number: Optional[int] = dataclasses.field(default=None)
    r"""The identifier of this receipt."""  
    time_to_expiration: Optional[int] = dataclasses.field(default=None)
    r"""The seconds since epoch at which this receipt is rendered invalid."""  
    