// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// ProxyModifyRatePlanChargeRatingGroupEnum - Specifies a rating group based on which usage records are rated.
//
// * `ByBillingPeriod` (default) - The rating is based on all the usages in a billing period.
// * `ByUsageStartDate` - The rating is based on all the usages on the same usage start date.
// * `ByUsageRecord` - The rating is based on each usage record.
// * `ByUsageUpload` - The rating is based on all the usages in a uploaded usage file (`.xls` or `.csv`). If you import a mass usage in a single upload, which contains multiple usage files in `.xls` or `.csv` format, usage records are grouped for each usage file.
// * `ByGroupId` - The rating is based on all the usages in the same custom group.
//
// **Note:**
// - The `ByBillingPeriod` value can be applied for all charge models.
// - The `ByUsageStartDate`, `ByUsageRecord`, and `ByUsageUpload` values can only be applied for per unit, volume pricing, and tiered pricing charge models.
// - The `ByGroupId` value is only available if you have the Active Rating feature enabled.
// - Use this field only for Usage charges. One-Time Charges and Recurring Charges return `NULL`.
//
// See [Usage Rating by Group](https://knowledgecenter.zuora.com/CB_Billing/J_Billing_Operations/Usage/Usage_Rating_by_Group) for more information.
type ProxyModifyRatePlanChargeRatingGroupEnum string

const (
	ProxyModifyRatePlanChargeRatingGroupEnumByBillingPeriod  ProxyModifyRatePlanChargeRatingGroupEnum = "ByBillingPeriod"
	ProxyModifyRatePlanChargeRatingGroupEnumByUsageStartDate ProxyModifyRatePlanChargeRatingGroupEnum = "ByUsageStartDate"
	ProxyModifyRatePlanChargeRatingGroupEnumByUsageRecord    ProxyModifyRatePlanChargeRatingGroupEnum = "ByUsageRecord"
	ProxyModifyRatePlanChargeRatingGroupEnumByUsageUpload    ProxyModifyRatePlanChargeRatingGroupEnum = "ByUsageUpload"
	ProxyModifyRatePlanChargeRatingGroupEnumByGroupID        ProxyModifyRatePlanChargeRatingGroupEnum = "ByGroupId"
)

func (e *ProxyModifyRatePlanChargeRatingGroupEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ByBillingPeriod":
		fallthrough
	case "ByUsageStartDate":
		fallthrough
	case "ByUsageRecord":
		fallthrough
	case "ByUsageUpload":
		fallthrough
	case "ByGroupId":
		*e = ProxyModifyRatePlanChargeRatingGroupEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProxyModifyRatePlanChargeRatingGroupEnum: %s", s)
	}
}

// ProxyModifyRatePlanCharge - Container for custom fields of a Rate Plan Charge object.
type ProxyModifyRatePlanCharge struct {
	//  The billing timing for the charge. You can choose to bill in advance or in arrears for recurring charge types. This field is not used in one-time or usage based charge types.
	// **Character limit**: **Values**: one of the following:
	//
	// - `In Advance`
	// - `In Arrears`
	// **Note:** You can override the value inherited from the Product Rate Plan Charge when a subscription has a recurring charge type.
	// This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
	//
	//
	BillingTiming *string `json:"BillingTiming,omitempty"`
	// Specifies the amount of a fixed-amount discount. You can provide a value for this field if the `ChargeModel` field value is `Discount-Fixed Amount`. **Character limit**: 16 **Values**: A valid currency amount
	//
	DiscountAmount *float64 `json:"DiscountAmount,omitempty"`
	// The percentage of discount for a percentage discount. Use this field if the value for `ProductRatePlanCharge.ChargeModel` is `Discount-Percentage` and you want to override the value in `ProductRatePlanChargeTier.DiscountPercentage`. **Character limit**: 16 **Values**: a decimal value between -100 and 100, exclusive
	//
	DiscountPercentage *float64 `json:"DiscountPercentage,omitempty"`
	//  Defines when the charge ends after the charge trigger date. This field can be updated when **Status** is `Draft`.
	// **Values**: one of the following:
	//
	// - `SubscriptionEnd`: The charge ends on the subscription end date after the charge trigger date. This is the default value.
	// - `FixedPeriod`: The charge ends after a specified period based on the trigger date of the charge. If you set this field to `FixedPeriod`, you must specify the length of the period and a period type by defining the `UpToPeriods` and `UpToPeriodsType` fields.
	// - `SpecificEndDate`: The specific date on which the charge ends. If you set this field to `SpecificEndDate`, you must specify the specific date by defining the `SpecificEndDate` field.
	//
	// **Note**: If the subscription ends before the charge end date, the charge ends when the subscription ends. But if the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge will end on the charge end date.
	EndDateCondition *string `json:"EndDateCondition,omitempty"`
	// The list price base for the product rate plan charge. **Values**: one of the following:
	//
	// - `Per Month`
	// - `Per Billing Period`
	// - `Per Week`
	//
	ListPriceBase *string `json:"ListPriceBase,omitempty"`
	//  Applies an automatic price change when a termed subscription is renewed.
	// **Character limit**: **Values**: one of the following:
	//
	// - `NoChange` (default)
	// - `SpecificPercentageValue`
	// - `UseLatestProductCatalogPricing`
	//
	PriceChangeOption *string `json:"PriceChangeOption,omitempty"`
	//  Specifies the percentage to increase or decrease the price of renewed subscriptions.
	// **Character limit**: 16 **Values**: a decimal value between -100 and 100
	PriceIncreasePercentage *float64 `json:"PriceIncreasePercentage,omitempty"`
	// Specifies a rating group based on which usage records are rated.
	//
	// * `ByBillingPeriod` (default) - The rating is based on all the usages in a billing period.
	// * `ByUsageStartDate` - The rating is based on all the usages on the same usage start date.
	// * `ByUsageRecord` - The rating is based on each usage record.
	// * `ByUsageUpload` - The rating is based on all the usages in a uploaded usage file (`.xls` or `.csv`). If you import a mass usage in a single upload, which contains multiple usage files in `.xls` or `.csv` format, usage records are grouped for each usage file.
	// * `ByGroupId` - The rating is based on all the usages in the same custom group.
	//
	//
	// **Note:**
	// - The `ByBillingPeriod` value can be applied for all charge models.
	// - The `ByUsageStartDate`, `ByUsageRecord`, and `ByUsageUpload` values can only be applied for per unit, volume pricing, and tiered pricing charge models.
	// - The `ByGroupId` value is only available if you have the Active Rating feature enabled.
	// - Use this field only for Usage charges. One-Time Charges and Recurring Charges return `NULL`.
	//
	//
	// See [Usage Rating by Group](https://knowledgecenter.zuora.com/CB_Billing/J_Billing_Operations/Usage/Usage_Rating_by_Group) for more information.
	//
	RatingGroup *ProxyModifyRatePlanChargeRatingGroupEnum `json:"RatingGroup,omitempty"`
	//  Associates this product rate plan charge with a specific revenue recognition code.
	//
	// **Character limit**: 70
	//
	// **Values**: inherited from `ProductRatePlanCharge.RevRecCode` or a valid revenue recognition code
	//
	// **Note**: Unless overridden, this value changes if `ProductRatePlanCharge.RevRecCode` is updated. The values of `UpdatedById` and `UpdatedDate` for the `RatePlanCharge` do not change when `ProductRatePlanCharge.RevRecCode` is updated.
	RevRecCode *string `json:"RevRecCode,omitempty"`
	//  Specifies when revenue recognition begins.
	//
	// **Character limit**: 22
	//
	// **Values**: inherited from `ProductRatePlanCharge.RevRecTriggerCondition` or one of the following:
	//
	// -  `ContractEffectiveDate`
	//
	// -  `ServiceActivationDate`
	//
	// -  `CustomerAcceptanceDate`
	//
	// Note: Unless overridden, this value changes if `ProductRatePlanCharge.RevRecTriggerCondition` is updated. The values of `UpdatedById` and `UpdatedDate` for the `RatePlanCharge` do not change when `ProductRatePlanCharge.RevRecTriggerCondition` is updated.
	RevRecTriggerCondition *string `json:"RevRecTriggerCondition,omitempty"`
	//  Specifies the Revenue Recognition Rule that you want the Rate Plan Charge to use. This field can be updated when **Status** is `Draft`. By default, the Revenue Recognition Rule is inherited from the Product Rate Plan Charge. For Amend calls, you can use this field only for NewProduct amendments. For Update calls, you can use this field only to update subscriptions in draft status. Note that if you use this field to specify a Revenue Recognition Rule for the Rate Plan Charge, the rule will remain as specified even if you later change the rule used by the corresponding Product Rate Plan Charge.
	//
	// **Character limit**: n/a
	//
	// **Values**: inherited from `ProductRatePlanCharge.RevenueRecognitionRuleName` or the name of an active Revenue Recognition Rule
	//
	// **Note**: Unless overridden, this value changes if `ProductRatePlanCharge.RevenueRecognitionRuleName` is updated. The values of `UpdatedById` and `UpdatedDate` for the `RatePlanCharge` do not change when `ProductRatePlanCharge.RevenueRecognitionRuleName` is updated.
	RevenueRecognitionRuleName *string `json:"RevenueRecognitionRuleName,omitempty"`
	//  The specific date on which the charge ends, in `yyyy-mm-dd` format.
	// **Character limit**: 29 **Note**:
	//
	// - This field is only applicable when the `EndDateCondition` field is set to `SpecificEndDate`.
	// - If the subscription ends before the specific end date, the charge ends when the subscription ends. But if the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge will end on the specific end date.
	//
	SpecificEndDate *types.Date `json:"SpecificEndDate,omitempty"`
	//  The date when the charge becomes effective and billing begins, in `yyyy-mm-dd` format. This field is required if the `TriggerEvent` field value is `SpecificDate`.
	// **Character limit**: 29
	TriggerDate *types.Date `json:"TriggerDate,omitempty"`
	// Specifies when to start billing the customer for the charge.
	//
	// **Note:** This field can be passed through the Subscribe and Amend calls and will override the default value set on the Product Rate Plan Charge.
	//
	// **Note:** When the [Update rate plan charge trigger condition?](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Billing_Settings/Define_Default_Subscription_Settings) setting is set to `Yes`, this field can be passed through the update() call and override the previous value. You can use this feature to directly update the trigger condition of a rate plan charge without creating an order action (or amendment).
	//
	// **Character limit**: 18
	// **Values**: inherited from
	// `ProductRatePlanCharge.TriggerEvent` and can be one of the following values:
	//
	//
	//  - `ContractEffective` is the date when the subscription's contract goes into effect and the charge is ready to be billed.
	//
	//  - `ServiceActivation` is when the services or products for a subscription have been activated and the customers have access.
	//
	//  - `CustomerAcceptance` is when the customer accepts the services or products for a subscription.
	//
	//  - `SpecificDate` is valid only on the RatePlanCharge. When this value is specified, use the `TriggerDate` field to set the specific date.
	//
	TriggerEvent *string `json:"TriggerEvent,omitempty"`
	//  The period type used to define when the charge ends. This field can be updated when **Status** is `Draft`. **Values**: one of the following:
	//
	// - `Billing Periods` (default)
	// - `Days`
	// - `Weeks`
	// - `Months`
	// - `Years`
	// **Note**:
	//
	// - You must use this field together with the `UpToPeriods` field to specify the time period.
	// - This field is only applicable only when the `EndDateCondition` field is set to `FixedPeriod`.
	//
	UpToPeriodsType *string `json:"UpToPeriodsType,omitempty"`
	//  Specifies which day of the week as the bill cycle day (BCD) for the charge.
	// This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
	//
	// **Values**: one of the following:
	//
	// - `Sunday`
	// - `Monday`
	// - `Tuesday`
	// - `Wednesday`
	// - `Thursday`
	// - `Friday`
	// - `Saturday`
	//
	WeeklyBillCycleDay *string `json:"WeeklyBillCycleDay,omitempty"`
}
