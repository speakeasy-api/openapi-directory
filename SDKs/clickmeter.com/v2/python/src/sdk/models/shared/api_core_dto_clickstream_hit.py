"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import api_core_dto_clickstream_hitbrowserinfo as shared_api_core_dto_clickstream_hitbrowserinfo
from ..shared import api_core_dto_clickstream_hitconversioninfo as shared_api_core_dto_clickstream_hitconversioninfo
from ..shared import api_core_dto_clickstream_hitdatapointinfo as shared_api_core_dto_clickstream_hitdatapointinfo
from ..shared import api_core_dto_clickstream_hitlocationinfo as shared_api_core_dto_clickstream_hitlocationinfo
from ..shared import api_core_dto_clickstream_hitosinfo as shared_api_core_dto_clickstream_hitosinfo
from ..shared import api_core_dto_clickstream_hitsource as shared_api_core_dto_clickstream_hitsource
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APICoreDtoClickStreamHit:
    
    access_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessTime'), 'exclude': lambda f: f is None }})
    r"""(A date in \\"YmdHis\\" format)"""  
    browser: Optional[shared_api_core_dto_clickstream_hitbrowserinfo.APICoreDtoClickStreamHitBrowserInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('browser'), 'exclude': lambda f: f is None }})  
    client_language: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientLanguage'), 'exclude': lambda f: f is None }})  
    conversion1: Optional[shared_api_core_dto_clickstream_hitconversioninfo.APICoreDtoClickStreamHitConversionInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversion1'), 'exclude': lambda f: f is None }})  
    conversion2: Optional[shared_api_core_dto_clickstream_hitconversioninfo.APICoreDtoClickStreamHitConversionInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversion2'), 'exclude': lambda f: f is None }})  
    conversion3: Optional[shared_api_core_dto_clickstream_hitconversioninfo.APICoreDtoClickStreamHitConversionInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversion3'), 'exclude': lambda f: f is None }})  
    conversion4: Optional[shared_api_core_dto_clickstream_hitconversioninfo.APICoreDtoClickStreamHitConversionInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversion4'), 'exclude': lambda f: f is None }})  
    conversion5: Optional[shared_api_core_dto_clickstream_hitconversioninfo.APICoreDtoClickStreamHitConversionInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversion5'), 'exclude': lambda f: f is None }})  
    conversions: Optional[list[shared_api_core_dto_clickstream_hitconversioninfo.APICoreDtoClickStreamHitConversionInfo]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversions'), 'exclude': lambda f: f is None }})  
    entity: Optional[shared_api_core_dto_clickstream_hitdatapointinfo.APICoreDtoClickStreamHitDatapointInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('entity'), 'exclude': lambda f: f is None }})  
    ip: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ip'), 'exclude': lambda f: f is None }})  
    is_proxy: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isProxy'), 'exclude': lambda f: f is None }})  
    is_spider: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isSpider'), 'exclude': lambda f: f is None }})  
    is_unique: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isUnique'), 'exclude': lambda f: f is None }})  
    location: Optional[shared_api_core_dto_clickstream_hitlocationinfo.APICoreDtoClickStreamHitLocationInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location'), 'exclude': lambda f: f is None }})  
    org: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('org'), 'exclude': lambda f: f is None }})  
    os: Optional[shared_api_core_dto_clickstream_hitosinfo.APICoreDtoClickStreamHitOsInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('os'), 'exclude': lambda f: f is None }})  
    query_params: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('queryParams'), 'exclude': lambda f: f is None }})  
    real_destination_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('realDestinationUrl'), 'exclude': lambda f: f is None }})  
    referer: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('referer'), 'exclude': lambda f: f is None }})  
    source: Optional[shared_api_core_dto_clickstream_hitsource.APICoreDtoClickStreamHitSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})  
    