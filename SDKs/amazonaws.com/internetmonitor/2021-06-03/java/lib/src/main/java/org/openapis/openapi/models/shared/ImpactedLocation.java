/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ImpactedLocation - &lt;p&gt;Information about a location impacted by a health event in Amazon CloudWatch Internet Monitor.&lt;/p&gt; &lt;p&gt;Geographic regions are hierarchically categorized into country, subdivision, metro and city geographic granularities. The geographic region is identified based on the IP address used at the client locations.&lt;/p&gt;
 */
public class ImpactedLocation {
    @JsonProperty("ASName")
    public String asName;
    public ImpactedLocation withASName(String asName) {
        this.asName = asName;
        return this;
    }
    
    @JsonProperty("ASNumber")
    public Long asNumber;
    public ImpactedLocation withASNumber(Long asNumber) {
        this.asNumber = asNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CausedBy")
    public NetworkImpairment causedBy;
    public ImpactedLocation withCausedBy(NetworkImpairment causedBy) {
        this.causedBy = causedBy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("City")
    public String city;
    public ImpactedLocation withCity(String city) {
        this.city = city;
        return this;
    }
    
    @JsonProperty("Country")
    public String country;
    public ImpactedLocation withCountry(String country) {
        this.country = country;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CountryCode")
    public String countryCode;
    public ImpactedLocation withCountryCode(String countryCode) {
        this.countryCode = countryCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InternetHealth")
    public InternetHealth internetHealth;
    public ImpactedLocation withInternetHealth(InternetHealth internetHealth) {
        this.internetHealth = internetHealth;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Latitude")
    public Double latitude;
    public ImpactedLocation withLatitude(Double latitude) {
        this.latitude = latitude;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Longitude")
    public Double longitude;
    public ImpactedLocation withLongitude(Double longitude) {
        this.longitude = longitude;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Metro")
    public String metro;
    public ImpactedLocation withMetro(String metro) {
        this.metro = metro;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ServiceLocation")
    public String serviceLocation;
    public ImpactedLocation withServiceLocation(String serviceLocation) {
        this.serviceLocation = serviceLocation;
        return this;
    }
    
    @JsonProperty("Status")
    public HealthEventStatusEnum status;
    public ImpactedLocation withStatus(HealthEventStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Subdivision")
    public String subdivision;
    public ImpactedLocation withSubdivision(String subdivision) {
        this.subdivision = subdivision;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubdivisionCode")
    public String subdivisionCode;
    public ImpactedLocation withSubdivisionCode(String subdivisionCode) {
        this.subdivisionCode = subdivisionCode;
        return this;
    }
    
}
