// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VoiceExportOptionsExportFormatEnum - The file format for exported text messages.
type VoiceExportOptionsExportFormatEnum string

const (
	VoiceExportOptionsExportFormatEnumExportFormatUnspecified VoiceExportOptionsExportFormatEnum = "EXPORT_FORMAT_UNSPECIFIED"
	VoiceExportOptionsExportFormatEnumMbox                    VoiceExportOptionsExportFormatEnum = "MBOX"
	VoiceExportOptionsExportFormatEnumPst                     VoiceExportOptionsExportFormatEnum = "PST"
)

func (e VoiceExportOptionsExportFormatEnum) ToPointer() *VoiceExportOptionsExportFormatEnum {
	return &e
}

func (e *VoiceExportOptionsExportFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EXPORT_FORMAT_UNSPECIFIED":
		fallthrough
	case "MBOX":
		fallthrough
	case "PST":
		*e = VoiceExportOptionsExportFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VoiceExportOptionsExportFormatEnum: %v", v)
	}
}

// VoiceExportOptions - The options for Voice exports.
type VoiceExportOptions struct {
	// The file format for exported text messages.
	ExportFormat *VoiceExportOptionsExportFormatEnum `json:"exportFormat,omitempty"`
}
