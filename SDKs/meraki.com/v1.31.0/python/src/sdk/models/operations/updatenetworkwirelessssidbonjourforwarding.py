"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class UpdateNetworkWirelessSsidBonjourForwardingRequestBodyRulesServicesEnum(str, Enum):
    AFP = 'AFP'
    AIR_PLAY = 'AirPlay'
    ALL_SERVICES = 'All Services'
    BIT_TORRENT = 'BitTorrent'
    FTP = 'FTP'
    PRINTERS = 'Printers'
    SSH = 'SSH'
    SAMBA = 'Samba'
    SCANNERS = 'Scanners'
    I_CHAT = 'iChat'
    I_TUNES = 'iTunes'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkWirelessSsidBonjourForwardingRequestBodyRules:
    
    services: list[UpdateNetworkWirelessSsidBonjourForwardingRequestBodyRulesServicesEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('services') }})
    r"""A list of Bonjour services. At least one service must be specified. Available services are 'All Services', 'AirPlay', 'AFP', 'BitTorrent', 'FTP', 'iChat', 'iTunes', 'Printers', 'Samba', 'Scanners' and 'SSH'"""  
    vlan_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vlanId') }})
    r"""The ID of the service VLAN. Required."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""A description for your Bonjour forwarding rule. Optional."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkWirelessSsidBonjourForwardingRequestBody:
    
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""If true, Bonjour forwarding is enabled on this SSID."""  
    rules: Optional[list[UpdateNetworkWirelessSsidBonjourForwardingRequestBodyRules]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rules'), 'exclude': lambda f: f is None }})
    r"""List of bonjour forwarding rules."""  
    

@dataclasses.dataclass
class UpdateNetworkWirelessSsidBonjourForwardingRequest:
    
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    number: str = dataclasses.field(metadata={'path_param': { 'field_name': 'number', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdateNetworkWirelessSsidBonjourForwardingRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateNetworkWirelessSsidBonjourForwardingResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_network_wireless_ssid_bonjour_forwarding_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    