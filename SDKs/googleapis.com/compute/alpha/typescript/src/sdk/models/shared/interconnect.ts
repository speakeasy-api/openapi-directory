/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InterconnectCircuitInfo } from "./interconnectcircuitinfo";
import { InterconnectMacsec } from "./interconnectmacsec";
import { InterconnectOutageNotification } from "./interconnectoutagenotification";
import { Expose, Type } from "class-transformer";

/**
 * Type of interconnect, which can take one of the following values: - PARTNER: A partner-managed interconnection shared between customers though a partner. - DEDICATED: A dedicated physical interconnection with the customer. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
 */
export enum InterconnectInterconnectTypeEnum {
  Dedicated = "DEDICATED",
  ItPrivate = "IT_PRIVATE",
  Partner = "PARTNER",
}

/**
 * Type of link requested, which can take one of the following values: - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Note that this field indicates the speed of each of the links in the bundle, not the speed of the entire bundle.
 */
export enum InterconnectLinkTypeEnum {
  LinkTypeEthernet100GLr = "LINK_TYPE_ETHERNET_100G_LR",
  LinkTypeEthernet10GLr = "LINK_TYPE_ETHERNET_10G_LR",
}

/**
 * [Output Only] The current status of this Interconnect's functionality, which can take one of the following values: - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may be provisioned on this Interconnect. - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be provisioned on this Interconnect. - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect.
 */
export enum InterconnectOperationalStatusEnum {
  OsActive = "OS_ACTIVE",
  OsUnprovisioned = "OS_UNPROVISIONED",
}

/**
 * [Output Only] The current state of Interconnect functionality, which can take one of the following values: - ACTIVE: The Interconnect is valid, turned up and ready to use. Attachments may be provisioned on this Interconnect. - UNPROVISIONED: The Interconnect has not completed turnup. No attachments may be provisioned on this Interconnect. - UNDER_MAINTENANCE: The Interconnect is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect.
 */
export enum InterconnectStateEnum {
  Active = "ACTIVE",
  Unprovisioned = "UNPROVISIONED",
}

/**
 * Represents an Interconnect resource. An Interconnect resource is a dedicated connection between the GCP network and your on-premises network. For more information, read the Dedicated Interconnect Overview.
 */
export class Interconnect extends SpeakeasyBase {
  /**
   * Administrative status of the interconnect. When this is set to true, the Interconnect is functional and can carry traffic. When set to false, no packets can be carried over the interconnect and no BGP routes are exchanged over it. By default, the status is set to true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "adminEnabled" })
  adminEnabled?: boolean;

  /**
   * [Output Only] A list of CircuitInfo objects, that describe the individual circuits in this LAG.
   */
  @SpeakeasyMetadata({ elemType: InterconnectCircuitInfo })
  @Expose({ name: "circuitInfos" })
  @Type(() => InterconnectCircuitInfo)
  circuitInfos?: InterconnectCircuitInfo[];

  /**
   * [Output Only] Creation timestamp in RFC3339 text format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationTimestamp" })
  creationTimestamp?: string;

  /**
   * Customer name, to put in the Letter of Authorization as the party authorized to request a crossconnect.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customerName" })
  customerName?: string;

  /**
   * An optional description of this resource. Provide this property when you create the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * [Output Only] A list of outages expected for this Interconnect.
   */
  @SpeakeasyMetadata({ elemType: InterconnectOutageNotification })
  @Expose({ name: "expectedOutages" })
  @Type(() => InterconnectOutageNotification)
  expectedOutages?: InterconnectOutageNotification[];

  /**
   * [Output Only] IP address configured on the Google side of the Interconnect link. This can be used only for ping tests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "googleIpAddress" })
  googleIpAddress?: string;

  /**
   * [Output Only] Google reference ID to be used when raising support tickets with Google or otherwise to debug backend connectivity issues.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "googleReferenceId" })
  googleReferenceId?: string;

  /**
   * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * [Output Only] A list of the URLs of all InterconnectAttachments configured to use this Interconnect.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interconnectAttachments" })
  interconnectAttachments?: string[];

  /**
   * Type of interconnect, which can take one of the following values: - PARTNER: A partner-managed interconnection shared between customers though a partner. - DEDICATED: A dedicated physical interconnection with the customer. Note that a value IT_PRIVATE has been deprecated in favor of DEDICATED.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interconnectType" })
  interconnectType?: InterconnectInterconnectTypeEnum;

  /**
   * [Output Only] Type of the resource. Always compute#interconnect for interconnects.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * A fingerprint for the labels being applied to this Interconnect, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an Interconnect.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labelFingerprint" })
  labelFingerprint?: string;

  /**
   * Labels for this resource. These can only be added or modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Type of link requested, which can take one of the following values: - LINK_TYPE_ETHERNET_10G_LR: A 10G Ethernet with LR optics - LINK_TYPE_ETHERNET_100G_LR: A 100G Ethernet with LR optics. Note that this field indicates the speed of each of the links in the bundle, not the speed of the entire bundle.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "linkType" })
  linkType?: InterconnectLinkTypeEnum;

  /**
   * URL of the InterconnectLocation object that represents where this connection is to be provisioned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  /**
   * Configuration information for enabling Media Access Control security (Macsec) on this Interconnect between Google and your on-premises router.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "macsec" })
  @Type(() => InterconnectMacsec)
  macsec?: InterconnectMacsec;

  /**
   * Enable or disable MACsec on this Interconnect. MACsec enablement will fail if the macsec object is not specified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "macsecEnabled" })
  macsecEnabled?: boolean;

  /**
   * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Email address to contact the customer NOC for operations and maintenance notifications regarding this Interconnect. If specified, this will be used for notifications in addition to all other forms described, such as Cloud Monitoring logs alerting and Cloud Notifications. This field is required for users who sign up for Cloud Interconnect using workforce identity federation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nocContactEmail" })
  nocContactEmail?: string;

  /**
   * [Output Only] The current status of this Interconnect's functionality, which can take one of the following values: - OS_ACTIVE: A valid Interconnect, which is turned up and is ready to use. Attachments may be provisioned on this Interconnect. - OS_UNPROVISIONED: An Interconnect that has not completed turnup. No attachments may be provisioned on this Interconnect. - OS_UNDER_MAINTENANCE: An Interconnect that is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "operationalStatus" })
  operationalStatus?: InterconnectOperationalStatusEnum;

  /**
   * [Output Only] IP address configured on the customer side of the Interconnect link. The customer should configure this IP address during turnup when prompted by Google NOC. This can be used only for ping tests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "peerIpAddress" })
  peerIpAddress?: string;

  /**
   * [Output Only] Number of links actually provisioned in this interconnect.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provisionedLinkCount" })
  provisionedLinkCount?: number;

  /**
   * Indicates that this is a Cross-Cloud Interconnect. This field specifies the location outside of Google's network that the interconnect is connected to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remoteLocation" })
  remoteLocation?: string;

  /**
   * Target number of physical links in the link bundle, as requested by the customer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestedLinkCount" })
  requestedLinkCount?: number;

  /**
   * [Output Only] Reserved for future use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "satisfiesPzs" })
  satisfiesPzs?: boolean;

  /**
   * [Output Only] Server-defined URL for the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * [Output Only] Server-defined URL for this resource with the resource id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLinkWithId" })
  selfLinkWithId?: string;

  /**
   * [Output Only] The current state of Interconnect functionality, which can take one of the following values: - ACTIVE: The Interconnect is valid, turned up and ready to use. Attachments may be provisioned on this Interconnect. - UNPROVISIONED: The Interconnect has not completed turnup. No attachments may be provisioned on this Interconnect. - UNDER_MAINTENANCE: The Interconnect is undergoing internal maintenance. No attachments may be provisioned or updated on this Interconnect.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: InterconnectStateEnum;
}
