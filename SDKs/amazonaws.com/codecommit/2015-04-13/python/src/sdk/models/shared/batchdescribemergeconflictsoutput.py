"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import batchdescribemergeconflictserror as shared_batchdescribemergeconflictserror
from ..shared import conflict as shared_conflict
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchDescribeMergeConflictsOutput:
    r"""Success"""
    
    conflicts: list[shared_conflict.Conflict] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conflicts') }})  
    destination_commit_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinationCommitId') }})  
    source_commit_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceCommitId') }})  
    base_commit_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('baseCommitId'), 'exclude': lambda f: f is None }})  
    errors: Optional[list[shared_batchdescribemergeconflictserror.BatchDescribeMergeConflictsError]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errors'), 'exclude': lambda f: f is None }})  
    next_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextToken'), 'exclude': lambda f: f is None }})  
    