/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class ReleasesListByDistributionGroupSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class ReleasesListByDistributionGroupRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The name of the distribution group.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=distribution_group_name",
  })
  distributionGroupName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

export enum ReleasesListByDistributionGroup404ApplicationJSONCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

/**
 * A distribution group can't be found.
 *
 * @remarks
 *
 */
export class ReleasesListByDistributionGroup404ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: ReleasesListByDistributionGroup404ApplicationJSONCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * The release's origin
 */
export enum ReleasesListByDistributionGroup200ApplicationJSONOriginEnum {
  Hockeyapp = "hockeyapp",
  Appcenter = "appcenter",
}

/**
 * Response for getting a list of releases in a distribution group
 */
export class ReleasesListByDistributionGroup200ApplicationJSON extends SpeakeasyBase {
  /**
   * This value determines the whether a release currently is enabled or disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled: boolean;

  /**
   * ID identifying this unique release.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * This value determines if a release is external or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_external_build" })
  isExternalBuild?: boolean;

  /**
   * A boolean which determines whether the release is a mandatory update or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mandatory_update" })
  mandatoryUpdate: boolean;

  /**
   * The release's origin
   */
  @SpeakeasyMetadata()
  @Expose({ name: "origin" })
  origin?: ReleasesListByDistributionGroup200ApplicationJSONOriginEnum;

  /**
   * The release's short version.<br>
   *
   * @remarks
   * For iOS: CFBundleShortVersionString from info.plist.<br>
   * For Android: android:versionName from AppManifest.xml.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "short_version" })
  shortVersion: string;

  /**
   * UTC time in ISO 8601 format of the uploaded time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uploaded_at" })
  uploadedAt: string;

  /**
   * The release's version.<br>
   *
   * @remarks
   * For iOS: CFBundleVersion from info.plist.<br>
   * For Android: android:versionCode from AppManifest.xml.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version: string;
}

export class ReleasesListByDistributionGroupResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata({
    elemType: ReleasesListByDistributionGroup200ApplicationJSON,
  })
  releasesListByDistributionGroup200ApplicationJSONObjects?: ReleasesListByDistributionGroup200ApplicationJSON[];

  /**
   * A distribution group can't be found.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  releasesListByDistributionGroup404ApplicationJSONObject?: ReleasesListByDistributionGroup404ApplicationJSON;
}
