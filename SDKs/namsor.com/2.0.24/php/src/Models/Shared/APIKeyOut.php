<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * APIKeyOut - Anonymization of a source.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class APIKeyOut
{
    /**
     * The API Key has admin role.
     * 
     * @var ?bool $admin
     */
	#[\JMS\Serializer\Annotation\SerializedName('admin')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $admin = null;
    
    /**
     * The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).
     * 
     * @var ?bool $anonymized
     */
	#[\JMS\Serializer\Annotation\SerializedName('anonymized')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $anonymized = null;
    
    /**
     * The user API Key.
     * 
     * @var ?string $apiKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('apiKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $apiKey = null;
    
    /**
     * The API Key has role corporate (ex SWIFT payments instead of Stripe payments).
     * 
     * @var ?bool $corporate
     */
	#[\JMS\Serializer\Annotation\SerializedName('corporate')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $corporate = null;
    
    /**
     * The API Key is temporarily or permanently disabled.
     * 
     * @var ?bool $disabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('disabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $disabled = null;
    
    /**
     * The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).
     * 
     * @var ?bool $learnable
     */
	#[\JMS\Serializer\Annotation\SerializedName('learnable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $learnable = null;
    
    /**
     * The API Key has partner role.
     * 
     * @var ?bool $partner
     */
	#[\JMS\Serializer\Annotation\SerializedName('partner')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $partner = null;
    
    /**
     * The API Key is associated to a valid Stripe account.
     * 
     * @var ?bool $striped
     */
	#[\JMS\Serializer\Annotation\SerializedName('striped')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $striped = null;
    
    /**
     * The user identifier.
     * 
     * @var ?string $userId
     */
	#[\JMS\Serializer\Annotation\SerializedName('userId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userId = null;
    
    /**
     * The API Key is vetted (assumed truthful) for machine learning.
     * 
     * @var ?bool $vetted
     */
	#[\JMS\Serializer\Annotation\SerializedName('vetted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $vetted = null;
    
	public function __construct()
	{
		$this->admin = null;
		$this->anonymized = null;
		$this->apiKey = null;
		$this->corporate = null;
		$this->disabled = null;
		$this->learnable = null;
		$this->partner = null;
		$this->striped = null;
		$this->userId = null;
		$this->vetted = null;
	}
}
