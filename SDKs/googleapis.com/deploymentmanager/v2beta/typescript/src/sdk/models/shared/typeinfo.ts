/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TypeInfoSchemaInfo } from "./typeinfoschemainfo";
import { Expose, Type } from "class-transformer";

/**
 * Type Information. Contains detailed information about a composite type, base type, or base type with specific collection.
 */
export class TypeInfo extends SpeakeasyBase {
  /**
   * The description of the type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * For swagger 2.0 externalDocs field will be used. For swagger 1.2 this field will be empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "documentationLink" })
  documentationLink?: string;

  /**
   * Output only. Type of the output. Always `deploymentManager#TypeInfo` for TypeInfo.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The base type or composite type name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "schema" })
  @Type(() => TypeInfoSchemaInfo)
  schema?: TypeInfoSchemaInfo;

  /**
   * Output only. Self link for the type provider.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * The title on the API descriptor URL provided.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}
