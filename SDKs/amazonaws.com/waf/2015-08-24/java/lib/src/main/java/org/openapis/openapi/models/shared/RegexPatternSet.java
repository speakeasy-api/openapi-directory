/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RegexPatternSet - &lt;note&gt; &lt;p&gt;This is &lt;b&gt;AWS WAF Classic&lt;/b&gt; documentation. For more information, see &lt;a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html"&gt;AWS WAF Classic&lt;/a&gt; in the developer guide.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For the latest version of AWS WAF&lt;/b&gt;, use the AWS WAFV2 API and see the &lt;a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html"&gt;AWS WAF Developer Guide&lt;/a&gt;. With the latest version, AWS WAF has a single set of endpoints for regional and global use. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;The &lt;code&gt;RegexPatternSet&lt;/code&gt; specifies the regular expression (regex) pattern that you want AWS WAF to search for, such as &lt;code&gt;B[a@]dB[o0]t&lt;/code&gt;. You can then configure AWS WAF to reject those requests.&lt;/p&gt;
 */
public class RegexPatternSet {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public RegexPatternSet withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("RegexPatternSetId")
    public String regexPatternSetId;

    public RegexPatternSet withRegexPatternSetId(String regexPatternSetId) {
        this.regexPatternSetId = regexPatternSetId;
        return this;
    }
    
    @JsonProperty("RegexPatternStrings")
    public String[] regexPatternStrings;

    public RegexPatternSet withRegexPatternStrings(String[] regexPatternStrings) {
        this.regexPatternStrings = regexPatternStrings;
        return this;
    }
    
    public RegexPatternSet(@JsonProperty("RegexPatternSetId") String regexPatternSetId, @JsonProperty("RegexPatternStrings") String[] regexPatternStrings) {
        this.regexPatternSetId = regexPatternSetId;
        this.regexPatternStrings = regexPatternStrings;
  }
}
