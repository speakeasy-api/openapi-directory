/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EksContainerDetail } from "./ekscontainerdetail";
import { EksVolume } from "./eksvolume";
import { Expose, Type } from "class-transformer";

/**
 * The details for the pod.
 */
export class EksPodPropertiesDetail extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: EksContainerDetail })
  @Expose({ name: "containers" })
  @Type(() => EksContainerDetail)
  containers?: EksContainerDetail[];

  @SpeakeasyMetadata()
  @Expose({ name: "dnsPolicy" })
  dnsPolicy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hostNetwork" })
  hostNetwork?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "nodeName" })
  nodeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "podName" })
  podName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "serviceAccountName" })
  serviceAccountName?: string;

  @SpeakeasyMetadata({ elemType: EksVolume })
  @Expose({ name: "volumes" })
  @Type(() => EksVolume)
  volumes?: EksVolume[];
}
