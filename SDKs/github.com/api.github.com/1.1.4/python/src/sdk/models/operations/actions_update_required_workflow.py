"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import required_workflow as shared_required_workflow
from ..shared import validation_error_simple as shared_validation_error_simple
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ActionsUpdateRequiredWorkflowRequestBodyScopeEnum(str, Enum):
    r"""Enable the required workflow for all repositories or selected repositories in the organization."""
    SELECTED = 'selected'
    ALL = 'all'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionsUpdateRequiredWorkflowRequestBody:
    
    repository_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repository_id'), 'exclude': lambda f: f is None }})
    r"""The ID of the repository that contains the workflow file."""  
    scope: Optional[ActionsUpdateRequiredWorkflowRequestBodyScopeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scope'), 'exclude': lambda f: f is None }})
    r"""Enable the required workflow for all repositories or selected repositories in the organization."""  
    selected_repository_ids: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selected_repository_ids'), 'exclude': lambda f: f is None }})
    r"""A list of repository IDs where you want to enable the required workflow. A list of repository IDs where you want to enable the required workflow. You can only provide a list of repository ids when the `scope` is set to `selected`."""  
    workflow_file_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workflow_file_path'), 'exclude': lambda f: f is None }})
    r"""Path of the workflow file to be configured as a required workflow."""  
    

@dataclasses.dataclass
class ActionsUpdateRequiredWorkflowRequest:
    
    org: str = dataclasses.field(metadata={'path_param': { 'field_name': 'org', 'style': 'simple', 'explode': False }})
    r"""The organization name. The name is not case sensitive."""  
    request_body: ActionsUpdateRequiredWorkflowRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    required_workflow_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'required_workflow_id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the required workflow."""  
    

@dataclasses.dataclass
class ActionsUpdateRequiredWorkflowResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    required_workflow: Optional[shared_required_workflow.RequiredWorkflow] = dataclasses.field(default=None)
    r"""Response"""  
    validation_error_simple: Optional[shared_validation_error_simple.ValidationErrorSimple] = dataclasses.field(default=None)
    r"""Validation failed, or the endpoint has been spammed."""  
    