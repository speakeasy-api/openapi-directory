/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AssociationStatusEnum } from "./associationstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 *  Provides details about a control's enablement status in a specified standard.
 */
export class StandardsControlAssociationDetail extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AssociationStatus" })
  associationStatus: AssociationStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "RelatedRequirements" })
  relatedRequirements?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SecurityControlArn" })
  securityControlArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SecurityControlId" })
  securityControlId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StandardsArn" })
  standardsArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StandardsControlArns" })
  standardsControlArns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "StandardsControlDescription" })
  standardsControlDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StandardsControlTitle" })
  standardsControlTitle?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedReason" })
  updatedReason?: string;
}
