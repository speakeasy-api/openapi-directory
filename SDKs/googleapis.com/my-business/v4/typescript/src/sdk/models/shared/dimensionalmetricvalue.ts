/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TimeDimension } from "./timedimension";
import { Expose, Type } from "class-transformer";

/**
 * The option that requested this dimensional value.
 */
export enum DimensionalMetricValueMetricOptionEnum {
  MetricOptionUnspecified = "METRIC_OPTION_UNSPECIFIED",
  AggregatedTotal = "AGGREGATED_TOTAL",
  AggregatedDaily = "AGGREGATED_DAILY",
  BreakdownDayOfWeek = "BREAKDOWN_DAY_OF_WEEK",
  BreakdownHourOfDay = "BREAKDOWN_HOUR_OF_DAY",
}

/**
 * A value for a single metric with a given time dimension.
 */
export class DimensionalMetricValue extends SpeakeasyBase {
  /**
   * The option that requested this dimensional value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metricOption" })
  metricOption?: DimensionalMetricValueMetricOptionEnum;

  /**
   * The dimension for which data is divided over.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeDimension" })
  @Type(() => TimeDimension)
  timeDimension?: TimeDimension;

  /**
   * The value. If no value is set, then the requested data is missing.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}
