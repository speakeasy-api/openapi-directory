/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConnectorCapabilityEnum } from "./connectorcapabilityenum";
import { ConnectorStatusEnum } from "./connectorstatusenum";
import { VmManagerTypeEnum } from "./vmmanagertypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Represents a connector.
 */
export class Connector extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "associatedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  associatedOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "capabilityList" })
  capabilityList?: ConnectorCapabilityEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "connectorId" })
  connectorId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ipAddress" })
  ipAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "macAddress" })
  macAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ConnectorStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "vmManagerId" })
  vmManagerId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "vmManagerName" })
  vmManagerName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "vmManagerType" })
  vmManagerType?: VmManagerTypeEnum;
}
