// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteTransitGatewayPeeringAttachmentActionEnum
type GETDeleteTransitGatewayPeeringAttachmentActionEnum string

const (
	GETDeleteTransitGatewayPeeringAttachmentActionEnumDeleteTransitGatewayPeeringAttachment GETDeleteTransitGatewayPeeringAttachmentActionEnum = "DeleteTransitGatewayPeeringAttachment"
)

func (e GETDeleteTransitGatewayPeeringAttachmentActionEnum) ToPointer() *GETDeleteTransitGatewayPeeringAttachmentActionEnum {
	return &e
}

func (e *GETDeleteTransitGatewayPeeringAttachmentActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteTransitGatewayPeeringAttachment":
		*e = GETDeleteTransitGatewayPeeringAttachmentActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteTransitGatewayPeeringAttachmentActionEnum: %v", v)
	}
}

// GETDeleteTransitGatewayPeeringAttachmentVersionEnum
type GETDeleteTransitGatewayPeeringAttachmentVersionEnum string

const (
	GETDeleteTransitGatewayPeeringAttachmentVersionEnumTwoThousandAndSixteen1115 GETDeleteTransitGatewayPeeringAttachmentVersionEnum = "2016-11-15"
)

func (e GETDeleteTransitGatewayPeeringAttachmentVersionEnum) ToPointer() *GETDeleteTransitGatewayPeeringAttachmentVersionEnum {
	return &e
}

func (e *GETDeleteTransitGatewayPeeringAttachmentVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDeleteTransitGatewayPeeringAttachmentVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteTransitGatewayPeeringAttachmentVersionEnum: %v", v)
	}
}

type GETDeleteTransitGatewayPeeringAttachmentRequest struct {
	Action GETDeleteTransitGatewayPeeringAttachmentActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the transit gateway peering attachment.
	TransitGatewayAttachmentID string                                              `queryParam:"style=form,explode=true,name=TransitGatewayAttachmentId"`
	Version                    GETDeleteTransitGatewayPeeringAttachmentVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm              *string                                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteTransitGatewayPeeringAttachmentResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
