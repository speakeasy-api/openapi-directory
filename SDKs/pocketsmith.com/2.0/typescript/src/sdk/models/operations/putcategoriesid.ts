/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Set the refund behaviour of the category.
 */
export enum PutCategoriesIdRequestBodyRefundBehaviourEnum {
  DebitsAreDeductions = "debits_are_deductions",
  CreditsAreRefunds = "credits_are_refunds",
  Null = "null",
}

export class PutCategoriesIdRequestBody extends SpeakeasyBase {
  /**
   * A new CSS-style hex colour for the category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "colour" })
  colour?: string;

  /**
   * Set the category as a bill category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_bill" })
  isBill?: boolean;

  /**
   * Set the category as a transfer category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_transfer" })
  isTransfer?: boolean;

  /**
   * The unique identifier of a parent category for the category, making this category a child of that category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent_id" })
  parentId?: number;

  /**
   * Set the refund behaviour of the category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refund_behaviour" })
  refundBehaviour?: PutCategoriesIdRequestBodyRefundBehaviourEnum;

  /**
   * Set the category to be rolled up into its parent category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "roll_up" })
  rollUp?: boolean;

  /**
   * A new title for the category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}

export class PutCategoriesIdRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: PutCategoriesIdRequestBody;

  /**
   * The unique identifier of the category.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: number;
}

export class PutCategoriesIdResponse extends SpeakeasyBase {
  /**
   * Success
   */
  @SpeakeasyMetadata()
  category?: shared.Category;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Not Allowed
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
