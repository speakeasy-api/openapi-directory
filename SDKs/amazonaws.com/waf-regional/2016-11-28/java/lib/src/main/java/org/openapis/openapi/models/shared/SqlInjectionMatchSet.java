/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SqlInjectionMatchSet - &lt;note&gt; &lt;p&gt;This is &lt;b&gt;AWS WAF Classic&lt;/b&gt; documentation. For more information, see &lt;a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html"&gt;AWS WAF Classic&lt;/a&gt; in the developer guide.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For the latest version of AWS WAF&lt;/b&gt;, use the AWS WAFV2 API and see the &lt;a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html"&gt;AWS WAF Developer Guide&lt;/a&gt;. With the latest version, AWS WAF has a single set of endpoints for regional and global use. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;A complex type that contains &lt;code&gt;SqlInjectionMatchTuple&lt;/code&gt; objects, which specify the parts of web requests that you want AWS WAF to inspect for snippets of malicious SQL code and, if you want AWS WAF to inspect a header, the name of the header. If a &lt;code&gt;SqlInjectionMatchSet&lt;/code&gt; contains more than one &lt;code&gt;SqlInjectionMatchTuple&lt;/code&gt; object, a request needs to include snippets of SQL code in only one of the specified parts of the request to be considered a match.&lt;/p&gt;
 */
public class SqlInjectionMatchSet {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public SqlInjectionMatchSet withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("SqlInjectionMatchSetId")
    public String sqlInjectionMatchSetId;

    public SqlInjectionMatchSet withSqlInjectionMatchSetId(String sqlInjectionMatchSetId) {
        this.sqlInjectionMatchSetId = sqlInjectionMatchSetId;
        return this;
    }
    
    @JsonProperty("SqlInjectionMatchTuples")
    public SqlInjectionMatchTuple[] sqlInjectionMatchTuples;

    public SqlInjectionMatchSet withSqlInjectionMatchTuples(SqlInjectionMatchTuple[] sqlInjectionMatchTuples) {
        this.sqlInjectionMatchTuples = sqlInjectionMatchTuples;
        return this;
    }
    
    public SqlInjectionMatchSet(@JsonProperty("SqlInjectionMatchSetId") String sqlInjectionMatchSetId, @JsonProperty("SqlInjectionMatchTuples") SqlInjectionMatchTuple[] sqlInjectionMatchTuples) {
        this.sqlInjectionMatchSetId = sqlInjectionMatchSetId;
        this.sqlInjectionMatchTuples = sqlInjectionMatchTuples;
  }
}
