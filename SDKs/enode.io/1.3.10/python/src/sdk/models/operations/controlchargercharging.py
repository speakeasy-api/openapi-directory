"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class ControlChargerChargingSecurity:
    
    user_access_token: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    user_access_token1: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class ControlChargerChargingRequestBodyActionEnum(str, Enum):
    r"""Charging action to perform"""
    START = 'START'
    STOP = 'STOP'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ControlChargerChargingRequestBody:
    
    action: ControlChargerChargingRequestBodyActionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('action') }})
    r"""Charging action to perform"""  
    

@dataclasses.dataclass
class ControlChargerChargingRequest:
    
    charger_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'chargerId', 'style': 'simple', 'explode': False }})
    r"""ID of the Charger"""  
    request_body: Optional[ControlChargerChargingRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class ControlChargerChargingResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    