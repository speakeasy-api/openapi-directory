/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VirtualMachineDetails - Details of a VirtualMachine.
 */
public class VirtualMachineDetails {
    /**
     * Number of CPU cores in the VirtualMachine. Must be non-negative.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("coreCount")
    public Integer coreCount;

    public VirtualMachineDetails withCoreCount(Integer coreCount) {
        this.coreCount = coreCount;
        return this;
    }
    
    /**
     * VM creation timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public VirtualMachineDetails withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Information from Guest-level collections.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("guestOs")
    public GuestOsDetails guestOs;

    public VirtualMachineDetails withGuestOs(GuestOsDetails guestOs) {
        this.guestOs = guestOs;
        return this;
    }
    
    /**
     * The amount of memory in the VirtualMachine. Must be non-negative.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("memoryMb")
    public Integer memoryMb;

    public VirtualMachineDetails withMemoryMb(Integer memoryMb) {
        this.memoryMb = memoryMb;
        return this;
    }
    
    /**
     * What family the OS belong to, if known.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osFamily")
    public VirtualMachineDetailsOsFamilyEnum osFamily;

    public VirtualMachineDetails withOsFamily(VirtualMachineDetailsOsFamilyEnum osFamily) {
        this.osFamily = osFamily;
        return this;
    }
    
    /**
     * The name of the operating system running on the VirtualMachine.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osName")
    public String osName;

    public VirtualMachineDetails withOsName(String osName) {
        this.osName = osName;
        return this;
    }
    
    /**
     * The version of the operating system running on the virtual machine.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osVersion")
    public String osVersion;

    public VirtualMachineDetails withOsVersion(String osVersion) {
        this.osVersion = osVersion;
        return this;
    }
    
    /**
     * Information about the platform.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platform")
    public PlatformDetails platform;

    public VirtualMachineDetails withPlatform(PlatformDetails platform) {
        this.platform = platform;
        return this;
    }
    
    /**
     * Power state of VM (poweredOn or poweredOff).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("powerState")
    public String powerState;

    public VirtualMachineDetails withPowerState(String powerState) {
        this.powerState = powerState;
        return this;
    }
    
    /**
     * Folder name in vCenter where asset resides.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vcenterFolder")
    public String vcenterFolder;

    public VirtualMachineDetails withVcenterFolder(String vcenterFolder) {
        this.vcenterFolder = vcenterFolder;
        return this;
    }
    
    /**
     * vCenter URL used in collection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vcenterUrl")
    public String vcenterUrl;

    public VirtualMachineDetails withVcenterUrl(String vcenterUrl) {
        this.vcenterUrl = vcenterUrl;
        return this;
    }
    
    /**
     * vCenter VM ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vcenterVmId")
    public String vcenterVmId;

    public VirtualMachineDetails withVcenterVmId(String vcenterVmId) {
        this.vcenterVmId = vcenterVmId;
        return this;
    }
    
    /**
     * Details of the VM architecture.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vmArchitecture")
    public VirtualMachineArchitectureDetails vmArchitecture;

    public VirtualMachineDetails withVmArchitecture(VirtualMachineArchitectureDetails vmArchitecture) {
        this.vmArchitecture = vmArchitecture;
        return this;
    }
    
    /**
     * Details of VM disks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vmDisks")
    public VirtualMachineDiskDetails vmDisks;

    public VirtualMachineDetails withVmDisks(VirtualMachineDiskDetails vmDisks) {
        this.vmDisks = vmDisks;
        return this;
    }
    
    /**
     * Virtual Machine display name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vmName")
    public String vmName;

    public VirtualMachineDetails withVmName(String vmName) {
        this.vmName = vmName;
        return this;
    }
    
    /**
     * Details of network adapters and settings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vmNetwork")
    public VirtualMachineNetworkDetails vmNetwork;

    public VirtualMachineDetails withVmNetwork(VirtualMachineNetworkDetails vmNetwork) {
        this.vmNetwork = vmNetwork;
        return this;
    }
    
    /**
     * Virtual Machine unique identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vmUuid")
    public String vmUuid;

    public VirtualMachineDetails withVmUuid(String vmUuid) {
        this.vmUuid = vmUuid;
        return this;
    }
    
    public VirtualMachineDetails(){}
}
