/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NHTool - A JSON object describing the tool.
 */
public class NHTool {
    /**
     * Where the tool may be obtained from (could be multiple sources). `from` is a brief description of the source; `note`, when provided, provides additional details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availability")
    public NHToolAvailability[] availability;
    public NHTool withAvailability(NHToolAvailability[] availability) {
        this.availability = availability;
        return this;
    }
    
    /**
     * An array of prices, for when the item may be purchased with Bells, Nook Miles, etc..
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buy")
    public NHToolBuy[] buy;
    public NHTool withBuy(NHToolBuy[] buy) {
        this.buy = buy;
        return this;
    }
    
    /**
     * If the item has variations, this is the name of the furniture part that changes. For example, for many bamboo items, the custom body part is "Bamboo" as the bamboo color is able to be customized.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_body_part")
    public String customBodyPart;
    public NHTool withCustomBodyPart(String customBodyPart) {
        this.customBodyPart = customBodyPart;
        return this;
    }
    
    /**
     * The number of `custom_kit_type`s (e.g. Customization Kits) that are needed to customize this item. Value is 0 if the item is not customizable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_kits")
    public Long customKits;
    public NHTool withCustomKits(Long customKits) {
        this.customKits = customKits;
        return this;
    }
    
    /**
     * Whether or not the item is customizable via a crafting table.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customizable")
    public Boolean customizable;
    public NHTool withCustomizable(Boolean customizable) {
        this.customizable = customizable;
        return this;
    }
    
    /**
     * The base value that the item provides to a player's Happy Home Academy score when placed in their home.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hha_base")
    public Long hhaBase;
    public NHTool withHhaBase(Long hhaBase) {
        this.hhaBase = hhaBase;
        return this;
    }
    
    /**
     * The name of the tool.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public NHTool withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Any additional miscellaneous information about the item, such as a name change from a past update.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public NHTool withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * The number of bells the tool can be sold to the store for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sell")
    public Long sell;
    public NHTool withSell(Long sell) {
        this.sell = sell;
        return this;
    }
    
    /**
     * Whether the item is available through legitimate gameplay. Some items are added to the game files in an update, but aren't actually made available until a subsequent update unlocks them.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unlocked")
    public Boolean unlocked;
    public NHTool withUnlocked(Boolean unlocked) {
        this.unlocked = unlocked;
        return this;
    }
    
    /**
     * Link the the respective Nookipedia article.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public NHTool withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * How many times the tool can be used before breaking.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uses")
    public Long uses;
    public NHTool withUses(Long uses) {
        this.uses = uses;
        return this;
    }
    
    /**
     * An array of objects, each object representing a variation of the tool. Tools that has no variations (only one version) will have a single variation object with the image URL and colors, but the `variation` field will be empty. Tools with multiple variations will have the `variation` fields defined with the name of each variation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("variations")
    public NHToolVariations[] variations;
    public NHTool withVariations(NHToolVariations[] variations) {
        this.variations = variations;
        return this;
    }
    
    /**
     * The version of *New Horizons* that the item was added. Items that were included at the game's launch have version "1.0.0".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version_added")
    public String versionAdded;
    public NHTool withVersionAdded(String versionAdded) {
        this.versionAdded = versionAdded;
        return this;
    }
    
}
