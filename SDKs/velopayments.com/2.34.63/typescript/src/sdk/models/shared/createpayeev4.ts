/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChallengeV4 } from "./challengev4";
import { CompanyV4 } from "./companyv4";
import { CreateIndividualV4 } from "./createindividualv4";
import { CreatePayeeAddressV4 } from "./createpayeeaddressv4";
import { CreatePaymentChannelV4 } from "./createpaymentchannelv4";
import { PayeeTypeEnumEnum } from "./payeetypeenumenum";
import { Expose, Type } from "class-transformer";

export class CreatePayeeV4 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => CreatePayeeAddressV4)
  address: CreatePayeeAddressV4;

  /**
   * <p>Used to override the default challenge presented to the payee when they onboard</p>
   *
   * @remarks
   * <p>Not used after the payee has onboarded</p>
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "challenge" })
  @Type(() => ChallengeV4)
  challenge?: ChallengeV4;

  @SpeakeasyMetadata()
  @Expose({ name: "company" })
  @Type(() => CompanyV4)
  company?: CompanyV4;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  @SpeakeasyMetadata()
  @Expose({ name: "individual" })
  @Type(() => CreateIndividualV4)
  individual?: CreateIndividualV4;

  /**
   * An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>
   *
   * @remarks
   * See the /v1/supportedLanguages endpoint to list the available codes for an environment.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "paymentChannel" })
  @Type(() => CreatePaymentChannelV4)
  paymentChannel?: CreatePaymentChannelV4;

  @SpeakeasyMetadata()
  @Expose({ name: "remoteId" })
  remoteId: string;

  /**
   * The type of the payee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: PayeeTypeEnumEnum;
}
