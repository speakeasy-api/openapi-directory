// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ChartDataAggregateTypeEnum - The aggregation type for the series of a data source chart. Only supported for data source charts.
type ChartDataAggregateTypeEnum string

const (
	ChartDataAggregateTypeEnumChartAggregateTypeUnspecified ChartDataAggregateTypeEnum = "CHART_AGGREGATE_TYPE_UNSPECIFIED"
	ChartDataAggregateTypeEnumAverage                       ChartDataAggregateTypeEnum = "AVERAGE"
	ChartDataAggregateTypeEnumCount                         ChartDataAggregateTypeEnum = "COUNT"
	ChartDataAggregateTypeEnumMax                           ChartDataAggregateTypeEnum = "MAX"
	ChartDataAggregateTypeEnumMedian                        ChartDataAggregateTypeEnum = "MEDIAN"
	ChartDataAggregateTypeEnumMin                           ChartDataAggregateTypeEnum = "MIN"
	ChartDataAggregateTypeEnumSum                           ChartDataAggregateTypeEnum = "SUM"
)

func (e ChartDataAggregateTypeEnum) ToPointer() *ChartDataAggregateTypeEnum {
	return &e
}

func (e *ChartDataAggregateTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CHART_AGGREGATE_TYPE_UNSPECIFIED":
		fallthrough
	case "AVERAGE":
		fallthrough
	case "COUNT":
		fallthrough
	case "MAX":
		fallthrough
	case "MEDIAN":
		fallthrough
	case "MIN":
		fallthrough
	case "SUM":
		*e = ChartDataAggregateTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ChartDataAggregateTypeEnum: %v", v)
	}
}

// ChartData - The data included in a domain or series.
type ChartData struct {
	// The aggregation type for the series of a data source chart. Only supported for data source charts.
	AggregateType *ChartDataAggregateTypeEnum `json:"aggregateType,omitempty"`
	// An unique identifier that references a data source column.
	ColumnReference *DataSourceColumnReference `json:"columnReference,omitempty"`
	// An optional setting on the ChartData of the domain of a data source chart that defines buckets for the values in the domain rather than breaking out each individual value. For example, when plotting a data source chart, you can specify a histogram rule on the domain (it should only contain numeric values), grouping its values into buckets. Any values of a chart series that fall into the same bucket are aggregated based on the aggregate_type.
	GroupRule *ChartGroupRule `json:"groupRule,omitempty"`
	// Source ranges for a chart.
	SourceRange *ChartSourceRange `json:"sourceRange,omitempty"`
}
