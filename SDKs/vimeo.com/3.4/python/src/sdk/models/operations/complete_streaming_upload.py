"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from typing import Optional


@dataclasses.dataclass
class CompleteStreamingUploadSecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class CompleteStreamingUploadRequest:
    
    signature: str = dataclasses.field(metadata={'query_param': { 'field_name': 'signature', 'style': 'form', 'explode': True }})
    r"""The crypto signature of the completed upload."""  
    upload: float = dataclasses.field(metadata={'path_param': { 'field_name': 'upload', 'style': 'simple', 'explode': False }})
    r"""The ID of the upload attempt."""  
    user_id: float = dataclasses.field(metadata={'path_param': { 'field_name': 'user_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the user."""  
    video_file_id: float = dataclasses.field(metadata={'query_param': { 'field_name': 'video_file_id', 'style': 'form', 'explode': True }})
    r"""The ID of the uploaded file."""  
    

@dataclasses.dataclass
class CompleteStreamingUploadResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Error code 2502: The format of the video file is invalid."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    