"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import videopreviewurl as shared_videopreviewurl
from ..shared import videosizedetails as shared_videosizedetails
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EditorialVideoAssets:
    r"""Asset information, including size and thumbnail URLs"""
    
    original: Optional[shared_videosizedetails.VideoSizeDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('original'), 'exclude': lambda f: f is None }})
    r"""Video asset information"""  
    preview_mp4: Optional[shared_videopreviewurl.VideoPreviewURL] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preview_mp4'), 'exclude': lambda f: f is None }})
    r"""Video preview information"""  
    preview_webm: Optional[shared_videopreviewurl.VideoPreviewURL] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('preview_webm'), 'exclude': lambda f: f is None }})
    r"""Video preview information"""  
    thumb_jpg: Optional[shared_videopreviewurl.VideoPreviewURL] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thumb_jpg'), 'exclude': lambda f: f is None }})
    r"""Video preview information"""  
    