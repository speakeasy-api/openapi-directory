/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DatabaseInstanceInput - A Cloud SQL instance resource.
 */
public class DatabaseInstanceInput {
    /**
     * List all maintenance versions applicable on the instance
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availableMaintenanceVersions")
    public String[] availableMaintenanceVersions;
    public DatabaseInstanceInput withAvailableMaintenanceVersions(String[] availableMaintenanceVersions) {
        this.availableMaintenanceVersions = availableMaintenanceVersions;
        return this;
    }
    
    /**
     * The backend type. `SECOND_GEN`: Cloud SQL database instance. `EXTERNAL`: A database server that is not managed by Google. This property is read-only; use the `tier` property in the `settings` object to determine the database type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backendType")
    public DatabaseInstanceBackendTypeEnum backendType;
    public DatabaseInstanceInput withBackendType(DatabaseInstanceBackendTypeEnum backendType) {
        this.backendType = backendType;
        return this;
    }
    
    /**
     * Connection name of the Cloud SQL instance used in connection strings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("connectionName")
    public String connectionName;
    public DatabaseInstanceInput withConnectionName(String connectionName) {
        this.connectionName = connectionName;
        return this;
    }
    
    /**
     * The current disk usage of the instance in bytes. This property has been deprecated. Use the "cloudsql.googleapis.com/database/disk/bytes_used" metric in Cloud Monitoring API instead. Please see [this announcement](https://groups.google.com/d/msg/google-cloud-sql-announce/I_7-F9EBhT0/BtvFtdFeAgAJ) for details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentDiskSize")
    public String currentDiskSize;
    public DatabaseInstanceInput withCurrentDiskSize(String currentDiskSize) {
        this.currentDiskSize = currentDiskSize;
        return this;
    }
    
    /**
     * The database engine type and version. The `databaseVersion` field cannot be changed after instance creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("databaseVersion")
    public DatabaseInstanceDatabaseVersionEnum databaseVersion;
    public DatabaseInstanceInput withDatabaseVersion(DatabaseInstanceDatabaseVersionEnum databaseVersion) {
        this.databaseVersion = databaseVersion;
        return this;
    }
    
    /**
     * Disk encryption configuration for an instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diskEncryptionConfiguration")
    public DiskEncryptionConfiguration diskEncryptionConfiguration;
    public DatabaseInstanceInput withDiskEncryptionConfiguration(DiskEncryptionConfiguration diskEncryptionConfiguration) {
        this.diskEncryptionConfiguration = diskEncryptionConfiguration;
        return this;
    }
    
    /**
     * Disk encryption status for an instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diskEncryptionStatus")
    public DiskEncryptionStatus diskEncryptionStatus;
    public DatabaseInstanceInput withDiskEncryptionStatus(DiskEncryptionStatus diskEncryptionStatus) {
        this.diskEncryptionStatus = diskEncryptionStatus;
        return this;
    }
    
    /**
     * This field is deprecated and will be removed from a future version of the API. Use the `settings.settingsVersion` field instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;
    public DatabaseInstanceInput withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * The name and status of the failover replica.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failoverReplica")
    public DatabaseInstanceFailoverReplica failoverReplica;
    public DatabaseInstanceInput withFailoverReplica(DatabaseInstanceFailoverReplica failoverReplica) {
        this.failoverReplica = failoverReplica;
        return this;
    }
    
    /**
     * The Compute Engine zone that the instance is currently serving from. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary zone. WARNING: Changing this might restart the instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gceZone")
    public String gceZone;
    public DatabaseInstanceInput withGceZone(String gceZone) {
        this.gceZone = gceZone;
        return this;
    }
    
    /**
     * The instance type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceType")
    public DatabaseInstanceInstanceTypeEnum instanceType;
    public DatabaseInstanceInput withInstanceType(DatabaseInstanceInstanceTypeEnum instanceType) {
        this.instanceType = instanceType;
        return this;
    }
    
    /**
     * The assigned IP addresses for the instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipAddresses")
    public IpMapping[] ipAddresses;
    public DatabaseInstanceInput withIpAddresses(IpMapping[] ipAddresses) {
        this.ipAddresses = ipAddresses;
        return this;
    }
    
    /**
     * The IPv6 address assigned to the instance. (Deprecated) This property was applicable only to First Generation instances.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipv6Address")
    public String ipv6Address;
    public DatabaseInstanceInput withIpv6Address(String ipv6Address) {
        this.ipv6Address = ipv6Address;
        return this;
    }
    
    /**
     * This is always `sql#instance`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public DatabaseInstanceInput withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The current software version on the instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maintenanceVersion")
    public String maintenanceVersion;
    public DatabaseInstanceInput withMaintenanceVersion(String maintenanceVersion) {
        this.maintenanceVersion = maintenanceVersion;
        return this;
    }
    
    /**
     * The name of the instance which will act as primary in the replication setup.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("masterInstanceName")
    public String masterInstanceName;
    public DatabaseInstanceInput withMasterInstanceName(String masterInstanceName) {
        this.masterInstanceName = masterInstanceName;
        return this;
    }
    
    /**
     * The maximum disk size of the instance in bytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxDiskSize")
    public String maxDiskSize;
    public DatabaseInstanceInput withMaxDiskSize(String maxDiskSize) {
        this.maxDiskSize = maxDiskSize;
        return this;
    }
    
    /**
     * Name of the Cloud SQL instance. This does not include the project ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public DatabaseInstanceInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * On-premises instance configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onPremisesConfiguration")
    public OnPremisesConfiguration onPremisesConfiguration;
    public DatabaseInstanceInput withOnPremisesConfiguration(OnPremisesConfiguration onPremisesConfiguration) {
        this.onPremisesConfiguration = onPremisesConfiguration;
        return this;
    }
    
    /**
     * This message wraps up the information written by out-of-disk detection job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outOfDiskReport")
    public SqlOutOfDiskReport outOfDiskReport;
    public DatabaseInstanceInput withOutOfDiskReport(SqlOutOfDiskReport outOfDiskReport) {
        this.outOfDiskReport = outOfDiskReport;
        return this;
    }
    
    /**
     * The project ID of the project containing the Cloud SQL instance. The Google apps domain is prefixed if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("project")
    public String project;
    public DatabaseInstanceInput withProject(String project) {
        this.project = project;
        return this;
    }
    
    /**
     * The geographical region. Can be: * `us-central` (`FIRST_GEN` instances only) * `us-central1` (`SECOND_GEN` instances only) * `asia-east1` or `europe-west1`. Defaults to `us-central` or `us-central1` depending on the instance type. The region cannot be changed after instance creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("region")
    public String region;
    public DatabaseInstanceInput withRegion(String region) {
        this.region = region;
        return this;
    }
    
    /**
     * Read-replica configuration for connecting to the primary instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replicaConfiguration")
    public ReplicaConfiguration replicaConfiguration;
    public DatabaseInstanceInput withReplicaConfiguration(ReplicaConfiguration replicaConfiguration) {
        this.replicaConfiguration = replicaConfiguration;
        return this;
    }
    
    /**
     * The replicas of the instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replicaNames")
    public String[] replicaNames;
    public DatabaseInstanceInput withReplicaNames(String[] replicaNames) {
        this.replicaNames = replicaNames;
        return this;
    }
    
    /**
     * Initial root password. Use only on creation. You must set root passwords before you can connect to PostgreSQL instances.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rootPassword")
    public String rootPassword;
    public DatabaseInstanceInput withRootPassword(String rootPassword) {
        this.rootPassword = rootPassword;
        return this;
    }
    
    /**
     * The status indicating if instance satisfiesPzs. Reserved for future use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("satisfiesPzs")
    public Boolean satisfiesPzs;
    public DatabaseInstanceInput withSatisfiesPzs(Boolean satisfiesPzs) {
        this.satisfiesPzs = satisfiesPzs;
        return this;
    }
    
    /**
     * Any scheduled maintenance for this instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scheduledMaintenance")
    public SqlScheduledMaintenance scheduledMaintenance;
    public DatabaseInstanceInput withScheduledMaintenance(SqlScheduledMaintenance scheduledMaintenance) {
        this.scheduledMaintenance = scheduledMaintenance;
        return this;
    }
    
    /**
     * The Compute Engine zone that the failover instance is currently serving from for a regional instance. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary/failover zone.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secondaryGceZone")
    public String secondaryGceZone;
    public DatabaseInstanceInput withSecondaryGceZone(String secondaryGceZone) {
        this.secondaryGceZone = secondaryGceZone;
        return this;
    }
    
    /**
     * The URI of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;
    public DatabaseInstanceInput withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * SslCerts Resource
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serverCaCert")
    public SslCert serverCaCert;
    public DatabaseInstanceInput withServerCaCert(SslCert serverCaCert) {
        this.serverCaCert = serverCaCert;
        return this;
    }
    
    /**
     * The service account email address assigned to the instance.\This property is read-only.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccountEmailAddress")
    public String serviceAccountEmailAddress;
    public DatabaseInstanceInput withServiceAccountEmailAddress(String serviceAccountEmailAddress) {
        this.serviceAccountEmailAddress = serviceAccountEmailAddress;
        return this;
    }
    
    /**
     * Database instance settings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("settings")
    public Settings settings;
    public DatabaseInstanceInput withSettings(Settings settings) {
        this.settings = settings;
        return this;
    }
    
    /**
     * The current serving state of the Cloud SQL instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public DatabaseInstanceStateEnum state;
    public DatabaseInstanceInput withState(DatabaseInstanceStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * If the instance state is SUSPENDED, the reason for the suspension.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suspensionReason")
    public DatabaseInstanceSuspensionReasonEnum[] suspensionReason;
    public DatabaseInstanceInput withSuspensionReason(DatabaseInstanceSuspensionReasonEnum[] suspensionReason) {
        this.suspensionReason = suspensionReason;
        return this;
    }
    
}
