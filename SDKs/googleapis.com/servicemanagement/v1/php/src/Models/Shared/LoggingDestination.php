<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * LoggingDestination - Configuration of a specific logging destination (the producer project or the consumer project).
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class LoggingDestination
{
    /**
     * Names of the logs to be sent to this destination. Each name must be defined in the Service.logs section. If the log name is not a domain scoped name, it will be automatically prefixed with the service name followed by "/".
     * 
     * @var ?array<string> $logs
     */
	#[\JMS\Serializer\Annotation\SerializedName('logs')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $logs = null;
    
    /**
     * The monitored resource type. The type must be defined in the Service.monitored_resources section.
     * 
     * @var ?string $monitoredResource
     */
	#[\JMS\Serializer\Annotation\SerializedName('monitoredResource')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $monitoredResource = null;
    
	public function __construct()
	{
		$this->logs = null;
		$this->monitoredResource = null;
	}
}
