<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class JobMonitoringInfo
{
    /**
     * Amount of data to transfer in bytes.
     * 
     * @var ?int $dataToTransfer
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataToTransfer')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $dataToTransfer = null;
    
    /**
     * The amount of data transferred as part of the job in bytes.
     * 
     * @var ?int $dataTransferred
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataTransferred')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $dataTransferred = null;
    
    /**
     * The number of seconds since the job started to active jobs. The number of seconds the job ran for completed jobs.
     * 
     * @var ?int $duration
     */
	#[\JMS\Serializer\Annotation\SerializedName('duration')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $duration = null;
    
    /**
     * End time of the job. Leave this value empty for queued and running jobs.
     * 
     * @var ?\DateTime $endTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('endTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $endTime = null;
    
    /**
     * Description of error information for the job.
     * 
     * @var ?string $errorInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('errorInfo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $errorInfo = null;
    
    /**
     * The event series id associated with the job.
     * 
     * @var string $eventSeriesId
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventSeriesId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $eventSeriesId;
    
    /**
     * A Boolean value that determines whether or not the job associated with the event is a first full snapshot backup.
     * 
     * @var ?bool $isFirstFullSnapshot
     */
	#[\JMS\Serializer\Annotation\SerializedName('isFirstFullSnapshot')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isFirstFullSnapshot = null;
    
    /**
     * A boolean value indication if the job is a log related job.
     * 
     * @var bool $isLogTask
     */
	#[\JMS\Serializer\Annotation\SerializedName('isLogTask')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isLogTask;
    
    /**
     * A boolean value indication if the job is a an on demand job.
     * 
     * @var bool $isOnDemand
     */
	#[\JMS\Serializer\Annotation\SerializedName('isOnDemand')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isOnDemand;
    
    /**
     * Monitoring state of the job used for monitoring tabs.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\JobMonitoringStateEnum $jobMonitoringState
     */
	#[\JMS\Serializer\Annotation\SerializedName('jobMonitoringState')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\JobMonitoringStateEnum>')]
    public JobMonitoringStateEnum $jobMonitoringState;
    
    /**
     * Monitoring status of the job break down.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\JobMonitoringStatusEnum $jobStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('jobStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\JobMonitoringStatusEnum>')]
    public JobMonitoringStatusEnum $jobStatus;
    
    /**
     * Task type.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\JobMonitoringTaskTypeEnum $jobType
     */
	#[\JMS\Serializer\Annotation\SerializedName('jobType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\JobMonitoringTaskTypeEnum>')]
    public JobMonitoringTaskTypeEnum $jobType;
    
    /**
     * Time of the last successful job of the same job type. The return value is None if no successful jobs are present.
     * 
     * @var ?\DateTime $lastSuccessfulJobTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastSuccessfulJobTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastSuccessfulJobTime = null;
    
    /**
     * The time the status for the job has been updated.
     * 
     * @var \DateTime $lastUpdatedTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastUpdatedTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $lastUpdatedTime;
    
    /**
     * Id of the location of the object.
     * 
     * @var ?string $locationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('locationId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $locationId = null;
    
    /**
     * Location Name.
     * 
     * @var ?string $locationName
     */
	#[\JMS\Serializer\Annotation\SerializedName('locationName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $locationName = null;
    
    /**
     * The maximum number of times the job will run in case of a failure.
     * 
     * @var ?int $maximumAttemptsForJob
     */
	#[\JMS\Serializer\Annotation\SerializedName('maximumAttemptsForJob')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maximumAttemptsForJob = null;
    
    /**
     * Expected start time of the next job of the same job type. The return value is None if no new job is scheduled.
     * 
     * @var ?\DateTime $nextJobTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('nextJobTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $nextJobTime = null;
    
    /**
     * Id of the node the job is running on.
     * 
     * @var ?string $nodeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nodeId = null;
    
    /**
     * The managed id of the object.
     * 
     * @var string $objectId
     */
	#[\JMS\Serializer\Annotation\SerializedName('objectId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $objectId;
    
    /**
     * The object size in bytes.
     * 
     * @var ?int $objectLogicalSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('objectLogicalSize')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $objectLogicalSize = null;
    
    /**
     * The name of the object in the job.
     * 
     * @var ?string $objectName
     */
	#[\JMS\Serializer\Annotation\SerializedName('objectName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $objectName = null;
    
    /**
     * Object types that are reported on.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ReportableObjectTypeEnum $objectType
     */
	#[\JMS\Serializer\Annotation\SerializedName('objectType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ReportableObjectTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReportableObjectTypeEnum $objectType = null;
    
    /**
     * The number of times the job has retired.
     * 
     * @var ?int $retryCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('retryCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $retryCount = null;
    
    /**
     * Monitoring retry status of the job (default is NotRetried).
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\JobMonitoringRetryStatusEnum $retryStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('retryStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\JobMonitoringRetryStatusEnum>')]
    public JobMonitoringRetryStatusEnum $retryStatus;
    
    /**
     * Sla Domain Id.
     * 
     * @var ?string $slaDomainId
     */
	#[\JMS\Serializer\Annotation\SerializedName('slaDomainId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $slaDomainId = null;
    
    /**
     * Sla Domain name.
     * 
     * @var ?string $slaDomainName
     */
	#[\JMS\Serializer\Annotation\SerializedName('slaDomainName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $slaDomainName = null;
    
    /**
     * For replication jobs, this stores the source cluster name. Leave this value empty for other jobs.
     * 
     * @var ?string $sourceClusterName
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceClusterName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceClusterName = null;
    
    /**
     * Start time for running or completed jobs. It is the scheduled start time for Queued jobs.
     * 
     * @var \DateTime $startTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $startTime;
    
    /**
     * The throughput for running or completed jobs (measured in bytes/s). When no running or completed jobs exist no value is provided.
     * 
     * @var ?int $throughput
     */
	#[\JMS\Serializer\Annotation\SerializedName('throughput')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $throughput = null;
    
    /**
     * The number of warning events in the event series associated with the job.
     * 
     * @var ?int $warningCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('warningCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $warningCount = null;
    
	public function __construct()
	{
		$this->dataToTransfer = null;
		$this->dataTransferred = null;
		$this->duration = null;
		$this->endTime = null;
		$this->errorInfo = null;
		$this->eventSeriesId = "";
		$this->isFirstFullSnapshot = null;
		$this->isLogTask = false;
		$this->isOnDemand = false;
		$this->jobMonitoringState = \OpenAPI\OpenAPI\Models\Shared\JobMonitoringStateEnum::FAILURE;
		$this->jobStatus = \OpenAPI\OpenAPI\Models\Shared\JobMonitoringStatusEnum::FAILURE;
		$this->jobType = \OpenAPI\OpenAPI\Models\Shared\JobMonitoringTaskTypeEnum::ARCHIVAL;
		$this->lastSuccessfulJobTime = null;
		$this->lastUpdatedTime = new \DateTime();
		$this->locationId = null;
		$this->locationName = null;
		$this->maximumAttemptsForJob = null;
		$this->nextJobTime = null;
		$this->nodeId = null;
		$this->objectId = "";
		$this->objectLogicalSize = null;
		$this->objectName = null;
		$this->objectType = null;
		$this->retryCount = null;
		$this->retryStatus = \OpenAPI\OpenAPI\Models\Shared\JobMonitoringRetryStatusEnum::REQUEST_RECEIVED;
		$this->slaDomainId = null;
		$this->slaDomainName = null;
		$this->sourceClusterName = null;
		$this->startTime = new \DateTime();
		$this->throughput = null;
		$this->warningCount = null;
	}
}
