// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ScoutingObservationAttachmentStatusEnum - The status of the attachment. For example : ACTIVE, DELETED
type ScoutingObservationAttachmentStatusEnum string

const (
	ScoutingObservationAttachmentStatusEnumActive  ScoutingObservationAttachmentStatusEnum = "ACTIVE"
	ScoutingObservationAttachmentStatusEnumDeleted ScoutingObservationAttachmentStatusEnum = "DELETED"
)

func (e *ScoutingObservationAttachmentStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACTIVE":
		fallthrough
	case "DELETED":
		*e = ScoutingObservationAttachmentStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ScoutingObservationAttachmentStatusEnum: %s", s)
	}
}

type ScoutingObservationAttachment struct {
	// The content type of the attachment, e.g. image/png.
	ContentType string `json:"contentType"`
	// id of the attachment
	ID string `json:"id"`
	// The number of bytes in the attachment.
	Length int64 `json:"length"`
	// The status of the attachment. For example : ACTIVE, DELETED
	Status ScoutingObservationAttachmentStatusEnum `json:"status"`
	// The time the attachment was last updated.
	// Time in ISO 8601 format with UTC timezone, 3 fractional seconds.
	// (https://tools.ietf.org/html/rfc3339)
	//
	UpdatedAt time.Time `json:"updatedAt"`
}
