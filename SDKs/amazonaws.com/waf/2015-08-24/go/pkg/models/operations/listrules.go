// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListRulesXAmzTargetEnum
type ListRulesXAmzTargetEnum string

const (
	ListRulesXAmzTargetEnumAwswaf20150824ListRules ListRulesXAmzTargetEnum = "AWSWAF_20150824.ListRules"
)

func (e *ListRulesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSWAF_20150824.ListRules":
		*e = ListRulesXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRulesXAmzTargetEnum: %s", s)
	}
}

type ListRulesHeaders struct {
	XAmzAlgorithm     *string                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListRulesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListRulesRequest struct {
	Headers ListRulesHeaders
	Request shared.ListRulesRequest `request:"mediaType=application/json"`
}

type ListRulesResponse struct {
	ContentType string
	// Success
	ListRulesResponse *shared.ListRulesResponse
	StatusCode        int
	RawResponse       *http.Response
	// WAFInternalErrorException
	WAFInternalErrorException interface{}
	// WAFInvalidAccountException
	WAFInvalidAccountException interface{}
}
