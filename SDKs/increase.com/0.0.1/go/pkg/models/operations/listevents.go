// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type ListEventsCategoryInEnum string

const (
	ListEventsCategoryInEnumAccountCreated                                       ListEventsCategoryInEnum = "account.created"
	ListEventsCategoryInEnumAccountUpdated                                       ListEventsCategoryInEnum = "account.updated"
	ListEventsCategoryInEnumAccountNumberCreated                                 ListEventsCategoryInEnum = "account_number.created"
	ListEventsCategoryInEnumAccountNumberUpdated                                 ListEventsCategoryInEnum = "account_number.updated"
	ListEventsCategoryInEnumAccountStatementCreated                              ListEventsCategoryInEnum = "account_statement.created"
	ListEventsCategoryInEnumAccountTransferCreated                               ListEventsCategoryInEnum = "account_transfer.created"
	ListEventsCategoryInEnumAccountTransferUpdated                               ListEventsCategoryInEnum = "account_transfer.updated"
	ListEventsCategoryInEnumAchPrenotificationCreated                            ListEventsCategoryInEnum = "ach_prenotification.created"
	ListEventsCategoryInEnumAchPrenotificationUpdated                            ListEventsCategoryInEnum = "ach_prenotification.updated"
	ListEventsCategoryInEnumAchTransferCreated                                   ListEventsCategoryInEnum = "ach_transfer.created"
	ListEventsCategoryInEnumAchTransferUpdated                                   ListEventsCategoryInEnum = "ach_transfer.updated"
	ListEventsCategoryInEnumCardCreated                                          ListEventsCategoryInEnum = "card.created"
	ListEventsCategoryInEnumCardUpdated                                          ListEventsCategoryInEnum = "card.updated"
	ListEventsCategoryInEnumCardPaymentCreated                                   ListEventsCategoryInEnum = "card_payment.created"
	ListEventsCategoryInEnumCardPaymentUpdated                                   ListEventsCategoryInEnum = "card_payment.updated"
	ListEventsCategoryInEnumCardDisputeCreated                                   ListEventsCategoryInEnum = "card_dispute.created"
	ListEventsCategoryInEnumCardDisputeUpdated                                   ListEventsCategoryInEnum = "card_dispute.updated"
	ListEventsCategoryInEnumCheckDepositCreated                                  ListEventsCategoryInEnum = "check_deposit.created"
	ListEventsCategoryInEnumCheckDepositUpdated                                  ListEventsCategoryInEnum = "check_deposit.updated"
	ListEventsCategoryInEnumCheckTransferCreated                                 ListEventsCategoryInEnum = "check_transfer.created"
	ListEventsCategoryInEnumCheckTransferUpdated                                 ListEventsCategoryInEnum = "check_transfer.updated"
	ListEventsCategoryInEnumDeclinedTransactionCreated                           ListEventsCategoryInEnum = "declined_transaction.created"
	ListEventsCategoryInEnumDigitalWalletTokenCreated                            ListEventsCategoryInEnum = "digital_wallet_token.created"
	ListEventsCategoryInEnumDigitalWalletTokenUpdated                            ListEventsCategoryInEnum = "digital_wallet_token.updated"
	ListEventsCategoryInEnumDocumentCreated                                      ListEventsCategoryInEnum = "document.created"
	ListEventsCategoryInEnumEntityCreated                                        ListEventsCategoryInEnum = "entity.created"
	ListEventsCategoryInEnumEntityUpdated                                        ListEventsCategoryInEnum = "entity.updated"
	ListEventsCategoryInEnumExternalAccountCreated                               ListEventsCategoryInEnum = "external_account.created"
	ListEventsCategoryInEnumFileCreated                                          ListEventsCategoryInEnum = "file.created"
	ListEventsCategoryInEnumGroupUpdated                                         ListEventsCategoryInEnum = "group.updated"
	ListEventsCategoryInEnumGroupHeartbeat                                       ListEventsCategoryInEnum = "group.heartbeat"
	ListEventsCategoryInEnumInboundAchTransferReturnCreated                      ListEventsCategoryInEnum = "inbound_ach_transfer_return.created"
	ListEventsCategoryInEnumInboundAchTransferReturnUpdated                      ListEventsCategoryInEnum = "inbound_ach_transfer_return.updated"
	ListEventsCategoryInEnumInboundWireDrawdownRequestCreated                    ListEventsCategoryInEnum = "inbound_wire_drawdown_request.created"
	ListEventsCategoryInEnumOauthConnectionCreated                               ListEventsCategoryInEnum = "oauth_connection.created"
	ListEventsCategoryInEnumOauthConnectionDeactivated                           ListEventsCategoryInEnum = "oauth_connection.deactivated"
	ListEventsCategoryInEnumPendingTransactionCreated                            ListEventsCategoryInEnum = "pending_transaction.created"
	ListEventsCategoryInEnumPendingTransactionUpdated                            ListEventsCategoryInEnum = "pending_transaction.updated"
	ListEventsCategoryInEnumRealTimeDecisionCardAuthorizationRequested           ListEventsCategoryInEnum = "real_time_decision.card_authorization_requested"
	ListEventsCategoryInEnumRealTimeDecisionDigitalWalletTokenRequested          ListEventsCategoryInEnum = "real_time_decision.digital_wallet_token_requested"
	ListEventsCategoryInEnumRealTimeDecisionDigitalWalletAuthenticationRequested ListEventsCategoryInEnum = "real_time_decision.digital_wallet_authentication_requested"
	ListEventsCategoryInEnumRealTimePaymentsTransferCreated                      ListEventsCategoryInEnum = "real_time_payments_transfer.created"
	ListEventsCategoryInEnumRealTimePaymentsTransferUpdated                      ListEventsCategoryInEnum = "real_time_payments_transfer.updated"
	ListEventsCategoryInEnumRealTimePaymentsRequestForPaymentCreated             ListEventsCategoryInEnum = "real_time_payments_request_for_payment.created"
	ListEventsCategoryInEnumRealTimePaymentsRequestForPaymentUpdated             ListEventsCategoryInEnum = "real_time_payments_request_for_payment.updated"
	ListEventsCategoryInEnumTransactionCreated                                   ListEventsCategoryInEnum = "transaction.created"
	ListEventsCategoryInEnumWireDrawdownRequestCreated                           ListEventsCategoryInEnum = "wire_drawdown_request.created"
	ListEventsCategoryInEnumWireDrawdownRequestUpdated                           ListEventsCategoryInEnum = "wire_drawdown_request.updated"
	ListEventsCategoryInEnumWireTransferCreated                                  ListEventsCategoryInEnum = "wire_transfer.created"
	ListEventsCategoryInEnumWireTransferUpdated                                  ListEventsCategoryInEnum = "wire_transfer.updated"
)

func (e ListEventsCategoryInEnum) ToPointer() *ListEventsCategoryInEnum {
	return &e
}

func (e *ListEventsCategoryInEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "account.created":
		fallthrough
	case "account.updated":
		fallthrough
	case "account_number.created":
		fallthrough
	case "account_number.updated":
		fallthrough
	case "account_statement.created":
		fallthrough
	case "account_transfer.created":
		fallthrough
	case "account_transfer.updated":
		fallthrough
	case "ach_prenotification.created":
		fallthrough
	case "ach_prenotification.updated":
		fallthrough
	case "ach_transfer.created":
		fallthrough
	case "ach_transfer.updated":
		fallthrough
	case "card.created":
		fallthrough
	case "card.updated":
		fallthrough
	case "card_payment.created":
		fallthrough
	case "card_payment.updated":
		fallthrough
	case "card_dispute.created":
		fallthrough
	case "card_dispute.updated":
		fallthrough
	case "check_deposit.created":
		fallthrough
	case "check_deposit.updated":
		fallthrough
	case "check_transfer.created":
		fallthrough
	case "check_transfer.updated":
		fallthrough
	case "declined_transaction.created":
		fallthrough
	case "digital_wallet_token.created":
		fallthrough
	case "digital_wallet_token.updated":
		fallthrough
	case "document.created":
		fallthrough
	case "entity.created":
		fallthrough
	case "entity.updated":
		fallthrough
	case "external_account.created":
		fallthrough
	case "file.created":
		fallthrough
	case "group.updated":
		fallthrough
	case "group.heartbeat":
		fallthrough
	case "inbound_ach_transfer_return.created":
		fallthrough
	case "inbound_ach_transfer_return.updated":
		fallthrough
	case "inbound_wire_drawdown_request.created":
		fallthrough
	case "oauth_connection.created":
		fallthrough
	case "oauth_connection.deactivated":
		fallthrough
	case "pending_transaction.created":
		fallthrough
	case "pending_transaction.updated":
		fallthrough
	case "real_time_decision.card_authorization_requested":
		fallthrough
	case "real_time_decision.digital_wallet_token_requested":
		fallthrough
	case "real_time_decision.digital_wallet_authentication_requested":
		fallthrough
	case "real_time_payments_transfer.created":
		fallthrough
	case "real_time_payments_transfer.updated":
		fallthrough
	case "real_time_payments_request_for_payment.created":
		fallthrough
	case "real_time_payments_request_for_payment.updated":
		fallthrough
	case "transaction.created":
		fallthrough
	case "wire_drawdown_request.created":
		fallthrough
	case "wire_drawdown_request.updated":
		fallthrough
	case "wire_transfer.created":
		fallthrough
	case "wire_transfer.updated":
		*e = ListEventsCategoryInEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsCategoryInEnum: %v", v)
	}
}

type ListEventsRequest struct {
	AssociatedObjectID  *string                    `queryParam:"style=form,explode=true,name=associated_object_id"`
	CategoryIn          []ListEventsCategoryInEnum `queryParam:"style=form,explode=true,name=category.in"`
	CreatedAtAfter      *time.Time                 `queryParam:"style=form,explode=true,name=created_at.after"`
	CreatedAtBefore     *time.Time                 `queryParam:"style=form,explode=true,name=created_at.before"`
	CreatedAtOnOrAfter  *time.Time                 `queryParam:"style=form,explode=true,name=created_at.on_or_after"`
	CreatedAtOnOrBefore *time.Time                 `queryParam:"style=form,explode=true,name=created_at.on_or_before"`
	Cursor              *string                    `queryParam:"style=form,explode=true,name=cursor"`
	Limit               *int64                     `queryParam:"style=form,explode=true,name=limit"`
}

type ListEventsDefaultApplicationJSON13StatusEnum int64

const (
	ListEventsDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ListEventsDefaultApplicationJSON13StatusEnum = 429
)

func (e ListEventsDefaultApplicationJSON13StatusEnum) ToPointer() *ListEventsDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = ListEventsDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON13TypeEnum string

const (
	ListEventsDefaultApplicationJSON13TypeEnumRateLimitedError ListEventsDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e ListEventsDefaultApplicationJSON13TypeEnum) ToPointer() *ListEventsDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = ListEventsDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON13 struct {
	Detail     string                                       `json:"detail"`
	RetryAfter *int64                                       `json:"retry_after,omitempty"`
	Status     ListEventsDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                       `json:"title"`
	Type       ListEventsDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ListEventsDefaultApplicationJSON12StatusEnum int64

const (
	ListEventsDefaultApplicationJSON12StatusEnumFourHundredAndThree ListEventsDefaultApplicationJSON12StatusEnum = 403
)

func (e ListEventsDefaultApplicationJSON12StatusEnum) ToPointer() *ListEventsDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListEventsDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON12TypeEnum string

const (
	ListEventsDefaultApplicationJSON12TypeEnumPrivateFeatureError ListEventsDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e ListEventsDefaultApplicationJSON12TypeEnum) ToPointer() *ListEventsDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = ListEventsDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON12 struct {
	Detail string                                       `json:"detail"`
	Status ListEventsDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   ListEventsDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ListEventsDefaultApplicationJSON11StatusEnum int64

const (
	ListEventsDefaultApplicationJSON11StatusEnumFourHundredAndFour ListEventsDefaultApplicationJSON11StatusEnum = 404
)

func (e ListEventsDefaultApplicationJSON11StatusEnum) ToPointer() *ListEventsDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ListEventsDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON11TypeEnum string

const (
	ListEventsDefaultApplicationJSON11TypeEnumObjectNotFoundError ListEventsDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e ListEventsDefaultApplicationJSON11TypeEnum) ToPointer() *ListEventsDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = ListEventsDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON11 struct {
	Detail string                                       `json:"detail"`
	Status ListEventsDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   ListEventsDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ListEventsDefaultApplicationJSON10StatusEnum int64

const (
	ListEventsDefaultApplicationJSON10StatusEnumFourHundred ListEventsDefaultApplicationJSON10StatusEnum = 400
)

func (e ListEventsDefaultApplicationJSON10StatusEnum) ToPointer() *ListEventsDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ListEventsDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON10TypeEnum string

const (
	ListEventsDefaultApplicationJSON10TypeEnumMalformedRequestError ListEventsDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e ListEventsDefaultApplicationJSON10TypeEnum) ToPointer() *ListEventsDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = ListEventsDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON10 struct {
	Detail string                                       `json:"detail"`
	Status ListEventsDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                       `json:"title"`
	Type   ListEventsDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ListEventsDefaultApplicationJSON9StatusEnum int64

const (
	ListEventsDefaultApplicationJSON9StatusEnumFourHundred ListEventsDefaultApplicationJSON9StatusEnum = 400
)

func (e ListEventsDefaultApplicationJSON9StatusEnum) ToPointer() *ListEventsDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ListEventsDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON9TypeEnum string

const (
	ListEventsDefaultApplicationJSON9TypeEnumInvalidParametersError ListEventsDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e ListEventsDefaultApplicationJSON9TypeEnum) ToPointer() *ListEventsDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = ListEventsDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                    `json:"errors"`
	Status ListEventsDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                      `json:"title"`
	Type   ListEventsDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ListEventsDefaultApplicationJSON8StatusEnum int64

const (
	ListEventsDefaultApplicationJSON8StatusEnumFourHundredAndNine ListEventsDefaultApplicationJSON8StatusEnum = 409
)

func (e ListEventsDefaultApplicationJSON8StatusEnum) ToPointer() *ListEventsDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ListEventsDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON8TypeEnum string

const (
	ListEventsDefaultApplicationJSON8TypeEnumInvalidOperationError ListEventsDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e ListEventsDefaultApplicationJSON8TypeEnum) ToPointer() *ListEventsDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = ListEventsDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON8 struct {
	Detail string                                      `json:"detail"`
	Status ListEventsDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                      `json:"title"`
	Type   ListEventsDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ListEventsDefaultApplicationJSON7StatusEnum int64

const (
	ListEventsDefaultApplicationJSON7StatusEnumFourHundredAndOne ListEventsDefaultApplicationJSON7StatusEnum = 401
)

func (e ListEventsDefaultApplicationJSON7StatusEnum) ToPointer() *ListEventsDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = ListEventsDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON7TypeEnum string

const (
	ListEventsDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ListEventsDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e ListEventsDefaultApplicationJSON7TypeEnum) ToPointer() *ListEventsDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = ListEventsDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON7 struct {
	Detail string                                      `json:"detail"`
	Status ListEventsDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                      `json:"title"`
	Type   ListEventsDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ListEventsDefaultApplicationJSON6StatusEnum int64

const (
	ListEventsDefaultApplicationJSON6StatusEnumFiveHundred ListEventsDefaultApplicationJSON6StatusEnum = 500
)

func (e ListEventsDefaultApplicationJSON6StatusEnum) ToPointer() *ListEventsDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = ListEventsDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON6TypeEnum string

const (
	ListEventsDefaultApplicationJSON6TypeEnumInternalServerError ListEventsDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e ListEventsDefaultApplicationJSON6TypeEnum) ToPointer() *ListEventsDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = ListEventsDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON6 struct {
	Detail string                                      `json:"detail"`
	Status ListEventsDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                      `json:"title"`
	Type   ListEventsDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ListEventsDefaultApplicationJSON5StatusEnum int64

const (
	ListEventsDefaultApplicationJSON5StatusEnumFourHundredAndThree ListEventsDefaultApplicationJSON5StatusEnum = 403
)

func (e ListEventsDefaultApplicationJSON5StatusEnum) ToPointer() *ListEventsDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListEventsDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON5TypeEnum string

const (
	ListEventsDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ListEventsDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e ListEventsDefaultApplicationJSON5TypeEnum) ToPointer() *ListEventsDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = ListEventsDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON5 struct {
	Detail string                                      `json:"detail"`
	Status ListEventsDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                      `json:"title"`
	Type   ListEventsDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ListEventsDefaultApplicationJSON4StatusEnum int64

const (
	ListEventsDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ListEventsDefaultApplicationJSON4StatusEnum = 422
)

func (e ListEventsDefaultApplicationJSON4StatusEnum) ToPointer() *ListEventsDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = ListEventsDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON4TypeEnum string

const (
	ListEventsDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ListEventsDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e ListEventsDefaultApplicationJSON4TypeEnum) ToPointer() *ListEventsDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = ListEventsDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON4 struct {
	Detail string                                      `json:"detail"`
	Status ListEventsDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                      `json:"title"`
	Type   ListEventsDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ListEventsDefaultApplicationJSON3StatusEnum int64

const (
	ListEventsDefaultApplicationJSON3StatusEnumFourHundredAndNine ListEventsDefaultApplicationJSON3StatusEnum = 409
)

func (e ListEventsDefaultApplicationJSON3StatusEnum) ToPointer() *ListEventsDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ListEventsDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON3TypeEnum string

const (
	ListEventsDefaultApplicationJSON3TypeEnumIdempotencyConflictError ListEventsDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e ListEventsDefaultApplicationJSON3TypeEnum) ToPointer() *ListEventsDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = ListEventsDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON3 struct {
	Detail string                                      `json:"detail"`
	Status ListEventsDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                      `json:"title"`
	Type   ListEventsDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ListEventsDefaultApplicationJSON2StatusEnum int64

const (
	ListEventsDefaultApplicationJSON2StatusEnumFourHundredAndThree ListEventsDefaultApplicationJSON2StatusEnum = 403
)

func (e ListEventsDefaultApplicationJSON2StatusEnum) ToPointer() *ListEventsDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListEventsDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON2TypeEnum string

const (
	ListEventsDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ListEventsDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e ListEventsDefaultApplicationJSON2TypeEnum) ToPointer() *ListEventsDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = ListEventsDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON2 struct {
	Detail string                                      `json:"detail"`
	Status ListEventsDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                      `json:"title"`
	Type   ListEventsDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ListEventsDefaultApplicationJSON1StatusEnum int64

const (
	ListEventsDefaultApplicationJSON1StatusEnumFourHundredAndFour ListEventsDefaultApplicationJSON1StatusEnum = 404
)

func (e ListEventsDefaultApplicationJSON1StatusEnum) ToPointer() *ListEventsDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ListEventsDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON1TypeEnum string

const (
	ListEventsDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ListEventsDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e ListEventsDefaultApplicationJSON1TypeEnum) ToPointer() *ListEventsDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *ListEventsDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = ListEventsDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEventsDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type ListEventsDefaultApplicationJSON1 struct {
	Detail string                                      `json:"detail"`
	Status ListEventsDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                      `json:"title"`
	Type   ListEventsDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ListEventsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// Event List
	EventList *shared.EventList
}
