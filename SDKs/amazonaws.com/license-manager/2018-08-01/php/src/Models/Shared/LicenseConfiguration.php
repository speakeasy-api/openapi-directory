<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * LicenseConfiguration - A license configuration is an abstraction of a customer license agreement that can be consumed and enforced by License Manager. Components include specifications for the license type (licensing by instance, socket, CPU, or vCPU), allowed tenancy (shared tenancy, Dedicated Instance, Dedicated Host, or all of these), host affinity (how long a VM must be associated with a host), and the number of licenses purchased and used.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class LicenseConfiguration
{
	#[\JMS\Serializer\Annotation\SerializedName('AutomatedDiscoveryInformation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AutomatedDiscoveryInformation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AutomatedDiscoveryInformation $automatedDiscoveryInformation = null;
    
    /**
     * $consumedLicenseSummaryList
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ConsumedLicenseSummary> $consumedLicenseSummaryList
     */
	#[\JMS\Serializer\Annotation\SerializedName('ConsumedLicenseSummaryList')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ConsumedLicenseSummary>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $consumedLicenseSummaryList = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ConsumedLicenses')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $consumedLicenses = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('DisassociateWhenNotFound')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $disassociateWhenNotFound = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('LicenseConfigurationArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $licenseConfigurationArn = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('LicenseConfigurationId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $licenseConfigurationId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('LicenseCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $licenseCount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('LicenseCountHardLimit')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $licenseCountHardLimit = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('LicenseCountingType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\LicenseCountingTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LicenseCountingTypeEnum $licenseCountingType = null;
    
    /**
     * $licenseRules
     * 
     * @var ?array<string> $licenseRules
     */
	#[\JMS\Serializer\Annotation\SerializedName('LicenseRules')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $licenseRules = null;
    
    /**
     * $managedResourceSummaryList
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ManagedResourceSummary> $managedResourceSummaryList
     */
	#[\JMS\Serializer\Annotation\SerializedName('ManagedResourceSummaryList')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ManagedResourceSummary>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $managedResourceSummaryList = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('OwnerAccountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ownerAccountId = null;
    
    /**
     * $productInformationList
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ProductInformation> $productInformationList
     */
	#[\JMS\Serializer\Annotation\SerializedName('ProductInformationList')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ProductInformation>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $productInformationList = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $status = null;
    
	public function __construct()
	{
		$this->automatedDiscoveryInformation = null;
		$this->consumedLicenseSummaryList = null;
		$this->consumedLicenses = null;
		$this->description = null;
		$this->disassociateWhenNotFound = null;
		$this->licenseConfigurationArn = null;
		$this->licenseConfigurationId = null;
		$this->licenseCount = null;
		$this->licenseCountHardLimit = null;
		$this->licenseCountingType = null;
		$this->licenseRules = null;
		$this->managedResourceSummaryList = null;
		$this->name = null;
		$this->ownerAccountId = null;
		$this->productInformationList = null;
		$this->status = null;
	}
}
