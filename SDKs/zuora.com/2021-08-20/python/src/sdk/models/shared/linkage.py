"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LinkageLinkageTypeEnum(str, Enum):
    START = 'Start'
    SUCCESS = 'Success'
    FAILURE = 'Failure'
    ITERATE = 'Iterate'
    TRUE = 'true'
    FALSE = 'false'
    APPROVE = 'Approve'
    REJECT = 'Reject'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Linkage:
    r"""Used to represent the relationship between workflow tasks"""
    
    linkage_type: Optional[LinkageLinkageTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('linkage_type'), 'exclude': lambda f: f is None }})  
    source_task_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source_task_id'), 'exclude': lambda f: f is None }})
    r"""the task that spawned the target task"""  
    source_workflow_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source_workflow_id'), 'exclude': lambda f: f is None }})
    r"""the workflow the target task is associated with"""  
    target_task_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('target_task_id'), 'exclude': lambda f: f is None }})
    r"""the task that the source task is linked to."""  
    