/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * A SubscriptionDeferralInfo contains the data needed to defer a subscription purchase to a future expiry time.
 */
export class SubscriptionDeferralInfo extends SpeakeasyBase {
  /**
   * The desired next expiry time to assign to the subscription, in milliseconds since the Epoch. The given time must be later/greater than the current expiry time for the subscription.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "desiredExpiryTimeMillis" })
  desiredExpiryTimeMillis?: string;

  /**
   * The expected expiry time for the subscription. If the current expiry time for the subscription is not the value specified here, the deferral will not occur.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expectedExpiryTimeMillis" })
  expectedExpiryTimeMillis?: string;
}
