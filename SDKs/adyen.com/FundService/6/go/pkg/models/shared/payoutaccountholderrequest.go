// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PayoutAccountHolderRequestPayoutSpeedEnum - Speed with which payouts for this account are processed. Permitted values: `STANDARD`, `SAME_DAY`.
type PayoutAccountHolderRequestPayoutSpeedEnum string

const (
	PayoutAccountHolderRequestPayoutSpeedEnumInstant  PayoutAccountHolderRequestPayoutSpeedEnum = "INSTANT"
	PayoutAccountHolderRequestPayoutSpeedEnumSameDay  PayoutAccountHolderRequestPayoutSpeedEnum = "SAME_DAY"
	PayoutAccountHolderRequestPayoutSpeedEnumStandard PayoutAccountHolderRequestPayoutSpeedEnum = "STANDARD"
)

func (e *PayoutAccountHolderRequestPayoutSpeedEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INSTANT":
		fallthrough
	case "SAME_DAY":
		fallthrough
	case "STANDARD":
		*e = PayoutAccountHolderRequestPayoutSpeedEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PayoutAccountHolderRequestPayoutSpeedEnum: %s", s)
	}
}

type PayoutAccountHolderRequest struct {
	// The code of the account from which the payout is to be made.
	AccountCode string `json:"accountCode"`
	// The code of the Account Holder who owns the account from which the payout is to be made.
	// The Account Holder is the party to which the payout will be made.
	AccountHolderCode string  `json:"accountHolderCode"`
	Amount            *Amount `json:"amount,omitempty"`
	// The unique ID of the Bank Account held by the Account Holder to which the payout is to be made.
	// If left blank, a bank account is automatically selected.
	BankAccountUUID *string `json:"bankAccountUUID,omitempty"`
	// A description of the payout. Maximum 200 characters.
	// Allowed: **abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789/?:().,'+ ";**
	Description *string `json:"description,omitempty"`
	// A value that can be supplied at the discretion of the executing user in order to link multiple transactions to one another.
	MerchantReference *string `json:"merchantReference,omitempty"`
	// The unique ID of the payout method held by the Account Holder to which the payout is to be made.
	// If left blank, a payout instrument is automatically selected.
	PayoutMethodCode *string `json:"payoutMethodCode,omitempty"`
	// Speed with which payouts for this account are processed. Permitted values: `STANDARD`, `SAME_DAY`.
	PayoutSpeed *PayoutAccountHolderRequestPayoutSpeedEnum `json:"payoutSpeed,omitempty"`
}
