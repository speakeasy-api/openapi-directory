"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PlayerScoreResetResponse:
    r"""A list of reset leaderboard entry resources."""
    
    definition_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('definitionId'), 'exclude': lambda f: f is None }})
    r"""The ID of an leaderboard for which player state has been updated."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Uniquely identifies the type of this resource. Value is always the fixed string `gamesManagement#playerScoreResetResponse`."""  
    reset_score_time_spans: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resetScoreTimeSpans'), 'exclude': lambda f: f is None }})
    r"""The time spans of the updated score. Possible values are: - \\"`ALL_TIME`\\" - The score is an all-time score. - \\"`WEEKLY`\\" - The score is a weekly score. - \\"`DAILY`\\" - The score is a daily score."""  
    