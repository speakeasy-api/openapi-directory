"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ApplySoftwareUpdateRequest:
    r"""Request for ApplySoftwareUpdate."""
    
    apply_all: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applyAll'), 'exclude': lambda f: f is None }})
    r"""Whether to apply the update to all nodes. If set to true, will explicitly restrict users from specifying any nodes, and apply software update to all nodes (where applicable) within the instance."""  
    node_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nodeIds'), 'exclude': lambda f: f is None }})
    r"""Nodes to which we should apply the update to. Note all the selected nodes are updated in parallel."""  
    