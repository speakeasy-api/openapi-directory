// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PipelineExecutionStatusEnum string

const (
	PipelineExecutionStatusEnumExecuting PipelineExecutionStatusEnum = "Executing"
	PipelineExecutionStatusEnumStopping  PipelineExecutionStatusEnum = "Stopping"
	PipelineExecutionStatusEnumStopped   PipelineExecutionStatusEnum = "Stopped"
	PipelineExecutionStatusEnumFailed    PipelineExecutionStatusEnum = "Failed"
	PipelineExecutionStatusEnumSucceeded PipelineExecutionStatusEnum = "Succeeded"
)

func (e PipelineExecutionStatusEnum) ToPointer() *PipelineExecutionStatusEnum {
	return &e
}

func (e *PipelineExecutionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Executing":
		fallthrough
	case "Stopping":
		fallthrough
	case "Stopped":
		fallthrough
	case "Failed":
		fallthrough
	case "Succeeded":
		*e = PipelineExecutionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PipelineExecutionStatusEnum: %v", v)
	}
}
