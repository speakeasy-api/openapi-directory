<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Container - Represents a Google Tag Manager Container, which specifies the platform tags will run on, manages workspaces, and retains container versions.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Container
{
    /**
     * GTM Account ID.
     * 
     * @var ?string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountId = null;
    
    /**
     * The Container ID uniquely identifies the GTM Container.
     * 
     * @var ?string $containerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('containerId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $containerId = null;
    
    /**
     * List of domain names associated with the Container. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
     * 
     * @var ?array<string> $domainName
     */
	#[\JMS\Serializer\Annotation\SerializedName('domainName')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $domainName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('features')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ContainerFeatures')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ContainerFeatures $features = null;
    
    /**
     * The fingerprint of the GTM Container as computed at storage time. This value is recomputed whenever the account is modified.
     * 
     * @var ?string $fingerprint
     */
	#[\JMS\Serializer\Annotation\SerializedName('fingerprint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fingerprint = null;
    
    /**
     * Container display name. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Container Notes. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
     * 
     * @var ?string $notes
     */
	#[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notes = null;
    
    /**
     * GTM Container's API relative path.
     * 
     * @var ?string $path
     */
	#[\JMS\Serializer\Annotation\SerializedName('path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $path = null;
    
    /**
     * Container Public ID.
     * 
     * @var ?string $publicId
     */
	#[\JMS\Serializer\Annotation\SerializedName('publicId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $publicId = null;
    
    /**
     * All Tag IDs that refer to this Container.
     * 
     * @var ?array<string> $tagIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('tagIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tagIds = null;
    
    /**
     * Auto generated link to the tag manager UI
     * 
     * @var ?string $tagManagerUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('tagManagerUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tagManagerUrl = null;
    
    /**
     * List of server-side container URLs for the Container. If multiple URLs are provided, all URL paths must match. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
     * 
     * @var ?array<string> $taggingServerUrls
     */
	#[\JMS\Serializer\Annotation\SerializedName('taggingServerUrls')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $taggingServerUrls = null;
    
    /**
     * List of Usage Contexts for the Container. Valid values include: web, android, or ios. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ContainerUsageContextEnum> $usageContext
     */
	#[\JMS\Serializer\Annotation\SerializedName('usageContext')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\ContainerUsageContextEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $usageContext = null;
    
	public function __construct()
	{
		$this->accountId = null;
		$this->containerId = null;
		$this->domainName = null;
		$this->features = null;
		$this->fingerprint = null;
		$this->name = null;
		$this->notes = null;
		$this->path = null;
		$this->publicId = null;
		$this->tagIds = null;
		$this->tagManagerUrl = null;
		$this->taggingServerUrls = null;
		$this->usageContext = null;
	}
}
