"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DestinationStatusStatusEnum(str, Enum):
    r"""The status of the destination."""
    UNKNOWN = 'UNKNOWN'
    ACTIVE = 'ACTIVE'
    PENDING = 'PENDING'
    DISAPPROVED = 'DISAPPROVED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DestinationStatus:
    r"""The destination status."""
    
    destination: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destination'), 'exclude': lambda f: f is None }})
    r"""The name of the destination."""  
    status: Optional[DestinationStatusStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The status of the destination."""  
    