// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListBuildBatchesXAmzTargetEnum
type ListBuildBatchesXAmzTargetEnum string

const (
	ListBuildBatchesXAmzTargetEnumCodeBuild20161006ListBuildBatches ListBuildBatchesXAmzTargetEnum = "CodeBuild_20161006.ListBuildBatches"
)

func (e ListBuildBatchesXAmzTargetEnum) ToPointer() *ListBuildBatchesXAmzTargetEnum {
	return &e
}

func (e *ListBuildBatchesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodeBuild_20161006.ListBuildBatches":
		*e = ListBuildBatchesXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListBuildBatchesXAmzTargetEnum: %v", v)
	}
}

type ListBuildBatchesRequest struct {
	ListBuildBatchesInput shared.ListBuildBatchesInput   `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            ListBuildBatchesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListBuildBatchesResponse struct {
	ContentType string
	// InvalidInputException
	InvalidInputException interface{}
	// Success
	ListBuildBatchesOutput *shared.ListBuildBatchesOutput
	StatusCode             int
	RawResponse            *http.Response
}
