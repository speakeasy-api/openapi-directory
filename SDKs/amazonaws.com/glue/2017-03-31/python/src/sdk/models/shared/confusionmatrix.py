"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConfusionMatrix:
    r"""<p>The confusion matrix shows you what your transform is predicting accurately and what types of errors it is making.</p> <p>For more information, see <a href=\\"https://en.wikipedia.org/wiki/Confusion_matrix\\">Confusion matrix</a> in Wikipedia.</p>"""
    
    num_false_negatives: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NumFalseNegatives'), 'exclude': lambda f: f is None }})  
    num_false_positives: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NumFalsePositives'), 'exclude': lambda f: f is None }})  
    num_true_negatives: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NumTrueNegatives'), 'exclude': lambda f: f is None }})  
    num_true_positives: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NumTruePositives'), 'exclude': lambda f: f is None }})  
    