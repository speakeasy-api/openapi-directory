/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class NAMeasure {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gust_angle")
    public Double gustAngle;

    public NAMeasure withGustAngle(Double gustAngle) {
        this.gustAngle = gustAngle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gust_strength")
    public Double gustStrength;

    public NAMeasure withGustStrength(Double gustStrength) {
        this.gustStrength = gustStrength;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rain_24h")
    public Double rain24h;

    public NAMeasure withRain24h(Double rain24h) {
        this.rain24h = rain24h;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rain_60min")
    public Double rain60min;

    public NAMeasure withRain60min(Double rain60min) {
        this.rain60min = rain60min;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rain_live")
    public Double rainLive;

    public NAMeasure withRainLive(Double rainLive) {
        this.rainLive = rainLive;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rain_utc")
    public Long rainUtc;

    public NAMeasure withRainUtc(Long rainUtc) {
        this.rainUtc = rainUtc;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("res")
    public java.util.Map<String, Double[]> res;

    public NAMeasure withRes(java.util.Map<String, Double[]> res) {
        this.res = res;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String[] type;

    public NAMeasure withType(String[] type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wind_angle")
    public Double windAngle;

    public NAMeasure withWindAngle(Double windAngle) {
        this.windAngle = windAngle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wind_strength")
    public Double windStrength;

    public NAMeasure withWindStrength(Double windStrength) {
        this.windStrength = windStrength;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("wind_timeutc\"")
    public Long windTimeutc;

    public NAMeasure withWindTimeutc(Long windTimeutc) {
        this.windTimeutc = windTimeutc;
        return this;
    }
    
    public NAMeasure(){}
}
