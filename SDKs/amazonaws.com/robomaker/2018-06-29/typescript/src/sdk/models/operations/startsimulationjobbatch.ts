/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Information about the batch policy.
 */
export class StartSimulationJobBatchRequestBodyBatchPolicy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "maxConcurrency" })
  maxConcurrency?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "timeoutInSeconds" })
  timeoutInSeconds?: number;
}

export class StartSimulationJobBatchRequestBody extends SpeakeasyBase {
  /**
   * Information about the batch policy.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "batchPolicy" })
  @Type(() => StartSimulationJobBatchRequestBodyBatchPolicy)
  batchPolicy?: StartSimulationJobBatchRequestBodyBatchPolicy;

  /**
   * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientRequestToken" })
  clientRequestToken?: string;

  /**
   * A list of simulation job requests to create in the batch.
   */
  @SpeakeasyMetadata({ elemType: shared.SimulationJobRequest })
  @Expose({ name: "createSimulationJobRequests" })
  @Type(() => shared.SimulationJobRequest)
  createSimulationJobRequests: shared.SimulationJobRequest[];

  /**
   * A map that contains tag keys and tag values that are attached to the deployment job batch.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}

export class StartSimulationJobBatchRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: StartSimulationJobBatchRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class StartSimulationJobBatchResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * IdempotentParameterMismatchException
   */
  @SpeakeasyMetadata()
  idempotentParameterMismatchException?: any;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * InvalidParameterException
   */
  @SpeakeasyMetadata()
  invalidParameterException?: any;

  /**
   * LimitExceededException
   */
  @SpeakeasyMetadata()
  limitExceededException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  startSimulationJobBatchResponse?: shared.StartSimulationJobBatchResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;
}
