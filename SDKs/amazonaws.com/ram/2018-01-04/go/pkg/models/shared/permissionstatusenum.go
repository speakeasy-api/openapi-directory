// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PermissionStatusEnum string

const (
	PermissionStatusEnumAttachable   PermissionStatusEnum = "ATTACHABLE"
	PermissionStatusEnumUnattachable PermissionStatusEnum = "UNATTACHABLE"
	PermissionStatusEnumDeleting     PermissionStatusEnum = "DELETING"
	PermissionStatusEnumDeleted      PermissionStatusEnum = "DELETED"
)

func (e PermissionStatusEnum) ToPointer() *PermissionStatusEnum {
	return &e
}

func (e *PermissionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ATTACHABLE":
		fallthrough
	case "UNATTACHABLE":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETED":
		*e = PermissionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PermissionStatusEnum: %v", v)
	}
}
