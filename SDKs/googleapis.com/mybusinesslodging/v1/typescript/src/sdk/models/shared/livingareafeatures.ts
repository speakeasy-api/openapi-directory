/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Air conditioning exception.
 */
export enum LivingAreaFeaturesAirConditioningExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Bathtub exception.
 */
export enum LivingAreaFeaturesBathtubExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Bidet exception.
 */
export enum LivingAreaFeaturesBidetExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Dryer exception.
 */
export enum LivingAreaFeaturesDryerExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Electronic room key exception.
 */
export enum LivingAreaFeaturesElectronicRoomKeyExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Fireplace exception.
 */
export enum LivingAreaFeaturesFireplaceExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Hairdryer exception.
 */
export enum LivingAreaFeaturesHairdryerExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Heating exception.
 */
export enum LivingAreaFeaturesHeatingExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * In-unit safe exception.
 */
export enum LivingAreaFeaturesInunitSafeExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * In-unit Wifi available exception.
 */
export enum LivingAreaFeaturesInunitWifiAvailableExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Ironing equipment exception.
 */
export enum LivingAreaFeaturesIroningEquipmentExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Pay per view movies exception.
 */
export enum LivingAreaFeaturesPayPerViewMoviesExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Private bathroom exception.
 */
export enum LivingAreaFeaturesPrivateBathroomExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Shower exception.
 */
export enum LivingAreaFeaturesShowerExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Toilet exception.
 */
export enum LivingAreaFeaturesToiletExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * TV exception.
 */
export enum LivingAreaFeaturesTvCastingExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * TV exception.
 */
export enum LivingAreaFeaturesTvExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * TV streaming exception.
 */
export enum LivingAreaFeaturesTvStreamingExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Universal power adapters exception.
 */
export enum LivingAreaFeaturesUniversalPowerAdaptersExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Washer exception.
 */
export enum LivingAreaFeaturesWasherExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Features in the living area.
 */
export class LivingAreaFeatures extends SpeakeasyBase {
  /**
   * Air conditioning. An electrical machine used to cool the temperature of the guestroom.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "airConditioning" })
  airConditioning?: boolean;

  /**
   * Air conditioning exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "airConditioningException" })
  airConditioningException?: LivingAreaFeaturesAirConditioningExceptionEnum;

  /**
   * Bathtub. A fixed plumbing feature set on the floor and consisting of a large container that accommodates the body of an adult for the purpose of seated bathing. Includes knobs or fixtures to control the temperature of the water, a faucet through which the water flows, and a drain that can be closed for filling and opened for draining.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bathtub" })
  bathtub?: boolean;

  /**
   * Bathtub exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bathtubException" })
  bathtubException?: LivingAreaFeaturesBathtubExceptionEnum;

  /**
   * Bidet. A plumbing fixture attached to a toilet or a low, fixed sink designed for the purpose of washing after toilet use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bidet" })
  bidet?: boolean;

  /**
   * Bidet exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bidetException" })
  bidetException?: LivingAreaFeaturesBidetExceptionEnum;

  /**
   * Dryer. An electrical machine designed to dry clothing.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dryer" })
  dryer?: boolean;

  /**
   * Dryer exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dryerException" })
  dryerException?: LivingAreaFeaturesDryerExceptionEnum;

  /**
   * Electronic room key. A card coded by the check-in computer that is read by the lock on the hotel guestroom door to allow for entry.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "electronicRoomKey" })
  electronicRoomKey?: boolean;

  /**
   * Electronic room key exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "electronicRoomKeyException" })
  electronicRoomKeyException?: LivingAreaFeaturesElectronicRoomKeyExceptionEnum;

  /**
   * Fireplace. A framed opening (aka hearth) at the base of a chimney in which logs or an electrical fire feature are burned to provide a relaxing ambiance or to heat the room. Often made of bricks or stone.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fireplace" })
  fireplace?: boolean;

  /**
   * Fireplace exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fireplaceException" })
  fireplaceException?: LivingAreaFeaturesFireplaceExceptionEnum;

  /**
   * Hairdryer. A handheld electric appliance that blows temperature-controlled air for the purpose of drying wet hair. Can be mounted to a bathroom wall or a freestanding device stored in the guestroom's bathroom or closet.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hairdryer" })
  hairdryer?: boolean;

  /**
   * Hairdryer exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hairdryerException" })
  hairdryerException?: LivingAreaFeaturesHairdryerExceptionEnum;

  /**
   * Heating. An electrical machine used to warm the temperature of the guestroom.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "heating" })
  heating?: boolean;

  /**
   * Heating exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "heatingException" })
  heatingException?: LivingAreaFeaturesHeatingExceptionEnum;

  /**
   * In-unit safe. A strong fireproof cabinet with a programmable lock, used for the protected storage of valuables in a guestroom. Often built into a closet.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inunitSafe" })
  inunitSafe?: boolean;

  /**
   * In-unit safe exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inunitSafeException" })
  inunitSafeException?: LivingAreaFeaturesInunitSafeExceptionEnum;

  /**
   * In-unit Wifi available. Guests can wirelessly connect to the Internet in the guestroom. Can be free or for a fee.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inunitWifiAvailable" })
  inunitWifiAvailable?: boolean;

  /**
   * In-unit Wifi available exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inunitWifiAvailableException" })
  inunitWifiAvailableException?: LivingAreaFeaturesInunitWifiAvailableExceptionEnum;

  /**
   * Ironing equipment. A device, usually with a flat metal base, that is heated to smooth, finish, or press clothes and a flat, padded, cloth-covered surface on which the clothes are worked.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ironingEquipment" })
  ironingEquipment?: boolean;

  /**
   * Ironing equipment exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ironingEquipmentException" })
  ironingEquipmentException?: LivingAreaFeaturesIroningEquipmentExceptionEnum;

  /**
   * Pay per view movies. Televisions with channels that offer films that can be viewed for a fee, and have an interface to allow the viewer to accept the terms and approve payment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payPerViewMovies" })
  payPerViewMovies?: boolean;

  /**
   * Pay per view movies exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payPerViewMoviesException" })
  payPerViewMoviesException?: LivingAreaFeaturesPayPerViewMoviesExceptionEnum;

  /**
   * Private bathroom. A bathroom designated for the express use of the guests staying in a specific guestroom.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "privateBathroom" })
  privateBathroom?: boolean;

  /**
   * Private bathroom exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "privateBathroomException" })
  privateBathroomException?: LivingAreaFeaturesPrivateBathroomExceptionEnum;

  /**
   * Shower. A fixed plumbing fixture for standing bathing that features a tall spray spout or faucet through which water flows, a knob or knobs that control the water's temperature, and a drain in the floor.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shower" })
  shower?: boolean;

  /**
   * Shower exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "showerException" })
  showerException?: LivingAreaFeaturesShowerExceptionEnum;

  /**
   * Toilet. A fixed bathroom feature connected to a sewer or septic system and consisting of a water-flushed bowl with a seat, as well as a device that elicites the water-flushing action. Used for the process and disposal of human waste.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toilet" })
  toilet?: boolean;

  /**
   * Toilet exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toiletException" })
  toiletException?: LivingAreaFeaturesToiletExceptionEnum;

  /**
   * TV. A television is available in the guestroom.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tv" })
  tv?: boolean;

  /**
   * TV casting. A television equipped with a device through which the video entertainment accessed on a personal computer, phone or tablet can be wirelessly delivered to and viewed on the guestroom's television.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tvCasting" })
  tvCasting?: boolean;

  /**
   * TV exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tvCastingException" })
  tvCastingException?: LivingAreaFeaturesTvCastingExceptionEnum;

  /**
   * TV exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tvException" })
  tvException?: LivingAreaFeaturesTvExceptionEnum;

  /**
   * TV streaming. Televisions that embed a range of web-based apps to allow for watching media from those apps.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tvStreaming" })
  tvStreaming?: boolean;

  /**
   * TV streaming exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tvStreamingException" })
  tvStreamingException?: LivingAreaFeaturesTvStreamingExceptionEnum;

  /**
   * Universal power adapters. A power supply for electronic devices which plugs into a wall for the purpose of converting AC to a single DC voltage. Also know as AC adapter or charger.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "universalPowerAdapters" })
  universalPowerAdapters?: boolean;

  /**
   * Universal power adapters exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "universalPowerAdaptersException" })
  universalPowerAdaptersException?: LivingAreaFeaturesUniversalPowerAdaptersExceptionEnum;

  /**
   * Washer. An electrical machine connected to a running water source designed to launder clothing.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "washer" })
  washer?: boolean;

  /**
   * Washer exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "washerException" })
  washerException?: LivingAreaFeaturesWasherExceptionEnum;
}
