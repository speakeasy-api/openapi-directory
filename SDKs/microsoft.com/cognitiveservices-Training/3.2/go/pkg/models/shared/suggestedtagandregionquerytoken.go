// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SuggestedTagAndRegionQueryTokenSortByEnum - OrderBy. Ordering mechanism for your results.
type SuggestedTagAndRegionQueryTokenSortByEnum string

const (
	SuggestedTagAndRegionQueryTokenSortByEnumUncertaintyAscending  SuggestedTagAndRegionQueryTokenSortByEnum = "UncertaintyAscending"
	SuggestedTagAndRegionQueryTokenSortByEnumUncertaintyDescending SuggestedTagAndRegionQueryTokenSortByEnum = "UncertaintyDescending"
)

func (e *SuggestedTagAndRegionQueryTokenSortByEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UncertaintyAscending":
		fallthrough
	case "UncertaintyDescending":
		*e = SuggestedTagAndRegionQueryTokenSortByEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SuggestedTagAndRegionQueryTokenSortByEnum: %s", s)
	}
}

// SuggestedTagAndRegionQueryToken - Contains properties we need to fetch suggested tags for. For the first call, Session and continuation set to null.
// Then on subsequent calls, uses the session/continuation from the previous SuggestedTagAndRegionQuery result to fetch additional results.
type SuggestedTagAndRegionQueryToken struct {
	// Continuation Id for database pagination. Initially null but later used to paginate.
	Continuation *string `json:"continuation,omitempty" form:"name=continuation"`
	// Maximum number of results you want to be returned in the response.
	MaxCount *int `json:"maxCount,omitempty" form:"name=maxCount"`
	// SessionId for database query. Initially set to null but later used to paginate.
	Session *string `json:"session,omitempty" form:"name=session"`
	// OrderBy. Ordering mechanism for your results.
	SortBy *SuggestedTagAndRegionQueryTokenSortByEnum `json:"sortBy,omitempty" form:"name=sortBy"`
	// Existing TagIds in project to filter suggested tags on.
	TagIds []string `json:"tagIds,omitempty" form:"name=tagIds"`
	// Confidence threshold to filter suggested tags on.
	Threshold *float64 `json:"threshold,omitempty" form:"name=threshold"`
}
