/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetResourcesMediaIdYoutubeMetaDataJsonRequest extends SpeakeasyBase {
  /**
   * The id of the video to show meta data for.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: number;
}

/**
 * Returns the Youtube metadata, where applicable, for the MediaItem identified by the 'id'.
 */
export class GetResourcesMediaIdYoutubeMetaDataJson200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "callback" })
  callback?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => shared.Meta)
  meta?: shared.Meta;

  @SpeakeasyMetadata()
  @Expose({ name: "results" })
  results?: Record<string, any>[];
}

export class GetResourcesMediaIdYoutubeMetaDataJsonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Returns the Youtube metadata, where applicable, for the MediaItem identified by the 'id'.
   */
  @SpeakeasyMetadata()
  getResourcesMediaIdYoutubeMetaDataJSON200ApplicationJSONObject?: GetResourcesMediaIdYoutubeMetaDataJson200ApplicationJSON;
}
