/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetWorkspacesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
  })
  apiKey?: string;

  @SpeakeasyMetadata({ data: "security, scheme=true;type=http;subtype=basic" })
  basic?: shared.SchemeBasic;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2?: string;
}

/**
 *
 * @remarks
 *             Filters the workspaces based on the authenticated user's role on each workspace.
 *
 *             * **member**: returns a list of all the workspaces which the caller is a member of
 *                 at least one workspace group or repository
 *             * **collaborator**: returns a list of workspaces which the caller has write access
 *                 to at least one repository in the workspace
 *             * **owner**: returns a list of workspaces which the caller has administrator access
 *
 */
export enum GetWorkspacesRoleEnum {
  Owner = "owner",
  Collaborator = "collaborator",
  Member = "member",
}

export class GetWorkspacesRequest extends SpeakeasyBase {
  /**
   *
   * @remarks
   * Query string to narrow down the response. See
   * [filtering and sorting](/cloud/bitbucket/rest/intro/#filtering) for details.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=q" })
  q?: string;

  /**
   *
   * @remarks
   *             Filters the workspaces based on the authenticated user's role on each workspace.
   *
   *             * **member**: returns a list of all the workspaces which the caller is a member of
   *                 at least one workspace group or repository
   *             * **collaborator**: returns a list of workspaces which the caller has write access
   *                 to at least one repository in the workspace
   *             * **owner**: returns a list of workspaces which the caller has administrator access
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=role" })
  role?: GetWorkspacesRoleEnum;

  /**
   *
   * @remarks
   * Name of a response property to sort results. See
   * [filtering and sorting](/cloud/bitbucket/rest/intro/#sorting-query-results)
   * for details.
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: string;
}

export class GetWorkspacesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The request wasn't authenticated.
   */
  @SpeakeasyMetadata()
  error?: Record<string, any>;

  /**
   * The list of workspaces accessible by the authenticated user.
   */
  @SpeakeasyMetadata()
  paginatedWorkspaces?: shared.PaginatedWorkspaces;
}
