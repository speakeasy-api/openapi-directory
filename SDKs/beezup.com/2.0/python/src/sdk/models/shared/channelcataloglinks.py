"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import externallinks_getchannelcatalogmarketplacesettingslink as shared_externallinks_getchannelcatalogmarketplacesettingslink
from ..shared import externallinks_getchannelinfolink as shared_externallinks_getchannelinfolink
from ..shared import links_configurechannelcatalogcolumnmappingslink as shared_links_configurechannelcatalogcolumnmappingslink
from ..shared import links_configurechannelcatalogcostsettingslink as shared_links_configurechannelcatalogcostsettingslink
from ..shared import links_configurechannelcataloggeneralsettingslink as shared_links_configurechannelcataloggeneralsettingslink
from ..shared import links_deletechannelcataloglink as shared_links_deletechannelcataloglink
from ..shared import links_disablechannelcatalogcategorymappinglink as shared_links_disablechannelcatalogcategorymappinglink
from ..shared import links_disablechannelcataloglink as shared_links_disablechannelcataloglink
from ..shared import links_enablechannelcataloglink as shared_links_enablechannelcataloglink
from ..shared import links_getchannelcatalogcategorieslink as shared_links_getchannelcatalogcategorieslink
from ..shared import links_getchannelcatalogexclusionfilterslink as shared_links_getchannelcatalogexclusionfilterslink
from ..shared import links_getchannelcatalogexportationcacheinfolink as shared_links_getchannelcatalogexportationcacheinfolink
from ..shared import links_getchannelcataloglink as shared_links_getchannelcataloglink
from ..shared import links_getchannelcatalogproductinfolistlink as shared_links_getchannelcatalogproductinfolistlink
from ..shared import links_reenablechannelcatalogcategorymappinglink as shared_links_reenablechannelcatalogcategorymappinglink
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ChannelCatalogLinks:
    r"""Indicates the actions you can do on a channel catalog"""
    
    self_: shared_links_getchannelcataloglink.LinksGetChannelCatalogLink = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('self') }})  
    category_mappings: Optional[shared_links_getchannelcatalogcategorieslink.LinksGetChannelCatalogCategoriesLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('categoryMappings'), 'exclude': lambda f: f is None }})  
    channel_info: Optional[shared_externallinks_getchannelinfolink.ExternalLinksGetChannelInfoLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channelInfo'), 'exclude': lambda f: f is None }})  
    configure_column_mappings: Optional[shared_links_configurechannelcatalogcolumnmappingslink.LinksConfigureChannelCatalogColumnMappingsLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configureColumnMappings'), 'exclude': lambda f: f is None }})  
    configure_cost_settings: Optional[shared_links_configurechannelcatalogcostsettingslink.LinksConfigureChannelCatalogCostSettingsLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configureCostSettings'), 'exclude': lambda f: f is None }})  
    configure_general_settings: Optional[shared_links_configurechannelcataloggeneralsettingslink.LinksConfigureChannelCatalogGeneralSettingsLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configureGeneralSettings'), 'exclude': lambda f: f is None }})  
    delete: Optional[shared_links_deletechannelcataloglink.LinksDeleteChannelCatalogLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('delete'), 'exclude': lambda f: f is None }})  
    disable: Optional[shared_links_disablechannelcataloglink.LinksDisableChannelCatalogLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disable'), 'exclude': lambda f: f is None }})  
    disable_category_mappings: Optional[shared_links_disablechannelcatalogcategorymappinglink.LinksDisableChannelCatalogCategoryMappingLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disableCategoryMappings'), 'exclude': lambda f: f is None }})  
    enable: Optional[shared_links_enablechannelcataloglink.LinksEnableChannelCatalogLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enable'), 'exclude': lambda f: f is None }})  
    exclusion_filters: Optional[shared_links_getchannelcatalogexclusionfilterslink.LinksGetChannelCatalogExclusionFiltersLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exclusionFilters'), 'exclude': lambda f: f is None }})  
    exportation_cache_info: Optional[shared_links_getchannelcatalogexportationcacheinfolink.LinksGetChannelCatalogExportationCacheInfoLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exportationCacheInfo'), 'exclude': lambda f: f is None }})  
    marketplace_settings: Optional[shared_externallinks_getchannelcatalogmarketplacesettingslink.ExternalLinksGetChannelCatalogMarketplaceSettingsLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('marketplaceSettings'), 'exclude': lambda f: f is None }})  
    products: Optional[shared_links_getchannelcatalogproductinfolistlink.LinksGetChannelCatalogProductInfoListLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('products'), 'exclude': lambda f: f is None }})  
    reenable_category_mappings: Optional[shared_links_reenablechannelcatalogcategorymappinglink.LinksReenableChannelCatalogCategoryMappingLink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reenableCategoryMappings'), 'exclude': lambda f: f is None }})  
    