/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * A router appliance instance is a Compute Engine virtual machine (VM) instance that acts as a BGP speaker. A router appliance instance is specified by the URI of the VM and the internal IP address of one of the VM's network interfaces.
 */
export class RouterApplianceInstance extends SpeakeasyBase {
  /**
   * The IP address on the VM to use for peering.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipAddress" })
  ipAddress?: string;

  /**
   * The URI of the VM.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "virtualMachine" })
  virtualMachine?: string;
}
