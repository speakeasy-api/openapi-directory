"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ResourceRecordTypeEnum(str, Enum):
    r"""Resource record type. Example: `AAAA`."""
    RECORD_TYPE_UNSPECIFIED = 'RECORD_TYPE_UNSPECIFIED'
    A = 'A'
    AAAA = 'AAAA'
    CNAME = 'CNAME'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ResourceRecord:
    r"""A DNS resource record."""
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Relative name of the object affected by this record. Only applicable for `CNAME` records. Example: 'www'."""  
    rrdata: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rrdata'), 'exclude': lambda f: f is None }})
    r"""Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1)."""  
    type: Optional[ResourceRecordTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Resource record type. Example: `AAAA`."""  
    