<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SearchTeamMembersFilter - Represents a filter used in a search for `TeamMember` objects. `AND` logic is applied
 * 
 * between the individual fields, and `OR` logic is applied within list-based fields.
 * For example, setting this filter value:
 * ```
 * filter = (locations_ids = ["A", "B"], status = ACTIVE)
 * ```
 * returns only active team members assigned to either location "A" or "B".
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SearchTeamMembersFilter
{
    /**
     * When present, filters by team members assigned to the specified locations.
     * 
     * When empty, includes team members assigned to any location.
     * 
     * @var ?array<string> $locationIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('location_ids')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $locationIds = null;
    
    /**
     * When present, filters by team members who match the given status.
     * 
     * When empty, includes team members of all statuses.
     * 
     * @var ?string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $status = null;
    
	public function __construct()
	{
		$this->locationIds = null;
		$this->status = null;
	}
}
