/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetWeakCertsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-api-key",
  })
  apiKeyHeader: string;
}

export class GetWeakCertsRequest extends SpeakeasyBase {
  /**
   * SHA2 hash of device firmware
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=firmware_hash",
  })
  firmwareHash: string;
}

export class GetWeakCertsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Validation Error
   */
  @SpeakeasyMetadata()
  httpValidationError?: shared.HTTPValidationError;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful Response
   */
  @SpeakeasyMetadata({ elemType: shared.WeakCert })
  weakCerts?: shared.WeakCert[];
}
