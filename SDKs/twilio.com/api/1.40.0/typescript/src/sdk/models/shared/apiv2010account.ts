/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountEnumStatusEnum } from "./accountenumstatusenum";
import { AccountEnumTypeEnum } from "./accountenumtypeenum";
import { Expose } from "class-transformer";

/**
 * Created
 */
export class ApiV2010Account extends SpeakeasyBase {
  /**
   * The authorization token for this account. This token should be kept a secret, so no sharing.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "auth_token" })
  authToken?: string;

  /**
   * The date that this account was created, in GMT in RFC 2822 format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  dateCreated?: string;

  /**
   * The date that this account was last updated, in GMT in RFC 2822 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  dateUpdated?: string;

  /**
   * A human readable description of this account, up to 64 characters long. By default the FriendlyName is your email address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "friendly_name" })
  friendlyName?: string;

  /**
   * The unique 34 character id that represents the parent of this account. The OwnerAccountSid of a parent account is it's own sid.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner_account_sid" })
  ownerAccountSid?: string;

  /**
   * A 34 character string that uniquely identifies this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: AccountEnumStatusEnum;

  /**
   * A Map of various subresources available for the given Account Instance
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subresource_uris" })
  subresourceUris?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: AccountEnumTypeEnum;

  /**
   * The URI for this resource, relative to `https://api.twilio.com`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri?: string;
}
