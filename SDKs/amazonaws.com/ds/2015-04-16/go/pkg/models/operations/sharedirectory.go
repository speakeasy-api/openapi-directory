// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ShareDirectoryXAmzTargetEnum
type ShareDirectoryXAmzTargetEnum string

const (
	ShareDirectoryXAmzTargetEnumDirectoryService20150416ShareDirectory ShareDirectoryXAmzTargetEnum = "DirectoryService_20150416.ShareDirectory"
)

func (e *ShareDirectoryXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DirectoryService_20150416.ShareDirectory":
		*e = ShareDirectoryXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ShareDirectoryXAmzTargetEnum: %s", s)
	}
}

type ShareDirectoryHeaders struct {
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ShareDirectoryXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ShareDirectoryRequest struct {
	Headers ShareDirectoryHeaders
	Request shared.ShareDirectoryRequest `request:"mediaType=application/json"`
}

type ShareDirectoryResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ClientException
	ClientException interface{}
	ContentType     string
	// DirectoryAlreadySharedException
	DirectoryAlreadySharedException interface{}
	// EntityDoesNotExistException
	EntityDoesNotExistException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidTargetException
	InvalidTargetException interface{}
	// OrganizationsException
	OrganizationsException interface{}
	// ServiceException
	ServiceException interface{}
	// Success
	ShareDirectoryResult *shared.ShareDirectoryResult
	// ShareLimitExceededException
	ShareLimitExceededException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
