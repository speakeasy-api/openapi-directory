// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetResourcePermissionHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// GetResourcePermissionRequestBodyActionTypeEnum - <p/>
type GetResourcePermissionRequestBodyActionTypeEnum string

const (
	GetResourcePermissionRequestBodyActionTypeEnumRestore GetResourcePermissionRequestBodyActionTypeEnum = "RESTORE"
)

func (e *GetResourcePermissionRequestBodyActionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RESTORE":
		*e = GetResourcePermissionRequestBodyActionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetResourcePermissionRequestBodyActionTypeEnum: %s", s)
	}
}

type GetResourcePermissionRequestBody struct {
	// <p/>
	ActionType *GetResourcePermissionRequestBodyActionTypeEnum `json:"ActionType,omitempty"`
	// The Amazon Resource Name (ARN) of the resource.
	ResourceArn string `json:"ResourceArn"`
}

type GetResourcePermissionRequest struct {
	Headers GetResourcePermissionHeaders
	Request GetResourcePermissionRequestBody `request:"mediaType=application/json"`
}

type GetResourcePermissionResponse struct {
	ContentType string
	// Success
	GetResourcePermissionOutput *shared.GetResourcePermissionOutput
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ValidationException
	ValidationException interface{}
}
