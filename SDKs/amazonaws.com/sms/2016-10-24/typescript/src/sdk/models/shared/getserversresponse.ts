/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Server } from "./server";
import { ServerCatalogStatusEnum } from "./servercatalogstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetServersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "nextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "serverCatalogStatus" })
  serverCatalogStatus?: ServerCatalogStatusEnum;

  @SpeakeasyMetadata({ elemType: Server })
  @Expose({ name: "serverList" })
  @Type(() => Server)
  serverList?: Server[];
}
