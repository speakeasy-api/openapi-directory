/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class GetConnectionResponseIdentity extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "SourceIp" })
  sourceIp: string;

  @SpeakeasyMetadata()
  @Expose({ name: "UserAgent" })
  userAgent: string;
}

/**
 * Success
 */
export class GetConnectionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ConnectedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  connectedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Identity" })
  @Type(() => GetConnectionResponseIdentity)
  identity?: GetConnectionResponseIdentity;

  @SpeakeasyMetadata()
  @Expose({ name: "LastActiveAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastActiveAt?: Date;
}
