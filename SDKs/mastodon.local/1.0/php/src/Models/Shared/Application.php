<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Application - Represents an application that interfaces with the REST API to access accounts or post statuses.
 * 
 * https://docs.joinmastodon.org/entities/application/
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 * @see https://docs.joinmastodon.org/entities/application/
 */
class Application
{
    /**
     * Client ID key, to be used for obtaining OAuth tokens
     * 
     * @var ?string $clientId
     */
	#[\JMS\Serializer\Annotation\SerializedName('client_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientId = null;
    
    /**
     * Client secret key, to be used for obtaining OAuth tokens
     * 
     * @var ?string $clientSecret
     */
	#[\JMS\Serializer\Annotation\SerializedName('client_secret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientSecret = null;
    
    /**
     * The name of your application.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Used for Push Streaming API. Returned with [POST /api/v1/apps](https://docs.joinmastodon.org/methods/apps/#create-an-application). Equivalent to [PushSubscription#server_key](https://docs.joinmastodon.org/entities/pushsubscription/#server_key)
     * 
     * @var ?string $vapidKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('vapid_key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vapidKey = null;
    
    /**
     * The website associated with your application. Must be URL.
     * 
     * @var ?string $website
     */
	#[\JMS\Serializer\Annotation\SerializedName('website')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $website = null;
    
	public function __construct()
	{
		$this->clientId = null;
		$this->clientSecret = null;
		$this->name = "";
		$this->vapidKey = null;
		$this->website = null;
	}
}
