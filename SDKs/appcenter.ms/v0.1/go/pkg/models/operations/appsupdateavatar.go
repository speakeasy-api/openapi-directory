// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type AppsUpdateAvatarSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type AppsUpdateAvatarPathParams struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type AppsUpdateAvatarRequestBodyAvatar struct {
	Avatar  string `multipartForm:"name=avatar"`
	Content []byte `multipartForm:"content"`
}

type AppsUpdateAvatarRequestBody struct {
	// The image for an app avatar to upload.
	Avatar *AppsUpdateAvatarRequestBodyAvatar `multipartForm:"file"`
}

type AppsUpdateAvatarRequest struct {
	PathParams AppsUpdateAvatarPathParams
	Request    *AppsUpdateAvatarRequestBody `request:"mediaType=multipart/form-data"`
	Security   AppsUpdateAvatarSecurity
}

type AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnum string

const (
	AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnumBadRequest          AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnumConflict            AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnum = "Conflict"
	AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnumNotAcceptable       AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnumNotFound            AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnum = "NotFound"
	AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnumInternalServerError AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnumUnauthorized        AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnumTooManyRequests     AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type AppsUpdateAvatarDefaultApplicationJSONError struct {
	Code    AppsUpdateAvatarDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                              `json:"message"`
}

// AppsUpdateAvatarDefaultApplicationJSON - Error
type AppsUpdateAvatarDefaultApplicationJSON struct {
	Error AppsUpdateAvatarDefaultApplicationJSONError `json:"error"`
}

type AppsUpdateAvatar200ApplicationJSONAzureSubscription struct {
	// If the subscription can be used for billing
	IsBillable *bool `json:"is_billable,omitempty"`
	// If the subscription is used for billing
	IsBilling *bool `json:"is_billing,omitempty"`
	// If the subscription is internal Microsoft subscription
	IsMicrosoftInternal *bool `json:"is_microsoft_internal,omitempty"`
	// The azure subscription id
	SubscriptionID string `json:"subscription_id"`
	// The name of the azure subscription
	SubscriptionName string `json:"subscription_name"`
	// The tenant id of the azure subscription belongs to
	TenantID string `json:"tenant_id"`
}

type AppsUpdateAvatar200ApplicationJSONMemberPermissionsEnum string

const (
	AppsUpdateAvatar200ApplicationJSONMemberPermissionsEnumManager   AppsUpdateAvatar200ApplicationJSONMemberPermissionsEnum = "manager"
	AppsUpdateAvatar200ApplicationJSONMemberPermissionsEnumDeveloper AppsUpdateAvatar200ApplicationJSONMemberPermissionsEnum = "developer"
	AppsUpdateAvatar200ApplicationJSONMemberPermissionsEnumViewer    AppsUpdateAvatar200ApplicationJSONMemberPermissionsEnum = "viewer"
	AppsUpdateAvatar200ApplicationJSONMemberPermissionsEnumTester    AppsUpdateAvatar200ApplicationJSONMemberPermissionsEnum = "tester"
)

func (e *AppsUpdateAvatar200ApplicationJSONMemberPermissionsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "manager":
		fallthrough
	case "developer":
		fallthrough
	case "viewer":
		fallthrough
	case "tester":
		*e = AppsUpdateAvatar200ApplicationJSONMemberPermissionsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppsUpdateAvatar200ApplicationJSONMemberPermissionsEnum: %s", s)
	}
}

// AppsUpdateAvatar200ApplicationJSONOriginEnum - The creation origin of this app
type AppsUpdateAvatar200ApplicationJSONOriginEnum string

const (
	AppsUpdateAvatar200ApplicationJSONOriginEnumAppcenter AppsUpdateAvatar200ApplicationJSONOriginEnum = "appcenter"
	AppsUpdateAvatar200ApplicationJSONOriginEnumHockeyapp AppsUpdateAvatar200ApplicationJSONOriginEnum = "hockeyapp"
	AppsUpdateAvatar200ApplicationJSONOriginEnumCodepush  AppsUpdateAvatar200ApplicationJSONOriginEnum = "codepush"
)

func (e *AppsUpdateAvatar200ApplicationJSONOriginEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "appcenter":
		fallthrough
	case "hockeyapp":
		fallthrough
	case "codepush":
		*e = AppsUpdateAvatar200ApplicationJSONOriginEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppsUpdateAvatar200ApplicationJSONOriginEnum: %s", s)
	}
}

// AppsUpdateAvatar200ApplicationJSONOsEnum - The OS the app will be running on
type AppsUpdateAvatar200ApplicationJSONOsEnum string

const (
	AppsUpdateAvatar200ApplicationJSONOsEnumAndroid AppsUpdateAvatar200ApplicationJSONOsEnum = "Android"
	AppsUpdateAvatar200ApplicationJSONOsEnumIOs     AppsUpdateAvatar200ApplicationJSONOsEnum = "iOS"
	AppsUpdateAvatar200ApplicationJSONOsEnumMacOs   AppsUpdateAvatar200ApplicationJSONOsEnum = "macOS"
	AppsUpdateAvatar200ApplicationJSONOsEnumTizen   AppsUpdateAvatar200ApplicationJSONOsEnum = "Tizen"
	AppsUpdateAvatar200ApplicationJSONOsEnumTvOs    AppsUpdateAvatar200ApplicationJSONOsEnum = "tvOS"
	AppsUpdateAvatar200ApplicationJSONOsEnumWindows AppsUpdateAvatar200ApplicationJSONOsEnum = "Windows"
	AppsUpdateAvatar200ApplicationJSONOsEnumLinux   AppsUpdateAvatar200ApplicationJSONOsEnum = "Linux"
	AppsUpdateAvatar200ApplicationJSONOsEnumCustom  AppsUpdateAvatar200ApplicationJSONOsEnum = "Custom"
)

func (e *AppsUpdateAvatar200ApplicationJSONOsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Android":
		fallthrough
	case "iOS":
		fallthrough
	case "macOS":
		fallthrough
	case "Tizen":
		fallthrough
	case "tvOS":
		fallthrough
	case "Windows":
		fallthrough
	case "Linux":
		fallthrough
	case "Custom":
		*e = AppsUpdateAvatar200ApplicationJSONOsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppsUpdateAvatar200ApplicationJSONOsEnum: %s", s)
	}
}

// AppsUpdateAvatar200ApplicationJSONOwnerTypeEnum - The owner type. Can either be 'org' or 'user'
type AppsUpdateAvatar200ApplicationJSONOwnerTypeEnum string

const (
	AppsUpdateAvatar200ApplicationJSONOwnerTypeEnumOrg  AppsUpdateAvatar200ApplicationJSONOwnerTypeEnum = "org"
	AppsUpdateAvatar200ApplicationJSONOwnerTypeEnumUser AppsUpdateAvatar200ApplicationJSONOwnerTypeEnum = "user"
)

func (e *AppsUpdateAvatar200ApplicationJSONOwnerTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "org":
		fallthrough
	case "user":
		*e = AppsUpdateAvatar200ApplicationJSONOwnerTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppsUpdateAvatar200ApplicationJSONOwnerTypeEnum: %s", s)
	}
}

// AppsUpdateAvatar200ApplicationJSONOwner - The information about the app's owner
type AppsUpdateAvatar200ApplicationJSONOwner struct {
	// The avatar URL of the owner
	AvatarURL *string `json:"avatar_url,omitempty"`
	// The owner's display name
	DisplayName string `json:"display_name"`
	// The owner's email address
	Email *string `json:"email,omitempty"`
	// The unique id (UUID) of the owner
	ID string `json:"id"`
	// The unique name that used to identify the owner
	Name string `json:"name"`
	// The owner type. Can either be 'org' or 'user'
	Type AppsUpdateAvatar200ApplicationJSONOwnerTypeEnum `json:"type"`
}

// AppsUpdateAvatar200ApplicationJSONPlatformEnum - The platform of the app
type AppsUpdateAvatar200ApplicationJSONPlatformEnum string

const (
	AppsUpdateAvatar200ApplicationJSONPlatformEnumJava            AppsUpdateAvatar200ApplicationJSONPlatformEnum = "Java"
	AppsUpdateAvatar200ApplicationJSONPlatformEnumObjectiveCSwift AppsUpdateAvatar200ApplicationJSONPlatformEnum = "Objective-C-Swift"
	AppsUpdateAvatar200ApplicationJSONPlatformEnumUwp             AppsUpdateAvatar200ApplicationJSONPlatformEnum = "UWP"
	AppsUpdateAvatar200ApplicationJSONPlatformEnumCordova         AppsUpdateAvatar200ApplicationJSONPlatformEnum = "Cordova"
	AppsUpdateAvatar200ApplicationJSONPlatformEnumReactNative     AppsUpdateAvatar200ApplicationJSONPlatformEnum = "React-Native"
	AppsUpdateAvatar200ApplicationJSONPlatformEnumUnity           AppsUpdateAvatar200ApplicationJSONPlatformEnum = "Unity"
	AppsUpdateAvatar200ApplicationJSONPlatformEnumElectron        AppsUpdateAvatar200ApplicationJSONPlatformEnum = "Electron"
	AppsUpdateAvatar200ApplicationJSONPlatformEnumXamarin         AppsUpdateAvatar200ApplicationJSONPlatformEnum = "Xamarin"
	AppsUpdateAvatar200ApplicationJSONPlatformEnumWpf             AppsUpdateAvatar200ApplicationJSONPlatformEnum = "WPF"
	AppsUpdateAvatar200ApplicationJSONPlatformEnumWinForms        AppsUpdateAvatar200ApplicationJSONPlatformEnum = "WinForms"
	AppsUpdateAvatar200ApplicationJSONPlatformEnumUnknown         AppsUpdateAvatar200ApplicationJSONPlatformEnum = "Unknown"
	AppsUpdateAvatar200ApplicationJSONPlatformEnumCustom          AppsUpdateAvatar200ApplicationJSONPlatformEnum = "Custom"
)

func (e *AppsUpdateAvatar200ApplicationJSONPlatformEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Java":
		fallthrough
	case "Objective-C-Swift":
		fallthrough
	case "UWP":
		fallthrough
	case "Cordova":
		fallthrough
	case "React-Native":
		fallthrough
	case "Unity":
		fallthrough
	case "Electron":
		fallthrough
	case "Xamarin":
		fallthrough
	case "WPF":
		fallthrough
	case "WinForms":
		fallthrough
	case "Unknown":
		fallthrough
	case "Custom":
		*e = AppsUpdateAvatar200ApplicationJSONPlatformEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppsUpdateAvatar200ApplicationJSONPlatformEnum: %s", s)
	}
}

// AppsUpdateAvatar200ApplicationJSON - Success
type AppsUpdateAvatar200ApplicationJSON struct {
	// A unique and secret key used to identify the app in communication with the ingestion endpoint for crash reporting and analytics
	AppSecret         string                                               `json:"app_secret"`
	AzureSubscription *AppsUpdateAvatar200ApplicationJSONAzureSubscription `json:"azure_subscription,omitempty"`
	// The created date of this app
	CreatedAt *string `json:"created_at,omitempty"`
	// The description of the app
	Description *string `json:"description,omitempty"`
	// The display name of the app
	DisplayName string `json:"display_name"`
	// The string representation of the source of the app's icon
	IconSource *string `json:"icon_source,omitempty"`
	// The string representation of the URL pointing to the app's icon
	IconURL *string `json:"icon_url,omitempty"`
	// The unique ID (UUID) of the app
	ID string `json:"id"`
	// The permissions of the calling user
	MemberPermissions []AppsUpdateAvatar200ApplicationJSONMemberPermissionsEnum `json:"member_permissions,omitempty"`
	// The name of the app used in URLs
	Name string `json:"name"`
	// The creation origin of this app
	Origin AppsUpdateAvatar200ApplicationJSONOriginEnum `json:"origin"`
	// The OS the app will be running on
	Os AppsUpdateAvatar200ApplicationJSONOsEnum `json:"os"`
	// The information about the app's owner
	Owner AppsUpdateAvatar200ApplicationJSONOwner `json:"owner"`
	// The platform of the app
	Platform AppsUpdateAvatar200ApplicationJSONPlatformEnum `json:"platform"`
	// A one-word descriptive release-type value that starts with a capital letter but is otherwise lowercase
	ReleaseType *string `json:"release_type,omitempty"`
	// The last updated date of this app
	UpdatedAt *string `json:"updated_at,omitempty"`
}

type AppsUpdateAvatarResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	AppsUpdateAvatar200ApplicationJSONObject *AppsUpdateAvatar200ApplicationJSON
	// Error
	AppsUpdateAvatarDefaultApplicationJSONObject *AppsUpdateAvatarDefaultApplicationJSON
}
