/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Application - Describes an application in the application catalog.
 */
public class Application {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AppBlockArn")
    public String appBlockArn;

    public Application withAppBlockArn(String appBlockArn) {
        this.appBlockArn = appBlockArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Arn")
    public String arn;

    public Application withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedTime")
    public OffsetDateTime createdTime;

    public Application withCreatedTime(OffsetDateTime createdTime) {
        this.createdTime = createdTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;

    public Application withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DisplayName")
    public String displayName;

    public Application withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Enabled")
    public Boolean enabled;

    public Application withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IconS3Location")
    public S3Location iconS3Location;

    public Application withIconS3Location(S3Location iconS3Location) {
        this.iconS3Location = iconS3Location;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IconURL")
    public String iconURL;

    public Application withIconURL(String iconURL) {
        this.iconURL = iconURL;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstanceFamilies")
    public String[] instanceFamilies;

    public Application withInstanceFamilies(String[] instanceFamilies) {
        this.instanceFamilies = instanceFamilies;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LaunchParameters")
    public String launchParameters;

    public Application withLaunchParameters(String launchParameters) {
        this.launchParameters = launchParameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LaunchPath")
    public String launchPath;

    public Application withLaunchPath(String launchPath) {
        this.launchPath = launchPath;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Metadata")
    public java.util.Map<String, String> metadata;

    public Application withMetadata(java.util.Map<String, String> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public Application withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Platforms")
    public PlatformTypeEnum[] platforms;

    public Application withPlatforms(PlatformTypeEnum[] platforms) {
        this.platforms = platforms;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkingDirectory")
    public String workingDirectory;

    public Application withWorkingDirectory(String workingDirectory) {
        this.workingDirectory = workingDirectory;
        return this;
    }
    
    public Application(){}
}
