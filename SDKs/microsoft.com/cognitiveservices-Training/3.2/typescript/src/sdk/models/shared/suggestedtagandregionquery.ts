/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StoredSuggestedTagAndRegion } from "./storedsuggestedtagandregion";
import { SuggestedTagAndRegionQueryToken } from "./suggestedtagandregionquerytoken";
import { Expose, Type } from "class-transformer";

/**
 * The array of result images and token containing session and continuation Ids for the next query.
 */
export class SuggestedTagAndRegionQuery extends SpeakeasyBase {
  /**
   * Result of a suggested tags and regions request of the untagged image.
   */
  @SpeakeasyMetadata({ elemType: StoredSuggestedTagAndRegion })
  @Expose({ name: "results" })
  @Type(() => StoredSuggestedTagAndRegion)
  results?: StoredSuggestedTagAndRegion[];

  /**
   * Contains properties we need to fetch suggested tags for. For the first call, Session and continuation set to null.
   *
   * @remarks
   * Then on subsequent calls, uses the session/continuation from the previous SuggestedTagAndRegionQuery result to fetch additional results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "token" })
  @Type(() => SuggestedTagAndRegionQueryToken)
  token?: SuggestedTagAndRegionQueryToken;
}
