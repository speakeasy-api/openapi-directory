/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DiscountResponse } from "./discountresponse";
import { ProductResponse } from "./productresponse";
import { Expose, Type } from "class-transformer";

/**
 * List of library items
 */
export class LibraryResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "deletedDiscounts" })
  deletedDiscounts?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "deletedProducts" })
  deletedProducts?: string[];

  @SpeakeasyMetadata({ elemType: DiscountResponse })
  @Expose({ name: "discounts" })
  @Type(() => DiscountResponse)
  discounts?: DiscountResponse[];

  @SpeakeasyMetadata()
  @Expose({ name: "fromEventLogUuid" })
  fromEventLogUuid?: string;

  @SpeakeasyMetadata({ elemType: ProductResponse })
  @Expose({ name: "products" })
  @Type(() => ProductResponse)
  products?: ProductResponse[];

  @SpeakeasyMetadata()
  @Expose({ name: "untilEventLogUuid" })
  untilEventLogUuid?: string;
}
