/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateFindingsFilterRequestBody {
    /**
     * The action to perform on findings that match the filter criteria. To suppress (automatically archive) findings that match the criteria, set this value to ARCHIVE. Valid values are:
     */
    @JsonProperty("action")
    public CreateFindingsFilterRequestBodyActionEnum action;

    public CreateFindingsFilterRequestBody withAction(CreateFindingsFilterRequestBodyActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * A unique, case-sensitive token that you provide to ensure the idempotency of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientToken")
    public String clientToken;

    public CreateFindingsFilterRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * &lt;p&gt;A custom description of the filter. The description can contain as many as 512 characters.&lt;/p&gt; &lt;p&gt;We strongly recommend that you avoid including any sensitive data in the description of a filter. Other users of your account might be able to see this description, depending on the actions that they're allowed to perform in Amazon Macie.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public CreateFindingsFilterRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Specifies, as a map, one or more property-based conditions that filter the results of a query for findings.
     */
    @JsonProperty("findingCriteria")
    public CreateFindingsFilterRequestBodyFindingCriteria findingCriteria;

    public CreateFindingsFilterRequestBody withFindingCriteria(CreateFindingsFilterRequestBodyFindingCriteria findingCriteria) {
        this.findingCriteria = findingCriteria;
        return this;
    }
    
    /**
     * &lt;p&gt;A custom name for the filter. The name must contain at least 3 characters and can contain as many as 64 characters.&lt;/p&gt; &lt;p&gt;We strongly recommend that you avoid including any sensitive data in the name of a filter. Other users of your account might be able to see this name, depending on the actions that they're allowed to perform in Amazon Macie.&lt;/p&gt;
     */
    @JsonProperty("name")
    public String name;

    public CreateFindingsFilterRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The position of the filter in the list of saved filters on the Amazon Macie console. This value also determines the order in which the filter is applied to findings, relative to other filters that are also applied to the findings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("position")
    public Long position;

    public CreateFindingsFilterRequestBody withPosition(Long position) {
        this.position = position;
        return this;
    }
    
    /**
     * A string-to-string map of key-value pairs that specifies the tags (keys and values) for an Amazon Macie resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public CreateFindingsFilterRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    public CreateFindingsFilterRequestBody(@JsonProperty("action") CreateFindingsFilterRequestBodyActionEnum action, @JsonProperty("findingCriteria") CreateFindingsFilterRequestBodyFindingCriteria findingCriteria, @JsonProperty("name") String name) {
        this.action = action;
        this.findingCriteria = findingCriteria;
        this.name = name;
  }
}
