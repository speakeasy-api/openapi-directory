"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import amount as shared_amount
from ..shared import fundingsource as shared_fundingsource
from ..shared import transferdetail as shared_transferdetail
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Transfer:
    r"""This type is the base response type used by <code>TRANSFER</code> transaction type that is returned in the response."""
    
    funding_source: Optional[shared_fundingsource.FundingSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fundingSource'), 'exclude': lambda f: f is None }})
    r"""This type provided details on the funding source for the transfer."""  
    transaction_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transactionDate'), 'exclude': lambda f: f is None }})
    r"""This timestamp indicates the date/time of the transfer. The following (UTC) format is used: <code>YYYY-MM-DDTHH:MM:SS.SSSZ</code>. For example, <code>2020-08-04T19:09:02.768Z</code>"""  
    transfer_amount: Optional[shared_amount.Amount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transferAmount'), 'exclude': lambda f: f is None }})
    r"""This type is used to express the dollar value and currency used for any transaction retrieved with the <strong>Finances API</strong>, including an order total, a seller payout, a buyer refund, or a seller credit."""  
    transfer_detail: Optional[shared_transferdetail.TransferDetail] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transferDetail'), 'exclude': lambda f: f is None }})
    r"""This type is used by the <b>transferDetail</b> container, which provides more details about the transfer and the charge(s) associated with the transfer."""  
    transfer_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transferId'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the <code>TRANSFER</code> transaction type. This is the same value that was passed into the end of the call URI."""  
    