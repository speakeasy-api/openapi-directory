<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class SubmitRequest
{
    /**
     * This field contains additional data, which may be required for a particular request.
     * 
     * @var ?array<string, string> $additionalData
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalData')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalData = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    public Amount $amount;
    
    /**
     * The date of birth.
     * 
     * Format: ISO-8601; example: YYYY-MM-DD
     * 
     * For Paysafecard it must be the same as used when registering the Paysafecard account.
     * 
     * > This field is mandatory for natural persons. 
     * > This field is required to update the existing `dateOfBirth` that is associated with this recurring contract.
     * 
     * @var ?\DateTime $dateOfBirth
     */
	#[\JMS\Serializer\Annotation\SerializedName('dateOfBirth')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $dateOfBirth = null;
    
    /**
     * The type of the entity the payout is processed for.
     * 
     * 
     * Allowed values:
     * * NaturalPerson
     * * Company
     * > This field is required to update the existing `entityType` that is associated with this recurring contract.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SubmitRequestEntityTypeEnum $entityType
     */
	#[\JMS\Serializer\Annotation\SerializedName('entityType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SubmitRequestEntityTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SubmitRequestEntityTypeEnum $entityType = null;
    
    /**
     * An integer value that is added to the normal fraud score. The value can be either positive or negative.
     * 
     * @var ?int $fraudOffset
     */
	#[\JMS\Serializer\Annotation\SerializedName('fraudOffset')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $fraudOffset = null;
    
    /**
     * The merchant account identifier you want to process the transaction request with.
     * 
     * @var string $merchantAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantAccount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantAccount;
    
    /**
     * The shopper's nationality.
     * 
     * 
     * A valid value is an ISO 2-character country code (e.g. 'NL').
     * 
     * > This field is required to update the existing nationality that is associated with this recurring contract.
     * 
     * @var ?string $nationality
     */
	#[\JMS\Serializer\Annotation\SerializedName('nationality')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nationality = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('recurring')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Recurring')]
    public Recurring $recurring;
    
    /**
     * The merchant reference for this payout. This reference will be used in all communication to the merchant about the status of the payout. Although it is a good idea to make sure it is unique, this is not a requirement.
     * 
     * @var string $reference
     */
	#[\JMS\Serializer\Annotation\SerializedName('reference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $reference;
    
    /**
     * This is the `recurringDetailReference` you want to use for this payout.
     * 
     * 
     * You can use the value LATEST to select the most recently used recurring detail.
     * 
     * @var string $selectedRecurringDetailReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('selectedRecurringDetailReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $selectedRecurringDetailReference;
    
    /**
     * The shopper's email address.
     * 
     * @var string $shopperEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('shopperEmail')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $shopperEmail;
    
	#[\JMS\Serializer\Annotation\SerializedName('shopperName')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Name')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Name $shopperName = null;
    
    /**
     * The shopper's reference for the payout transaction.
     * 
     * @var string $shopperReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('shopperReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $shopperReference;
    
    /**
     * The description of this payout. This description is shown on the bank statement of the shopper (if this is supported by the chosen payment method).
     * 
     * @var ?string $shopperStatement
     */
	#[\JMS\Serializer\Annotation\SerializedName('shopperStatement')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shopperStatement = null;
    
    /**
     * The shopper's social security number.
     * 
     * @var ?string $socialSecurityNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('socialSecurityNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $socialSecurityNumber = null;
    
	public function __construct()
	{
		$this->additionalData = null;
		$this->amount = new \OpenAPI\OpenAPI\Models\Shared\Amount();
		$this->dateOfBirth = null;
		$this->entityType = null;
		$this->fraudOffset = null;
		$this->merchantAccount = "";
		$this->nationality = null;
		$this->recurring = new \OpenAPI\OpenAPI\Models\Shared\Recurring();
		$this->reference = "";
		$this->selectedRecurringDetailReference = "";
		$this->shopperEmail = "";
		$this->shopperName = null;
		$this->shopperReference = "";
		$this->shopperStatement = null;
		$this->socialSecurityNumber = null;
	}
}
