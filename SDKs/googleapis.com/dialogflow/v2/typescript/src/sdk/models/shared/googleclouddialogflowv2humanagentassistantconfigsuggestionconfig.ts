/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig } from "./googleclouddialogflowv2humanagentassistantconfigsuggestionfeatureconfig";
import { Expose, Type } from "class-transformer";

/**
 * Detail human agent assistant config.
 */
export class GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig extends SpeakeasyBase {
  /**
   * Configuration of different suggestion features. One feature can have only one config.
   */
  @SpeakeasyMetadata({
    elemType:
      GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig,
  })
  @Expose({ name: "featureConfigs" })
  @Type(
    () =>
      GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig
  )
  featureConfigs?: GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig[];

  /**
   * If `group_suggestion_responses` is false, and there are multiple `feature_configs` in `event based suggestion` or StreamingAnalyzeContent, we will try to deliver suggestions to customers as soon as we get new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or `StreamingAnalyzeContentResponse`. If `group_suggestion_responses` set to true. All the suggestions to the same participant based on the same context will be grouped into a single Pub/Sub event or StreamingAnalyzeContentResponse.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupSuggestionResponses" })
  groupSuggestionResponses?: boolean;
}
