"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MigratingVmInput = exports.MigratingVm = exports.MigratingVmStateEnum = void 0;
var utils_1 = require("../../../internal/utils");
var awssourcevmdetails_1 = require("./awssourcevmdetails");
var clonejob_1 = require("./clonejob");
var computeenginetargetdefaults_1 = require("./computeenginetargetdefaults");
var cutoverjob_1 = require("./cutoverjob");
var replicationcycle_1 = require("./replicationcycle");
var replicationsync_1 = require("./replicationsync");
var schedulepolicy_1 = require("./schedulepolicy");
var status_1 = require("./status");
var class_transformer_1 = require("class-transformer");
/**
 * Output only. State of the MigratingVm.
 */
var MigratingVmStateEnum;
(function (MigratingVmStateEnum) {
    MigratingVmStateEnum["StateUnspecified"] = "STATE_UNSPECIFIED";
    MigratingVmStateEnum["Pending"] = "PENDING";
    MigratingVmStateEnum["Ready"] = "READY";
    MigratingVmStateEnum["FirstSync"] = "FIRST_SYNC";
    MigratingVmStateEnum["Active"] = "ACTIVE";
    MigratingVmStateEnum["CuttingOver"] = "CUTTING_OVER";
    MigratingVmStateEnum["Cutover"] = "CUTOVER";
    MigratingVmStateEnum["FinalSync"] = "FINAL_SYNC";
    MigratingVmStateEnum["Paused"] = "PAUSED";
    MigratingVmStateEnum["Finalizing"] = "FINALIZING";
    MigratingVmStateEnum["Finalized"] = "FINALIZED";
    MigratingVmStateEnum["Error"] = "ERROR";
})(MigratingVmStateEnum = exports.MigratingVmStateEnum || (exports.MigratingVmStateEnum = {}));
/**
 * MigratingVm describes the VM that will be migrated from a Source environment and its replication state.
 */
var MigratingVm = /** @class */ (function (_super) {
    __extends(MigratingVm, _super);
    function MigratingVm() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "awsSourceVmDetails" }),
        (0, class_transformer_1.Type)(function () { return awssourcevmdetails_1.AwsSourceVmDetails; }),
        __metadata("design:type", awssourcevmdetails_1.AwsSourceVmDetails)
    ], MigratingVm.prototype, "awsSourceVmDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "computeEngineTargetDefaults" }),
        (0, class_transformer_1.Type)(function () { return computeenginetargetdefaults_1.ComputeEngineTargetDefaults; }),
        __metadata("design:type", computeenginetargetdefaults_1.ComputeEngineTargetDefaults)
    ], MigratingVm.prototype, "computeEngineTargetDefaults", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createTime" }),
        __metadata("design:type", String)
    ], MigratingVm.prototype, "createTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currentSyncInfo" }),
        (0, class_transformer_1.Type)(function () { return replicationcycle_1.ReplicationCycle; }),
        __metadata("design:type", replicationcycle_1.ReplicationCycle)
    ], MigratingVm.prototype, "currentSyncInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], MigratingVm.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], MigratingVm.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "error" }),
        (0, class_transformer_1.Type)(function () { return status_1.Status; }),
        __metadata("design:type", status_1.Status)
    ], MigratingVm.prototype, "error", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "group" }),
        __metadata("design:type", String)
    ], MigratingVm.prototype, "group", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], MigratingVm.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lastReplicationCycle" }),
        (0, class_transformer_1.Type)(function () { return replicationcycle_1.ReplicationCycle; }),
        __metadata("design:type", replicationcycle_1.ReplicationCycle)
    ], MigratingVm.prototype, "lastReplicationCycle", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lastSync" }),
        (0, class_transformer_1.Type)(function () { return replicationsync_1.ReplicationSync; }),
        __metadata("design:type", replicationsync_1.ReplicationSync)
    ], MigratingVm.prototype, "lastSync", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], MigratingVm.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "policy" }),
        (0, class_transformer_1.Type)(function () { return schedulepolicy_1.SchedulePolicy; }),
        __metadata("design:type", schedulepolicy_1.SchedulePolicy)
    ], MigratingVm.prototype, "policy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: clonejob_1.CloneJob }),
        (0, class_transformer_1.Expose)({ name: "recentCloneJobs" }),
        (0, class_transformer_1.Type)(function () { return clonejob_1.CloneJob; }),
        __metadata("design:type", Array)
    ], MigratingVm.prototype, "recentCloneJobs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: cutoverjob_1.CutoverJob }),
        (0, class_transformer_1.Expose)({ name: "recentCutoverJobs" }),
        (0, class_transformer_1.Type)(function () { return cutoverjob_1.CutoverJob; }),
        __metadata("design:type", Array)
    ], MigratingVm.prototype, "recentCutoverJobs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceVmId" }),
        __metadata("design:type", String)
    ], MigratingVm.prototype, "sourceVmId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        __metadata("design:type", String)
    ], MigratingVm.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stateTime" }),
        __metadata("design:type", String)
    ], MigratingVm.prototype, "stateTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updateTime" }),
        __metadata("design:type", String)
    ], MigratingVm.prototype, "updateTime", void 0);
    return MigratingVm;
}(utils_1.SpeakeasyBase));
exports.MigratingVm = MigratingVm;
/**
 * MigratingVm describes the VM that will be migrated from a Source environment and its replication state.
 */
var MigratingVmInput = /** @class */ (function (_super) {
    __extends(MigratingVmInput, _super);
    function MigratingVmInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "awsSourceVmDetails" }),
        (0, class_transformer_1.Type)(function () { return awssourcevmdetails_1.AwsSourceVmDetails; }),
        __metadata("design:type", awssourcevmdetails_1.AwsSourceVmDetails)
    ], MigratingVmInput.prototype, "awsSourceVmDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "computeEngineTargetDefaults" }),
        (0, class_transformer_1.Type)(function () { return computeenginetargetdefaults_1.ComputeEngineTargetDefaultsInput; }),
        __metadata("design:type", computeenginetargetdefaults_1.ComputeEngineTargetDefaultsInput)
    ], MigratingVmInput.prototype, "computeEngineTargetDefaults", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currentSyncInfo" }),
        (0, class_transformer_1.Type)(function () { return replicationcycle_1.ReplicationCycleInput; }),
        __metadata("design:type", replicationcycle_1.ReplicationCycleInput)
    ], MigratingVmInput.prototype, "currentSyncInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], MigratingVmInput.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], MigratingVmInput.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "error" }),
        (0, class_transformer_1.Type)(function () { return status_1.Status; }),
        __metadata("design:type", status_1.Status)
    ], MigratingVmInput.prototype, "error", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], MigratingVmInput.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lastReplicationCycle" }),
        (0, class_transformer_1.Type)(function () { return replicationcycle_1.ReplicationCycleInput; }),
        __metadata("design:type", replicationcycle_1.ReplicationCycleInput)
    ], MigratingVmInput.prototype, "lastReplicationCycle", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lastSync" }),
        (0, class_transformer_1.Type)(function () { return replicationsync_1.ReplicationSync; }),
        __metadata("design:type", replicationsync_1.ReplicationSync)
    ], MigratingVmInput.prototype, "lastSync", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "policy" }),
        (0, class_transformer_1.Type)(function () { return schedulepolicy_1.SchedulePolicy; }),
        __metadata("design:type", schedulepolicy_1.SchedulePolicy)
    ], MigratingVmInput.prototype, "policy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceVmId" }),
        __metadata("design:type", String)
    ], MigratingVmInput.prototype, "sourceVmId", void 0);
    return MigratingVmInput;
}(utils_1.SpeakeasyBase));
exports.MigratingVmInput = MigratingVmInput;
