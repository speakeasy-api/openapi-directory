"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProductDestination:
    
    destination_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinationName'), 'exclude': lambda f: f is None }})
    r"""The name of the destination."""  
    intention: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('intention'), 'exclude': lambda f: f is None }})
    r"""Whether the destination is required, excluded or should be validated. Acceptable values are: - \\"`default`\\" - \\"`excluded`\\" - \\"`optional`\\" - \\"`required`\\" """  
    