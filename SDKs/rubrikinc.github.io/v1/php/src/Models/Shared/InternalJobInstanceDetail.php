<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InternalJobInstanceDetail - Returns the progress made in deleting the recoverable ranges.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InternalJobInstanceDetail
{
    /**
     * Whether this job instance has been archived.
     * 
     * @var bool $archived
     */
	#[\JMS\Serializer\Annotation\SerializedName('archived')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $archived;
    
    /**
     * Some job types create other 'child' jobs to perform their work. Here we show information on how this job is being affected by its child jobs (if any).
     * 
     * @var ?string $childJobDebugInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('childJobDebugInfo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $childJobDebugInfo = null;
    
    /**
     * End time of the job instance.
     * 
     * @var ?string $endTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('endTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $endTime = null;
    
    /**
     * Error information of the job instance.
     * 
     * @var ?string $errorInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('errorInfo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $errorInfo = null;
    
    /**
     * ID of the instance.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Whether this job is disabled or not.
     * 
     * @var bool $isDisabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('isDisabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $isDisabled;
    
    /**
     * The current progress in terms of percentage of the async request.
     * 
     * @var ?float $jobProgress
     */
	#[\JMS\Serializer\Annotation\SerializedName('jobProgress')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $jobProgress = null;
    
    /**
     * Type of the job.
     * 
     * @var string $jobType
     */
	#[\JMS\Serializer\Annotation\SerializedName('jobType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $jobType;
    
    /**
     * ID of the node where the job runs.
     * 
     * @var string $nodeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $nodeId;
    
    /**
     * Result of the job instance. Its meaning depends on the job type but is usually an ID.
     * 
     * @var ?string $result
     */
	#[\JMS\Serializer\Annotation\SerializedName('result')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $result = null;
    
    /**
     * Start time of the job instance.
     * 
     * @var ?string $startTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startTime = null;
    
    /**
     * Status of the job instance.
     * 
     * @var string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $status;
    
	public function __construct()
	{
		$this->archived = false;
		$this->childJobDebugInfo = null;
		$this->endTime = null;
		$this->errorInfo = null;
		$this->id = "";
		$this->isDisabled = false;
		$this->jobProgress = null;
		$this->jobType = "";
		$this->nodeId = "";
		$this->result = null;
		$this->startTime = null;
		$this->status = "";
	}
}
