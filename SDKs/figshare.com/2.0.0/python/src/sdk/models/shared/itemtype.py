"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ItemType:
    
    icon: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('icon') }})
    r"""The string identifying the icon of the item type."""  
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The ID of the item type."""  
    is_selectable: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_selectable') }})
    r"""The selectable status"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the item type"""  
    public_description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('public_description') }})
    r"""The description of the item type."""  
    string_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('string_id') }})
    r"""The string identifier of the item type."""  
    url_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url_name') }})
    r"""The URL name of the item type."""  
    