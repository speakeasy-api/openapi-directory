// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CloseStatusEnum string

const (
	CloseStatusEnumCompleted      CloseStatusEnum = "COMPLETED"
	CloseStatusEnumFailed         CloseStatusEnum = "FAILED"
	CloseStatusEnumCanceled       CloseStatusEnum = "CANCELED"
	CloseStatusEnumTerminated     CloseStatusEnum = "TERMINATED"
	CloseStatusEnumContinuedAsNew CloseStatusEnum = "CONTINUED_AS_NEW"
	CloseStatusEnumTimedOut       CloseStatusEnum = "TIMED_OUT"
)

func (e CloseStatusEnum) ToPointer() *CloseStatusEnum {
	return &e
}

func (e *CloseStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "COMPLETED":
		fallthrough
	case "FAILED":
		fallthrough
	case "CANCELED":
		fallthrough
	case "TERMINATED":
		fallthrough
	case "CONTINUED_AS_NEW":
		fallthrough
	case "TIMED_OUT":
		*e = CloseStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CloseStatusEnum: %v", v)
	}
}
