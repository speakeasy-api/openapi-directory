/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AnalyticsProductColumnFilters } from "./analyticsproductcolumnfilters";
import { BeezUPCommonCatalogCategoryFilter } from "./beezupcommoncatalogcategoryfilter";
import { PerformanceIndicatorFilter } from "./performanceindicatorfilter";
import { ProductStateFilterEnum } from "./productstatefilterenum";
import { ReportAdvancedFilters } from "./reportadvancedfilters";
import { ReportFilterPeriodTypeEnum } from "./reportfilterperiodtypeenum";
import { ReportTypeEnum } from "./reporttypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contains common filter parameters
 */
export class ReportFilterParameters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "advancedFilters" })
  @Type(() => ReportAdvancedFilters)
  advancedFilters: ReportAdvancedFilters;

  @SpeakeasyMetadata()
  @Expose({ name: "analyticsProductColumnFilters" })
  @Type(() => AnalyticsProductColumnFilters)
  analyticsProductColumnFilters?: AnalyticsProductColumnFilters;

  /**
   * The begin date period you want to get the report. It's required only in case of custom period type !
   */
  @SpeakeasyMetadata()
  @Expose({ name: "beginPeriodUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  beginPeriodUtcDate: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "categoryFilter" })
  @Type(() => BeezUPCommonCatalogCategoryFilter)
  categoryFilter?: BeezUPCommonCatalogCategoryFilter;

  /**
   * The channel identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channelId" })
  channelId?: string;

  /**
   * The end date period you want to get the report. It's required only in case of custom period type !
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endPeriodUtcDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endPeriodUtcDate: Date;

  @SpeakeasyMetadata({ elemType: PerformanceIndicatorFilter })
  @Expose({ name: "performanceIndicatorFilters" })
  @Type(() => PerformanceIndicatorFilter)
  performanceIndicatorFilters?: PerformanceIndicatorFilter[];

  /**
   * Indicates the period type we want use for the report filter
   */
  @SpeakeasyMetadata()
  @Expose({ name: "periodType" })
  periodType: ReportFilterPeriodTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "productColumnsToDisplay" })
  productColumnsToDisplay?: string[];

  /**
   * You can filter on the product state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productState" })
  productState?: ProductStateFilterEnum;

  /**
   * The report type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reportType" })
  reportType: ReportTypeEnum;
}
