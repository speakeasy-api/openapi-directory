// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// OwnerReference - OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.
type OwnerReference struct {
	// API version of the referent.
	APIVersion *string `json:"apiVersion,omitempty"`
	// If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. +optional
	BlockOwnerDeletion *bool `json:"blockOwnerDeletion,omitempty"`
	// If true, this reference points to the managing controller. +optional
	Controller *bool `json:"controller,omitempty"`
	// Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `json:"kind,omitempty"`
	// Name of the referent. More info: https://kubernetes.io/docs/user-guide/identifiers#names
	Name *string `json:"name,omitempty"`
	// UID of the referent. More info: https://kubernetes.io/docs/user-guide/identifiers#uids
	UID *string `json:"uid,omitempty"`
}
