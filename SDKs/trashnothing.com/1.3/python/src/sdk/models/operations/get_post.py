"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import post as shared_post
from typing import Optional


@dataclasses.dataclass
class GetPostSecurity:
    
    api_key: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'query', 'field_name': 'api_key' }})  
    oauth2_code: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    oauth2_implicit: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetPostRequest:
    
    post_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'post_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the post to retrieve."""  
    

@dataclasses.dataclass
class GetPostResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    post: Optional[shared_post.Post] = dataclasses.field(default=None)
    r"""The post."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    