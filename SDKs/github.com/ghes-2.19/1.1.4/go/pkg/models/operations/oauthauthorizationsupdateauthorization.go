// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type OauthAuthorizationsUpdateAuthorizationPathParams struct {
	// authorization_id parameter
	AuthorizationID int64 `pathParam:"style=simple,explode=false,name=authorization_id"`
}

type OauthAuthorizationsUpdateAuthorizationRequestBody struct {
	// A list of scopes to add to this authorization.
	AddScopes []string `json:"add_scopes,omitempty"`
	// A unique string to distinguish an authorization from others created for the same client ID and user.
	Fingerprint *string `json:"fingerprint,omitempty"`
	// A note to remind you what the OAuth token is for.
	Note *string `json:"note,omitempty"`
	// A URL to remind you what app the OAuth token is for.
	NoteURL *string `json:"note_url,omitempty"`
	// A list of scopes to remove from this authorization.
	RemoveScopes []string `json:"remove_scopes,omitempty"`
	// A list of scopes that this authorization is in.
	Scopes []string `json:"scopes,omitempty"`
}

type OauthAuthorizationsUpdateAuthorizationRequest struct {
	PathParams OauthAuthorizationsUpdateAuthorizationPathParams
	Request    *OauthAuthorizationsUpdateAuthorizationRequestBody `request:"mediaType=application/json"`
}

type OauthAuthorizationsUpdateAuthorizationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Response
	Authorization *shared.Authorization
	// Validation failed
	ValidationError *shared.ValidationError
}
