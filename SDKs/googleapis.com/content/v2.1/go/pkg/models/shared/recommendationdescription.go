// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RecommendationDescriptionTypeEnum - Output only. Type of the description.
type RecommendationDescriptionTypeEnum string

const (
	RecommendationDescriptionTypeEnumDescriptionTypeUnspecified RecommendationDescriptionTypeEnum = "DESCRIPTION_TYPE_UNSPECIFIED"
	RecommendationDescriptionTypeEnumShort                      RecommendationDescriptionTypeEnum = "SHORT"
	RecommendationDescriptionTypeEnumLong                       RecommendationDescriptionTypeEnum = "LONG"
)

func (e RecommendationDescriptionTypeEnum) ToPointer() *RecommendationDescriptionTypeEnum {
	return &e
}

func (e *RecommendationDescriptionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DESCRIPTION_TYPE_UNSPECIFIED":
		fallthrough
	case "SHORT":
		fallthrough
	case "LONG":
		*e = RecommendationDescriptionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecommendationDescriptionTypeEnum: %v", v)
	}
}

// RecommendationDescription - Google-provided description for the recommendation.
type RecommendationDescription struct {
	// Output only. Text of the description.
	Text *string `json:"text,omitempty"`
	// Output only. Type of the description.
	Type *RecommendationDescriptionTypeEnum `json:"type,omitempty"`
}
