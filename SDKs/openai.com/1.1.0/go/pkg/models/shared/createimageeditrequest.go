// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type CreateImageEditRequestImage struct {
	Content []byte `multipartForm:"content"`
	Image   string `multipartForm:"name=image"`
}

type CreateImageEditRequestMask struct {
	Content []byte `multipartForm:"content"`
	Mask    string `multipartForm:"name=mask"`
}

type CreateImageEditRequest struct {
	// The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.
	Image CreateImageEditRequestImage `multipartForm:"file"`
	// An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where `image` should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as `image`.
	Mask *CreateImageEditRequestMask `multipartForm:"file"`
	// The number of images to generate. Must be between 1 and 10.
	N *int64 `multipartForm:"name=n"`
	// A text description of the desired image(s). The maximum length is 1000 characters.
	Prompt string `multipartForm:"name=prompt"`
	// The format in which the generated images are returned. Must be one of `url` or `b64_json`.
	ResponseFormat *ResponseFormatEnum `multipartForm:"name=response_format"`
	// The size of the generated images. Must be one of `256x256`, `512x512`, or `1024x1024`.
	Size *SizeEnum `multipartForm:"name=size"`
	// A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).
	//
	User *string `multipartForm:"name=user"`
}
