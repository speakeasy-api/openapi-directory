/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class PostSpacesIdCollectiveDecisionSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  gmaAuth: string;
}

/**
 * for space type 'company' enums allowed are  'EGM','CGM','OGM','ConstituentAssembly','SolePartner','OtherEvent','Office','ExecutiveCommittee','Consulting','Board','PartnersMeeting' and for space type 'association' enums allowed are 'EGM','CGM','OGM','Other','Office','ExecutiveCommittee'
 */
export enum PostSpacesIdCollectiveDecisionRequestBodyEventEnum {
  Egm = "EGM",
  Cgm = "CGM",
  Ogm = "OGM",
  ConstituentAssembly = "ConstituentAssembly",
  SolePartner = "SolePartner",
  OtherEvent = "OtherEvent",
  Other = "Other",
  Office = "Office",
  ExecutiveCommittee = "ExecutiveCommittee",
  Consulting = "Consulting",
  Board = "Board",
  PartnersMeeting = "PartnersMeeting",
}

export enum PostSpacesIdCollectiveDecisionRequestBodyLevelEnum {
  Confidential = "confidential",
  Regular = "regular",
  Public = "public",
}

/**
 * CollectiveDecision to add
 */
export class PostSpacesIdCollectiveDecisionRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "About" })
  about?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Comment" })
  comment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Date" })
  date: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DividendDistributions" })
  dividendDistributions?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "DividendDistributionsDate" })
  dividendDistributionsDate?: string;

  /**
   * for space type 'company' enums allowed are  'EGM','CGM','OGM','ConstituentAssembly','SolePartner','OtherEvent','Office','ExecutiveCommittee','Consulting','Board','PartnersMeeting' and for space type 'association' enums allowed are 'EGM','CGM','OGM','Other','Office','ExecutiveCommittee'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Event" })
  event: PostSpacesIdCollectiveDecisionRequestBodyEventEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Home" })
  home?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Keywords" })
  keywords?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Level" })
  level?: PostSpacesIdCollectiveDecisionRequestBodyLevelEnum;
}

export class PostSpacesIdCollectiveDecisionRequest extends SpeakeasyBase {
  /**
   * CollectiveDecision to add
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PostSpacesIdCollectiveDecisionRequestBody;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;
}

/**
 * Id of the collective decision created
 */
export class PostSpacesIdCollectiveDecision201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;
}

export class PostSpacesIdCollectiveDecisionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Id of the collective decision created
   */
  @SpeakeasyMetadata()
  postSpacesIdCollectiveDecision201ApplicationJSONObject?: PostSpacesIdCollectiveDecision201ApplicationJSON;
}
