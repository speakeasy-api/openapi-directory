// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CopyWorkspaceImageXAmzTargetEnum
type CopyWorkspaceImageXAmzTargetEnum string

const (
	CopyWorkspaceImageXAmzTargetEnumWorkspacesServiceCopyWorkspaceImage CopyWorkspaceImageXAmzTargetEnum = "WorkspacesService.CopyWorkspaceImage"
)

func (e CopyWorkspaceImageXAmzTargetEnum) ToPointer() *CopyWorkspaceImageXAmzTargetEnum {
	return &e
}

func (e *CopyWorkspaceImageXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WorkspacesService.CopyWorkspaceImage":
		*e = CopyWorkspaceImageXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CopyWorkspaceImageXAmzTargetEnum: %v", v)
	}
}

type CopyWorkspaceImageRequest struct {
	CopyWorkspaceImageRequest shared.CopyWorkspaceImageRequest `request:"mediaType=application/json"`
	XAmzAlgorithm             *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                CopyWorkspaceImageXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CopyWorkspaceImageResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	CopyWorkspaceImageResult *shared.CopyWorkspaceImageResult
	// InvalidParameterValuesException
	InvalidParameterValuesException interface{}
	// OperationNotSupportedException
	OperationNotSupportedException interface{}
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	// ResourceLimitExceededException
	ResourceLimitExceededException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ResourceUnavailableException
	ResourceUnavailableException interface{}
}
