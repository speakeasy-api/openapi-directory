/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BareMetalCluster - Resource that represents a bare metal user cluster.
 */
public class BareMetalCluster {
    /**
     * Required. The admin cluster this bare metal user cluster belongs to. This is the full resource name of the admin cluster's fleet membership.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adminClusterMembership")
    public String adminClusterMembership;

    public BareMetalCluster withAdminClusterMembership(String adminClusterMembership) {
        this.adminClusterMembership = adminClusterMembership;
        return this;
    }
    
    /**
     * Output only. The resource name of the bare metal admin cluster managing this user cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adminClusterName")
    public String adminClusterName;

    public BareMetalCluster withAdminClusterName(String adminClusterName) {
        this.adminClusterName = adminClusterName;
        return this;
    }
    
    /**
     * Annotations on the bare metal user cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotations")
    public java.util.Map<String, String> annotations;

    public BareMetalCluster withAnnotations(java.util.Map<String, String> annotations) {
        this.annotations = annotations;
        return this;
    }
    
    /**
     * Required. The Anthos clusters on bare metal version for your user cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bareMetalVersion")
    public String bareMetalVersion;

    public BareMetalCluster withBareMetalVersion(String bareMetalVersion) {
        this.bareMetalVersion = bareMetalVersion;
        return this;
    }
    
    /**
     * Specifies the bare metal user cluster's observability infrastructure.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clusterOperations")
    public BareMetalClusterOperationsConfig clusterOperations;

    public BareMetalCluster withClusterOperations(BareMetalClusterOperationsConfig clusterOperations) {
        this.clusterOperations = clusterOperations;
        return this;
    }
    
    /**
     * Specifies the control plane configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("controlPlane")
    public BareMetalControlPlaneConfig controlPlane;

    public BareMetalCluster withControlPlane(BareMetalControlPlaneConfig controlPlane) {
        this.controlPlane = controlPlane;
        return this;
    }
    
    /**
     * Output only. The time when the bare metal user cluster was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public BareMetalCluster withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Output only. The time when the bare metal user cluster was deleted. If the resource is not deleted, this must be empty
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleteTime")
    public String deleteTime;

    public BareMetalCluster withDeleteTime(String deleteTime) {
        this.deleteTime = deleteTime;
        return this;
    }
    
    /**
     * A human readable description of this bare metal user cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public BareMetalCluster withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Output only. The IP address of the bare metal user cluster's API server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endpoint")
    public String endpoint;

    public BareMetalCluster withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }
    
    /**
     * Output only. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public BareMetalCluster withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Fleet related configuration. Fleets are a Google Cloud concept for logically organizing clusters, letting you use and manage multi-cluster capabilities and apply consistent policies across your systems. See [Anthos Fleets](`https://cloud.google.com/anthos/multicluster-management/fleets`) for more details on Anthos multi-cluster capabilities using Fleets. ##
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fleet")
    public Fleet fleet;

    public BareMetalCluster withFleet(Fleet fleet) {
        this.fleet = fleet;
        return this;
    }
    
    /**
     * Specifies the load balancer configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loadBalancer")
    public BareMetalLoadBalancerConfig loadBalancer;

    public BareMetalCluster withLoadBalancer(BareMetalLoadBalancerConfig loadBalancer) {
        this.loadBalancer = loadBalancer;
        return this;
    }
    
    /**
     * Output only. The object name of the bare metal user cluster custom resource on the associated admin cluster. This field is used to support conflicting names when enrolling existing clusters to the API. When used as a part of cluster enrollment, this field will differ from the name in the resource name. For new clusters, this field will match the user provided cluster name and be visible in the last component of the resource name. It is not modifiable. When the local name and cluster name differ, the local name is used in the admin cluster controller logs. You use the cluster name when accessing the cluster using bmctl and kubectl.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localName")
    public String localName;

    public BareMetalCluster withLocalName(String localName) {
        this.localName = localName;
        return this;
    }
    
    /**
     * Specifies configurations to put bare metal nodes in and out of maintenance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maintenanceConfig")
    public BareMetalMaintenanceConfig maintenanceConfig;

    public BareMetalCluster withMaintenanceConfig(BareMetalMaintenanceConfig maintenanceConfig) {
        this.maintenanceConfig = maintenanceConfig;
        return this;
    }
    
    /**
     * Represents the maintenance status of the bare metal user cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maintenanceStatus")
    public BareMetalMaintenanceStatus maintenanceStatus;

    public BareMetalCluster withMaintenanceStatus(BareMetalMaintenanceStatus maintenanceStatus) {
        this.maintenanceStatus = maintenanceStatus;
        return this;
    }
    
    /**
     * Immutable. The bare metal user cluster resource name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public BareMetalCluster withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Specifies the cluster network configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkConfig")
    public BareMetalNetworkConfig networkConfig;

    public BareMetalCluster withNetworkConfig(BareMetalNetworkConfig networkConfig) {
        this.networkConfig = networkConfig;
        return this;
    }
    
    /**
     * Specifies the node access related settings for the bare metal user cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodeAccessConfig")
    public BareMetalNodeAccessConfig nodeAccessConfig;

    public BareMetalCluster withNodeAccessConfig(BareMetalNodeAccessConfig nodeAccessConfig) {
        this.nodeAccessConfig = nodeAccessConfig;
        return this;
    }
    
    /**
     * Specifies the workload node configurations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodeConfig")
    public BareMetalWorkloadNodeConfig nodeConfig;

    public BareMetalCluster withNodeConfig(BareMetalWorkloadNodeConfig nodeConfig) {
        this.nodeConfig = nodeConfig;
        return this;
    }
    
    /**
     * Specifies operating system settings for cluster provisioning.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osEnvironmentConfig")
    public BareMetalOsEnvironmentConfig osEnvironmentConfig;

    public BareMetalCluster withOsEnvironmentConfig(BareMetalOsEnvironmentConfig osEnvironmentConfig) {
        this.osEnvironmentConfig = osEnvironmentConfig;
        return this;
    }
    
    /**
     * Specifies the cluster proxy configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("proxy")
    public BareMetalProxyConfig proxy;

    public BareMetalCluster withProxy(BareMetalProxyConfig proxy) {
        this.proxy = proxy;
        return this;
    }
    
    /**
     * Output only. If set, there are currently changes in flight to the bare metal user cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reconciling")
    public Boolean reconciling;

    public BareMetalCluster withReconciling(Boolean reconciling) {
        this.reconciling = reconciling;
        return this;
    }
    
    /**
     * Specifies the security related settings for the bare metal user cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("securityConfig")
    public BareMetalSecurityConfig securityConfig;

    public BareMetalCluster withSecurityConfig(BareMetalSecurityConfig securityConfig) {
        this.securityConfig = securityConfig;
        return this;
    }
    
    /**
     * Output only. The current state of the bare metal user cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public BareMetalClusterStateEnum state;

    public BareMetalCluster withState(BareMetalClusterStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * ResourceStatus describes why a cluster or node pool has a certain status. (e.g., ERROR or DEGRADED).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ResourceStatus status;

    public BareMetalCluster withStatus(ResourceStatus status) {
        this.status = status;
        return this;
    }
    
    /**
     * BareMetalStorageConfig specifies the cluster storage configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storage")
    public BareMetalStorageConfig storage;

    public BareMetalCluster withStorage(BareMetalStorageConfig storage) {
        this.storage = storage;
        return this;
    }
    
    /**
     * Output only. The unique identifier of the bare metal user cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uid")
    public String uid;

    public BareMetalCluster withUid(String uid) {
        this.uid = uid;
        return this;
    }
    
    /**
     * Output only. The time when the bare metal user cluster was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public BareMetalCluster withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * ValidationCheck represents the result of preflight check.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("validationCheck")
    public ValidationCheck validationCheck;

    public BareMetalCluster withValidationCheck(ValidationCheck validationCheck) {
        this.validationCheck = validationCheck;
        return this;
    }
    
    public BareMetalCluster(){}
}
