"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import createeventsubscriptionmessage as shared_createeventsubscriptionmessage
from ..shared import createeventsubscriptionresponse as shared_createeventsubscriptionresponse
from enum import Enum
from typing import Any, Optional

class CreateEventSubscriptionXAmzTargetEnum(str, Enum):
    AMAZON_DM_SV20160101_CREATE_EVENT_SUBSCRIPTION = 'AmazonDMSv20160101.CreateEventSubscription'


@dataclasses.dataclass
class CreateEventSubscriptionRequest:
    
    create_event_subscription_message: shared_createeventsubscriptionmessage.CreateEventSubscriptionMessage = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_target: CreateEventSubscriptionXAmzTargetEnum = dataclasses.field(metadata={'header': { 'field_name': 'X-Amz-Target', 'style': 'simple', 'explode': False }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class CreateEventSubscriptionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    create_event_subscription_response: Optional[shared_createeventsubscriptionresponse.CreateEventSubscriptionResponse] = dataclasses.field(default=None)
    r"""Success"""  
    kms_access_denied_fault: Optional[Any] = dataclasses.field(default=None)
    r"""KMSAccessDeniedFault"""  
    kms_disabled_fault: Optional[Any] = dataclasses.field(default=None)
    r"""KMSDisabledFault"""  
    kms_invalid_state_fault: Optional[Any] = dataclasses.field(default=None)
    r"""KMSInvalidStateFault"""  
    kms_not_found_fault: Optional[Any] = dataclasses.field(default=None)
    r"""KMSNotFoundFault"""  
    kms_throttling_fault: Optional[Any] = dataclasses.field(default=None)
    r"""KMSThrottlingFault"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    resource_already_exists_fault: Optional[Any] = dataclasses.field(default=None)
    r"""ResourceAlreadyExistsFault"""  
    resource_not_found_fault: Optional[Any] = dataclasses.field(default=None)
    r"""ResourceNotFoundFault"""  
    resource_quota_exceeded_fault: Optional[Any] = dataclasses.field(default=None)
    r"""ResourceQuotaExceededFault"""  
    sns_invalid_topic_fault: Optional[Any] = dataclasses.field(default=None)
    r"""SNSInvalidTopicFault"""  
    sns_no_authorization_fault: Optional[Any] = dataclasses.field(default=None)
    r"""SNSNoAuthorizationFault"""  
    