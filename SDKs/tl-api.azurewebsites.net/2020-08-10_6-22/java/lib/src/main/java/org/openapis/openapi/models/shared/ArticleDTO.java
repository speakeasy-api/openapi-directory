/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ArticleDTO - The ArticleDTO Class.
 * Contains relevant fields of Article DTO by masking actual Article entity's fields in application.
 *             
 */
public class ArticleDTO {
    /**
     * Active Status 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activeStatus")
    public Boolean activeStatus;
    public ArticleDTO withActiveStatus(Boolean activeStatus) {
        this.activeStatus = activeStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applyForAllGyms")
    public Boolean applyForAllGyms;
    public ArticleDTO withApplyForAllGyms(Boolean applyForAllGyms) {
        this.applyForAllGyms = applyForAllGyms;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("articleId")
    public Integer articleId;
    public ArticleDTO withArticleId(Integer articleId) {
        this.articleId = articleId;
        return this;
    }
    
    @JsonProperty("availableGyms")
    public GymDTO[] availableGyms;
    public ArticleDTO withAvailableGyms(GymDTO[] availableGyms) {
        this.availableGyms = availableGyms;
        return this;
    }
    
    /**
     * Default AvailableQty
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availableQty")
    public Double availableQty;
    public ArticleDTO withAvailableQty(Double availableQty) {
        this.availableQty = availableQty;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("barcode")
    public String barcode;
    public ArticleDTO withBarcode(String barcode) {
        this.barcode = barcode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdDate")
    public OffsetDateTime createdDate;
    public ArticleDTO withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdUser")
    public String createdUser;
    public ArticleDTO withCreatedUser(String createdUser) {
        this.createdUser = createdUser;
        return this;
    }
    
    /**
     * Access Schedule CRON Expression 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cronExpression")
    public String cronExpression;
    public ArticleDTO withCronExpression(String cronExpression) {
        this.cronExpression = cronExpression;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public ArticleDTO withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("discount")
    public Double discount;
    public ArticleDTO withDiscount(Double discount) {
        this.discount = discount;
        return this;
    }
    
    /**
     * Default EmployeeDiscount
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("employeeDiscount")
    public Double employeeDiscount;
    public ArticleDTO withEmployeeDiscount(Double employeeDiscount) {
        this.employeeDiscount = employeeDiscount;
        return this;
    }
    
    /**
     * Default EmployeePrice
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("employeePrice")
    public Double employeePrice;
    public ArticleDTO withEmployeePrice(Double employeePrice) {
        this.employeePrice = employeePrice;
        return this;
    }
    
    /**
     * Gym Customizations 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gymArticles")
    public GymArticleDetailsDTO[] gymArticles;
    public ArticleDTO withGymArticles(GymArticleDetailsDTO[] gymArticles) {
        this.gymArticles = gymArticles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isAddOn")
    public Boolean isAddOn;
    public ArticleDTO withIsAddOn(Boolean isAddOn) {
        this.isAddOn = isAddOn;
        return this;
    }
    
    /**
     * Default IsInventoryItem of the Article 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isInventoryItem")
    public Boolean isInventoryItem;
    public ArticleDTO withIsInventoryItem(Boolean isInventoryItem) {
        this.isInventoryItem = isInventoryItem;
        return this;
    }
    
    /**
     * Default IsObsolete of the Article 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isObsolete")
    public Boolean isObsolete;
    public ArticleDTO withIsObsolete(Boolean isObsolete) {
        this.isObsolete = isObsolete;
        return this;
    }
    
    @JsonProperty("measureUnit")
    public String measureUnit;
    public ArticleDTO withMeasureUnit(String measureUnit) {
        this.measureUnit = measureUnit;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("modifiedDate")
    public OffsetDateTime modifiedDate;
    public ArticleDTO withModifiedDate(OffsetDateTime modifiedDate) {
        this.modifiedDate = modifiedDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modifiedUser")
    public String modifiedUser;
    public ArticleDTO withModifiedUser(String modifiedUser) {
        this.modifiedUser = modifiedUser;
        return this;
    }
    
    @JsonProperty("name")
    public String name;
    public ArticleDTO withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    public Integer number;
    public ArticleDTO withNumber(Integer number) {
        this.number = number;
        return this;
    }
    
    @JsonProperty("price")
    public Double price;
    public ArticleDTO withPrice(Double price) {
        this.price = price;
        return this;
    }
    
    /**
     * Deafault ReorderLevel
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reorderLevel")
    public Double reorderLevel;
    public ArticleDTO withReorderLevel(Double reorderLevel) {
        this.reorderLevel = reorderLevel;
        return this;
    }
    
    /**
     * Default Revenue account
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revenueAccountId")
    public Integer revenueAccountId;
    public ArticleDTO withRevenueAccountId(Integer revenueAccountId) {
        this.revenueAccountId = revenueAccountId;
        return this;
    }
    
    /**
     * Default SellingPrice
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sellingPrice")
    public Double sellingPrice;
    public ArticleDTO withSellingPrice(Double sellingPrice) {
        this.sellingPrice = sellingPrice;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String tags;
    public ArticleDTO withTags(String tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonProperty("type")
    public String type;
    public ArticleDTO withType(String type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vat")
    public Double vat;
    public ArticleDTO withVat(Double vat) {
        this.vat = vat;
        return this;
    }
    
    /**
     * VAT Applicable 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vatApplicable")
    public Boolean vatApplicable;
    public ArticleDTO withVatApplicable(Boolean vatApplicable) {
        this.vatApplicable = vatApplicable;
        return this;
    }
    
}
