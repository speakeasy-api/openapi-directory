/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class CreateProductSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  zettleOauth: string;
}

export class CreateProductRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  productCreateRequest: shared.ProductCreateRequest;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=organizationUuid",
  })
  organizationUuid: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=returnEntity",
  })
  returnEntity?: boolean;
}

export class CreateProductResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  /**
   * Product created. It will include the Product in the response only if 'returnEntity' is true
   */
  @SpeakeasyMetadata()
  productResponse?: shared.ProductResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
