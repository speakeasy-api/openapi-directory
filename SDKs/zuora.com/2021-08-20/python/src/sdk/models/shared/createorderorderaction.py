"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cancelsubscription as shared_cancelsubscription
from ..shared import createordercreatesubscription as shared_createordercreatesubscription
from ..shared import createorderrateplanoverride as shared_createorderrateplanoverride
from ..shared import createorderrateplanupdate as shared_createorderrateplanupdate
from ..shared import createorderresume as shared_createorderresume
from ..shared import createordersuspend as shared_createordersuspend
from ..shared import createordertermsandconditions as shared_createordertermsandconditions
from ..shared import ownertransfer as shared_ownertransfer
from ..shared import removeproduct as shared_removeproduct
from ..shared import triggerdate as shared_triggerdate
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class CreateOrderOrderActionTypeEnum(str, Enum):
    r"""Type of order action.
    
    Unless the type of order action is `RenewSubscription`, you must use the corresponding field to provide information about the order action. For example, if the type of order action is `AddProduct`, you must set the `addProduct` field.
    
    Zuora returns an error if you set a field that corresponds to a different type of order action. For example, if the type of order action is `AddProduct`, Zuora returns an error if you set the `updateProduct` field.
    
    A [pending order](https://knowledgecenter.zuora.com/BC_Subscription_Management/Orders/Pending_Order_and_Subscription) supports the following order actions:
     * CreateSubscription
     * AddProduct
     * UpdateProduct
     * RemoveProduct
     * RenewSubscription
     * TermsAndConditions
    
    However, pending orders created through all order actions except for \"Create new subscription\":
     * Do not impact the subscription status.
     * Are in **Limited Availability**. If you want to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com). 
    
    A pending order is created in either of the following conditions:
     * [Zuora is configured to require service activation](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Service_Activation_of_Orders.3F) and the service activation date is not set in your \"Create an order\" call.
     * [Zuora is configured to require customer acceptance](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Customer_Acceptance_of_Orders.3F) and the customer acceptance date is not set in your \"Create an order\" call.
     * When a charge in the subscription has its `triggerEvent` field set as `SpecificDate` and the `specificTriggerDate` field is not set in your \"Create an order\" API call.
    """
    CREATE_SUBSCRIPTION = 'CreateSubscription'
    TERMS_AND_CONDITIONS = 'TermsAndConditions'
    ADD_PRODUCT = 'AddProduct'
    UPDATE_PRODUCT = 'UpdateProduct'
    REMOVE_PRODUCT = 'RemoveProduct'
    RENEW_SUBSCRIPTION = 'RenewSubscription'
    CANCEL_SUBSCRIPTION = 'CancelSubscription'
    OWNER_TRANSFER = 'OwnerTransfer'
    SUSPEND = 'Suspend'
    RESUME = 'Resume'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateOrderOrderAction:
    
    type: CreateOrderOrderActionTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Type of order action.
    
    Unless the type of order action is `RenewSubscription`, you must use the corresponding field to provide information about the order action. For example, if the type of order action is `AddProduct`, you must set the `addProduct` field.
    
    Zuora returns an error if you set a field that corresponds to a different type of order action. For example, if the type of order action is `AddProduct`, Zuora returns an error if you set the `updateProduct` field.
    
    A [pending order](https://knowledgecenter.zuora.com/BC_Subscription_Management/Orders/Pending_Order_and_Subscription) supports the following order actions:
     * CreateSubscription
     * AddProduct
     * UpdateProduct
     * RemoveProduct
     * RenewSubscription
     * TermsAndConditions
    
    However, pending orders created through all order actions except for \"Create new subscription\":
     * Do not impact the subscription status.
     * Are in **Limited Availability**. If you want to have access to the feature, submit a request at [Zuora Global Support](https://support.zuora.com). 
    
    A pending order is created in either of the following conditions:
     * [Zuora is configured to require service activation](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Service_Activation_of_Orders.3F) and the service activation date is not set in your \"Create an order\" call.
     * [Zuora is configured to require customer acceptance](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Customer_Acceptance_of_Orders.3F) and the customer acceptance date is not set in your \"Create an order\" call.
     * When a charge in the subscription has its `triggerEvent` field set as `SpecificDate` and the `specificTriggerDate` field is not set in your \"Create an order\" API call.
    """  
    add_product: Optional[shared_createorderrateplanoverride.CreateOrderRatePlanOverride] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addProduct'), 'exclude': lambda f: f is None }})
    r"""Information about an order action of type `addProduct`.
    
    If you want to create a pending order through the \"Add product\" order action, and if the charge's trigger condition is `Specific Date`, you must set a charge number in the `chargeNumber` field for the \"Add product\" order action. In this case, if you do not set it, Zuora will not generate the charge number for you.
    
    See more information about pending orders in [Pending Order and Subscription](https://knowledgecenter.zuora.com/BC_Subscription_Management/Orders/Pending_Order_and_Subscription).
    """  
    cancel_subscription: Optional[shared_cancelsubscription.CancelSubscription] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancelSubscription'), 'exclude': lambda f: f is None }})
    r"""Information about an order action of type `CancelSubscription`."""  
    create_subscription: Optional[shared_createordercreatesubscription.CreateOrderCreateSubscription] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createSubscription'), 'exclude': lambda f: f is None }})
    r"""Information about an order action of type `CreateSubscription`."""  
    custom_fields: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customFields'), 'exclude': lambda f: f is None }})
    r"""Container for custom fields of an Order Action object."""  
    owner_transfer: Optional[shared_ownertransfer.OwnerTransfer] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ownerTransfer'), 'exclude': lambda f: f is None }})
    r"""Information about an order action of type `OwnerTransfer`.
    
    **Note:** The Owner Transfer feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
    """  
    remove_product: Optional[shared_removeproduct.RemoveProduct] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('removeProduct'), 'exclude': lambda f: f is None }})
    r"""Information about an order action of type `RemoveProduct`."""  
    resume: Optional[shared_createorderresume.CreateOrderResume] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resume'), 'exclude': lambda f: f is None }})
    r"""Information about an order action of type `Resume`."""  
    suspend: Optional[shared_createordersuspend.CreateOrderSuspend] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suspend'), 'exclude': lambda f: f is None }})
    r"""Information about an order action of type `Suspend`."""  
    terms_and_conditions: Optional[shared_createordertermsandconditions.CreateOrderTermsAndConditions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('termsAndConditions'), 'exclude': lambda f: f is None }})
    r"""Information about an order action of type `TermsAndConditions`."""  
    trigger_dates: Optional[list[shared_triggerdate.TriggerDate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('triggerDates'), 'exclude': lambda f: f is None }})
    r"""Container for the contract effective, service activation, and customer acceptance dates of the order action.
    
    If [Zuora is configured to require service activation](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Service_Activation_of_Orders.3F) and the `ServiceActivation` field is not set for a `CreateSubscription` order action, a `Pending` order and a `Pending Activation` subscription are created.
    
    If [Zuora is configured to require customer acceptance](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Customer_Acceptance_of_Orders.3F) and the `CustomerAcceptance` field is not set for a `CreateSubscription` order action, a `Pending` order and a `Pending Acceptance` subscription are created. At the same time, if the service activation date field is also required and not set, a `Pending` order and a `Pending Activation` subscription are created instead.
    
    If [Zuora is configured to require service activation](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Service_Activation_of_Orders.3F) and the `ServiceActivation` field is not set for either of the following order actions, a `Pending` order is created. The subscription status is not impacted. **Note:** This feature is in **Limited Availability**. If you want to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
     * AddProduct
     * UpdateProduct
     * RemoveProduct
     * RenewSubscription
     * TermsAndConditions
    
    If [Zuora is configured to require customer acceptance](https://knowledgecenter.zuora.com/CB_Billing/Billing_Settings/Define_Default_Subscription_Settings#Require_Customer_Acceptance_of_Orders.3F) and the `CustomerAcceptance` field is not set for either of the following order actions, a `Pending` order is created. The subscription status is not impacted. **Note:** This feature is in **Limited Availability**. If you want to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
     * AddProduct
     * UpdateProduct
     * RemoveProduct
     * RenewSubscription
     * TermsAndConditions
    """  
    update_product: Optional[shared_createorderrateplanupdate.CreateOrderRatePlanUpdate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateProduct'), 'exclude': lambda f: f is None }})
    r"""Information about an order action of type `UpdateProduct`."""  
    