/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PayorV1 - Get Payor Details
 */
public class PayorV1 {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public PayorAddress address;

    public PayorV1 withAddress(PayorAddress address) {
        this.address = address;
        return this;
    }
    
    /**
     * Whether or not the payor allows language choice in the UI.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowsLanguageChoice")
    public Boolean allowsLanguageChoice;

    public PayorV1 withAllowsLanguageChoice(Boolean allowsLanguageChoice) {
        this.allowsLanguageChoice = allowsLanguageChoice;
        return this;
    }
    
    /**
     * How the payor has chosen to refer to payees.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("collectiveAlias")
    public String collectiveAlias;

    public PayorV1 withCollectiveAlias(String collectiveAlias) {
        this.collectiveAlias = collectiveAlias;
        return this;
    }
    
    /**
     * The payor\u2019s 'Doing Business As' name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dbaName")
    public String dbaName;

    public PayorV1 withDbaName(String dbaName) {
        this.dbaName = dbaName;
        return this;
    }
    
    /**
     * The funding account name to be used for the payor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fundingAccountAccountName")
    public String fundingAccountAccountName;

    public PayorV1 withFundingAccountAccountName(String fundingAccountAccountName) {
        this.fundingAccountAccountName = fundingAccountAccountName;
        return this;
    }
    
    /**
     * The funding account number to be used for the payor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fundingAccountAccountNumber")
    public String fundingAccountAccountNumber;

    public PayorV1 withFundingAccountAccountNumber(String fundingAccountAccountNumber) {
        this.fundingAccountAccountNumber = fundingAccountAccountNumber;
        return this;
    }
    
    /**
     * The funding account routing number to be used for the payor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fundingAccountRoutingNumber")
    public String fundingAccountRoutingNumber;

    public PayorV1 withFundingAccountRoutingNumber(String fundingAccountRoutingNumber) {
        this.fundingAccountRoutingNumber = fundingAccountRoutingNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("includesReports")
    public Boolean includesReports;

    public PayorV1 withIncludesReports(Boolean includesReports) {
        this.includesReports = includesReports;
        return this;
    }
    
    /**
     * The kyc state of the payor. One of the following values: FAILED_KYC, PASSED_KYC, REQUIRES_KYC
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kycState")
    public String kycState;

    public PayorV1 withKycState(String kycState) {
        this.kycState = kycState;
        return this;
    }
    
    /**
     * The payor\u2019s language preference. Must be one of [EN, FR].
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("language")
    public String language;

    public PayorV1 withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    /**
     * Whether or not the payor has been manually locked by the backoffice.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("manualLockout")
    public Boolean manualLockout;

    public PayorV1 withManualLockout(Boolean manualLockout) {
        this.manualLockout = manualLockout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxMasterPayorAdmins")
    public Long maxMasterPayorAdmins;

    public PayorV1 withMaxMasterPayorAdmins(Long maxMasterPayorAdmins) {
        this.maxMasterPayorAdmins = maxMasterPayorAdmins;
        return this;
    }
    
    /**
     * The grace period for paying payees in days.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payeeGracePeriodDays")
    public Long payeeGracePeriodDays;

    public PayorV1 withPayeeGracePeriodDays(Long payeeGracePeriodDays) {
        this.payeeGracePeriodDays = payeeGracePeriodDays;
        return this;
    }
    
    /**
     * Whether grace period processing is enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payeeGracePeriodProcessingEnabled")
    public Boolean payeeGracePeriodProcessingEnabled;

    public PayorV1 withPayeeGracePeriodProcessingEnabled(Boolean payeeGracePeriodProcessingEnabled) {
        this.payeeGracePeriodProcessingEnabled = payeeGracePeriodProcessingEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payorId")
    public String payorId;

    public PayorV1 withPayorId(String payorId) {
        this.payorId = payorId;
        return this;
    }
    
    /**
     * The name of the payor.
     */
    @JsonProperty("payorName")
    public String payorName;

    public PayorV1 withPayorName(String payorName) {
        this.payorName = payorName;
        return this;
    }
    
    /**
     * Primary contact email for the payor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryContactEmail")
    public String primaryContactEmail;

    public PayorV1 withPrimaryContactEmail(String primaryContactEmail) {
        this.primaryContactEmail = primaryContactEmail;
        return this;
    }
    
    /**
     * Name of primary contact for the payor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryContactName")
    public String primaryContactName;

    public PayorV1 withPrimaryContactName(String primaryContactName) {
        this.primaryContactName = primaryContactName;
        return this;
    }
    
    /**
     * Primary contact phone number for the payor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryContactPhone")
    public String primaryContactPhone;

    public PayorV1 withPrimaryContactPhone(String primaryContactPhone) {
        this.primaryContactPhone = primaryContactPhone;
        return this;
    }
    
    /**
     * Whether or not the payor has opted-out of reminder emails being sent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reminderEmailsOptOut")
    public Boolean reminderEmailsOptOut;

    public PayorV1 withReminderEmailsOptOut(Boolean reminderEmailsOptOut) {
        this.reminderEmailsOptOut = reminderEmailsOptOut;
        return this;
    }
    
    /**
     * The payor\u2019s support contact email address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supportContact")
    public String supportContact;

    public PayorV1 withSupportContact(String supportContact) {
        this.supportContact = supportContact;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transmissionTypes")
    public TransmissionTypes transmissionTypes;

    public PayorV1 withTransmissionTypes(TransmissionTypes transmissionTypes) {
        this.transmissionTypes = transmissionTypes;
        return this;
    }
    
    public PayorV1(@JsonProperty("payorName") String payorName) {
        this.payorName = payorName;
  }
}
