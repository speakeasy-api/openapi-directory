// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeAddressXAmzTargetEnum
type DescribeAddressXAmzTargetEnum string

const (
	DescribeAddressXAmzTargetEnumAwsieSnowballJobManagementServiceDescribeAddress DescribeAddressXAmzTargetEnum = "AWSIESnowballJobManagementService.DescribeAddress"
)

func (e *DescribeAddressXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSIESnowballJobManagementService.DescribeAddress":
		*e = DescribeAddressXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeAddressXAmzTargetEnum: %s", s)
	}
}

type DescribeAddressRequest struct {
	DescribeAddressRequest shared.DescribeAddressRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             DescribeAddressXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeAddressResponse struct {
	ContentType string
	// Success
	DescribeAddressResult *shared.DescribeAddressResult
	// InvalidResourceException
	InvalidResourceException interface{}
	StatusCode               int
	RawResponse              *http.Response
}
