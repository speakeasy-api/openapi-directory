/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * StringMatcher - Specifies the way to match a string. [#next-free-field: 7]
 */
public class StringMatcher {
    /**
     * The input string must match exactly the string specified here. Examples: * *abc* only matches the value *abc*.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exact")
    public String exact;

    public StringMatcher withExact(String exact) {
        this.exact = exact;
        return this;
    }
    
    /**
     * If true, indicates the exact/prefix/suffix matching should be case insensitive. This has no effect for the safe_regex match. For example, the matcher *data* will match both input string *Data* and *data* if set to true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ignoreCase")
    public Boolean ignoreCase;

    public StringMatcher withIgnoreCase(Boolean ignoreCase) {
        this.ignoreCase = ignoreCase;
        return this;
    }
    
    /**
     * The input string must have the prefix specified here. Note: empty prefix is not allowed, please use regex instead. Examples: * *abc* matches the value *abc.xyz*
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prefix")
    public String prefix;

    public StringMatcher withPrefix(String prefix) {
        this.prefix = prefix;
        return this;
    }
    
    /**
     * The input string must match the regular expression specified here. The regex grammar is defined `here `_. Examples: * The regex ``\d{3}`` matches the value *123* * The regex ``\d{3}`` does not match the value *1234* * The regex ``\d{3}`` does not match the value *123.456* .. attention:: This field has been deprecated in favor of `safe_regex` as it is not safe for use with untrusted input in all cases.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regex")
    public String regex;

    public StringMatcher withRegex(String regex) {
        this.regex = regex;
        return this;
    }
    
    /**
     * A regex matcher designed for safety when used with untrusted input.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("safeRegex")
    public RegexMatcher safeRegex;

    public StringMatcher withSafeRegex(RegexMatcher safeRegex) {
        this.safeRegex = safeRegex;
        return this;
    }
    
    /**
     * The input string must have the suffix specified here. Note: empty prefix is not allowed, please use regex instead. Examples: * *abc* matches the value *xyz.abc*
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suffix")
    public String suffix;

    public StringMatcher withSuffix(String suffix) {
        this.suffix = suffix;
        return this;
    }
    
    public StringMatcher(){}
}
