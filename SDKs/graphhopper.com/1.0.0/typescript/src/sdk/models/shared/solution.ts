/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Detail } from "./detail";
import { Route } from "./route";
import { Expose, Type } from "class-transformer";

export class SolutionUnassigned extends SpeakeasyBase {
  /**
   * An array of ids of unassigned breaks
   */
  @SpeakeasyMetadata()
  @Expose({ name: "breaks" })
  breaks?: string[];

  /**
   * An array of details, i.e. reason for unassigned services or shipments
   */
  @SpeakeasyMetadata({ elemType: Detail })
  @Expose({ name: "details" })
  @Type(() => Detail)
  details?: Detail[];

  /**
   * An array of ids of unassigned services
   */
  @SpeakeasyMetadata()
  @Expose({ name: "services" })
  services?: string[];

  /**
   * An array of ids of unassigned shipments
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shipments" })
  shipments?: string[];
}

/**
 * Only available if status field indicates `finished`.
 */
export class Solution extends SpeakeasyBase {
  /**
   * Overall completion time in seconds, i.e. the sum of each routes/drivers operation time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "completion_time" })
  completionTime?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "costs" })
  costs?: number;

  /**
   * Overall distance travelled in meter, i.e. the sum of each route's transport distance
   */
  @SpeakeasyMetadata()
  @Expose({ name: "distance" })
  distance?: number;

  /**
   * Operation time of longest route in seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_operation_time" })
  maxOperationTime?: number;

  /**
   * Number of jobs that could not be assigned to final solution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "no_unassigned" })
  noUnassigned?: number;

  /**
   * Number of employed vehicles.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "no_vehicles" })
  noVehicles?: number;

  /**
   * Overall preparation time in seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "preparation_time" })
  preparationTime?: number;

  /**
   * An array of routes
   */
  @SpeakeasyMetadata({ elemType: Route })
  @Expose({ name: "routes" })
  @Type(() => Route)
  routes?: Route[];

  /**
   * Overall service time in seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "service_duration" })
  serviceDuration?: number;

  /**
   * Use `transport_time` instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  time?: number;

  /**
   * Overall time travelled in seconds, i.e. the sum of each route's transport time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transport_time" })
  transportTime?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "unassigned" })
  @Type(() => SolutionUnassigned)
  unassigned?: SolutionUnassigned;

  /**
   * Overall waiting time in seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "waiting_time" })
  waitingTime?: number;
}
