// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StatusEnum string

const (
	StatusEnumCreating                    StatusEnum = "CREATING"
	StatusEnumActive                      StatusEnum = "ACTIVE"
	StatusEnumDeleting                    StatusEnum = "DELETING"
	StatusEnumUpdating                    StatusEnum = "UPDATING"
	StatusEnumVpcEndpointLimitExceeded    StatusEnum = "VPC_ENDPOINT_LIMIT_EXCEEDED"
	StatusEnumIPAddressLimitExceeded      StatusEnum = "IP_ADDRESS_LIMIT_EXCEEDED"
	StatusEnumInvalidSecurityGroupID      StatusEnum = "INVALID_SECURITY_GROUP_ID"
	StatusEnumInvalidSubnetID             StatusEnum = "INVALID_SUBNET_ID"
	StatusEnumInaccessibleEncryptionCreds StatusEnum = "INACCESSIBLE_ENCRYPTION_CREDS"
)

func (e *StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "DELETING":
		fallthrough
	case "UPDATING":
		fallthrough
	case "VPC_ENDPOINT_LIMIT_EXCEEDED":
		fallthrough
	case "IP_ADDRESS_LIMIT_EXCEEDED":
		fallthrough
	case "INVALID_SECURITY_GROUP_ID":
		fallthrough
	case "INVALID_SUBNET_ID":
		fallthrough
	case "INACCESSIBLE_ENCRYPTION_CREDS":
		*e = StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StatusEnum: %s", s)
	}
}
