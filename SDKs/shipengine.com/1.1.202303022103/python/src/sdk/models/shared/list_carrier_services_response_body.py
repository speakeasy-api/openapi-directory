"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListCarrierServicesResponseBodyService:
    r"""A service offered by the carrier"""
    
    carrier_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carrier_code'), 'exclude': lambda f: f is None }})  
    carrier_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carrier_id'), 'exclude': lambda f: f is None }})
    r"""A string that uniquely identifies the carrier"""  
    domestic: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domestic'), 'exclude': lambda f: f is None }})
    r"""Supports domestic shipping"""  
    international: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('international'), 'exclude': lambda f: f is None }})
    r"""Supports international shipping."""  
    is_multi_package_supported: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_multi_package_supported'), 'exclude': lambda f: f is None }})
    r"""Carrier supports multiple packages per shipment"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""User friendly service name"""  
    service_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_code'), 'exclude': lambda f: f is None }})
    r"""service code"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListCarrierServicesResponseBody:
    r"""A carrier list services response body"""
    
    services: Optional[list[ListCarrierServicesResponseBodyService]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('services'), 'exclude': lambda f: f is None }})
    r"""An array of services associated with the carrier"""  
    