/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * A SSL/TLS X509 certificate
 */
export class Certificate extends SpeakeasyBase {
  /**
   * Allow Otoroshi to renew the certificate (if self signed)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "autoRenew" })
  autoRenew: string;

  /**
   * Certificate is a CA (read only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ca" })
  ca: string;

  /**
   * Reference for a CA certificate in otoroshi
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caRef" })
  caRef: string;

  /**
   * Certificate chain of trust in PEM format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "chain" })
  chain: string;

  /**
   * Domain of the certificate (read only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  domain: string;

  /**
   * Start date of validity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  from: string;

  /**
   * Id of the certificate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * PKCS8 private key in PEM format
   */
  @SpeakeasyMetadata()
  @Expose({ name: "privateKey" })
  privateKey: string;

  /**
   * Certificate is self signed  read only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfSigned" })
  selfSigned: string;

  /**
   * Subject of the certificate (read only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subject" })
  subject: string;

  /**
   * End date of validity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  to: string;

  /**
   * Certificate is valid (read only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "valid" })
  valid: string;
}
