/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Specifies criteria for filtering the results of a request for information about classification jobs.
 */
export class ListClassificationJobsRequestBodyFilterCriteria extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.ListJobsFilterTerm })
  @Expose({ name: "excludes" })
  @Type(() => shared.ListJobsFilterTerm)
  excludes?: shared.ListJobsFilterTerm[];

  @SpeakeasyMetadata({ elemType: shared.ListJobsFilterTerm })
  @Expose({ name: "includes" })
  @Type(() => shared.ListJobsFilterTerm)
  includes?: shared.ListJobsFilterTerm[];
}

/**
 * Specifies criteria for sorting the results of a request for information about classification jobs.
 */
export class ListClassificationJobsRequestBodySortCriteria extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributeName" })
  attributeName?: shared.ListJobsSortAttributeNameEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "orderBy" })
  orderBy?: shared.OrderByEnum;
}

export class ListClassificationJobsRequestBody extends SpeakeasyBase {
  /**
   * Specifies criteria for filtering the results of a request for information about classification jobs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filterCriteria" })
  @Type(() => ListClassificationJobsRequestBodyFilterCriteria)
  filterCriteria?: ListClassificationJobsRequestBodyFilterCriteria;

  /**
   * The maximum number of items to include in each page of the response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxResults" })
  maxResults?: number;

  /**
   * The nextToken string that specifies which page of results to return in a paginated response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextToken" })
  nextToken?: string;

  /**
   * Specifies criteria for sorting the results of a request for information about classification jobs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sortCriteria" })
  @Type(() => ListClassificationJobsRequestBodySortCriteria)
  sortCriteria?: ListClassificationJobsRequestBodySortCriteria;
}

export class ListClassificationJobsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ListClassificationJobsRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * Pagination limit
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=maxResults",
  })
  maxResults?: string;

  /**
   * Pagination token
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=nextToken",
  })
  nextToken?: string;
}

export class ListClassificationJobsResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * ConflictException
   */
  @SpeakeasyMetadata()
  conflictException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listClassificationJobsResponse?: shared.ListClassificationJobsResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ServiceQuotaExceededException
   */
  @SpeakeasyMetadata()
  serviceQuotaExceededException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
