<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GlobalJwtVerifier - A JWT verifier used by multiple service descriptor
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GlobalJwtVerifier
{
	#[\JMS\Serializer\Annotation\SerializedName('algoSettings')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    public mixed $algoSettings;
    
    /**
     * Verifier description
     * 
     * @var string $desc
     */
	#[\JMS\Serializer\Annotation\SerializedName('desc')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $desc;
    
    /**
     * Is it enabled
     * 
     * @var bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $enabled;
    
    /**
     * Verifier id
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Verifier name
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
	#[\JMS\Serializer\Annotation\SerializedName('source')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    public mixed $source;
    
	#[\JMS\Serializer\Annotation\SerializedName('strategy')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    public mixed $strategy;
    
    /**
     * Does it fail if JWT not found
     * 
     * @var bool $strict
     */
	#[\JMS\Serializer\Annotation\SerializedName('strict')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $strict;
    
	public function __construct()
	{
		$this->algoSettings = null;
		$this->desc = "";
		$this->enabled = false;
		$this->id = "";
		$this->name = "";
		$this->source = null;
		$this->strategy = null;
		$this->strict = false;
	}
}
