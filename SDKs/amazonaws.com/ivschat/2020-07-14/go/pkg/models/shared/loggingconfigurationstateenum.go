// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LoggingConfigurationStateEnum string

const (
	LoggingConfigurationStateEnumCreating     LoggingConfigurationStateEnum = "CREATING"
	LoggingConfigurationStateEnumCreateFailed LoggingConfigurationStateEnum = "CREATE_FAILED"
	LoggingConfigurationStateEnumDeleting     LoggingConfigurationStateEnum = "DELETING"
	LoggingConfigurationStateEnumDeleteFailed LoggingConfigurationStateEnum = "DELETE_FAILED"
	LoggingConfigurationStateEnumUpdating     LoggingConfigurationStateEnum = "UPDATING"
	LoggingConfigurationStateEnumUpdateFailed LoggingConfigurationStateEnum = "UPDATE_FAILED"
	LoggingConfigurationStateEnumActive       LoggingConfigurationStateEnum = "ACTIVE"
)

func (e *LoggingConfigurationStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATING":
		fallthrough
	case "CREATE_FAILED":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETE_FAILED":
		fallthrough
	case "UPDATING":
		fallthrough
	case "UPDATE_FAILED":
		fallthrough
	case "ACTIVE":
		*e = LoggingConfigurationStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LoggingConfigurationStateEnum: %s", s)
	}
}
