"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GdataMedia = exports.GdataMediaReferenceTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var gdatablobstore2info_1 = require("./gdatablobstore2info");
var gdatacompositemedia_1 = require("./gdatacompositemedia");
var gdatacontenttypeinfo_1 = require("./gdatacontenttypeinfo");
var gdatadiffchecksumsresponse_1 = require("./gdatadiffchecksumsresponse");
var gdatadiffdownloadresponse_1 = require("./gdatadiffdownloadresponse");
var gdatadiffuploadrequest_1 = require("./gdatadiffuploadrequest");
var gdatadiffuploadresponse_1 = require("./gdatadiffuploadresponse");
var gdatadiffversionresponse_1 = require("./gdatadiffversionresponse");
var gdatadownloadparameters_1 = require("./gdatadownloadparameters");
var gdataobjectid_1 = require("./gdataobjectid");
/**
 * Describes what the field reference contains.
 */
var GdataMediaReferenceTypeEnum;
(function (GdataMediaReferenceTypeEnum) {
    GdataMediaReferenceTypeEnum["Path"] = "PATH";
    GdataMediaReferenceTypeEnum["BlobRef"] = "BLOB_REF";
    GdataMediaReferenceTypeEnum["Inline"] = "INLINE";
    GdataMediaReferenceTypeEnum["GetMedia"] = "GET_MEDIA";
    GdataMediaReferenceTypeEnum["CompositeMedia"] = "COMPOSITE_MEDIA";
    GdataMediaReferenceTypeEnum["BigstoreRef"] = "BIGSTORE_REF";
    GdataMediaReferenceTypeEnum["DiffVersionResponse"] = "DIFF_VERSION_RESPONSE";
    GdataMediaReferenceTypeEnum["DiffChecksumsResponse"] = "DIFF_CHECKSUMS_RESPONSE";
    GdataMediaReferenceTypeEnum["DiffDownloadResponse"] = "DIFF_DOWNLOAD_RESPONSE";
    GdataMediaReferenceTypeEnum["DiffUploadRequest"] = "DIFF_UPLOAD_REQUEST";
    GdataMediaReferenceTypeEnum["DiffUploadResponse"] = "DIFF_UPLOAD_RESPONSE";
    GdataMediaReferenceTypeEnum["CosmoBinaryReference"] = "COSMO_BINARY_REFERENCE";
    GdataMediaReferenceTypeEnum["ArbitraryBytes"] = "ARBITRARY_BYTES";
})(GdataMediaReferenceTypeEnum = exports.GdataMediaReferenceTypeEnum || (exports.GdataMediaReferenceTypeEnum = {}));
/**
 * A reference to data stored on the filesystem, on GFS or in blobstore.
 */
var GdataMedia = /** @class */ (function (_super) {
    __extends(GdataMedia, _super);
    function GdataMedia() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GdataMedia.prototype, "algorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GdataMedia.prototype, "bigstoreObjectRef", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GdataMedia.prototype, "blobRef", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", gdatablobstore2info_1.GdataBlobstore2Info)
    ], GdataMedia.prototype, "blobstore2Info", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: gdatacompositemedia_1.GdataCompositeMedia }),
        __metadata("design:type", Array)
    ], GdataMedia.prototype, "compositeMedia", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GdataMedia.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", gdatacontenttypeinfo_1.GdataContentTypeInfo)
    ], GdataMedia.prototype, "contentTypeInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GdataMedia.prototype, "cosmoBinaryReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GdataMedia.prototype, "crc32cHash", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", gdatadiffchecksumsresponse_1.GdataDiffChecksumsResponse)
    ], GdataMedia.prototype, "diffChecksumsResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", gdatadiffdownloadresponse_1.GdataDiffDownloadResponse)
    ], GdataMedia.prototype, "diffDownloadResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", gdatadiffuploadrequest_1.GdataDiffUploadRequest)
    ], GdataMedia.prototype, "diffUploadRequest", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", gdatadiffuploadresponse_1.GdataDiffUploadResponse)
    ], GdataMedia.prototype, "diffUploadResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", gdatadiffversionresponse_1.GdataDiffVersionResponse)
    ], GdataMedia.prototype, "diffVersionResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", gdatadownloadparameters_1.GdataDownloadParameters)
    ], GdataMedia.prototype, "downloadParameters", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GdataMedia.prototype, "filename", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GdataMedia.prototype, "hash", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], GdataMedia.prototype, "hashVerified", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GdataMedia.prototype, "inline", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], GdataMedia.prototype, "isPotentialRetry", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GdataMedia.prototype, "length", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GdataMedia.prototype, "md5Hash", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GdataMedia.prototype, "mediaId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", gdataobjectid_1.GdataObjectId)
    ], GdataMedia.prototype, "objectId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GdataMedia.prototype, "path", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GdataMedia.prototype, "referenceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GdataMedia.prototype, "sha1Hash", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GdataMedia.prototype, "sha256Hash", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GdataMedia.prototype, "timestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GdataMedia.prototype, "token", void 0);
    return GdataMedia;
}(utils_1.SpeakeasyBase));
exports.GdataMedia = GdataMedia;
