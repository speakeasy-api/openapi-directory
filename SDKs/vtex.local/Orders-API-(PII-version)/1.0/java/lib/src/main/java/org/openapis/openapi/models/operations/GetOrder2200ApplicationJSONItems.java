/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetOrder2200ApplicationJSONItems {
    /**
     * Additional information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalInfo")
    public GetOrder2200ApplicationJSONItemsAdditionalInfo additionalInfo;
    public GetOrder2200ApplicationJSONItems withAdditionalInfo(GetOrder2200ApplicationJSONItemsAdditionalInfo additionalInfo) {
        this.additionalInfo = additionalInfo;
        return this;
    }
    
    /**
     * Array containing information on attachments.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attachments")
    public String[] attachments;
    public GetOrder2200ApplicationJSONItems withAttachments(String[] attachments) {
        this.attachments = attachments;
        return this;
    }
    
    /**
     * Availability
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availability")
    public String availability;
    public GetOrder2200ApplicationJSONItems withAvailability(String availability) {
        this.availability = availability;
        return this;
    }
    
    /**
     * Information on services sold along with the SKU. Example: a gift package.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bundleItems")
    public GetOrder2200ApplicationJSONItemsBundleItems[] bundleItems;
    public GetOrder2200ApplicationJSONItems withBundleItems(GetOrder2200ApplicationJSONItemsBundleItems[] bundleItems) {
        this.bundleItems = bundleItems;
        return this;
    }
    
    /**
     * Detail URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("detailUrl")
    public String detailUrl;
    public GetOrder2200ApplicationJSONItems withDetailUrl(String detailUrl) {
        this.detailUrl = detailUrl;
        return this;
    }
    
    /**
     * European Article Number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ean")
    public String ean;
    public GetOrder2200ApplicationJSONItems withEan(String ean) {
        this.ean = ean;
        return this;
    }
    
    /**
     * ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GetOrder2200ApplicationJSONItems withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Image URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageUrl")
    public String imageUrl;
    public GetOrder2200ApplicationJSONItems withImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
        return this;
    }
    
    /**
     * Indicates whether item is a gift.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isGift")
    public Boolean isGift;
    public GetOrder2200ApplicationJSONItems withIsGift(Boolean isGift) {
        this.isGift = isGift;
        return this;
    }
    
    /**
     * List price in cents.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listPrice")
    public Long listPrice;
    public GetOrder2200ApplicationJSONItems withListPrice(Long listPrice) {
        this.listPrice = listPrice;
        return this;
    }
    
    /**
     * Manual price in cents.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("manualPrice")
    public Long manualPrice;
    public GetOrder2200ApplicationJSONItems withManualPrice(Long manualPrice) {
        this.manualPrice = manualPrice;
        return this;
    }
    
    /**
     * User that applied the manual price, if that is the case.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("manualPriceAppliedBy")
    public String manualPriceAppliedBy;
    public GetOrder2200ApplicationJSONItems withManualPriceAppliedBy(String manualPriceAppliedBy) {
        this.manualPriceAppliedBy = manualPriceAppliedBy;
        return this;
    }
    
    /**
     * Manufacturer code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("manufacturerCode")
    public String manufacturerCode;
    public GetOrder2200ApplicationJSONItems withManufacturerCode(String manufacturerCode) {
        this.manufacturerCode = manufacturerCode;
        return this;
    }
    
    /**
     * Measurement unit
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("measurementUnit")
    public String measurementUnit;
    public GetOrder2200ApplicationJSONItems withMeasurementUnit(String measurementUnit) {
        this.measurementUnit = measurementUnit;
        return this;
    }
    
    /**
     * Modal type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modalType")
    public String modalType;
    public GetOrder2200ApplicationJSONItems withModalType(String modalType) {
        this.modalType = modalType;
        return this;
    }
    
    /**
     * Name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GetOrder2200ApplicationJSONItems withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Parent assembly binding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentAssemblyBinding")
    public String parentAssemblyBinding;
    public GetOrder2200ApplicationJSONItems withParentAssemblyBinding(String parentAssemblyBinding) {
        this.parentAssemblyBinding = parentAssemblyBinding;
        return this;
    }
    
    /**
     * Parent item index.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentItemIndex")
    public Long parentItemIndex;
    public GetOrder2200ApplicationJSONItems withParentItemIndex(Long parentItemIndex) {
        this.parentItemIndex = parentItemIndex;
        return this;
    }
    
    /**
     * Presale date.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preSaleDate")
    public String preSaleDate;
    public GetOrder2200ApplicationJSONItems withPreSaleDate(String preSaleDate) {
        this.preSaleDate = preSaleDate;
        return this;
    }
    
    /**
     * Price in cents.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("price")
    public Long price;
    public GetOrder2200ApplicationJSONItems withPrice(Long price) {
        this.price = price;
        return this;
    }
    
    /**
     * Price information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceDefinition")
    public GetOrder2200ApplicationJSONItemsPriceDefinition priceDefinition;
    public GetOrder2200ApplicationJSONItems withPriceDefinition(GetOrder2200ApplicationJSONItemsPriceDefinition priceDefinition) {
        this.priceDefinition = priceDefinition;
        return this;
    }
    
    /**
     * Array of price tags, each of which, modifies the price in some way, like discounts or rates that apply to the item in the context of the order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceTags")
    public GetOrder2200ApplicationJSONItemsPriceTags[] priceTags;
    public GetOrder2200ApplicationJSONItems withPriceTags(GetOrder2200ApplicationJSONItemsPriceTags[] priceTags) {
        this.priceTags = priceTags;
        return this;
    }
    
    /**
     * Price expiration date and time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceValidUntil")
    public String priceValidUntil;
    public GetOrder2200ApplicationJSONItems withPriceValidUntil(String priceValidUntil) {
        this.priceValidUntil = priceValidUntil;
        return this;
    }
    
    /**
     * Object, where each field is an ID from `productCategoryIds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productCategories")
    public GetOrder2200ApplicationJSONItemsProductCategories productCategories;
    public GetOrder2200ApplicationJSONItems withProductCategories(GetOrder2200ApplicationJSONItemsProductCategories productCategories) {
        this.productCategories = productCategories;
        return this;
    }
    
    /**
     * Product category IDs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productCategoryIds")
    public String productCategoryIds;
    public GetOrder2200ApplicationJSONItems withProductCategoryIds(String productCategoryIds) {
        this.productCategoryIds = productCategoryIds;
        return this;
    }
    
    /**
     * Product ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productId")
    public String productId;
    public GetOrder2200ApplicationJSONItems withProductId(String productId) {
        this.productId = productId;
        return this;
    }
    
    /**
     * Product Ref ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productRefId")
    public String productRefId;
    public GetOrder2200ApplicationJSONItems withProductRefId(String productRefId) {
        this.productRefId = productRefId;
        return this;
    }
    
    /**
     * Quantity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public Long quantity;
    public GetOrder2200ApplicationJSONItems withQuantity(Long quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * Ref ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refId")
    public String refId;
    public GetOrder2200ApplicationJSONItems withRefId(String refId) {
        this.refId = refId;
        return this;
    }
    
    /**
     * Reward value in cents.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rewardValue")
    public Long rewardValue;
    public GetOrder2200ApplicationJSONItems withRewardValue(Long rewardValue) {
        this.rewardValue = rewardValue;
        return this;
    }
    
    /**
     * Seller.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("seller")
    public String seller;
    public GetOrder2200ApplicationJSONItems withSeller(String seller) {
        this.seller = seller;
        return this;
    }
    
    /**
     * Sellers involved in the chain. The list should contain only one seller, unless it is a [Multilevel Omnichannel Inventory](https://help.vtex.com/pt/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sellerChain")
    public String[] sellerChain;
    public GetOrder2200ApplicationJSONItems withSellerChain(String[] sellerChain) {
        this.sellerChain = sellerChain;
        return this;
    }
    
    /**
     * Selling price in cents. Note that this field may be subject to rounding discrepancies. We recommend retrieving data from the `priceDefinition` data structure instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sellingPrice")
    public Long sellingPrice;
    public GetOrder2200ApplicationJSONItems withSellingPrice(Long sellingPrice) {
        this.sellingPrice = sellingPrice;
        return this;
    }
    
    /**
     * SKU name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skuName")
    public String skuName;
    public GetOrder2200ApplicationJSONItems withSkuName(String skuName) {
        this.skuName = skuName;
        return this;
    }
    
    /**
     * Tax value in cents.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax")
    public Long tax;
    public GetOrder2200ApplicationJSONItems withTax(Long tax) {
        this.tax = tax;
        return this;
    }
    
    /**
     * Order's item unique ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uniqueId")
    public String uniqueId;
    public GetOrder2200ApplicationJSONItems withUniqueId(String uniqueId) {
        this.uniqueId = uniqueId;
        return this;
    }
    
    /**
     * Unit multiplier
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitMultiplier")
    public Long unitMultiplier;
    public GetOrder2200ApplicationJSONItems withUnitMultiplier(Long unitMultiplier) {
        this.unitMultiplier = unitMultiplier;
        return this;
    }
    
}
