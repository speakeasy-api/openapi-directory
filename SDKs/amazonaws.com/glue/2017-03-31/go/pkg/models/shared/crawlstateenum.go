// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CrawlStateEnum string

const (
	CrawlStateEnumRunning    CrawlStateEnum = "RUNNING"
	CrawlStateEnumCancelling CrawlStateEnum = "CANCELLING"
	CrawlStateEnumCancelled  CrawlStateEnum = "CANCELLED"
	CrawlStateEnumSucceeded  CrawlStateEnum = "SUCCEEDED"
	CrawlStateEnumFailed     CrawlStateEnum = "FAILED"
	CrawlStateEnumError      CrawlStateEnum = "ERROR"
)

func (e *CrawlStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RUNNING":
		fallthrough
	case "CANCELLING":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		fallthrough
	case "ERROR":
		*e = CrawlStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CrawlStateEnum: %s", s)
	}
}
