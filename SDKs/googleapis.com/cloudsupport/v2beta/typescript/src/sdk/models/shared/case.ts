/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Actor, ActorInput } from "./actor";
import { CaseClassification } from "./caseclassification";
import { Expose, Type } from "class-transformer";

/**
 * The priority of this case. If this is set, do not set severity.
 */
export enum CasePriorityEnum {
  PriorityUnspecified = "PRIORITY_UNSPECIFIED",
  P0 = "P0",
  P1 = "P1",
  P2 = "P2",
  P3 = "P3",
  P4 = "P4",
}

/**
 * The severity of this case. Deprecated. Use priority instead.
 */
export enum CaseSeverityEnum {
  SeverityUnspecified = "SEVERITY_UNSPECIFIED",
  S0 = "S0",
  S1 = "S1",
  S2 = "S2",
  S3 = "S3",
  S4 = "S4",
}

/**
 * A support case.
 */
export class CaseInput extends SpeakeasyBase {
  /**
   * A classification object with a product type and value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "classification" })
  @Type(() => CaseClassification)
  classification?: CaseClassification;

  /**
   * An object containing information about the effective user and authenticated principal responsible for an action.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creator" })
  @Type(() => ActorInput)
  creator?: ActorInput;

  /**
   * A broad description of the issue.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The short summary of the issue reported in this case.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Whether the case is currently escalated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "escalated" })
  escalated?: boolean;

  /**
   * The language the user has requested to receive support in. This should be a BCP 47 language code (e.g., `"en"`, `"zh-CN"`, `"zh-TW"`, `"ja"`, `"ko"`). If no language or an unsupported language is specified, this field defaults to English (en). Language selection during case creation may affect your available support options. For a list of supported languages and their support working hours, see: https://cloud.google.com/support/docs/language-working-hours
   */
  @SpeakeasyMetadata()
  @Expose({ name: "languageCode" })
  languageCode?: string;

  /**
   * The resource name for the case.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The priority of this case. If this is set, do not set severity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priority" })
  priority?: CasePriorityEnum;

  /**
   * The severity of this case. Deprecated. Use priority instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "severity" })
  severity?: CaseSeverityEnum;

  /**
   * The email addresses to receive updates on this case.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriberEmailAddresses" })
  subscriberEmailAddresses?: string[];

  /**
   * Whether this case was created for internal API testing and should not be acted on by the support team.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "testCase" })
  testCase?: boolean;

  /**
   * The timezone of the user who created the support case. It should be in a format IANA recognizes: https://www.iana.org/time-zones. There is no additional validation done by the API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeZone" })
  timeZone?: string;
}

/**
 * Output only. The current status of the support case.
 */
export enum CaseStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  New = "NEW",
  InProgressGoogleSupport = "IN_PROGRESS_GOOGLE_SUPPORT",
  ActionRequired = "ACTION_REQUIRED",
  SolutionProvided = "SOLUTION_PROVIDED",
  Closed = "CLOSED",
}

/**
 * A support case.
 */
export class Case extends SpeakeasyBase {
  /**
   * A classification object with a product type and value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "classification" })
  @Type(() => CaseClassification)
  classification?: CaseClassification;

  /**
   * Output only. The time this case was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * An object containing information about the effective user and authenticated principal responsible for an action.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creator" })
  @Type(() => Actor)
  creator?: Actor;

  /**
   * A broad description of the issue.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The short summary of the issue reported in this case.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Whether the case is currently escalated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "escalated" })
  escalated?: boolean;

  /**
   * The language the user has requested to receive support in. This should be a BCP 47 language code (e.g., `"en"`, `"zh-CN"`, `"zh-TW"`, `"ja"`, `"ko"`). If no language or an unsupported language is specified, this field defaults to English (en). Language selection during case creation may affect your available support options. For a list of supported languages and their support working hours, see: https://cloud.google.com/support/docs/language-working-hours
   */
  @SpeakeasyMetadata()
  @Expose({ name: "languageCode" })
  languageCode?: string;

  /**
   * The resource name for the case.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The priority of this case. If this is set, do not set severity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priority" })
  priority?: CasePriorityEnum;

  /**
   * The severity of this case. Deprecated. Use priority instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "severity" })
  severity?: CaseSeverityEnum;

  /**
   * Output only. The current status of the support case.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: CaseStateEnum;

  /**
   * The email addresses to receive updates on this case.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriberEmailAddresses" })
  subscriberEmailAddresses?: string[];

  /**
   * Whether this case was created for internal API testing and should not be acted on by the support team.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "testCase" })
  testCase?: boolean;

  /**
   * The timezone of the user who created the support case. It should be in a format IANA recognizes: https://www.iana.org/time-zones. There is no additional validation done by the API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeZone" })
  timeZone?: string;

  /**
   * Output only. The time this case was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}
