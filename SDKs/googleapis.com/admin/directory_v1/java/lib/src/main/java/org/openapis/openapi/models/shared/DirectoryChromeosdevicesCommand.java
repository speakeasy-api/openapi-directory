/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DirectoryChromeosdevicesCommand - Information regarding a command that was issued to a device.
 */
public class DirectoryChromeosdevicesCommand {
    /**
     * The time at which the command will expire. If the device doesn't execute the command within this time the command will become expired.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commandExpireTime")
    public String commandExpireTime;
    public DirectoryChromeosdevicesCommand withCommandExpireTime(String commandExpireTime) {
        this.commandExpireTime = commandExpireTime;
        return this;
    }
    
    /**
     * Unique ID of a device command.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commandId")
    public String commandId;
    public DirectoryChromeosdevicesCommand withCommandId(String commandId) {
        this.commandId = commandId;
        return this;
    }
    
    /**
     * The result of executing a command.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commandResult")
    public DirectoryChromeosdevicesCommandResult commandResult;
    public DirectoryChromeosdevicesCommand withCommandResult(DirectoryChromeosdevicesCommandResult commandResult) {
        this.commandResult = commandResult;
        return this;
    }
    
    /**
     * The timestamp when the command was issued by the admin.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issueTime")
    public String issueTime;
    public DirectoryChromeosdevicesCommand withIssueTime(String issueTime) {
        this.issueTime = issueTime;
        return this;
    }
    
    /**
     * The payload that the command specified, if any.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payload")
    public String payload;
    public DirectoryChromeosdevicesCommand withPayload(String payload) {
        this.payload = payload;
        return this;
    }
    
    /**
     * Indicates the command state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public DirectoryChromeosdevicesCommandStateEnum state;
    public DirectoryChromeosdevicesCommand withState(DirectoryChromeosdevicesCommandStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * The type of the command.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public DirectoryChromeosdevicesCommandTypeEnum type;
    public DirectoryChromeosdevicesCommand withType(DirectoryChromeosdevicesCommandTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
