"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import trainresponse as shared_trainresponse
from ..shared import v2visiontrainparams as shared_v2visiontrainparams
from typing import Optional


@dataclasses.dataclass
class Retrain1Security:
    
    bearer_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class Retrain1RequestBody:
    
    algorithm: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'algorithm' }})
    r"""Specifies the algorithm used to train the dataset. Optional. Use this parameter only when training a dataset with a type of image-detection. Valid values are object-detection-v1 and retail-execution."""  
    epochs: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'epochs' }})
    r"""Number of training iterations for the neural network. Optional."""  
    learning_rate: Optional[float] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'learningRate' }})
    r"""Specifies how much the gradient affects the optimization of the model at each time step. Optional."""  
    model_id: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'modelId' }})
    r"""ID of the model to be updated from the training."""  
    train_params: Optional[shared_v2visiontrainparams.V2VisionTrainParams] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'trainParams', 'json': True }})
    r"""JSON that contains parameters that specify how the model is created"""  
    

@dataclasses.dataclass
class Retrain1Response:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    train_response: Optional[shared_trainresponse.TrainResponse] = dataclasses.field(default=None)
    r"""Training Status"""  
    