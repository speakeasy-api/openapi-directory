"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CheckErrorResponseStatusEnum(str, Enum):
    r"""Code | Text | Description
    -- | -- | --
    0 | Success | The request was successfully accepted by Vonage.
    1 | Throttled | You are trying to send more than the maximum of 30 requests per second.
    2 | Your request is incomplete and missing the mandatory parameter `$parameter` | The stated parameter is missing.
    3 | Invalid value for parameter `$parameter` | Invalid value for parameter. If you see Facility not allowed in the error text, check that you are using the correct Base URL in your request.
    4 | Invalid credentials were provided | The supplied API key or secret in the request is either invalid or disabled.
    5 | Internal Error | An error occurred processing this request in the Cloud Communications Platform.
    6 | The Vonage platform was unable to process this message for the following reason: `$reason` | The request could not be routed.
    16 | The code inserted does not match the expected value |
    17 | The wrong code was provided too many times | You can run Verify check on a specific `request_id` up to three times unless a new verification code is generated. If you check a request more than three times, it is set to FAILED and you cannot check it again.
    """
    ZERO = '0'
    ONE = '1'
    TWO = '2'
    THREE = '3'
    FOUR = '4'
    FIVE = '5'
    SIX = '6'
    SIXTEEN = '16'
    SEVENTEEN = '17'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CheckErrorResponse:
    r"""Error"""
    
    error_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error_text'), 'exclude': lambda f: f is None }})
    r"""If the `status` is non-zero, this explains the error encountered."""  
    request_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('request_id'), 'exclude': lambda f: f is None }})
    r"""The `request_id` that you received in the response to the Verify request and used in the Verify check request."""  
    status: Optional[CheckErrorResponseStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Code | Text | Description
    -- | -- | --
    0 | Success | The request was successfully accepted by Vonage.
    1 | Throttled | You are trying to send more than the maximum of 30 requests per second.
    2 | Your request is incomplete and missing the mandatory parameter `$parameter` | The stated parameter is missing.
    3 | Invalid value for parameter `$parameter` | Invalid value for parameter. If you see Facility not allowed in the error text, check that you are using the correct Base URL in your request.
    4 | Invalid credentials were provided | The supplied API key or secret in the request is either invalid or disabled.
    5 | Internal Error | An error occurred processing this request in the Cloud Communications Platform.
    6 | The Vonage platform was unable to process this message for the following reason: `$reason` | The request could not be routed.
    16 | The code inserted does not match the expected value |
    17 | The wrong code was provided too many times | You can run Verify check on a specific `request_id` up to three times unless a new verification code is generated. If you check a request more than three times, it is set to FAILED and you cannot check it again.
    """  
    