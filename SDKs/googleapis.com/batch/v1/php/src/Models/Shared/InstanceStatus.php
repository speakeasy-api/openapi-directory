<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InstanceStatus - VM instance status.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InstanceStatus
{
    /**
     * A new persistent disk or a local ssd. A VM can only have one local SSD setting but multiple local SSD partitions. See https://cloud.google.com/compute/docs/disks#pdspecs and https://cloud.google.com/compute/docs/disks#localssds.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Disk $bootDisk
     */
	#[\JMS\Serializer\Annotation\SerializedName('bootDisk')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Disk')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Disk $bootDisk = null;
    
    /**
     * The Compute Engine machine type.
     * 
     * @var ?string $machineType
     */
	#[\JMS\Serializer\Annotation\SerializedName('machineType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $machineType = null;
    
    /**
     * The VM instance provisioning model.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InstanceStatusProvisioningModelEnum $provisioningModel
     */
	#[\JMS\Serializer\Annotation\SerializedName('provisioningModel')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InstanceStatusProvisioningModelEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InstanceStatusProvisioningModelEnum $provisioningModel = null;
    
    /**
     * The max number of tasks can be assigned to this instance type.
     * 
     * @var ?string $taskPack
     */
	#[\JMS\Serializer\Annotation\SerializedName('taskPack')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $taskPack = null;
    
	public function __construct()
	{
		$this->bootDisk = null;
		$this->machineType = null;
		$this->provisioningModel = null;
		$this->taskPack = null;
	}
}
