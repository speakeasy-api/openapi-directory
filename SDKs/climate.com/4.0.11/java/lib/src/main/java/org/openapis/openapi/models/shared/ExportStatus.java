/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ExportStatus - OK
 */
public class ExportStatus {
    /**
     * Base64 encoded MD5 hash of the export's contents.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("checksum")
    public String checksum;

    public ExportStatus withChecksum(String checksum) {
        this.checksum = checksum;
        return this;
    }
    
    /**
     * Message indicating reason for validation failure.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public String error;

    public ExportStatus withError(String error) {
        this.error = error;
        return this;
    }
    
    /**
     * Size of the export's contents in bytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Long size;

    public ExportStatus withSize(Long size) {
        this.size = size;
        return this;
    }
    
    /**
     * Current status of the export request:
     *   * `PROCESSING` - Export request has been received by Climate and is being processed.
     *   * `INVALID` - Export request has failed validity check.
     *   * `EXPIRED` - Export contents have expired, and are no longer available for retrieval.
     *   * `COMPLETED` - The export request has been successfully processed, and its contents are available for retrieval.
     *   * `NO_DATA` - The export request completed successfully but generated no data.
     * 
     */
    @JsonProperty("status")
    public ExportStatusStatusEnum status;

    public ExportStatus withStatus(ExportStatusStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Token which may be used when executing an identical export in
     * the future, but which only wants export data which was not
     * previously exported.
     * Assume a given field export request matches 12 fields today. And
     * tomorrow it matches 15 fields. By passing the xNextToken in the
     * definition section of tomorrow's field export request, only the
     * 3 additional fields would be exported. Note, all other parameters
     * passed in the definition section must be identical to the original
     * request.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("xNextToken")
    public String xNextToken;

    public ExportStatus withXNextToken(String xNextToken) {
        this.xNextToken = xNextToken;
        return this;
    }
    
    public ExportStatus(@JsonProperty("status") ExportStatusStatusEnum status) {
        this.status = status;
  }
}
