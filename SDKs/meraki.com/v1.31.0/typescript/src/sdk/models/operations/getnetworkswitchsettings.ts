/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetNetworkSwitchSettingsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

/**
 * Per switch exception (combined, redundant, useNetworkSetting)
 */
export enum GetNetworkSwitchSettings200ApplicationJSONPowerExceptionsPowerTypeEnum {
  Combined = "combined",
  Redundant = "redundant",
  UseNetworkSetting = "useNetworkSetting",
}

export class GetNetworkSwitchSettings200ApplicationJSONPowerExceptions extends SpeakeasyBase {
  /**
   * Per switch exception (combined, redundant, useNetworkSetting)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "powerType" })
  powerType?: GetNetworkSwitchSettings200ApplicationJSONPowerExceptionsPowerTypeEnum;

  /**
   * Serial number of the switch
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serial" })
  serial?: string;
}

/**
 * Successful operation
 */
export class GetNetworkSwitchSettings200ApplicationJSON extends SpeakeasyBase {
  /**
   * Exceptions on a per switch basis to "useCombinedPower"
   */
  @SpeakeasyMetadata({
    elemType: GetNetworkSwitchSettings200ApplicationJSONPowerExceptions,
  })
  @Expose({ name: "powerExceptions" })
  @Type(() => GetNetworkSwitchSettings200ApplicationJSONPowerExceptions)
  powerExceptions?: GetNetworkSwitchSettings200ApplicationJSONPowerExceptions[];

  /**
   * The use Combined Power as the default behavior of secondary power supplies on supported devices.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "useCombinedPower" })
  useCombinedPower?: boolean;

  /**
   * Management VLAN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vlan" })
  vlan?: number;
}

export class GetNetworkSwitchSettingsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  getNetworkSwitchSettings200ApplicationJSONObject?: GetNetworkSwitchSettings200ApplicationJSON;
}
