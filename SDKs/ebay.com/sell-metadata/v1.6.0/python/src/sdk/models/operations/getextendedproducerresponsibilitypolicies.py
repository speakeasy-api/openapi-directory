"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import extendedproducerresponsibilitypolicyresponse as shared_extendedproducerresponsibilitypolicyresponse
from typing import Optional


@dataclasses.dataclass
class GetExtendedProducerResponsibilityPoliciesSecurity:
    
    api_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetExtendedProducerResponsibilityPoliciesRequest:
    
    marketplace_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'marketplace_id', 'style': 'simple', 'explode': False }})
    r"""A path parameter that specifies the eBay marketplace for which policy information shall be retrieved.<br /><br /><span class=\\"tablenote\\"><span style=\\"color:#478415\\"><strong>Tip:</strong></span> See <a href=\\"/api-docs/static/rest-request-components.html#marketpl\\" target=\\"_blank\\">Request components</a> for a list of valid eBay marketplace IDs.</span>"""  
    filter: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter', 'style': 'form', 'explode': True }})
    r"""A query parameter that can be used to limit the response by returning policy information for only the selected sections of the category tree. Supply <b>categoryId</b> values for the sections of the tree that should be returned.<br /><br />When a <b>categoryId</b> value is specified, the returned category tree includes the policies for that parent node, as well as the policies for any child nodes below that parent node.<br /><br />Pass in the <b>categoryId</b> values using a URL-encoded, pipe-separated ('|') list. For example:<br /><br /><code>filter=categoryIds%3A%7B100%7C101%7C102%7D</code><br /><br /><b>Maximum:</b> 50"""  
    

@dataclasses.dataclass
class GetExtendedProducerResponsibilityPoliciesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    extended_producer_responsibility_policy_response: Optional[shared_extendedproducerresponsibilitypolicyresponse.ExtendedProducerResponsibilityPolicyResponse] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    