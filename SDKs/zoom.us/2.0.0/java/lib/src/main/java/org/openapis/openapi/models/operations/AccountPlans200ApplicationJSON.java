/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AccountPlans200ApplicationJSON - **HTTP Status Code:**`200`&lt;br&gt;
 * Account's plans returned.
 * 
 */
public class AccountPlans200ApplicationJSON {
    /**
     * Additional audio conferencing &lt;a href="https://marketplace.zoom.us/docs/api-reference/other-references/plans#audio-conferencing-plans"&gt;plan type.&lt;/a&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plan_audio")
    public AccountPlans200ApplicationJSONPlanAudio planAudio;
    public AccountPlans200ApplicationJSON withPlanAudio(AccountPlans200ApplicationJSONPlanAudio planAudio) {
        this.planAudio = planAudio;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plan_base")
    public AccountPlans200ApplicationJSONPlanBase planBase;
    public AccountPlans200ApplicationJSON withPlanBase(AccountPlans200ApplicationJSONPlanBase planBase) {
        this.planBase = planBase;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plan_large_meeting")
    public AccountPlans200ApplicationJSONPlanLargeMeeting[] planLargeMeeting;
    public AccountPlans200ApplicationJSON withPlanLargeMeeting(AccountPlans200ApplicationJSONPlanLargeMeeting[] planLargeMeeting) {
        this.planLargeMeeting = planLargeMeeting;
        return this;
    }
    
    /**
     * Phone Plan Object
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plan_phone")
    public AccountPlans200ApplicationJSONPhonePlan planPhone;
    public AccountPlans200ApplicationJSON withPlanPhone(AccountPlans200ApplicationJSONPhonePlan planPhone) {
        this.planPhone = planPhone;
        return this;
    }
    
    /**
     * Additional Cloud Recording plan.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plan_recording")
    public String planRecording;
    public AccountPlans200ApplicationJSON withPlanRecording(String planRecording) {
        this.planRecording = planRecording;
        return this;
    }
    
    /**
     * Next invoice date of Additional Cloud Recording plan.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plan_recording_next_invoice_date")
    public String planRecordingNextInvoiceDate;
    public AccountPlans200ApplicationJSON withPlanRecordingNextInvoiceDate(String planRecordingNextInvoiceDate) {
        this.planRecordingNextInvoiceDate = planRecordingNextInvoiceDate;
        return this;
    }
    
    /**
     * Plan start date of Additional Cloud Recording plan.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plan_recording_service_effective_date")
    public String planRecordingServiceEffectiveDate;
    public AccountPlans200ApplicationJSON withPlanRecordingServiceEffectiveDate(String planRecordingServiceEffectiveDate) {
        this.planRecordingServiceEffectiveDate = planRecordingServiceEffectiveDate;
        return this;
    }
    
    /**
     * Status of additional Cloud Recording plan.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plan_recording_status")
    public AccountPlans200ApplicationJSONPlanRecordingStatusEnum planRecordingStatus;
    public AccountPlans200ApplicationJSON withPlanRecordingStatus(AccountPlans200ApplicationJSONPlanRecordingStatusEnum planRecordingStatus) {
        this.planRecordingStatus = planRecordingStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plan_room_connector")
    public AccountPlans200ApplicationJSONPlanRoomConnector planRoomConnector;
    public AccountPlans200ApplicationJSON withPlanRoomConnector(AccountPlans200ApplicationJSONPlanRoomConnector planRoomConnector) {
        this.planRoomConnector = planRoomConnector;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plan_webinar")
    public AccountPlans200ApplicationJSONPlanWebinar[] planWebinar;
    public AccountPlans200ApplicationJSON withPlanWebinar(AccountPlans200ApplicationJSONPlanWebinar[] planWebinar) {
        this.planWebinar = planWebinar;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plan_zoom_rooms")
    public AccountPlans200ApplicationJSONPlanZoomRooms planZoomRooms;
    public AccountPlans200ApplicationJSON withPlanZoomRooms(AccountPlans200ApplicationJSONPlanZoomRooms planZoomRooms) {
        this.planZoomRooms = planZoomRooms;
        return this;
    }
    
}
