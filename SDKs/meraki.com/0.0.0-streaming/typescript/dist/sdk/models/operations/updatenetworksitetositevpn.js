"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateNetworkSiteToSiteVpnResponse = exports.UpdateNetworkSiteToSiteVpnRequest = exports.UpdateNetworkSiteToSiteVpnRequestBody = exports.UpdateNetworkSiteToSiteVpnRequestBodySubnets = exports.UpdateNetworkSiteToSiteVpnRequestBodyModeEnum = exports.UpdateNetworkSiteToSiteVpnRequestBodyHubs = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var UpdateNetworkSiteToSiteVpnRequestBodyHubs = /** @class */ (function (_super) {
    __extends(UpdateNetworkSiteToSiteVpnRequestBodyHubs, _super);
    function UpdateNetworkSiteToSiteVpnRequestBodyHubs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hubId" }),
        __metadata("design:type", String)
    ], UpdateNetworkSiteToSiteVpnRequestBodyHubs.prototype, "hubId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "useDefaultRoute" }),
        __metadata("design:type", Boolean)
    ], UpdateNetworkSiteToSiteVpnRequestBodyHubs.prototype, "useDefaultRoute", void 0);
    return UpdateNetworkSiteToSiteVpnRequestBodyHubs;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkSiteToSiteVpnRequestBodyHubs = UpdateNetworkSiteToSiteVpnRequestBodyHubs;
/**
 * The site-to-site VPN mode. Can be one of 'none', 'spoke' or 'hub'
 */
var UpdateNetworkSiteToSiteVpnRequestBodyModeEnum;
(function (UpdateNetworkSiteToSiteVpnRequestBodyModeEnum) {
    UpdateNetworkSiteToSiteVpnRequestBodyModeEnum["Hub"] = "hub";
    UpdateNetworkSiteToSiteVpnRequestBodyModeEnum["None"] = "none";
    UpdateNetworkSiteToSiteVpnRequestBodyModeEnum["Spoke"] = "spoke";
})(UpdateNetworkSiteToSiteVpnRequestBodyModeEnum = exports.UpdateNetworkSiteToSiteVpnRequestBodyModeEnum || (exports.UpdateNetworkSiteToSiteVpnRequestBodyModeEnum = {}));
var UpdateNetworkSiteToSiteVpnRequestBodySubnets = /** @class */ (function (_super) {
    __extends(UpdateNetworkSiteToSiteVpnRequestBodySubnets, _super);
    function UpdateNetworkSiteToSiteVpnRequestBodySubnets() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "localSubnet" }),
        __metadata("design:type", String)
    ], UpdateNetworkSiteToSiteVpnRequestBodySubnets.prototype, "localSubnet", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "useVpn" }),
        __metadata("design:type", Boolean)
    ], UpdateNetworkSiteToSiteVpnRequestBodySubnets.prototype, "useVpn", void 0);
    return UpdateNetworkSiteToSiteVpnRequestBodySubnets;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkSiteToSiteVpnRequestBodySubnets = UpdateNetworkSiteToSiteVpnRequestBodySubnets;
var UpdateNetworkSiteToSiteVpnRequestBody = /** @class */ (function (_super) {
    __extends(UpdateNetworkSiteToSiteVpnRequestBody, _super);
    function UpdateNetworkSiteToSiteVpnRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: UpdateNetworkSiteToSiteVpnRequestBodyHubs }),
        (0, class_transformer_1.Expose)({ name: "hubs" }),
        (0, class_transformer_1.Type)(function () { return UpdateNetworkSiteToSiteVpnRequestBodyHubs; }),
        __metadata("design:type", Array)
    ], UpdateNetworkSiteToSiteVpnRequestBody.prototype, "hubs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mode" }),
        __metadata("design:type", String)
    ], UpdateNetworkSiteToSiteVpnRequestBody.prototype, "mode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: UpdateNetworkSiteToSiteVpnRequestBodySubnets }),
        (0, class_transformer_1.Expose)({ name: "subnets" }),
        (0, class_transformer_1.Type)(function () { return UpdateNetworkSiteToSiteVpnRequestBodySubnets; }),
        __metadata("design:type", Array)
    ], UpdateNetworkSiteToSiteVpnRequestBody.prototype, "subnets", void 0);
    return UpdateNetworkSiteToSiteVpnRequestBody;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkSiteToSiteVpnRequestBody = UpdateNetworkSiteToSiteVpnRequestBody;
var UpdateNetworkSiteToSiteVpnRequest = /** @class */ (function (_super) {
    __extends(UpdateNetworkSiteToSiteVpnRequest, _super);
    function UpdateNetworkSiteToSiteVpnRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", UpdateNetworkSiteToSiteVpnRequestBody)
    ], UpdateNetworkSiteToSiteVpnRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=networkId",
        }),
        __metadata("design:type", String)
    ], UpdateNetworkSiteToSiteVpnRequest.prototype, "networkId", void 0);
    return UpdateNetworkSiteToSiteVpnRequest;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkSiteToSiteVpnRequest = UpdateNetworkSiteToSiteVpnRequest;
var UpdateNetworkSiteToSiteVpnResponse = /** @class */ (function (_super) {
    __extends(UpdateNetworkSiteToSiteVpnResponse, _super);
    function UpdateNetworkSiteToSiteVpnResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], UpdateNetworkSiteToSiteVpnResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], UpdateNetworkSiteToSiteVpnResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateNetworkSiteToSiteVpnResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateNetworkSiteToSiteVpnResponse.prototype, "updateNetworkSiteToSiteVpn200ApplicationJSONObject", void 0);
    return UpdateNetworkSiteToSiteVpnResponse;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkSiteToSiteVpnResponse = UpdateNetworkSiteToSiteVpnResponse;
