// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ClassificationAttributesTypeEnum - The type of classification. The type of retrievable classifications depends on the privileges
// of the credential being used.
type ClassificationAttributesTypeEnum string

const (
	ClassificationAttributesTypeEnumAlternateFeedType ClassificationAttributesTypeEnum = "AlternateFeedType"
	ClassificationAttributesTypeEnumGenre             ClassificationAttributesTypeEnum = "Genre"
	ClassificationAttributesTypeEnumIndustry          ClassificationAttributesTypeEnum = "Industry"
	ClassificationAttributesTypeEnumLanguage          ClassificationAttributesTypeEnum = "Language"
	ClassificationAttributesTypeEnumMediaRating       ClassificationAttributesTypeEnum = "MediaRating"
)

func (e ClassificationAttributesTypeEnum) ToPointer() *ClassificationAttributesTypeEnum {
	return &e
}

func (e *ClassificationAttributesTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AlternateFeedType":
		fallthrough
	case "Genre":
		fallthrough
	case "Industry":
		fallthrough
	case "Language":
		fallthrough
	case "MediaRating":
		*e = ClassificationAttributesTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ClassificationAttributesTypeEnum: %v", v)
	}
}

type ClassificationAttributes struct {
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Human readable representation of the classification
	DisplayName *string `json:"display_name,omitempty"`
	// An object with more detailed information about the classification.
	// The possible members are different per type of classification.
	//
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// This will be replaced by the relationship `parent` in a future update.<br/>
	// For hierarchical classifications, this is the ID of the parent classification
	//
	ParentID *string `json:"parent_id,omitempty"`
	// For hierarchical classifications this is the list of IDs reflecting the hierarchy starting
	// with the root level node.
	//
	TreePath []string `json:"tree_path,omitempty"`
	// The type of classification. The type of retrievable classifications depends on the privileges
	// of the credential being used.
	//
	Type      *ClassificationAttributesTypeEnum `json:"type,omitempty"`
	UpdatedAt *time.Time                        `json:"updated_at,omitempty"`
	// The value the classification represents. The meaning of this attribute depends on the type of classification.
	//
	Value *string `json:"value,omitempty"`
	// For hierarchical classifications this is a concatenated string of all the classification
	// values from the root to this classification using a `: ` as separator.
	//
	ValuePath *string `json:"value_path,omitempty"`
}

// Classification - A classification, in general, is something that can describe other resources, such as countries, genres or
// languages. How they're described (included or excluded, and whether they're the primary classification
// of this type) is handled using other resources. Different functions of ART19 rely on classifications differently,
// and could have an effect only on directory information, or may have an effect on ad decisioning.
type Classification struct {
	Attributes *ClassificationAttributes `json:"attributes,omitempty"`
	ID         *string                   `json:"id,omitempty"`
	// The type of resource. This is always `classifications`
	Type *string `json:"type,omitempty"`
}
