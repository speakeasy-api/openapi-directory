"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import deductionline as shared_deductionline
from ..shared import earningsline as shared_earningsline
from ..shared import leaveaccrualline as shared_leaveaccrualline
from ..shared import leaveearningsline as shared_leaveearningsline
from ..shared import reimbursementline as shared_reimbursementline
from ..shared import superannuationline as shared_superannuationline
from ..shared import taxline as shared_taxline
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Payslip:
    
    deduction_lines: Optional[list[shared_deductionline.DeductionLine]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeductionLines'), 'exclude': lambda f: f is None }})  
    deductions: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Deductions'), 'exclude': lambda f: f is None }})
    r"""The Deductions for the Payslip"""  
    earnings_lines: Optional[list[shared_earningsline.EarningsLine]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EarningsLines'), 'exclude': lambda f: f is None }})  
    employee_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmployeeID'), 'exclude': lambda f: f is None }})
    r"""The Xero identifier for an employee"""  
    first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FirstName'), 'exclude': lambda f: f is None }})
    r"""First name of employee"""  
    last_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastName'), 'exclude': lambda f: f is None }})
    r"""Last name of employee"""  
    leave_accrual_lines: Optional[list[shared_leaveaccrualline.LeaveAccrualLine]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LeaveAccrualLines'), 'exclude': lambda f: f is None }})  
    leave_earnings_lines: Optional[list[shared_leaveearningsline.LeaveEarningsLine]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LeaveEarningsLines'), 'exclude': lambda f: f is None }})  
    net_pay: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NetPay'), 'exclude': lambda f: f is None }})
    r"""The NetPay for the Payslip"""  
    payslip_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PayslipID'), 'exclude': lambda f: f is None }})
    r"""Xero identifier for the payslip"""  
    reimbursement_lines: Optional[list[shared_reimbursementline.ReimbursementLine]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ReimbursementLines'), 'exclude': lambda f: f is None }})  
    reimbursements: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Reimbursements'), 'exclude': lambda f: f is None }})
    r"""The Reimbursements for the Payslip"""  
    super: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Super'), 'exclude': lambda f: f is None }})
    r"""The Super for the Payslip"""  
    superannuation_lines: Optional[list[shared_superannuationline.SuperannuationLine]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SuperannuationLines'), 'exclude': lambda f: f is None }})  
    tax: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tax'), 'exclude': lambda f: f is None }})
    r"""The Tax for the Payslip"""  
    tax_lines: Optional[list[shared_taxline.TaxLine]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TaxLines'), 'exclude': lambda f: f is None }})  
    timesheet_earnings_lines: Optional[list[shared_earningsline.EarningsLine]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TimesheetEarningsLines'), 'exclude': lambda f: f is None }})  
    updated_date_utc: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpdatedDateUTC'), 'exclude': lambda f: f is None }})
    r"""Last modified timestamp"""  
    wages: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Wages'), 'exclude': lambda f: f is None }})
    r"""The Wages for the Payslip"""  
    