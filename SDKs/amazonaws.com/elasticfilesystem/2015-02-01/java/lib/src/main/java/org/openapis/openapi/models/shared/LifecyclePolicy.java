/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LifecyclePolicy - &lt;p&gt;Describes a policy used by EFS lifecycle management and EFS Intelligent-Tiering that specifies when to transition files into and out of the file system's Infrequent Access (IA) storage class. For more information, see &lt;a href="https://docs.aws.amazon.com/efs/latest/ug/lifecycle-management-efs.html"&gt;EFS Intelligent\u2010Tiering and EFS Lifecycle Management&lt;/a&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;When using the &lt;code&gt;put-lifecycle-configuration&lt;/code&gt; CLI command or the &lt;code&gt;PutLifecycleConfiguration&lt;/code&gt; API action, Amazon EFS requires that each &lt;code&gt;LifecyclePolicy&lt;/code&gt; object have only a single transition. This means that in a request body, &lt;code&gt;LifecyclePolicies&lt;/code&gt; must be structured as an array of &lt;code&gt;LifecyclePolicy&lt;/code&gt; objects, one object for each transition, &lt;code&gt;TransitionToIA&lt;/code&gt;, &lt;code&gt;TransitionToPrimaryStorageClass&lt;/code&gt;. For more information, see the request examples in &lt;a&gt;PutLifecycleConfiguration&lt;/a&gt;.&lt;/p&gt; &lt;/note&gt;
 */
public class LifecyclePolicy {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TransitionToIA")
    public TransitionToIARulesEnum transitionToIA;

    public LifecyclePolicy withTransitionToIA(TransitionToIARulesEnum transitionToIA) {
        this.transitionToIA = transitionToIA;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TransitionToPrimaryStorageClass")
    public TransitionToPrimaryStorageClassRulesEnum transitionToPrimaryStorageClass;

    public LifecyclePolicy withTransitionToPrimaryStorageClass(TransitionToPrimaryStorageClassRulesEnum transitionToPrimaryStorageClass) {
        this.transitionToPrimaryStorageClass = transitionToPrimaryStorageClass;
        return this;
    }
    
    public LifecyclePolicy(){}
}
