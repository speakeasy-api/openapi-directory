// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum - Optional. The type of annotation to be performed on this data. You must specify this field if you are using this InputConfig in an EvaluationJob.
type GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum string

const (
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnumAnnotationTypeUnspecified          GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum = "ANNOTATION_TYPE_UNSPECIFIED"
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnumImageClassificationAnnotation      GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum = "IMAGE_CLASSIFICATION_ANNOTATION"
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnumImageBoundingBoxAnnotation         GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum = "IMAGE_BOUNDING_BOX_ANNOTATION"
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnumImageOrientedBoundingBoxAnnotation GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum = "IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION"
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnumImageBoundingPolyAnnotation        GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum = "IMAGE_BOUNDING_POLY_ANNOTATION"
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnumImagePolylineAnnotation            GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum = "IMAGE_POLYLINE_ANNOTATION"
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnumImageSegmentationAnnotation        GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum = "IMAGE_SEGMENTATION_ANNOTATION"
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnumVideoShotsClassificationAnnotation GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum = "VIDEO_SHOTS_CLASSIFICATION_ANNOTATION"
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnumVideoObjectTrackingAnnotation      GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum = "VIDEO_OBJECT_TRACKING_ANNOTATION"
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnumVideoObjectDetectionAnnotation     GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum = "VIDEO_OBJECT_DETECTION_ANNOTATION"
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnumVideoEventAnnotation               GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum = "VIDEO_EVENT_ANNOTATION"
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnumTextClassificationAnnotation       GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum = "TEXT_CLASSIFICATION_ANNOTATION"
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnumTextEntityExtractionAnnotation     GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum = "TEXT_ENTITY_EXTRACTION_ANNOTATION"
	GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnumGeneralClassificationAnnotation    GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum = "GENERAL_CLASSIFICATION_ANNOTATION"
)

func (e *GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ANNOTATION_TYPE_UNSPECIFIED":
		fallthrough
	case "IMAGE_CLASSIFICATION_ANNOTATION":
		fallthrough
	case "IMAGE_BOUNDING_BOX_ANNOTATION":
		fallthrough
	case "IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION":
		fallthrough
	case "IMAGE_BOUNDING_POLY_ANNOTATION":
		fallthrough
	case "IMAGE_POLYLINE_ANNOTATION":
		fallthrough
	case "IMAGE_SEGMENTATION_ANNOTATION":
		fallthrough
	case "VIDEO_SHOTS_CLASSIFICATION_ANNOTATION":
		fallthrough
	case "VIDEO_OBJECT_TRACKING_ANNOTATION":
		fallthrough
	case "VIDEO_OBJECT_DETECTION_ANNOTATION":
		fallthrough
	case "VIDEO_EVENT_ANNOTATION":
		fallthrough
	case "TEXT_CLASSIFICATION_ANNOTATION":
		fallthrough
	case "TEXT_ENTITY_EXTRACTION_ANNOTATION":
		fallthrough
	case "GENERAL_CLASSIFICATION_ANNOTATION":
		*e = GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum: %s", s)
	}
}

// GoogleCloudDatalabelingV1beta1InputConfigDataTypeEnum - Required. Data type must be specifed when user tries to import data.
type GoogleCloudDatalabelingV1beta1InputConfigDataTypeEnum string

const (
	GoogleCloudDatalabelingV1beta1InputConfigDataTypeEnumDataTypeUnspecified GoogleCloudDatalabelingV1beta1InputConfigDataTypeEnum = "DATA_TYPE_UNSPECIFIED"
	GoogleCloudDatalabelingV1beta1InputConfigDataTypeEnumImage               GoogleCloudDatalabelingV1beta1InputConfigDataTypeEnum = "IMAGE"
	GoogleCloudDatalabelingV1beta1InputConfigDataTypeEnumVideo               GoogleCloudDatalabelingV1beta1InputConfigDataTypeEnum = "VIDEO"
	GoogleCloudDatalabelingV1beta1InputConfigDataTypeEnumText                GoogleCloudDatalabelingV1beta1InputConfigDataTypeEnum = "TEXT"
	GoogleCloudDatalabelingV1beta1InputConfigDataTypeEnumGeneralData         GoogleCloudDatalabelingV1beta1InputConfigDataTypeEnum = "GENERAL_DATA"
)

func (e *GoogleCloudDatalabelingV1beta1InputConfigDataTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DATA_TYPE_UNSPECIFIED":
		fallthrough
	case "IMAGE":
		fallthrough
	case "VIDEO":
		fallthrough
	case "TEXT":
		fallthrough
	case "GENERAL_DATA":
		*e = GoogleCloudDatalabelingV1beta1InputConfigDataTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDatalabelingV1beta1InputConfigDataTypeEnum: %s", s)
	}
}

// GoogleCloudDatalabelingV1beta1InputConfig - The configuration of input data, including data type, location, etc.
type GoogleCloudDatalabelingV1beta1InputConfig struct {
	// Optional. The type of annotation to be performed on this data. You must specify this field if you are using this InputConfig in an EvaluationJob.
	AnnotationType *GoogleCloudDatalabelingV1beta1InputConfigAnnotationTypeEnum `json:"annotationType,omitempty"`
	// The BigQuery location for input data. If used in an EvaluationJob, this is where the service saves the prediction input and output sampled from the model version.
	BigquerySource *GoogleCloudDatalabelingV1beta1BigQuerySource `json:"bigquerySource,omitempty"`
	// Metadata for classification annotations.
	ClassificationMetadata *GoogleCloudDatalabelingV1beta1ClassificationMetadata `json:"classificationMetadata,omitempty"`
	// Required. Data type must be specifed when user tries to import data.
	DataType *GoogleCloudDatalabelingV1beta1InputConfigDataTypeEnum `json:"dataType,omitempty"`
	// Source of the Cloud Storage file to be imported.
	GcsSource *GoogleCloudDatalabelingV1beta1GcsSource `json:"gcsSource,omitempty"`
	// Metadata for the text.
	TextMetadata *GoogleCloudDatalabelingV1beta1TextMetadata `json:"textMetadata,omitempty"`
}
