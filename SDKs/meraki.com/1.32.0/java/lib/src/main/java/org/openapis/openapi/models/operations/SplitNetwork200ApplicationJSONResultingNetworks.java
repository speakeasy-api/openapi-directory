/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class SplitNetwork200ApplicationJSONResultingNetworks {
    /**
     * Enrollment string for the network
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enrollmentString")
    public String enrollmentString;

    public SplitNetwork200ApplicationJSONResultingNetworks withEnrollmentString(String enrollmentString) {
        this.enrollmentString = enrollmentString;
        return this;
    }
    
    /**
     * Network ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public SplitNetwork200ApplicationJSONResultingNetworks withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * If the network is bound to a config template
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isBoundToConfigTemplate")
    public Boolean isBoundToConfigTemplate;

    public SplitNetwork200ApplicationJSONResultingNetworks withIsBoundToConfigTemplate(Boolean isBoundToConfigTemplate) {
        this.isBoundToConfigTemplate = isBoundToConfigTemplate;
        return this;
    }
    
    /**
     * Network name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public SplitNetwork200ApplicationJSONResultingNetworks withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Notes for the network
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;

    public SplitNetwork200ApplicationJSONResultingNetworks withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * Organization ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organizationId")
    public String organizationId;

    public SplitNetwork200ApplicationJSONResultingNetworks withOrganizationId(String organizationId) {
        this.organizationId = organizationId;
        return this;
    }
    
    /**
     * List of the product types that the network supports
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productTypes")
    public String[] productTypes;

    public SplitNetwork200ApplicationJSONResultingNetworks withProductTypes(String[] productTypes) {
        this.productTypes = productTypes;
        return this;
    }
    
    /**
     * Network tags
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String[] tags;

    public SplitNetwork200ApplicationJSONResultingNetworks withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * Timezone of the network
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeZone")
    public String timeZone;

    public SplitNetwork200ApplicationJSONResultingNetworks withTimeZone(String timeZone) {
        this.timeZone = timeZone;
        return this;
    }
    
    /**
     * URL to the network Dashboard UI
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public SplitNetwork200ApplicationJSONResultingNetworks withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public SplitNetwork200ApplicationJSONResultingNetworks(){}
}
