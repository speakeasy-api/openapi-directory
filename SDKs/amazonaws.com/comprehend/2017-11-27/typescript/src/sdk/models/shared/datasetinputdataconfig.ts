/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DatasetAugmentedManifestsListItem } from "./datasetaugmentedmanifestslistitem";
import { DatasetDataFormatEnum } from "./datasetdataformatenum";
import { DatasetDocumentClassifierInputDataConfig } from "./datasetdocumentclassifierinputdataconfig";
import { DatasetEntityRecognizerInputDataConfig } from "./datasetentityrecognizerinputdataconfig";
import { Expose, Type } from "class-transformer";

/**
 * Specifies the format and location of the input data for the dataset.
 */
export class DatasetInputDataConfig extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: DatasetAugmentedManifestsListItem })
  @Expose({ name: "AugmentedManifests" })
  @Type(() => DatasetAugmentedManifestsListItem)
  augmentedManifests?: DatasetAugmentedManifestsListItem[];

  @SpeakeasyMetadata()
  @Expose({ name: "DataFormat" })
  dataFormat?: DatasetDataFormatEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "DocumentClassifierInputDataConfig" })
  @Type(() => DatasetDocumentClassifierInputDataConfig)
  documentClassifierInputDataConfig?: DatasetDocumentClassifierInputDataConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "EntityRecognizerInputDataConfig" })
  @Type(() => DatasetEntityRecognizerInputDataConfig)
  entityRecognizerInputDataConfig?: DatasetEntityRecognizerInputDataConfig;
}
