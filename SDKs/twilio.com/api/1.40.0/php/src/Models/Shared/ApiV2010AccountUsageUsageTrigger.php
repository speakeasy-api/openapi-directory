<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ApiV2010AccountUsageUsageTrigger - Created
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ApiV2010AccountUsageUsageTrigger
{
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that the trigger monitors.
     * 
     * @var ?string $accountSid
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_sid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountSid = null;
    
    /**
     * The API version used to create the resource.
     * 
     * @var ?string $apiVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('api_version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $apiVersion = null;
    
    /**
     * The HTTP method we use to call `callback_url`. Can be: `GET` or `POST`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ApiV2010AccountUsageUsageTriggerCallbackMethodEnum $callbackMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('callback_method')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ApiV2010AccountUsageUsageTriggerCallbackMethodEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ApiV2010AccountUsageUsageTriggerCallbackMethodEnum $callbackMethod = null;
    
    /**
     * The URL we call using the `callback_method` when the trigger fires.
     * 
     * @var ?string $callbackUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('callback_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $callbackUrl = null;
    
    /**
     * The current value of the field the trigger is watching.
     * 
     * @var ?string $currentValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('current_value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currentValue = null;
    
    /**
     * The date and time in GMT that the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     * 
     * @var ?string $dateCreated
     */
	#[\JMS\Serializer\Annotation\SerializedName('date_created')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dateCreated = null;
    
    /**
     * The date and time in GMT that the trigger was last fired specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     * 
     * @var ?string $dateFired
     */
	#[\JMS\Serializer\Annotation\SerializedName('date_fired')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dateFired = null;
    
    /**
     * The date and time in GMT that the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.
     * 
     * @var ?string $dateUpdated
     */
	#[\JMS\Serializer\Annotation\SerializedName('date_updated')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dateUpdated = null;
    
    /**
     * The string that you assigned to describe the trigger.
     * 
     * @var ?string $friendlyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('friendly_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $friendlyName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('recurring')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UsageTriggerEnumRecurringEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsageTriggerEnumRecurringEnum $recurring = null;
    
    /**
     * The unique string that that we created to identify the UsageTrigger resource.
     * 
     * @var ?string $sid
     */
	#[\JMS\Serializer\Annotation\SerializedName('sid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sid = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('trigger_by')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UsageTriggerEnumTriggerFieldEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsageTriggerEnumTriggerFieldEnum $triggerBy = null;
    
    /**
     * The value at which the trigger will fire.  Must be a positive, numeric value.
     * 
     * @var ?string $triggerValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('trigger_value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $triggerValue = null;
    
    /**
     * The URI of the resource, relative to `https://api.twilio.com`.
     * 
     * @var ?string $uri
     */
	#[\JMS\Serializer\Annotation\SerializedName('uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uri = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('usage_category')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UsageTriggerEnumUsageCategoryEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsageTriggerEnumUsageCategoryEnum $usageCategory = null;
    
    /**
     * The URI of the [UsageRecord](https://www.twilio.com/docs/usage/api/usage-record) resource this trigger watches, relative to `https://api.twilio.com`.
     * 
     * @var ?string $usageRecordUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('usage_record_uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $usageRecordUri = null;
    
	public function __construct()
	{
		$this->accountSid = null;
		$this->apiVersion = null;
		$this->callbackMethod = null;
		$this->callbackUrl = null;
		$this->currentValue = null;
		$this->dateCreated = null;
		$this->dateFired = null;
		$this->dateUpdated = null;
		$this->friendlyName = null;
		$this->recurring = null;
		$this->sid = null;
		$this->triggerBy = null;
		$this->triggerValue = null;
		$this->uri = null;
		$this->usageCategory = null;
		$this->usageRecordUri = null;
	}
}
