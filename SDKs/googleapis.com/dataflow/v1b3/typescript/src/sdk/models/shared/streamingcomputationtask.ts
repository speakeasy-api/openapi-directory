/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MountedDataDisk } from "./mounteddatadisk";
import { StreamingComputationRanges } from "./streamingcomputationranges";
import { Expose, Type } from "class-transformer";

/**
 * A type of streaming computation task.
 */
export enum StreamingComputationTaskTaskTypeEnum {
  StreamingComputationTaskUnknown = "STREAMING_COMPUTATION_TASK_UNKNOWN",
  StreamingComputationTaskStop = "STREAMING_COMPUTATION_TASK_STOP",
  StreamingComputationTaskStart = "STREAMING_COMPUTATION_TASK_START",
}

/**
 * A task which describes what action should be performed for the specified streaming computation ranges.
 */
export class StreamingComputationTask extends SpeakeasyBase {
  /**
   * Contains ranges of a streaming computation this task should apply to.
   */
  @SpeakeasyMetadata({ elemType: StreamingComputationRanges })
  @Expose({ name: "computationRanges" })
  @Type(() => StreamingComputationRanges)
  computationRanges?: StreamingComputationRanges[];

  /**
   * Describes the set of data disks this task should apply to.
   */
  @SpeakeasyMetadata({ elemType: MountedDataDisk })
  @Expose({ name: "dataDisks" })
  @Type(() => MountedDataDisk)
  dataDisks?: MountedDataDisk[];

  /**
   * A type of streaming computation task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taskType" })
  taskType?: StreamingComputationTaskTaskTypeEnum;
}
