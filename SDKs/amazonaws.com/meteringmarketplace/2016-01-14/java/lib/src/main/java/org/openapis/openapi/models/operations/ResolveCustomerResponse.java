/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class ResolveCustomerResponse {
    
    public String contentType;
    public ResolveCustomerResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * DisabledApiException
     */
    
    public Object disabledApiException;
    public ResolveCustomerResponse withDisabledApiException(Object disabledApiException) {
        this.disabledApiException = disabledApiException;
        return this;
    }
    
    /**
     * ExpiredTokenException
     */
    
    public Object expiredTokenException;
    public ResolveCustomerResponse withExpiredTokenException(Object expiredTokenException) {
        this.expiredTokenException = expiredTokenException;
        return this;
    }
    
    /**
     * InternalServiceErrorException
     */
    
    public Object internalServiceErrorException;
    public ResolveCustomerResponse withInternalServiceErrorException(Object internalServiceErrorException) {
        this.internalServiceErrorException = internalServiceErrorException;
        return this;
    }
    
    /**
     * InvalidTokenException
     */
    
    public Object invalidTokenException;
    public ResolveCustomerResponse withInvalidTokenException(Object invalidTokenException) {
        this.invalidTokenException = invalidTokenException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.ResolveCustomerResult resolveCustomerResult;
    public ResolveCustomerResponse withResolveCustomerResult(org.openapis.openapi.models.shared.ResolveCustomerResult resolveCustomerResult) {
        this.resolveCustomerResult = resolveCustomerResult;
        return this;
    }
    
    
    public Integer statusCode;
    public ResolveCustomerResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public ResolveCustomerResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ThrottlingException
     */
    
    public Object throttlingException;
    public ResolveCustomerResponse withThrottlingException(Object throttlingException) {
        this.throttlingException = throttlingException;
        return this;
    }
    
}
