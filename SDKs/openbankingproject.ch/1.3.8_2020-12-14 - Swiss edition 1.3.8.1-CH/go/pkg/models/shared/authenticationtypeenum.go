// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AuthenticationTypeEnum - Type of the authentication method.
//
// More authentication types might be added during implementation projects and documented in the ASPSP documentation.
//
//   - 'SMS_OTP': An SCA method, where an OTP linked to the transaction to be authorised is sent to the PSU through a SMS channel.
//   - 'CHIP_OTP': An SCA method, where an OTP is generated by a chip card, e.g. a TOP derived from an EMV cryptogram.
//     To contact the card, the PSU normally needs a (handheld) device.
//     With this device, the PSU either reads the challenging data through a visual interface like flickering or
//     the PSU types in the challenge through the device key pad.
//     The device then derives an OTP from the challenge data and displays the OTP to the PSU.
//   - 'PHOTO_OTP': An SCA method, where the challenge is a QR code or similar encoded visual data
//     which can be read in by a consumer device or specific mobile app.
//     The device resp. the specific app than derives an OTP from the visual challenge data and displays
//     the OTP to the PSU.
//   - 'PUSH_OTP': An OTP is pushed to a dedicated authentication APP and displayed to the PSU.
//   - 'SMTP_OTP': An OTP is sent via email to the PSU.
type AuthenticationTypeEnum string

const (
	AuthenticationTypeEnumSmsOtp   AuthenticationTypeEnum = "SMS_OTP"
	AuthenticationTypeEnumChipOtp  AuthenticationTypeEnum = "CHIP_OTP"
	AuthenticationTypeEnumPhotoOtp AuthenticationTypeEnum = "PHOTO_OTP"
	AuthenticationTypeEnumPushOtp  AuthenticationTypeEnum = "PUSH_OTP"
	AuthenticationTypeEnumSMTPOtp  AuthenticationTypeEnum = "SMTP_OTP"
)

func (e *AuthenticationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SMS_OTP":
		fallthrough
	case "CHIP_OTP":
		fallthrough
	case "PHOTO_OTP":
		fallthrough
	case "PUSH_OTP":
		fallthrough
	case "SMTP_OTP":
		*e = AuthenticationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AuthenticationTypeEnum: %s", s)
	}
}
