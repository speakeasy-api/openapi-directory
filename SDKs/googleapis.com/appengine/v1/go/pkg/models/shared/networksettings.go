// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NetworkSettingsIngressTrafficAllowedEnum - The ingress settings for version or service.
type NetworkSettingsIngressTrafficAllowedEnum string

const (
	NetworkSettingsIngressTrafficAllowedEnumIngressTrafficAllowedUnspecified   NetworkSettingsIngressTrafficAllowedEnum = "INGRESS_TRAFFIC_ALLOWED_UNSPECIFIED"
	NetworkSettingsIngressTrafficAllowedEnumIngressTrafficAllowedAll           NetworkSettingsIngressTrafficAllowedEnum = "INGRESS_TRAFFIC_ALLOWED_ALL"
	NetworkSettingsIngressTrafficAllowedEnumIngressTrafficAllowedInternalOnly  NetworkSettingsIngressTrafficAllowedEnum = "INGRESS_TRAFFIC_ALLOWED_INTERNAL_ONLY"
	NetworkSettingsIngressTrafficAllowedEnumIngressTrafficAllowedInternalAndLb NetworkSettingsIngressTrafficAllowedEnum = "INGRESS_TRAFFIC_ALLOWED_INTERNAL_AND_LB"
)

func (e NetworkSettingsIngressTrafficAllowedEnum) ToPointer() *NetworkSettingsIngressTrafficAllowedEnum {
	return &e
}

func (e *NetworkSettingsIngressTrafficAllowedEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INGRESS_TRAFFIC_ALLOWED_UNSPECIFIED":
		fallthrough
	case "INGRESS_TRAFFIC_ALLOWED_ALL":
		fallthrough
	case "INGRESS_TRAFFIC_ALLOWED_INTERNAL_ONLY":
		fallthrough
	case "INGRESS_TRAFFIC_ALLOWED_INTERNAL_AND_LB":
		*e = NetworkSettingsIngressTrafficAllowedEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NetworkSettingsIngressTrafficAllowedEnum: %v", v)
	}
}

// NetworkSettings - A NetworkSettings resource is a container for ingress settings for a version or service.
type NetworkSettings struct {
	// The ingress settings for version or service.
	IngressTrafficAllowed *NetworkSettingsIngressTrafficAllowedEnum `json:"ingressTrafficAllowed,omitempty"`
}
