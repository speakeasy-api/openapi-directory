// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCopyDBClusterParameterGroupActionEnum
type POSTCopyDBClusterParameterGroupActionEnum string

const (
	POSTCopyDBClusterParameterGroupActionEnumCopyDbClusterParameterGroup POSTCopyDBClusterParameterGroupActionEnum = "CopyDBClusterParameterGroup"
)

func (e *POSTCopyDBClusterParameterGroupActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CopyDBClusterParameterGroup":
		*e = POSTCopyDBClusterParameterGroupActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCopyDBClusterParameterGroupActionEnum: %s", s)
	}
}

// POSTCopyDBClusterParameterGroupVersionEnum
type POSTCopyDBClusterParameterGroupVersionEnum string

const (
	POSTCopyDBClusterParameterGroupVersionEnumTwoThousandAndFourteen1031 POSTCopyDBClusterParameterGroupVersionEnum = "2014-10-31"
)

func (e *POSTCopyDBClusterParameterGroupVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2014-10-31":
		*e = POSTCopyDBClusterParameterGroupVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCopyDBClusterParameterGroupVersionEnum: %s", s)
	}
}

type POSTCopyDBClusterParameterGroupQueryParams struct {
	Action  POSTCopyDBClusterParameterGroupActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTCopyDBClusterParameterGroupVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTCopyDBClusterParameterGroupHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCopyDBClusterParameterGroupRequest struct {
	QueryParams POSTCopyDBClusterParameterGroupQueryParams
	Headers     POSTCopyDBClusterParameterGroupHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTCopyDBClusterParameterGroupResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
