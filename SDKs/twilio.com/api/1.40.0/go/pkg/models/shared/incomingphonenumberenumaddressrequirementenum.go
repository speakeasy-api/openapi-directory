// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type IncomingPhoneNumberEnumAddressRequirementEnum string

const (
	IncomingPhoneNumberEnumAddressRequirementEnumNone    IncomingPhoneNumberEnumAddressRequirementEnum = "none"
	IncomingPhoneNumberEnumAddressRequirementEnumAny     IncomingPhoneNumberEnumAddressRequirementEnum = "any"
	IncomingPhoneNumberEnumAddressRequirementEnumLocal   IncomingPhoneNumberEnumAddressRequirementEnum = "local"
	IncomingPhoneNumberEnumAddressRequirementEnumForeign IncomingPhoneNumberEnumAddressRequirementEnum = "foreign"
)

func (e *IncomingPhoneNumberEnumAddressRequirementEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "none":
		fallthrough
	case "any":
		fallthrough
	case "local":
		fallthrough
	case "foreign":
		*e = IncomingPhoneNumberEnumAddressRequirementEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for IncomingPhoneNumberEnumAddressRequirementEnum: %s", s)
	}
}
