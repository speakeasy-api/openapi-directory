// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetSpacesTypeEnum - Type of the space
type GetSpacesTypeEnum string

const (
	GetSpacesTypeEnumPrivate     GetSpacesTypeEnum = "private"
	GetSpacesTypeEnumEnterprise  GetSpacesTypeEnum = "enterprise"
	GetSpacesTypeEnumCompany     GetSpacesTypeEnum = "company"
	GetSpacesTypeEnumAssociation GetSpacesTypeEnum = "association"
)

func (e GetSpacesTypeEnum) ToPointer() *GetSpacesTypeEnum {
	return &e
}

func (e *GetSpacesTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private":
		fallthrough
	case "enterprise":
		fallthrough
	case "company":
		fallthrough
	case "association":
		*e = GetSpacesTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSpacesTypeEnum: %v", v)
	}
}

type GetSpacesRequest struct {
	// Name of the space
	Name *string `queryParam:"style=form,explode=true,name=Name"`
	// registration number of the space
	RegistrationNumber *string `queryParam:"style=form,explode=true,name=RegistrationNumber"`
	// Type of the space
	Type *GetSpacesTypeEnum `queryParam:"style=form,explode=true,name=Type"`
}

type GetSpaces200ApplicationJSONTypeEnum string

const (
	GetSpaces200ApplicationJSONTypeEnumPrivate     GetSpaces200ApplicationJSONTypeEnum = "private"
	GetSpaces200ApplicationJSONTypeEnumEnterprise  GetSpaces200ApplicationJSONTypeEnum = "enterprise"
	GetSpaces200ApplicationJSONTypeEnumCompany     GetSpaces200ApplicationJSONTypeEnum = "company"
	GetSpaces200ApplicationJSONTypeEnumAssociation GetSpaces200ApplicationJSONTypeEnum = "association"
)

func (e GetSpaces200ApplicationJSONTypeEnum) ToPointer() *GetSpaces200ApplicationJSONTypeEnum {
	return &e
}

func (e *GetSpaces200ApplicationJSONTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private":
		fallthrough
	case "enterprise":
		fallthrough
	case "company":
		fallthrough
	case "association":
		*e = GetSpaces200ApplicationJSONTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSpaces200ApplicationJSONTypeEnum: %v", v)
	}
}

type GetSpaces200ApplicationJSON struct {
	ID                 *string                              `json:"Id,omitempty"`
	ModificationDate   *string                              `json:"ModificationDate,omitempty"`
	Name               *string                              `json:"Name,omitempty"`
	RegistrationNumber *string                              `json:"RegistrationNumber,omitempty"`
	Type               *GetSpaces200ApplicationJSONTypeEnum `json:"Type,omitempty"`
}

type GetSpacesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// A list of Spaces
	GetSpaces200ApplicationJSONObjects []GetSpaces200ApplicationJSON
}
