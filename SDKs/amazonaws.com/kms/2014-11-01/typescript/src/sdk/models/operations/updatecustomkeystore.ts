/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum UpdateCustomKeyStoreXAmzTargetEnum {
  TrentServiceUpdateCustomKeyStore = "TrentService.UpdateCustomKeyStore",
}

export class UpdateCustomKeyStoreRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  updateCustomKeyStoreRequest: shared.UpdateCustomKeyStoreRequest;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Target",
  })
  xAmzTarget: UpdateCustomKeyStoreXAmzTargetEnum;
}

export class UpdateCustomKeyStoreResponse extends SpeakeasyBase {
  /**
   * CloudHsmClusterInvalidConfigurationException
   */
  @SpeakeasyMetadata()
  cloudHsmClusterInvalidConfigurationException?: any;

  /**
   * CloudHsmClusterNotActiveException
   */
  @SpeakeasyMetadata()
  cloudHsmClusterNotActiveException?: any;

  /**
   * CloudHsmClusterNotFoundException
   */
  @SpeakeasyMetadata()
  cloudHsmClusterNotFoundException?: any;

  /**
   * CloudHsmClusterNotRelatedException
   */
  @SpeakeasyMetadata()
  cloudHsmClusterNotRelatedException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * CustomKeyStoreInvalidStateException
   */
  @SpeakeasyMetadata()
  customKeyStoreInvalidStateException?: any;

  /**
   * CustomKeyStoreNameInUseException
   */
  @SpeakeasyMetadata()
  customKeyStoreNameInUseException?: any;

  /**
   * CustomKeyStoreNotFoundException
   */
  @SpeakeasyMetadata()
  customKeyStoreNotFoundException?: any;

  /**
   * KMSInternalException
   */
  @SpeakeasyMetadata()
  kmsInternalException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateCustomKeyStoreResponse?: Record<string, any>;

  /**
   * XksProxyIncorrectAuthenticationCredentialException
   */
  @SpeakeasyMetadata()
  xksProxyIncorrectAuthenticationCredentialException?: any;

  /**
   * XksProxyInvalidConfigurationException
   */
  @SpeakeasyMetadata()
  xksProxyInvalidConfigurationException?: any;

  /**
   * XksProxyInvalidResponseException
   */
  @SpeakeasyMetadata()
  xksProxyInvalidResponseException?: any;

  /**
   * XksProxyUriEndpointInUseException
   */
  @SpeakeasyMetadata()
  xksProxyUriEndpointInUseException?: any;

  /**
   * XksProxyUriInUseException
   */
  @SpeakeasyMetadata()
  xksProxyUriInUseException?: any;

  /**
   * XksProxyUriUnreachableException
   */
  @SpeakeasyMetadata()
  xksProxyUriUnreachableException?: any;

  /**
   * XksProxyVpcEndpointServiceInUseException
   */
  @SpeakeasyMetadata()
  xksProxyVpcEndpointServiceInUseException?: any;

  /**
   * XksProxyVpcEndpointServiceInvalidConfigurationException
   */
  @SpeakeasyMetadata()
  xksProxyVpcEndpointServiceInvalidConfigurationException?: any;

  /**
   * XksProxyVpcEndpointServiceNotFoundException
   */
  @SpeakeasyMetadata()
  xksProxyVpcEndpointServiceNotFoundException?: any;
}
