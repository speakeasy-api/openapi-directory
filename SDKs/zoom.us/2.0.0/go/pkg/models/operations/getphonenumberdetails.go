// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetPhoneNumberDetailsSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type GetPhoneNumberDetailsPathParams struct {
	// Unique Identifier of the Phone Number. This can be retrieved from the List Phone Numbers API.
	NumberID string `pathParam:"style=simple,explode=false,name=numberId"`
}

type GetPhoneNumberDetailsRequest struct {
	PathParams GetPhoneNumberDetailsPathParams
	Security   GetPhoneNumberDetailsSecurity
}

// GetPhoneNumberDetails200ApplicationXMLAssigneeTypeEnum - Indicates who the phone number belongs to.<br>
// `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).<br>
// `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
type GetPhoneNumberDetails200ApplicationXMLAssigneeTypeEnum string

const (
	GetPhoneNumberDetails200ApplicationXMLAssigneeTypeEnumUser             GetPhoneNumberDetails200ApplicationXMLAssigneeTypeEnum = "user"
	GetPhoneNumberDetails200ApplicationXMLAssigneeTypeEnumCallQueue        GetPhoneNumberDetails200ApplicationXMLAssigneeTypeEnum = "callQueue"
	GetPhoneNumberDetails200ApplicationXMLAssigneeTypeEnumAutoReceptionist GetPhoneNumberDetails200ApplicationXMLAssigneeTypeEnum = "autoReceptionist"
	GetPhoneNumberDetails200ApplicationXMLAssigneeTypeEnumCommonAreaPhone  GetPhoneNumberDetails200ApplicationXMLAssigneeTypeEnum = "commonAreaPhone"
)

func (e *GetPhoneNumberDetails200ApplicationXMLAssigneeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "user":
		fallthrough
	case "callQueue":
		fallthrough
	case "autoReceptionist":
		fallthrough
	case "commonAreaPhone":
		*e = GetPhoneNumberDetails200ApplicationXMLAssigneeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPhoneNumberDetails200ApplicationXMLAssigneeTypeEnum: %s", s)
	}
}

type GetPhoneNumberDetails200ApplicationXMLAssignee struct {
	// Extension number of the Phone.
	ExtensionNumber *int64
	// Unique Identifier of the user to whom the number has been assigned.
	ID *string
	// Name of the user to whom the number has been assigned.
	Name *string
	// Indicates who the phone number belongs to.<br>
	// `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).<br>
	// `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
	Type *GetPhoneNumberDetails200ApplicationXMLAssigneeTypeEnum
}

// GetPhoneNumberDetails200ApplicationXMLNumberTypeEnum - The type of number. Values can be one of the following:<br>
// `toll`, `tollfree`
type GetPhoneNumberDetails200ApplicationXMLNumberTypeEnum string

const (
	GetPhoneNumberDetails200ApplicationXMLNumberTypeEnumToll     GetPhoneNumberDetails200ApplicationXMLNumberTypeEnum = "toll"
	GetPhoneNumberDetails200ApplicationXMLNumberTypeEnumTollfree GetPhoneNumberDetails200ApplicationXMLNumberTypeEnum = "tollfree"
)

func (e *GetPhoneNumberDetails200ApplicationXMLNumberTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "toll":
		fallthrough
	case "tollfree":
		*e = GetPhoneNumberDetails200ApplicationXMLNumberTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPhoneNumberDetails200ApplicationXMLNumberTypeEnum: %s", s)
	}
}

type GetPhoneNumberDetails200ApplicationXMLSite struct {
	// Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.
	ID *string
	// Name of the site where the phone number is assigned.
	Name *string
}

// GetPhoneNumberDetails200ApplicationXMLSourceEnum - Source of phone number.
type GetPhoneNumberDetails200ApplicationXMLSourceEnum string

const (
	GetPhoneNumberDetails200ApplicationXMLSourceEnumInternal GetPhoneNumberDetails200ApplicationXMLSourceEnum = "internal"
	GetPhoneNumberDetails200ApplicationXMLSourceEnumExternal GetPhoneNumberDetails200ApplicationXMLSourceEnum = "external"
)

func (e *GetPhoneNumberDetails200ApplicationXMLSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal":
		fallthrough
	case "external":
		*e = GetPhoneNumberDetails200ApplicationXMLSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPhoneNumberDetails200ApplicationXMLSourceEnum: %s", s)
	}
}

// GetPhoneNumberDetails200ApplicationXMLStatusEnum - Status of the number.
type GetPhoneNumberDetails200ApplicationXMLStatusEnum string

const (
	GetPhoneNumberDetails200ApplicationXMLStatusEnumPending   GetPhoneNumberDetails200ApplicationXMLStatusEnum = "pending"
	GetPhoneNumberDetails200ApplicationXMLStatusEnumAvailable GetPhoneNumberDetails200ApplicationXMLStatusEnum = "available"
)

func (e *GetPhoneNumberDetails200ApplicationXMLStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "available":
		*e = GetPhoneNumberDetails200ApplicationXMLStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPhoneNumberDetails200ApplicationXMLStatusEnum: %s", s)
	}
}

// GetPhoneNumberDetails200ApplicationXML - **HTTP Status Code:** `200` **OK**<br>
// Phone number details retrieved successfully.
type GetPhoneNumberDetails200ApplicationXML struct {
	Assignee *GetPhoneNumberDetails200ApplicationXMLAssignee
	// The capability for the phone number, whether it can take incoming calls, make outgoing calls, or both. Values include `incoming`, `outgoing`, or both of these values.
	Capability []string
	// The display name for the phone number.
	DisplayName *string
	// Unique Identifier of the Phone Number.
	ID *string
	// Location (city, state and country) where the Phone number is assigned.
	Location *string
	// Phone number in E164 format.
	Number *string
	// The type of number. Values can be one of the following:<br>
	// `toll`, `tollfree`
	NumberType *GetPhoneNumberDetails200ApplicationXMLNumberTypeEnum
	Site       *GetPhoneNumberDetails200ApplicationXMLSite
	// Source of phone number.
	Source *GetPhoneNumberDetails200ApplicationXMLSourceEnum
	// Status of the number.
	Status *GetPhoneNumberDetails200ApplicationXMLStatusEnum
}

// GetPhoneNumberDetails200ApplicationJSONAssigneeTypeEnum - Indicates who the phone number belongs to.<br>
// `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).<br>
// `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
type GetPhoneNumberDetails200ApplicationJSONAssigneeTypeEnum string

const (
	GetPhoneNumberDetails200ApplicationJSONAssigneeTypeEnumUser             GetPhoneNumberDetails200ApplicationJSONAssigneeTypeEnum = "user"
	GetPhoneNumberDetails200ApplicationJSONAssigneeTypeEnumCallQueue        GetPhoneNumberDetails200ApplicationJSONAssigneeTypeEnum = "callQueue"
	GetPhoneNumberDetails200ApplicationJSONAssigneeTypeEnumAutoReceptionist GetPhoneNumberDetails200ApplicationJSONAssigneeTypeEnum = "autoReceptionist"
	GetPhoneNumberDetails200ApplicationJSONAssigneeTypeEnumCommonAreaPhone  GetPhoneNumberDetails200ApplicationJSONAssigneeTypeEnum = "commonAreaPhone"
)

func (e *GetPhoneNumberDetails200ApplicationJSONAssigneeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "user":
		fallthrough
	case "callQueue":
		fallthrough
	case "autoReceptionist":
		fallthrough
	case "commonAreaPhone":
		*e = GetPhoneNumberDetails200ApplicationJSONAssigneeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPhoneNumberDetails200ApplicationJSONAssigneeTypeEnum: %s", s)
	}
}

type GetPhoneNumberDetails200ApplicationJSONAssignee struct {
	// Extension number of the Phone.
	ExtensionNumber *int64 `json:"extension_number,omitempty"`
	// Unique Identifier of the user to whom the number has been assigned.
	ID *string `json:"id,omitempty"`
	// Name of the user to whom the number has been assigned.
	Name *string `json:"name,omitempty"`
	// Indicates who the phone number belongs to.<br>
	// `user`: Number has been assigned to an existing phone user allowing them to receive calls through their extension number or direct phone number.<br> `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).<br> `commonAreaPhone`: Phone number has been assigned to a [ provisioned common area desk phone](https://support.zoom.us/hc/en-us/articles/360021119092-Provisioning-Phones-and-Devices).<br>
	// `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).<br>
	Type *GetPhoneNumberDetails200ApplicationJSONAssigneeTypeEnum `json:"type,omitempty"`
}

// GetPhoneNumberDetails200ApplicationJSONNumberTypeEnum - The type of number. Values can be one of the following:<br>
// `toll`, `tollfree`
type GetPhoneNumberDetails200ApplicationJSONNumberTypeEnum string

const (
	GetPhoneNumberDetails200ApplicationJSONNumberTypeEnumToll     GetPhoneNumberDetails200ApplicationJSONNumberTypeEnum = "toll"
	GetPhoneNumberDetails200ApplicationJSONNumberTypeEnumTollfree GetPhoneNumberDetails200ApplicationJSONNumberTypeEnum = "tollfree"
)

func (e *GetPhoneNumberDetails200ApplicationJSONNumberTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "toll":
		fallthrough
	case "tollfree":
		*e = GetPhoneNumberDetails200ApplicationJSONNumberTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPhoneNumberDetails200ApplicationJSONNumberTypeEnum: %s", s)
	}
}

type GetPhoneNumberDetails200ApplicationJSONSite struct {
	// Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.
	ID *string `json:"id,omitempty"`
	// Name of the site where the phone number is assigned.
	Name *string `json:"name,omitempty"`
}

// GetPhoneNumberDetails200ApplicationJSONSourceEnum - Source of phone number.
type GetPhoneNumberDetails200ApplicationJSONSourceEnum string

const (
	GetPhoneNumberDetails200ApplicationJSONSourceEnumInternal GetPhoneNumberDetails200ApplicationJSONSourceEnum = "internal"
	GetPhoneNumberDetails200ApplicationJSONSourceEnumExternal GetPhoneNumberDetails200ApplicationJSONSourceEnum = "external"
)

func (e *GetPhoneNumberDetails200ApplicationJSONSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal":
		fallthrough
	case "external":
		*e = GetPhoneNumberDetails200ApplicationJSONSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPhoneNumberDetails200ApplicationJSONSourceEnum: %s", s)
	}
}

// GetPhoneNumberDetails200ApplicationJSONStatusEnum - Status of the number.
type GetPhoneNumberDetails200ApplicationJSONStatusEnum string

const (
	GetPhoneNumberDetails200ApplicationJSONStatusEnumPending   GetPhoneNumberDetails200ApplicationJSONStatusEnum = "pending"
	GetPhoneNumberDetails200ApplicationJSONStatusEnumAvailable GetPhoneNumberDetails200ApplicationJSONStatusEnum = "available"
)

func (e *GetPhoneNumberDetails200ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "available":
		*e = GetPhoneNumberDetails200ApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPhoneNumberDetails200ApplicationJSONStatusEnum: %s", s)
	}
}

// GetPhoneNumberDetails200ApplicationJSON - **HTTP Status Code:** `200` **OK**<br>
// Phone number details retrieved successfully.
type GetPhoneNumberDetails200ApplicationJSON struct {
	Assignee *GetPhoneNumberDetails200ApplicationJSONAssignee `json:"assignee,omitempty"`
	// The capability for the phone number, whether it can take incoming calls, make outgoing calls, or both. Values include `incoming`, `outgoing`, or both of these values.
	Capability []string `json:"capability,omitempty"`
	// The display name for the phone number.
	DisplayName *string `json:"display_name,omitempty"`
	// Unique Identifier of the Phone Number.
	ID *string `json:"id,omitempty"`
	// Location (city, state and country) where the Phone number is assigned.
	Location *string `json:"location,omitempty"`
	// Phone number in E164 format.
	Number *string `json:"number,omitempty"`
	// The type of number. Values can be one of the following:<br>
	// `toll`, `tollfree`
	NumberType *GetPhoneNumberDetails200ApplicationJSONNumberTypeEnum `json:"number_type,omitempty"`
	Site       *GetPhoneNumberDetails200ApplicationJSONSite           `json:"site,omitempty"`
	// Source of phone number.
	Source *GetPhoneNumberDetails200ApplicationJSONSourceEnum `json:"source,omitempty"`
	// Status of the number.
	Status *GetPhoneNumberDetails200ApplicationJSONStatusEnum `json:"status,omitempty"`
}

type GetPhoneNumberDetailsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200` **OK**<br>
	// Phone number details retrieved successfully.
	GetPhoneNumberDetails200ApplicationJSONObject *GetPhoneNumberDetails200ApplicationJSON
}
