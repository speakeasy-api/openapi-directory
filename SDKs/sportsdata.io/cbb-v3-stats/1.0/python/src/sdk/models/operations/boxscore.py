"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import boxscore as shared_boxscore
from enum import Enum
from typing import Optional

class BoxScoreFormatEnum(str, Enum):
    r"""Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>."""
    XML = 'XML'
    JSON = 'JSON'


@dataclasses.dataclass
class BoxScoreRequest:
    
    format: BoxScoreFormatEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'format', 'style': 'simple', 'explode': False }})
    r"""Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>."""  
    gameid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'gameid', 'style': 'simple', 'explode': False }})
    r"""The GameID of an CBB game.  GameIDs can be found in the Games API.  Valid entries are <code>14620</code> or <code>16905</code>"""  
    

@dataclasses.dataclass
class BoxScoreResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    box_score: Optional[shared_boxscore.BoxScore] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    