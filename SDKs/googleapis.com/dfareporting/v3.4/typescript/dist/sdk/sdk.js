"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SDK = exports.ServerList = void 0;
var accountactiveadsummaries_1 = require("./accountactiveadsummaries");
var accountpermissiongroups_1 = require("./accountpermissiongroups");
var accountpermissions_1 = require("./accountpermissions");
var accounts_1 = require("./accounts");
var accountuserprofiles_1 = require("./accountuserprofiles");
var ads_1 = require("./ads");
var advertisergroups_1 = require("./advertisergroups");
var advertiserlandingpages_1 = require("./advertiserlandingpages");
var advertisers_1 = require("./advertisers");
var browsers_1 = require("./browsers");
var campaigncreativeassociations_1 = require("./campaigncreativeassociations");
var campaigns_1 = require("./campaigns");
var changelogs_1 = require("./changelogs");
var cities_1 = require("./cities");
var connectiontypes_1 = require("./connectiontypes");
var contentcategories_1 = require("./contentcategories");
var conversions_1 = require("./conversions");
var countries_1 = require("./countries");
var creativeassets_1 = require("./creativeassets");
var creativefields_1 = require("./creativefields");
var creativefieldvalues_1 = require("./creativefieldvalues");
var creativegroups_1 = require("./creativegroups");
var creatives_1 = require("./creatives");
var customevents_1 = require("./customevents");
var dimensionvalues_1 = require("./dimensionvalues");
var directorysites_1 = require("./directorysites");
var dynamictargetingkeys_1 = require("./dynamictargetingkeys");
var eventtags_1 = require("./eventtags");
var files_1 = require("./files");
var floodlightactivities_1 = require("./floodlightactivities");
var floodlightactivitygroups_1 = require("./floodlightactivitygroups");
var floodlightconfigurations_1 = require("./floodlightconfigurations");
var inventoryitems_1 = require("./inventoryitems");
var languages_1 = require("./languages");
var metros_1 = require("./metros");
var mobileapps_1 = require("./mobileapps");
var mobilecarriers_1 = require("./mobilecarriers");
var operatingsystems_1 = require("./operatingsystems");
var operatingsystemversions_1 = require("./operatingsystemversions");
var orderdocuments_1 = require("./orderdocuments");
var orders_1 = require("./orders");
var placementgroups_1 = require("./placementgroups");
var placements_1 = require("./placements");
var placementstrategies_1 = require("./placementstrategies");
var platformtypes_1 = require("./platformtypes");
var postalcodes_1 = require("./postalcodes");
var projects_1 = require("./projects");
var regions_1 = require("./regions");
var remarketinglists_1 = require("./remarketinglists");
var remarketinglistshares_1 = require("./remarketinglistshares");
var reports_1 = require("./reports");
var sites_1 = require("./sites");
var sizes_1 = require("./sizes");
var subaccounts_1 = require("./subaccounts");
var targetableremarketinglists_1 = require("./targetableremarketinglists");
var targetingtemplates_1 = require("./targetingtemplates");
var userprofiles_1 = require("./userprofiles");
var userrolepermissiongroups_1 = require("./userrolepermissiongroups");
var userrolepermissions_1 = require("./userrolepermissions");
var userroles_1 = require("./userroles");
var videoformats_1 = require("./videoformats");
var axios_1 = __importDefault(require("axios"));
/**
 * Contains the list of servers available to the SDK
 */
exports.ServerList = [
    "https://dfareporting.googleapis.com/dfareporting/v3.4",
];
/**
 * Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.
 *
 * @see {@link https://developers.google.com/doubleclick-advertisers/}
 */
var SDK = /** @class */ (function () {
    function SDK(props) {
        var _a, _b;
        this._language = "typescript";
        this._sdkVersion = "0.0.1";
        this._genVersion = "internal";
        this._serverURL = (_a = props === null || props === void 0 ? void 0 : props.serverURL) !== null && _a !== void 0 ? _a : exports.ServerList[0];
        this._defaultClient =
            (_b = props === null || props === void 0 ? void 0 : props.defaultClient) !== null && _b !== void 0 ? _b : axios_1.default.create({ baseURL: this._serverURL });
        this._securityClient = this._defaultClient;
        this.accountActiveAdSummaries = new accountactiveadsummaries_1.AccountActiveAdSummaries(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.accountPermissionGroups = new accountpermissiongroups_1.AccountPermissionGroups(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.accountPermissions = new accountpermissions_1.AccountPermissions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.accountUserProfiles = new accountuserprofiles_1.AccountUserProfiles(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.accounts = new accounts_1.Accounts(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.ads = new ads_1.Ads(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.advertiserGroups = new advertisergroups_1.AdvertiserGroups(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.advertiserLandingPages = new advertiserlandingpages_1.AdvertiserLandingPages(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.advertisers = new advertisers_1.Advertisers(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.browsers = new browsers_1.Browsers(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.campaignCreativeAssociations = new campaigncreativeassociations_1.CampaignCreativeAssociations(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.campaigns = new campaigns_1.Campaigns(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.changeLogs = new changelogs_1.ChangeLogs(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.cities = new cities_1.Cities(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.connectionTypes = new connectiontypes_1.ConnectionTypes(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.contentCategories = new contentcategories_1.ContentCategories(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.conversions = new conversions_1.Conversions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.countries = new countries_1.Countries(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.creativeAssets = new creativeassets_1.CreativeAssets(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.creativeFieldValues = new creativefieldvalues_1.CreativeFieldValues(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.creativeFields = new creativefields_1.CreativeFields(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.creativeGroups = new creativegroups_1.CreativeGroups(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.creatives = new creatives_1.Creatives(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.customEvents = new customevents_1.CustomEvents(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.dimensionValues = new dimensionvalues_1.DimensionValues(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.directorySites = new directorysites_1.DirectorySites(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.dynamicTargetingKeys = new dynamictargetingkeys_1.DynamicTargetingKeys(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.eventTags = new eventtags_1.EventTags(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.files = new files_1.Files(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.floodlightActivities = new floodlightactivities_1.FloodlightActivities(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.floodlightActivityGroups = new floodlightactivitygroups_1.FloodlightActivityGroups(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.floodlightConfigurations = new floodlightconfigurations_1.FloodlightConfigurations(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.inventoryItems = new inventoryitems_1.InventoryItems(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.languages = new languages_1.Languages(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.metros = new metros_1.Metros(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.mobileApps = new mobileapps_1.MobileApps(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.mobileCarriers = new mobilecarriers_1.MobileCarriers(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.operatingSystemVersions = new operatingsystemversions_1.OperatingSystemVersions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.operatingSystems = new operatingsystems_1.OperatingSystems(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.orderDocuments = new orderdocuments_1.OrderDocuments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.orders = new orders_1.Orders(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.placementGroups = new placementgroups_1.PlacementGroups(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.placementStrategies = new placementstrategies_1.PlacementStrategies(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.placements = new placements_1.Placements(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.platformTypes = new platformtypes_1.PlatformTypes(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.postalCodes = new postalcodes_1.PostalCodes(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.projects = new projects_1.Projects(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.regions = new regions_1.Regions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.remarketingListShares = new remarketinglistshares_1.RemarketingListShares(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.remarketingLists = new remarketinglists_1.RemarketingLists(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.reports = new reports_1.Reports(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.sites = new sites_1.Sites(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.sizes = new sizes_1.Sizes(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.subaccounts = new subaccounts_1.Subaccounts(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.targetableRemarketingLists = new targetableremarketinglists_1.TargetableRemarketingLists(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.targetingTemplates = new targetingtemplates_1.TargetingTemplates(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.userProfiles = new userprofiles_1.UserProfiles(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.userRolePermissionGroups = new userrolepermissiongroups_1.UserRolePermissionGroups(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.userRolePermissions = new userrolepermissions_1.UserRolePermissions(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.userRoles = new userroles_1.UserRoles(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.videoFormats = new videoformats_1.VideoFormats(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
    }
    return SDK;
}());
exports.SDK = SDK;
