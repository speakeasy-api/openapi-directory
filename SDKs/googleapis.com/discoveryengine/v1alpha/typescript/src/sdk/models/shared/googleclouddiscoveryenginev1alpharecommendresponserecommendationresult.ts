/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDiscoveryengineV1alphaDocument } from "./googleclouddiscoveryenginev1alphadocument";
import { Expose, Type } from "class-transformer";

/**
 * RecommendationResult represents a generic recommendation result with associated metadata.
 */
export class GoogleCloudDiscoveryengineV1alphaRecommendResponseRecommendationResult extends SpeakeasyBase {
  /**
   * Document captures all raw metadata information of items to be recommended or searched.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "document" })
  @Type(() => GoogleCloudDiscoveryengineV1alphaDocument)
  document?: GoogleCloudDiscoveryengineV1alphaDocument;

  /**
   * Resource ID of the recommended Document.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Additional Document metadata / annotations. Possible values: * `score`: Recommendation score in double value. Is set if `returnScore` is set to true in RecommendRequest.params.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  metadata?: Record<string, any>;
}
