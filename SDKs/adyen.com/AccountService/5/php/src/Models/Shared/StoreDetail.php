<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class StoreDetail
{
	#[\JMS\Serializer\Annotation\SerializedName('address')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ViasAddress')]
    public ViasAddress $address;
    
    /**
     * The phone number of the store provided as a single string.  It will be handled as a landline phone.
     * 
     * 
     * Examples: "0031 6 11 22 33 44", "+316/1122-3344", "(0031) 611223344"
     * 
     * @var ?string $fullPhoneNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('fullPhoneNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fullPhoneNumber = null;
    
    /**
     * Store logo for payment method setup.
     * 
     * @var ?string $logo
     */
	#[\JMS\Serializer\Annotation\SerializedName('logo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $logo = null;
    
    /**
     * The merchant account to which the store belongs.
     * 
     * @var string $merchantAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantAccount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantAccount;
    
    /**
     * The merchant category code (MCC) that classifies the business of the account holder.
     * 
     * @var string $merchantCategoryCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantCategoryCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $merchantCategoryCode;
    
    /**
     * Merchant house number for payment method setup.
     * 
     * @var ?string $merchantHouseNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantHouseNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $merchantHouseNumber = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('phoneNumber')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ViasPhoneNumber')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ViasPhoneNumber $phoneNumber = null;
    
    /**
     * The sales channel. Possible values: **Ecommerce**, **POS**.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StoreDetailShopperInteractionEnum $shopperInteraction
     */
	#[\JMS\Serializer\Annotation\SerializedName('shopperInteraction')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\StoreDetailShopperInteractionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StoreDetailShopperInteractionEnum $shopperInteraction = null;
    
    /**
     * The unique reference for the split configuration, returned when you configure splits in your Customer Area. When this is provided, the `virtualAccount` is also required. Adyen uses the configuration and the `virtualAccount` to split funds between accounts in your platform.
     * 
     * @var ?string $splitConfigurationUUID
     */
	#[\JMS\Serializer\Annotation\SerializedName('splitConfigurationUUID')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $splitConfigurationUUID = null;
    
    /**
     * The status of the store. Possible values: **Pending**, **Active**, **Inactive**, **InactiveWithModifications**, **Closed**.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StoreDetailStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\StoreDetailStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StoreDetailStatusEnum $status = null;
    
    /**
     * Adyen-generated unique alphanumeric identifier (UUID) for the store, returned in the response when you create a store. Required when updating an existing store in an `/updateAccountHolder` request.
     * 
     * @var ?string $store
     */
	#[\JMS\Serializer\Annotation\SerializedName('store')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $store = null;
    
    /**
     * The name of the account holder's store. This value is shown in shopper statements.
     * 
     * 
     * * Length: Between 3 to 22 characters 
     * 
     * * The following characters are *not* supported: **:;}{$#@!|<>%^*+=\\**
     * 
     * @var ?string $storeName
     */
	#[\JMS\Serializer\Annotation\SerializedName('storeName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $storeName = null;
    
    /**
     * Your unique identifier for the store. The Customer Area also uses this value for the store description.
     * 
     * 
     *  * Length: Between 3 to 128 characters
     * 
     * * The following characters are *not* supported: **:;}{$#@!|<>%^*+=\\**
     * 
     * @var ?string $storeReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('storeReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $storeReference = null;
    
    /**
     * The account holder's `accountCode` where the split amount will be sent. Required when you provide the `splitConfigurationUUID`.
     * 
     * @var ?string $virtualAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('virtualAccount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $virtualAccount = null;
    
    /**
     * URL of the ecommerce store.
     * 
     * @var ?string $webAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('webAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $webAddress = null;
    
	public function __construct()
	{
		$this->address = new \OpenAPI\OpenAPI\Models\Shared\ViasAddress();
		$this->fullPhoneNumber = null;
		$this->logo = null;
		$this->merchantAccount = "";
		$this->merchantCategoryCode = "";
		$this->merchantHouseNumber = null;
		$this->phoneNumber = null;
		$this->shopperInteraction = null;
		$this->splitConfigurationUUID = null;
		$this->status = null;
		$this->store = null;
		$this->storeName = null;
		$this->storeReference = null;
		$this->virtualAccount = null;
		$this->webAddress = null;
	}
}
