"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class VerificationCodes:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def directory_verification_codes_generate(self, request: operations.DirectoryVerificationCodesGenerateRequest, security: operations.DirectoryVerificationCodesGenerateSecurity) -> operations.DirectoryVerificationCodesGenerateResponse:
        r"""Generates new backup verification codes for the user."""
        base_url = self._server_url
        
        url = utils.generate_url(operations.DirectoryVerificationCodesGenerateRequest, base_url, '/admin/directory/v1/users/{userKey}/verificationCodes/generate', request)
        
        query_params = utils.get_query_params(operations.DirectoryVerificationCodesGenerateRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('POST', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.DirectoryVerificationCodesGenerateResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def directory_verification_codes_invalidate(self, request: operations.DirectoryVerificationCodesInvalidateRequest, security: operations.DirectoryVerificationCodesInvalidateSecurity) -> operations.DirectoryVerificationCodesInvalidateResponse:
        r"""Invalidates the current backup verification codes for the user."""
        base_url = self._server_url
        
        url = utils.generate_url(operations.DirectoryVerificationCodesInvalidateRequest, base_url, '/admin/directory/v1/users/{userKey}/verificationCodes/invalidate', request)
        
        query_params = utils.get_query_params(operations.DirectoryVerificationCodesInvalidateRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('POST', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.DirectoryVerificationCodesInvalidateResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def directory_verification_codes_list(self, request: operations.DirectoryVerificationCodesListRequest, security: operations.DirectoryVerificationCodesListSecurity) -> operations.DirectoryVerificationCodesListResponse:
        r"""Returns the current set of valid backup verification codes for the specified user."""
        base_url = self._server_url
        
        url = utils.generate_url(operations.DirectoryVerificationCodesListRequest, base_url, '/admin/directory/v1/users/{userKey}/verificationCodes', request)
        
        query_params = utils.get_query_params(operations.DirectoryVerificationCodesListRequest, request)
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.DirectoryVerificationCodesListResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.VerificationCodes])
                res.verification_codes = out

        return res

    