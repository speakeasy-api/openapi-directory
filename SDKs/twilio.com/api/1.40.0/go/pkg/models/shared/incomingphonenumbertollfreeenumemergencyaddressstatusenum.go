// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type IncomingPhoneNumberTollFreeEnumEmergencyAddressStatusEnum string

const (
	IncomingPhoneNumberTollFreeEnumEmergencyAddressStatusEnumRegistered            IncomingPhoneNumberTollFreeEnumEmergencyAddressStatusEnum = "registered"
	IncomingPhoneNumberTollFreeEnumEmergencyAddressStatusEnumUnregistered          IncomingPhoneNumberTollFreeEnumEmergencyAddressStatusEnum = "unregistered"
	IncomingPhoneNumberTollFreeEnumEmergencyAddressStatusEnumPendingRegistration   IncomingPhoneNumberTollFreeEnumEmergencyAddressStatusEnum = "pending-registration"
	IncomingPhoneNumberTollFreeEnumEmergencyAddressStatusEnumRegistrationFailure   IncomingPhoneNumberTollFreeEnumEmergencyAddressStatusEnum = "registration-failure"
	IncomingPhoneNumberTollFreeEnumEmergencyAddressStatusEnumPendingUnregistration IncomingPhoneNumberTollFreeEnumEmergencyAddressStatusEnum = "pending-unregistration"
	IncomingPhoneNumberTollFreeEnumEmergencyAddressStatusEnumUnregistrationFailure IncomingPhoneNumberTollFreeEnumEmergencyAddressStatusEnum = "unregistration-failure"
)

func (e *IncomingPhoneNumberTollFreeEnumEmergencyAddressStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "registered":
		fallthrough
	case "unregistered":
		fallthrough
	case "pending-registration":
		fallthrough
	case "registration-failure":
		fallthrough
	case "pending-unregistration":
		fallthrough
	case "unregistration-failure":
		*e = IncomingPhoneNumberTollFreeEnumEmergencyAddressStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for IncomingPhoneNumberTollFreeEnumEmergencyAddressStatusEnum: %s", s)
	}
}
