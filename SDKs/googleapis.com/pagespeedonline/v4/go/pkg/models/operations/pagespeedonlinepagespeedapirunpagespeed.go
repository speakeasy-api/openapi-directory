// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PagespeedonlinePagespeedapiRunpagespeedStrategyEnum - The analysis strategy (desktop or mobile) to use, and desktop is the default
type PagespeedonlinePagespeedapiRunpagespeedStrategyEnum string

const (
	PagespeedonlinePagespeedapiRunpagespeedStrategyEnumDesktop PagespeedonlinePagespeedapiRunpagespeedStrategyEnum = "desktop"
	PagespeedonlinePagespeedapiRunpagespeedStrategyEnumMobile  PagespeedonlinePagespeedapiRunpagespeedStrategyEnum = "mobile"
)

func (e PagespeedonlinePagespeedapiRunpagespeedStrategyEnum) ToPointer() *PagespeedonlinePagespeedapiRunpagespeedStrategyEnum {
	return &e
}

func (e *PagespeedonlinePagespeedapiRunpagespeedStrategyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "desktop":
		fallthrough
	case "mobile":
		*e = PagespeedonlinePagespeedapiRunpagespeedStrategyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PagespeedonlinePagespeedapiRunpagespeedStrategyEnum: %v", v)
	}
}

type PagespeedonlinePagespeedapiRunpagespeedRequest struct {
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Indicates if third party resources should be filtered out before PageSpeed analysis.
	FilterThirdPartyResources *bool `queryParam:"style=form,explode=true,name=filter_third_party_resources"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// The locale used to localize formatted results
	Locale *string `queryParam:"style=form,explode=true,name=locale"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// A PageSpeed rule to run; if none are given, all rules are run
	Rule []string `queryParam:"style=form,explode=true,name=rule"`
	// Indicates if binary data containing a screenshot should be included
	Screenshot *bool `queryParam:"style=form,explode=true,name=screenshot"`
	// Indicates if binary data containing snapshot images should be included
	Snapshots *bool `queryParam:"style=form,explode=true,name=snapshots"`
	// The analysis strategy (desktop or mobile) to use, and desktop is the default
	Strategy *PagespeedonlinePagespeedapiRunpagespeedStrategyEnum `queryParam:"style=form,explode=true,name=strategy"`
	// The URL to fetch and analyze
	URL string `queryParam:"style=form,explode=true,name=url"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
	// Campaign name for analytics.
	UtmCampaign *string `queryParam:"style=form,explode=true,name=utm_campaign"`
	// Campaign source for analytics.
	UtmSource *string `queryParam:"style=form,explode=true,name=utm_source"`
}

type PagespeedonlinePagespeedapiRunpagespeedResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
