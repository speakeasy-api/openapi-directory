"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations, shared
from typing import Optional

class Infrastructure:
    r"""Infra APIs"""
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_node(self, request: operations.GetNodeRequest, security: operations.GetNodeSecurity) -> operations.GetNodeResponse:
        r"""Show node details
        Get details of infrastructure nodes. Only admin users can get this information. The proxy id is
        required for adding a data source for selecting appropriate proxy node to add the data source.
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetNodeRequest, base_url, '/infra/nodes/{id}', request)
        
        
        client = utils.configure_security_client(self._client, security)
        
        http_res = client.request('GET', url)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetNodeResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.Node])
                res.node = out
        elif http_res.status_code in [401, 403, 404, 500]:
            pass

        return res

    def list_nodes(self) -> operations.ListNodesResponse:
        r"""List nodes
        Get list of infrastructure nodes. Only admin users can retrieve this information.
        """
        base_url = self._server_url
        
        url = base_url.removesuffix('/') + '/infra/nodes'
        
        
        client = self._client
        
        http_res = client.request('GET', url)
        content_type = http_res.headers.get('Content-Type')

        res = operations.ListNodesResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[shared.NodeListResult])
                res.node_list_result = out
        elif http_res.status_code in [401, 403, 500]:
            pass

        return res

    