/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

/**
 *  Specifies one or more service names that are used to list anomalies.
 */
export class ListAnomaliesForInsightRequestBodyFilters extends SpeakeasyBase {
  /**
   * A collection of the names of Amazon Web Services services.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ServiceCollection" })
  @Type(() => shared.ServiceCollection)
  serviceCollection?: shared.ServiceCollection;
}

/**
 *  A time range used to specify when the behavior of an insight or anomaly started.
 */
export class ListAnomaliesForInsightRequestBodyStartTimeRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "FromTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  fromTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ToTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  toTime?: Date;
}

export class ListAnomaliesForInsightRequestBody extends SpeakeasyBase {
  /**
   * The ID of the Amazon Web Services account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccountId" })
  accountId?: string;

  /**
   *  Specifies one or more service names that are used to list anomalies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Filters" })
  @Type(() => ListAnomaliesForInsightRequestBodyFilters)
  filters?: ListAnomaliesForInsightRequestBodyFilters;

  /**
   * The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  /**
   * The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  /**
   *  A time range used to specify when the behavior of an insight or anomaly started.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StartTimeRange" })
  @Type(() => ListAnomaliesForInsightRequestBodyStartTimeRange)
  startTimeRange?: ListAnomaliesForInsightRequestBodyStartTimeRange;
}

export class ListAnomaliesForInsightRequest extends SpeakeasyBase {
  /**
   *  The ID of the insight. The returned anomalies belong to this insight.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=InsightId",
  })
  insightId: string;

  /**
   * Pagination limit
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=MaxResults",
  })
  maxResults?: string;

  /**
   * Pagination token
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=NextToken",
  })
  nextToken?: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ListAnomaliesForInsightRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class ListAnomaliesForInsightResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listAnomaliesForInsightResponse?: shared.ListAnomaliesForInsightResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
