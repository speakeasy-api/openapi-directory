"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import deletescorebyfieldrequest as shared_deletescorebyfieldrequest
from typing import Optional


@dataclasses.dataclass
class DeletescorebyfieldRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand"""  
    acronym: str = dataclasses.field(metadata={'path_param': { 'field_name': 'acronym', 'style': 'simple', 'explode': False }})
    r"""Two letter word that identifies the data structure"""  
    deletescorebyfield_request: shared_deletescorebyfieldrequest.DeletescorebyfieldRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    field_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'field-name', 'style': 'simple', 'explode': False }})
    r"""Name of the field to remove score from"""  
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Id of the document"""  
    

@dataclasses.dataclass
class DeletescorebyfieldResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    