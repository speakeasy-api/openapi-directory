<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ProposalInput - Represents a proposal in the Marketplace. A proposal is the unit of negotiation between a seller and a buyer and contains deals which are served. Note: You can't update, create, or otherwise modify Private Auction deals through the API. Fields are updatable unless noted otherwise.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ProposalInput
{
    /**
     * Represents a buyer of inventory. Each buyer is identified by a unique Authorized Buyers account ID.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Buyer $billedBuyer
     */
	#[\JMS\Serializer\Annotation\SerializedName('billedBuyer')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Buyer')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Buyer $billedBuyer = null;
    
    /**
     * Represents a buyer of inventory. Each buyer is identified by a unique Authorized Buyers account ID.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Buyer $buyer
     */
	#[\JMS\Serializer\Annotation\SerializedName('buyer')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Buyer')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Buyer $buyer = null;
    
    /**
     * Contact information for the buyer.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ContactInformation> $buyerContacts
     */
	#[\JMS\Serializer\Annotation\SerializedName('buyerContacts')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ContactInformation>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $buyerContacts = null;
    
    /**
     * Buyers are allowed to store certain types of private data in a proposal/deal.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PrivateData $buyerPrivateData
     */
	#[\JMS\Serializer\Annotation\SerializedName('buyerPrivateData')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PrivateData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PrivateData $buyerPrivateData = null;
    
    /**
     * The deals associated with this proposal. For Private Auction proposals (whose deals have NonGuaranteedAuctionTerms), there will only be one deal.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DealInput> $deals
     */
	#[\JMS\Serializer\Annotation\SerializedName('deals')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\DealInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $deals = null;
    
    /**
     * The name for the proposal.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * Represents a seller of inventory. Each seller is identified by a unique Ad Manager account ID.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SellerInput $seller
     */
	#[\JMS\Serializer\Annotation\SerializedName('seller')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SellerInput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SellerInput $seller = null;
    
	public function __construct()
	{
		$this->billedBuyer = null;
		$this->buyer = null;
		$this->buyerContacts = null;
		$this->buyerPrivateData = null;
		$this->deals = null;
		$this->displayName = null;
		$this->seller = null;
	}
}
