// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ProjectsListCollaboratorsAffiliationEnum - Filters the collaborators by their affiliation. `outside` means outside collaborators of a project that are not a member of the project's organization. `direct` means collaborators with permissions to a project, regardless of organization membership status. `all` means all collaborators the authenticated user can see.
type ProjectsListCollaboratorsAffiliationEnum string

const (
	ProjectsListCollaboratorsAffiliationEnumOutside ProjectsListCollaboratorsAffiliationEnum = "outside"
	ProjectsListCollaboratorsAffiliationEnumDirect  ProjectsListCollaboratorsAffiliationEnum = "direct"
	ProjectsListCollaboratorsAffiliationEnumAll     ProjectsListCollaboratorsAffiliationEnum = "all"
)

func (e *ProjectsListCollaboratorsAffiliationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "outside":
		fallthrough
	case "direct":
		fallthrough
	case "all":
		*e = ProjectsListCollaboratorsAffiliationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectsListCollaboratorsAffiliationEnum: %s", s)
	}
}

type ProjectsListCollaboratorsRequest struct {
	// Filters the collaborators by their affiliation. `outside` means outside collaborators of a project that are not a member of the project's organization. `direct` means collaborators with permissions to a project, regardless of organization membership status. `all` means all collaborators the authenticated user can see.
	Affiliation *ProjectsListCollaboratorsAffiliationEnum `queryParam:"style=form,explode=true,name=affiliation"`
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of results per page (max 100).
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// The unique identifier of the project.
	ProjectID int64 `pathParam:"style=simple,explode=false,name=project_id"`
}

type ProjectsListCollaboratorsResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Requires authentication
	BasicError *shared.BasicError
	// Response
	SimpleUsers []shared.SimpleUser
	// Validation failed, or the endpoint has been spammed.
	ValidationError *shared.ValidationError
}
