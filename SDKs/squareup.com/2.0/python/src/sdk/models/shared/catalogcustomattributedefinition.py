"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import catalogcustomattributedefinitionnumberconfig as shared_catalogcustomattributedefinitionnumberconfig
from ..shared import catalogcustomattributedefinitionselectionconfig as shared_catalogcustomattributedefinitionselectionconfig
from ..shared import catalogcustomattributedefinitionstringconfig as shared_catalogcustomattributedefinitionstringconfig
from ..shared import sourceapplication as shared_sourceapplication
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CatalogCustomAttributeDefinition:
    r"""Contains information defining a custom attribute. Custom attributes are
    intended to store additional information about a catalog object or to associate a
    catalog object with an entity in another system. Do not use custom attributes
    to store any sensitive information (personally identifiable information, card details, etc.).
    [Read more about custom attributes](https://developer.squareup.com/docs/catalog-api/add-custom-attributes)
    """
    
    allowed_object_types: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowed_object_types') }})
    r"""The set of Catalog Object Types that this Custom Attribute may be applied to.
    Currently, only `ITEM` and `ITEM_VARIATION` are allowed. At least one type must be included.
    """  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of this definition for API and seller-facing UI purposes.
    The name must be unique within the (merchant, application) pair. Required.
    May not be empty and may not exceed 255 characters. Can be modified after creation.
    """  
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of this custom attribute. Cannot be modified after creation.
    Required.
    """  
    app_visibility: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('app_visibility'), 'exclude': lambda f: f is None }})
    r"""The visibility of a custom attribute to applications other than the application
    that created the attribute.
    """  
    custom_attribute_usage_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('custom_attribute_usage_count'), 'exclude': lambda f: f is None }})
    r"""__Read-only.__ The number of custom attributes that reference this
    custom attribute definition. Set by the server in response to a ListCatalog
    request with `include_counts` set to `true`.  If the actual count is greater
    than 100, `custom_attribute_usage_count` will be set to `100`.
    """  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Seller-oriented description of the meaning of this Custom Attribute,
    any constraints that the seller should observe, etc. May be displayed as a tooltip in Square UIs.
    """  
    key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key'), 'exclude': lambda f: f is None }})
    r"""The name of the desired custom attribute key that can be used to access
    the custom attribute value on catalog objects. Cannot be modified after the
    custom attribute definition has been created.
    Must be between 1 and 60 characters, and may only contain the characters `[a-zA-Z0-9_-]`.
    """  
    number_config: Optional[shared_catalogcustomattributedefinitionnumberconfig.CatalogCustomAttributeDefinitionNumberConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number_config'), 'exclude': lambda f: f is None }})  
    selection_config: Optional[shared_catalogcustomattributedefinitionselectionconfig.CatalogCustomAttributeDefinitionSelectionConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selection_config'), 'exclude': lambda f: f is None }})
    r"""Configuration associated with `SELECTION`-type custom attribute definitions."""  
    seller_visibility: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('seller_visibility'), 'exclude': lambda f: f is None }})
    r"""The visibility of a custom attribute in seller-facing UIs (including Square Point
    of Sale applications and Square Dashboard). May be modified.
    """  
    source_application: Optional[shared_sourceapplication.SourceApplication] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source_application'), 'exclude': lambda f: f is None }})
    r"""Provides information about the application used to generate a change."""  
    string_config: Optional[shared_catalogcustomattributedefinitionstringconfig.CatalogCustomAttributeDefinitionStringConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('string_config'), 'exclude': lambda f: f is None }})
    r"""Configuration associated with Custom Attribute Definitions of type `STRING`."""  
    