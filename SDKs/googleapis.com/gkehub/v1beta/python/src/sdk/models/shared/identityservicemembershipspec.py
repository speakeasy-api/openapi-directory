"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import identityserviceauthmethod as shared_identityserviceauthmethod
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IdentityServiceMembershipSpec:
    r"""**Anthos Identity Service**: Configuration for a single Membership."""
    
    auth_methods: Optional[list[shared_identityserviceauthmethod.IdentityServiceAuthMethod]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authMethods'), 'exclude': lambda f: f is None }})
    r"""A member may support multiple auth methods."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IdentityServiceMembershipSpecInput:
    r"""**Anthos Identity Service**: Configuration for a single Membership."""
    
    auth_methods: Optional[list[shared_identityserviceauthmethod.IdentityServiceAuthMethodInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authMethods'), 'exclude': lambda f: f is None }})
    r"""A member may support multiple auth methods."""  
    