// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GeometryTypeEnum string

const (
	GeometryTypeEnumPoint        GeometryTypeEnum = "Point"
	GeometryTypeEnumPolygon      GeometryTypeEnum = "Polygon"
	GeometryTypeEnumMultiPolygon GeometryTypeEnum = "MultiPolygon"
)

func (e GeometryTypeEnum) ToPointer() *GeometryTypeEnum {
	return &e
}

func (e *GeometryTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Point":
		fallthrough
	case "Polygon":
		fallthrough
	case "MultiPolygon":
		*e = GeometryTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GeometryTypeEnum: %v", v)
	}
}

// Geometry - GeoJSON
type Geometry struct {
	Coordinates []string         `json:"coordinates"`
	Type        GeometryTypeEnum `json:"type"`
}
