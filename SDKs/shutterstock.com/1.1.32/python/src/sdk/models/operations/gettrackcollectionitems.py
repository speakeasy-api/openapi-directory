"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import collectionitemdatalist as shared_collectionitemdatalist
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetTrackCollectionItemsSecurity:
    
    customer_access_code: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class GetTrackCollectionItemsSortEnum(str, Enum):
    r"""Sort order"""
    NEWEST = 'newest'
    OLDEST = 'oldest'


@dataclasses.dataclass
class GetTrackCollectionItemsRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Collection ID"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Page number"""  
    per_page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': True }})
    r"""Number of results per page"""  
    share_code: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'share_code', 'style': 'form', 'explode': True }})
    r"""Code to retrieve the contents of a shared collection"""  
    sort: Optional[GetTrackCollectionItemsSortEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""Sort order"""  
    

@dataclasses.dataclass
class GetTrackCollectionItemsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    collection_item_data_list: Optional[shared_collectionitemdatalist.CollectionItemDataList] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    