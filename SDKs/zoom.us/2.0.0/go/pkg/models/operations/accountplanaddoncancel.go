// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type AccountPlanAddonCancelSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

// AccountPlanAddonCancelApplicationJSONActionEnum - The action that needs to be taken for this sub account. Value must be set to "cancel".
type AccountPlanAddonCancelApplicationJSONActionEnum string

const (
	AccountPlanAddonCancelApplicationJSONActionEnumCancel AccountPlanAddonCancelApplicationJSONActionEnum = "cancel"
)

func (e *AccountPlanAddonCancelApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "cancel":
		*e = AccountPlanAddonCancelApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlanAddonCancelApplicationJSONActionEnum: %s", s)
	}
}

// AccountPlanAddonCancelApplicationJSONReasonEnum - The reason for the cancellation of plan. Reason options:<br>`1` - I am no longer working remote.<br>`2` - I had challenges getting the support I needed.<br>`3` - Features in the Basic Free Plan are sufficient.<br>`4` - The expense is too high.<br>`5` - I purchased the wrong product.<br> `6` - Paid purchase not needed right now, will repurchase in the future.
type AccountPlanAddonCancelApplicationJSONReasonEnum string

const (
	AccountPlanAddonCancelApplicationJSONReasonEnumOne   AccountPlanAddonCancelApplicationJSONReasonEnum = "1"
	AccountPlanAddonCancelApplicationJSONReasonEnumTwo   AccountPlanAddonCancelApplicationJSONReasonEnum = "2"
	AccountPlanAddonCancelApplicationJSONReasonEnumThree AccountPlanAddonCancelApplicationJSONReasonEnum = "3"
	AccountPlanAddonCancelApplicationJSONReasonEnumFour  AccountPlanAddonCancelApplicationJSONReasonEnum = "4"
	AccountPlanAddonCancelApplicationJSONReasonEnumFive  AccountPlanAddonCancelApplicationJSONReasonEnum = "5"
	AccountPlanAddonCancelApplicationJSONReasonEnumSix   AccountPlanAddonCancelApplicationJSONReasonEnum = "6"
)

func (e *AccountPlanAddonCancelApplicationJSONReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "2":
		fallthrough
	case "3":
		fallthrough
	case "4":
		fallthrough
	case "5":
		fallthrough
	case "6":
		*e = AccountPlanAddonCancelApplicationJSONReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountPlanAddonCancelApplicationJSONReasonEnum: %s", s)
	}
}

// AccountPlanAddonCancelApplicationJSON - Account plan object
type AccountPlanAddonCancelApplicationJSON struct {
	// The action that needs to be taken for this sub account. Value must be set to "cancel".
	Action *AccountPlanAddonCancelApplicationJSONActionEnum `json:"action,omitempty"`
	// Additional comments about the cancellation decision.
	Comment *string `json:"comment,omitempty"`
	// The reason for the cancellation of plan. Reason options:<br>`1` - I am no longer working remote.<br>`2` - I had challenges getting the support I needed.<br>`3` - Features in the Basic Free Plan are sufficient.<br>`4` - The expense is too high.<br>`5` - I purchased the wrong product.<br> `6` - Paid purchase not needed right now, will repurchase in the future.
	Reason *AccountPlanAddonCancelApplicationJSONReasonEnum `json:"reason,omitempty"`
	// Plan [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans).
	Type *string `json:"type,omitempty"`
}

type AccountPlanAddonCancelRequest struct {
	RequestBody *AccountPlanAddonCancelApplicationJSON `request:"mediaType=application/json"`
	AccountID   string                                 `pathParam:"style=simple,explode=false,name=accountId"`
}

type AccountPlanAddonCancelResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `204`<br>
	// Plan cancelled successfully.
	AccountPlanAddonCancel204ApplicationJSONAny interface{}
}
