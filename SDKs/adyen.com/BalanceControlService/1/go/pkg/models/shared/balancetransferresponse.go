// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// BalanceTransferResponseStatusEnum - The status of the balance transfer. Possible values: **transferred**, **failed**, **error**, and **notEnoughBalance**.
type BalanceTransferResponseStatusEnum string

const (
	BalanceTransferResponseStatusEnumError            BalanceTransferResponseStatusEnum = "error"
	BalanceTransferResponseStatusEnumFailed           BalanceTransferResponseStatusEnum = "failed"
	BalanceTransferResponseStatusEnumNotEnoughBalance BalanceTransferResponseStatusEnum = "notEnoughBalance"
	BalanceTransferResponseStatusEnumTransferred      BalanceTransferResponseStatusEnum = "transferred"
)

func (e BalanceTransferResponseStatusEnum) ToPointer() *BalanceTransferResponseStatusEnum {
	return &e
}

func (e *BalanceTransferResponseStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "error":
		fallthrough
	case "failed":
		fallthrough
	case "notEnoughBalance":
		fallthrough
	case "transferred":
		*e = BalanceTransferResponseStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BalanceTransferResponseStatusEnum: %v", v)
	}
}

// BalanceTransferResponseTypeEnum - The type of balance transfer. Possible values: **tax**, **fee**, **terminalSale**, **credit**, **debit**, and **adjustment**.
type BalanceTransferResponseTypeEnum string

const (
	BalanceTransferResponseTypeEnumTax          BalanceTransferResponseTypeEnum = "tax"
	BalanceTransferResponseTypeEnumFee          BalanceTransferResponseTypeEnum = "fee"
	BalanceTransferResponseTypeEnumTerminalSale BalanceTransferResponseTypeEnum = "terminalSale"
	BalanceTransferResponseTypeEnumCredit       BalanceTransferResponseTypeEnum = "credit"
	BalanceTransferResponseTypeEnumDebit        BalanceTransferResponseTypeEnum = "debit"
	BalanceTransferResponseTypeEnumAdjustment   BalanceTransferResponseTypeEnum = "adjustment"
)

func (e BalanceTransferResponseTypeEnum) ToPointer() *BalanceTransferResponseTypeEnum {
	return &e
}

func (e *BalanceTransferResponseTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "tax":
		fallthrough
	case "fee":
		fallthrough
	case "terminalSale":
		fallthrough
	case "credit":
		fallthrough
	case "debit":
		fallthrough
	case "adjustment":
		*e = BalanceTransferResponseTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BalanceTransferResponseTypeEnum: %v", v)
	}
}

// BalanceTransferResponse - OK - the request has succeeded.
type BalanceTransferResponse struct {
	Amount Amount `json:"amount"`
	// The date when the balance transfer was requested.
	CreatedAt time.Time `json:"createdAt"`
	// A human-readable description for the transfer. You can use alphanumeric characters and hyphens. We recommend sending a maximum of 140 characters, otherwise the description may be truncated.
	Description *string `json:"description,omitempty"`
	// The unique identifier of the source merchant account from which funds are deducted.
	FromMerchant string `json:"fromMerchant"`
	// Adyen's 16-character string reference associated with the balance transfer.
	PspReference string `json:"pspReference"`
	// A reference for the balance transfer. If you don't provide this in the request, Adyen generates a unique reference.
	// Maximum length: 80 characters.
	Reference *string `json:"reference,omitempty"`
	// The status of the balance transfer. Possible values: **transferred**, **failed**, **error**, and **notEnoughBalance**.
	Status BalanceTransferResponseStatusEnum `json:"status"`
	// The unique identifier of the destination merchant account from which funds are transferred.
	ToMerchant string `json:"toMerchant"`
	// The type of balance transfer. Possible values: **tax**, **fee**, **terminalSale**, **credit**, **debit**, and **adjustment**.
	Type BalanceTransferResponseTypeEnum `json:"type"`
}
