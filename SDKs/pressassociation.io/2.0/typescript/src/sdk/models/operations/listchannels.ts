/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class ListChannelsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=apikey",
  })
  apikey: string;
}

export class ListChannelsRequest extends SpeakeasyBase {
  /**
   * Flag to display Legacy and Provider Ids.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=aliases",
  })
  aliases?: boolean;

  /**
   * Date of the Channel State to select, this will display channel names and attributes in the future or past.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=date" })
  date?: string;

  /**
   * The identifier for the selected platform. Multiple platforms can be passed to the API without a region Id. Passing multiple platforms without a region will not return epg numbers as these are linked to a platform and region.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=platformId",
  })
  platformId?: string;

  /**
   * The platform region ID for the channel selection.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=regionId",
  })
  regionId?: string;

  /**
   * The End Date for the schedule.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=scheduleEnd",
  })
  scheduleEnd?: string;

  /**
   * The Start Date for the schedule.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=scheduleStart",
  })
  scheduleStart?: string;

  /**
   * Schedule Updated Since
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=scheduleUpdatedSince",
  })
  scheduleUpdatedSince?: string;
}

export class ListChannelsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  @SpeakeasyMetadata()
  listChannels200ApplicationJSONObject?: Record<string, any>;
}
