// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETRevokeClientVpnIngressActionEnum
type GETRevokeClientVpnIngressActionEnum string

const (
	GETRevokeClientVpnIngressActionEnumRevokeClientVpnIngress GETRevokeClientVpnIngressActionEnum = "RevokeClientVpnIngress"
)

func (e GETRevokeClientVpnIngressActionEnum) ToPointer() *GETRevokeClientVpnIngressActionEnum {
	return &e
}

func (e *GETRevokeClientVpnIngressActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RevokeClientVpnIngress":
		*e = GETRevokeClientVpnIngressActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRevokeClientVpnIngressActionEnum: %v", v)
	}
}

// GETRevokeClientVpnIngressVersionEnum
type GETRevokeClientVpnIngressVersionEnum string

const (
	GETRevokeClientVpnIngressVersionEnumTwoThousandAndSixteen1115 GETRevokeClientVpnIngressVersionEnum = "2016-11-15"
)

func (e GETRevokeClientVpnIngressVersionEnum) ToPointer() *GETRevokeClientVpnIngressVersionEnum {
	return &e
}

func (e *GETRevokeClientVpnIngressVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETRevokeClientVpnIngressVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRevokeClientVpnIngressVersionEnum: %v", v)
	}
}

type GETRevokeClientVpnIngressRequest struct {
	// The ID of the Active Directory group for which to revoke access.
	AccessGroupID *string                             `queryParam:"style=form,explode=true,name=AccessGroupId"`
	Action        GETRevokeClientVpnIngressActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The ID of the Client VPN endpoint with which the authorization rule is associated.
	ClientVpnEndpointID string `queryParam:"style=form,explode=true,name=ClientVpnEndpointId"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// Indicates whether access should be revoked for all clients.
	RevokeAllGroups *bool `queryParam:"style=form,explode=true,name=RevokeAllGroups"`
	// The IPv4 address range, in CIDR notation, of the network for which access is being removed.
	TargetNetworkCidr string                               `queryParam:"style=form,explode=true,name=TargetNetworkCidr"`
	Version           GETRevokeClientVpnIngressVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETRevokeClientVpnIngressResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
