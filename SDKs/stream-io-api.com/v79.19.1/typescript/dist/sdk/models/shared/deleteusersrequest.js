"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeleteUsersRequest = exports.DeleteUsersRequestDeleteUserEnum = exports.DeleteUsersRequestDeleteMessagesEnum = exports.DeleteUsersRequestDeleteConversationsEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Conversation channels delete mode.
 *
 * @remarks
 * Conversation channel is any channel which only has two members one of which is the user being deleted.
 *
 * * null or empty string - doesn't delete any conversation channels
 * * soft - marks all conversation channels as deleted (same effect as Delete Channels with 'hard' option disabled)
 * * hard - deletes channel and all its data completely including messages (same effect as Delete Channels with 'hard' option enabled)
 *
 */
var DeleteUsersRequestDeleteConversationsEnum;
(function (DeleteUsersRequestDeleteConversationsEnum) {
    DeleteUsersRequestDeleteConversationsEnum["Soft"] = "soft";
    DeleteUsersRequestDeleteConversationsEnum["Hard"] = "hard";
})(DeleteUsersRequestDeleteConversationsEnum = exports.DeleteUsersRequestDeleteConversationsEnum || (exports.DeleteUsersRequestDeleteConversationsEnum = {}));
/**
 * Message delete mode.
 *
 * @remarks
 *
 * * null or empty string - doesn't delete user messages
 * * soft - marks all user messages as deleted without removing any related message data
 * * pruning - marks all user messages as deleted, nullifies message information and removes some message data such as reactions and flags
 * * hard - deletes messages completely with all related information
 *
 */
var DeleteUsersRequestDeleteMessagesEnum;
(function (DeleteUsersRequestDeleteMessagesEnum) {
    DeleteUsersRequestDeleteMessagesEnum["Soft"] = "soft";
    DeleteUsersRequestDeleteMessagesEnum["Pruning"] = "pruning";
    DeleteUsersRequestDeleteMessagesEnum["Hard"] = "hard";
})(DeleteUsersRequestDeleteMessagesEnum = exports.DeleteUsersRequestDeleteMessagesEnum || (exports.DeleteUsersRequestDeleteMessagesEnum = {}));
/**
 * User delete mode.
 *
 * @remarks
 *
 * * soft - marks user as deleted and retains all user data
 * * pruning - marks user as deleted and nullifies user information
 * * hard - deletes user completely. Requires 'hard' option for messages and conversations as well
 *
 */
var DeleteUsersRequestDeleteUserEnum;
(function (DeleteUsersRequestDeleteUserEnum) {
    DeleteUsersRequestDeleteUserEnum["Soft"] = "soft";
    DeleteUsersRequestDeleteUserEnum["Pruning"] = "pruning";
    DeleteUsersRequestDeleteUserEnum["Hard"] = "hard";
})(DeleteUsersRequestDeleteUserEnum = exports.DeleteUsersRequestDeleteUserEnum || (exports.DeleteUsersRequestDeleteUserEnum = {}));
var DeleteUsersRequest = /** @class */ (function (_super) {
    __extends(DeleteUsersRequest, _super);
    function DeleteUsersRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "conversations" }),
        __metadata("design:type", String)
    ], DeleteUsersRequest.prototype, "conversations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "messages" }),
        __metadata("design:type", String)
    ], DeleteUsersRequest.prototype, "messages", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "new_channel_owner_id" }),
        __metadata("design:type", String)
    ], DeleteUsersRequest.prototype, "newChannelOwnerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "user" }),
        __metadata("design:type", String)
    ], DeleteUsersRequest.prototype, "user", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "user_ids" }),
        __metadata("design:type", Array)
    ], DeleteUsersRequest.prototype, "userIds", void 0);
    return DeleteUsersRequest;
}(utils_1.SpeakeasyBase));
exports.DeleteUsersRequest = DeleteUsersRequest;
