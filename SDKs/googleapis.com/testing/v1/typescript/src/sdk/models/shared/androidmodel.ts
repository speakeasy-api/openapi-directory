/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PerAndroidVersionInfo } from "./perandroidversioninfo";
import { Expose, Type } from "class-transformer";

/**
 * Whether this device is virtual or physical.
 */
export enum AndroidModelFormEnum {
  DeviceFormUnspecified = "DEVICE_FORM_UNSPECIFIED",
  Virtual = "VIRTUAL",
  Physical = "PHYSICAL",
  Emulator = "EMULATOR",
}

/**
 * Whether this device is a phone, tablet, wearable, etc.
 */
export enum AndroidModelFormFactorEnum {
  DeviceFormFactorUnspecified = "DEVICE_FORM_FACTOR_UNSPECIFIED",
  Phone = "PHONE",
  Tablet = "TABLET",
  Wearable = "WEARABLE",
}

/**
 * A description of an Android device tests may be run on.
 */
export class AndroidModel extends SpeakeasyBase {
  /**
   * The company that this device is branded with. Example: "Google", "Samsung".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brand" })
  brand?: string;

  /**
   * The name of the industrial design. This corresponds to android.os.Build.DEVICE.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "codename" })
  codename?: string;

  /**
   * Whether this device is virtual or physical.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "form" })
  form?: AndroidModelFormEnum;

  /**
   * Whether this device is a phone, tablet, wearable, etc.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "formFactor" })
  formFactor?: AndroidModelFormFactorEnum;

  /**
   * The unique opaque id for this model. Use this for invoking the TestExecutionService.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * True if and only if tests with this model are recorded by stitching together screenshots. See use_low_spec_video_recording in device config.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lowFpsVideoRecording" })
  lowFpsVideoRecording?: boolean;

  /**
   * The manufacturer of this device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manufacturer" })
  manufacturer?: string;

  /**
   * The human-readable marketing name for this device model. Examples: "Nexus 5", "Galaxy S5".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Version-specific information of an Android model.
   */
  @SpeakeasyMetadata({ elemType: PerAndroidVersionInfo })
  @Expose({ name: "perVersionInfo" })
  @Type(() => PerAndroidVersionInfo)
  perVersionInfo?: PerAndroidVersionInfo[];

  /**
   * Screen density in DPI. This corresponds to ro.sf.lcd_density
   */
  @SpeakeasyMetadata()
  @Expose({ name: "screenDensity" })
  screenDensity?: number;

  /**
   * Screen size in the horizontal (X) dimension measured in pixels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "screenX" })
  screenX?: number;

  /**
   * Screen size in the vertical (Y) dimension measured in pixels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "screenY" })
  screenY?: number;

  /**
   * The list of supported ABIs for this device. This corresponds to either android.os.Build.SUPPORTED_ABIS (for API level 21 and above) or android.os.Build.CPU_ABI/CPU_ABI2. The most preferred ABI is the first element in the list. Elements are optionally prefixed by "version_id:" (where version_id is the id of an AndroidVersion), denoting an ABI that is supported only on a particular version.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "supportedAbis" })
  supportedAbis?: string[];

  /**
   * The set of Android versions this device supports.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "supportedVersionIds" })
  supportedVersionIds?: string[];

  /**
   * Tags for this dimension. Examples: "default", "preview", "deprecated".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  /**
   * URL of a thumbnail image (photo) of the device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumbnailUrl" })
  thumbnailUrl?: string;
}
