// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RuntimeEnvironmentIPConfigurationEnum - Optional. Configuration for VM IPs.
type RuntimeEnvironmentIPConfigurationEnum string

const (
	RuntimeEnvironmentIPConfigurationEnumWorkerIPUnspecified RuntimeEnvironmentIPConfigurationEnum = "WORKER_IP_UNSPECIFIED"
	RuntimeEnvironmentIPConfigurationEnumWorkerIPPublic      RuntimeEnvironmentIPConfigurationEnum = "WORKER_IP_PUBLIC"
	RuntimeEnvironmentIPConfigurationEnumWorkerIPPrivate     RuntimeEnvironmentIPConfigurationEnum = "WORKER_IP_PRIVATE"
)

func (e RuntimeEnvironmentIPConfigurationEnum) ToPointer() *RuntimeEnvironmentIPConfigurationEnum {
	return &e
}

func (e *RuntimeEnvironmentIPConfigurationEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WORKER_IP_UNSPECIFIED":
		fallthrough
	case "WORKER_IP_PUBLIC":
		fallthrough
	case "WORKER_IP_PRIVATE":
		*e = RuntimeEnvironmentIPConfigurationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RuntimeEnvironmentIPConfigurationEnum: %v", v)
	}
}

// RuntimeEnvironment - The environment values to set at runtime.
type RuntimeEnvironment struct {
	// Optional. Additional experiment flags for the job, specified with the `--experiments` option.
	AdditionalExperiments []string `json:"additionalExperiments,omitempty"`
	// Optional. Additional user labels to be specified for the job. Keys and values should follow the restrictions specified in the [labeling restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) page. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1kg", "count": "3" }.
	AdditionalUserLabels map[string]string `json:"additionalUserLabels,omitempty"`
	// Optional. Whether to bypass the safety checks for the job's temporary directory. Use with caution.
	BypassTempDirValidation *bool `json:"bypassTempDirValidation,omitempty"`
	// Optional. Whether to enable Streaming Engine for the job.
	EnableStreamingEngine *bool `json:"enableStreamingEngine,omitempty"`
	// Optional. Configuration for VM IPs.
	IPConfiguration *RuntimeEnvironmentIPConfigurationEnum `json:"ipConfiguration,omitempty"`
	// Optional. Name for the Cloud KMS key for the job. Key format is: projects//locations//keyRings//cryptoKeys/
	KmsKeyName *string `json:"kmsKeyName,omitempty"`
	// Optional. The machine type to use for the job. Defaults to the value from the template if not specified.
	MachineType *string `json:"machineType,omitempty"`
	// Optional. The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000. The default value is 1.
	MaxWorkers *int `json:"maxWorkers,omitempty"`
	// Optional. Network to which VMs will be assigned. If empty or unspecified, the service will use the network "default".
	Network *string `json:"network,omitempty"`
	// Optional. The initial number of Google Compute Engine instances for the job. The default value is 11.
	NumWorkers *int `json:"numWorkers,omitempty"`
	// Optional. The email address of the service account to run the job as.
	ServiceAccountEmail *string `json:"serviceAccountEmail,omitempty"`
	// Optional. Subnetwork to which VMs will be assigned, if desired. You can specify a subnetwork using either a complete URL or an abbreviated path. Expected to be of the form "https://www.googleapis.com/compute/v1/projects/HOST_PROJECT_ID/regions/REGION/subnetworks/SUBNETWORK" or "regions/REGION/subnetworks/SUBNETWORK". If the subnetwork is located in a Shared VPC network, you must use the complete URL.
	Subnetwork *string `json:"subnetwork,omitempty"`
	// Required. The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with `gs://`.
	TempLocation *string `json:"tempLocation,omitempty"`
	// Required. The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region.
	WorkerRegion *string `json:"workerRegion,omitempty"`
	// Optional. The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity. If both `worker_zone` and `zone` are set, `worker_zone` takes precedence.
	WorkerZone *string `json:"workerZone,omitempty"`
	// Optional. The Compute Engine [availability zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones) for launching worker instances to run your pipeline. In the future, worker_zone will take precedence.
	Zone *string `json:"zone,omitempty"`
}
