/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * DestinyResponsesDestinyCharacterResponse - The response contract for GetDestinyCharacter, with components that can be returned for character and item-level data.
 */
public class DestinyResponsesDestinyCharacterResponse {
    /**
     * Activity data - info about current activities available to the player.
     * COMPONENT TYPE: CharacterActivities
     */
    
    public DestinyResponsesDestinyCharacterResponseActivities activities;

    public DestinyResponsesDestinyCharacterResponse withActivities(DestinyResponsesDestinyCharacterResponseActivities activities) {
        this.activities = activities;
        return this;
    }
    
    /**
     * Base information about the character in question.
     * COMPONENT TYPE: Characters
     */
    
    public DestinyResponsesDestinyCharacterResponseCharacter character;

    public DestinyResponsesDestinyCharacterResponse withCharacter(DestinyResponsesDestinyCharacterResponseCharacter character) {
        this.character = character;
        return this;
    }
    
    /**
     * COMPONENT TYPE: Collectibles
     */
    
    public DestinyResponsesDestinyCharacterResponseCollectibles collectibles;

    public DestinyResponsesDestinyCharacterResponse withCollectibles(DestinyResponsesDestinyCharacterResponseCollectibles collectibles) {
        this.collectibles = collectibles;
        return this;
    }
    
    /**
     * A "lookup" convenience component that can be used to quickly check if the character has access to items that can be used for purchasing.
     * COMPONENT TYPE: CurrencyLookups
     */
    
    public DestinyResponsesDestinyCharacterResponseCurrencyLookups currencyLookups;

    public DestinyResponsesDestinyCharacterResponse withCurrencyLookups(DestinyResponsesDestinyCharacterResponseCurrencyLookups currencyLookups) {
        this.currencyLookups = currencyLookups;
        return this;
    }
    
    /**
     * Equipped items on the character.
     * COMPONENT TYPE: CharacterEquipment
     */
    
    public DestinyResponsesDestinyCharacterResponseEquipment equipment;

    public DestinyResponsesDestinyCharacterResponse withEquipment(DestinyResponsesDestinyCharacterResponseEquipment equipment) {
        this.equipment = equipment;
        return this;
    }
    
    /**
     * The character-level non-equipped inventory items.
     * COMPONENT TYPE: CharacterInventories
     */
    
    public DestinyResponsesDestinyCharacterResponseInventory inventory;

    public DestinyResponsesDestinyCharacterResponse withInventory(DestinyResponsesDestinyCharacterResponseInventory inventory) {
        this.inventory = inventory;
        return this;
    }
    
    /**
     * The set of components belonging to the player's instanced items.
     * COMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component types.]
     */
    
    public DestinyResponsesDestinyCharacterResponseItemComponents itemComponents;

    public DestinyResponsesDestinyCharacterResponse withItemComponents(DestinyResponsesDestinyCharacterResponseItemComponents itemComponents) {
        this.itemComponents = itemComponents;
        return this;
    }
    
    /**
     * Items available from Kiosks that are available to this specific character. 
     * COMPONENT TYPE: Kiosks
     */
    
    public DestinyResponsesDestinyCharacterResponseKiosks kiosks;

    public DestinyResponsesDestinyCharacterResponse withKiosks(DestinyResponsesDestinyCharacterResponseKiosks kiosks) {
        this.kiosks = kiosks;
        return this;
    }
    
    /**
     * The loadouts available to the character.
     * COMPONENT TYPE: CharacterLoadouts
     */
    
    public DestinyResponsesDestinyCharacterResponseLoadouts loadouts;

    public DestinyResponsesDestinyCharacterResponse withLoadouts(DestinyResponsesDestinyCharacterResponseLoadouts loadouts) {
        this.loadouts = loadouts;
        return this;
    }
    
    /**
     * When sockets refer to reusable Plug Sets (see DestinyPlugSetDefinition for more info), this is the set of plugs and their states that are scoped to this character.
     * This comes back with ItemSockets, as it is needed for a complete picture of the sockets on requested items.
     * COMPONENT TYPE: ItemSockets
     */
    
    public DestinyResponsesDestinyCharacterResponsePlugSets plugSets;

    public DestinyResponsesDestinyCharacterResponse withPlugSets(DestinyResponsesDestinyCharacterResponsePlugSets plugSets) {
        this.plugSets = plugSets;
        return this;
    }
    
    /**
     * COMPONENT TYPE: PresentationNodes
     */
    
    public DestinyResponsesDestinyCharacterResponsePresentationNodes presentationNodes;

    public DestinyResponsesDestinyCharacterResponse withPresentationNodes(DestinyResponsesDestinyCharacterResponsePresentationNodes presentationNodes) {
        this.presentationNodes = presentationNodes;
        return this;
    }
    
    /**
     * Character progression data, including Milestones.
     * COMPONENT TYPE: CharacterProgressions
     */
    
    public DestinyResponsesDestinyCharacterResponseProgressions progressions;

    public DestinyResponsesDestinyCharacterResponse withProgressions(DestinyResponsesDestinyCharacterResponseProgressions progressions) {
        this.progressions = progressions;
        return this;
    }
    
    /**
     * COMPONENT TYPE: Records
     */
    
    public DestinyResponsesDestinyCharacterResponseRecords records;

    public DestinyResponsesDestinyCharacterResponse withRecords(DestinyResponsesDestinyCharacterResponseRecords records) {
        this.records = records;
        return this;
    }
    
    /**
     * Character rendering data - a minimal set of information about equipment and dyes used for rendering.
     * COMPONENT TYPE: CharacterRenderData
     */
    
    public DestinyResponsesDestinyCharacterResponseRenderData renderData;

    public DestinyResponsesDestinyCharacterResponse withRenderData(DestinyResponsesDestinyCharacterResponseRenderData renderData) {
        this.renderData = renderData;
        return this;
    }
    
    /**
     * The set of components belonging to the player's UNinstanced items. Because apparently now those too can have information relevant to the character's state.
     * COMPONENT TYPE: [See inside the DestinyItemComponentSet contract for component types.]
     */
    
    public DestinyResponsesDestinyCharacterResponseUninstancedItemComponents uninstancedItemComponents;

    public DestinyResponsesDestinyCharacterResponse withUninstancedItemComponents(DestinyResponsesDestinyCharacterResponseUninstancedItemComponents uninstancedItemComponents) {
        this.uninstancedItemComponents = uninstancedItemComponents;
        return this;
    }
    
    public DestinyResponsesDestinyCharacterResponse(){}
}
