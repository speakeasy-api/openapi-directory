/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The role that this user should have in the team.
 */
export enum TeamsAddOrUpdateMembershipForUserLegacyRequestBodyRoleEnum {
  Member = "member",
  Maintainer = "maintainer",
}

export class TeamsAddOrUpdateMembershipForUserLegacyRequestBody extends SpeakeasyBase {
  /**
   * The role that this user should have in the team.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: TeamsAddOrUpdateMembershipForUserLegacyRequestBodyRoleEnum;
}

export class TeamsAddOrUpdateMembershipForUserLegacyRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: TeamsAddOrUpdateMembershipForUserLegacyRequestBody;

  /**
   * The unique identifier of the team.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=team_id",
  })
  teamId: number;

  /**
   * The handle for the GitHub user account.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=username",
  })
  username: string;
}

export class TeamsAddOrUpdateMembershipForUserLegacyResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Resource not found
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  teamMembership?: shared.TeamMembership;
}
