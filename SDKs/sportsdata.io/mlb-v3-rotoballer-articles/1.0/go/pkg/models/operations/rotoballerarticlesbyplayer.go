// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RotoballerArticlesByPlayerFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type RotoballerArticlesByPlayerFormatEnum string

const (
	RotoballerArticlesByPlayerFormatEnumXML  RotoballerArticlesByPlayerFormatEnum = "xml"
	RotoballerArticlesByPlayerFormatEnumJSON RotoballerArticlesByPlayerFormatEnum = "json"
)

func (e *RotoballerArticlesByPlayerFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "xml":
		fallthrough
	case "json":
		*e = RotoballerArticlesByPlayerFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RotoballerArticlesByPlayerFormatEnum: %s", s)
	}
}

type RotoballerArticlesByPlayerPathParams struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format RotoballerArticlesByPlayerFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Unique FantasyData Player ID.
	// Example:<code>10000507</code>.
	Playerid string `pathParam:"style=simple,explode=false,name=playerid"`
}

type RotoballerArticlesByPlayerRequest struct {
	PathParams RotoballerArticlesByPlayerPathParams
}

type RotoballerArticlesByPlayerResponse struct {
	Articles    []shared.Article
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
