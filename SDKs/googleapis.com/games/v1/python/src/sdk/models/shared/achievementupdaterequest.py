"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import gamesachievementincrement as shared_gamesachievementincrement
from ..shared import gamesachievementsetstepsatleast as shared_gamesachievementsetstepsatleast
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AchievementUpdateRequestUpdateTypeEnum(str, Enum):
    r"""The type of update being applied."""
    ACHIEVEMENT_UPDATE_TYPE_UNSPECIFIED = 'ACHIEVEMENT_UPDATE_TYPE_UNSPECIFIED'
    REVEAL = 'REVEAL'
    UNLOCK = 'UNLOCK'
    INCREMENT = 'INCREMENT'
    SET_STEPS_AT_LEAST = 'SET_STEPS_AT_LEAST'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AchievementUpdateRequest:
    r"""A request to update an achievement."""
    
    achievement_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('achievementId'), 'exclude': lambda f: f is None }})
    r"""The achievement this update is being applied to."""  
    increment_payload: Optional[shared_gamesachievementincrement.GamesAchievementIncrement] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('incrementPayload'), 'exclude': lambda f: f is None }})
    r"""The payload to request to increment an achievement."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementUpdateRequest`."""  
    set_steps_at_least_payload: Optional[shared_gamesachievementsetstepsatleast.GamesAchievementSetStepsAtLeast] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('setStepsAtLeastPayload'), 'exclude': lambda f: f is None }})
    r"""The payload to request to increment an achievement."""  
    update_type: Optional[AchievementUpdateRequestUpdateTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateType'), 'exclude': lambda f: f is None }})
    r"""The type of update being applied."""  
    