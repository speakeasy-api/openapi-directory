/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LiveStreamConfigurationIssue } from "./livestreamconfigurationissue";
import { Expose, Type } from "class-transformer";

/**
 * The status code of this stream
 */
export enum LiveStreamHealthStatusStatusEnum {
  Good = "good",
  Ok = "ok",
  Bad = "bad",
  NoData = "noData",
  Revoked = "revoked",
}

export class LiveStreamHealthStatus extends SpeakeasyBase {
  /**
   * The configurations issues on this stream
   */
  @SpeakeasyMetadata({ elemType: LiveStreamConfigurationIssue })
  @Expose({ name: "configurationIssues" })
  @Type(() => LiveStreamConfigurationIssue)
  configurationIssues?: LiveStreamConfigurationIssue[];

  /**
   * The last time this status was updated (in seconds)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdateTimeSeconds" })
  lastUpdateTimeSeconds?: string;

  /**
   * The status code of this stream
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: LiveStreamHealthStatusStatusEnum;
}
