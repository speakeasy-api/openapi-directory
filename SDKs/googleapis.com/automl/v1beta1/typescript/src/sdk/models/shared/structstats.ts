/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { DataStats } from "./datastats";
import { Expose, Transform } from "class-transformer";

/**
 * The data statistics of a series of STRUCT values.
 */
export class StructStats extends SpeakeasyBase {
  /**
   * Map from a field name of the struct to data stats aggregated over series of all data in that field across all the structs.
   */
  @SpeakeasyMetadata({ elemType: DataStats })
  @Expose({ name: "fieldStats" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, DataStats> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], DataStats);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  fieldStats?: Record<string, DataStats>;
}
