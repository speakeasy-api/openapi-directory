"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import accountpublications as shared_accountpublications
from ..shared import beezup_common_errorresponsemessage as shared_beezup_common_errorresponsemessage
from enum import Enum
from typing import Optional

class GetPublicationsPublicationTypesEnum(str, Enum):
    PUBLISH_PRODUCTS = 'PublishProducts'
    PUBLISH_OFFERS = 'PublishOffers'
    UNPUBLISH = 'Unpublish'
    PUBLISH_RELATIONSHIPS_ENUM = 'PublishRelationshipsEnum'
    PUBLISH_PRODUCT_IMAGES_ENUM = 'PublishProductImagesEnum'
    PUBLISH_INVENTORY_ENUM = 'PublishInventoryEnum'
    PUBLISH_PRICING_ENUM = 'PublishPricingEnum'


@dataclasses.dataclass
class GetPublicationsRequest:
    
    account_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'accountId', 'style': 'simple', 'explode': False }})
    r"""Account Id to query (required)"""  
    marketplace_technical_code: str = dataclasses.field(metadata={'path_param': { 'field_name': 'marketplaceTechnicalCode', 'style': 'simple', 'explode': False }})
    r"""Marketplace Technical Code to query (required)"""  
    publication_types: list[GetPublicationsPublicationTypesEnum] = dataclasses.field(metadata={'query_param': { 'field_name': 'publicationTypes', 'style': 'form', 'explode': False }})
    r"""Publication types by which to filter (optional)"""  
    channel_catalog_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'channelCatalogId', 'style': 'form', 'explode': True }})
    r"""Channel Catalog Id by which to filter (optional)"""  
    count: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'count', 'style': 'form', 'explode': True }})
    r"""Amount of entries to fetch (optional, default set to 10)"""  
    

@dataclasses.dataclass
class GetPublicationsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    account_publications: Optional[shared_accountpublications.AccountPublications] = dataclasses.field(default=None)
    r"""Successfully fetched channel catalog settings"""  
    beez_up_common_error_response_message: Optional[shared_beezup_common_errorresponsemessage.BeezUPCommonErrorResponseMessage] = dataclasses.field(default=None)
    r"""Occurs when something goes wrong"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    