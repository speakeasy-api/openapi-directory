/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { CapacityUsageSummary } from "./capacityusagesummary";
import { ConfigurationSyncStateEnum } from "./configurationsyncstateenum";
import { FirewallStatusValueEnum } from "./firewallstatusvalueenum";
import { SyncState } from "./syncstate";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Detailed information about the current status of a <a>Firewall</a>. You can retrieve this for a firewall by calling <a>DescribeFirewall</a> and providing the firewall name and ARN.
 */
export class FirewallStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CapacityUsageSummary" })
  @Type(() => CapacityUsageSummary)
  capacityUsageSummary?: CapacityUsageSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "ConfigurationSyncStateSummary" })
  configurationSyncStateSummary: ConfigurationSyncStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status: FirewallStatusValueEnum;

  @SpeakeasyMetadata({ elemType: SyncState })
  @Expose({ name: "SyncStates" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, SyncState> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], SyncState);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  syncStates?: Record<string, SyncState>;
}
