"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import checksoutput as shared_checksoutput
from typing import Optional


@dataclasses.dataclass
class ListChecksSecurity:
    
    api_key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'Truora-API-Key' }})  
    

@dataclasses.dataclass
class ListChecksRequest:
    
    report_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'report_id', 'style': 'form', 'explode': True }})
    r"""Report id checks to be returned"""  
    start_key: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'start_key', 'style': 'form', 'explode': True }})
    r"""Start key value for the pagination"""  
    

@dataclasses.dataclass
class ListChecksResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    checks_output: Optional[shared_checksoutput.ChecksOutput] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    