/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EventPeriodRange } from "./eventperiodrange";
import { Expose, Type } from "class-transformer";

/**
 * The cause for the update failure.
 */
export enum EventBatchRecordFailureFailureCauseEnum {
  EventFailureCauseUnspecified = "EVENT_FAILURE_CAUSE_UNSPECIFIED",
  TooLarge = "TOO_LARGE",
  TimePeriodExpired = "TIME_PERIOD_EXPIRED",
  TimePeriodShort = "TIME_PERIOD_SHORT",
  TimePeriodLong = "TIME_PERIOD_LONG",
  AlreadyUpdated = "ALREADY_UPDATED",
  RecordRateHigh = "RECORD_RATE_HIGH",
}

/**
 * A batch update failure resource.
 */
export class EventBatchRecordFailure extends SpeakeasyBase {
  /**
   * The cause for the update failure.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "failureCause" })
  failureCause?: EventBatchRecordFailureFailureCauseEnum;

  /**
   * Uniquely identifies the type of this resource. Value is always the fixed string `games#eventBatchRecordFailure`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * An event period time range.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "range" })
  @Type(() => EventPeriodRange)
  range?: EventPeriodRange;
}
