<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ImageDetail - OK. A list of details about the container image is returned.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ImageDetail
{
    /**
     * The hardware architecture for which the image was built for. The architecture can either be Intel (amd64) or Power (ppc64le). 
     * 
     * @var ?string $architecture
     */
	#[\JMS\Serializer\Annotation\SerializedName('Architecture')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $architecture = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Config')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ImageDetailConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ImageDetailConfig $config = null;
    
    /**
     * ???
     * 
     * @var ?string $container
     */
	#[\JMS\Serializer\Annotation\SerializedName('Container')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $container = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('ContainerConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ContainerConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ContainerConfig $containerConfig = null;
    
    /**
     * The time when the image was created.
     * 
     * @var ?string $created
     */
	#[\JMS\Serializer\Annotation\SerializedName('Created')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $created = null;
    
    /**
     * ???
     * 
     * @var ?string $dockerVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('DockerVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dockerVersion = null;
    
    /**
     * Unique ID of the image that you inspected. 
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('Id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * ???
     * 
     * @var ?string $os
     */
	#[\JMS\Serializer\Annotation\SerializedName('Os')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $os = null;
    
    /**
     * The ID of the parent image that was used to build this image.
     * 
     * @var ?string $parent
     */
	#[\JMS\Serializer\Annotation\SerializedName('Parent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $parent = null;
    
    /**
     * The real size of the image. 
     * 
     * @var ?int $size
     */
	#[\JMS\Serializer\Annotation\SerializedName('Size')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $size = null;
    
    /**
     * The version of the image 
     * 
     * @var ?string $tag
     */
	#[\JMS\Serializer\Annotation\SerializedName('Tag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tag = null;
    
    /**
     * ???
     * 
     * @var ?string $throwaway
     */
	#[\JMS\Serializer\Annotation\SerializedName('Throwaway')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $throwaway = null;
    
    /**
     * The virtual size of the image.
     * 
     * @var ?int $virtualSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('VirtualSize')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $virtualSize = null;
    
	public function __construct()
	{
		$this->architecture = null;
		$this->config = null;
		$this->container = null;
		$this->containerConfig = null;
		$this->created = null;
		$this->dockerVersion = null;
		$this->id = null;
		$this->os = null;
		$this->parent = null;
		$this->size = null;
		$this->tag = null;
		$this->throwaway = null;
		$this->virtualSize = null;
	}
}
