/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PricingSummary - This type contains a summary of cumulative costs and charges for all line items of an order, including item price, price adjustments, sales taxes, delivery costs, and order discounts.
 */
public class PricingSummary {
    /**
     * This type defines the monetary value of an amount. It can provide the amount in both the currency used on the eBay site where an item is being offered and the conversion of that value into another currency, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adjustment")
    public Amount adjustment;

    public PricingSummary withAdjustment(Amount adjustment) {
        this.adjustment = adjustment;
        return this;
    }
    
    /**
     * This type defines the monetary value of an amount. It can provide the amount in both the currency used on the eBay site where an item is being offered and the conversion of that value into another currency, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliveryCost")
    public Amount deliveryCost;

    public PricingSummary withDeliveryCost(Amount deliveryCost) {
        this.deliveryCost = deliveryCost;
        return this;
    }
    
    /**
     * This type defines the monetary value of an amount. It can provide the amount in both the currency used on the eBay site where an item is being offered and the conversion of that value into another currency, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliveryDiscount")
    public Amount deliveryDiscount;

    public PricingSummary withDeliveryDiscount(Amount deliveryDiscount) {
        this.deliveryDiscount = deliveryDiscount;
        return this;
    }
    
    /**
     * This type defines the monetary value of an amount. It can provide the amount in both the currency used on the eBay site where an item is being offered and the conversion of that value into another currency, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fee")
    public Amount fee;

    public PricingSummary withFee(Amount fee) {
        this.fee = fee;
        return this;
    }
    
    /**
     * This type defines the monetary value of an amount. It can provide the amount in both the currency used on the eBay site where an item is being offered and the conversion of that value into another currency, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceDiscount")
    public Amount priceDiscount;

    public PricingSummary withPriceDiscount(Amount priceDiscount) {
        this.priceDiscount = priceDiscount;
        return this;
    }
    
    /**
     * This type defines the monetary value of an amount. It can provide the amount in both the currency used on the eBay site where an item is being offered and the conversion of that value into another currency, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceSubtotal")
    public Amount priceSubtotal;

    public PricingSummary withPriceSubtotal(Amount priceSubtotal) {
        this.priceSubtotal = priceSubtotal;
        return this;
    }
    
    /**
     * This type defines the monetary value of an amount. It can provide the amount in both the currency used on the eBay site where an item is being offered and the conversion of that value into another currency, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax")
    public Amount tax;

    public PricingSummary withTax(Amount tax) {
        this.tax = tax;
        return this;
    }
    
    /**
     * This type defines the monetary value of an amount. It can provide the amount in both the currency used on the eBay site where an item is being offered and the conversion of that value into another currency, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Amount total;

    public PricingSummary withTotal(Amount total) {
        this.total = total;
        return this;
    }
    
    public PricingSummary(){}
}
