/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CodespacesListRepositoriesForSecretForAuthenticatedUserRequest extends SpeakeasyBase {
  /**
   * The name of the secret.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=secret_name",
  })
  secretName: string;
}

/**
 * Response
 */
export class CodespacesListRepositoriesForSecretForAuthenticatedUser200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.MinimalRepository })
  @Expose({ name: "repositories" })
  @Type(() => shared.MinimalRepository)
  repositories: shared.MinimalRepository[];

  @SpeakeasyMetadata()
  @Expose({ name: "total_count" })
  totalCount: number;
}

export class CodespacesListRepositoriesForSecretForAuthenticatedUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Requires authentication
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  codespacesListRepositoriesForSecretForAuthenticatedUser200ApplicationJSONObject?: CodespacesListRepositoriesForSecretForAuthenticatedUser200ApplicationJSON;
}
