"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error401 as shared_error401
from ..shared import error500 as shared_error500
from ..shared import nhfurniture as shared_nhfurniture
from enum import Enum
from typing import Optional

class GetNhFurnitureCategoryEnum(str, Enum):
    r"""Specify the category of furniture to return (houswares, miscellaneous, or wall-mounted)."""
    HOUSEWARES = 'Housewares'
    MISCELLANEOUS = 'Miscellaneous'
    WALL_MOUNTED = 'Wall-mounted'

class GetNhFurnitureColorEnum(str, Enum):
    AQUA = 'Aqua'
    BEIGE = 'Beige'
    BLACK = 'Black'
    BLUE = 'Blue'
    BROWN = 'Brown'
    COLORFUL = 'Colorful'
    GRAY = 'Gray'
    GREEN = 'Green'
    ORANGE = 'Orange'
    PINK = 'Pink'
    PURPLE = 'Purple'
    RED = 'Red'
    WHITE = 'White'
    YELLOW = 'Yellow'


@dataclasses.dataclass
class GetNhFurnitureRequest:
    
    accept_version: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept-Version', 'style': 'simple', 'explode': False }})
    r"""The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes."""  
    x_api_key: str = dataclasses.field(metadata={'header': { 'field_name': 'X-API-KEY', 'style': 'simple', 'explode': False }})
    r"""Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API."""  
    category: Optional[GetNhFurnitureCategoryEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'category', 'style': 'form', 'explode': True }})
    r"""Specify the category of furniture to return (houswares, miscellaneous, or wall-mounted)."""  
    color: Optional[list[GetNhFurnitureColorEnum]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'color', 'style': 'form', 'explode': True }})
    r"""Return furniture that matches the provided colors (may specify one or two colors)."""  
    excludedetails: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'excludedetails', 'style': 'form', 'explode': True }})
    r"""When set to `true`, only furniture names are returned. Instead of an array of objects with all details, the return will be an array of strings."""  
    

@dataclasses.dataclass
class GetNhFurnitureResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error401: Optional[shared_error401.Error401] = dataclasses.field(default=None)
    r"""Failed to authenticate user from `X-API-KEY`."""  
    error500: Optional[shared_error500.Error500] = dataclasses.field(default=None)
    r"""There was an error fetching the requested data."""  
    nh_furnitures: Optional[list[shared_nhfurniture.NHFurniture]] = dataclasses.field(default=None)
    r"""A JSON array of furniture."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    