<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Comment - A comment on a file.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Comment
{
    /**
     * A region of the document represented as a JSON string. For details on defining anchor properties, refer to  Add comments and replies.
     * 
     * @var ?string $anchor
     */
	#[\JMS\Serializer\Annotation\SerializedName('anchor')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $anchor = null;
    
    /**
     * Information about a Drive user.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\User $author
     */
	#[\JMS\Serializer\Annotation\SerializedName('author')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\User')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?User $author = null;
    
    /**
     * The plain text content of the comment. This field is used for setting the content, while htmlContent should be displayed.
     * 
     * @var ?string $content
     */
	#[\JMS\Serializer\Annotation\SerializedName('content')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $content = null;
    
    /**
     * The time at which the comment was created (RFC 3339 date-time).
     * 
     * @var ?\DateTime $createdTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('createdTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdTime = null;
    
    /**
     * Whether the comment has been deleted. A deleted comment has no content.
     * 
     * @var ?bool $deleted
     */
	#[\JMS\Serializer\Annotation\SerializedName('deleted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $deleted = null;
    
    /**
     * The content of the comment with HTML formatting.
     * 
     * @var ?string $htmlContent
     */
	#[\JMS\Serializer\Annotation\SerializedName('htmlContent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $htmlContent = null;
    
    /**
     * The ID of the comment.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "drive#comment".
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * The last time the comment or any of its replies was modified (RFC 3339 date-time).
     * 
     * @var ?\DateTime $modifiedTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('modifiedTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $modifiedTime = null;
    
    /**
     * The file content to which the comment refers, typically within the anchor region. For a text file, for example, this would be the text at the location of the comment.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CommentQuotedFileContent $quotedFileContent
     */
	#[\JMS\Serializer\Annotation\SerializedName('quotedFileContent')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentQuotedFileContent')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CommentQuotedFileContent $quotedFileContent = null;
    
    /**
     * The full list of replies to the comment in chronological order.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Reply> $replies
     */
	#[\JMS\Serializer\Annotation\SerializedName('replies')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Reply>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $replies = null;
    
    /**
     * Whether the comment has been resolved by one of its replies.
     * 
     * @var ?bool $resolved
     */
	#[\JMS\Serializer\Annotation\SerializedName('resolved')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $resolved = null;
    
	public function __construct()
	{
		$this->anchor = null;
		$this->author = null;
		$this->content = null;
		$this->createdTime = null;
		$this->deleted = null;
		$this->htmlContent = null;
		$this->id = null;
		$this->kind = null;
		$this->modifiedTime = null;
		$this->quotedFileContent = null;
		$this->replies = null;
		$this->resolved = null;
	}
}
