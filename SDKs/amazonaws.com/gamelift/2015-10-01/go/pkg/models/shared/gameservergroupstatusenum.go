// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GameServerGroupStatusEnum string

const (
	GameServerGroupStatusEnumNew             GameServerGroupStatusEnum = "NEW"
	GameServerGroupStatusEnumActivating      GameServerGroupStatusEnum = "ACTIVATING"
	GameServerGroupStatusEnumActive          GameServerGroupStatusEnum = "ACTIVE"
	GameServerGroupStatusEnumDeleteScheduled GameServerGroupStatusEnum = "DELETE_SCHEDULED"
	GameServerGroupStatusEnumDeleting        GameServerGroupStatusEnum = "DELETING"
	GameServerGroupStatusEnumDeleted         GameServerGroupStatusEnum = "DELETED"
	GameServerGroupStatusEnumError           GameServerGroupStatusEnum = "ERROR"
)

func (e GameServerGroupStatusEnum) ToPointer() *GameServerGroupStatusEnum {
	return &e
}

func (e *GameServerGroupStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NEW":
		fallthrough
	case "ACTIVATING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "DELETE_SCHEDULED":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETED":
		fallthrough
	case "ERROR":
		*e = GameServerGroupStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GameServerGroupStatusEnum: %v", v)
	}
}
