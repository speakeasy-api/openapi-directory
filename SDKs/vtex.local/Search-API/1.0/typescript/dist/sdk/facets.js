"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Facets = void 0;
var utils = __importStar(require("../internal/utils"));
var operations = __importStar(require("./models/operations"));
var Facets = /** @class */ (function () {
    function Facets(defaultClient, securityClient, serverURL, language, sdkVersion, genVersion) {
        this._defaultClient = defaultClient;
        this._securityClient = securityClient;
        this._serverURL = serverURL;
        this._language = language;
        this._sdkVersion = sdkVersion;
        this._genVersion = genVersion;
    }
    /**
     * Search by Store Facets
     *
     * @remarks
     * Retrieves products by store facets.
     * >⚠️ This endpoint returns a maximum of 50 items per response, so the difference between `_from` and `_to` should not exceed this number. The result order is descending, from the highest product ID to the lowest.
     *
     * ## Response body example:
     *
     * ```json
     * {
     * 	"Departments": [
     *   	{
     *     	"Quantity": 2,
     *       "Position": null,
     *       "Name": "Beers Beers Mesmo",
     *       "Link": "/Beers-Beers-Mesmo/1?map=c,b",
     *       "LinkEncoded": "/Beers-Beers-Mesmo/1?map=c,b",
     *       "Map": "c",
     *       "Value": "Beers-Beers-Mesmo"
     *      },
     *      {
     *      	"Quantity": 2,
     *       "Position": null,
     *       "Name": "Merch Integration Category ||",
     *       "Link": "/Merch-Integration-Category-||/1?map=c,b",
     *       "LinkEncoded": "/Merch-Integration-Category-%7C%7C/1?map=c,b",
     *       "Map": "c",
     *       "Value": "Merch-Integration-Category-||"
     *      },
     *      {
     *       "Quantity": 1,
     *       "Position": null,
     *       "Name": "Jogos",
     *       "Link": "/Jogos/1?map=c,b",
     *       "LinkEncoded": "/Jogos/1?map=c,b",
     *       "Map": "c",
     *       "Value": "Jogos"
     *      },
     *      {
     *       "Quantity": 3,
     *       "Position": null,
     *       "Name": "189",
     *       "Link": "/189/1?map=c,b",
     *       "LinkEncoded": "/189/1?map=c,b",
     *       "Map": "c",
     *       "Value": "189"
     *      },
     *      {
     *       "Quantity": 1,
     *       "Position": null,
     *       "Name": "Tests",
     *       "Link": "/Tests/1?map=c,b",
     *       "LinkEncoded": "/Tests/1?map=c,b",
     *       "Map": "c",
     *       "Value": "Tests"
     *      },
     *      {
     *       "Quantity": 1,
     *       "Position": null,
     *       "Name": "Accessories",
     *       "Link": "/Accessories/1?map=c,b",
     *       "LinkEncoded": "/Accessories/1?map=c,b",
     *       "Map": "c",
     *       "Value": "Accessories"
     *      },
     *      {
     *       "Quantity": 2,
     *       "Position": null,
     *       "Name": "Bars",
     *       "Link": "/Bars/1?map=c,b",
     *       "LinkEncoded": "/Bars/1?map=c,b",
     *       "Map": "c",
     *       "Value": "Bars"
     *      },
     *      {
     *       "Quantity": 5,
     *       "Position": null,
     *       "Name": "Categoria Teste Timeout",
     *       "Link": "/Categoria-Teste-Timeout/1?map=c,b",
     *       "LinkEncoded": "/Categoria-Teste-Timeout/1?map=c,b",
     *       "Map": "c",
     *       "Value": "Categoria-Teste-Timeout"
     *      }
     *     ],
     *     "Brands": [
     *      {
     *       "Quantity": 2,
     *       "Position": null,
     *       "Name": "Merch XP",
     *       "Link": "/1/1234600/1/Merch-XP?map=c,c,b,b",
     *       "LinkEncoded": "/1/1234600/1/Merch-XP?map=c,c,b,b",
     *       "Map": "b",
     *       "Value": "Merch-XP"
     *      },
     *      {
     *       "Quantity": 2,
     *       "Position": null,
     *       "Name": "Zé",
     *       "Link": "/1/1234600/1/Ze?map=c,c,b,b",
     *       "LinkEncoded": "/1/1234600/1/Ze?map=c,c,b,b",
     *       "Map": "b",
     *       "Value": "Ze"
     *      },
     *      {
     *       "Quantity": 1,
     *       "Position": null,
     *       "Name": "Odin",
     *       "Link": "/1/1234600/1/Odin?map=c,c,b,b",
     *       "LinkEncoded": "/1/1234600/1/Odin?map=c,c,b,b",
     *       "Map": "b",
     *       "Value": "Odin"
     *      },
     *      {
     *       "Quantity": 2,
     *       "Position": null,
     *       "Name": "Hoegaarden",
     *       "Link": "/1/1234600/1/Hoegaarden?map=c,c,b,b",
     *       "LinkEncoded": "/1/1234600/1/Hoegaarden?map=c,c,b,b",
     *       "Map": "b",
     *       "Value": "Hoegaarden"
     *      },
     *      {
     *       "Quantity": 1,
     *       "Position": null,
     *       "Name": "Teste marcas",
     *       "Link": "/1/1234600/1/Teste-marcas?map=c,c,b,b",
     *       "LinkEncoded": "/1/1234600/1/Teste-marcas?map=c,c,b,b",
     *       "Map": "b",
     *       "Value": "Teste-marcas"
     *      },
     *      {
     *        "Quantity": 1,
     *        "Position": null,
     *        "Name": "Bitmap Bureau",
     *        "Link": "/1/1234600/1/Bitmap-Bureau?map=c,c,b,b",
     *        "LinkEncoded": "/1/1234600/1/Bitmap-Bureau?map=c,c,b,b",
     *        "Map": "b",
     *        "Value": "Bitmap-Bureau"
     *      },
     *       {
     *         "Quantity": 1,
     *         "Position": null,
     *         "Name": "Sega",
     *         "Link": "/1/1234600/1/Sega?map=c,c,b,b",
     *         "LinkEncoded": "/1/1234600/1/Sega?map=c,c,b,b",
     *         "Map": "b",
     *         "Value": "Sega"
     *       },
     *       {
     *         "Quantity": 3,
     *         "Position": null,
     *         "Name": "Technogym",
     *         "Link": "/1/1234600/1/Technogym?map=c,c,b,b",
     *         "LinkEncoded": "/1/1234600/1/Technogym?map=c,c,b,b",
     *         "Map": "b",
     *         "Value": "Technogym"
     *       },
     *       {
     *         "Quantity": 3,
     *         "Position": null,
     *         "Name": "Aptany",
     *         "Link": "/1/1234600/1/Aptany?map=c,c,b,b",
     *         "LinkEncoded": "/1/1234600/1/Aptany?map=c,c,b,b",
     *         "Map": "b",
     *         "Value": "Aptany"
     *       },
     *       {
     *         "Quantity": 1,
     *         "Position": null,
     *         "Name": "Tectoy",
     *         "Link": "/1/1234600/1/Tectoy?map=c,c,b,b",
     *         "LinkEncoded": "/1/1234600/1/Tectoy?map=c,c,b,b",
     *         "Map": "b",
     *         "Value": "Tectoy"
     *       }
     *     ],
     *       "SpecificationFilters": {},
     *         "CategoriesTrees": [
     *           {
     *             "Id": 1,
     *             "Quantity": 4,
     *             "Position": null,
     *             "Name": "Beers Beers Mesmo",
     *             "Link": "/Beers-Beers-Mesmo/1?map=c,b",
     *             "LinkEncoded": "/Beers-Beers-Mesmo/1?map=c,b",
     *             "Map": "c",
     *             "Value": "Beers-Beers-Mesmo",
     *             "Children": [
     *               {
     *                 "Id": 2,
     *                 "Quantity": 1,
     *                 "Position": null,
     *                 "Name": "Lager Beers",
     *                 "Link": "/Beers-Beers-Mesmo/Lager-Beers/1?map=c,c,b",
     *                 "LinkEncoded": "/Beers-Beers-Mesmo/Lager-Beers/1?map=c,c,b",
     *                 "Map": "c",
     *                 "Value": "Lager-Beers",
     *                 "Children": []
     *               }
     *             ]
     *           },
     *           {
     *             "Id": 1234571,
     *             "Quantity": 2,
     *             "Position": null,
     *             "Name": "Jogos",
     *             "Link": "/Jogos/1?map=c,b",
     *             "LinkEncoded": "/Jogos/1?map=c,b",
     *             "Map": "c",
     *             "Value": "Jogos",
     *             "Children": []
     *           },
     *           {
     *             "Id": 1234579,
     *             "Quantity": 3,
     *             "Position": null,
     *             "Name": "189",
     *             "Link": "/189/1?map=c,b",
     *             "LinkEncoded": "/189/1?map=c,b",
     *             "Map": "c",
     *             "Value": "189",
     *             "Children": []
     *           },
     *           {
     *             "Id": 1234587,
     *             "Quantity": 1,
     *             "Position": null,
     *             "Name": "Tests",
     *             "Link": "/Tests/1?map=c,b",
     *             "LinkEncoded": "/Tests/1?map=c,b",
     *             "Map": "c",
     *             "Value": "Tests",
     *             "Children": []
     *           },
     *           {
     *             "Id": 1234595,
     *             "Quantity": 1,
     *             "Position": null,
     *             "Name": "Accessories",
     *             "Link": "/Accessories/1?map=c,b",
     *             "LinkEncoded": "/Accessories/1?map=c,b",
     *             "Map": "c",
     *             "Value": "Accessories",
     *             "Children": [
     *               {
     *                 "Id": 1234596,
     *                 "Quantity": 1,
     *                 "Position": null,
     *                 "Name": "Foam rollers",
     *                 "Link": "/Accessories/Foam-rollers/1?map=c,c,b",
     *                 "LinkEncoded": "/Accessories/Foam-rollers/1?map=c,c,b",
     *                 "Map": "c",
     *                 "Value": "Foam-rollers",
     *                 "Children": []
     *               }
     *             ]
     *           },
     *           {
     *             "Id": 1234597,
     *             "Quantity": 2,
     *             "Position": null,
     *             "Name": "Bars",
     *             "Link": "/Bars/1?map=c,b",
     *             "LinkEncoded": "/Bars/1?map=c,b",
     *             "Map": "c",
     *             "Value": "Bars",
     *             "Children": [
     *               {
     *                 "Id": 1234598,
     *                 "Quantity": 1,
     *                 "Position": null,
     *                 "Name": "Training Bars",
     *                 "Link": "/Bars/Training-Bars/1?map=c,c,b",
     *                 "LinkEncoded": "/Bars/Training-Bars/1?map=c,c,b",
     *                 "Map": "c",
     *                 "Value": "Training-Bars",
     *                 "Children": []
     *               },
     *               {
     *                 "Id": 1234599,
     *                 "Quantity": 1,
     *                 "Position": null,
     *                 "Name": "Curl Bars",
     *                 "Link": "/Bars/Curl-Bars/1?map=c,c,b",
     *                 "LinkEncoded": "/Bars/Curl-Bars/1?map=c,c,b",
     *                 "Map": "c",
     *                 "Value": "Curl-Bars",
     *                 "Children": []
     *               }
     *             ]
     *           },
     *           {
     *             "Id": 15,
     *             "Quantity": 1,
     *             "Position": null,
     *             "Name": "Coronas",
     *             "Link": "/Coronas/1?map=c,b",
     *             "LinkEncoded": "/Coronas/1?map=c,b",
     *             "Map": "c",
     *             "Value": "Coronas",
     *             "Children": [
     *               {
     *                 "Id": 13,
     *                 "Quantity": 1,
     *                 "Position": null,
     *                 "Name": "não tem limite!",
     *                 "Link": "/Coronas/nao-tem-limite-/1?map=c,c,b",
     *                 "LinkEncoded": "/Coronas/nao-tem-limite-/1?map=c,c,b",
     *                 "Map": "c",
     *                 "Value": "nao-tem-limite-",
     *                 "Children": []
     *               }
     *             ]
     *           },
     *           {
     *             "Id": 4,
     *             "Quantity": 4,
     *             "Position": null,
     *             "Name": "Merch Integration Category ||",
     *             "Link": "/Merch-Integration-Category-||/1?map=c,b",
     *             "LinkEncoded": "/Merch-Integration-Category-%7C%7C/1?map=c,b",
     *             "Map": "c",
     *             "Value": "Merch-Integration-Category-||",
     *             "Children": []
     *           }
     *         ],
     *           "PriceRanges": [],
     *             "Summary": {
     *               "Departments": {
     *                 "DisplayedItems": 8,
     *                   "TotalItems": 8
     *               },
     *                 "CategoriesTrees": {
     *                   "DisplayedItems": 13,
     *                     "TotalItems": 13
     *                 },
     *                   "Brands": {
     *                     "DisplayedItems": 10,
     *                       "TotalItems": 10
     *                   },
     *                     "PriceRanges": {
     *                       "DisplayedItems": 0,
     *                         "TotalItems": 0
     *                     },
     *                       "SpecificationFilters": {}
     *             }
     * }
     * ```
     */
    Facets.prototype.facetscategory = function (req, config) {
        if (!(req instanceof utils.SpeakeasyBase)) {
            req = new operations.FacetscategoryRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/api/catalog_system/pub/facets/search/{term}", req);
        var client = this._securityClient || this._defaultClient;
        var headers = __assign(__assign({}, utils.getHeadersFromRequest(req)), config === null || config === void 0 ? void 0 : config.headers);
        var queryParams = utils.serializeQueryParams(req);
        var r = client.request(__assign({ url: url + queryParams, method: "get", headers: headers }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.FacetscategoryResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.facetscategory200ApplicationJSONObject = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, operations.Facetscategory200ApplicationJSON);
                    }
                    break;
            }
            return res;
        });
    };
    /**
     * Get Category Facets
     *
     * @remarks
     * Retrieves the names and IDs of the categories facets.
     * >⚠️ This endpoint returns a maximum of 50 items per response, so the difference between `_from` and `_to` should not exceed this number. The result order is descending, from the highest product ID to the lowest.
     *
     * ## Response body example:
     *
     * ```json
     * [
     * 	[
     *     {
     *       "Name":"Tamanho Global",
     *       "Id":45
     * 		},
     * 		{
     *       "Name":"Percentuals",
     *       "Id":25
     * 		}
     * 	]
     * ]
     * ```
     */
    Facets.prototype.getApiCatalogSystemPubFacetsCategoryCategoryId = function (req, config) {
        if (!(req instanceof utils.SpeakeasyBase)) {
            req =
                new operations.GetApiCatalogSystemPubFacetsCategoryCategoryIdRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/api/catalog_system/pub/facets/category/{categoryId}", req);
        var client = this._securityClient || this._defaultClient;
        var headers = __assign(__assign({}, utils.getHeadersFromRequest(req)), config === null || config === void 0 ? void 0 : config.headers);
        var queryParams = utils.serializeQueryParams(req);
        var r = client.request(__assign({ url: url + queryParams, method: "get", headers: headers }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.GetApiCatalogSystemPubFacetsCategoryCategoryIdResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.getApiCatalogSystemPubFacetsCategoryCategoryId200ApplicationJSONObjects =
                            [];
                        var resFieldDepth = utils.getResFieldDepth(res);
                        res.getApiCatalogSystemPubFacetsCategoryCategoryId200ApplicationJSONObjects =
                            utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, operations.GetApiCatalogSystemPubFacetsCategoryCategoryId200ApplicationJSON, resFieldDepth);
                    }
                    break;
            }
            return res;
        });
    };
    return Facets;
}());
exports.Facets = Facets;
