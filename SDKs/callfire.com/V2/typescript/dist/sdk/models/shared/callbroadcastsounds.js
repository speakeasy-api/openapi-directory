"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CallBroadcastSounds = exports.CallBroadcastSoundsTransferSoundTextVoiceEnum = exports.CallBroadcastSoundsMachineSoundTextVoiceEnum = exports.CallBroadcastSoundsLiveSoundTextVoiceEnum = exports.CallBroadcastSoundsDncSoundTextVoiceEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The voice to be used (MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1)
 */
var CallBroadcastSoundsDncSoundTextVoiceEnum;
(function (CallBroadcastSoundsDncSoundTextVoiceEnum) {
    CallBroadcastSoundsDncSoundTextVoiceEnum["Male1"] = "MALE1";
    CallBroadcastSoundsDncSoundTextVoiceEnum["Female1"] = "FEMALE1";
    CallBroadcastSoundsDncSoundTextVoiceEnum["Female2"] = "FEMALE2";
    CallBroadcastSoundsDncSoundTextVoiceEnum["Spanish1"] = "SPANISH1";
    CallBroadcastSoundsDncSoundTextVoiceEnum["Frenchcanadian1"] = "FRENCHCANADIAN1";
})(CallBroadcastSoundsDncSoundTextVoiceEnum = exports.CallBroadcastSoundsDncSoundTextVoiceEnum || (exports.CallBroadcastSoundsDncSoundTextVoiceEnum = {}));
/**
 * The voice to be used (MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1) for a live sound
 */
var CallBroadcastSoundsLiveSoundTextVoiceEnum;
(function (CallBroadcastSoundsLiveSoundTextVoiceEnum) {
    CallBroadcastSoundsLiveSoundTextVoiceEnum["Male1"] = "MALE1";
    CallBroadcastSoundsLiveSoundTextVoiceEnum["Female1"] = "FEMALE1";
    CallBroadcastSoundsLiveSoundTextVoiceEnum["Female2"] = "FEMALE2";
    CallBroadcastSoundsLiveSoundTextVoiceEnum["Spanish1"] = "SPANISH1";
    CallBroadcastSoundsLiveSoundTextVoiceEnum["Frenchcanadian1"] = "FRENCHCANADIAN1";
})(CallBroadcastSoundsLiveSoundTextVoiceEnum = exports.CallBroadcastSoundsLiveSoundTextVoiceEnum || (exports.CallBroadcastSoundsLiveSoundTextVoiceEnum = {}));
/**
 * The voice to be used (MALE1, FEMALE1 , FEMALE2, SPANISH1, FRENCHCANADIAN1) for a machine sound
 */
var CallBroadcastSoundsMachineSoundTextVoiceEnum;
(function (CallBroadcastSoundsMachineSoundTextVoiceEnum) {
    CallBroadcastSoundsMachineSoundTextVoiceEnum["Male1"] = "MALE1";
    CallBroadcastSoundsMachineSoundTextVoiceEnum["Female1"] = "FEMALE1";
    CallBroadcastSoundsMachineSoundTextVoiceEnum["Female2"] = "FEMALE2";
    CallBroadcastSoundsMachineSoundTextVoiceEnum["Spanish1"] = "SPANISH1";
    CallBroadcastSoundsMachineSoundTextVoiceEnum["Frenchcanadian1"] = "FRENCHCANADIAN1";
})(CallBroadcastSoundsMachineSoundTextVoiceEnum = exports.CallBroadcastSoundsMachineSoundTextVoiceEnum || (exports.CallBroadcastSoundsMachineSoundTextVoiceEnum = {}));
/**
 * The voice to be used (MALE1, FEMALE1, FEMALE2, SPANISH1, FRENCHCANADIAN1) for a sound transfer
 */
var CallBroadcastSoundsTransferSoundTextVoiceEnum;
(function (CallBroadcastSoundsTransferSoundTextVoiceEnum) {
    CallBroadcastSoundsTransferSoundTextVoiceEnum["Male1"] = "MALE1";
    CallBroadcastSoundsTransferSoundTextVoiceEnum["Female1"] = "FEMALE1";
    CallBroadcastSoundsTransferSoundTextVoiceEnum["Female2"] = "FEMALE2";
    CallBroadcastSoundsTransferSoundTextVoiceEnum["Spanish1"] = "SPANISH1";
    CallBroadcastSoundsTransferSoundTextVoiceEnum["Frenchcanadian1"] = "FRENCHCANADIAN1";
})(CallBroadcastSoundsTransferSoundTextVoiceEnum = exports.CallBroadcastSoundsTransferSoundTextVoiceEnum || (exports.CallBroadcastSoundsTransferSoundTextVoiceEnum = {}));
/**
 * A set of sounds assigned to a voice broadcast to play according to an answering machine configuration. You can add the existing sounds from the account's sound library or to provide a text which will be converted into a speech. There are four sound options available for a Voice Broadcast campaign
 */
var CallBroadcastSounds = /** @class */ (function (_super) {
    __extends(CallBroadcastSounds, _super);
    function CallBroadcastSounds() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dncDigit" }),
        __metadata("design:type", String)
    ], CallBroadcastSounds.prototype, "dncDigit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dncSoundId" }),
        __metadata("design:type", Number)
    ], CallBroadcastSounds.prototype, "dncSoundId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dncSoundText" }),
        __metadata("design:type", String)
    ], CallBroadcastSounds.prototype, "dncSoundText", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dncSoundTextVoice" }),
        __metadata("design:type", String)
    ], CallBroadcastSounds.prototype, "dncSoundTextVoice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "liveSoundId" }),
        __metadata("design:type", Number)
    ], CallBroadcastSounds.prototype, "liveSoundId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "liveSoundText" }),
        __metadata("design:type", String)
    ], CallBroadcastSounds.prototype, "liveSoundText", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "liveSoundTextVoice" }),
        __metadata("design:type", String)
    ], CallBroadcastSounds.prototype, "liveSoundTextVoice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "machineSoundId" }),
        __metadata("design:type", Number)
    ], CallBroadcastSounds.prototype, "machineSoundId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "machineSoundText" }),
        __metadata("design:type", String)
    ], CallBroadcastSounds.prototype, "machineSoundText", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "machineSoundTextVoice" }),
        __metadata("design:type", String)
    ], CallBroadcastSounds.prototype, "machineSoundTextVoice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transferDigit" }),
        __metadata("design:type", String)
    ], CallBroadcastSounds.prototype, "transferDigit", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transferNumber" }),
        __metadata("design:type", String)
    ], CallBroadcastSounds.prototype, "transferNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transferSoundId" }),
        __metadata("design:type", Number)
    ], CallBroadcastSounds.prototype, "transferSoundId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transferSoundText" }),
        __metadata("design:type", String)
    ], CallBroadcastSounds.prototype, "transferSoundText", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transferSoundTextVoice" }),
        __metadata("design:type", String)
    ], CallBroadcastSounds.prototype, "transferSoundTextVoice", void 0);
    return CallBroadcastSounds;
}(utils_1.SpeakeasyBase));
exports.CallBroadcastSounds = CallBroadcastSounds;
