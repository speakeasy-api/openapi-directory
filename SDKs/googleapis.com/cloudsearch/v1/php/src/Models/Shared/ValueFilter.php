<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ValueFilter
{
    /**
     * The `operator_name` applied to the query, such as *price_greater_than*. The filter can work against both types of filters defined in the schema for your data source: 1. `operator_name`, where the query filters results by the property that matches the value. 2. `greater_than_operator_name` or `less_than_operator_name` in your schema. The query filters the results for the property values that are greater than or less than the supplied value in the query.
     * 
     * @var ?string $operatorName
     */
	#[\JMS\Serializer\Annotation\SerializedName('operatorName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $operatorName = null;
    
    /**
     * Definition of a single value with generic type.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Value $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Value')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Value $value = null;
    
	public function __construct()
	{
		$this->operatorName = null;
		$this->value = null;
	}
}
