// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateActionTypeXAmzTargetEnum
type UpdateActionTypeXAmzTargetEnum string

const (
	UpdateActionTypeXAmzTargetEnumCodePipeline20150709UpdateActionType UpdateActionTypeXAmzTargetEnum = "CodePipeline_20150709.UpdateActionType"
)

func (e UpdateActionTypeXAmzTargetEnum) ToPointer() *UpdateActionTypeXAmzTargetEnum {
	return &e
}

func (e *UpdateActionTypeXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodePipeline_20150709.UpdateActionType":
		*e = UpdateActionTypeXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateActionTypeXAmzTargetEnum: %v", v)
	}
}

type UpdateActionTypeRequest struct {
	UpdateActionTypeInput shared.UpdateActionTypeInput   `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            UpdateActionTypeXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateActionTypeResponse struct {
	// ActionTypeNotFoundException
	ActionTypeNotFoundException interface{}
	ContentType                 string
	// RequestFailedException
	RequestFailedException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ValidationException
	ValidationException interface{}
}
