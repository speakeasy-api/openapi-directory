// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GdataMediaReferenceTypeEnum - gdata
type GdataMediaReferenceTypeEnum string

const (
	GdataMediaReferenceTypeEnumPath                  GdataMediaReferenceTypeEnum = "PATH"
	GdataMediaReferenceTypeEnumBlobRef               GdataMediaReferenceTypeEnum = "BLOB_REF"
	GdataMediaReferenceTypeEnumInline                GdataMediaReferenceTypeEnum = "INLINE"
	GdataMediaReferenceTypeEnumGetMedia              GdataMediaReferenceTypeEnum = "GET_MEDIA"
	GdataMediaReferenceTypeEnumCompositeMedia        GdataMediaReferenceTypeEnum = "COMPOSITE_MEDIA"
	GdataMediaReferenceTypeEnumBigstoreRef           GdataMediaReferenceTypeEnum = "BIGSTORE_REF"
	GdataMediaReferenceTypeEnumDiffVersionResponse   GdataMediaReferenceTypeEnum = "DIFF_VERSION_RESPONSE"
	GdataMediaReferenceTypeEnumDiffChecksumsResponse GdataMediaReferenceTypeEnum = "DIFF_CHECKSUMS_RESPONSE"
	GdataMediaReferenceTypeEnumDiffDownloadResponse  GdataMediaReferenceTypeEnum = "DIFF_DOWNLOAD_RESPONSE"
	GdataMediaReferenceTypeEnumDiffUploadRequest     GdataMediaReferenceTypeEnum = "DIFF_UPLOAD_REQUEST"
	GdataMediaReferenceTypeEnumDiffUploadResponse    GdataMediaReferenceTypeEnum = "DIFF_UPLOAD_RESPONSE"
	GdataMediaReferenceTypeEnumCosmoBinaryReference  GdataMediaReferenceTypeEnum = "COSMO_BINARY_REFERENCE"
	GdataMediaReferenceTypeEnumArbitraryBytes        GdataMediaReferenceTypeEnum = "ARBITRARY_BYTES"
)

func (e *GdataMediaReferenceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PATH":
		fallthrough
	case "BLOB_REF":
		fallthrough
	case "INLINE":
		fallthrough
	case "GET_MEDIA":
		fallthrough
	case "COMPOSITE_MEDIA":
		fallthrough
	case "BIGSTORE_REF":
		fallthrough
	case "DIFF_VERSION_RESPONSE":
		fallthrough
	case "DIFF_CHECKSUMS_RESPONSE":
		fallthrough
	case "DIFF_DOWNLOAD_RESPONSE":
		fallthrough
	case "DIFF_UPLOAD_REQUEST":
		fallthrough
	case "DIFF_UPLOAD_RESPONSE":
		fallthrough
	case "COSMO_BINARY_REFERENCE":
		fallthrough
	case "ARBITRARY_BYTES":
		*e = GdataMediaReferenceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GdataMediaReferenceTypeEnum: %s", s)
	}
}

// GdataMedia - gdata
type GdataMedia struct {
	// gdata
	Algorithm *string `json:"algorithm,omitempty"`
	// gdata
	BigstoreObjectRef *string `json:"bigstoreObjectRef,omitempty"`
	// gdata
	BlobRef *string `json:"blobRef,omitempty"`
	// gdata
	Blobstore2Info *GdataBlobstore2Info `json:"blobstore2Info,omitempty"`
	// gdata
	CompositeMedia []GdataCompositeMedia `json:"compositeMedia,omitempty"`
	// gdata
	ContentType *string `json:"contentType,omitempty"`
	// gdata
	ContentTypeInfo *GdataContentTypeInfo `json:"contentTypeInfo,omitempty"`
	// gdata
	CosmoBinaryReference *string `json:"cosmoBinaryReference,omitempty"`
	// gdata
	Crc32cHash *int64 `json:"crc32cHash,omitempty"`
	// gdata
	DiffChecksumsResponse *GdataDiffChecksumsResponse `json:"diffChecksumsResponse,omitempty"`
	// gdata
	DiffDownloadResponse *GdataDiffDownloadResponse `json:"diffDownloadResponse,omitempty"`
	// gdata
	DiffUploadRequest *GdataDiffUploadRequest `json:"diffUploadRequest,omitempty"`
	// gdata
	DiffUploadResponse *GdataDiffUploadResponse `json:"diffUploadResponse,omitempty"`
	// gdata
	DiffVersionResponse *GdataDiffVersionResponse `json:"diffVersionResponse,omitempty"`
	// gdata
	DownloadParameters *GdataDownloadParameters `json:"downloadParameters,omitempty"`
	// gdata
	Filename *string `json:"filename,omitempty"`
	// gdata
	Hash *string `json:"hash,omitempty"`
	// gdata
	HashVerified *bool `json:"hashVerified,omitempty"`
	// gdata
	Inline *string `json:"inline,omitempty"`
	// gdata
	IsPotentialRetry *bool `json:"isPotentialRetry,omitempty"`
	// gdata
	Length *string `json:"length,omitempty"`
	// gdata
	Md5Hash *string `json:"md5Hash,omitempty"`
	// gdata
	MediaID *string `json:"mediaId,omitempty"`
	// gdata
	ObjectID *GdataObjectID `json:"objectId,omitempty"`
	// gdata
	Path *string `json:"path,omitempty"`
	// gdata
	ReferenceType *GdataMediaReferenceTypeEnum `json:"referenceType,omitempty"`
	// gdata
	Sha1Hash *string `json:"sha1Hash,omitempty"`
	// gdata
	Sha256Hash *string `json:"sha256Hash,omitempty"`
	// gdata
	Timestamp *string `json:"timestamp,omitempty"`
	// gdata
	Token *string `json:"token,omitempty"`
}
