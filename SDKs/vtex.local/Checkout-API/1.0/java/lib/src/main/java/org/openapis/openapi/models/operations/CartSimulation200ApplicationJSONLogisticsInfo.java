/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CartSimulation200ApplicationJSONLogisticsInfo {
    /**
     * Address ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("addressId")
    public String addressId;
    public CartSimulation200ApplicationJSONLogisticsInfo withAddressId(String addressId) {
        this.addressId = addressId;
        return this;
    }
    
    /**
     * List of available delivery channels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliveryChannels")
    public CartSimulation200ApplicationJSONLogisticsInfoDeliveryChannels[] deliveryChannels;
    public CartSimulation200ApplicationJSONLogisticsInfo withDeliveryChannels(CartSimulation200ApplicationJSONLogisticsInfoDeliveryChannels[] deliveryChannels) {
        this.deliveryChannels = deliveryChannels;
        return this;
    }
    
    /**
     * Index of item in items array.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemIndex")
    public Long itemIndex;
    public CartSimulation200ApplicationJSONLogisticsInfo withItemIndex(Long itemIndex) {
        this.itemIndex = itemIndex;
        return this;
    }
    
    /**
     * Item metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemMetadata")
    public CartSimulation200ApplicationJSONLogisticsInfoItemMetadata itemMetadata;
    public CartSimulation200ApplicationJSONLogisticsInfo withItemMetadata(CartSimulation200ApplicationJSONLogisticsInfoItemMetadata itemMetadata) {
        this.itemMetadata = itemMetadata;
        return this;
    }
    
    /**
     * Array containing an object for each message generated by our servers while processing the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("messages")
    public Object[] messages;
    public CartSimulation200ApplicationJSONLogisticsInfo withMessages(Object[] messages) {
        this.messages = messages;
        return this;
    }
    
    /**
     * Array containing pickup points information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pickupPoints")
    public Object[] pickupPoints;
    public CartSimulation200ApplicationJSONLogisticsInfo withPickupPoints(Object[] pickupPoints) {
        this.pickupPoints = pickupPoints;
        return this;
    }
    
    /**
     * Purchase conditions information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purchaseConditions")
    public CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditions purchaseConditions;
    public CartSimulation200ApplicationJSONLogisticsInfo withPurchaseConditions(CartSimulation200ApplicationJSONLogisticsInfoPurchaseConditions purchaseConditions) {
        this.purchaseConditions = purchaseConditions;
        return this;
    }
    
    /**
     * Quantity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public Long quantity;
    public CartSimulation200ApplicationJSONLogisticsInfo withQuantity(Long quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * Delivery channel selected by the customer. For example, `"delivery"` or `"pickup-in-point"`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selectedDeliveryChannel")
    public String selectedDeliveryChannel;
    public CartSimulation200ApplicationJSONLogisticsInfo withSelectedDeliveryChannel(String selectedDeliveryChannel) {
        this.selectedDeliveryChannel = selectedDeliveryChannel;
        return this;
    }
    
    /**
     * Selected SLA. For example, `"normal"` or `"express"`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selectedSla")
    public String selectedSla;
    public CartSimulation200ApplicationJSONLogisticsInfo withSelectedSla(String selectedSla) {
        this.selectedSla = selectedSla;
        return this;
    }
    
    /**
     * List of countries that the item may be shipped to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipsTo")
    public Object[] shipsTo;
    public CartSimulation200ApplicationJSONLogisticsInfo withShipsTo(Object[] shipsTo) {
        this.shipsTo = shipsTo;
        return this;
    }
    
    /**
     * Information on available SLAs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("slas")
    public CartSimulation200ApplicationJSONLogisticsInfoSlas[] slas;
    public CartSimulation200ApplicationJSONLogisticsInfo withSlas(CartSimulation200ApplicationJSONLogisticsInfoSlas[] slas) {
        this.slas = slas;
        return this;
    }
    
    /**
     * Subscription information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionData")
    public java.util.Map<String, Object> subscriptionData;
    public CartSimulation200ApplicationJSONLogisticsInfo withSubscriptionData(java.util.Map<String, Object> subscriptionData) {
        this.subscriptionData = subscriptionData;
        return this;
    }
    
    /**
     * Information on order totals.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totals")
    public CartSimulation200ApplicationJSONLogisticsInfoTotals[] totals;
    public CartSimulation200ApplicationJSONLogisticsInfo withTotals(CartSimulation200ApplicationJSONLogisticsInfoTotals[] totals) {
        this.totals = totals;
        return this;
    }
    
}
