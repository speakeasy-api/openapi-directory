/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EditUserOption - EditUserOption edit user options
 */
public class EditUserOption {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;

    public EditUserOption withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("admin")
    public Boolean admin;

    public EditUserOption withAdmin(Boolean admin) {
        this.admin = admin;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allow_create_organization")
    public Boolean allowCreateOrganization;

    public EditUserOption withAllowCreateOrganization(Boolean allowCreateOrganization) {
        this.allowCreateOrganization = allowCreateOrganization;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allow_git_hook")
    public Boolean allowGitHook;

    public EditUserOption withAllowGitHook(Boolean allowGitHook) {
        this.allowGitHook = allowGitHook;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allow_import_local")
    public Boolean allowImportLocal;

    public EditUserOption withAllowImportLocal(Boolean allowImportLocal) {
        this.allowImportLocal = allowImportLocal;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public EditUserOption withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public EditUserOption withEmail(String email) {
        this.email = email;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("full_name")
    public String fullName;

    public EditUserOption withFullName(String fullName) {
        this.fullName = fullName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;

    public EditUserOption withLocation(String location) {
        this.location = location;
        return this;
    }
    
    @JsonProperty("login_name")
    public String loginName;

    public EditUserOption withLoginName(String loginName) {
        this.loginName = loginName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("max_repo_creation")
    public Long maxRepoCreation;

    public EditUserOption withMaxRepoCreation(Long maxRepoCreation) {
        this.maxRepoCreation = maxRepoCreation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("must_change_password")
    public Boolean mustChangePassword;

    public EditUserOption withMustChangePassword(Boolean mustChangePassword) {
        this.mustChangePassword = mustChangePassword;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("password")
    public String password;

    public EditUserOption withPassword(String password) {
        this.password = password;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prohibit_login")
    public Boolean prohibitLogin;

    public EditUserOption withProhibitLogin(Boolean prohibitLogin) {
        this.prohibitLogin = prohibitLogin;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("restricted")
    public Boolean restricted;

    public EditUserOption withRestricted(Boolean restricted) {
        this.restricted = restricted;
        return this;
    }
    
    @JsonProperty("source_id")
    public Long sourceId;

    public EditUserOption withSourceId(Long sourceId) {
        this.sourceId = sourceId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("visibility")
    public String visibility;

    public EditUserOption withVisibility(String visibility) {
        this.visibility = visibility;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("website")
    public String website;

    public EditUserOption withWebsite(String website) {
        this.website = website;
        return this;
    }
    
    public EditUserOption(@JsonProperty("login_name") String loginName, @JsonProperty("source_id") Long sourceId) {
        this.loginName = loginName;
        this.sourceId = sourceId;
  }
}
