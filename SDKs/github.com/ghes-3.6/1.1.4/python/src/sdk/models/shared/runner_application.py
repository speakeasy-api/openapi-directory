"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RunnerApplication:
    r"""Runner Application"""
    
    architecture: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('architecture') }})  
    download_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('download_url') }})  
    filename: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filename') }})  
    os: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('os') }})  
    sha256_checksum: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sha256_checksum'), 'exclude': lambda f: f is None }})  
    temp_download_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('temp_download_token'), 'exclude': lambda f: f is None }})
    r"""A short lived bearer token used to download the runner, if needed."""  
    