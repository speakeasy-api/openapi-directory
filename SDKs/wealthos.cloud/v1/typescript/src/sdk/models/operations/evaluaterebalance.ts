/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class EvaluateRebalanceSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-api-key",
  })
  apiSecretKey: string;
}

/**
 * Rebalance request triggering type. This describe the types of elements included in the values field
 */
export enum EvaluateRebalanceSwitchInstructionRequestTypeEnum {
  Pot = "pot",
  Investor = "investor",
  Portfolio = "portfolio",
}

/**
 * Definition of Switch instruction
 */
export class EvaluateRebalanceSwitchInstructionRequest extends SpeakeasyBase {
  /**
   * Unique request id to ensure idempotency. (eg: UUID)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "request_id" })
  requestId: string;

  /**
   * Rebalance request triggering type. This describe the types of elements included in the values field
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: EvaluateRebalanceSwitchInstructionRequestTypeEnum;

  /**
   * List of unique Ids from the mentioned type to trigger the rebalance process
   */
  @SpeakeasyMetadata()
  @Expose({ name: "values" })
  values: string[];
}

export class EvaluateRebalanceRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: EvaluateRebalanceSwitchInstructionRequest;

  /**
   * ApiSecretKey
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-api-key",
  })
  xApiKey: string;
}

/**
 * System error. Retry later. If the error persist, contact WOS support
 */
export class EvaluateRebalance500ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
 */
export class EvaluateRebalance429ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Current status of the original request
 */
export enum EvaluateRebalance409ApplicationJSONStatusEnum {
  Processing = "PROCESSING",
  Complete = "COMPLETE",
}

/**
 * Duplicate request
 */
export class EvaluateRebalance409ApplicationJSON extends SpeakeasyBase {
  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  /**
   * Stringified original response body if status is `COMPLETE`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "response" })
  response?: Record<string, any>;

  /**
   * Current status of the original request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: EvaluateRebalance409ApplicationJSONStatusEnum;
}

/**
 * The specified resource was not found
 */
export class EvaluateRebalance404ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
 */
export class EvaluateRebalance403ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You do not have permissions to access this resource.
 */
export class EvaluateRebalance401ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Request is not complete and may have one or more validations errors. Please check the error message and the code
 */
export class EvaluateRebalance400ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Status of whether a pot is capable of rebalance or not
 */
export enum EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequestRebalanceEligibilityStatusEnum {
  Eligible = "eligible",
  Ineligible = "ineligible",
  NoPortfolioAttached = "no_portfolio_attached",
  NegativeHoldings = "negative_holdings",
  NoHoldings = "no_holdings",
}

/**
 * Each individual pot details on the rebalance request
 */
export class EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequest extends SpeakeasyBase {
  /**
   * Unique ID of the Investors attached to the pot
   */
  @SpeakeasyMetadata()
  @Expose({ name: "investor_id" })
  investorId: string;

  /**
   * Portfolio deviation for the pot
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portfolio_deviation" })
  portfolioDeviation?: string;

  /**
   * Unique ID of the portfolio attached to the pot
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portfolio_template_id" })
  portfolioTemplateId?: string;

  /**
   * Identifier of pot evaluated for rebalance
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pot_id" })
  potId: string;

  /**
   * Status of whether a pot is capable of rebalance or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rebalance_eligibility_status" })
  rebalanceEligibilityStatus: EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequestRebalanceEligibilityStatusEnum;
}

/**
 * contains array for pot details
 */
export class EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPot extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequest,
  })
  @Expose({ name: "evaluation_response" })
  @Type(
    () =>
      EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequest
  )
  evaluationResponse: EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPotEachIndividualPotDetailsOnTheRebalanceRequest[];
}

export class EvaluateRebalanceResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Request is not complete and may have one or more validations errors. Please check the error message and the code
   */
  @SpeakeasyMetadata()
  evaluateRebalance400ApplicationJSONObject?: EvaluateRebalance400ApplicationJSON;

  /**
   * You do not have permissions to access this resource.
   */
  @SpeakeasyMetadata()
  evaluateRebalance401ApplicationJSONObject?: EvaluateRebalance401ApplicationJSON;

  /**
   * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
   */
  @SpeakeasyMetadata()
  evaluateRebalance403ApplicationJSONObject?: EvaluateRebalance403ApplicationJSON;

  /**
   * The specified resource was not found
   */
  @SpeakeasyMetadata()
  evaluateRebalance404ApplicationJSONObject?: EvaluateRebalance404ApplicationJSON;

  /**
   * Duplicate request
   */
  @SpeakeasyMetadata()
  evaluateRebalance409ApplicationJSONObject?: EvaluateRebalance409ApplicationJSON;

  /**
   * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
   */
  @SpeakeasyMetadata()
  evaluateRebalance429ApplicationJSONObject?: EvaluateRebalance429ApplicationJSON;

  /**
   * System error. Retry later. If the error persist, contact WOS support
   */
  @SpeakeasyMetadata()
  evaluateRebalance500ApplicationJSONObject?: EvaluateRebalance500ApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * success
   */
  @SpeakeasyMetadata()
  thisIsTheReturnObjectWithEvaluationPerPot?: EvaluateRebalanceThisIsTheReturnObjectWithEvaluationPerPot;
}
