// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AllowedClientMountPermissionsEnum - Mount permissions.
type AllowedClientMountPermissionsEnum string

const (
	AllowedClientMountPermissionsEnumMountPermissionsUnspecified AllowedClientMountPermissionsEnum = "MOUNT_PERMISSIONS_UNSPECIFIED"
	AllowedClientMountPermissionsEnumRead                        AllowedClientMountPermissionsEnum = "READ"
	AllowedClientMountPermissionsEnumReadWrite                   AllowedClientMountPermissionsEnum = "READ_WRITE"
)

func (e *AllowedClientMountPermissionsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MOUNT_PERMISSIONS_UNSPECIFIED":
		fallthrough
	case "READ":
		fallthrough
	case "READ_WRITE":
		*e = AllowedClientMountPermissionsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AllowedClientMountPermissionsEnum: %s", s)
	}
}

// AllowedClient - Represents an 'access point' for the share.
type AllowedClient struct {
	// Allow dev flag. Which controls whether to allow creation of devices.
	AllowDev *bool `json:"allowDev,omitempty"`
	// Allow the setuid flag.
	AllowSuid *bool `json:"allowSuid,omitempty"`
	// The subnet of IP addresses permitted to access the share.
	AllowedClientsCidr *string `json:"allowedClientsCidr,omitempty"`
	// Mount permissions.
	MountPermissions *AllowedClientMountPermissionsEnum `json:"mountPermissions,omitempty"`
	// The network the access point sits on.
	Network *string `json:"network,omitempty"`
	// Output only. The path to access NFS, in format shareIP:/InstanceID InstanceID is the generated ID instead of customer provided name. example like "10.0.0.0:/g123456789-nfs001"
	NfsPath *string `json:"nfsPath,omitempty"`
	// Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.
	NoRootSquash *bool `json:"noRootSquash,omitempty"`
	// Output only. The IP address of the share on this network. Assigned automatically during provisioning based on the network's services_cidr.
	ShareIP *string `json:"shareIp,omitempty"`
}

// AllowedClientInput - Represents an 'access point' for the share.
type AllowedClientInput struct {
	// Allow dev flag. Which controls whether to allow creation of devices.
	AllowDev *bool `json:"allowDev,omitempty"`
	// Allow the setuid flag.
	AllowSuid *bool `json:"allowSuid,omitempty"`
	// The subnet of IP addresses permitted to access the share.
	AllowedClientsCidr *string `json:"allowedClientsCidr,omitempty"`
	// Mount permissions.
	MountPermissions *AllowedClientMountPermissionsEnum `json:"mountPermissions,omitempty"`
	// The network the access point sits on.
	Network *string `json:"network,omitempty"`
	// Disable root squashing, which is a feature of NFS. Root squash is a special mapping of the remote superuser (root) identity when using identity authentication.
	NoRootSquash *bool `json:"noRootSquash,omitempty"`
}
