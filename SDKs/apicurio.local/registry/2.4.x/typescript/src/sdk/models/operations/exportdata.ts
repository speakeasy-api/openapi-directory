/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ExportDataRequest extends SpeakeasyBase {
  /**
   * Indicates if the operation is done for a browser.  If true, the response will be a JSON payload with a property called `href`.  This `href` will be a single-use, naked download link suitable for use by a web browser to download the content.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=forBrowser",
  })
  forBrowser?: boolean;
}

export class ExportDataResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Response when the export is successful.
   */
  @SpeakeasyMetadata()
  downloadRef?: shared.DownloadRef;

  /**
   * Common response for all operations that can fail with an unexpected server error.
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * Response when the export is successful.
   */
  @SpeakeasyMetadata()
  fileContent?: Uint8Array;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
