"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import continuewatchinglistdataexpansion as shared_continuewatchinglistdataexpansion
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ContinueWatchingListData:
    r"""List data for ContinueWatching List"""
    
    item_inclusions: Optional[dict[str, shared_continuewatchinglistdataexpansion.ContinueWatchingListDataExpansion]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('itemInclusions'), 'exclude': lambda f: f is None }})
    r"""Object where keys are itemIds for the items in the list and values are objects
    containing additional items (either episode/season/show) that were requested
    in the \"include\" query option.
    
    For example if you request the ContinueWatching list with \"season\" items in
    the list, you can specify `include=episode` and then the specific next episode
    will be returned in this object.
    """  
    