/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateConversationScopedWebhookServerList = [
  "https://conversations.twilio.com",
] as const;

export class UpdateConversationScopedWebhookSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class UpdateConversationScopedWebhookUpdateConversationScopedWebhookRequest extends SpeakeasyBase {
  /**
   * The list of events, firing webhook event for this Conversation.
   */
  @SpeakeasyMetadata({ data: "form, name=Configuration.Filters" })
  configurationFilters?: string[];

  /**
   * The studio flow SID, where the webhook should be sent to.
   */
  @SpeakeasyMetadata({ data: "form, name=Configuration.FlowSid" })
  configurationFlowSid?: string;

  @SpeakeasyMetadata({ data: "form, name=Configuration.Method" })
  configurationMethod?: shared.ConversationScopedWebhookEnumMethodEnum;

  /**
   * The list of keywords, firing webhook event for this Conversation.
   */
  @SpeakeasyMetadata({ data: "form, name=Configuration.Triggers" })
  configurationTriggers?: string[];

  /**
   * The absolute url the webhook request should be sent to.
   */
  @SpeakeasyMetadata({ data: "form, name=Configuration.Url" })
  configurationUrl?: string;
}

export class UpdateConversationScopedWebhookRequest extends SpeakeasyBase {
  /**
   * The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ConversationSid",
  })
  conversationSid: string;

  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateConversationScopedWebhookUpdateConversationScopedWebhookRequest;

  /**
   * A 34 character string that uniquely identifies this resource.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Sid" })
  sid: string;
}

export class UpdateConversationScopedWebhookResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  conversationsV1ConversationConversationScopedWebhook?: shared.ConversationsV1ConversationConversationScopedWebhook;
}
