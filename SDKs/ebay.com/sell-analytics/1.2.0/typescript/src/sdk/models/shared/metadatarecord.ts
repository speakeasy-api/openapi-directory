/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Value } from "./value";
import { Expose, Type } from "class-transformer";

/**
 * A complex type that defines the data records returned in the report.
 */
export class MetadataRecord extends SpeakeasyBase {
  /**
   * A list of data in a row returned in the traffic report. The data in each of the cells match the labels in headers of the report.
   */
  @SpeakeasyMetadata({ elemType: Value })
  @Expose({ name: "metadataValues" })
  @Type(() => Value)
  metadataValues?: Value[];

  /**
   * A complex type that contains a value, plus the veracity of that value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  @Type(() => Value)
  value?: Value;
}
