// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetEnrollmentStatusesForOrganizationXAmzTargetEnum
type GetEnrollmentStatusesForOrganizationXAmzTargetEnum string

const (
	GetEnrollmentStatusesForOrganizationXAmzTargetEnumComputeOptimizerServiceGetEnrollmentStatusesForOrganization GetEnrollmentStatusesForOrganizationXAmzTargetEnum = "ComputeOptimizerService.GetEnrollmentStatusesForOrganization"
)

func (e GetEnrollmentStatusesForOrganizationXAmzTargetEnum) ToPointer() *GetEnrollmentStatusesForOrganizationXAmzTargetEnum {
	return &e
}

func (e *GetEnrollmentStatusesForOrganizationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ComputeOptimizerService.GetEnrollmentStatusesForOrganization":
		*e = GetEnrollmentStatusesForOrganizationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetEnrollmentStatusesForOrganizationXAmzTargetEnum: %v", v)
	}
}

type GetEnrollmentStatusesForOrganizationRequest struct {
	GetEnrollmentStatusesForOrganizationRequest shared.GetEnrollmentStatusesForOrganizationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                               *string                                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                           *string                                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                              *string                                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                    *string                                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                           *string                                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                               *string                                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                           *string                                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                  GetEnrollmentStatusesForOrganizationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type GetEnrollmentStatusesForOrganizationResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	GetEnrollmentStatusesForOrganizationResponse *shared.GetEnrollmentStatusesForOrganizationResponse
	// InternalServerException
	InternalServerException interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// MissingAuthenticationToken
	MissingAuthenticationToken interface{}
	StatusCode                 int
	RawResponse                *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
