/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PaymentInitiationBulkElementJson - Generic body for a bulk payment initation entry.
 * 
 * The bulk entry type is a type which follows the JSON formats for the supported products for single payments
 * excluding the data elements (if supported):
 *   * debtorAccount
 *   * requestedExecutionDate,
 *   * requestedExecutionTime.
 * These data elements may not be contained in any bulk entry.
 * 
 * This data object can be used to represent valid bulk payment initiations entry for the following JSON based payment product,
 * which where defined in the Implementation Guidelines:
 * 
 *   * domestic-swiss-credit-transfers-isr
 *   * domestic-swiss-credit-transfers
 *   * domestic-swiss-credit-transfers-qr
 *   * domestic-swiss-foreign-credit-transfers
 *   * swiss-sepa-credit-transfers
 *   * swiss-cross-border-credit-transfers
 * 
 * For the convenience of the implementer additional which are already predefinded in the Implementation Guidelines
 * are included (but commented in source code), such that an ASPSP may add them easily.
 * 
 * Take care: Since the format is intended to fit for all payment products
 * there are additional conditions which are NOT covered by this specification.
 * Please check the SIX Swiss Payment Standards implementation guidelines for details.
 * 
 * 
 * The following data element are depending on the actual payment product available (in source code):
 * 
 * &lt;table style="width:100%"&gt;
 * &lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;td&gt;Payment Type 1: ISR&lt;/td&gt;&lt;td&gt;Payment Type 3: IBAN/postal account and IID/BIC&lt;/td&gt;&lt;td&gt;Payment Type 3: QR-bill&lt;/td&gt;&lt;td&gt;Payment Type 4: Foreign currency&lt;/td&gt;&lt;td&gt;Payment Type 5: Foreign SEPA&lt;/td&gt;&lt;td&gt;Payment Type 6: Foreign&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;CH Domestic Data Element&lt;/td&gt;&lt;td&gt;domestic-swiss-credit-transfers-isr&lt;/td&gt;&lt;td&gt;domestic-swiss-credit-transfers&lt;/td&gt;&lt;td&gt;domestic-swiss-credit-transfers-qr&lt;/td&gt;&lt;td&gt;domestic-swiss-foreign-credit-transfers&lt;/td&gt;&lt;td&gt;swiss-sepa-credit-transfers&lt;/td&gt;&lt;td&gt;swiss-cross-border-credit-transfers&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;endToEndIdentification&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;instructionIdentification&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;debtorName&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;debtorId&lt;/td&gt;&lt;td&gt;optional 3)&lt;/td&gt;&lt;td&gt;optional 3)&lt;/td&gt;&lt;td&gt;optional 3)&lt;/td&gt;&lt;td&gt;optional 3)&lt;/td&gt;&lt;td&gt;optional 3)&lt;/td&gt;&lt;td&gt;optional 3)&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;ultimateDebtor&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;instructedAmount (incl. currency)&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;dependent 1)&lt;/td&gt;&lt;td&gt;dependent 1)&lt;/td&gt;&lt;td&gt;dependent 1)&lt;/td&gt;&lt;td&gt;dependent 1)&lt;/td&gt;&lt;td&gt;dependent 1)&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;equivalentAmount&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;dependent 1)&lt;/td&gt;&lt;td&gt;dependent 1)&lt;/td&gt;&lt;td&gt;dependent 1)&lt;/td&gt;&lt;td&gt;dependent 1)&lt;/td&gt;&lt;td&gt;dependent 1)&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;transactionCurrency&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;dependent 1)&lt;/td&gt;&lt;td&gt;dependent 1)&lt;/td&gt;&lt;td&gt;dependent 1)&lt;/td&gt;&lt;td&gt;dependent 1)&lt;/td&gt;&lt;td&gt;dependent 1)&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;exchangeRateInformation&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;optional 2)&lt;/td&gt;&lt;td&gt;optional 2)&lt;/td&gt;&lt;td&gt;optional 2)&lt;/td&gt;&lt;td&gt;optional 2)&lt;/td&gt;&lt;td&gt;optional 2)&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;creditorAccount&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory 8)&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;creditorAgent&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;dependent 4)&lt;/td&gt;&lt;td&gt;dependent 4)&lt;/td&gt;&lt;td&gt;dependent 4)&lt;/td&gt;&lt;td&gt;dependent 4)&lt;/td&gt;&lt;td&gt;dependent 4)&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;creditorAgentName&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;dependent 5)&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;dependent 5)&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;creditorName&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;creditorId&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;creditorAddress&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;creditorNameAndAddress&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;dependent&lt;/td&gt;&lt;td&gt;dependent&lt;/td&gt;&lt;td&gt;dependent&lt;/td&gt;&lt;td&gt;dependent&lt;/td&gt;&lt;td&gt;dependent&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;ultimateCreditor&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;n.a. (for future use)&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;chargeBearer&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;purposeCode&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;serviceLevel&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;remittanceInformationUnstructured&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;remittanceInformationUnstructuredArray&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;remittanceInformationStructured&lt;/td&gt;&lt;td&gt;mandatory&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;mandatory 6)&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;td&gt;optional&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;remittanceInformationStructuredArray&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;/tr&gt;
 * &lt;tr&gt;&lt;td&gt;intermediaryAgent&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;optional 2)&lt;/td&gt;&lt;td&gt;n.a.&lt;/td&gt;&lt;td&gt;optional 2)&lt;/td&gt;&lt;/tr&gt;
 * &lt;/table&gt;
 * 
 * Footnotes from the table:
 * 1) This element may only be used by agreement with the instructed financial institution.
 * 2) The element may only be used in consultation with the financial institution commissioned.
 * 3) The element is currently ignored by financial institutions.
 * 4) Dependence on creditorAccount, see SIX Swiss Payments Standards implementation guidelines.
 * 5) Type 4(V3), 6(V2, V3): Must be present. Type 4(V2): May be present. Other species: May not be present.
 * 6) QR-reference, creditor reference or IPI reference
 * 7) currencyOfTransfer is a subfield of equivalentAmount and may only be used if equivalentAmount is used instead of instructedAmount.
 * 8) QR-IBAN (CH/LI) must be present.
 * 
 * IMPORTANT: In this API definition the following holds:
 *   *  All data elements mentioned above are defined, but some of them are commented,
 *     i.e. they are only visible in the source code and can be used by uncommenting them.
 *   * Data elements which are mandatory in the table above for all payment products
 *     are set to be mandatory in this specification.
 *   * Data elements which are indicated in the table above as n.a. for all payment products are commented in the source code.
 *   * Data elements which are indicated to be option, conditional or mandatory for at least one payment product
 *     in the table above are set to be optional in the s specification except the case where all are definde to be mandatory.
 *   * Data element which are inticated to be n.a. can be used by the ASPS if needed.
 *     In this case uncomment tthe the relatetd lines in the source code.
 *   * If one uses this data types for some payment products he has to ensure that the used data type is
 *     valid according to the underlying payment product, e.g. by some appropriate validations.
 * 
 */
public class PaymentInitiationBulkElementJson {
    /**
     * Charge Bearer. ChargeBearerType1Code from ISO20022.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeBearer")
    public ChargeBearerEnum chargeBearer;

    public PaymentInitiationBulkElementJson withChargeBearer(ChargeBearerEnum chargeBearer) {
        this.chargeBearer = chargeBearer;
        return this;
    }
    
    /**
     * Reference to an account by either
     *   * IBAN, of a payment accounts, or
     *   * otherAccountIdentification, for payment accounts if there is no IBAN
     * adapted from ISO pain.001.001.03.ch.02 CashAccount16-CH_IdTpCcy
     * 
     */
    @JsonProperty("creditorAccount")
    public AccountReference16CH creditorAccount;

    public PaymentInitiationBulkElementJson withCreditorAccount(AccountReference16CH creditorAccount) {
        this.creditorAccount = creditorAccount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditorAddress")
    public Address creditorAddress;

    public PaymentInitiationBulkElementJson withCreditorAddress(Address creditorAddress) {
        this.creditorAddress = creditorAddress;
        return this;
    }
    
    /**
     * Reference to an creditorAgent by either
     *   * BIC, of the creditor bank, or
     *   * IID, of the creditor bank, or
     *   * IID and optional name and address of the creditor bank or
     *   * Name and address of the creditor bank
     * adapted from ISO pain.001.001.03.ch.02 FinancialInstitutionIdentification7-CH
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditorAgent")
    public CreditorAgent7CH creditorAgent;

    public PaymentInitiationBulkElementJson withCreditorAgent(CreditorAgent7CH creditorAgent) {
        this.creditorAgent = creditorAgent;
        return this;
    }
    
    /**
     * Creditor agent name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditorAgentName")
    public String creditorAgentName;

    public PaymentInitiationBulkElementJson withCreditorAgentName(String creditorAgentName) {
        this.creditorAgentName = creditorAgentName;
        return this;
    }
    
    /**
     * Identification of Creditors, e.g. a SEPA Creditor ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditorId")
    public String creditorId;

    public PaymentInitiationBulkElementJson withCreditorId(String creditorId) {
        this.creditorId = creditorId;
        return this;
    }
    
    /**
     * Creditor name.
     */
    @JsonProperty("creditorName")
    public String creditorName;

    public PaymentInitiationBulkElementJson withCreditorName(String creditorName) {
        this.creditorName = creditorName;
        return this;
    }
    
    /**
     * Creditor Name and Address in a free text field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditorNameAndAddress")
    public String creditorNameAndAddress;

    public PaymentInitiationBulkElementJson withCreditorNameAndAddress(String creditorNameAndAddress) {
        this.creditorNameAndAddress = creditorNameAndAddress;
        return this;
    }
    
    /**
     * Debtor Id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("debtorId")
    public String debtorId;

    public PaymentInitiationBulkElementJson withDebtorId(String debtorId) {
        this.debtorId = debtorId;
        return this;
    }
    
    /**
     * Debtor name.
     */
    @JsonProperty("debtorName")
    public String debtorName;

    public PaymentInitiationBulkElementJson withDebtorName(String debtorName) {
        this.debtorName = debtorName;
        return this;
    }
    
    @JsonProperty("endToEndIdentification")
    public String endToEndIdentification;

    public PaymentInitiationBulkElementJson withEndToEndIdentification(String endToEndIdentification) {
        this.endToEndIdentification = endToEndIdentification;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("equivalentAmount")
    public Amount equivalentAmount;

    public PaymentInitiationBulkElementJson withEquivalentAmount(Amount equivalentAmount) {
        this.equivalentAmount = equivalentAmount;
        return this;
    }
    
    /**
     * as in ISO pain.001.001.03.ch.02 ExchangeRateInformation1
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exchangeRateInformation")
    public ExchangeRateInformation1 exchangeRateInformation;

    public PaymentInitiationBulkElementJson withExchangeRateInformation(ExchangeRateInformation1 exchangeRateInformation) {
        this.exchangeRateInformation = exchangeRateInformation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instructedAmount")
    public Amount instructedAmount;

    public PaymentInitiationBulkElementJson withInstructedAmount(Amount instructedAmount) {
        this.instructedAmount = instructedAmount;
        return this;
    }
    
    /**
     * BICFI
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("intermediaryAgent")
    public String intermediaryAgent;

    public PaymentInitiationBulkElementJson withIntermediaryAgent(String intermediaryAgent) {
        this.intermediaryAgent = intermediaryAgent;
        return this;
    }
    
    /**
     * ExternalPurpose1Code from ISO 20022.
     * 
     * Values from ISO 20022 External Code List ExternalCodeSets_1Q2018 June 2018.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("purposeCode")
    public PurposeCodeEnum purposeCode;

    public PaymentInitiationBulkElementJson withPurposeCode(PurposeCodeEnum purposeCode) {
        this.purposeCode = purposeCode;
        return this;
    }
    
    /**
     * Structured remittance information.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remittanceInformationStructured")
    public RemittanceInformationStructured remittanceInformationStructured;

    public PaymentInitiationBulkElementJson withRemittanceInformationStructured(RemittanceInformationStructured remittanceInformationStructured) {
        this.remittanceInformationStructured = remittanceInformationStructured;
        return this;
    }
    
    /**
     * Unstructured remittance information.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remittanceInformationUnstructured")
    public String remittanceInformationUnstructured;

    public PaymentInitiationBulkElementJson withRemittanceInformationUnstructured(String remittanceInformationUnstructured) {
        this.remittanceInformationUnstructured = remittanceInformationUnstructured;
        return this;
    }
    
    /**
     * Specifies the external service level code in the format of character string with a maximum length of 4 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceLevel")
    public ExternalServiceLevel1CodeEnum serviceLevel;

    public PaymentInitiationBulkElementJson withServiceLevel(ExternalServiceLevel1CodeEnum serviceLevel) {
        this.serviceLevel = serviceLevel;
        return this;
    }
    
    /**
     * ISO 4217 Alpha 3 currency code.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transactionCurrency")
    public String transactionCurrency;

    public PaymentInitiationBulkElementJson withTransactionCurrency(String transactionCurrency) {
        this.transactionCurrency = transactionCurrency;
        return this;
    }
    
    /**
     * Ultimate creditor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ultimateCreditor")
    public String ultimateCreditor;

    public PaymentInitiationBulkElementJson withUltimateCreditor(String ultimateCreditor) {
        this.ultimateCreditor = ultimateCreditor;
        return this;
    }
    
    /**
     * Ultimate debtor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ultimateDebtor")
    public String ultimateDebtor;

    public PaymentInitiationBulkElementJson withUltimateDebtor(String ultimateDebtor) {
        this.ultimateDebtor = ultimateDebtor;
        return this;
    }
    
    public PaymentInitiationBulkElementJson(@JsonProperty("creditorAccount") AccountReference16CH creditorAccount, @JsonProperty("creditorName") String creditorName, @JsonProperty("debtorName") String debtorName, @JsonProperty("endToEndIdentification") String endToEndIdentification) {
        this.creditorAccount = creditorAccount;
        this.creditorName = creditorName;
        this.debtorName = debtorName;
        this.endToEndIdentification = endToEndIdentification;
  }
}
