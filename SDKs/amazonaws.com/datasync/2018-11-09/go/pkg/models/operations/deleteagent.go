// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteAgentXAmzTargetEnum
type DeleteAgentXAmzTargetEnum string

const (
	DeleteAgentXAmzTargetEnumFmrsServiceDeleteAgent DeleteAgentXAmzTargetEnum = "FmrsService.DeleteAgent"
)

func (e DeleteAgentXAmzTargetEnum) ToPointer() *DeleteAgentXAmzTargetEnum {
	return &e
}

func (e *DeleteAgentXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FmrsService.DeleteAgent":
		*e = DeleteAgentXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteAgentXAmzTargetEnum: %v", v)
	}
}

type DeleteAgentRequest struct {
	DeleteAgentRequest shared.DeleteAgentRequest `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         DeleteAgentXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteAgentResponse struct {
	ContentType string
	// Success
	DeleteAgentResponse map[string]interface{}
	// InternalException
	InternalException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
}
