/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AffineTransform - AffineTransform uses a 3x3 matrix with an implied last row of [ 0 0 1 ] to transform source coordinates (x,y) into destination coordinates (x', y') according to: x' x = shear_y scale_y translate_y 1 [ 1 ] After transformation, x' = scale_x * x + shear_x * y + translate_x; y' = scale_y * y + shear_y * x + translate_y; This message is therefore composed of these six matrix elements.
 */
public class AffineTransform {
    /**
     * The X coordinate scaling element.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scaleX")
    public Double scaleX;

    public AffineTransform withScaleX(Double scaleX) {
        this.scaleX = scaleX;
        return this;
    }
    
    /**
     * The Y coordinate scaling element.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scaleY")
    public Double scaleY;

    public AffineTransform withScaleY(Double scaleY) {
        this.scaleY = scaleY;
        return this;
    }
    
    /**
     * The X coordinate shearing element.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shearX")
    public Double shearX;

    public AffineTransform withShearX(Double shearX) {
        this.shearX = shearX;
        return this;
    }
    
    /**
     * The Y coordinate shearing element.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shearY")
    public Double shearY;

    public AffineTransform withShearY(Double shearY) {
        this.shearY = shearY;
        return this;
    }
    
    /**
     * The X coordinate translation element.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("translateX")
    public Double translateX;

    public AffineTransform withTranslateX(Double translateX) {
        this.translateX = translateX;
        return this;
    }
    
    /**
     * The Y coordinate translation element.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("translateY")
    public Double translateY;

    public AffineTransform withTranslateY(Double translateY) {
        this.translateY = translateY;
        return this;
    }
    
    /**
     * The units for translate elements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unit")
    public AffineTransformUnitEnum unit;

    public AffineTransform withUnit(AffineTransformUnitEnum unit) {
        this.unit = unit;
        return this;
    }
    
    public AffineTransform(){}
}
