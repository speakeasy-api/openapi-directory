// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteSAMLProviderActionEnum
type GETDeleteSAMLProviderActionEnum string

const (
	GETDeleteSAMLProviderActionEnumDeleteSamlProvider GETDeleteSAMLProviderActionEnum = "DeleteSAMLProvider"
)

func (e *GETDeleteSAMLProviderActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteSAMLProvider":
		*e = GETDeleteSAMLProviderActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteSAMLProviderActionEnum: %s", s)
	}
}

// GETDeleteSAMLProviderVersionEnum
type GETDeleteSAMLProviderVersionEnum string

const (
	GETDeleteSAMLProviderVersionEnumTwoThousandAndTen0508 GETDeleteSAMLProviderVersionEnum = "2010-05-08"
)

func (e *GETDeleteSAMLProviderVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-08":
		*e = GETDeleteSAMLProviderVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteSAMLProviderVersionEnum: %s", s)
	}
}

type GETDeleteSAMLProviderQueryParams struct {
	Action GETDeleteSAMLProviderActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The Amazon Resource Name (ARN) of the SAML provider to delete.
	SAMLProviderArn string                           `queryParam:"style=form,explode=true,name=SAMLProviderArn"`
	Version         GETDeleteSAMLProviderVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDeleteSAMLProviderHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteSAMLProviderRequest struct {
	QueryParams GETDeleteSAMLProviderQueryParams
	Headers     GETDeleteSAMLProviderHeaders
}

type GETDeleteSAMLProviderResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
