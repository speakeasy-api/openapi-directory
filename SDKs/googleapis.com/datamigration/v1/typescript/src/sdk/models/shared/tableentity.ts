/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ColumnEntity } from "./columnentity";
import { ConstraintEntity } from "./constraintentity";
import { IndexEntity } from "./indexentity";
import { TriggerEntity } from "./triggerentity";
import { Expose, Type } from "class-transformer";

/**
 * Table's parent is a schema.
 */
export class TableEntity extends SpeakeasyBase {
  /**
   * Table columns.
   */
  @SpeakeasyMetadata({ elemType: ColumnEntity })
  @Expose({ name: "columns" })
  @Type(() => ColumnEntity)
  columns?: ColumnEntity[];

  /**
   * Comment associated with the table.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  /**
   * Table constraints.
   */
  @SpeakeasyMetadata({ elemType: ConstraintEntity })
  @Expose({ name: "constraints" })
  @Type(() => ConstraintEntity)
  constraints?: ConstraintEntity[];

  /**
   * Custom engine specific features.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customFeatures" })
  customFeatures?: Record<string, any>;

  /**
   * Table indices.
   */
  @SpeakeasyMetadata({ elemType: IndexEntity })
  @Expose({ name: "indices" })
  @Type(() => IndexEntity)
  indices?: IndexEntity[];

  /**
   * Table triggers.
   */
  @SpeakeasyMetadata({ elemType: TriggerEntity })
  @Expose({ name: "triggers" })
  @Type(() => TriggerEntity)
  triggers?: TriggerEntity[];
}
