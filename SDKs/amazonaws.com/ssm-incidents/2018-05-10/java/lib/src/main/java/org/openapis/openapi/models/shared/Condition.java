/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Condition - A conditional statement with which to compare a value, after a timestamp, before a timestamp, or equal to a string or integer. If multiple conditions are specified, the conditionals become an &lt;code&gt;AND&lt;/code&gt;ed statement. If multiple values are specified for a conditional, the values are &lt;code&gt;OR&lt;/code&gt;d.
 */
public class Condition {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("after")
    public OffsetDateTime after;
    public Condition withAfter(OffsetDateTime after) {
        this.after = after;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("before")
    public OffsetDateTime before;
    public Condition withBefore(OffsetDateTime before) {
        this.before = before;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("equals")
    public AttributeValueList equals;
    public Condition withEquals(AttributeValueList equals) {
        this.equals = equals;
        return this;
    }
    
}
