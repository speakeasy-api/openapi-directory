/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Http - Defines the HTTP configuration for an API service. It contains a list of HttpRule, each specifying the mapping of an RPC method to one or more HTTP REST API methods.
 */
public class Http {
    /**
     * When set to true, URL path parameters will be fully URI-decoded except in cases of single segment matches in reserved expansion, where "%2F" will be left encoded. The default behavior is to not decode RFC 6570 reserved characters in multi segment matches.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullyDecodeReservedExpansion")
    public Boolean fullyDecodeReservedExpansion;

    public Http withFullyDecodeReservedExpansion(Boolean fullyDecodeReservedExpansion) {
        this.fullyDecodeReservedExpansion = fullyDecodeReservedExpansion;
        return this;
    }
    
    /**
     * A list of HTTP configuration rules that apply to individual API methods. **NOTE:** All service configuration rules follow "last one wins" order.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rules")
    public HttpRule[] rules;

    public Http withRules(HttpRule[] rules) {
        this.rules = rules;
        return this;
    }
    
    public Http(){}
}
