/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PostPortfolioAnalysisAlphaRequestBody2Portfolios extends SpeakeasyBase {
  /**
   * portfolioReturns[t] is the return of the portfolio at the time t, all the portfolioReturns arrays must have the same length, equal to the length of the benchmarkReturns array
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portfolioReturns" })
  portfolioReturns: number[];
}

export class PostPortfolioAnalysisAlphaRequestBody2 extends SpeakeasyBase {
  /**
   * benchmarkReturns[t] is the return of the benchmark at the time t; the benchmarkReturns array must have the same length as all the portfolioReturns arrays
   */
  @SpeakeasyMetadata()
  @Expose({ name: "benchmarkReturns" })
  benchmarkReturns: number[];

  @SpeakeasyMetadata({
    elemType: PostPortfolioAnalysisAlphaRequestBody2Portfolios,
  })
  @Expose({ name: "portfolios" })
  @Type(() => PostPortfolioAnalysisAlphaRequestBody2Portfolios)
  portfolios: PostPortfolioAnalysisAlphaRequestBody2Portfolios[];

  /**
   * riskFreeReturns[t] is the risk free return at the time t; the riskFreeReturns array must have the same length as all the portfolioReturns arrays
   */
  @SpeakeasyMetadata()
  @Expose({ name: "riskFreeReturns" })
  riskFreeReturns?: number[];
}

export class PostPortfolioAnalysisAlphaRequestBody1Portfolios extends SpeakeasyBase {
  /**
   * portfolioReturns[t] is the return of the portfolio at the time t, all the portfolioReturns arrays must have the same length, equal to the length of the benchmarkReturns array
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portfolioReturns" })
  portfolioReturns: number[];
}

export class PostPortfolioAnalysisAlphaRequestBody1 extends SpeakeasyBase {
  /**
   * benchmarkReturns[t] is the return of the benchmark at the time t; the benchmarkReturns array must have the same length as all the portfolioReturns arrays
   */
  @SpeakeasyMetadata()
  @Expose({ name: "benchmarkReturns" })
  benchmarkReturns: number[];

  @SpeakeasyMetadata({
    elemType: PostPortfolioAnalysisAlphaRequestBody1Portfolios,
  })
  @Expose({ name: "portfolios" })
  @Type(() => PostPortfolioAnalysisAlphaRequestBody1Portfolios)
  portfolios: PostPortfolioAnalysisAlphaRequestBody1Portfolios[];

  /**
   * The risk free rate, assumed to be constant for any time t
   */
  @SpeakeasyMetadata()
  @Expose({ name: "riskFreeRate" })
  riskFreeRate?: number;
}

export class PostPortfolioAnalysisAlpha200ApplicationJSONPortfolios extends SpeakeasyBase {
  /**
   * The portfolio Jensen's alpha, which correponds to the portfolio excess return adjusted for the systematic risk in the Capital Asset Pricing Model (CAPM)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portfolioAlpha" })
  portfolioAlpha: number;
}

/**
 * OK
 */
export class PostPortfolioAnalysisAlpha200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: PostPortfolioAnalysisAlpha200ApplicationJSONPortfolios,
  })
  @Expose({ name: "portfolios" })
  @Type(() => PostPortfolioAnalysisAlpha200ApplicationJSONPortfolios)
  portfolios: PostPortfolioAnalysisAlpha200ApplicationJSONPortfolios[];
}

export class PostPortfolioAnalysisAlphaResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  postPortfolioAnalysisAlpha200ApplicationJSONObject?: PostPortfolioAnalysisAlpha200ApplicationJSON;
}
