<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * HealthQuestionDefinitionResourceAttributesRequirements - The age and gender requirement for the question to be included
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class HealthQuestionDefinitionResourceAttributesRequirements
{
	#[\JMS\Serializer\Annotation\SerializedName('property')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $property = null;
    
    /**
     * Specifies if the value in property should be equal to the one in value
     * 
     * @var ?bool $shouldBeEqual
     */
	#[\JMS\Serializer\Annotation\SerializedName('shouldBeEqual')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $shouldBeEqual = null;
    
    /**
     * Specifies if the value in property should be greater than the one in value
     * 
     * @var ?float $shouldBeGreaterThan
     */
	#[\JMS\Serializer\Annotation\SerializedName('shouldBeGreaterThan')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $shouldBeGreaterThan = null;
    
    /**
     * Specifies if the value in property should be less than the one in value
     * 
     * @var ?float $shouldBeLessThan
     */
	#[\JMS\Serializer\Annotation\SerializedName('shouldBeLessThan')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $shouldBeLessThan = null;
    
    /**
     * The value to be compared with the one in property, based on shouldBeEqual, shouldBeGreaterThan, or shouldBeLessThan
     * 
     * @var ?string $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $value = null;
    
	public function __construct()
	{
		$this->property = null;
		$this->shouldBeEqual = null;
		$this->shouldBeGreaterThan = null;
		$this->shouldBeLessThan = null;
		$this->value = null;
	}
}
