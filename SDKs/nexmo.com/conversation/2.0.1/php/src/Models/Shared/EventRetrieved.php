<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * EventRetrieved - Retrieve Events Response Payload Object Item
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class EventRetrieved
{
    /**
     * Event Body
     * 
     * @var array<string, mixed> $body
     */
	#[\JMS\Serializer\Annotation\SerializedName('body')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    public array $body;
    
    /**
     * Member ID
     * 
     * @var ?string $from
     */
	#[\JMS\Serializer\Annotation\SerializedName('from')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $from = null;
    
    /**
     * A link towards a conversation event included in Conversation API
     * 
     * @var string $href
     */
	#[\JMS\Serializer\Annotation\SerializedName('href')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $href;
    
    /**
     * Event id. This is a progressive integer
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * The state that the member is in. Possible values are `invited`, `joined`, `left`, or `unknown`
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MemberStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\MemberStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MemberStateEnum $state = null;
    
    /**
     * Time of creation
     * 
     * @var string $timestamp
     */
	#[\JMS\Serializer\Annotation\SerializedName('timestamp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $timestamp;
    
    /**
     * Member ID
     * 
     * @var ?string $to
     */
	#[\JMS\Serializer\Annotation\SerializedName('to')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $to = null;
    
    /**
     * Event type
     * 
     * @var string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $type;
    
	public function __construct()
	{
		$this->body = [];
		$this->from = null;
		$this->href = "";
		$this->id = "";
		$this->state = null;
		$this->timestamp = "";
		$this->to = null;
		$this->type = "";
	}
}
