// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DevicesListCsvFormatSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type DevicesListCsvFormatPathParams struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the distribution group.
	DistributionGroupName string `pathParam:"style=simple,explode=false,name=distribution_group_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type DevicesListCsvFormatQueryParams struct {
	// multiple UDIDs which should be part of the resulting CSV.
	Udids []string `queryParam:"style=form,explode=false,name=udids"`
	// when true, filters out provisioned devices
	UnprovisionedOnly *bool `queryParam:"style=form,explode=true,name=unprovisioned_only"`
}

type DevicesListCsvFormatRequest struct {
	PathParams  DevicesListCsvFormatPathParams
	QueryParams DevicesListCsvFormatQueryParams
	Security    DevicesListCsvFormatSecurity
}

type DevicesListCsvFormat400TextCsvCodeEnum string

const (
	DevicesListCsvFormat400TextCsvCodeEnumBadRequest          DevicesListCsvFormat400TextCsvCodeEnum = "BadRequest"
	DevicesListCsvFormat400TextCsvCodeEnumConflict            DevicesListCsvFormat400TextCsvCodeEnum = "Conflict"
	DevicesListCsvFormat400TextCsvCodeEnumNotAcceptable       DevicesListCsvFormat400TextCsvCodeEnum = "NotAcceptable"
	DevicesListCsvFormat400TextCsvCodeEnumNotFound            DevicesListCsvFormat400TextCsvCodeEnum = "NotFound"
	DevicesListCsvFormat400TextCsvCodeEnumInternalServerError DevicesListCsvFormat400TextCsvCodeEnum = "InternalServerError"
	DevicesListCsvFormat400TextCsvCodeEnumUnauthorized        DevicesListCsvFormat400TextCsvCodeEnum = "Unauthorized"
	DevicesListCsvFormat400TextCsvCodeEnumTooManyRequests     DevicesListCsvFormat400TextCsvCodeEnum = "TooManyRequests"
)

func (e *DevicesListCsvFormat400TextCsvCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = DevicesListCsvFormat400TextCsvCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DevicesListCsvFormat400TextCsvCodeEnum: %s", s)
	}
}

// DevicesListCsvFormat400TextCsv - <b>bad_request</b>: Devices information can only be requested for iOS apps.
type DevicesListCsvFormat400TextCsv struct {
	Code    DevicesListCsvFormat400TextCsvCodeEnum
	Message string
}

type DevicesListCsvFormatResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
