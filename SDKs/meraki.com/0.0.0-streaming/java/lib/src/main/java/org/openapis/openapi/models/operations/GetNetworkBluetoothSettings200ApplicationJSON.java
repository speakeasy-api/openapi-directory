/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GetNetworkBluetoothSettings200ApplicationJSON - Successful operation
 */
public class GetNetworkBluetoothSettings200ApplicationJSON {
    /**
     * Whether APs will advertise beacons.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advertisingEnabled")
    public Boolean advertisingEnabled;
    public GetNetworkBluetoothSettings200ApplicationJSON withAdvertisingEnabled(Boolean advertisingEnabled) {
        this.advertisingEnabled = advertisingEnabled;
        return this;
    }
    
    /**
     * The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("major")
    public Long major;
    public GetNetworkBluetoothSettings200ApplicationJSON withMajor(Long major) {
        this.major = major;
        return this;
    }
    
    /**
     * The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("majorMinorAssignmentMode")
    public String majorMinorAssignmentMode;
    public GetNetworkBluetoothSettings200ApplicationJSON withMajorMinorAssignmentMode(String majorMinorAssignmentMode) {
        this.majorMinorAssignmentMode = majorMinorAssignmentMode;
        return this;
    }
    
    /**
     * The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minor")
    public Long minor;
    public GetNetworkBluetoothSettings200ApplicationJSON withMinor(Long minor) {
        this.minor = minor;
        return this;
    }
    
    /**
     * Whether APs will scan for Bluetooth enabled clients.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scanningEnabled")
    public Boolean scanningEnabled;
    public GetNetworkBluetoothSettings200ApplicationJSON withScanningEnabled(Boolean scanningEnabled) {
        this.scanningEnabled = scanningEnabled;
        return this;
    }
    
    /**
     * The UUID to be used in the beacon identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uuid")
    public String uuid;
    public GetNetworkBluetoothSettings200ApplicationJSON withUuid(String uuid) {
        this.uuid = uuid;
        return this;
    }
    
}
