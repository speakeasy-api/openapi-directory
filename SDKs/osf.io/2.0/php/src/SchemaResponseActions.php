<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class SchemaResponseActions 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * A Schema Response Action from a Schema Response
     * 
     * Retrieves a Schema Response Action by it's ID.
     * #### Returns
     * Returns a JSON object with a `data` key containing the representation of the requested Schema Response Actions, if the request is successful.
     * #### Errors
     * If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetSchemaResponsesSchemaResponseIdActionsSchemaResponseActionIdRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetSchemaResponsesSchemaResponseIdActionsSchemaResponseActionIdResponse
     */
	public function getSchemaResponsesSchemaResponseIdActionsSchemaResponseActionId(
        \OpenAPI\OpenAPI\Models\Operations\GetSchemaResponsesSchemaResponseIdActionsSchemaResponseActionIdRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetSchemaResponsesSchemaResponseIdActionsSchemaResponseActionIdResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/schema_responses/{schema_response_id}/actions/{schema_response_action_id}', \OpenAPI\OpenAPI\Models\Operations\GetSchemaResponsesSchemaResponseIdActionsSchemaResponseActionIdRequest::class, $request);
        
        $options = ['http_errors' => false];
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetSchemaResponsesSchemaResponseIdActionsSchemaResponseActionIdResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, '*/*')) {
                $response->body = $httpResponse->getBody()->getContents();
            }
        }

        return $response;
    }
	
    /**
     * Create a new Schema Response Action
     * 
     * This creates a new Schema Response Action in order to trigger a state transition for a Schema Response.
     * #### Returns
     * Returns a JSON object with a `data` key containing the representation of the requested Schema Response Actions, if the request is successful.
     * #### Errors
     * If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\PostSchemaResponsesSchemaResponseIdActionsRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\PostSchemaResponsesSchemaResponseIdActionsResponse
     */
	public function postSchemaResponsesSchemaResponseIdActions(
        \OpenAPI\OpenAPI\Models\Operations\PostSchemaResponsesSchemaResponseIdActionsRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\PostSchemaResponsesSchemaResponseIdActionsResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/schema_responses/{schema_response_id}/actions/', \OpenAPI\OpenAPI\Models\Operations\PostSchemaResponsesSchemaResponseIdActionsRequest::class, $request);
        
        $options = ['http_errors' => false];
        
        $httpResponse = $this->_defaultClient->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\PostSchemaResponsesSchemaResponseIdActionsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 201) {
        }

        return $response;
    }
	
    /**
     * Retrieve a list of Schema Response Actions for a Schema Response
     * 
     * This retrieves a paginated list of all Schema Response Actions created for a Schema Response.
     * #### Returns
     * Returns a JSON object with a `data` key containing the representation of the requested Schema Response Actions, if the request is successful.
     * #### Errors
     * If the request is unsuccessful, an `errors` key containing information about the failure will be returned. Refer to the [list of error codes](#tag/Errors-and-Error-Codes) to understand why this request may have failed.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\SchemaResponseActionReadRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\SchemaResponseActionReadResponse
     */
	public function schemaResponseActionRead(
        \OpenAPI\OpenAPI\Models\Operations\SchemaResponseActionReadRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\SchemaResponseActionReadResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/schema_responses/{schema_response_id}/actions/', \OpenAPI\OpenAPI\Models\Operations\SchemaResponseActionReadRequest::class, $request);
        
        $options = ['http_errors' => false];
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\SchemaResponseActionReadResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, '*/*')) {
                $response->body = $httpResponse->getBody()->getContents();
            }
        }

        return $response;
    }
}