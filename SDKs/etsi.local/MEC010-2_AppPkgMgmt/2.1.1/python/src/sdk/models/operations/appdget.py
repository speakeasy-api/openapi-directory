"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import problemdetails as shared_problemdetails
from typing import Optional


@dataclasses.dataclass
class AppDGETRequest:
    
    app_d_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'appDId', 'style': 'simple', 'explode': False }})
    r"""Identifier of an application descriptor"""  
    all_fields: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'all_fields', 'style': 'form', 'explode': True }})
    r"""Include all complex attributes in the response."""  
    exclude_default: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'exclude_default', 'style': 'form', 'explode': True }})
    r"""Indicates to exclude the following complex attributes of AppPkgInfo from the response."""  
    exclude_fields: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'exclude_fields', 'style': 'form', 'explode': True }})
    r"""Complex attributes of AppPkgInfo to be excluded from the response."""  
    fields_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fields', 'style': 'form', 'explode': True }})
    r"""Complex attributes of AppPkgInfo to be included into the response"""  
    filter: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter', 'style': 'form', 'explode': True }})
    r"""Attribute-based filtering parameters according to ETSI GS MEC 009"""  
    

@dataclasses.dataclass
class AppDGETResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    app_d: Optional[str] = dataclasses.field(default=None)
    r"""Content of the AppD is returned."""  
    body: Optional[bytes] = dataclasses.field(default=None)  
    problem_details: Optional[shared_problemdetails.ProblemDetails] = dataclasses.field(default=None)
    r"""Bad Request : used to indicate that incorrect parameters were passed to the request."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    