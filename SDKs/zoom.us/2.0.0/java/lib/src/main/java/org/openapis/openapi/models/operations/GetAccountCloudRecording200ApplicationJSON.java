/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GetAccountCloudRecording200ApplicationJSON - **Response Error Code:** `200` &lt;br&gt;
 * Only available for Paid account.
 * 
 * **HTTP Status Code:** `200` &lt;br&gt;
 * Recording(s) listed successfully.
 * 
 * 
 */
public class GetAccountCloudRecording200ApplicationJSON {
    /**
     * The start date for the monthly range for which you would like to retrieve recordings. The maximum range can be a month. If no value is provided for this field, the default will be current date. For example, if you make the API request on June 30, 2020, without providing the \u201cfrom\u201d and \u201cto\u201d parameters, by default the value of 'from' field will be \u201c2020-06-30\u201d and the value of the 'to' field will be \u201c2020-07-01\u201d.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("from")
    public OffsetDateTime from;
    public GetAccountCloudRecording200ApplicationJSON withFrom(OffsetDateTime from) {
        this.from = from;
        return this;
    }
    
    /**
     * Meetings Object
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("meetings")
    public GetAccountCloudRecording200ApplicationJSONMeetings[] meetings;
    public GetAccountCloudRecording200ApplicationJSON withMeetings(GetAccountCloudRecording200ApplicationJSONMeetings[] meetings) {
        this.meetings = meetings;
        return this;
    }
    
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next_page_token")
    public String nextPageToken;
    public GetAccountCloudRecording200ApplicationJSON withNextPageToken(String nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }
    
    /**
     * The number of records returned within a single API call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page_size")
    public Long pageSize;
    public GetAccountCloudRecording200ApplicationJSON withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * The end date for the monthly range for which you would like to retrieve recordings. The maximum range can be a month.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("to")
    public OffsetDateTime to;
    public GetAccountCloudRecording200ApplicationJSON withTo(OffsetDateTime to) {
        this.to = to;
        return this;
    }
    
    /**
     * Total number of records found for this request across all pages.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_records")
    public Long totalRecords;
    public GetAccountCloudRecording200ApplicationJSON withTotalRecords(Long totalRecords) {
        this.totalRecords = totalRecords;
        return this;
    }
    
}
