/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * User settings in sub-objects, each for different purposes.
 */
export class UsersettingsNotesExport extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "folderName" })
  folderName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isEnabled" })
  isEnabled?: boolean;
}

export class UsersettingsNotificationMatchMyInterests extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "opted_state" })
  optedState?: string;
}

export class UsersettingsNotificationMoreFromAuthors extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "opted_state" })
  optedState?: string;
}

export class UsersettingsNotificationMoreFromSeries extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "opted_state" })
  optedState?: string;
}

export class UsersettingsNotificationPriceDrop extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "opted_state" })
  optedState?: string;
}

export class UsersettingsNotificationRewardExpirations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "opted_state" })
  optedState?: string;
}

export class UsersettingsNotification extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "matchMyInterests" })
  @Type(() => UsersettingsNotificationMatchMyInterests)
  matchMyInterests?: UsersettingsNotificationMatchMyInterests;

  @SpeakeasyMetadata()
  @Expose({ name: "moreFromAuthors" })
  @Type(() => UsersettingsNotificationMoreFromAuthors)
  moreFromAuthors?: UsersettingsNotificationMoreFromAuthors;

  @SpeakeasyMetadata()
  @Expose({ name: "moreFromSeries" })
  @Type(() => UsersettingsNotificationMoreFromSeries)
  moreFromSeries?: UsersettingsNotificationMoreFromSeries;

  @SpeakeasyMetadata()
  @Expose({ name: "priceDrop" })
  @Type(() => UsersettingsNotificationPriceDrop)
  priceDrop?: UsersettingsNotificationPriceDrop;

  @SpeakeasyMetadata()
  @Expose({ name: "rewardExpirations" })
  @Type(() => UsersettingsNotificationRewardExpirations)
  rewardExpirations?: UsersettingsNotificationRewardExpirations;
}

/**
 * Successful response
 */
export class Usersettings extends SpeakeasyBase {
  /**
   * Resource type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * User settings in sub-objects, each for different purposes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notesExport" })
  @Type(() => UsersettingsNotesExport)
  notesExport?: UsersettingsNotesExport;

  @SpeakeasyMetadata()
  @Expose({ name: "notification" })
  @Type(() => UsersettingsNotification)
  notification?: UsersettingsNotification;
}
