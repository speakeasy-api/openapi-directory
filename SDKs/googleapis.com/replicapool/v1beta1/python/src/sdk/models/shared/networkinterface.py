"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accessconfig as shared_accessconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NetworkInterface:
    r"""A Compute Engine NetworkInterface resource. Identical to the NetworkInterface on the corresponding Compute Engine resource."""
    
    access_configs: Optional[list[shared_accessconfig.AccessConfig]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessConfigs'), 'exclude': lambda f: f is None }})
    r"""An array of configurations for this interface. This specifies how this interface is configured to interact with other network services."""  
    network: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('network'), 'exclude': lambda f: f is None }})
    r"""Name the Network resource to which this interface applies."""  
    network_ip: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('networkIp'), 'exclude': lambda f: f is None }})
    r"""An optional IPV4 internal network address to assign to the instance for this network interface."""  
    