/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EntityWatchlistSearchTerms - Search inputs for creating an entity watchlist screening
 */
public class EntityWatchlistSearchTerms {
    /**
     * Valid, capitalized, two-letter ISO code representing the country of this object. Must be in ISO 3166-1 alpha-2 form.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;
    public EntityWatchlistSearchTerms withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * The numeric or alphanumeric identifier associated with this document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("document_number")
    public String documentNumber;
    public EntityWatchlistSearchTerms withDocumentNumber(String documentNumber) {
        this.documentNumber = documentNumber;
        return this;
    }
    
    /**
     * A valid email address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email_address")
    public String emailAddress;
    public EntityWatchlistSearchTerms withEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
        return this;
    }
    
    /**
     * ID of the associated entity program.
     */
    @JsonProperty("entity_watchlist_program_id")
    public String entityWatchlistProgramId;
    public EntityWatchlistSearchTerms withEntityWatchlistProgramId(String entityWatchlistProgramId) {
        this.entityWatchlistProgramId = entityWatchlistProgramId;
        return this;
    }
    
    /**
     * The name of the organization being screened.
     */
    @JsonProperty("legal_name")
    public String legalName;
    public EntityWatchlistSearchTerms withLegalName(String legalName) {
        this.legalName = legalName;
        return this;
    }
    
    /**
     * A phone number in E.164 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone_number")
    public String phoneNumber;
    public EntityWatchlistSearchTerms withPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }
    
    /**
     * An 'http' or 'https' URL (must begin with either of those).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public EntityWatchlistSearchTerms withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
