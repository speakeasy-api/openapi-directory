/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Reason code this rule was not applicable.
 */
export enum InapplicabilityDetailsInapplicableReasonEnum {
  InapplicableReasonUnspecified = "INAPPLICABLE_REASON_UNSPECIFIED",
  CannotBeatBuyboxWinner = "CANNOT_BEAT_BUYBOX_WINNER",
  AlreadyWinningBuybox = "ALREADY_WINNING_BUYBOX",
  TriumphedOverBySameTypeRule = "TRIUMPHED_OVER_BY_SAME_TYPE_RULE",
  TriumphedOverByOtherRuleOnOffer = "TRIUMPHED_OVER_BY_OTHER_RULE_ON_OFFER",
  RestrictionsNotMet = "RESTRICTIONS_NOT_MET",
  Uncategorized = "UNCATEGORIZED",
  InvalidAutoPriceMin = "INVALID_AUTO_PRICE_MIN",
  InvalidFloorConfig = "INVALID_FLOOR_CONFIG",
}

/**
 * Map of inapplicability details.
 */
export class InapplicabilityDetails extends SpeakeasyBase {
  /**
   * Count of this inapplicable reason code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inapplicableCount" })
  inapplicableCount?: string;

  /**
   * Reason code this rule was not applicable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inapplicableReason" })
  inapplicableReason?: InapplicabilityDetailsInapplicableReasonEnum;
}
