/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class QueryComputeClusterRequest {
    /**
     * Filter clusters on data center ID.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=datacenter_id")
    public String datacenterId;

    public QueryComputeClusterRequest withDatacenterId(String datacenterId) {
        this.datacenterId = datacenterId;
        return this;
    }
    
    /**
     * Filter on a primary cluster ID. Also accepts value 'local'.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=primary_cluster_id")
    public String primaryClusterId;

    public QueryComputeClusterRequest withPrimaryClusterId(String primaryClusterId) {
        this.primaryClusterId = primaryClusterId;
        return this;
    }
    
    /**
     * Determines whether to fetch Compute Clusters with additional privilege checks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=snappable_status")
    public QueryComputeClusterSnappableStatusEnum snappableStatus;

    public QueryComputeClusterRequest withSnappableStatus(QueryComputeClusterSnappableStatusEnum snappableStatus) {
        this.snappableStatus = snappableStatus;
        return this;
    }
    
    public QueryComputeClusterRequest(){}
}
