/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class Destination extends SpeakeasyBase {
  /**
   * The number of reports being sent to this destination
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemCount" })
  itemCount?: number;

  /**
   * The name of the organization reciving the report
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organization" })
  organization?: string;

  /**
   * The organization id (i.e. {state abbreviation}-phd)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "organization_id" })
  organizationId?: string;

  /**
   * The time at which the report will be sent
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sending_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  sendingAt?: Date;

  /**
   * The service used for delivering the report
   */
  @SpeakeasyMetadata()
  @Expose({ name: "service" })
  service?: string;
}
