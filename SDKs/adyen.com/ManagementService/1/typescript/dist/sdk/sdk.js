"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SDK = exports.ServerList = void 0;
var accountcompanylevel_1 = require("./accountcompanylevel");
var accountmerchantlevel_1 = require("./accountmerchantlevel");
var accountstorelevel_1 = require("./accountstorelevel");
var allowedoriginscompanylevel_1 = require("./allowedoriginscompanylevel");
var allowedoriginsmerchantlevel_1 = require("./allowedoriginsmerchantlevel");
var apicredentialscompanylevel_1 = require("./apicredentialscompanylevel");
var apicredentialsmerchantlevel_1 = require("./apicredentialsmerchantlevel");
var apikeycompanylevel_1 = require("./apikeycompanylevel");
var apikeymerchantlevel_1 = require("./apikeymerchantlevel");
var clientkeycompanylevel_1 = require("./clientkeycompanylevel");
var clientkeymerchantlevel_1 = require("./clientkeymerchantlevel");
var myapicredential_1 = require("./myapicredential");
var paymentmethodsmerchantlevel_1 = require("./paymentmethodsmerchantlevel");
var payoutsettingsmerchantlevel_1 = require("./payoutsettingsmerchantlevel");
var terminalactionscompanylevel_1 = require("./terminalactionscompanylevel");
var terminalactionsterminallevel_1 = require("./terminalactionsterminallevel");
var terminalorderscompanylevel_1 = require("./terminalorderscompanylevel");
var terminalordersmerchantlevel_1 = require("./terminalordersmerchantlevel");
var terminalsettingscompanylevel_1 = require("./terminalsettingscompanylevel");
var terminalsettingsmerchantlevel_1 = require("./terminalsettingsmerchantlevel");
var terminalsettingsstorelevel_1 = require("./terminalsettingsstorelevel");
var terminalsettingsterminallevel_1 = require("./terminalsettingsterminallevel");
var terminalsterminallevel_1 = require("./terminalsterminallevel");
var userscompanylevel_1 = require("./userscompanylevel");
var usersmerchantlevel_1 = require("./usersmerchantlevel");
var webhookscompanylevel_1 = require("./webhookscompanylevel");
var webhooksmerchantlevel_1 = require("./webhooksmerchantlevel");
var axios_1 = __importDefault(require("axios"));
/**
 * Contains the list of servers available to the SDK
 */
exports.ServerList = ["https://management-test.adyen.com/v1"];
/**
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals.
 *
 * @remarks
 * ## Authentication
 * Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.
 *
 * To access the live endpoints, you need to generate a new API key in your live Customer Area.
 * ## Versioning
 *
 * Management API handles versioning as part of the endpoint URL. For example, to send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint, use:
 *
 * ```text
 * https://management-test.adyen.com/v1/companies/{companyId}/webhooks
 * ```
 *
 * ## Going live
 *
 * To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:
 *
 * ```text
 * https://management-live.adyen.com/v1
 * ```
 */
var SDK = /** @class */ (function () {
    function SDK(props) {
        var _a, _b;
        this._language = "typescript";
        this._sdkVersion = "0.0.1";
        this._genVersion = "internal";
        this._serverURL = (_a = props === null || props === void 0 ? void 0 : props.serverURL) !== null && _a !== void 0 ? _a : exports.ServerList[0];
        this._defaultClient =
            (_b = props === null || props === void 0 ? void 0 : props.defaultClient) !== null && _b !== void 0 ? _b : axios_1.default.create({ baseURL: this._serverURL });
        this._securityClient = this._defaultClient;
        this.apiCredentialsCompanyLevel = new apicredentialscompanylevel_1.APICredentialsCompanyLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.apiCredentialsMerchantLevel = new apicredentialsmerchantlevel_1.APICredentialsMerchantLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.apiKeyCompanyLevel = new apikeycompanylevel_1.APIKeyCompanyLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.apiKeyMerchantLevel = new apikeymerchantlevel_1.APIKeyMerchantLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.accountCompanyLevel = new accountcompanylevel_1.AccountCompanyLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.accountMerchantLevel = new accountmerchantlevel_1.AccountMerchantLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.accountStoreLevel = new accountstorelevel_1.AccountStoreLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.allowedOriginsCompanyLevel = new allowedoriginscompanylevel_1.AllowedOriginsCompanyLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.allowedOriginsMerchantLevel = new allowedoriginsmerchantlevel_1.AllowedOriginsMerchantLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.clientKeyCompanyLevel = new clientkeycompanylevel_1.ClientKeyCompanyLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.clientKeyMerchantLevel = new clientkeymerchantlevel_1.ClientKeyMerchantLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.myAPICredential = new myapicredential_1.MyAPICredential(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.paymentMethodsMerchantLevel = new paymentmethodsmerchantlevel_1.PaymentMethodsMerchantLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.payoutSettingsMerchantLevel = new payoutsettingsmerchantlevel_1.PayoutSettingsMerchantLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.terminalActionsCompanyLevel = new terminalactionscompanylevel_1.TerminalActionsCompanyLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.terminalActionsTerminalLevel = new terminalactionsterminallevel_1.TerminalActionsTerminalLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.terminalOrdersCompanyLevel = new terminalorderscompanylevel_1.TerminalOrdersCompanyLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.terminalOrdersMerchantLevel = new terminalordersmerchantlevel_1.TerminalOrdersMerchantLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.terminalSettingsCompanyLevel = new terminalsettingscompanylevel_1.TerminalSettingsCompanyLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.terminalSettingsMerchantLevel = new terminalsettingsmerchantlevel_1.TerminalSettingsMerchantLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.terminalSettingsStoreLevel = new terminalsettingsstorelevel_1.TerminalSettingsStoreLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.terminalSettingsTerminalLevel = new terminalsettingsterminallevel_1.TerminalSettingsTerminalLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.terminalsTerminalLevel = new terminalsterminallevel_1.TerminalsTerminalLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.usersCompanyLevel = new userscompanylevel_1.UsersCompanyLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.usersMerchantLevel = new usersmerchantlevel_1.UsersMerchantLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.webhooksCompanyLevel = new webhookscompanylevel_1.WebhooksCompanyLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.webhooksMerchantLevel = new webhooksmerchantlevel_1.WebhooksMerchantLevel(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
    }
    return SDK;
}());
exports.SDK = SDK;
