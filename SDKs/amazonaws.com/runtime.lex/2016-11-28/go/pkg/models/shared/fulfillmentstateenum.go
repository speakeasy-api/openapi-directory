// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FulfillmentStateEnum string

const (
	FulfillmentStateEnumFulfilled           FulfillmentStateEnum = "Fulfilled"
	FulfillmentStateEnumFailed              FulfillmentStateEnum = "Failed"
	FulfillmentStateEnumReadyForFulfillment FulfillmentStateEnum = "ReadyForFulfillment"
)

func (e *FulfillmentStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Fulfilled":
		fallthrough
	case "Failed":
		fallthrough
	case "ReadyForFulfillment":
		*e = FulfillmentStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for FulfillmentStateEnum: %s", s)
	}
}
