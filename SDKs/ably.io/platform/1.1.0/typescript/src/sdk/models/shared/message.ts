/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Extras } from "./extras";
import { Expose, Type } from "class-transformer";

/**
 * Message object.
 */
export class MessageInput extends SpeakeasyBase {
  /**
   * The [client ID](https://www.ably.io/documentation/core-features/authentication#identified-clients) of the publisher of this message.
   */
  @SpeakeasyMetadata({ data: "form, name=clientId" })
  @Expose({ name: "clientId" })
  clientId?: string;

  /**
   * The connection ID of the publisher of this message.
   */
  @SpeakeasyMetadata({ data: "form, name=connectionId" })
  @Expose({ name: "connectionId" })
  connectionId?: string;

  /**
   * The string encoded payload, with the encoding specified below.
   */
  @SpeakeasyMetadata({ data: "form, name=data" })
  @Expose({ name: "data" })
  data?: string;

  /**
   * This will typically be empty as all messages received from Ably are automatically decoded client-side using this value. However, if the message encoding cannot be processed, this attribute will contain the remaining transformations not applied to the data payload.
   */
  @SpeakeasyMetadata({ data: "form, name=encoding" })
  @Expose({ name: "encoding" })
  encoding?: string;

  /**
   * Extras object. Currently only allows for [push](https://www.ably.io/documentation/general/push/publish#channel-broadcast-example) extra.
   */
  @SpeakeasyMetadata({ data: "form, name=extras;json=true" })
  @Expose({ name: "extras" })
  @Type(() => Extras)
  extras?: Extras;

  /**
   * The event name, if provided.
   */
  @SpeakeasyMetadata({ data: "form, name=name" })
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Message object.
 */
export class Message extends SpeakeasyBase {
  /**
   * The [client ID](https://www.ably.io/documentation/core-features/authentication#identified-clients) of the publisher of this message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientId" })
  clientId?: string;

  /**
   * The connection ID of the publisher of this message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connectionId" })
  connectionId?: string;

  /**
   * The string encoded payload, with the encoding specified below.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  data?: string;

  /**
   * This will typically be empty as all messages received from Ably are automatically decoded client-side using this value. However, if the message encoding cannot be processed, this attribute will contain the remaining transformations not applied to the data payload.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encoding" })
  encoding?: string;

  /**
   * Extras object. Currently only allows for [push](https://www.ably.io/documentation/general/push/publish#channel-broadcast-example) extra.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extras" })
  @Type(() => Extras)
  extras?: Extras;

  /**
   * A Unique ID that can be specified by the publisher for [idempotent publishing](https://www.ably.io/documentation/rest/messages#idempotent).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The event name, if provided.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Timestamp when the message was received by the Ably, as milliseconds since the epoch.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp?: number;
}
