<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PartialAddress - A complete or partial mailing address.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PartialAddress
{
    /**
     * The first line of the street address.  For some addresses, this may be the only line.  Other addresses may require 2 or 3 lines.
     * 
     * 
     * 
     * @var ?string $addressLine1
     */
	#[\JMS\Serializer\Annotation\SerializedName('address_line1')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressLine1 = null;
    
    /**
     * The second line of the street address.  For some addresses, this line may not be needed.
     * 
     * 
     * 
     * @var ?string $addressLine2
     */
	#[\JMS\Serializer\Annotation\SerializedName('address_line2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressLine2 = null;
    
    /**
     * The third line of the street address.  For some addresses, this line may not be needed.
     * 
     * 
     * 
     * @var ?string $addressLine3
     */
	#[\JMS\Serializer\Annotation\SerializedName('address_line3')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressLine3 = null;
    
    /**
     * Indicates whether this is a residential address.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PartialAddressAddressResidentialIndicatorEnum $addressResidentialIndicator
     */
	#[\JMS\Serializer\Annotation\SerializedName('address_residential_indicator')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PartialAddressAddressResidentialIndicatorEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PartialAddressAddressResidentialIndicatorEnum $addressResidentialIndicator = null;
    
    /**
     * The name of the city or locality
     * 
     * @var ?string $cityLocality
     */
	#[\JMS\Serializer\Annotation\SerializedName('city_locality')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cityLocality = null;
    
    /**
     * If this is a business address, then the company name should be specified here.
     * 
     * 
     * 
     * @var ?string $companyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('company_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $companyName = null;
    
    /**
     * The two-letter [ISO 3166-1 country code](https://en.wikipedia.org/wiki/ISO_3166-1)
     * 
     * 
     * 
     * @var ?string $countryCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('country_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $countryCode = null;
    
    /**
     * Email for the address owner.
     * 
     * 
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * The name of a contact person at this address.  This field may be set instead of - or in addition to - the `company_name` field.
     * 
     * 
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The phone number of a contact person at this address.  The format of this phone number varies depending on the country.
     * 
     * 
     * 
     * @var ?string $phone
     */
	#[\JMS\Serializer\Annotation\SerializedName('phone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phone = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('postal_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postalCode = null;
    
    /**
     * The state or province.  For some countries (including the U.S.) only abbreviations are allowed.  Other countries allow the full name or abbreviation.
     * 
     * 
     * 
     * @var ?string $stateProvince
     */
	#[\JMS\Serializer\Annotation\SerializedName('state_province')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stateProvince = null;
    
	public function __construct()
	{
		$this->addressLine1 = null;
		$this->addressLine2 = null;
		$this->addressLine3 = null;
		$this->addressResidentialIndicator = null;
		$this->cityLocality = null;
		$this->companyName = null;
		$this->countryCode = null;
		$this->email = null;
		$this->name = null;
		$this->phone = null;
		$this->postalCode = null;
		$this->stateProvince = null;
	}
}
