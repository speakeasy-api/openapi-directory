/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetBlockedNumbersSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class GetBlockedNumbersRequest extends SpeakeasyBase {
  /**
   * The maximum number of records to return. The default value is `10000`. The value cannot be greater than 10000.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Records with an `id` that is greater or equal to min-id will be returned. The default value is `0`.  You can add 1 to an id that you previously retrieved, to return subsequent records.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=min-id",
  })
  minId?: number;
}

export class GetBlockedNumbersResponse extends SpeakeasyBase {
  /**
   * A list of BlockedNumber objects
   */
  @SpeakeasyMetadata()
  blockedNumber?: shared.BlockedNumber;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
