/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CatalogCollectionItem } from "./catalogcollectionitem";
import { CatalogCollectionRoleAssignments } from "./catalogcollectionroleassignments";
import { Expose, Transform, Type } from "class-transformer";

export enum CatalogCollectionVisibilityEnum {
  Private = "private",
  Public = "public",
}

/**
 * Catalog collection
 */
export class CatalogCollection extends SpeakeasyBase {
  /**
   * Metadata about an item that is part of a collection
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cover_asset" })
  @Type(() => CatalogCollectionItem)
  coverAsset?: CatalogCollectionItem;

  @SpeakeasyMetadata()
  @Expose({ name: "created_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * List of role assignments for a catalog collection
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role_assignments" })
  @Type(() => CatalogCollectionRoleAssignments)
  roleAssignments: CatalogCollectionRoleAssignments;

  @SpeakeasyMetadata()
  @Expose({ name: "total_item_count" })
  totalItemCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "visibility" })
  visibility: CatalogCollectionVisibilityEnum;
}
