/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AlarmConfiguration } from "./alarmconfiguration";
import { AlarmStateInformation } from "./alarmstateinformation";
import { AutomationExecutionStatusEnum } from "./automationexecutionstatusenum";
import { AutomationSubtypeEnum } from "./automationsubtypeenum";
import { ExecutionModeEnum } from "./executionmodeenum";
import { ProgressCounters } from "./progresscounters";
import { ResolvedTargets } from "./resolvedtargets";
import { Runbook } from "./runbook";
import { StepExecution } from "./stepexecution";
import { Target } from "./target";
import { TargetLocation } from "./targetlocation";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Detailed information about the current state of an individual Automation execution.
 */
export class AutomationExecution extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AlarmConfiguration" })
  @Type(() => AlarmConfiguration)
  alarmConfiguration?: AlarmConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "AssociationId" })
  associationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AutomationExecutionId" })
  automationExecutionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AutomationExecutionStatus" })
  automationExecutionStatus?: AutomationExecutionStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "AutomationSubtype" })
  automationSubtype?: AutomationSubtypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ChangeRequestName" })
  changeRequestName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CurrentAction" })
  currentAction?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CurrentStepName" })
  currentStepName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DocumentName" })
  documentName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DocumentVersion" })
  documentVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecutedBy" })
  executedBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecutionEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  executionEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecutionStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  executionStartTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "FailureMessage" })
  failureMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxConcurrency" })
  maxConcurrency?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxErrors" })
  maxErrors?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Mode" })
  mode?: ExecutionModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "OpsItemId" })
  opsItemId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Outputs" })
  outputs?: Record<string, string[]>;

  @SpeakeasyMetadata()
  @Expose({ name: "Parameters" })
  parameters?: Record<string, string[]>;

  @SpeakeasyMetadata()
  @Expose({ name: "ParentAutomationExecutionId" })
  parentAutomationExecutionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProgressCounters" })
  @Type(() => ProgressCounters)
  progressCounters?: ProgressCounters;

  @SpeakeasyMetadata()
  @Expose({ name: "ResolvedTargets" })
  @Type(() => ResolvedTargets)
  resolvedTargets?: ResolvedTargets;

  @SpeakeasyMetadata({ elemType: Runbook })
  @Expose({ name: "Runbooks" })
  @Type(() => Runbook)
  runbooks?: Runbook[];

  @SpeakeasyMetadata()
  @Expose({ name: "ScheduledTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  scheduledTime?: Date;

  @SpeakeasyMetadata({ elemType: StepExecution })
  @Expose({ name: "StepExecutions" })
  @Type(() => StepExecution)
  stepExecutions?: StepExecution[];

  @SpeakeasyMetadata()
  @Expose({ name: "StepExecutionsTruncated" })
  stepExecutionsTruncated?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Target" })
  target?: string;

  @SpeakeasyMetadata({ elemType: TargetLocation })
  @Expose({ name: "TargetLocations" })
  @Type(() => TargetLocation)
  targetLocations?: TargetLocation[];

  @SpeakeasyMetadata()
  @Expose({ name: "TargetMaps" })
  targetMaps?: Record<string, string[]>[];

  @SpeakeasyMetadata()
  @Expose({ name: "TargetParameterName" })
  targetParameterName?: string;

  @SpeakeasyMetadata({ elemType: Target })
  @Expose({ name: "Targets" })
  @Type(() => Target)
  targets?: Target[];

  @SpeakeasyMetadata({ elemType: AlarmStateInformation })
  @Expose({ name: "TriggeredAlarms" })
  @Type(() => AlarmStateInformation)
  triggeredAlarms?: AlarmStateInformation[];
}
