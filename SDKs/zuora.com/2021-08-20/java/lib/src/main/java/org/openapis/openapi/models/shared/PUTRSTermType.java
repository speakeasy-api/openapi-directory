/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * PUTRSTermType - Container for custom fields of a Revenue Event object.
 * 
 */
public class PUTRSTermType {
    /**
     * How you want to distribute the revenue. 
     * 
     * 
     * * Daily Distribution: Distributes revenue evenly across each day between the recognitionStart and recognitionEnd dates.
     * * Monthly Distribution (Back Load): Back loads the revenue so you distribute the monthly amount in the partial month in the end only.
     * * Monthly Distribution (Front Load): Front loads the revenue so you distribute the monthly amount in the partial month in the beginning only.
     * * Monthly Distribution (Proration by Days): Splits the revenue amount between the two partial months.
     * 
     * **Note:** To use any of the Monthly Distribution options, you must have the "Monthly recognition over time" model enabled in **Settings &gt; Finance &gt; Manage Revenue Recognition Models** in the Zuora UI.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("distributionType")
    public PUTRSTermTypeDistributionTypeEnum distributionType;
    public PUTRSTermType withDistributionType(PUTRSTermTypeDistributionTypeEnum distributionType) {
        this.distributionType = distributionType;
        return this;
    }
    
    /**
     * Label of the revenue event type. Revenue event type labels can be duplicated. You can configure your revenue event type labels by navigating to **Settings &gt; Finance &gt; Configure Revenue Event Types** in the Zuora UI.
     * 
     * Note that `Credit Memo Posted` and `Debit Memo Posted` are only available if you enable the Invoice Settlement feature.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventType")
    public PUTRSTermTypeEventTypeEnum eventType;
    public PUTRSTermType withEventType(PUTRSTermTypeEventTypeEnum eventType) {
        this.eventType = eventType;
        return this;
    }
    
    /**
     * System ID of the revenue event type. Each eventType has a unique system ID. You can configure your revenue event type system IDs by navigating to **Settings &gt; Finance &gt; Configure Revenue Event Types** in the Zuora UI.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventTypeSystemId")
    public String eventTypeSystemId;
    public PUTRSTermType withEventTypeSystemId(String eventTypeSystemId) {
        this.eventTypeSystemId = eventTypeSystemId;
        return this;
    }
    
    /**
     * Additional information about this record.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public PUTRSTermType withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * The end date of a recognition period in `yyyy-mm-dd` format. 
     * 
     * The maximum difference between the `recognitionStart` and `recognitionEnd` date fields is equal to 250 multiplied by the length of an accounting period.
     * 
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("recognitionEnd")
    public LocalDate recognitionEnd;
    public PUTRSTermType withRecognitionEnd(LocalDate recognitionEnd) {
        this.recognitionEnd = recognitionEnd;
        return this;
    }
    
    /**
     * The start date of a recognition period in `yyyy-mm-dd` format.
     * 
     * If there is a closed accounting period between the `recognitionStart` and `recognitionEnd` dates, the revenue that would be placed in the closed accounting period is instead placed in the next open accounting period.
     * 
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("recognitionStart")
    public LocalDate recognitionStart;
    public PUTRSTermType withRecognitionStart(LocalDate recognitionStart) {
        this.recognitionStart = recognitionStart;
        return this;
    }
    
}
