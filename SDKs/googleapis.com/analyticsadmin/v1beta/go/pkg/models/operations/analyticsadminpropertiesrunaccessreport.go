// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type AnalyticsadminPropertiesRunAccessReportSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type AnalyticsadminPropertiesRunAccessReportSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type AnalyticsadminPropertiesRunAccessReportSecurity struct {
	Option1 *AnalyticsadminPropertiesRunAccessReportSecurityOption1 `security:"option"`
	Option2 *AnalyticsadminPropertiesRunAccessReportSecurityOption2 `security:"option"`
}

type AnalyticsadminPropertiesRunAccessReportRequest struct {
	// V1 error format.
	DollarXgafv                                      *shared.XgafvEnum                                        `queryParam:"style=form,explode=true,name=$.xgafv"`
	GoogleAnalyticsAdminV1betaRunAccessReportRequest *shared.GoogleAnalyticsAdminV1betaRunAccessReportRequest `request:"mediaType=application/json"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// The Data Access Report supports requesting at the property level or account level. If requested at the account level, Data Access Reports include all access for all properties under that account. To request at the property level, entity should be for example 'properties/123' if "123" is your GA4 property ID. To request at the account level, entity should be for example 'accounts/1234' if "1234" is your GA4 Account ID.
	Entity string `pathParam:"style=simple,explode=false,name=entity"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type AnalyticsadminPropertiesRunAccessReportResponse struct {
	ContentType string
	// Successful response
	GoogleAnalyticsAdminV1betaRunAccessReportResponse *shared.GoogleAnalyticsAdminV1betaRunAccessReportResponse
	StatusCode                                        int
	RawResponse                                       *http.Response
}
