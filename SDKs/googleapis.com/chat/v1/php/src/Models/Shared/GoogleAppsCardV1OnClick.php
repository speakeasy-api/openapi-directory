<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleAppsCardV1OnClick - Represents how to respond when users click an interactive element on a card, such as a button.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleAppsCardV1OnClick
{
    /**
     * An action that describes the behavior when the form is submitted. For example, an Apps Script can be invoked to handle the form. If the action is triggered, the form values are sent to the server.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Action $action
     */
	#[\JMS\Serializer\Annotation\SerializedName('action')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Action')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1Action $action = null;
    
    /**
     * Cards support a defined layout, interactive UI elements like buttons, and rich media like images. Use cards to present detailed information, gather information from users, and guide users to take a next step. In Google Chat, cards appear in several places: - As stand-alone messages. - Accompanying a text message, just beneath the text message. - As a [dialog](https://developers.google.com/chat/how-tos/dialogs). The following example JSON creates a "contact card" that features: - A header with the contact's name, job title, avatar picture. - A section with the contact information, including formatted text. - Buttons that users can click to share the contact or see more or less info. ![Example contact card](https://developers.google.com/chat/images/card_api_reference.png) ``` { "cardsV2": [ { "cardId": "unique-card-id", "card": { "header": { "title": "Sasha", "subtitle": "Software Engineer", "imageUrl": "https://developers.google.com/chat/images/quickstart-app-avatar.png", "imageType": "CIRCLE", "imageAltText": "Avatar for Sasha", }, "sections": [ { "header": "Contact Info", "collapsible": true, "uncollapsibleWidgetsCount": 1, "widgets": [ { "decoratedText": { "startIcon": { "knownIcon": "EMAIL", }, "text": "sasha@example.com", } }, { "decoratedText": { "startIcon": { "knownIcon": "PERSON", }, "text": "Online", }, }, { "decoratedText": { "startIcon": { "knownIcon": "PHONE", }, "text": "+1 (555) 555-1234", } }, { "buttonList": { "buttons": [ { "text": "Share", "onClick": { "openLink": { "url": "https://example.com/share", } } }, { "text": "Edit", "onClick": { "action": { "function": "goToView", "parameters": [ { "key": "viewType", "value": "EDIT", } ], } } }, ], } }, ], }, ], }, } ], } ```
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Card $card
     */
	#[\JMS\Serializer\Annotation\SerializedName('card')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Card')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1Card $card = null;
    
    /**
     * An action that describes the behavior when the form is submitted. For example, an Apps Script can be invoked to handle the form. If the action is triggered, the form values are sent to the server.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Action $openDynamicLinkAction
     */
	#[\JMS\Serializer\Annotation\SerializedName('openDynamicLinkAction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1Action')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1Action $openDynamicLinkAction = null;
    
    /**
     * Represents an `onClick` event that opens a hyperlink.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1OpenLink $openLink
     */
	#[\JMS\Serializer\Annotation\SerializedName('openLink')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleAppsCardV1OpenLink')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAppsCardV1OpenLink $openLink = null;
    
	public function __construct()
	{
		$this->action = null;
		$this->card = null;
		$this->openDynamicLinkAction = null;
		$this->openLink = null;
	}
}
