"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class NoteCreatorRoleEnum(str, Enum):
    r"""Output only. The role of the person (buyer/seller) creating the note."""
    BUYER_SELLER_ROLE_UNSPECIFIED = 'BUYER_SELLER_ROLE_UNSPECIFIED'
    BUYER = 'BUYER'
    SELLER = 'SELLER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Note:
    r"""A proposal may be associated to several notes."""
    
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The timestamp for when this note was created."""  
    creator_role: Optional[NoteCreatorRoleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creatorRole'), 'exclude': lambda f: f is None }})
    r"""Output only. The role of the person (buyer/seller) creating the note."""  
    note: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('note'), 'exclude': lambda f: f is None }})
    r"""The actual note to attach. (max-length: 1024 unicode code units) Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error."""  
    note_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('noteId'), 'exclude': lambda f: f is None }})
    r"""Output only. The unique ID for the note."""  
    proposal_revision: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('proposalRevision'), 'exclude': lambda f: f is None }})
    r"""Output only. The revision number of the proposal when the note is created."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NoteInput:
    r"""A proposal may be associated to several notes."""
    
    note: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('note'), 'exclude': lambda f: f is None }})
    r"""The actual note to attach. (max-length: 1024 unicode code units) Note: This field may be set only when creating the resource. Modifying this field while updating the resource will result in an error."""  
    