/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AlgorithmVersionInfo } from "./algorithmversioninfo";
import { Expose, Type } from "class-transformer";

/**
 * Information of all available algorithms
 */
export class AlgorithmVersionInfoList extends SpeakeasyBase {
  /**
   * List of file key algorithms
   */
  @SpeakeasyMetadata({ elemType: AlgorithmVersionInfo })
  @Expose({ name: "fileKeyAlgorithms" })
  @Type(() => AlgorithmVersionInfo)
  fileKeyAlgorithms: AlgorithmVersionInfo[];

  /**
   * List of key pair algorithms
   */
  @SpeakeasyMetadata({ elemType: AlgorithmVersionInfo })
  @Expose({ name: "keyPairAlgorithms" })
  @Type(() => AlgorithmVersionInfo)
  keyPairAlgorithms: AlgorithmVersionInfo[];
}
