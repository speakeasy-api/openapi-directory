// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CustomVoiceParamsReportedUsageEnum - Optional. The usage of the synthesized audio to be reported.
type CustomVoiceParamsReportedUsageEnum string

const (
	CustomVoiceParamsReportedUsageEnumReportedUsageUnspecified CustomVoiceParamsReportedUsageEnum = "REPORTED_USAGE_UNSPECIFIED"
	CustomVoiceParamsReportedUsageEnumRealtime                 CustomVoiceParamsReportedUsageEnum = "REALTIME"
	CustomVoiceParamsReportedUsageEnumOffline                  CustomVoiceParamsReportedUsageEnum = "OFFLINE"
)

func (e CustomVoiceParamsReportedUsageEnum) ToPointer() *CustomVoiceParamsReportedUsageEnum {
	return &e
}

func (e *CustomVoiceParamsReportedUsageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "REPORTED_USAGE_UNSPECIFIED":
		fallthrough
	case "REALTIME":
		fallthrough
	case "OFFLINE":
		*e = CustomVoiceParamsReportedUsageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomVoiceParamsReportedUsageEnum: %v", v)
	}
}

// CustomVoiceParams - Description of the custom voice to be synthesized.
type CustomVoiceParams struct {
	// Required. The name of the AutoML model that synthesizes the custom voice.
	Model *string `json:"model,omitempty"`
	// Optional. The usage of the synthesized audio to be reported.
	ReportedUsage *CustomVoiceParamsReportedUsageEnum `json:"reportedUsage,omitempty"`
}
