"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class DeleteIpamPoolResultIpamPoolAddressFamilyEnum(str, Enum):
    r"""The address family of the pool."""
    IPV4 = 'ipv4'
    IPV6 = 'ipv6'


@dataclasses.dataclass
class DeleteIpamPoolResultIpamPoolAllocationResourceTags:
    r"""The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key <code>Owner</code> and the value <code>TeamA</code>, specify <code>tag:Owner</code> for the filter name and <code>TeamA</code> for the filter value."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    
class DeleteIpamPoolResultIpamPoolAwsServiceEnum(str, Enum):
    r"""Limits which service in Amazon Web Services that the pool can be used in. \\"ec2\\", for example, allows users to use space for Elastic IP addresses and VPCs."""
    EC2 = 'ec2'

class DeleteIpamPoolResultIpamPoolIpamScopeTypeEnum(str, Enum):
    r"""In IPAM, a scope is the highest-level container within IPAM. An IPAM contains two default scopes. Each scope represents the IP space for a single network. The private scope is intended for all private IP address space. The public scope is intended for all public IP address space. Scopes enable you to reuse IP addresses across multiple unconnected networks without causing IP address overlap or conflict."""
    PUBLIC = 'public'
    PRIVATE = 'private'

class DeleteIpamPoolResultIpamPoolPublicIPSourceEnum(str, Enum):
    r"""The IP address source for pools in the public scope. Only used for provisioning IP address CIDRs to pools in the public scope. Default is <code>BYOIP</code>. For more information, see <a href=\\"https://docs.aws.amazon.com/vpc/latest/ipam/intro-create-ipv6-pools.html\\">Create IPv6 pools</a> in the <i>Amazon VPC IPAM User Guide</i>. By default, you can add only one Amazon-provided IPv6 CIDR block to a top-level IPv6 pool. For information on increasing the default limit, see <a href=\\"https://docs.aws.amazon.com/vpc/latest/ipam/quotas-ipam.html\\"> Quotas for your IPAM</a> in the <i>Amazon VPC IPAM User Guide</i>."""
    AMAZON = 'amazon'
    BYOIP = 'byoip'

class DeleteIpamPoolResultIpamPoolStateEnum(str, Enum):
    r"""The state of the IPAM pool."""
    CREATE_IN_PROGRESS = 'create-in-progress'
    CREATE_COMPLETE = 'create-complete'
    CREATE_FAILED = 'create-failed'
    MODIFY_IN_PROGRESS = 'modify-in-progress'
    MODIFY_COMPLETE = 'modify-complete'
    MODIFY_FAILED = 'modify-failed'
    DELETE_IN_PROGRESS = 'delete-in-progress'
    DELETE_COMPLETE = 'delete-complete'
    DELETE_FAILED = 'delete-failed'
    ISOLATE_IN_PROGRESS = 'isolate-in-progress'
    ISOLATE_COMPLETE = 'isolate-complete'
    RESTORE_IN_PROGRESS = 'restore-in-progress'


@dataclasses.dataclass
class DeleteIpamPoolResultIpamPoolTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DeleteIpamPoolResultIpamPool:
    r"""Information about the results of the deletion."""
    
    address_family: Optional[DeleteIpamPoolResultIpamPoolAddressFamilyEnum] = dataclasses.field(default=None)  
    allocation_default_netmask_length: Optional[int] = dataclasses.field(default=None)  
    allocation_max_netmask_length: Optional[int] = dataclasses.field(default=None)  
    allocation_min_netmask_length: Optional[int] = dataclasses.field(default=None)  
    allocation_resource_tags: Optional[list[DeleteIpamPoolResultIpamPoolAllocationResourceTags]] = dataclasses.field(default=None)  
    auto_import: Optional[bool] = dataclasses.field(default=None)  
    aws_service: Optional[DeleteIpamPoolResultIpamPoolAwsServiceEnum] = dataclasses.field(default=None)  
    description: Optional[str] = dataclasses.field(default=None)  
    ipam_arn: Optional[str] = dataclasses.field(default=None)  
    ipam_pool_arn: Optional[str] = dataclasses.field(default=None)  
    ipam_pool_id: Optional[str] = dataclasses.field(default=None)  
    ipam_region: Optional[str] = dataclasses.field(default=None)  
    ipam_scope_arn: Optional[str] = dataclasses.field(default=None)  
    ipam_scope_type: Optional[DeleteIpamPoolResultIpamPoolIpamScopeTypeEnum] = dataclasses.field(default=None)  
    locale: Optional[str] = dataclasses.field(default=None)  
    owner_id: Optional[str] = dataclasses.field(default=None)  
    pool_depth: Optional[int] = dataclasses.field(default=None)  
    public_ip_source: Optional[DeleteIpamPoolResultIpamPoolPublicIPSourceEnum] = dataclasses.field(default=None)  
    publicly_advertisable: Optional[bool] = dataclasses.field(default=None)  
    source_ipam_pool_id: Optional[str] = dataclasses.field(default=None)  
    state: Optional[DeleteIpamPoolResultIpamPoolStateEnum] = dataclasses.field(default=None)  
    state_message: Optional[str] = dataclasses.field(default=None)  
    tags: Optional[list[DeleteIpamPoolResultIpamPoolTags]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DeleteIpamPoolResult:
    r"""Success"""
    
    ipam_pool: Optional[DeleteIpamPoolResultIpamPool] = dataclasses.field(default=None)  
    