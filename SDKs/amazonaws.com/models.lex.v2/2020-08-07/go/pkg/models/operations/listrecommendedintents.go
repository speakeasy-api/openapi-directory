// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ListRecommendedIntentsPathParams struct {
	// The unique identifier of the bot associated with the recommended intents.
	BotID string `pathParam:"style=simple,explode=false,name=botId"`
	// The identifier of the bot recommendation that contains the recommended intents.
	BotRecommendationID string `pathParam:"style=simple,explode=false,name=botRecommendationId"`
	// The version of the bot that contains the recommended intents.
	BotVersion string `pathParam:"style=simple,explode=false,name=botVersion"`
	// The identifier of the language and locale of the recommended intents.
	LocaleID string `pathParam:"style=simple,explode=false,name=localeId"`
}

type ListRecommendedIntentsQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListRecommendedIntentsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type ListRecommendedIntentsRequestBody struct {
	// The maximum number of bot recommendations to return in each page of results. If there are fewer results than the max page size, only the actual number of results are returned.
	MaxResults *int64 `json:"maxResults,omitempty"`
	// If the response from the ListRecommendedIntents operation contains more results than specified in the maxResults parameter, a token is returned in the response. Use that token in the nextToken parameter to return the next page of results.
	NextToken *string `json:"nextToken,omitempty"`
}

type ListRecommendedIntentsRequest struct {
	PathParams  ListRecommendedIntentsPathParams
	QueryParams ListRecommendedIntentsQueryParams
	Headers     ListRecommendedIntentsHeaders
	Request     ListRecommendedIntentsRequestBody `request:"mediaType=application/json"`
}

type ListRecommendedIntentsResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListRecommendedIntentsResponse *shared.ListRecommendedIntentsResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
