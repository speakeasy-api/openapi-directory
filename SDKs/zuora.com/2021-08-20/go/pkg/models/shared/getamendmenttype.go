// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"openapi/pkg/types"
)

type GETAmendmentType struct {
	// Determines whether the subscription is automatically renewed, or whether it expires at the end of the term and needs to be manually renewed.
	//
	AutoRenew *bool `json:"autoRenew,omitempty"`
	// The rate plan ID on which changes are made. Only the Update or Remove amendment returns a base rate plan ID.
	//
	BaseRatePlanID *string `json:"baseRatePlanId,omitempty"`
	// The ID of the subscription based on which the amendment is created.
	//
	BaseSubscriptionID *string `json:"baseSubscriptionId,omitempty"`
	// The amendment code.
	//
	Code *string `json:"code,omitempty"`
	// The date when the amendment becomes effective for billing purposes, as `yyyy-mm-dd`.
	//
	ContractEffectiveDate *types.Date `json:"contractEffectiveDate,omitempty"`
	// The length of the period for the current subscription term.
	//
	CurrentTerm *int64 `json:"currentTerm,omitempty"`
	// The period type for the current subscription term.
	// Possible values are:
	//
	// - Month
	// - Year
	// - Day
	// - Week
	//
	CurrentTermPeriodType *string `json:"currentTermPeriodType,omitempty"`
	// The date when the customer accepts the amendment changes to the subscription, as `yyyy-mm-dd`.
	//
	CustomerAcceptanceDate *types.Date `json:"customerAcceptanceDate,omitempty"`
	// Description of the amendment.
	//
	Description *string `json:"description,omitempty"`
	// The ID of the account that the subscription is being transferred to.
	//
	DestinationAccountID *string `json:"destinationAccountId,omitempty"`
	// The ID of the invoice that the subscription is being transferred to.
	//
	DestinationInvoiceOwnerID *string `json:"destinationInvoiceOwnerId,omitempty"`
	// The date when the amendment changes take effective.
	//
	EffectiveDate *types.Date `json:"effectiveDate,omitempty"`
	// The amendment ID.
	//
	ID *string `json:"id,omitempty"`
	// The name of the amendment.
	//
	Name *string `json:"name,omitempty"`
	// The ID of the rate plan charge on which amendment is made. Only the Add or Update amendment returns a new rate plan ID.
	//
	NewRatePlanID *string `json:"newRatePlanId,omitempty"`
	// The ID of the subscription that the amendment changes.
	//
	NewSubscriptionID *string `json:"newSubscriptionId,omitempty"`
	// Specifies whether a termed subscription will remain termed or change to evergreen when it is renewed.
	// Possible values are:
	//
	// - RENEW_WITH_SPECIFIC_TERM
	// - RENEW_TO_EVERGREEN
	//
	RenewalSetting *string `json:"renewalSetting,omitempty"`
	// The term of renewal for the amended subscription.
	//
	RenewalTerm *int64 `json:"renewalTerm,omitempty"`
	// The period type for the subscription renewal term.
	// Possible values are:
	//
	// - Month
	// - Year
	// - Day
	// - Week
	//
	RenewalTermPeriodType *string `json:"renewalTermPeriodType,omitempty"`
	// The date when the subscription resumption takes effect, as `yyyy-mm-dd`.
	//
	// **Note:** This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
	//
	ResumeDate *types.Date `json:"resumeDate,omitempty"`
	// The date when service is activated, as `yyyy-mm-dd`.
	//
	ServiceActivationDate *types.Date `json:"serviceActivationDate,omitempty"`
	// The date when the Update Product amendment takes effect.
	// Only for the Update Product amendments if there is already a future-dated Update Product amendment on
	// the subscription.
	//
	SpecificUpdateDate *types.Date `json:"specificUpdateDate,omitempty"`
	// The status of the amendment.
	// Possible values are:
	//
	// - Draft
	// - Pending Activation
	// - Pending Acceptance
	// - Completed
	//
	Status *string `json:"status,omitempty"`
	// Returns `true` if the request was processed successfully.
	//
	Success *bool `json:"success,omitempty"`
	// The date when the subscription suspension takes effect, as `yyyy-mm-dd`.
	//
	// **Note:** This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
	//
	SuspendDate *types.Date `json:"suspendDate,omitempty"`
	// The date when the new terms and conditions take effect.
	//
	TermStartDate *types.Date `json:"termStartDate,omitempty"`
	// Indicates if the subscription is `TERMED` or `EVERGREEN`.
	//
	TermType *string `json:"termType,omitempty"`
	// Type of the amendment.
	// Possible values are:
	//
	// - Cancellation
	// - NewProduct
	// - OwnerTransfer
	// - RemoveProduct
	// - Renewal
	// - UpdateProduct
	// - TermsAndConditions
	//
	Type *string `json:"type,omitempty"`
}
