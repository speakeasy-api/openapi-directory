"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateDeviceWirelessBluetoothSettingsRequestBody:
    
    major: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('major'), 'exclude': lambda f: f is None }})
    r"""Desired major value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value."""  
    minor: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minor'), 'exclude': lambda f: f is None }})
    r"""Desired minor value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value."""  
    uuid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uuid'), 'exclude': lambda f: f is None }})
    r"""Desired UUID of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value."""  
    

@dataclasses.dataclass
class UpdateDeviceWirelessBluetoothSettingsRequest:
    
    serial: str = dataclasses.field(metadata={'path_param': { 'field_name': 'serial', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdateDeviceWirelessBluetoothSettingsRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateDeviceWirelessBluetoothSettings200ApplicationJSON:
    r"""Successful operation"""
    
    major: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('major'), 'exclude': lambda f: f is None }})
    r"""Desired major value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value."""  
    minor: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minor'), 'exclude': lambda f: f is None }})
    r"""Desired minor value of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value."""  
    uuid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uuid'), 'exclude': lambda f: f is None }})
    r"""Desired UUID of the beacon. If the value is set to null it will reset to Dashboard's automatically generated value."""  
    

@dataclasses.dataclass
class UpdateDeviceWirelessBluetoothSettingsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_device_wireless_bluetooth_settings_200_application_json_object: Optional[UpdateDeviceWirelessBluetoothSettings200ApplicationJSON] = dataclasses.field(default=None)
    r"""Successful operation"""  
    