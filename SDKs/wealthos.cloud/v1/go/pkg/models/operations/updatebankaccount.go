// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

type UpdateBankAccountSecurity struct {
	APISecretKey string `security:"scheme,type=apiKey,subtype=header,name=x-api-key"`
}

type UpdateBankAccountUpdateRequestBodyForBankAccountAccountStatusEnum string

const (
	UpdateBankAccountUpdateRequestBodyForBankAccountAccountStatusEnumActive   UpdateBankAccountUpdateRequestBodyForBankAccountAccountStatusEnum = "active"
	UpdateBankAccountUpdateRequestBodyForBankAccountAccountStatusEnumInactive UpdateBankAccountUpdateRequestBodyForBankAccountAccountStatusEnum = "inactive"
)

func (e UpdateBankAccountUpdateRequestBodyForBankAccountAccountStatusEnum) ToPointer() *UpdateBankAccountUpdateRequestBodyForBankAccountAccountStatusEnum {
	return &e
}

func (e *UpdateBankAccountUpdateRequestBodyForBankAccountAccountStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "inactive":
		*e = UpdateBankAccountUpdateRequestBodyForBankAccountAccountStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateBankAccountUpdateRequestBodyForBankAccountAccountStatusEnum: %v", v)
	}
}

// UpdateBankAccountUpdateRequestBodyForBankAccountDefaultAccountEnum - Only one account should be the default
type UpdateBankAccountUpdateRequestBodyForBankAccountDefaultAccountEnum string

const (
	UpdateBankAccountUpdateRequestBodyForBankAccountDefaultAccountEnumYes UpdateBankAccountUpdateRequestBodyForBankAccountDefaultAccountEnum = "yes"
	UpdateBankAccountUpdateRequestBodyForBankAccountDefaultAccountEnumNo  UpdateBankAccountUpdateRequestBodyForBankAccountDefaultAccountEnum = "no"
)

func (e UpdateBankAccountUpdateRequestBodyForBankAccountDefaultAccountEnum) ToPointer() *UpdateBankAccountUpdateRequestBodyForBankAccountDefaultAccountEnum {
	return &e
}

func (e *UpdateBankAccountUpdateRequestBodyForBankAccountDefaultAccountEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "yes":
		fallthrough
	case "no":
		*e = UpdateBankAccountUpdateRequestBodyForBankAccountDefaultAccountEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateBankAccountUpdateRequestBodyForBankAccountDefaultAccountEnum: %v", v)
	}
}

// UpdateBankAccountUpdateRequestBodyForBankAccount - JSON for the Update bank account resource type
type UpdateBankAccountUpdateRequestBodyForBankAccount struct {
	AccountName   *string                                                            `json:"account_name,omitempty"`
	AccountStatus *UpdateBankAccountUpdateRequestBodyForBankAccountAccountStatusEnum `json:"account_status,omitempty"`
	// Only one account should be the default
	DefaultAccount   *UpdateBankAccountUpdateRequestBodyForBankAccountDefaultAccountEnum `json:"default_account,omitempty"`
	ReferenceVersion int64                                                               `json:"reference_version"`
}

type UpdateBankAccountRequest struct {
	RequestBody UpdateBankAccountUpdateRequestBodyForBankAccount `request:"mediaType=application/json"`
	// Bank Account Id
	BankAccountID string `pathParam:"style=simple,explode=false,name=bank_account_id"`
	// ApiSecretKey
	XAPIKey string `header:"style=simple,explode=false,name=x-api-key"`
}

// UpdateBankAccount500ApplicationJSON - System error. Retry later. If the error persist, contact WOS support
type UpdateBankAccount500ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// UpdateBankAccount429ApplicationJSON - You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
type UpdateBankAccount429ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// UpdateBankAccount409ApplicationJSONStatusEnum - Current status of the original request
type UpdateBankAccount409ApplicationJSONStatusEnum string

const (
	UpdateBankAccount409ApplicationJSONStatusEnumProcessing UpdateBankAccount409ApplicationJSONStatusEnum = "PROCESSING"
	UpdateBankAccount409ApplicationJSONStatusEnumComplete   UpdateBankAccount409ApplicationJSONStatusEnum = "COMPLETE"
)

func (e UpdateBankAccount409ApplicationJSONStatusEnum) ToPointer() *UpdateBankAccount409ApplicationJSONStatusEnum {
	return &e
}

func (e *UpdateBankAccount409ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PROCESSING":
		fallthrough
	case "COMPLETE":
		*e = UpdateBankAccount409ApplicationJSONStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateBankAccount409ApplicationJSONStatusEnum: %v", v)
	}
}

// UpdateBankAccount409ApplicationJSON - Duplicate request
type UpdateBankAccount409ApplicationJSON struct {
	// Human readable description of the error
	Message string `json:"message"`
	// Stringified original response body if status is `COMPLETE`
	Response map[string]interface{} `json:"response,omitempty"`
	// Current status of the original request
	Status UpdateBankAccount409ApplicationJSONStatusEnum `json:"status"`
}

// UpdateBankAccount404ApplicationJSON - The specified resource was not found
type UpdateBankAccount404ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// UpdateBankAccount403ApplicationJSON - Your authentication information is missing or invalid. Please check the keys are properly set and its correct
type UpdateBankAccount403ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// UpdateBankAccount401ApplicationJSON - You do not have permissions to access this resource.
type UpdateBankAccount401ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// UpdateBankAccount400ApplicationJSON - Request is not complete and may have one or more validations errors. Please check the error message and the code
type UpdateBankAccount400ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// UpdateBankAccount201ApplicationJSONAccountStatusEnum - If not populated, will be defaulted to inactive
type UpdateBankAccount201ApplicationJSONAccountStatusEnum string

const (
	UpdateBankAccount201ApplicationJSONAccountStatusEnumActive   UpdateBankAccount201ApplicationJSONAccountStatusEnum = "active"
	UpdateBankAccount201ApplicationJSONAccountStatusEnumInactive UpdateBankAccount201ApplicationJSONAccountStatusEnum = "inactive"
)

func (e UpdateBankAccount201ApplicationJSONAccountStatusEnum) ToPointer() *UpdateBankAccount201ApplicationJSONAccountStatusEnum {
	return &e
}

func (e *UpdateBankAccount201ApplicationJSONAccountStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "inactive":
		*e = UpdateBankAccount201ApplicationJSONAccountStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateBankAccount201ApplicationJSONAccountStatusEnum: %v", v)
	}
}

// UpdateBankAccount201ApplicationJSONDefaultAccountEnum - Only one account should be the default
type UpdateBankAccount201ApplicationJSONDefaultAccountEnum string

const (
	UpdateBankAccount201ApplicationJSONDefaultAccountEnumYes UpdateBankAccount201ApplicationJSONDefaultAccountEnum = "yes"
	UpdateBankAccount201ApplicationJSONDefaultAccountEnumNo  UpdateBankAccount201ApplicationJSONDefaultAccountEnum = "no"
)

func (e UpdateBankAccount201ApplicationJSONDefaultAccountEnum) ToPointer() *UpdateBankAccount201ApplicationJSONDefaultAccountEnum {
	return &e
}

func (e *UpdateBankAccount201ApplicationJSONDefaultAccountEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "yes":
		fallthrough
	case "no":
		*e = UpdateBankAccount201ApplicationJSONDefaultAccountEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateBankAccount201ApplicationJSONDefaultAccountEnum: %v", v)
	}
}

// UpdateBankAccount201ApplicationJSON - success
type UpdateBankAccount201ApplicationJSON struct {
	AccountName string `json:"account_name"`
	// If not populated, will be defaulted to inactive
	AccountStatus *UpdateBankAccount201ApplicationJSONAccountStatusEnum `json:"account_status,omitempty"`
	// system generated id
	BankAccountID *string `json:"bank_account_id,omitempty"`
	// Unique for the investor
	BankAccountNumber         string     `json:"bank_account_number"`
	BuildingSocietyRollNumber *string    `json:"building_society_roll_number,omitempty"`
	CreatedAt                 *time.Time `json:"created_at,omitempty"`
	// Only one account should be the default
	DefaultAccount   UpdateBankAccount201ApplicationJSONDefaultAccountEnum `json:"default_account"`
	InvestorID       string                                                `json:"investor_id"`
	ReferenceVersion *int64                                                `json:"reference_version,omitempty"`
	SortCode         *string                                               `json:"sort_code,omitempty"`
	UpdatedAt        *time.Time                                            `json:"updated_at,omitempty"`
}

type UpdateBankAccountResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// success
	UpdateBankAccount201ApplicationJSONObject *UpdateBankAccount201ApplicationJSON
	// Request is not complete and may have one or more validations errors. Please check the error message and the code
	UpdateBankAccount400ApplicationJSONObject *UpdateBankAccount400ApplicationJSON
	// You do not have permissions to access this resource.
	UpdateBankAccount401ApplicationJSONObject *UpdateBankAccount401ApplicationJSON
	// Your authentication information is missing or invalid. Please check the keys are properly set and its correct
	UpdateBankAccount403ApplicationJSONObject *UpdateBankAccount403ApplicationJSON
	// The specified resource was not found
	UpdateBankAccount404ApplicationJSONObject *UpdateBankAccount404ApplicationJSON
	// Duplicate request
	UpdateBankAccount409ApplicationJSONObject *UpdateBankAccount409ApplicationJSON
	// You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
	UpdateBankAccount429ApplicationJSONObject *UpdateBankAccount429ApplicationJSON
	// System error. Retry later. If the error persist, contact WOS support
	UpdateBankAccount500ApplicationJSONObject *UpdateBankAccount500ApplicationJSON
}
