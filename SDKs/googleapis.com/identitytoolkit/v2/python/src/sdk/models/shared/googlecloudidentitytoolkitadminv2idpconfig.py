"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudidentitytoolkitadminv2idpcertificate as shared_googlecloudidentitytoolkitadminv2idpcertificate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIdentitytoolkitAdminV2IdpConfig:
    r"""The SAML IdP (Identity Provider) configuration when the project acts as the relying party."""
    
    idp_certificates: Optional[list[shared_googlecloudidentitytoolkitadminv2idpcertificate.GoogleCloudIdentitytoolkitAdminV2IdpCertificate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('idpCertificates'), 'exclude': lambda f: f is None }})
    r"""IDP's public keys for verifying signature in the assertions."""  
    idp_entity_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('idpEntityId'), 'exclude': lambda f: f is None }})
    r"""Unique identifier for all SAML entities."""  
    sign_request: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('signRequest'), 'exclude': lambda f: f is None }})
    r"""Indicates if outbounding SAMLRequest should be signed."""  
    sso_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ssoUrl'), 'exclude': lambda f: f is None }})
    r"""URL to send Authentication request to."""  
    