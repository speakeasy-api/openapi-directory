// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetAliasesSecurity struct {
	APIKeyAuth shared.SchemeAPIKeyAuth `security:"scheme,type=apiKey,subtype=header"`
}

type GetAliasesQueryParams struct {
	// An ID returned by a previous query to continue aliases retrieval (see lastId in response)
	ContinueFrom *string `queryParam:"style=form,explode=true,name=continueFrom"`
	// The domain name to get the aliases for (string without `http/https` or `/`)
	DomainName *string `queryParam:"style=form,explode=true,name=domainName"`
	// Number of results to return per request
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
}

type GetAliasesRequest struct {
	QueryParams GetAliasesQueryParams
	Security    GetAliasesSecurity
}

type GetAliasesResponse struct {
	ContentType string
	// returns Array of aliases with lastId
	GetAliasesModel *shared.GetAliasesModel
	StatusCode      int
	RawResponse     *http.Response
}
