/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Link } from "./link";
import { Expose, Transform, Type } from "class-transformer";

export class SpinLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "playlist" })
  @Type(() => Link)
  playlist?: Link;

  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  @Type(() => Link)
  self?: Link;
}

/**
 * The new created Spin.
 */
export class Spin extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => SpinLinks)
  links?: SpinLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "artist" })
  artist?: string;

  /**
   * Station-specific custom field relating to the song's artist
   */
  @SpeakeasyMetadata()
  @Expose({ name: "artist-custom" })
  artistCustom?: string;

  /**
   * Reference number in the record label's catalog
   */
  @SpeakeasyMetadata()
  @Expose({ name: "catalog-number" })
  catalogNumber?: string;

  /**
   * Is the track's metadata schema "classical" rather than "popular"?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "classical" })
  classical?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "composer" })
  composer?: string;

  /**
   * For classical music, conducor of the ensemble
   */
  @SpeakeasyMetadata()
  @Expose({ name: "conductor" })
  conductor?: string;

  /**
   * Duration in seconds
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration?: number;

  /**
   * UTC datetime ISO-8601
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  end?: Date;

  /**
   * For classical music, orchestra, performing ensemble, choir, etc.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ensemble" })
  ensemble?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "genre" })
  genre?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Cover art
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image" })
  image?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isrc" })
  isrc?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "iswc" })
  iswc?: string;

  /**
   * Record label, i.e. publisher of the sound recording
   */
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;

  /**
   * Station-specific custom field relating to the record label
   */
  @SpeakeasyMetadata()
  @Expose({ name: "label-custom" })
  labelCustom?: string;

  /**
   * Is the artist local to the station?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "local" })
  local?: boolean;

  /**
   * Media format in which the sound recording was reased
   */
  @SpeakeasyMetadata()
  @Expose({ name: "medium" })
  medium?: string;

  /**
   * Is this a recent release?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "new" })
  new?: boolean;

  /**
   * HTML-formatted DJ annotation of the spin, can include images etc.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "note" })
  note?: string;

  /**
   * For classical music, featured performing artists, e.g. soloists
   */
  @SpeakeasyMetadata()
  @Expose({ name: "performers" })
  performers?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "playlist_id" })
  playlistId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "release" })
  release?: string;

  /**
   * Station-specific custom field relating to the release
   */
  @SpeakeasyMetadata()
  @Expose({ name: "release-custom" })
  releaseCustom?: string;

  /**
   * Year of initial release
   */
  @SpeakeasyMetadata()
  @Expose({ name: "released" })
  released?: number;

  /**
   * Was the spin requested by a listener?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "request" })
  request?: boolean;

  /**
   * Title of the song or track
   */
  @SpeakeasyMetadata()
  @Expose({ name: "song" })
  song?: string;

  /**
   * UTC datetime ISO-8601
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  start?: Date;

  /**
   * Station's time zone
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timezone" })
  timezone?: string;

  /**
   * Universal Product Code of the release
   */
  @SpeakeasyMetadata()
  @Expose({ name: "upc" })
  upc?: string;

  /**
   * Is it a "Various Artists" release?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "va" })
  va?: boolean;

  /**
   * For classical music, the main compositional work the track (see `song` field) belongs to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "work" })
  work?: string;
}
