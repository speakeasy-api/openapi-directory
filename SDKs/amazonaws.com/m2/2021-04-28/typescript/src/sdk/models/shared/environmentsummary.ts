/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EngineTypeEnum } from "./enginetypeenum";
import { EnvironmentLifecycleEnum } from "./environmentlifecycleenum";
import { Expose, Transform } from "class-transformer";

/**
 * Contains a subset of the possible runtime environment attributes. Used in the environment list.
 */
export class EnvironmentSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "engineType" })
  engineType: EngineTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "engineVersion" })
  engineVersion: string;

  @SpeakeasyMetadata()
  @Expose({ name: "environmentArn" })
  environmentArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "environmentId" })
  environmentId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instanceType" })
  instanceType: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: EnvironmentLifecycleEnum;
}
