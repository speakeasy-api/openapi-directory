"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RevokeSecurityGroupIngressResult = exports.RevokeSecurityGroupIngressResultUnknownIpPermissions = exports.RevokeSecurityGroupIngressResultUnknownIpPermissionsUserIdGroupPairs = exports.RevokeSecurityGroupIngressResultUnknownIpPermissionsPrefixListIds = exports.RevokeSecurityGroupIngressResultUnknownIpPermissionsIpv6Ranges = exports.RevokeSecurityGroupIngressResultUnknownIpPermissionsIpRanges = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * Describes an IPv4 range.
 */
var RevokeSecurityGroupIngressResultUnknownIpPermissionsIpRanges = /** @class */ (function (_super) {
    __extends(RevokeSecurityGroupIngressResultUnknownIpPermissionsIpRanges, _super);
    function RevokeSecurityGroupIngressResultUnknownIpPermissionsIpRanges() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissionsIpRanges.prototype, "cidrIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissionsIpRanges.prototype, "description", void 0);
    return RevokeSecurityGroupIngressResultUnknownIpPermissionsIpRanges;
}(utils_1.SpeakeasyBase));
exports.RevokeSecurityGroupIngressResultUnknownIpPermissionsIpRanges = RevokeSecurityGroupIngressResultUnknownIpPermissionsIpRanges;
/**
 * [EC2-VPC only] Describes an IPv6 range.
 */
var RevokeSecurityGroupIngressResultUnknownIpPermissionsIpv6Ranges = /** @class */ (function (_super) {
    __extends(RevokeSecurityGroupIngressResultUnknownIpPermissionsIpv6Ranges, _super);
    function RevokeSecurityGroupIngressResultUnknownIpPermissionsIpv6Ranges() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissionsIpv6Ranges.prototype, "cidrIpv6", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissionsIpv6Ranges.prototype, "description", void 0);
    return RevokeSecurityGroupIngressResultUnknownIpPermissionsIpv6Ranges;
}(utils_1.SpeakeasyBase));
exports.RevokeSecurityGroupIngressResultUnknownIpPermissionsIpv6Ranges = RevokeSecurityGroupIngressResultUnknownIpPermissionsIpv6Ranges;
/**
 * Describes a prefix list ID.
 */
var RevokeSecurityGroupIngressResultUnknownIpPermissionsPrefixListIds = /** @class */ (function (_super) {
    __extends(RevokeSecurityGroupIngressResultUnknownIpPermissionsPrefixListIds, _super);
    function RevokeSecurityGroupIngressResultUnknownIpPermissionsPrefixListIds() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissionsPrefixListIds.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissionsPrefixListIds.prototype, "prefixListId", void 0);
    return RevokeSecurityGroupIngressResultUnknownIpPermissionsPrefixListIds;
}(utils_1.SpeakeasyBase));
exports.RevokeSecurityGroupIngressResultUnknownIpPermissionsPrefixListIds = RevokeSecurityGroupIngressResultUnknownIpPermissionsPrefixListIds;
/**
 * <p>Describes a security group and Amazon Web Services account ID pair.</p> <note> <p>We are retiring EC2-Classic. We recommend that you migrate from EC2-Classic to a VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </note>
 */
var RevokeSecurityGroupIngressResultUnknownIpPermissionsUserIdGroupPairs = /** @class */ (function (_super) {
    __extends(RevokeSecurityGroupIngressResultUnknownIpPermissionsUserIdGroupPairs, _super);
    function RevokeSecurityGroupIngressResultUnknownIpPermissionsUserIdGroupPairs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissionsUserIdGroupPairs.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissionsUserIdGroupPairs.prototype, "groupId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissionsUserIdGroupPairs.prototype, "groupName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissionsUserIdGroupPairs.prototype, "peeringStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissionsUserIdGroupPairs.prototype, "userId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissionsUserIdGroupPairs.prototype, "vpcId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissionsUserIdGroupPairs.prototype, "vpcPeeringConnectionId", void 0);
    return RevokeSecurityGroupIngressResultUnknownIpPermissionsUserIdGroupPairs;
}(utils_1.SpeakeasyBase));
exports.RevokeSecurityGroupIngressResultUnknownIpPermissionsUserIdGroupPairs = RevokeSecurityGroupIngressResultUnknownIpPermissionsUserIdGroupPairs;
/**
 * Describes a set of permissions for a security group rule.
 */
var RevokeSecurityGroupIngressResultUnknownIpPermissions = /** @class */ (function (_super) {
    __extends(RevokeSecurityGroupIngressResultUnknownIpPermissions, _super);
    function RevokeSecurityGroupIngressResultUnknownIpPermissions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissions.prototype, "fromPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissions.prototype, "ipProtocol", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RevokeSecurityGroupIngressResultUnknownIpPermissionsIpRanges,
        }),
        __metadata("design:type", Array)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissions.prototype, "ipRanges", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RevokeSecurityGroupIngressResultUnknownIpPermissionsIpv6Ranges,
        }),
        __metadata("design:type", Array)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissions.prototype, "ipv6Ranges", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RevokeSecurityGroupIngressResultUnknownIpPermissionsPrefixListIds,
        }),
        __metadata("design:type", Array)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissions.prototype, "prefixListIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissions.prototype, "toPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RevokeSecurityGroupIngressResultUnknownIpPermissionsUserIdGroupPairs,
        }),
        __metadata("design:type", Array)
    ], RevokeSecurityGroupIngressResultUnknownIpPermissions.prototype, "userIdGroupPairs", void 0);
    return RevokeSecurityGroupIngressResultUnknownIpPermissions;
}(utils_1.SpeakeasyBase));
exports.RevokeSecurityGroupIngressResultUnknownIpPermissions = RevokeSecurityGroupIngressResultUnknownIpPermissions;
/**
 * Success
 */
var RevokeSecurityGroupIngressResult = /** @class */ (function (_super) {
    __extends(RevokeSecurityGroupIngressResult, _super);
    function RevokeSecurityGroupIngressResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RevokeSecurityGroupIngressResult.prototype, "return", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RevokeSecurityGroupIngressResultUnknownIpPermissions,
        }),
        __metadata("design:type", Array)
    ], RevokeSecurityGroupIngressResult.prototype, "unknownIpPermissions", void 0);
    return RevokeSecurityGroupIngressResult;
}(utils_1.SpeakeasyBase));
exports.RevokeSecurityGroupIngressResult = RevokeSecurityGroupIngressResult;
