/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2Conditions } from "./googleprivacydlpv2conditions";
import { Expose, Type } from "class-transformer";

/**
 * The operator to apply to the result of conditions. Default and currently only supported value is `AND`.
 */
export enum GooglePrivacyDlpV2ExpressionsLogicalOperatorEnum {
  LogicalOperatorUnspecified = "LOGICAL_OPERATOR_UNSPECIFIED",
  And = "AND",
}

/**
 * An expression, consisting of an operator and conditions.
 */
export class GooglePrivacyDlpV2Expressions extends SpeakeasyBase {
  /**
   * A collection of conditions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "conditions" })
  @Type(() => GooglePrivacyDlpV2Conditions)
  conditions?: GooglePrivacyDlpV2Conditions;

  /**
   * The operator to apply to the result of conditions. Default and currently only supported value is `AND`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "logicalOperator" })
  logicalOperator?: GooglePrivacyDlpV2ExpressionsLogicalOperatorEnum;
}
