/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConfigVariableTemplate } from "./configvariabletemplate";
import { Expose, Type } from "class-transformer";

export enum SslConfigTemplateClientCertTypeEnum {
  CertTypeUnspecified = "CERT_TYPE_UNSPECIFIED",
  Pem = "PEM",
}

export enum SslConfigTemplateServerCertTypeEnum {
  CertTypeUnspecified = "CERT_TYPE_UNSPECIFIED",
  Pem = "PEM",
}

/**
 * Controls the ssl type for the given connector version
 */
export enum SslConfigTemplateSslTypeEnum {
  SslTypeUnspecified = "SSL_TYPE_UNSPECIFIED",
  Tls = "TLS",
  Mtls = "MTLS",
}

/**
 * Ssl config details of a connector version
 */
export class SslConfigTemplate extends SpeakeasyBase {
  /**
   * Any additional fields that need to be rendered
   */
  @SpeakeasyMetadata({ elemType: ConfigVariableTemplate })
  @Expose({ name: "additionalVariables" })
  @Type(() => ConfigVariableTemplate)
  additionalVariables?: ConfigVariableTemplate[];

  /**
   * List of supported Client Cert Types
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientCertType" })
  clientCertType?: SslConfigTemplateClientCertTypeEnum[];

  /**
   * Boolean for determining if the connector version mandates TLS.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isTlsMandatory" })
  isTlsMandatory?: boolean;

  /**
   * List of supported Server Cert Types
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serverCertType" })
  serverCertType?: SslConfigTemplateServerCertTypeEnum[];

  /**
   * Controls the ssl type for the given connector version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sslType" })
  sslType?: SslConfigTemplateSslTypeEnum;
}
