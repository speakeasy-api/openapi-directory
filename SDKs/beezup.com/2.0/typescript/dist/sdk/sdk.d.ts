import { AxiosInstance } from "axios";
import { AnalyticsGlobal } from "./analyticsglobal";
import { AnalyticsOptimisations } from "./analyticsoptimisations";
import { AnalyticsReports } from "./analyticsreports";
import { AnalyticsRules } from "./analyticsrules";
import { AnalyticsStatistics } from "./analyticsstatistics";
import { AnalyticsTracking } from "./analyticstracking";
import { CatalogsAuto } from "./catalogsauto";
import { CatalogsCatalog } from "./catalogscatalog";
import { CatalogsGlobal } from "./catalogsglobal";
import { CatalogsImportationCatalogInfo } from "./catalogsimportationcataloginfo";
import { CatalogsImportationProcess } from "./catalogsimportationprocess";
import { ChannelCatalogsCategories } from "./channelcatalogscategories";
import { ChannelCatalogsColumnMappings } from "./channelcatalogscolumnmappings";
import { ChannelCatalogsExclusionFilters } from "./channelcatalogsexclusionfilters";
import { ChannelCatalogsExportations } from "./channelcatalogsexportations";
import { ChannelCatalogsGlobal } from "./channelcatalogsglobal";
import { ChannelCatalogsLegacyTrackingGlobal } from "./channelcatalogslegacytrackingglobal";
import { ChannelCatalogsProducts } from "./channelcatalogsproducts";
import { ChannelCatalogsProductsOptimisation } from "./channelcatalogsproductsoptimisation";
import { ChannelCatalogsProductsOverrides } from "./channelcatalogsproductsoverrides";
import { ChannelCatalogsSettings } from "./channelcatalogssettings";
import { ChannelsChannelsGlobal } from "./channelschannelsglobal";
import { CustomerAccount } from "./customeraccount";
import { CustomerAlerts } from "./customeralerts";
import { CustomerContracts } from "./customercontracts";
import { CustomerFriends } from "./customerfriends";
import { CustomerGlobal } from "./customerglobal";
import { CustomerInvoices } from "./customerinvoices";
import { CustomerRights } from "./customerrights";
import { CustomerSecurity } from "./customersecurity";
import { CustomerShares } from "./customershares";
import { CustomerStores } from "./customerstores";
import { MarketplacesChannelCatalogsGlobal } from "./marketplaceschannelcatalogsglobal";
import { MarketplacesChannelCatalogsPublications } from "./marketplaceschannelcatalogspublications";
import { MarketplacesChannelCatalogsSettings } from "./marketplaceschannelcatalogssettings";
import { MarketplacesOrdersAutoTransitions } from "./marketplacesordersautotransitions";
import { MarketplacesOrdersBatches } from "./marketplacesordersbatches";
import { MarketplacesOrdersExports } from "./marketplacesordersexports";
import { MarketplacesOrdersGlobal } from "./marketplacesordersglobal";
import { MarketplacesOrdersList } from "./marketplacesorderslist";
import { MarketplacesOrdersOrder } from "./marketplacesordersorder";
import { MarketplacesOrdersSubscriptionsSubscriptions } from "./marketplacesorderssubscriptionssubscriptions";
import { MarketplacesOrdersV3Batches } from "./marketplacesordersv3batches";
import { MarketplacesOrdersV3Global } from "./marketplacesordersv3global";
import { MarketplacesOrdersV3List } from "./marketplacesordersv3list";
import { MarketplacesOrdersV3Order } from "./marketplacesordersv3order";
import { OmInvoiceApiGeneration } from "./ominvoiceapigeneration";
import { OmInvoiceApiSettings } from "./ominvoiceapisettings";
import { PublicChannelsPublicChannels } from "./publicchannelspublicchannels";
import { PublicListOfValuesLov } from "./publiclistofvalueslov";
import { PublicSecuritySecurity } from "./publicsecuritysecurity";
import { UserListOfValuesLov } from "./userlistofvalueslov";
export declare const ServerList: readonly ["https://api.beezup.com"];
export type SDKProps = {
    defaultClient?: AxiosInstance;
    serverUrl?: string;
};
export declare class SDK {
    analyticsGlobal: AnalyticsGlobal;
    analyticsOptimisations: AnalyticsOptimisations;
    analyticsReports: AnalyticsReports;
    analyticsRules: AnalyticsRules;
    analyticsStatistics: AnalyticsStatistics;
    analyticsTracking: AnalyticsTracking;
    catalogsAuto: CatalogsAuto;
    catalogsCatalog: CatalogsCatalog;
    catalogsGlobal: CatalogsGlobal;
    catalogsImportationCatalogInfo: CatalogsImportationCatalogInfo;
    catalogsImportationProcess: CatalogsImportationProcess;
    channelCatalogsCategories: ChannelCatalogsCategories;
    channelCatalogsColumnMappings: ChannelCatalogsColumnMappings;
    channelCatalogsExclusionFilters: ChannelCatalogsExclusionFilters;
    channelCatalogsExportations: ChannelCatalogsExportations;
    channelCatalogsGlobal: ChannelCatalogsGlobal;
    channelCatalogsLegacyTrackingGlobal: ChannelCatalogsLegacyTrackingGlobal;
    channelCatalogsProducts: ChannelCatalogsProducts;
    channelCatalogsProductsOptimisation: ChannelCatalogsProductsOptimisation;
    channelCatalogsProductsOverrides: ChannelCatalogsProductsOverrides;
    channelCatalogsSettings: ChannelCatalogsSettings;
    channelsChannelsGlobal: ChannelsChannelsGlobal;
    customerAccount: CustomerAccount;
    customerAlerts: CustomerAlerts;
    customerContracts: CustomerContracts;
    customerFriends: CustomerFriends;
    customerGlobal: CustomerGlobal;
    customerInvoices: CustomerInvoices;
    customerRights: CustomerRights;
    customerSecurity: CustomerSecurity;
    customerShares: CustomerShares;
    customerStores: CustomerStores;
    marketplacesChannelCatalogsGlobal: MarketplacesChannelCatalogsGlobal;
    marketplacesChannelCatalogsPublications: MarketplacesChannelCatalogsPublications;
    marketplacesChannelCatalogsSettings: MarketplacesChannelCatalogsSettings;
    marketplacesOrdersAutoTransitions: MarketplacesOrdersAutoTransitions;
    marketplacesOrdersBatches: MarketplacesOrdersBatches;
    marketplacesOrdersExports: MarketplacesOrdersExports;
    marketplacesOrdersGlobal: MarketplacesOrdersGlobal;
    marketplacesOrdersList: MarketplacesOrdersList;
    marketplacesOrdersOrder: MarketplacesOrdersOrder;
    marketplacesOrdersSubscriptionsSubscriptions: MarketplacesOrdersSubscriptionsSubscriptions;
    marketplacesOrdersV3Batches: MarketplacesOrdersV3Batches;
    marketplacesOrdersV3Global: MarketplacesOrdersV3Global;
    marketplacesOrdersV3List: MarketplacesOrdersV3List;
    marketplacesOrdersV3Order: MarketplacesOrdersV3Order;
    omInvoiceAPIGeneration: OmInvoiceApiGeneration;
    omInvoiceAPISettings: OmInvoiceApiSettings;
    publicChannelsPublicChannels: PublicChannelsPublicChannels;
    publicListOfValuesLOV: PublicListOfValuesLov;
    publicSecuritySecurity: PublicSecuritySecurity;
    userListOfValuesLOV: UserListOfValuesLov;
    _defaultClient: AxiosInstance;
    _securityClient: AxiosInstance;
    _serverURL: string;
    private _language;
    private _sdkVersion;
    private _genVersion;
    constructor(props: SDKProps);
}
