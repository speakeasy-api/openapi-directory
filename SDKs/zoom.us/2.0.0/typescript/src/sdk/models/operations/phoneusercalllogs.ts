/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PhoneUserCallLogsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

/**
 * Enables you to sort call logs by start or end time. Choose the sort time value. Values include `startTime` or `endTime`.
 */
export enum PhoneUserCallLogsTimeTypeEnum {
  StartTime = "startTime",
  EndTime = "endTime",
}

export enum PhoneUserCallLogsTypeEnum {
  All = "all",
  Missed = "missed",
}

export class PhoneUserCallLogsRequest extends SpeakeasyBase {
  /**
   * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=from;dateTimeFormat=YYYY-MM-DD",
  })
  from: Date;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * Filter API responses to include call logs of only the phone number defined in this field.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=phone_number",
  })
  phoneNumber?: string;

  /**
   * Enables you to sort call logs by start or end time. Choose the sort time value. Values include `startTime` or `endTime`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=time_type",
  })
  timeType?: PhoneUserCallLogsTimeTypeEnum;

  /**
   * End date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=to;dateTimeFormat=YYYY-MM-DD",
  })
  to: Date;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: PhoneUserCallLogsTypeEnum;

  /**
   * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userId",
  })
  userId: string;
}

/**
 * Indicates who accepted the call.
 */
export class PhoneUserCallLogs200ApplicationXMLCallLogsAcceptedBy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  extensionNumber?: string;

  @SpeakeasyMetadata()
  location?: string;

  @SpeakeasyMetadata()
  name?: string;

  @SpeakeasyMetadata()
  numberType?: string;

  @SpeakeasyMetadata()
  phoneNumber?: string;
}

/**
 * Indicates where the call was forwarded from.
 */
export class PhoneUserCallLogs200ApplicationXMLCallLogsForwardedBy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  extensionNumber?: string;

  @SpeakeasyMetadata()
  location?: string;

  @SpeakeasyMetadata()
  name?: string;

  @SpeakeasyMetadata()
  numberType?: string;

  @SpeakeasyMetadata()
  phoneNumber?: string;
}

/**
 * Indicates who the call was forwarded to.
 */
export class PhoneUserCallLogs200ApplicationXMLCallLogsForwardedTo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  extensionNumber?: string;

  @SpeakeasyMetadata()
  location?: string;

  @SpeakeasyMetadata()
  name?: string;

  @SpeakeasyMetadata()
  numberType?: string;

  @SpeakeasyMetadata()
  phoneNumber?: string;
}

export class PhoneUserCallLogs200ApplicationXMLCallLogsOutgoingBy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  extensionNumber?: string;

  @SpeakeasyMetadata()
  location?: string;

  @SpeakeasyMetadata()
  name?: string;

  @SpeakeasyMetadata()
  numberType?: string;

  @SpeakeasyMetadata()
  phoneNumber?: string;
}

export class PhoneUserCallLogs200ApplicationXMLCallLogsSite extends SpeakeasyBase {
  /**
   * Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Name of the site where the phone number is assigned.
   */
  @SpeakeasyMetadata()
  name?: string;
}

export class PhoneUserCallLogs200ApplicationXMLCallLogs extends SpeakeasyBase {
  /**
   * Indicates who accepted the call.
   */
  @SpeakeasyMetadata()
  acceptedBy?: PhoneUserCallLogs200ApplicationXMLCallLogsAcceptedBy;

  /**
   * Unique identifier of the phone call.
   */
  @SpeakeasyMetadata()
  callId?: string;

  /**
   * Contact name of callee
   */
  @SpeakeasyMetadata()
  calleeName?: string;

  /**
   * Number of callee
   */
  @SpeakeasyMetadata()
  calleeNumber?: string;

  /**
   * Type of callee's number. 1 - internal | 2 - external
   */
  @SpeakeasyMetadata()
  calleeNumberType?: string;

  /**
   * Contact name of caller
   */
  @SpeakeasyMetadata()
  callerName?: string;

  /**
   * Number of caller
   */
  @SpeakeasyMetadata()
  callerNumber?: string;

  /**
   * Type of caller's number. 1 - internal | 2 - external
   */
  @SpeakeasyMetadata()
  callerNumberType?: string;

  /**
   * Billing charge for the call.
   */
  @SpeakeasyMetadata()
  charge?: string;

  /**
   * Client code.
   */
  @SpeakeasyMetadata()
  clientCode?: string;

  /**
   * Start time of the call
   */
  @SpeakeasyMetadata()
  dateTime?: string;

  /**
   * Direction of the call. "inbound" | "outbound"
   */
  @SpeakeasyMetadata()
  direction?: string;

  /**
   * Duration of the call in seconds.
   */
  @SpeakeasyMetadata()
  duration?: number;

  /**
   * Indicates where the call was forwarded from.
   */
  @SpeakeasyMetadata()
  forwardedBy?: PhoneUserCallLogs200ApplicationXMLCallLogsForwardedBy;

  /**
   * Indicates who the call was forwarded to.
   */
  @SpeakeasyMetadata()
  forwardedTo?: PhoneUserCallLogs200ApplicationXMLCallLogsForwardedTo;

  /**
   * Whether the call has a recording or not.
   */
  @SpeakeasyMetadata()
  hasRecording?: boolean;

  /**
   * Whether the call has voicemail or not.
   */
  @SpeakeasyMetadata()
  hasVoicemail?: boolean;

  /**
   * Call Log ID
   */
  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  outgoingBy?: PhoneUserCallLogs200ApplicationXMLCallLogsOutgoingBy;

  /**
   * Path of the call log.
   */
  @SpeakeasyMetadata()
  path?: string;

  /**
   * Billing rate for the call.
   */
  @SpeakeasyMetadata()
  rate?: string;

  /**
   * Recording type. <br>
   *
   * @remarks
   * * `1` - On-demand recording.<br>
   * * `2` - Automatic recording.
   */
  @SpeakeasyMetadata()
  recordingType?: string;

  /**
   * Result of the call. "call_connected" | "recorded" | "no_answer"
   */
  @SpeakeasyMetadata()
  result?: string;

  @SpeakeasyMetadata()
  site?: PhoneUserCallLogs200ApplicationXMLCallLogsSite;

  /**
   * User ID or user email.
   */
  @SpeakeasyMetadata()
  userId?: string;

  /**
   * Waiting time for the call, in seconds.
   */
  @SpeakeasyMetadata()
  waitingTime?: number;
}

/**
 * Phone User Call Logs
 */
export class PhoneUserCallLogs200ApplicationXML extends SpeakeasyBase {
  /**
   * Call Log
   */
  @SpeakeasyMetadata({ elemType: PhoneUserCallLogs200ApplicationXMLCallLogs })
  callLogs?: PhoneUserCallLogs200ApplicationXMLCallLogs[];

  /**
   * Date from which you would like to view the logs.
   */
  @SpeakeasyMetadata()
  from?: string;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * Total number of pages
   */
  @SpeakeasyMetadata()
  pageCount?: number;

  /**
   * The number of records returned within a single API call for each page.
   */
  @SpeakeasyMetadata()
  pageSize?: number;

  /**
   * Date up to which you would like to view the phone log.
   */
  @SpeakeasyMetadata()
  to?: string;

  /**
   * The total number of records returned.
   */
  @SpeakeasyMetadata()
  totalRecords?: number;
}

/**
 * Indicates who accepted the call.
 */
export class PhoneUserCallLogs200ApplicationJSONCallLogsAcceptedBy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "extension_number" })
  extensionNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "number_type" })
  numberType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "phone_number" })
  phoneNumber?: string;
}

/**
 * Indicates where the call was forwarded from.
 */
export class PhoneUserCallLogs200ApplicationJSONCallLogsForwardedBy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "extension_number" })
  extensionNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "number_type" })
  numberType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "phone_number" })
  phoneNumber?: string;
}

/**
 * Indicates who the call was forwarded to.
 */
export class PhoneUserCallLogs200ApplicationJSONCallLogsForwardedTo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "extension_number" })
  extensionNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "number_type" })
  numberType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "phone_number" })
  phoneNumber?: string;
}

export class PhoneUserCallLogs200ApplicationJSONCallLogsOutgoingBy extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "extension_number" })
  extensionNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "number_type" })
  numberType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "phone_number" })
  phoneNumber?: string;
}

export class PhoneUserCallLogs200ApplicationJSONCallLogsSite extends SpeakeasyBase {
  /**
   * Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of the site where the phone number is assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class PhoneUserCallLogs200ApplicationJSONCallLogs extends SpeakeasyBase {
  /**
   * Indicates who accepted the call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accepted_by" })
  @Type(() => PhoneUserCallLogs200ApplicationJSONCallLogsAcceptedBy)
  acceptedBy?: PhoneUserCallLogs200ApplicationJSONCallLogsAcceptedBy;

  /**
   * Unique identifier of the phone call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "call_id" })
  callId?: string;

  /**
   * Contact name of callee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callee_name" })
  calleeName?: string;

  /**
   * Number of callee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callee_number" })
  calleeNumber?: string;

  /**
   * Type of callee's number. 1 - internal | 2 - external
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callee_number_type" })
  calleeNumberType?: string;

  /**
   * Contact name of caller
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caller_name" })
  callerName?: string;

  /**
   * Number of caller
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caller_number" })
  callerNumber?: string;

  /**
   * Type of caller's number. 1 - internal | 2 - external
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caller_number_type" })
  callerNumberType?: string;

  /**
   * Billing charge for the call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "charge" })
  charge?: string;

  /**
   * Client code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_code" })
  clientCode?: string;

  /**
   * Start time of the call
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_time" })
  dateTime?: string;

  /**
   * Direction of the call. "inbound" | "outbound"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction?: string;

  /**
   * Duration of the call in seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration?: number;

  /**
   * Indicates where the call was forwarded from.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "forwarded_by" })
  @Type(() => PhoneUserCallLogs200ApplicationJSONCallLogsForwardedBy)
  forwardedBy?: PhoneUserCallLogs200ApplicationJSONCallLogsForwardedBy;

  /**
   * Indicates who the call was forwarded to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "forwarded_to" })
  @Type(() => PhoneUserCallLogs200ApplicationJSONCallLogsForwardedTo)
  forwardedTo?: PhoneUserCallLogs200ApplicationJSONCallLogsForwardedTo;

  /**
   * Whether the call has a recording or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "has_recording" })
  hasRecording?: boolean;

  /**
   * Whether the call has voicemail or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "has_voicemail" })
  hasVoicemail?: boolean;

  /**
   * Call Log ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "outgoing_by" })
  @Type(() => PhoneUserCallLogs200ApplicationJSONCallLogsOutgoingBy)
  outgoingBy?: PhoneUserCallLogs200ApplicationJSONCallLogsOutgoingBy;

  /**
   * Path of the call log.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;

  /**
   * Billing rate for the call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rate" })
  rate?: string;

  /**
   * Recording type. <br>
   *
   * @remarks
   * * `1` - On-demand recording.<br>
   * * `2` - Automatic recording.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recording_type" })
  recordingType?: string;

  /**
   * Result of the call. "call_connected" | "recorded" | "no_answer"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "result" })
  result?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "site" })
  @Type(() => PhoneUserCallLogs200ApplicationJSONCallLogsSite)
  site?: PhoneUserCallLogs200ApplicationJSONCallLogsSite;

  /**
   * User ID or user email.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId?: string;

  /**
   * Waiting time for the call, in seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "waiting_time" })
  waitingTime?: number;
}

/**
 * Phone User Call Logs
 */
export class PhoneUserCallLogs200ApplicationJSON extends SpeakeasyBase {
  /**
   * Call Log
   */
  @SpeakeasyMetadata({ elemType: PhoneUserCallLogs200ApplicationJSONCallLogs })
  @Expose({ name: "call_logs" })
  @Type(() => PhoneUserCallLogs200ApplicationJSONCallLogs)
  callLogs?: PhoneUserCallLogs200ApplicationJSONCallLogs[];

  /**
   * Date from which you would like to view the logs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  from?: string;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * Total number of pages
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_count" })
  pageCount?: number;

  /**
   * The number of records returned within a single API call for each page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  /**
   * Date up to which you would like to view the phone log.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  to?: string;

  /**
   * The total number of records returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;
}

export class PhoneUserCallLogsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status code:** `200`
   *
   * @remarks
   * User's call logs returned.
   */
  @SpeakeasyMetadata()
  phoneUserCallLogs200ApplicationJSONObject?: PhoneUserCallLogs200ApplicationJSON;
}
