<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETReplaceRouteRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETReplaceRouteActionEnum $action;
    
    /**
     * [IPv4 traffic only] The ID of a carrier gateway.
     * 
     * @var ?string $carrierGatewayId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=CarrierGatewayId')]
    public ?string $carrierGatewayId = null;
    
    /**
     * The Amazon Resource Name (ARN) of the core network.
     * 
     * @var ?string $coreNetworkArn
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=CoreNetworkArn')]
    public ?string $coreNetworkArn = null;
    
    /**
     * The IPv4 CIDR address block used for the destination match. The value that you provide must match the CIDR of an existing route in the table.
     * 
     * @var ?string $destinationCidrBlock
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DestinationCidrBlock')]
    public ?string $destinationCidrBlock = null;
    
    /**
     * The IPv6 CIDR address block used for the destination match. The value that you provide must match the CIDR of an existing route in the table.
     * 
     * @var ?string $destinationIpv6CidrBlock
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DestinationIpv6CidrBlock')]
    public ?string $destinationIpv6CidrBlock = null;
    
    /**
     * The ID of the prefix list for the route.
     * 
     * @var ?string $destinationPrefixListId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DestinationPrefixListId')]
    public ?string $destinationPrefixListId = null;
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
     * 
     * @var ?bool $dryRun
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DryRun')]
    public ?bool $dryRun = null;
    
    /**
     * [IPv6 traffic only] The ID of an egress-only internet gateway.
     * 
     * @var ?string $egressOnlyInternetGatewayId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=EgressOnlyInternetGatewayId')]
    public ?string $egressOnlyInternetGatewayId = null;
    
    /**
     * The ID of an internet gateway or virtual private gateway.
     * 
     * @var ?string $gatewayId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=GatewayId')]
    public ?string $gatewayId = null;
    
    /**
     * The ID of a NAT instance in your VPC.
     * 
     * @var ?string $instanceId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=InstanceId')]
    public ?string $instanceId = null;
    
    /**
     * The ID of the local gateway.
     * 
     * @var ?string $localGatewayId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=LocalGatewayId')]
    public ?string $localGatewayId = null;
    
    /**
     * Specifies whether to reset the local route to its default target (<code>local</code>).
     * 
     * @var ?bool $localTarget
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=LocalTarget')]
    public ?bool $localTarget = null;
    
    /**
     * [IPv4 traffic only] The ID of a NAT gateway.
     * 
     * @var ?string $natGatewayId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=NatGatewayId')]
    public ?string $natGatewayId = null;
    
    /**
     * The ID of a network interface.
     * 
     * @var ?string $networkInterfaceId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=NetworkInterfaceId')]
    public ?string $networkInterfaceId = null;
    
    /**
     * The ID of the route table.
     * 
     * @var string $routeTableId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=RouteTableId')]
    public string $routeTableId;
    
    /**
     * The ID of a transit gateway.
     * 
     * @var ?string $transitGatewayId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=TransitGatewayId')]
    public ?string $transitGatewayId = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETReplaceRouteVersionEnum $version;
    
    /**
     * The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.
     * 
     * @var ?string $vpcEndpointId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=VpcEndpointId')]
    public ?string $vpcEndpointId = null;
    
    /**
     * The ID of a VPC peering connection.
     * 
     * @var ?string $vpcPeeringConnectionId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=VpcPeeringConnectionId')]
    public ?string $vpcPeeringConnectionId = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETReplaceRouteActionEnum::REPLACE_ROUTE;
		$this->carrierGatewayId = null;
		$this->coreNetworkArn = null;
		$this->destinationCidrBlock = null;
		$this->destinationIpv6CidrBlock = null;
		$this->destinationPrefixListId = null;
		$this->dryRun = null;
		$this->egressOnlyInternetGatewayId = null;
		$this->gatewayId = null;
		$this->instanceId = null;
		$this->localGatewayId = null;
		$this->localTarget = null;
		$this->natGatewayId = null;
		$this->networkInterfaceId = null;
		$this->routeTableId = "";
		$this->transitGatewayId = null;
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETReplaceRouteVersionEnum::TWO_THOUSAND_AND_SIXTEEN1115;
		$this->vpcEndpointId = null;
		$this->vpcPeeringConnectionId = null;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
