"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class RequisitionV2RequisitionStatusEnum(str, Enum):
    r"""status of this requisition"""
    CR = 'CR'
    ID = 'ID'
    LN = 'LN'
    RJ = 'RJ'
    ER = 'ER'
    SU = 'SU'
    EX = 'EX'
    GC = 'GC'
    UA = 'UA'
    GA = 'GA'
    SA = 'SA'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RequisitionV2:
    r"""RequisitionV2Serializer."""
    
    institution_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('institution_id') }})
    r"""an Institution ID for this Requisition"""  
    redirect: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('redirect') }})
    r"""redirect URL to your application after end-user authorization with ASPSP"""  
    account_selection: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_selection'), 'exclude': lambda f: f is None }})
    r"""option to enable account selection view for the end user"""  
    accounts: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accounts'), 'exclude': lambda f: f is None }})
    r"""array of account IDs retrieved within a scope of this requisition"""  
    agreement: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('agreement'), 'exclude': lambda f: f is None }})
    r"""EUA associated with this requisition"""  
    created: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date & time at which the requisition was created."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('link'), 'exclude': lambda f: f is None }})
    r"""link to initiate authorization with Institution"""  
    redirect_immediate: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('redirect_immediate'), 'exclude': lambda f: f is None }})
    r"""enable redirect back to the client after account list received"""  
    reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reference'), 'exclude': lambda f: f is None }})
    r"""additional ID to identify the end user"""  
    ssn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ssn'), 'exclude': lambda f: f is None }})
    r"""optional SSN field to verify ownership of the account"""  
    status: Optional[RequisitionV2RequisitionStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""status of this requisition"""  
    user_language: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_language'), 'exclude': lambda f: f is None }})
    r"""A two-letter country code (ISO 639-1)"""  
    