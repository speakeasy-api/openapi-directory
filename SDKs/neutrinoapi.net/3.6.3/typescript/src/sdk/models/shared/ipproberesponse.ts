/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class IPProbeResponse extends SpeakeasyBase {
  /**
   * The age of the autonomous system (AS) in number of years since registration
   */
  @SpeakeasyMetadata()
  @Expose({ name: "as-age" })
  asAge: number;

  /**
   * The autonomous system (AS) CIDR range
   */
  @SpeakeasyMetadata()
  @Expose({ name: "as-cidr" })
  asCidr: string;

  /**
   * The autonomous system (AS) ISO 2-letter country code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "as-country-code" })
  asCountryCode: string;

  /**
   * The autonomous system (AS) ISO 3-letter country code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "as-country-code3" })
  asCountryCode3: string;

  /**
   * The autonomous system (AS) description / company name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "as-description" })
  asDescription: string;

  /**
   * Array of all the domains associated with the autonomous system (AS)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "as-domains" })
  asDomains: string[];

  /**
   * The autonomous system (AS) number
   */
  @SpeakeasyMetadata()
  @Expose({ name: "asn" })
  asn: string;

  /**
   * Full city name (if detectable)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city: string;

  /**
   * ISO 2-letter continent code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "continent-code" })
  continentCode: string;

  /**
   * Full country name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country: string;

  /**
   * ISO 2-letter country code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country-code" })
  countryCode: string;

  /**
   * ISO 3-letter country code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country-code3" })
  countryCode3: string;

  /**
   * ISO 4217 currency code associated with the country
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency-code" })
  currencyCode: string;

  /**
   * The IPs host domain
   */
  @SpeakeasyMetadata()
  @Expose({ name: "host-domain" })
  hostDomain: string;

  /**
   * The IPs full hostname (PTR)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hostname" })
  hostname: string;

  /**
   * The IP address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ip" })
  ip: string;

  /**
   * True if this is a bogon IP address such as a private network, local network or reserved address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is-bogon" })
  isBogon: boolean;

  /**
   * True if this IP belongs to a hosting company. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is-hosting" })
  isHosting: boolean;

  /**
   * True if this IP belongs to an internet service provider. Note that this can still be true even if the provider type is VPN/proxy, this occurs in the case that the IP is detected as both types
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is-isp" })
  isIsp: boolean;

  /**
   * True if this IP ia a proxy
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is-proxy" })
  isProxy: boolean;

  /**
   * True if this is a <a href="https://en.wikipedia.org/wiki/IPv6#IPv4-mapped_IPv6_addresses">IPv4 mapped IPv6 address</a>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is-v4-mapped" })
  isV4Mapped: boolean;

  /**
   * True if this is a IPv6 address. False if IPv4
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is-v6" })
  isV6: boolean;

  /**
   * True if this IP ia a VPN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is-vpn" })
  isVpn: boolean;

  /**
   * A description of the provider (usually extracted from the providers website)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provider-description" })
  providerDescription: string;

  /**
   * The domain name of the provider
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provider-domain" })
  providerDomain: string;

  /**
   * The detected provider type, possible values are: <br> <ul> <li>isp - IP belongs to an internet service provider. This includes both mobile, home and business internet providers</li> <li>hosting - IP belongs to a hosting company. This includes website hosting, cloud computing platforms and colocation facilities</li> <li>vpn - IP belongs to a VPN provider</li> <li>proxy - IP belongs to a proxy service. This includes HTTP/SOCKS proxies and browser based proxies</li> <li>university - IP belongs to a university/college/campus</li> <li>government - IP belongs to a government department. This includes military facilities</li> <li>commercial - IP belongs to a commercial entity such as a corporate headquarters or company office</li> <li>unknown - could not identify the provider type</li> </ul>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provider-type" })
  providerType: string;

  /**
   * The website URL for the provider
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provider-website" })
  providerWebsite: string;

  /**
   * Full region name (if detectable)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region: string;

  /**
   * ISO 3166-2 region code (if detectable)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "region-code" })
  regionCode: string;

  /**
   * True if this is a valid IPv4 or IPv6 address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "valid" })
  valid: boolean;

  /**
   * The domain of the VPN provider (may be empty if the VPN domain is not detectable)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vpn-domain" })
  vpnDomain: string;
}
