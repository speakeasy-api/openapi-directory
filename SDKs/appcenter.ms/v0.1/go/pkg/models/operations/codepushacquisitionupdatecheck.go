// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type CodePushAcquisitionUpdateCheckRequest struct {
	AppVersion                string  `queryParam:"style=form,explode=true,name=app_version"`
	ClientUniqueID            *string `queryParam:"style=form,explode=true,name=client_unique_id"`
	DeploymentKey             string  `queryParam:"style=form,explode=true,name=deployment_key"`
	IsCompanion               *bool   `queryParam:"style=form,explode=true,name=is_companion"`
	Label                     *string `queryParam:"style=form,explode=true,name=label"`
	PackageHash               *string `queryParam:"style=form,explode=true,name=package_hash"`
	PreviousDeploymentKey     *string `queryParam:"style=form,explode=true,name=previous_deployment_key"`
	PreviousLabelOrAppVersion *string `queryParam:"style=form,explode=true,name=previous_label_or_app_version"`
}

// CodePushAcquisitionUpdateCheckDefaultApplicationJSON - Error
type CodePushAcquisitionUpdateCheckDefaultApplicationJSON struct {
	Message string `json:"message"`
}

type CodePushAcquisitionUpdateCheck200ApplicationJSONUpdateInfo struct {
	Description            *string  `json:"description,omitempty"`
	DownloadURL            *string  `json:"download_url,omitempty"`
	IsAvailable            bool     `json:"is_available"`
	IsDisabled             *bool    `json:"is_disabled,omitempty"`
	IsMandatory            *bool    `json:"is_mandatory,omitempty"`
	Label                  *string  `json:"label,omitempty"`
	PackageHash            *string  `json:"package_hash,omitempty"`
	PackageSize            *float64 `json:"package_size,omitempty"`
	Rollout                *int64   `json:"rollout,omitempty"`
	ShouldRunBinaryVersion *bool    `json:"should_run_binary_version,omitempty"`
	TargetBinaryRange      *string  `json:"target_binary_range,omitempty"`
	UpdateAppVersion       *bool    `json:"update_app_version,omitempty"`
}

// CodePushAcquisitionUpdateCheck200ApplicationJSON - Success
type CodePushAcquisitionUpdateCheck200ApplicationJSON struct {
	UpdateInfo CodePushAcquisitionUpdateCheck200ApplicationJSONUpdateInfo `json:"update_info"`
}

type CodePushAcquisitionUpdateCheckResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	CodePushAcquisitionUpdateCheck200ApplicationJSONObject *CodePushAcquisitionUpdateCheck200ApplicationJSON
	// Error
	CodePushAcquisitionUpdateCheckDefaultApplicationJSONObject *CodePushAcquisitionUpdateCheckDefaultApplicationJSON
}
