/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 *  The set of tiering configurations for the pricing rule.
 */
export class UpdatePricingRuleRequestBodyTiering extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "FreeTier" })
  @Type(() => shared.UpdateFreeTierConfig)
  freeTier?: shared.UpdateFreeTierConfig;
}

/**
 *  The new pricing rule type.
 */
export enum UpdatePricingRuleRequestBodyTypeEnum {
  Markup = "MARKUP",
  Discount = "DISCOUNT",
  Tiering = "TIERING",
}

export class UpdatePricingRuleRequestBody extends SpeakeasyBase {
  /**
   *  The Amazon Resource Name (ARN) of the pricing rule to update.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn: string;

  /**
   *  The new description for the pricing rule.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  /**
   *  The new modifier to show pricing plan rates as a percentage.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ModifierPercentage" })
  modifierPercentage?: number;

  /**
   *  The new name of the pricing rule. The name must be unique to each pricing rule.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  /**
   *  The set of tiering configurations for the pricing rule.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Tiering" })
  @Type(() => UpdatePricingRuleRequestBodyTiering)
  tiering?: UpdatePricingRuleRequestBodyTiering;

  /**
   *  The new pricing rule type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: UpdatePricingRuleRequestBodyTypeEnum;
}

export class UpdatePricingRuleRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdatePricingRuleRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class UpdatePricingRuleResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * ConflictException
   */
  @SpeakeasyMetadata()
  conflictException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updatePricingRuleOutput?: shared.UpdatePricingRuleOutput;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
