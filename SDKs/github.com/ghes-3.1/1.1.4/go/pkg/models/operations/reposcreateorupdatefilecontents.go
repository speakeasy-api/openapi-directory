// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// ReposCreateOrUpdateFileContentsRequestBodyAuthor - The author of the file. Default: The `committer` or the authenticated user if you omit `committer`.
type ReposCreateOrUpdateFileContentsRequestBodyAuthor struct {
	Date *string `json:"date,omitempty"`
	// The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.
	Email string `json:"email"`
	// The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.
	Name string `json:"name"`
}

// ReposCreateOrUpdateFileContentsRequestBodyCommitter - The person that committed the file. Default: the authenticated user.
type ReposCreateOrUpdateFileContentsRequestBodyCommitter struct {
	Date *string `json:"date,omitempty"`
	// The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.
	Email string `json:"email"`
	// The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.
	Name string `json:"name"`
}

type ReposCreateOrUpdateFileContentsRequestBody struct {
	// The author of the file. Default: The `committer` or the authenticated user if you omit `committer`.
	Author *ReposCreateOrUpdateFileContentsRequestBodyAuthor `json:"author,omitempty"`
	// The branch name. Default: the repositoryâ€™s default branch (usually `master`)
	Branch *string `json:"branch,omitempty"`
	// The person that committed the file. Default: the authenticated user.
	Committer *ReposCreateOrUpdateFileContentsRequestBodyCommitter `json:"committer,omitempty"`
	// The new file content, using Base64 encoding.
	Content string `json:"content"`
	// The commit message.
	Message string `json:"message"`
	// **Required if you are updating a file**. The blob SHA of the file being replaced.
	Sha *string `json:"sha,omitempty"`
}

type ReposCreateOrUpdateFileContentsRequest struct {
	RequestBody ReposCreateOrUpdateFileContentsRequestBody `request:"mediaType=application/json"`
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// path parameter
	Path string `pathParam:"style=simple,explode=false,name=path"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

type ReposCreateOrUpdateFileContentsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Resource not found
	BasicError *shared.BasicError
	// Response
	FileCommit *shared.FileCommit
	// Validation failed
	ValidationError *shared.ValidationError
}
