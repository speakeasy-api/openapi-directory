// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GoogleCloudDatalabelingV1beta1FeedbackThreadMetadataStatusEnum string

const (
	GoogleCloudDatalabelingV1beta1FeedbackThreadMetadataStatusEnumFeedbackThreadStatusUnspecified GoogleCloudDatalabelingV1beta1FeedbackThreadMetadataStatusEnum = "FEEDBACK_THREAD_STATUS_UNSPECIFIED"
	GoogleCloudDatalabelingV1beta1FeedbackThreadMetadataStatusEnumNew                             GoogleCloudDatalabelingV1beta1FeedbackThreadMetadataStatusEnum = "NEW"
	GoogleCloudDatalabelingV1beta1FeedbackThreadMetadataStatusEnumReplied                         GoogleCloudDatalabelingV1beta1FeedbackThreadMetadataStatusEnum = "REPLIED"
)

func (e GoogleCloudDatalabelingV1beta1FeedbackThreadMetadataStatusEnum) ToPointer() *GoogleCloudDatalabelingV1beta1FeedbackThreadMetadataStatusEnum {
	return &e
}

func (e *GoogleCloudDatalabelingV1beta1FeedbackThreadMetadataStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FEEDBACK_THREAD_STATUS_UNSPECIFIED":
		fallthrough
	case "NEW":
		fallthrough
	case "REPLIED":
		*e = GoogleCloudDatalabelingV1beta1FeedbackThreadMetadataStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDatalabelingV1beta1FeedbackThreadMetadataStatusEnum: %v", v)
	}
}

type GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata struct {
	// When the thread is created
	CreateTime *string `json:"createTime,omitempty"`
	// When the thread is last updated.
	LastUpdateTime *string                                                         `json:"lastUpdateTime,omitempty"`
	Status         *GoogleCloudDatalabelingV1beta1FeedbackThreadMetadataStatusEnum `json:"status,omitempty"`
	// An image thumbnail of this thread.
	Thumbnail *string `json:"thumbnail,omitempty"`
}
