"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import comparisonoperator_enum as shared_comparisonoperator_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SimpleRuleEvaluation:
    r"""Information needed to compare two values with a comparison operator."""
    
    input_property_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inputPropertyValue'), 'exclude': lambda f: f is None }})  
    operator: Optional[shared_comparisonoperator_enum.ComparisonOperatorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operator'), 'exclude': lambda f: f is None }})  
    threshold_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thresholdValue'), 'exclude': lambda f: f is None }})  
    