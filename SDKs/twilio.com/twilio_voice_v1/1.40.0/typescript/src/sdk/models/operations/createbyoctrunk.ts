/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateByocTrunkServerList = ["https://voice.twilio.com"] as const;

export class CreateByocTrunkSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

/**
 * The HTTP method we should use to call `status_callback_url`. Can be: `GET` or `POST`.
 */
export enum CreateByocTrunkCreateByocTrunkRequestStatusCallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * The HTTP method we should use to call `voice_fallback_url`. Can be: `GET` or `POST`.
 */
export enum CreateByocTrunkCreateByocTrunkRequestVoiceFallbackMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

/**
 * The HTTP method we should use to call `voice_url`. Can be: `GET` or `POST`.
 */
export enum CreateByocTrunkCreateByocTrunkRequestVoiceMethodEnum {
  Head = "HEAD",
  Get = "GET",
  Post = "POST",
  Patch = "PATCH",
  Put = "PUT",
  Delete = "DELETE",
}

export class CreateByocTrunkCreateByocTrunkRequest extends SpeakeasyBase {
  /**
   * Whether Caller ID Name (CNAM) lookup is enabled for the trunk. If enabled, all inbound calls to the BYOC Trunk from the United States and Canada automatically perform a CNAM Lookup and display Caller ID data on your phone. See [CNAM Lookups](https://www.twilio.com/docs/sip-trunking#CNAM) for more information.
   */
  @SpeakeasyMetadata({ data: "form, name=CnamLookupEnabled" })
  cnamLookupEnabled?: boolean;

  /**
   * The SID of the Connection Policy that Twilio will use when routing traffic to your communications infrastructure.
   */
  @SpeakeasyMetadata({ data: "form, name=ConnectionPolicySid" })
  connectionPolicySid?: string;

  /**
   * A descriptive string that you create to describe the resource. It is not unique and can be up to 255 characters long.
   */
  @SpeakeasyMetadata({ data: "form, name=FriendlyName" })
  friendlyName?: string;

  /**
   * The SID of the SIP Domain that should be used in the `From` header of originating calls sent to your SIP infrastructure. If your SIP infrastructure allows users to "call back" an incoming call, configure this with a [SIP Domain](https://www.twilio.com/docs/voice/api/sending-sip) to ensure proper routing. If not configured, the from domain will default to "sip.twilio.com".
   */
  @SpeakeasyMetadata({ data: "form, name=FromDomainSid" })
  fromDomainSid?: string;

  /**
   * The HTTP method we should use to call `status_callback_url`. Can be: `GET` or `POST`.
   */
  @SpeakeasyMetadata({ data: "form, name=StatusCallbackMethod" })
  statusCallbackMethod?: CreateByocTrunkCreateByocTrunkRequestStatusCallbackMethodEnum;

  /**
   * The URL that we should call to pass status parameters (such as call ended) to your application.
   */
  @SpeakeasyMetadata({ data: "form, name=StatusCallbackUrl" })
  statusCallbackUrl?: string;

  /**
   * The HTTP method we should use to call `voice_fallback_url`. Can be: `GET` or `POST`.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceFallbackMethod" })
  voiceFallbackMethod?: CreateByocTrunkCreateByocTrunkRequestVoiceFallbackMethodEnum;

  /**
   * The URL that we should call when an error occurs while retrieving or executing the TwiML from `voice_url`.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceFallbackUrl" })
  voiceFallbackUrl?: string;

  /**
   * The HTTP method we should use to call `voice_url`. Can be: `GET` or `POST`.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceMethod" })
  voiceMethod?: CreateByocTrunkCreateByocTrunkRequestVoiceMethodEnum;

  /**
   * The URL we should call when the BYOC Trunk receives a call.
   */
  @SpeakeasyMetadata({ data: "form, name=VoiceUrl" })
  voiceUrl?: string;
}

export class CreateByocTrunkResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  voiceV1ByocTrunk?: shared.VoiceV1ByocTrunk;
}
