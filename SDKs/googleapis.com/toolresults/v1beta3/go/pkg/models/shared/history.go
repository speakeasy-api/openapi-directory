// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// HistoryTestPlatformEnum - The platform of the test history. - In response: always set. Returns the platform of the last execution if unknown.
type HistoryTestPlatformEnum string

const (
	HistoryTestPlatformEnumUnknownPlatform HistoryTestPlatformEnum = "unknownPlatform"
	HistoryTestPlatformEnumAndroid         HistoryTestPlatformEnum = "android"
	HistoryTestPlatformEnumIos             HistoryTestPlatformEnum = "ios"
)

func (e *HistoryTestPlatformEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "unknownPlatform":
		fallthrough
	case "android":
		fallthrough
	case "ios":
		*e = HistoryTestPlatformEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for HistoryTestPlatformEnum: %s", s)
	}
}

// History - A History represents a sorted list of Executions ordered by the start_timestamp_millis field (descending). It can be used to group all the Executions of a continuous build. Note that the ordering only operates on one-dimension. If a repository has multiple branches, it means that multiple histories will need to be used in order to order Executions per branch.
type History struct {
	// A short human-readable (plain text) name to display in the UI. Maximum of 100 characters. - In response: present if set during create. - In create request: optional
	DisplayName *string `json:"displayName,omitempty"`
	// A unique identifier within a project for this History. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response always set - In create request: never set
	HistoryID *string `json:"historyId,omitempty"`
	// A name to uniquely identify a history within a project. Maximum of 200 characters. - In response always set - In create request: always set
	Name *string `json:"name,omitempty"`
	// The platform of the test history. - In response: always set. Returns the platform of the last execution if unknown.
	TestPlatform *HistoryTestPlatformEnum `json:"testPlatform,omitempty"`
}
