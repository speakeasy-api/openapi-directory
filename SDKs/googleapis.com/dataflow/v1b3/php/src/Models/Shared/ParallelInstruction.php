<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ParallelInstruction - Describes a particular operation comprising a MapTask.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ParallelInstruction
{
    /**
     * An instruction that copies its inputs (zero or more) to its (single) output.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FlattenInstruction $flatten
     */
	#[\JMS\Serializer\Annotation\SerializedName('flatten')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\FlattenInstruction')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FlattenInstruction $flatten = null;
    
    /**
     * User-provided name of this operation.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * System-defined name for the operation in the original workflow graph.
     * 
     * @var ?string $originalName
     */
	#[\JMS\Serializer\Annotation\SerializedName('originalName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $originalName = null;
    
    /**
     * Describes the outputs of the instruction.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\InstructionOutput> $outputs
     */
	#[\JMS\Serializer\Annotation\SerializedName('outputs')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\InstructionOutput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $outputs = null;
    
    /**
     * An instruction that does a ParDo operation. Takes one main input and zero or more side inputs, and produces zero or more outputs. Runs user code.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ParDoInstruction $parDo
     */
	#[\JMS\Serializer\Annotation\SerializedName('parDo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ParDoInstruction')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ParDoInstruction $parDo = null;
    
    /**
     * An instruction that does a partial group-by-key. One input and one output.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PartialGroupByKeyInstruction $partialGroupByKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('partialGroupByKey')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PartialGroupByKeyInstruction')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PartialGroupByKeyInstruction $partialGroupByKey = null;
    
    /**
     * An instruction that reads records. Takes no inputs, produces one output.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ReadInstruction $read
     */
	#[\JMS\Serializer\Annotation\SerializedName('read')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ReadInstruction')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReadInstruction $read = null;
    
    /**
     * System-defined name of this operation. Unique across the workflow.
     * 
     * @var ?string $systemName
     */
	#[\JMS\Serializer\Annotation\SerializedName('systemName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $systemName = null;
    
    /**
     * An instruction that writes records. Takes one input, produces no outputs.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WriteInstruction $write
     */
	#[\JMS\Serializer\Annotation\SerializedName('write')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\WriteInstruction')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WriteInstruction $write = null;
    
	public function __construct()
	{
		$this->flatten = null;
		$this->name = null;
		$this->originalName = null;
		$this->outputs = null;
		$this->parDo = null;
		$this->partialGroupByKey = null;
		$this->read = null;
		$this->systemName = null;
		$this->write = null;
	}
}
