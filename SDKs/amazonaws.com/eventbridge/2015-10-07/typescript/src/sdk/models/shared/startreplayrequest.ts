/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ReplayDestination } from "./replaydestination";
import { Expose, Transform, Type } from "class-transformer";

export class StartReplayRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Destination" })
  @Type(() => ReplayDestination)
  destination: ReplayDestination;

  @SpeakeasyMetadata()
  @Expose({ name: "EventEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  eventEndTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "EventSourceArn" })
  eventSourceArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EventStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  eventStartTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ReplayName" })
  replayName: string;
}
