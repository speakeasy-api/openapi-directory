/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Rules that will get applied when creating or updating a payment channel for the given country
 */
export class PaymentChannelRule extends SpeakeasyBase {
  /**
   * User friendly name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "displayOrder" })
  displayOrder?: number;

  /**
   * <p>the rule element</p>
   *
   * @remarks
   * <p>will match a given element name for a payment channel configuration
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "element" })
  element: string;

  /**
   * maximum length of the element data
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxLength" })
  maxLength?: number;

  /**
   * mininum length of the element data
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minLength" })
  minLength?: number;

  /**
   * is this element required
   */
  @SpeakeasyMetadata()
  @Expose({ name: "required" })
  required: boolean;

  /**
   * a regex to validate the element data
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validation" })
  validation: string;
}
