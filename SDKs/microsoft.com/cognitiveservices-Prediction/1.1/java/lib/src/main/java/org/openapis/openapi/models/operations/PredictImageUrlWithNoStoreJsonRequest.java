/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PredictImageUrlWithNoStoreJsonRequest {
    /**
     * An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated
     */
    @SpeakeasyMetadata("request:mediaType=application/json")
    public org.openapis.openapi.models.shared.ImageUrl imageUrl;

    public PredictImageUrlWithNoStoreJsonRequest withImageUrl(org.openapis.openapi.models.shared.ImageUrl imageUrl) {
        this.imageUrl = imageUrl;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Prediction-Key")
    public String predictionKey;

    public PredictImageUrlWithNoStoreJsonRequest withPredictionKey(String predictionKey) {
        this.predictionKey = predictionKey;
        return this;
    }
    
    /**
     * Optional. Specifies the name of application using the endpoint
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=application")
    public String application;

    public PredictImageUrlWithNoStoreJsonRequest withApplication(String application) {
        this.application = application;
        return this;
    }
    
    /**
     * Optional. Specifies the id of a particular iteration to evaluate against.
     *             The default iteration for the project will be used when not specified
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=iterationId")
    public String iterationId;

    public PredictImageUrlWithNoStoreJsonRequest withIterationId(String iterationId) {
        this.iterationId = iterationId;
        return this;
    }
    
    /**
     * The project id
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=projectId")
    public String projectId;

    public PredictImageUrlWithNoStoreJsonRequest withProjectId(String projectId) {
        this.projectId = projectId;
        return this;
    }
    
    public PredictImageUrlWithNoStoreJsonRequest(@JsonProperty("ImageUrl") org.openapis.openapi.models.shared.ImageUrl imageUrl, @JsonProperty("Prediction-Key") String predictionKey, @JsonProperty("projectId") String projectId) {
        this.imageUrl = imageUrl;
        this.predictionKey = predictionKey;
        this.projectId = projectId;
  }
}
