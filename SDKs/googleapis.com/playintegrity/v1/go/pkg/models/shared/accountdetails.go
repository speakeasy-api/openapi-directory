// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AccountDetailsAppLicensingVerdictEnum - Required. Details about the licensing status of the user for the app in the scope.
type AccountDetailsAppLicensingVerdictEnum string

const (
	AccountDetailsAppLicensingVerdictEnumUnknown     AccountDetailsAppLicensingVerdictEnum = "UNKNOWN"
	AccountDetailsAppLicensingVerdictEnumLicensed    AccountDetailsAppLicensingVerdictEnum = "LICENSED"
	AccountDetailsAppLicensingVerdictEnumUnlicensed  AccountDetailsAppLicensingVerdictEnum = "UNLICENSED"
	AccountDetailsAppLicensingVerdictEnumUnevaluated AccountDetailsAppLicensingVerdictEnum = "UNEVALUATED"
)

func (e AccountDetailsAppLicensingVerdictEnum) ToPointer() *AccountDetailsAppLicensingVerdictEnum {
	return &e
}

func (e *AccountDetailsAppLicensingVerdictEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN":
		fallthrough
	case "LICENSED":
		fallthrough
	case "UNLICENSED":
		fallthrough
	case "UNEVALUATED":
		*e = AccountDetailsAppLicensingVerdictEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountDetailsAppLicensingVerdictEnum: %v", v)
	}
}

// AccountDetails - Contains the account information such as the licensing status for the user in the scope.
type AccountDetails struct {
	// Contains a signal helping apps differentiating between likely genuine users and likely non-genuine traffic (such as accounts being used for fraud, accounts used by automated traffic, or accounts used in device farms) based on the presence and volume of Play store activity.
	AccountActivity *AccountActivity `json:"accountActivity,omitempty"`
	// Required. Details about the licensing status of the user for the app in the scope.
	AppLicensingVerdict *AccountDetailsAppLicensingVerdictEnum `json:"appLicensingVerdict,omitempty"`
}
