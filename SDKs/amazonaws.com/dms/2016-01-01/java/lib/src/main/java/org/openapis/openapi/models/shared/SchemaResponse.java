/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SchemaResponse - Describes a schema in a Fleet Advisor collector inventory.
 */
public class SchemaResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CodeLineCount")
    public Long codeLineCount;

    public SchemaResponse withCodeLineCount(Long codeLineCount) {
        this.codeLineCount = codeLineCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CodeSize")
    public Long codeSize;

    public SchemaResponse withCodeSize(Long codeSize) {
        this.codeSize = codeSize;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Complexity")
    public String complexity;

    public SchemaResponse withComplexity(String complexity) {
        this.complexity = complexity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DatabaseInstance")
    public DatabaseShortInfoResponse databaseInstance;

    public SchemaResponse withDatabaseInstance(DatabaseShortInfoResponse databaseInstance) {
        this.databaseInstance = databaseInstance;
        return this;
    }
    
    /**
     * Describes a schema in a Fleet Advisor collector inventory.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OriginalSchema")
    public SchemaShortInfoResponse originalSchema;

    public SchemaResponse withOriginalSchema(SchemaShortInfoResponse originalSchema) {
        this.originalSchema = originalSchema;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SchemaId")
    public String schemaId;

    public SchemaResponse withSchemaId(String schemaId) {
        this.schemaId = schemaId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SchemaName")
    public String schemaName;

    public SchemaResponse withSchemaName(String schemaName) {
        this.schemaName = schemaName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Server")
    public ServerShortInfoResponse server;

    public SchemaResponse withServer(ServerShortInfoResponse server) {
        this.server = server;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Similarity")
    public Double similarity;

    public SchemaResponse withSimilarity(Double similarity) {
        this.similarity = similarity;
        return this;
    }
    
    public SchemaResponse(){}
}
