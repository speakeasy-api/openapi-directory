"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class GetBulkLookupRequest:
    
    ips: str = dataclasses.field(metadata={'query_param': { 'field_name': 'ips', 'style': 'form', 'explode': True }})
    r"""The IP Addresses you want to lookup. It's a CSV (Comma Separated Values)"""  
    key: str = dataclasses.field(metadata={'query_param': { 'field_name': 'key', 'style': 'form', 'explode': True }})
    r"""Your API Key. Each user has a unique API Key that can be used to access the API functions. If you don't have an account yet, please create new account first."""  
    format: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'format', 'style': 'form', 'explode': True }})
    r"""Sets the format of the API response. JSON is the default format."""  
    lang: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'lang', 'style': 'form', 'explode': True }})
    r"""Used to inform the API to retrieve the response in your native language."""  
    params: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'params', 'style': 'form', 'explode': True }})
    r"""The modules you want to use of the request. It's a CSV (Comma Separated Values)"""  
    

@dataclasses.dataclass
class GetBulkLookupResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    