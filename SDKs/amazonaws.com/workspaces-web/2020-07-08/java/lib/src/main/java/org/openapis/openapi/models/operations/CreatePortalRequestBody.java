/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreatePortalRequestBody {
    /**
     * The additional encryption context of the portal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalEncryptionContext")
    public java.util.Map<String, String> additionalEncryptionContext;

    public CreatePortalRequestBody withAdditionalEncryptionContext(java.util.Map<String, String> additionalEncryptionContext) {
        this.additionalEncryptionContext = additionalEncryptionContext;
        return this;
    }
    
    /**
     * &lt;p&gt;The type of authentication integration points used when signing into the web portal. Defaults to &lt;code&gt;Standard&lt;/code&gt;.&lt;/p&gt; &lt;p&gt; &lt;code&gt;Standard&lt;/code&gt; web portals are authenticated directly through your identity provider. You need to call &lt;code&gt;CreateIdentityProvider&lt;/code&gt; to integrate your identity provider with your web portal. User and group access to your web portal is controlled through your identity provider.&lt;/p&gt; &lt;p&gt; &lt;code&gt;IAM_Identity_Center&lt;/code&gt; web portals are authenticated through AWS IAM Identity Center (successor to AWS Single Sign-On). They provide additional features, such as IdP-initiated authentication. Identity sources (including external identity provider integration), plus user and group access to your web portal, can be configured in the IAM Identity Center.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authenticationType")
    public CreatePortalRequestBodyAuthenticationTypeEnum authenticationType;

    public CreatePortalRequestBody withAuthenticationType(CreatePortalRequestBodyAuthenticationTypeEnum authenticationType) {
        this.authenticationType = authenticationType;
        return this;
    }
    
    /**
     * &lt;p&gt;A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. &lt;/p&gt; &lt;p&gt;If you do not specify a client token, one is automatically generated by the AWS SDK.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientToken")
    public String clientToken;

    public CreatePortalRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * The customer managed key of the web portal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customerManagedKey")
    public String customerManagedKey;

    public CreatePortalRequestBody withCustomerManagedKey(String customerManagedKey) {
        this.customerManagedKey = customerManagedKey;
        return this;
    }
    
    /**
     * The name of the web portal. This is not visible to users who log into the web portal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public CreatePortalRequestBody withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The tags to add to the web portal. A tag is a key-value pair.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public org.openapis.openapi.models.shared.Tag[] tags;

    public CreatePortalRequestBody withTags(org.openapis.openapi.models.shared.Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    public CreatePortalRequestBody(){}
}
