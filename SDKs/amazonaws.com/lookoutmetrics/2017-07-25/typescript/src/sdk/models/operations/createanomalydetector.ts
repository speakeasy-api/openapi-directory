/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Contains information about a detector's configuration.
 */
export class CreateAnomalyDetectorRequestBodyAnomalyDetectorConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AnomalyDetectorFrequency" })
  anomalyDetectorFrequency?: shared.FrequencyEnum;
}

export class CreateAnomalyDetectorRequestBody extends SpeakeasyBase {
  /**
   * Contains information about a detector's configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AnomalyDetectorConfig" })
  @Type(() => CreateAnomalyDetectorRequestBodyAnomalyDetectorConfig)
  anomalyDetectorConfig: CreateAnomalyDetectorRequestBodyAnomalyDetectorConfig;

  /**
   * A description of the detector.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AnomalyDetectorDescription" })
  anomalyDetectorDescription?: string;

  /**
   * The name of the detector.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AnomalyDetectorName" })
  anomalyDetectorName: string;

  /**
   * The ARN of the KMS key to use to encrypt your data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "KmsKeyArn" })
  kmsKeyArn?: string;

  /**
   * A list of <a href="https://docs.aws.amazon.com/lookoutmetrics/latest/dev/detectors-tags.html">tags</a> to apply to the anomaly detector.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;
}

export class CreateAnomalyDetectorRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateAnomalyDetectorRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class CreateAnomalyDetectorResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * ConflictException
   */
  @SpeakeasyMetadata()
  conflictException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createAnomalyDetectorResponse?: shared.CreateAnomalyDetectorResponse;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * ServiceQuotaExceededException
   */
  @SpeakeasyMetadata()
  serviceQuotaExceededException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * TooManyRequestsException
   */
  @SpeakeasyMetadata()
  tooManyRequestsException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
