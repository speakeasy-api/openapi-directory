// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum - Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
type GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum string

const (
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumCryptoKeyVersionAlgorithmUnspecified GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumGoogleSymmetricEncryption            GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "GOOGLE_SYMMETRIC_ENCRYPTION"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumRsaSignPss2048Sha256                 GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "RSA_SIGN_PSS_2048_SHA256"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumRsaSignPss3072Sha256                 GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "RSA_SIGN_PSS_3072_SHA256"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumRsaSignPss4096Sha256                 GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "RSA_SIGN_PSS_4096_SHA256"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumRsaSignPss4096Sha512                 GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "RSA_SIGN_PSS_4096_SHA512"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumRsaSignPkcs12048Sha256               GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "RSA_SIGN_PKCS1_2048_SHA256"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumRsaSignPkcs13072Sha256               GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "RSA_SIGN_PKCS1_3072_SHA256"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumRsaSignPkcs14096Sha256               GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "RSA_SIGN_PKCS1_4096_SHA256"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumRsaSignPkcs14096Sha512               GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "RSA_SIGN_PKCS1_4096_SHA512"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumRsaSignRawPkcs12048                  GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "RSA_SIGN_RAW_PKCS1_2048"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumRsaSignRawPkcs13072                  GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "RSA_SIGN_RAW_PKCS1_3072"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumRsaSignRawPkcs14096                  GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "RSA_SIGN_RAW_PKCS1_4096"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumRsaDecryptOaep2048Sha256             GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "RSA_DECRYPT_OAEP_2048_SHA256"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumRsaDecryptOaep3072Sha256             GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "RSA_DECRYPT_OAEP_3072_SHA256"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumRsaDecryptOaep4096Sha256             GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "RSA_DECRYPT_OAEP_4096_SHA256"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumRsaDecryptOaep4096Sha512             GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "RSA_DECRYPT_OAEP_4096_SHA512"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumRsaDecryptOaep2048Sha1               GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "RSA_DECRYPT_OAEP_2048_SHA1"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumRsaDecryptOaep3072Sha1               GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "RSA_DECRYPT_OAEP_3072_SHA1"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumRsaDecryptOaep4096Sha1               GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "RSA_DECRYPT_OAEP_4096_SHA1"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumEcSignP256Sha256                     GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "EC_SIGN_P256_SHA256"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumEcSignP384Sha384                     GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "EC_SIGN_P384_SHA384"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumEcSignSecp256K1Sha256                GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "EC_SIGN_SECP256K1_SHA256"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumHmacSha256                           GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "HMAC_SHA256"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumHmacSha1                             GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "HMAC_SHA1"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumHmacSha384                           GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "HMAC_SHA384"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumHmacSha512                           GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "HMAC_SHA512"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumHmacSha224                           GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "HMAC_SHA224"
	GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnumExternalSymmetricEncryption          GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum = "EXTERNAL_SYMMETRIC_ENCRYPTION"
)

func (e *GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED":
		fallthrough
	case "GOOGLE_SYMMETRIC_ENCRYPTION":
		fallthrough
	case "RSA_SIGN_PSS_2048_SHA256":
		fallthrough
	case "RSA_SIGN_PSS_3072_SHA256":
		fallthrough
	case "RSA_SIGN_PSS_4096_SHA256":
		fallthrough
	case "RSA_SIGN_PSS_4096_SHA512":
		fallthrough
	case "RSA_SIGN_PKCS1_2048_SHA256":
		fallthrough
	case "RSA_SIGN_PKCS1_3072_SHA256":
		fallthrough
	case "RSA_SIGN_PKCS1_4096_SHA256":
		fallthrough
	case "RSA_SIGN_PKCS1_4096_SHA512":
		fallthrough
	case "RSA_SIGN_RAW_PKCS1_2048":
		fallthrough
	case "RSA_SIGN_RAW_PKCS1_3072":
		fallthrough
	case "RSA_SIGN_RAW_PKCS1_4096":
		fallthrough
	case "RSA_DECRYPT_OAEP_2048_SHA256":
		fallthrough
	case "RSA_DECRYPT_OAEP_3072_SHA256":
		fallthrough
	case "RSA_DECRYPT_OAEP_4096_SHA256":
		fallthrough
	case "RSA_DECRYPT_OAEP_4096_SHA512":
		fallthrough
	case "RSA_DECRYPT_OAEP_2048_SHA1":
		fallthrough
	case "RSA_DECRYPT_OAEP_3072_SHA1":
		fallthrough
	case "RSA_DECRYPT_OAEP_4096_SHA1":
		fallthrough
	case "EC_SIGN_P256_SHA256":
		fallthrough
	case "EC_SIGN_P384_SHA384":
		fallthrough
	case "EC_SIGN_SECP256K1_SHA256":
		fallthrough
	case "HMAC_SHA256":
		fallthrough
	case "HMAC_SHA1":
		fallthrough
	case "HMAC_SHA384":
		fallthrough
	case "HMAC_SHA512":
		fallthrough
	case "HMAC_SHA224":
		fallthrough
	case "EXTERNAL_SYMMETRIC_ENCRYPTION":
		*e = GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum: %s", s)
	}
}

// GoogleCloudKmsV1CryptoKeyVersionProtectionLevelEnum - Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.
type GoogleCloudKmsV1CryptoKeyVersionProtectionLevelEnum string

const (
	GoogleCloudKmsV1CryptoKeyVersionProtectionLevelEnumProtectionLevelUnspecified GoogleCloudKmsV1CryptoKeyVersionProtectionLevelEnum = "PROTECTION_LEVEL_UNSPECIFIED"
	GoogleCloudKmsV1CryptoKeyVersionProtectionLevelEnumSoftware                   GoogleCloudKmsV1CryptoKeyVersionProtectionLevelEnum = "SOFTWARE"
	GoogleCloudKmsV1CryptoKeyVersionProtectionLevelEnumHsm                        GoogleCloudKmsV1CryptoKeyVersionProtectionLevelEnum = "HSM"
	GoogleCloudKmsV1CryptoKeyVersionProtectionLevelEnumExternal                   GoogleCloudKmsV1CryptoKeyVersionProtectionLevelEnum = "EXTERNAL"
	GoogleCloudKmsV1CryptoKeyVersionProtectionLevelEnumExternalVpc                GoogleCloudKmsV1CryptoKeyVersionProtectionLevelEnum = "EXTERNAL_VPC"
)

func (e *GoogleCloudKmsV1CryptoKeyVersionProtectionLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PROTECTION_LEVEL_UNSPECIFIED":
		fallthrough
	case "SOFTWARE":
		fallthrough
	case "HSM":
		fallthrough
	case "EXTERNAL":
		fallthrough
	case "EXTERNAL_VPC":
		*e = GoogleCloudKmsV1CryptoKeyVersionProtectionLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudKmsV1CryptoKeyVersionProtectionLevelEnum: %s", s)
	}
}

// GoogleCloudKmsV1CryptoKeyVersionStateEnum - The current state of the CryptoKeyVersion.
type GoogleCloudKmsV1CryptoKeyVersionStateEnum string

const (
	GoogleCloudKmsV1CryptoKeyVersionStateEnumCryptoKeyVersionStateUnspecified GoogleCloudKmsV1CryptoKeyVersionStateEnum = "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED"
	GoogleCloudKmsV1CryptoKeyVersionStateEnumPendingGeneration                GoogleCloudKmsV1CryptoKeyVersionStateEnum = "PENDING_GENERATION"
	GoogleCloudKmsV1CryptoKeyVersionStateEnumEnabled                          GoogleCloudKmsV1CryptoKeyVersionStateEnum = "ENABLED"
	GoogleCloudKmsV1CryptoKeyVersionStateEnumDisabled                         GoogleCloudKmsV1CryptoKeyVersionStateEnum = "DISABLED"
	GoogleCloudKmsV1CryptoKeyVersionStateEnumDestroyed                        GoogleCloudKmsV1CryptoKeyVersionStateEnum = "DESTROYED"
	GoogleCloudKmsV1CryptoKeyVersionStateEnumDestroyScheduled                 GoogleCloudKmsV1CryptoKeyVersionStateEnum = "DESTROY_SCHEDULED"
	GoogleCloudKmsV1CryptoKeyVersionStateEnumPendingImport                    GoogleCloudKmsV1CryptoKeyVersionStateEnum = "PENDING_IMPORT"
	GoogleCloudKmsV1CryptoKeyVersionStateEnumImportFailed                     GoogleCloudKmsV1CryptoKeyVersionStateEnum = "IMPORT_FAILED"
	GoogleCloudKmsV1CryptoKeyVersionStateEnumGenerationFailed                 GoogleCloudKmsV1CryptoKeyVersionStateEnum = "GENERATION_FAILED"
	GoogleCloudKmsV1CryptoKeyVersionStateEnumPendingExternalDestruction       GoogleCloudKmsV1CryptoKeyVersionStateEnum = "PENDING_EXTERNAL_DESTRUCTION"
	GoogleCloudKmsV1CryptoKeyVersionStateEnumExternalDestructionFailed        GoogleCloudKmsV1CryptoKeyVersionStateEnum = "EXTERNAL_DESTRUCTION_FAILED"
)

func (e *GoogleCloudKmsV1CryptoKeyVersionStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED":
		fallthrough
	case "PENDING_GENERATION":
		fallthrough
	case "ENABLED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "DESTROYED":
		fallthrough
	case "DESTROY_SCHEDULED":
		fallthrough
	case "PENDING_IMPORT":
		fallthrough
	case "IMPORT_FAILED":
		fallthrough
	case "GENERATION_FAILED":
		fallthrough
	case "PENDING_EXTERNAL_DESTRUCTION":
		fallthrough
	case "EXTERNAL_DESTRUCTION_FAILED":
		*e = GoogleCloudKmsV1CryptoKeyVersionStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudKmsV1CryptoKeyVersionStateEnum: %s", s)
	}
}

// GoogleCloudKmsV1CryptoKeyVersion - A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.
type GoogleCloudKmsV1CryptoKeyVersion struct {
	// Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
	Algorithm *GoogleCloudKmsV1CryptoKeyVersionAlgorithmEnum `json:"algorithm,omitempty"`
	// Contains an HSM-generated attestation about a key operation. For more information, see [Verifying attestations] (https://cloud.google.com/kms/docs/attest-key).
	Attestation *GoogleCloudKmsV1KeyOperationAttestation `json:"attestation,omitempty"`
	// Output only. The time at which this CryptoKeyVersion was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.
	DestroyEventTime *string `json:"destroyEventTime,omitempty"`
	// Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.
	DestroyTime *string `json:"destroyTime,omitempty"`
	// Output only. The root cause of the most recent external destruction failure. Only present if state is EXTERNAL_DESTRUCTION_FAILED.
	ExternalDestructionFailureReason *string `json:"externalDestructionFailureReason,omitempty"`
	// ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level and EXTERNAL_VPC protection levels.
	ExternalProtectionLevelOptions *GoogleCloudKmsV1ExternalProtectionLevelOptions `json:"externalProtectionLevelOptions,omitempty"`
	// Output only. The time this CryptoKeyVersion's key material was generated.
	GenerateTime *string `json:"generateTime,omitempty"`
	// Output only. The root cause of the most recent generation failure. Only present if state is GENERATION_FAILED.
	GenerationFailureReason *string `json:"generationFailureReason,omitempty"`
	// Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.
	ImportFailureReason *string `json:"importFailureReason,omitempty"`
	// Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.
	ImportJob *string `json:"importJob,omitempty"`
	// Output only. The time at which this CryptoKeyVersion's key material was most recently imported.
	ImportTime *string `json:"importTime,omitempty"`
	// Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.
	Name *string `json:"name,omitempty"`
	// Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.
	ProtectionLevel *GoogleCloudKmsV1CryptoKeyVersionProtectionLevelEnum `json:"protectionLevel,omitempty"`
	// Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.
	ReimportEligible *bool `json:"reimportEligible,omitempty"`
	// The current state of the CryptoKeyVersion.
	State *GoogleCloudKmsV1CryptoKeyVersionStateEnum `json:"state,omitempty"`
}
