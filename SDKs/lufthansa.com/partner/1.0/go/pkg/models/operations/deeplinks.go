// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type DeepLinksSecurity struct {
	Auth string `security:"scheme,type=oauth2,name=Authorization"`
}

type DeepLinksRequest struct {
	// http header: application/json or application/xml (Acceptable values are: "application/json", "application/xml")
	Accept string `header:"style=simple,explode=false,name=Accept"`
	// Cabin class: 'economy', 'premium_economy', 'business', 'first' (Acceptable values are: "", "economy", "premium_economy", "business", "first")
	CabinClass *string `queryParam:"style=form,explode=true,name=cabin-class"`
	// Carrier for which the deep link will be created (e.g. 'LH')
	Catalogues string `queryParam:"style=form,explode=true,name=catalogues"`
	// 2-letter ISO 3166-1 country code
	Country string `queryParam:"style=form,explode=true,name=country"`
	// Journey destination. 3-letter IATA airport or city code (e.g. 'MAD')
	Destination *string `queryParam:"style=form,explode=true,name=destination"`
	// Journey destination airport or city name (e.g. 'madrid')
	DestinationName *string `queryParam:"style=form,explode=true,name=destination-name"`
	// Deep link encryption-key
	EncryptionKey *string `queryParam:"style=form,explode=true,name=encryption-key"`
	// Travel fare (e.g. '1341.45')
	Fare *string `queryParam:"style=form,explode=true,name=fare"`
	// Fare currency (e.g. 'EUR')
	FareCurrency *string `queryParam:"style=form,explode=true,name=fare-currency"`
	// 2-letter ISO 3166-1 language code
	Lang string `queryParam:"style=form,explode=true,name=lang"`
	// Travel net fare. Total fare less taxes and charges (e.g. '1140')
	NetFare *string `queryParam:"style=form,explode=true,name=net-fare"`
	// Journey origin. 3-letter IATA airport or city code (e.g. 'FRA')
	Origin *string `queryParam:"style=form,explode=true,name=origin"`
	// Journey origin airport or city name (e.g. 'frankfurt')
	OriginName *string `queryParam:"style=form,explode=true,name=origin-name"`
	// Outbound flight segments in the sequence of travel (e.g. 'LH096;LH480')
	OutboundSegments *string `queryParam:"style=form,explode=true,name=outbound-segments"`
	// Deep link partner id (e.g. '1247')
	Partnerid *string `queryParam:"style=form,explode=true,name=partnerid"`
	// Journey return-date (YYYY-MM-DD)
	ReturnDate *string `queryParam:"style=form,explode=true,name=return-date"`
	// Flight segments in the sequence of travel (e.g. 'LH7465;LH431')
	ReturnSegments *string `queryParam:"style=form,explode=true,name=return-segments"`
	// Deep link tracking ID
	Trackingid string `queryParam:"style=form,explode=true,name=trackingid"`
	// Journey travel-date (YYYY-MM-DD)
	TravelDate *string `queryParam:"style=form,explode=true,name=travel-date"`
	// Type and number of travelers (e.g. '(adult=2;child=2;infant=1)')
	Travelers *string `queryParam:"style=form,explode=true,name=travelers"`
}

type DeepLinksResponse struct {
	ContentType                       string
	DeepLinks200ApplicationJSONString *string
	StatusCode                        int
	RawResponse                       *http.Response
}
