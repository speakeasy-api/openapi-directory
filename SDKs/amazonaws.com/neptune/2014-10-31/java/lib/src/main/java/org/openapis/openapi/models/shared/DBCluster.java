/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import java.time.OffsetDateTime;

/**
 * DBCluster - &lt;p&gt;Contains the details of an Amazon Neptune DB cluster.&lt;/p&gt; &lt;p&gt;This data type is used as a response element in the &lt;a&gt;DescribeDBClusters&lt;/a&gt; action.&lt;/p&gt;
 */
public class DBCluster {
    
    public Long allocatedStorage;
    public DBCluster withAllocatedStorage(Long allocatedStorage) {
        this.allocatedStorage = allocatedStorage;
        return this;
    }
    
    
    public DBClusterRoles[] associatedRoles;
    public DBCluster withAssociatedRoles(DBClusterRoles[] associatedRoles) {
        this.associatedRoles = associatedRoles;
        return this;
    }
    
    
    public OffsetDateTime automaticRestartTime;
    public DBCluster withAutomaticRestartTime(OffsetDateTime automaticRestartTime) {
        this.automaticRestartTime = automaticRestartTime;
        return this;
    }
    
    
    public String[] availabilityZones;
    public DBCluster withAvailabilityZones(String[] availabilityZones) {
        this.availabilityZones = availabilityZones;
        return this;
    }
    
    
    public Long backupRetentionPeriod;
    public DBCluster withBackupRetentionPeriod(Long backupRetentionPeriod) {
        this.backupRetentionPeriod = backupRetentionPeriod;
        return this;
    }
    
    
    public String characterSetName;
    public DBCluster withCharacterSetName(String characterSetName) {
        this.characterSetName = characterSetName;
        return this;
    }
    
    
    public String cloneGroupId;
    public DBCluster withCloneGroupId(String cloneGroupId) {
        this.cloneGroupId = cloneGroupId;
        return this;
    }
    
    
    public OffsetDateTime clusterCreateTime;
    public DBCluster withClusterCreateTime(OffsetDateTime clusterCreateTime) {
        this.clusterCreateTime = clusterCreateTime;
        return this;
    }
    
    
    public Boolean copyTagsToSnapshot;
    public DBCluster withCopyTagsToSnapshot(Boolean copyTagsToSnapshot) {
        this.copyTagsToSnapshot = copyTagsToSnapshot;
        return this;
    }
    
    
    public Boolean crossAccountClone;
    public DBCluster withCrossAccountClone(Boolean crossAccountClone) {
        this.crossAccountClone = crossAccountClone;
        return this;
    }
    
    
    public String dbClusterArn;
    public DBCluster withDBClusterArn(String dbClusterArn) {
        this.dbClusterArn = dbClusterArn;
        return this;
    }
    
    
    public String dbClusterIdentifier;
    public DBCluster withDBClusterIdentifier(String dbClusterIdentifier) {
        this.dbClusterIdentifier = dbClusterIdentifier;
        return this;
    }
    
    
    public DBClusterMemberList[] dbClusterMembers;
    public DBCluster withDBClusterMembers(DBClusterMemberList[] dbClusterMembers) {
        this.dbClusterMembers = dbClusterMembers;
        return this;
    }
    
    
    public DBClusterOptionGroupMemberships[] dbClusterOptionGroupMemberships;
    public DBCluster withDBClusterOptionGroupMemberships(DBClusterOptionGroupMemberships[] dbClusterOptionGroupMemberships) {
        this.dbClusterOptionGroupMemberships = dbClusterOptionGroupMemberships;
        return this;
    }
    
    
    public String dbClusterParameterGroup;
    public DBCluster withDBClusterParameterGroup(String dbClusterParameterGroup) {
        this.dbClusterParameterGroup = dbClusterParameterGroup;
        return this;
    }
    
    
    public String dbSubnetGroup;
    public DBCluster withDBSubnetGroup(String dbSubnetGroup) {
        this.dbSubnetGroup = dbSubnetGroup;
        return this;
    }
    
    
    public String databaseName;
    public DBCluster withDatabaseName(String databaseName) {
        this.databaseName = databaseName;
        return this;
    }
    
    
    public String dbClusterResourceId;
    public DBCluster withDbClusterResourceId(String dbClusterResourceId) {
        this.dbClusterResourceId = dbClusterResourceId;
        return this;
    }
    
    
    public Boolean deletionProtection;
    public DBCluster withDeletionProtection(Boolean deletionProtection) {
        this.deletionProtection = deletionProtection;
        return this;
    }
    
    
    public OffsetDateTime earliestRestorableTime;
    public DBCluster withEarliestRestorableTime(OffsetDateTime earliestRestorableTime) {
        this.earliestRestorableTime = earliestRestorableTime;
        return this;
    }
    
    
    public String[] enabledCloudwatchLogsExports;
    public DBCluster withEnabledCloudwatchLogsExports(String[] enabledCloudwatchLogsExports) {
        this.enabledCloudwatchLogsExports = enabledCloudwatchLogsExports;
        return this;
    }
    
    
    public String endpoint;
    public DBCluster withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }
    
    
    public String engine;
    public DBCluster withEngine(String engine) {
        this.engine = engine;
        return this;
    }
    
    
    public String engineVersion;
    public DBCluster withEngineVersion(String engineVersion) {
        this.engineVersion = engineVersion;
        return this;
    }
    
    
    public String globalClusterIdentifier;
    public DBCluster withGlobalClusterIdentifier(String globalClusterIdentifier) {
        this.globalClusterIdentifier = globalClusterIdentifier;
        return this;
    }
    
    
    public String hostedZoneId;
    public DBCluster withHostedZoneId(String hostedZoneId) {
        this.hostedZoneId = hostedZoneId;
        return this;
    }
    
    
    public Boolean iamDatabaseAuthenticationEnabled;
    public DBCluster withIAMDatabaseAuthenticationEnabled(Boolean iamDatabaseAuthenticationEnabled) {
        this.iamDatabaseAuthenticationEnabled = iamDatabaseAuthenticationEnabled;
        return this;
    }
    
    
    public String kmsKeyId;
    public DBCluster withKmsKeyId(String kmsKeyId) {
        this.kmsKeyId = kmsKeyId;
        return this;
    }
    
    
    public OffsetDateTime latestRestorableTime;
    public DBCluster withLatestRestorableTime(OffsetDateTime latestRestorableTime) {
        this.latestRestorableTime = latestRestorableTime;
        return this;
    }
    
    
    public String masterUsername;
    public DBCluster withMasterUsername(String masterUsername) {
        this.masterUsername = masterUsername;
        return this;
    }
    
    
    public Boolean multiAZ;
    public DBCluster withMultiAZ(Boolean multiAZ) {
        this.multiAZ = multiAZ;
        return this;
    }
    
    
    public ClusterPendingModifiedValues pendingModifiedValues;
    public DBCluster withPendingModifiedValues(ClusterPendingModifiedValues pendingModifiedValues) {
        this.pendingModifiedValues = pendingModifiedValues;
        return this;
    }
    
    
    public String percentProgress;
    public DBCluster withPercentProgress(String percentProgress) {
        this.percentProgress = percentProgress;
        return this;
    }
    
    
    public Long port;
    public DBCluster withPort(Long port) {
        this.port = port;
        return this;
    }
    
    
    public String preferredBackupWindow;
    public DBCluster withPreferredBackupWindow(String preferredBackupWindow) {
        this.preferredBackupWindow = preferredBackupWindow;
        return this;
    }
    
    
    public String preferredMaintenanceWindow;
    public DBCluster withPreferredMaintenanceWindow(String preferredMaintenanceWindow) {
        this.preferredMaintenanceWindow = preferredMaintenanceWindow;
        return this;
    }
    
    
    public String[] readReplicaIdentifiers;
    public DBCluster withReadReplicaIdentifiers(String[] readReplicaIdentifiers) {
        this.readReplicaIdentifiers = readReplicaIdentifiers;
        return this;
    }
    
    
    public String readerEndpoint;
    public DBCluster withReaderEndpoint(String readerEndpoint) {
        this.readerEndpoint = readerEndpoint;
        return this;
    }
    
    
    public String replicationSourceIdentifier;
    public DBCluster withReplicationSourceIdentifier(String replicationSourceIdentifier) {
        this.replicationSourceIdentifier = replicationSourceIdentifier;
        return this;
    }
    
    /**
     * &lt;p&gt;Shows the scaling configuration for a Neptune Serverless DB cluster.&lt;/p&gt; &lt;p&gt;For more information, see &lt;a href="https://docs.aws.amazon.com/neptune/latest/userguide/neptune-serverless-using.html"&gt;Using Amazon Neptune Serverless&lt;/a&gt; in the &lt;i&gt;Amazon Neptune User Guide&lt;/i&gt;.&lt;/p&gt;
     */
    
    public ServerlessV2ScalingConfigurationInfo serverlessV2ScalingConfiguration;
    public DBCluster withServerlessV2ScalingConfiguration(ServerlessV2ScalingConfigurationInfo serverlessV2ScalingConfiguration) {
        this.serverlessV2ScalingConfiguration = serverlessV2ScalingConfiguration;
        return this;
    }
    
    
    public String status;
    public DBCluster withStatus(String status) {
        this.status = status;
        return this;
    }
    
    
    public Boolean storageEncrypted;
    public DBCluster withStorageEncrypted(Boolean storageEncrypted) {
        this.storageEncrypted = storageEncrypted;
        return this;
    }
    
    
    public VpcSecurityGroupMembershipList[] vpcSecurityGroups;
    public DBCluster withVpcSecurityGroups(VpcSecurityGroupMembershipList[] vpcSecurityGroups) {
        this.vpcSecurityGroups = vpcSecurityGroups;
        return this;
    }
    
}
