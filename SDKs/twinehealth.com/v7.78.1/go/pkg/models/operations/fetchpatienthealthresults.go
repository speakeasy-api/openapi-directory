// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type FetchPatientHealthResultsQueryParams struct {
	// A comma-separated list of action identifiers
	FilterActions *string `queryParam:"style=form,explode=true,name=filter[actions]"`
	// The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for results created in November 2017 (America/New_York): `filter[created_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
	//
	FilterCreatedAt *string `queryParam:"style=form,explode=true,name=filter[created_at]"`
	// Filter results that occurred before the passed ISO date and time string
	FilterEndAt *string `queryParam:"style=form,explode=true,name=filter[end_at]"`
	// Filter the patient health results for a specified patient
	FilterPatient string `queryParam:"style=form,explode=true,name=filter[patient]"`
	// Filter results that occurred after the passed ISO date and time string
	FilterStartAt *string `queryParam:"style=form,explode=true,name=filter[start_at]"`
	// A comma-separated list of thread identifiers
	FilterThreads *string `queryParam:"style=form,explode=true,name=filter[threads]"`
	// The start (inclusive) and end (exclusive) dates are ISO date and time strings separated by `..`. Example for results updated in November 2017 (America/New_York): `filter[updated_at]=2017-11-01T00:00:00-04:00..2017-12-01T00:00:00-05:00`
	//
	FilterUpdatedAt *string `queryParam:"style=form,explode=true,name=filter[updated_at]"`
	// Page cursor
	PageAfter *string `queryParam:"style=form,explode=true,name=page[after]"`
	// Page limit
	PageLimit *int64 `queryParam:"style=form,explode=true,name=page[limit]"`
	// Page number
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page[number]"`
	// Page size
	PageSize *int64 `queryParam:"style=form,explode=true,name=page[size]"`
}

type FetchPatientHealthResultsRequest struct {
	QueryParams FetchPatientHealthResultsQueryParams
}

type FetchPatientHealthResultsResponse struct {
	ContentType string
	// Unauthorized
	FetchErrorResponse *shared.FetchErrorResponse
	// OK
	FetchPatientHealthResultResponse *shared.FetchPatientHealthResultResponse
	StatusCode                       int
	RawResponse                      *http.Response
}
