/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AnalysisMethodEnum } from "./analysismethodenum";
import { AnalysisRuleTypeEnum } from "./analysisruletypeenum";
import { SchemaTypeEnum } from "./schematypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * The schema summary for the objects listed by the request.
 */
export class SchemaSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "analysisMethod" })
  analysisMethod?: AnalysisMethodEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "analysisRuleTypes" })
  analysisRuleTypes: AnalysisRuleTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "collaborationArn" })
  collaborationArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "collaborationId" })
  collaborationId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "creatorAccountId" })
  creatorAccountId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: SchemaTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updateTime: Date;
}
