/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DeleteFileEntry } from "./deletefileentry";
import { PutFileEntry } from "./putfileentry";
import { SetFileModeEntry } from "./setfilemodeentry";
import { Expose, Type } from "class-transformer";

export class CreateCommitInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "authorName" })
  authorName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "branchName" })
  branchName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "commitMessage" })
  commitMessage?: string;

  @SpeakeasyMetadata({ elemType: DeleteFileEntry })
  @Expose({ name: "deleteFiles" })
  @Type(() => DeleteFileEntry)
  deleteFiles?: DeleteFileEntry[];

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "keepEmptyFolders" })
  keepEmptyFolders?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "parentCommitId" })
  parentCommitId?: string;

  @SpeakeasyMetadata({ elemType: PutFileEntry })
  @Expose({ name: "putFiles" })
  @Type(() => PutFileEntry)
  putFiles?: PutFileEntry[];

  @SpeakeasyMetadata()
  @Expose({ name: "repositoryName" })
  repositoryName: string;

  @SpeakeasyMetadata({ elemType: SetFileModeEntry })
  @Expose({ name: "setFileModes" })
  @Type(() => SetFileModeEntry)
  setFileModes?: SetFileModeEntry[];
}
