// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// PostAssetsCorrelationMatrixDenoisedRequestBodyDenoisingMethodEnum - The method used to denoise the asset correlation matrix
type PostAssetsCorrelationMatrixDenoisedRequestBodyDenoisingMethodEnum string

const (
	PostAssetsCorrelationMatrixDenoisedRequestBodyDenoisingMethodEnumEigenvaluesClipping PostAssetsCorrelationMatrixDenoisedRequestBodyDenoisingMethodEnum = "eigenvaluesClipping"
)

func (e PostAssetsCorrelationMatrixDenoisedRequestBodyDenoisingMethodEnum) ToPointer() *PostAssetsCorrelationMatrixDenoisedRequestBodyDenoisingMethodEnum {
	return &e
}

func (e *PostAssetsCorrelationMatrixDenoisedRequestBodyDenoisingMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "eigenvaluesClipping":
		*e = PostAssetsCorrelationMatrixDenoisedRequestBodyDenoisingMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostAssetsCorrelationMatrixDenoisedRequestBodyDenoisingMethodEnum: %v", v)
	}
}

type PostAssetsCorrelationMatrixDenoisedRequestBody struct {
	Assets int64 `json:"assets"`
	// assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j
	AssetsCorrelationMatrix [][]float64 `json:"assetsCorrelationMatrix"`
	// The aspect ratio of the asset correlation matrix, defined as the number of assets divided by the number of asset returns per asset used to compute the asset correlation matrix
	AssetsCorrelationMatrixAspectRatio float64 `json:"assetsCorrelationMatrixAspectRatio"`
	// The method used to denoise the asset correlation matrix
	DenoisingMethod *PostAssetsCorrelationMatrixDenoisedRequestBodyDenoisingMethodEnum `json:"denoisingMethod,omitempty"`
}

// PostAssetsCorrelationMatrixDenoised200ApplicationJSON - OK
type PostAssetsCorrelationMatrixDenoised200ApplicationJSON struct {
	// assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j; assetsCorrelationMatrix is possibly null in case the denoising method did not manage to denoise the provided asset correlation matrix
	AssetsCorrelationMatrix [][]float64 `json:"assetsCorrelationMatrix"`
}

type PostAssetsCorrelationMatrixDenoisedResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	PostAssetsCorrelationMatrixDenoised200ApplicationJSONObject *PostAssetsCorrelationMatrixDenoised200ApplicationJSON
}
