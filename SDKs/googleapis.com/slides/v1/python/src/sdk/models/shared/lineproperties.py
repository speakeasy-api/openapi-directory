"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dimension as shared_dimension
from ..shared import lineconnection as shared_lineconnection
from ..shared import linefill as shared_linefill
from ..shared import link as shared_link
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LinePropertiesDashStyleEnum(str, Enum):
    r"""The dash style of the line."""
    DASH_STYLE_UNSPECIFIED = 'DASH_STYLE_UNSPECIFIED'
    SOLID = 'SOLID'
    DOT = 'DOT'
    DASH = 'DASH'
    DASH_DOT = 'DASH_DOT'
    LONG_DASH = 'LONG_DASH'
    LONG_DASH_DOT = 'LONG_DASH_DOT'

class LinePropertiesEndArrowEnum(str, Enum):
    r"""The style of the arrow at the end of the line."""
    ARROW_STYLE_UNSPECIFIED = 'ARROW_STYLE_UNSPECIFIED'
    NONE = 'NONE'
    STEALTH_ARROW = 'STEALTH_ARROW'
    FILL_ARROW = 'FILL_ARROW'
    FILL_CIRCLE = 'FILL_CIRCLE'
    FILL_SQUARE = 'FILL_SQUARE'
    FILL_DIAMOND = 'FILL_DIAMOND'
    OPEN_ARROW = 'OPEN_ARROW'
    OPEN_CIRCLE = 'OPEN_CIRCLE'
    OPEN_SQUARE = 'OPEN_SQUARE'
    OPEN_DIAMOND = 'OPEN_DIAMOND'

class LinePropertiesStartArrowEnum(str, Enum):
    r"""The style of the arrow at the beginning of the line."""
    ARROW_STYLE_UNSPECIFIED = 'ARROW_STYLE_UNSPECIFIED'
    NONE = 'NONE'
    STEALTH_ARROW = 'STEALTH_ARROW'
    FILL_ARROW = 'FILL_ARROW'
    FILL_CIRCLE = 'FILL_CIRCLE'
    FILL_SQUARE = 'FILL_SQUARE'
    FILL_DIAMOND = 'FILL_DIAMOND'
    OPEN_ARROW = 'OPEN_ARROW'
    OPEN_CIRCLE = 'OPEN_CIRCLE'
    OPEN_SQUARE = 'OPEN_SQUARE'
    OPEN_DIAMOND = 'OPEN_DIAMOND'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LineProperties:
    r"""The properties of the Line. When unset, these fields default to values that match the appearance of new lines created in the Slides editor."""
    
    dash_style: Optional[LinePropertiesDashStyleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dashStyle'), 'exclude': lambda f: f is None }})
    r"""The dash style of the line."""  
    end_arrow: Optional[LinePropertiesEndArrowEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endArrow'), 'exclude': lambda f: f is None }})
    r"""The style of the arrow at the end of the line."""  
    end_connection: Optional[shared_lineconnection.LineConnection] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endConnection'), 'exclude': lambda f: f is None }})
    r"""The properties for one end of a Line connection."""  
    line_fill: Optional[shared_linefill.LineFill] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lineFill'), 'exclude': lambda f: f is None }})
    r"""The fill of the line."""  
    link: Optional[shared_link.Link] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('link'), 'exclude': lambda f: f is None }})
    r"""A hypertext link."""  
    start_arrow: Optional[LinePropertiesStartArrowEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startArrow'), 'exclude': lambda f: f is None }})
    r"""The style of the arrow at the beginning of the line."""  
    start_connection: Optional[shared_lineconnection.LineConnection] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startConnection'), 'exclude': lambda f: f is None }})
    r"""The properties for one end of a Line connection."""  
    weight: Optional[shared_dimension.Dimension] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weight'), 'exclude': lambda f: f is None }})
    r"""A magnitude in a single direction in the specified units."""  
    