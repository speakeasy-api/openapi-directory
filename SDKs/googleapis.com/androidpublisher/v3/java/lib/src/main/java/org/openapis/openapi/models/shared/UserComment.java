/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UserComment - User entry from conversation between user and developer.
 */
public class UserComment {
    /**
     * Integer Android SDK version of the user's device at the time the review was written, e.g. 23 is Marshmallow. May be absent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("androidOsVersion")
    public Integer androidOsVersion;
    public UserComment withAndroidOsVersion(Integer androidOsVersion) {
        this.androidOsVersion = androidOsVersion;
        return this;
    }
    
    /**
     * Integer version code of the app as installed at the time the review was written. May be absent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appVersionCode")
    public Integer appVersionCode;
    public UserComment withAppVersionCode(Integer appVersionCode) {
        this.appVersionCode = appVersionCode;
        return this;
    }
    
    /**
     * String version name of the app as installed at the time the review was written. May be absent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appVersionName")
    public String appVersionName;
    public UserComment withAppVersionName(String appVersionName) {
        this.appVersionName = appVersionName;
        return this;
    }
    
    /**
     * Codename for the reviewer's device, e.g. klte, flounder. May be absent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("device")
    public String device;
    public UserComment withDevice(String device) {
        this.device = device;
        return this;
    }
    
    /**
     * Characteristics of the user's device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceMetadata")
    public DeviceMetadata deviceMetadata;
    public UserComment withDeviceMetadata(DeviceMetadata deviceMetadata) {
        this.deviceMetadata = deviceMetadata;
        return this;
    }
    
    /**
     * A Timestamp represents a point in time independent of any time zone or local calendar, encoded as a count of seconds and fractions of seconds at nanosecond resolution. The count is relative to an epoch at UTC midnight on January 1, 1970.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastModified")
    public Timestamp lastModified;
    public UserComment withLastModified(Timestamp lastModified) {
        this.lastModified = lastModified;
        return this;
    }
    
    /**
     * Untranslated text of the review, where the review was translated. If the review was not translated this is left blank.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("originalText")
    public String originalText;
    public UserComment withOriginalText(String originalText) {
        this.originalText = originalText;
        return this;
    }
    
    /**
     * Language code for the reviewer. This is taken from the device settings so is not guaranteed to match the language the review is written in. May be absent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reviewerLanguage")
    public String reviewerLanguage;
    public UserComment withReviewerLanguage(String reviewerLanguage) {
        this.reviewerLanguage = reviewerLanguage;
        return this;
    }
    
    /**
     * The star rating associated with the review, from 1 to 5.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("starRating")
    public Integer starRating;
    public UserComment withStarRating(Integer starRating) {
        this.starRating = starRating;
        return this;
    }
    
    /**
     * The content of the comment, i.e. review body. In some cases users have been able to write a review with separate title and body; in those cases the title and body are concatenated and separated by a tab character.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("text")
    public String text;
    public UserComment withText(String text) {
        this.text = text;
        return this;
    }
    
    /**
     * Number of users who have given this review a thumbs down.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumbsDownCount")
    public Integer thumbsDownCount;
    public UserComment withThumbsDownCount(Integer thumbsDownCount) {
        this.thumbsDownCount = thumbsDownCount;
        return this;
    }
    
    /**
     * Number of users who have given this review a thumbs up.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumbsUpCount")
    public Integer thumbsUpCount;
    public UserComment withThumbsUpCount(Integer thumbsUpCount) {
        this.thumbsUpCount = thumbsUpCount;
        return this;
    }
    
}
