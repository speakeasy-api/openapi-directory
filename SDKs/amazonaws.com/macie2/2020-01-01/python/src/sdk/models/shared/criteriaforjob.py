"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import simplecriterionforjob as shared_simplecriterionforjob
from ..shared import tagcriterionforjob as shared_tagcriterionforjob
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CriteriaForJob:
    r"""Specifies a property- or tag-based condition that defines criteria for including or excluding S3 buckets from a classification job."""
    
    simple_criterion: Optional[shared_simplecriterionforjob.SimpleCriterionForJob] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('simpleCriterion'), 'exclude': lambda f: f is None }})  
    tag_criterion: Optional[shared_tagcriterionforjob.TagCriterionForJob] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tagCriterion'), 'exclude': lambda f: f is None }})  
    