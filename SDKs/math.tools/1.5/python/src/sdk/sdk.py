"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .base_conversion import BaseConversion
from .number_checks import NumberChecks
from .number_facts import NumberFacts
from .number_generation import NumberGeneration
from .number_of_the_day import NumberOfTheDay
from .number_systems_conversion import NumberSystemsConversion
from .pi import Pi
from .prime import Prime
from .spell import Spell

SERVERS = [
    "https://api.math.tools",
    "http://api.math.tools",
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""All about Numbers. REST access with json/xml/jsonp result support. Below is the documentation for the Numbers API. You can try them out right here. Find more information and subscribe at [math.tools](https://math.tools/api/numbers/)"""
    base_conversion: BaseConversion
    r"""Convert from one base to another. This API is free (rate limited)."""
    number_checks: NumberChecks
    r"""Check Property of a given number."""
    number_facts: NumberFacts
    r"""Get random interesting fact about a given number."""
    number_generation: NumberGeneration
    r"""Generate Random and interesting numbers."""
    number_systems_conversion: NumberSystemsConversion
    r"""Convert from one number system to another."""
    number_of_the_day: NumberOfTheDay
    r"""Number of the day. This API is free (rate limited)."""
    pi: Pi
    r"""Digits of PI and more.This API is free (rate limited)."""
    prime: Prime
    r"""Things to do with Prime numbers"""
    spell: Spell
    r"""Spell out a number ordinal, cardinal or currency. This API is free (rate limited)."""

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = self._client
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.base_conversion = BaseConversion(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.number_checks = NumberChecks(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.number_facts = NumberFacts(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.number_generation = NumberGeneration(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.number_systems_conversion = NumberSystemsConversion(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.number_of_the_day = NumberOfTheDay(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.pi = Pi(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.prime = Prime(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.spell = Spell(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    