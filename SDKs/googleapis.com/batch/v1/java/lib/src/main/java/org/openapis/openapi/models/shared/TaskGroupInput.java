/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TaskGroupInput - A TaskGroup contains one or multiple Tasks that share the same Runnable but with different runtime parameters.
 */
public class TaskGroupInput {
    /**
     * Max number of tasks that can run in parallel. Default to min(task_count, 1000). Field parallelism must be 1 if the scheduling_policy is IN_ORDER.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parallelism")
    public String parallelism;

    public TaskGroupInput withParallelism(String parallelism) {
        this.parallelism = parallelism;
        return this;
    }
    
    /**
     * When true, Batch will configure SSH to allow passwordless login between VMs running the Batch tasks in the same TaskGroup.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissiveSsh")
    public Boolean permissiveSsh;

    public TaskGroupInput withPermissiveSsh(Boolean permissiveSsh) {
        this.permissiveSsh = permissiveSsh;
        return this;
    }
    
    /**
     * When true, Batch will populate a file with a list of all VMs assigned to the TaskGroup and set the BATCH_HOSTS_FILE environment variable to the path of that file. Defaults to false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requireHostsFile")
    public Boolean requireHostsFile;

    public TaskGroupInput withRequireHostsFile(Boolean requireHostsFile) {
        this.requireHostsFile = requireHostsFile;
        return this;
    }
    
    /**
     * Number of Tasks in the TaskGroup. Default is 1.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskCount")
    public String taskCount;

    public TaskGroupInput withTaskCount(String taskCount) {
        this.taskCount = taskCount;
        return this;
    }
    
    /**
     * Max number of tasks that can be run on a VM at the same time. If not specified, the system will decide a value based on available compute resources on a VM and task requirements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskCountPerNode")
    public String taskCountPerNode;

    public TaskGroupInput withTaskCountPerNode(String taskCountPerNode) {
        this.taskCountPerNode = taskCountPerNode;
        return this;
    }
    
    /**
     * An array of environment variable mappings, which are passed to Tasks with matching indices. If task_environments is used then task_count should not be specified in the request (and will be ignored). Task count will be the length of task_environments. Tasks get a BATCH_TASK_INDEX and BATCH_TASK_COUNT environment variable, in addition to any environment variables set in task_environments, specifying the number of Tasks in the Task's parent TaskGroup, and the specific Task's index in the TaskGroup (0 through BATCH_TASK_COUNT - 1). task_environments supports up to 200 entries.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskEnvironments")
    public Environment[] taskEnvironments;

    public TaskGroupInput withTaskEnvironments(Environment[] taskEnvironments) {
        this.taskEnvironments = taskEnvironments;
        return this;
    }
    
    /**
     * Spec of a task
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskSpec")
    public TaskSpec taskSpec;

    public TaskGroupInput withTaskSpec(TaskSpec taskSpec) {
        this.taskSpec = taskSpec;
        return this;
    }
    
    public TaskGroupInput(){}
}
