/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetOrganizationSensorReadingsLatest200ApplicationJSONReadings {
    /**
     * Reading for the 'battery' metric. This will only be present if the 'metric' property equals 'battery'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("battery")
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsBattery battery;
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadings withBattery(GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsBattery battery) {
        this.battery = battery;
        return this;
    }
    
    /**
     * Reading for the 'button' metric. This will only be present if the 'metric' property equals 'button'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("button")
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsButton button;
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadings withButton(GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsButton button) {
        this.button = button;
        return this;
    }
    
    /**
     * Reading for the 'door' metric. This will only be present if the 'metric' property equals 'door'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("door")
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsDoor door;
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadings withDoor(GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsDoor door) {
        this.door = door;
        return this;
    }
    
    /**
     * Reading for the 'humidity' metric. This will only be present if the 'metric' property equals 'humidity'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("humidity")
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsHumidity humidity;
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadings withHumidity(GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsHumidity humidity) {
        this.humidity = humidity;
        return this;
    }
    
    /**
     * Reading for the 'indoorAirQuality' metric. This will only be present if the 'metric' property equals 'indoorAirQuality'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("indoorAirQuality")
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsIndoorAirQuality indoorAirQuality;
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadings withIndoorAirQuality(GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsIndoorAirQuality indoorAirQuality) {
        this.indoorAirQuality = indoorAirQuality;
        return this;
    }
    
    /**
     * Type of sensor reading.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metric")
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsMetricEnum metric;
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadings withMetric(GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsMetricEnum metric) {
        this.metric = metric;
        return this;
    }
    
    /**
     * Reading for the 'noise' metric. This will only be present if the 'metric' property equals 'noise'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("noise")
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsNoise noise;
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadings withNoise(GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsNoise noise) {
        this.noise = noise;
        return this;
    }
    
    /**
     * Reading for the 'pm25' metric. This will only be present if the 'metric' property equals 'pm25'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pm25")
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsPm25 pm25;
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadings withPm25(GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsPm25 pm25) {
        this.pm25 = pm25;
        return this;
    }
    
    /**
     * Reading for the 'temperature' metric. This will only be present if the 'metric' property equals 'temperature'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("temperature")
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsTemperature temperature;
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadings withTemperature(GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsTemperature temperature) {
        this.temperature = temperature;
        return this;
    }
    
    /**
     * Time at which the reading occurred, in ISO8601 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ts")
    public String ts;
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadings withTs(String ts) {
        this.ts = ts;
        return this;
    }
    
    /**
     * Reading for the 'tvoc' metric. This will only be present if the 'metric' property equals 'tvoc'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tvoc")
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsTvoc tvoc;
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadings withTvoc(GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsTvoc tvoc) {
        this.tvoc = tvoc;
        return this;
    }
    
    /**
     * Reading for the 'water' metric. This will only be present if the 'metric' property equals 'water'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("water")
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsWater water;
    public GetOrganizationSensorReadingsLatest200ApplicationJSONReadings withWater(GetOrganizationSensorReadingsLatest200ApplicationJSONReadingsWater water) {
        this.water = water;
        return this;
    }
    
}
