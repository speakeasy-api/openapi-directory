// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetInvoiceUblVersionedPackageVersionEnum - The version of the package.
type GetInvoiceUblVersionedPackageVersionEnum string

const (
	GetInvoiceUblVersionedPackageVersionEnumSi11     GetInvoiceUblVersionedPackageVersionEnum = "si11"
	GetInvoiceUblVersionedPackageVersionEnumSi12     GetInvoiceUblVersionedPackageVersionEnum = "si12"
	GetInvoiceUblVersionedPackageVersionEnumSi20     GetInvoiceUblVersionedPackageVersionEnum = "si20"
	GetInvoiceUblVersionedPackageVersionEnumAunz     GetInvoiceUblVersionedPackageVersionEnum = "aunz"
	GetInvoiceUblVersionedPackageVersionEnumSg       GetInvoiceUblVersionedPackageVersionEnum = "sg"
	GetInvoiceUblVersionedPackageVersionEnumJp       GetInvoiceUblVersionedPackageVersionEnum = "jp"
	GetInvoiceUblVersionedPackageVersionEnumEn16931  GetInvoiceUblVersionedPackageVersionEnum = "en16931"
	GetInvoiceUblVersionedPackageVersionEnumOriginal GetInvoiceUblVersionedPackageVersionEnum = "original"
)

func (e *GetInvoiceUblVersionedPackageVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "si11":
		fallthrough
	case "si12":
		fallthrough
	case "si20":
		fallthrough
	case "aunz":
		fallthrough
	case "sg":
		fallthrough
	case "jp":
		fallthrough
	case "en16931":
		fallthrough
	case "original":
		*e = GetInvoiceUblVersionedPackageVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetInvoiceUblVersionedPackageVersionEnum: %s", s)
	}
}

// GetInvoiceUblVersionedPackagingEnum - How to package the purchase invoice.
type GetInvoiceUblVersionedPackagingEnum string

const (
	GetInvoiceUblVersionedPackagingEnumUbl GetInvoiceUblVersionedPackagingEnum = "ubl"
)

func (e *GetInvoiceUblVersionedPackagingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ubl":
		*e = GetInvoiceUblVersionedPackagingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetInvoiceUblVersionedPackagingEnum: %s", s)
	}
}

type GetInvoiceUblVersionedPathParams struct {
	// purchase invoice guid
	GUID string `pathParam:"style=simple,explode=false,name=guid"`
	// The version of the package.
	PackageVersion GetInvoiceUblVersionedPackageVersionEnum `pathParam:"style=simple,explode=false,name=package_version"`
	// How to package the purchase invoice.
	Packaging GetInvoiceUblVersionedPackagingEnum `pathParam:"style=simple,explode=false,name=packaging"`
}

type GetInvoiceUblVersionedRequest struct {
	PathParams GetInvoiceUblVersionedPathParams
}

type GetInvoiceUblVersionedResponse struct {
	ContentType string
	// Success
	PurchaseInvoiceUbl *shared.PurchaseInvoiceUbl
	StatusCode         int
	RawResponse        *http.Response
}
