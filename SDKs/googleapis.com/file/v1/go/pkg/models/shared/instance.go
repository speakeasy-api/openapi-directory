// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InstanceStateEnum - Output only. The instance state.
type InstanceStateEnum string

const (
	InstanceStateEnumStateUnspecified InstanceStateEnum = "STATE_UNSPECIFIED"
	InstanceStateEnumCreating         InstanceStateEnum = "CREATING"
	InstanceStateEnumReady            InstanceStateEnum = "READY"
	InstanceStateEnumRepairing        InstanceStateEnum = "REPAIRING"
	InstanceStateEnumDeleting         InstanceStateEnum = "DELETING"
	InstanceStateEnumError            InstanceStateEnum = "ERROR"
	InstanceStateEnumRestoring        InstanceStateEnum = "RESTORING"
	InstanceStateEnumSuspended        InstanceStateEnum = "SUSPENDED"
	InstanceStateEnumSuspending       InstanceStateEnum = "SUSPENDING"
	InstanceStateEnumResuming         InstanceStateEnum = "RESUMING"
)

func (e *InstanceStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "CREATING":
		fallthrough
	case "READY":
		fallthrough
	case "REPAIRING":
		fallthrough
	case "DELETING":
		fallthrough
	case "ERROR":
		fallthrough
	case "RESTORING":
		fallthrough
	case "SUSPENDED":
		fallthrough
	case "SUSPENDING":
		fallthrough
	case "RESUMING":
		*e = InstanceStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceStateEnum: %s", s)
	}
}

type InstanceSuspensionReasonsEnum string

const (
	InstanceSuspensionReasonsEnumSuspensionReasonUnspecified InstanceSuspensionReasonsEnum = "SUSPENSION_REASON_UNSPECIFIED"
	InstanceSuspensionReasonsEnumKmsKeyIssue                 InstanceSuspensionReasonsEnum = "KMS_KEY_ISSUE"
)

func (e *InstanceSuspensionReasonsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SUSPENSION_REASON_UNSPECIFIED":
		fallthrough
	case "KMS_KEY_ISSUE":
		*e = InstanceSuspensionReasonsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceSuspensionReasonsEnum: %s", s)
	}
}

// InstanceTierEnum - The service tier of the instance.
type InstanceTierEnum string

const (
	InstanceTierEnumTierUnspecified InstanceTierEnum = "TIER_UNSPECIFIED"
	InstanceTierEnumStandard        InstanceTierEnum = "STANDARD"
	InstanceTierEnumPremium         InstanceTierEnum = "PREMIUM"
	InstanceTierEnumBasicHdd        InstanceTierEnum = "BASIC_HDD"
	InstanceTierEnumBasicSsd        InstanceTierEnum = "BASIC_SSD"
	InstanceTierEnumHighScaleSsd    InstanceTierEnum = "HIGH_SCALE_SSD"
	InstanceTierEnumEnterprise      InstanceTierEnum = "ENTERPRISE"
)

func (e *InstanceTierEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TIER_UNSPECIFIED":
		fallthrough
	case "STANDARD":
		fallthrough
	case "PREMIUM":
		fallthrough
	case "BASIC_HDD":
		fallthrough
	case "BASIC_SSD":
		fallthrough
	case "HIGH_SCALE_SSD":
		fallthrough
	case "ENTERPRISE":
		*e = InstanceTierEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceTierEnum: %s", s)
	}
}

// Instance - A Filestore instance.
type Instance struct {
	// Output only. The time when the instance was created.
	CreateTime *string `json:"createTime,omitempty"`
	// The description of the instance (2048 characters or less).
	Description *string `json:"description,omitempty"`
	// Server-specified ETag for the instance resource to prevent simultaneous updates from overwriting each other.
	Etag *string `json:"etag,omitempty"`
	// File system shares on the instance. For this version, only a single file share is supported.
	FileShares []FileShareConfig `json:"fileShares,omitempty"`
	// KMS key name used for data encryption.
	KmsKeyName *string `json:"kmsKeyName,omitempty"`
	// Resource labels to represent user provided metadata.
	Labels map[string]string `json:"labels,omitempty"`
	// Output only. The resource name of the instance, in the format `projects/{project}/locations/{location}/instances/{instance}`.
	Name *string `json:"name,omitempty"`
	// VPC networks to which the instance is connected. For this version, only a single network is supported.
	Networks []NetworkConfig `json:"networks,omitempty"`
	// Output only. Reserved for future use.
	SatisfiesPzs *bool `json:"satisfiesPzs,omitempty"`
	// Output only. The instance state.
	State *InstanceStateEnum `json:"state,omitempty"`
	// Output only. Additional information about the instance state, if available.
	StatusMessage *string `json:"statusMessage,omitempty"`
	// Output only. Field indicates all the reasons the instance is in "SUSPENDED" state.
	SuspensionReasons []InstanceSuspensionReasonsEnum `json:"suspensionReasons,omitempty"`
	// The service tier of the instance.
	Tier *InstanceTierEnum `json:"tier,omitempty"`
}

// InstanceInput - A Filestore instance.
type InstanceInput struct {
	// The description of the instance (2048 characters or less).
	Description *string `json:"description,omitempty"`
	// Server-specified ETag for the instance resource to prevent simultaneous updates from overwriting each other.
	Etag *string `json:"etag,omitempty"`
	// File system shares on the instance. For this version, only a single file share is supported.
	FileShares []FileShareConfig `json:"fileShares,omitempty"`
	// KMS key name used for data encryption.
	KmsKeyName *string `json:"kmsKeyName,omitempty"`
	// Resource labels to represent user provided metadata.
	Labels map[string]string `json:"labels,omitempty"`
	// VPC networks to which the instance is connected. For this version, only a single network is supported.
	Networks []NetworkConfigInput `json:"networks,omitempty"`
	// The service tier of the instance.
	Tier *InstanceTierEnum `json:"tier,omitempty"`
}
