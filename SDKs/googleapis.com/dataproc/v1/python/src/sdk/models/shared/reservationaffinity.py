"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ReservationAffinityConsumeReservationTypeEnum(str, Enum):
    r"""Optional. Type of reservation to consume"""
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    NO_RESERVATION = 'NO_RESERVATION'
    ANY_RESERVATION = 'ANY_RESERVATION'
    SPECIFIC_RESERVATION = 'SPECIFIC_RESERVATION'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReservationAffinity:
    r"""Reservation Affinity for consuming Zonal reservation."""
    
    consume_reservation_type: Optional[ReservationAffinityConsumeReservationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('consumeReservationType'), 'exclude': lambda f: f is None }})
    r"""Optional. Type of reservation to consume"""  
    key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key'), 'exclude': lambda f: f is None }})
    r"""Optional. Corresponds to the label key of reservation resource."""  
    values: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('values'), 'exclude': lambda f: f is None }})
    r"""Optional. Corresponds to the label values of reservation resource."""  
    