/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AttributeType } from "./attributetype";
import { DeliveryMediumTypeEnum } from "./deliverymediumtypeenum";
import { MessageActionTypeEnum } from "./messageactiontypeenum";
import { Expose, Type } from "class-transformer";

/**
 * Represents the request to create a user in the specified user pool.
 */
export class AdminCreateUserRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ClientMetadata" })
  clientMetadata?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "DesiredDeliveryMediums" })
  desiredDeliveryMediums?: DeliveryMediumTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "ForceAliasCreation" })
  forceAliasCreation?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "MessageAction" })
  messageAction?: MessageActionTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TemporaryPassword" })
  temporaryPassword?: string;

  @SpeakeasyMetadata({ elemType: AttributeType })
  @Expose({ name: "UserAttributes" })
  @Type(() => AttributeType)
  userAttributes?: AttributeType[];

  @SpeakeasyMetadata()
  @Expose({ name: "UserPoolId" })
  userPoolId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Username" })
  username: string;

  @SpeakeasyMetadata({ elemType: AttributeType })
  @Expose({ name: "ValidationData" })
  @Type(() => AttributeType)
  validationData?: AttributeType[];
}
