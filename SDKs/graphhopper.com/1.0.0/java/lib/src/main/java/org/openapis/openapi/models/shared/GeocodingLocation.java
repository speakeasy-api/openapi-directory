/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GeocodingLocation {
    /**
     * The city of the address
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city")
    public String city;

    public GeocodingLocation withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * The country of the address
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;

    public GeocodingLocation withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * The housenumber of the address
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("housenumber")
    public String housenumber;

    public GeocodingLocation withHousenumber(String housenumber) {
        this.housenumber = housenumber;
        return this;
    }
    
    /**
     * The name of the entity. Can be a boundary, POI, address, etc
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public GeocodingLocation withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The OSM ID of the entity
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osm_id")
    public String osmId;

    public GeocodingLocation withOsmId(String osmId) {
        this.osmId = osmId;
        return this;
    }
    
    /**
     * The OSM key of the entity
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osm_key")
    public String osmKey;

    public GeocodingLocation withOsmKey(String osmKey) {
        this.osmKey = osmKey;
        return this;
    }
    
    /**
     * N = node, R = relation, W = way
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osm_type")
    public String osmType;

    public GeocodingLocation withOsmType(String osmType) {
        this.osmType = osmType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("point")
    public GeocodingPoint point;

    public GeocodingLocation withPoint(GeocodingPoint point) {
        this.point = point;
        return this;
    }
    
    /**
     * The postcode of the address
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postcode")
    public String postcode;

    public GeocodingLocation withPostcode(String postcode) {
        this.postcode = postcode;
        return this;
    }
    
    /**
     * The state of the address
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public String state;

    public GeocodingLocation withState(String state) {
        this.state = state;
        return this;
    }
    
    /**
     * The street of the address
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("street")
    public String street;

    public GeocodingLocation withStreet(String street) {
        this.street = street;
        return this;
    }
    
    public GeocodingLocation(){}
}
