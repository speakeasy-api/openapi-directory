/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SegmentDimensions } from "./segmentdimensions";
import { SegmentGroupList } from "./segmentgrouplist";
import { SegmentImportResource } from "./segmentimportresource";
import { SegmentTypeEnum } from "./segmenttypeenum";
import { Expose, Type } from "class-transformer";

/**
 * Provides information about the configuration, dimension, and other settings for a segment.
 */
export class SegmentResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ApplicationId" })
  applicationId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationDate" })
  creationDate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Dimensions" })
  @Type(() => SegmentDimensions)
  dimensions?: SegmentDimensions;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ImportDefinition" })
  @Type(() => SegmentImportResource)
  importDefinition?: SegmentImportResource;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedDate" })
  lastModifiedDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SegmentGroups" })
  @Type(() => SegmentGroupList)
  segmentGroups?: SegmentGroupList;

  @SpeakeasyMetadata()
  @Expose({ name: "SegmentType" })
  segmentType: SegmentTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Version" })
  version?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}
