<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AuditLogEventActor - The entity that triggered the event. Will typically be a user.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AuditLogEventActor
{
    /**
     * The type of actor.
     * 
     * Can be one of `user`, `asana`, `asana_support`, `anonymous`, or `external_administrator`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AuditLogEventActorActorTypeEnum $actorType
     */
	#[\JMS\Serializer\Annotation\SerializedName('actor_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AuditLogEventActorActorTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AuditLogEventActorActorTypeEnum $actorType = null;
    
    /**
     * The email of the actor, if it is a user.
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * Globally unique identifier of the actor, if it is a user.
     * 
     * @var ?string $gid
     */
	#[\JMS\Serializer\Annotation\SerializedName('gid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gid = null;
    
    /**
     * The name of the actor, if it is a user.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	public function __construct()
	{
		$this->actorType = null;
		$this->email = null;
		$this->gid = null;
		$this->name = null;
	}
}
