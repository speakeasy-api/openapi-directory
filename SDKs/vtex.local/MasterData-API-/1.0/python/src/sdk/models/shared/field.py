"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Field:
    
    display_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName') }})  
    is_filter: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isFilter') }})  
    is_internal: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isInternal') }})  
    is_nullable: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isNullable') }})  
    is_searchable: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isSearchable') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    