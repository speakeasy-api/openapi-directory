"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudintegrationsv1alphaintegrationalertconfigthresholdvalue as shared_googlecloudintegrationsv1alphaintegrationalertconfigthresholdvalue
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum(str, Enum):
    r"""The type of metric."""
    METRIC_TYPE_UNSPECIFIED = 'METRIC_TYPE_UNSPECIFIED'
    EVENT_ERROR_RATE = 'EVENT_ERROR_RATE'
    EVENT_WARNING_RATE = 'EVENT_WARNING_RATE'
    TASK_ERROR_RATE = 'TASK_ERROR_RATE'
    TASK_WARNING_RATE = 'TASK_WARNING_RATE'
    TASK_RATE = 'TASK_RATE'
    EVENT_RATE = 'EVENT_RATE'
    EVENT_AVERAGE_DURATION = 'EVENT_AVERAGE_DURATION'
    EVENT_PERCENTILE_DURATION = 'EVENT_PERCENTILE_DURATION'
    TASK_AVERAGE_DURATION = 'TASK_AVERAGE_DURATION'
    TASK_PERCENTILE_DURATION = 'TASK_PERCENTILE_DURATION'

class GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdTypeEnum(str, Enum):
    r"""The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired."""
    THRESHOLD_TYPE_UNSPECIFIED = 'THRESHOLD_TYPE_UNSPECIFIED'
    EXPECTED_MIN = 'EXPECTED_MIN'
    EXPECTED_MAX = 'EXPECTED_MAX'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudIntegrationsV1alphaIntegrationAlertConfig:
    r"""Message to be used to configure custom alerting in the {@code EventConfig} protos for an event."""
    
    aggregation_period: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aggregationPeriod'), 'exclude': lambda f: f is None }})
    r"""The period over which the metric value should be aggregated and evaluated. Format is , where integer should be a positive integer and unit should be one of (s,m,h,d,w) meaning (second, minute, hour, day, week). For an EXPECTED_MIN threshold, this aggregation_period must be lesser than 24 hours."""  
    alert_threshold: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alertThreshold'), 'exclude': lambda f: f is None }})
    r"""For how many contiguous aggregation periods should the expected min or max be violated for the alert to be fired."""  
    disable_alert: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disableAlert'), 'exclude': lambda f: f is None }})
    r"""Set to false by default. When set to true, the metrics are not aggregated or pushed to Monarch for this integration alert."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Name of the alert. This will be displayed in the alert subject. If set, this name should be unique within the scope of the integration."""  
    duration_threshold: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('durationThreshold'), 'exclude': lambda f: f is None }})
    r"""Should be specified only for *AVERAGE_DURATION and *PERCENTILE_DURATION metrics. This member should be used to specify what duration value the metrics should exceed for the alert to trigger."""  
    metric_type: Optional[GoogleCloudIntegrationsV1alphaIntegrationAlertConfigMetricTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metricType'), 'exclude': lambda f: f is None }})
    r"""The type of metric."""  
    only_final_attempt: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('onlyFinalAttempt'), 'exclude': lambda f: f is None }})
    r"""For either events or tasks, depending on the type of alert, count only final attempts, not retries."""  
    threshold_type: Optional[GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thresholdType'), 'exclude': lambda f: f is None }})
    r"""The threshold type, whether lower(expected_min) or upper(expected_max), for which this alert is being configured. If value falls below expected_min or exceeds expected_max, an alert will be fired."""  
    threshold_value: Optional[shared_googlecloudintegrationsv1alphaintegrationalertconfigthresholdvalue.GoogleCloudIntegrationsV1alphaIntegrationAlertConfigThresholdValue] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thresholdValue'), 'exclude': lambda f: f is None }})
    r"""The threshold value of the metric, above or below which the alert should be triggered. See EventAlertConfig or TaskAlertConfig for the different alert metric types in each case. For the *RATE metrics, one or both of these fields may be set. Zero is the default value and can be left at that. For *PERCENTILE_DURATION metrics, one or both of these fields may be set, and also, the duration threshold value should be specified in the threshold_duration_ms member below. For *AVERAGE_DURATION metrics, these fields should not be set at all. A different member, threshold_duration_ms, must be set in the EventAlertConfig or the TaskAlertConfig."""  
    