/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The non-transactional read consistency to use.
 */
export enum ReadOptionsReadConsistencyEnum {
  ReadConsistencyUnspecified = "READ_CONSISTENCY_UNSPECIFIED",
  Strong = "STRONG",
  Eventual = "EVENTUAL",
}

/**
 * The options shared by read requests.
 */
export class ReadOptions extends SpeakeasyBase {
  /**
   * The non-transactional read consistency to use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "readConsistency" })
  readConsistency?: ReadOptionsReadConsistencyEnum;

  /**
   * Reads entities as they were at the given time. This may not be older than 270 seconds. This value is only supported for Cloud Firestore in Datastore mode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "readTime" })
  readTime?: string;

  /**
   * The identifier of the transaction in which to read. A transaction identifier is returned by a call to Datastore.BeginTransaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transaction" })
  transaction?: string;
}
