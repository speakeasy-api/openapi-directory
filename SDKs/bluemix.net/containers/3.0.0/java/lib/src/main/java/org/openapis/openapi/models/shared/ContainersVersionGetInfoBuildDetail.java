/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ContainersVersionGetInfoBuildDetail {
    /**
     * The build ID of the current API version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("api")
    public String api;

    public ContainersVersionGetInfoBuildDetail withApi(String api) {
        this.api = api;
        return this;
    }
    
    /**
     * The build ID of the current automount microservice version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("automount")
    public String automount;

    public ContainersVersionGetInfoBuildDetail withAutomount(String automount) {
        this.automount = automount;
        return this;
    }
    
    /**
     * The build ID of the current grupdater microservice version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("grupdater")
    public String grupdater;

    public ContainersVersionGetInfoBuildDetail withGrupdater(String grupdater) {
        this.grupdater = grupdater;
        return this;
    }
    
    /**
     * The build ID of the current harmony microservice version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("harmony")
    public String harmony;

    public ContainersVersionGetInfoBuildDetail withHarmony(String harmony) {
        this.harmony = harmony;
        return this;
    }
    
    /**
     * The build ID of the current health-monitor microservice version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("health-monitor")
    public String healthMonitor;

    public ContainersVersionGetInfoBuildDetail withHealthMonitor(String healthMonitor) {
        this.healthMonitor = healthMonitor;
        return this;
    }
    
    /**
     * The build ID of the current hijack microservice version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hijack")
    public String hijack;

    public ContainersVersionGetInfoBuildDetail withHijack(String hijack) {
        this.hijack = hijack;
        return this;
    }
    
    /**
     * The build ID of the current ldap microservice version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ldap")
    public String ldap;

    public ContainersVersionGetInfoBuildDetail withLdap(String ldap) {
        this.ldap = ldap;
        return this;
    }
    
    /**
     * The build ID of the current logmet microservice version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logmet")
    public String logmet;

    public ContainersVersionGetInfoBuildDetail withLogmet(String logmet) {
        this.logmet = logmet;
        return this;
    }
    
    /**
     * The build ID of the current lumberjack microservice version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lumberjack")
    public String lumberjack;

    public ContainersVersionGetInfoBuildDetail withLumberjack(String lumberjack) {
        this.lumberjack = lumberjack;
        return this;
    }
    
    /**
     * The build ID of the current redis-cluster version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redis-cluster")
    public String redisCluster;

    public ContainersVersionGetInfoBuildDetail withRedisCluster(String redisCluster) {
        this.redisCluster = redisCluster;
        return this;
    }
    
    /**
     * The build ID of the current sgwatcher microservice version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sgwatcher")
    public String sgwatcher;

    public ContainersVersionGetInfoBuildDetail withSgwatcher(String sgwatcher) {
        this.sgwatcher = sgwatcher;
        return this;
    }
    
    /**
     * The build ID of the current volumes manager microservice version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("volmgr")
    public String volmgr;

    public ContainersVersionGetInfoBuildDetail withVolmgr(String volmgr) {
        this.volmgr = volmgr;
        return this;
    }
    
    public ContainersVersionGetInfoBuildDetail(){}
}
