// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListEnvironmentsEngineTypeEnum - The engine type for the runtime environment.
type ListEnvironmentsEngineTypeEnum string

const (
	ListEnvironmentsEngineTypeEnumMicrofocus ListEnvironmentsEngineTypeEnum = "microfocus"
	ListEnvironmentsEngineTypeEnumBluage     ListEnvironmentsEngineTypeEnum = "bluage"
)

func (e *ListEnvironmentsEngineTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "microfocus":
		fallthrough
	case "bluage":
		*e = ListEnvironmentsEngineTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEnvironmentsEngineTypeEnum: %s", s)
	}
}

type ListEnvironmentsRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The engine type for the runtime environment.
	EngineType *ListEnvironmentsEngineTypeEnum `queryParam:"style=form,explode=true,name=engineType"`
	// The maximum number of runtime environments to return.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// The names of the runtime environments. Must be unique within the account.
	Names []string `queryParam:"style=form,explode=true,name=names"`
	// A pagination token to control the number of runtime environments displayed in the list.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListEnvironmentsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListEnvironmentsResponse *shared.ListEnvironmentsResponse
	StatusCode               int
	RawResponse              *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
