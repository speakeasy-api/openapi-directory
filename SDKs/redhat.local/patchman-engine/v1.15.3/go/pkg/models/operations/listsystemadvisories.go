// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListSystemAdvisoriesSecurity struct {
	RhIdentity string `security:"scheme,type=apiKey,subtype=header,name=x-rh-identity"`
}

// ListSystemAdvisoriesSortEnum - Sort field
type ListSystemAdvisoriesSortEnum string

const (
	ListSystemAdvisoriesSortEnumID         ListSystemAdvisoriesSortEnum = "id"
	ListSystemAdvisoriesSortEnumName       ListSystemAdvisoriesSortEnum = "name"
	ListSystemAdvisoriesSortEnumType       ListSystemAdvisoriesSortEnum = "type"
	ListSystemAdvisoriesSortEnumSynopsis   ListSystemAdvisoriesSortEnum = "synopsis"
	ListSystemAdvisoriesSortEnumPublicDate ListSystemAdvisoriesSortEnum = "public_date"
)

func (e ListSystemAdvisoriesSortEnum) ToPointer() *ListSystemAdvisoriesSortEnum {
	return &e
}

func (e *ListSystemAdvisoriesSortEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "id":
		fallthrough
	case "name":
		fallthrough
	case "type":
		fallthrough
	case "synopsis":
		fallthrough
	case "public_date":
		*e = ListSystemAdvisoriesSortEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListSystemAdvisoriesSortEnum: %v", v)
	}
}

type ListSystemAdvisoriesRequest struct {
	// Filter
	FilterAdvisoryType *string `queryParam:"style=form,explode=true,name=filter[advisory_type]"`
	// Filter
	FilterDescription *string `queryParam:"style=form,explode=true,name=filter[description]"`
	// Filter
	FilterID *string `queryParam:"style=form,explode=true,name=filter[id]"`
	// Filter
	FilterPublicDate *string `queryParam:"style=form,explode=true,name=filter[public_date]"`
	// Filter
	FilterSeverity *string `queryParam:"style=form,explode=true,name=filter[severity]"`
	// Filter
	FilterSynopsis *string `queryParam:"style=form,explode=true,name=filter[synopsis]"`
	// Inventory ID
	InventoryID string `pathParam:"style=simple,explode=false,name=inventory_id"`
	// Limit for paging, set -1 to return all
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Offset for paging
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Find matching text
	Search *string `queryParam:"style=form,explode=true,name=search"`
	// Sort field
	Sort *ListSystemAdvisoriesSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type ListSystemAdvisoriesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	ControllersSystemAdvisoriesResponse *shared.ControllersSystemAdvisoriesResponse
}
