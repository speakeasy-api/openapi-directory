/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Benefit } from "./benefit";
import { Deduction } from "./deduction";
import { Tax } from "./tax";
import { Expose, Type } from "class-transformer";

export class Compensation extends SpeakeasyBase {
  /**
   * An array of employee benefits for the pay period.
   */
  @SpeakeasyMetadata({ elemType: Benefit })
  @Expose({ name: "benefits" })
  @Type(() => Benefit)
  benefits?: Benefit[];

  /**
   * An array of employee deductions for the pay period.
   */
  @SpeakeasyMetadata({ elemType: Deduction })
  @Expose({ name: "deductions" })
  @Type(() => Deduction)
  deductions?: Deduction[];

  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "employee_id" })
  employeeId: string;

  /**
   * The employee's gross pay. Only available when payroll has been processed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gross_pay" })
  grossPay?: number;

  /**
   * The employee's net pay. Only available when payroll has been processed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "net_pay" })
  netPay?: number;

  /**
   * An array of employer and employee taxes for the pay period.
   */
  @SpeakeasyMetadata({ elemType: Tax })
  @Expose({ name: "taxes" })
  @Type(() => Tax)
  taxes?: Tax[];
}
