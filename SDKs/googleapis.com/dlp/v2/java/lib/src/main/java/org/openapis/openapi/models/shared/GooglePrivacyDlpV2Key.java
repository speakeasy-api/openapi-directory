/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GooglePrivacyDlpV2Key - A unique identifier for a Datastore entity. If a key's partition ID or any of its path kinds or names are reserved/read-only, the key is reserved/read-only. A reserved/read-only key is forbidden in certain documented contexts.
 */
public class GooglePrivacyDlpV2Key {
    /**
     * Datastore partition ID. A partition ID identifies a grouping of entities. The grouping is always by project and namespace, however the namespace ID may be empty. A partition ID contains several dimensions: project ID and namespace ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("partitionId")
    public GooglePrivacyDlpV2PartitionId partitionId;

    public GooglePrivacyDlpV2Key withPartitionId(GooglePrivacyDlpV2PartitionId partitionId) {
        this.partitionId = partitionId;
        return this;
    }
    
    /**
     * The entity path. An entity path consists of one or more elements composed of a kind and a string or numerical identifier, which identify entities. The first element identifies a _root entity_, the second element identifies a _child_ of the root entity, the third element identifies a child of the second entity, and so forth. The entities identified by all prefixes of the path are called the element's _ancestors_. A path can never be empty, and a path can have at most 100 elements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public GooglePrivacyDlpV2PathElement[] path;

    public GooglePrivacyDlpV2Key withPath(GooglePrivacyDlpV2PathElement[] path) {
        this.path = path;
        return this;
    }
    
    public GooglePrivacyDlpV2Key(){}
}
