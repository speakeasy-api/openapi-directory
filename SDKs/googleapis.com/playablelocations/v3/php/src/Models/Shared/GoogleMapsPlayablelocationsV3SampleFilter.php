<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleMapsPlayablelocationsV3SampleFilter - Specifies the filters to use when searching for playable locations.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleMapsPlayablelocationsV3SampleFilter
{
    /**
     * Restricts the set of playable locations to just the [types](/maps/documentation/gaming/tt/types) that you want.
     * 
     * @var ?array<string> $includedTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('includedTypes')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $includedTypes = null;
    
    /**
     * Specifies the maximum number of playable locations to return. This value must not be greater than 1000. The default value is 100. Only the top-ranking playable locations are returned.
     * 
     * @var ?int $maxLocationCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxLocationCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxLocationCount = null;
    
    /**
     * A set of options that specifies the separation between playable locations.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleMapsPlayablelocationsV3SampleSpacingOptions $spacing
     */
	#[\JMS\Serializer\Annotation\SerializedName('spacing')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleMapsPlayablelocationsV3SampleSpacingOptions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleMapsPlayablelocationsV3SampleSpacingOptions $spacing = null;
    
	public function __construct()
	{
		$this->includedTypes = null;
		$this->maxLocationCount = null;
		$this->spacing = null;
	}
}
