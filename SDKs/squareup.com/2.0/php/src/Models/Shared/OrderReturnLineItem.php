<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * OrderReturnLineItem - The line item being returned in an order.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class OrderReturnLineItem
{
    /**
     * The list of references to `OrderReturnDiscount` entities applied to the return line item. Each
     * 
     * `OrderLineItemAppliedDiscount` has a `discount_uid` that references the `uid` of a top-level
     * `OrderReturnDiscount` applied to the return line item. On reads, the applied amount
     * is populated.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrderLineItemAppliedDiscount> $appliedDiscounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('applied_discounts')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrderLineItemAppliedDiscount>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $appliedDiscounts = null;
    
    /**
     * The list of references to `OrderReturnTax` entities applied to the return line item. Each
     * 
     * `OrderLineItemAppliedTax` has a `tax_uid` that references the `uid` of a top-level
     * `OrderReturnTax` applied to the return line item. On reads, the applied amount
     * is populated.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrderLineItemAppliedTax> $appliedTaxes
     */
	#[\JMS\Serializer\Annotation\SerializedName('applied_taxes')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrderLineItemAppliedTax>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $appliedTaxes = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $basePriceMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('base_price_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $basePriceMoney = null;
    
    /**
     * The [CatalogItemVariation](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogItemVariation) ID applied to this return line item.
     * 
     * @var ?string $catalogObjectId
     */
	#[\JMS\Serializer\Annotation\SerializedName('catalog_object_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $catalogObjectId = null;
    
    /**
     * The version of the catalog object that this line item references.
     * 
     * @var ?int $catalogVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('catalog_version')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $catalogVersion = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $grossReturnMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('gross_return_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $grossReturnMoney = null;
    
    /**
     * The type of line item: an itemized return, a non-itemized return (custom amount),
     * 
     * or the return of an unactivated gift card sale.
     * 
     * @var ?string $itemType
     */
	#[\JMS\Serializer\Annotation\SerializedName('item_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $itemType = null;
    
    /**
     * The name of the line item.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The note of the return line item.
     * 
     * @var ?string $note
     */
	#[\JMS\Serializer\Annotation\SerializedName('note')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $note = null;
    
    /**
     * The quantity returned, formatted as a decimal number.
     * 
     * For example, `"3"`.
     * 
     * Line items with a `quantity_unit` can have non-integer quantities.
     * For example, `"1.70000"`.
     * 
     * @var string $quantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('quantity')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $quantity;
    
    /**
     * Contains the measurement unit for a quantity and a precision that
     * 
     * specifies the number of digits after the decimal point for decimal quantities.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OrderQuantityUnit $quantityUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('quantity_unit')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OrderQuantityUnit')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OrderQuantityUnit $quantityUnit = null;
    
    /**
     * The [CatalogModifier](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogModifier)s applied to this line item.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrderReturnLineItemModifier> $returnModifiers
     */
	#[\JMS\Serializer\Annotation\SerializedName('return_modifiers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrderReturnLineItemModifier>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $returnModifiers = null;
    
    /**
     * The `uid` of the line item in the original sale order.
     * 
     * @var ?string $sourceLineItemUid
     */
	#[\JMS\Serializer\Annotation\SerializedName('source_line_item_uid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceLineItemUid = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $totalDiscountMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('total_discount_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $totalDiscountMoney = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $totalMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('total_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $totalMoney = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $totalTaxMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('total_tax_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $totalTaxMoney = null;
    
    /**
     * A unique ID for this return line-item entry.
     * 
     * @var ?string $uid
     */
	#[\JMS\Serializer\Annotation\SerializedName('uid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uid = null;
    
    /**
     * The name of the variation applied to this return line item.
     * 
     * @var ?string $variationName
     */
	#[\JMS\Serializer\Annotation\SerializedName('variation_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $variationName = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $variationTotalPriceMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('variation_total_price_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $variationTotalPriceMoney = null;
    
	public function __construct()
	{
		$this->appliedDiscounts = null;
		$this->appliedTaxes = null;
		$this->basePriceMoney = null;
		$this->catalogObjectId = null;
		$this->catalogVersion = null;
		$this->grossReturnMoney = null;
		$this->itemType = null;
		$this->name = null;
		$this->note = null;
		$this->quantity = "";
		$this->quantityUnit = null;
		$this->returnModifiers = null;
		$this->sourceLineItemUid = null;
		$this->totalDiscountMoney = null;
		$this->totalMoney = null;
		$this->totalTaxMoney = null;
		$this->uid = null;
		$this->variationName = null;
		$this->variationTotalPriceMoney = null;
	}
}
