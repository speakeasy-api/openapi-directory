/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OperatorEnum } from "./operatorenum";
import { Range } from "./range";
import { Expose, Type } from "class-transformer";

/**
 *  Contains details regarding the supported field type and the operators that can be applied for filtering.
 */
export class FieldTypeDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "fieldLengthRange" })
  @Type(() => Range)
  fieldLengthRange?: Range;

  @SpeakeasyMetadata()
  @Expose({ name: "fieldType" })
  fieldType: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fieldValueRange" })
  @Type(() => Range)
  fieldValueRange?: Range;

  @SpeakeasyMetadata()
  @Expose({ name: "filterOperators" })
  filterOperators: OperatorEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "supportedDateFormat" })
  supportedDateFormat?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "supportedValues" })
  supportedValues?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "valueRegexPattern" })
  valueRegexPattern?: string;
}
