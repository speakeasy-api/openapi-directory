/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LifecycleEnum } from "./lifecycleenum";
import { PreviousBuild } from "./previousbuild";
import { Expose, Transform, Type } from "class-transformer";

/**
 * returns a summary of the build
 */
export class Build extends SpeakeasyBase {
  /**
   * commit message body
   */
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "branch" })
  branch?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "build_time_millis" })
  buildTimeMillis?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "build_url" })
  buildUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "committer_email" })
  committerEmail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "committer_name" })
  committerName?: string;

  /**
   * reason why we didn't build, if we didn't build
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dont_build" })
  dontBuild?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lifecycle" })
  lifecycle?: LifecycleEnum;

  /**
   * previous build
   */
  @SpeakeasyMetadata()
  @Expose({ name: "previous" })
  @Type(() => PreviousBuild)
  previous?: PreviousBuild;

  /**
   * time build was queued
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queued_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  queuedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "reponame" })
  reponame?: string;

  /**
   * build_num of the build this is a retry of
   */
  @SpeakeasyMetadata()
  @Expose({ name: "retry_of" })
  retryOf?: number;

  /**
   * time build started
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  /**
   * time build finished
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stop_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  stopTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "subject" })
  subject?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "vcs_url" })
  vcsUrl?: string;

  /**
   * short string explaining the reason we built
   */
  @SpeakeasyMetadata()
  @Expose({ name: "why" })
  why?: string;
}
