"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import asset as shared_asset
from typing import Optional


@dataclasses.dataclass
class GetAssetSecurity:
    
    bearer_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetAssetRequest:
    
    asset_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'asset_id', 'style': 'simple', 'explode': False }})
    r"""UUID of the asset to retrieve"""  
    

@dataclasses.dataclass
class GetAssetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    asset: Optional[shared_asset.Asset] = dataclasses.field(default=None)
    r"""asset details"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    