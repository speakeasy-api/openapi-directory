/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * KeyedAppState - Keyed app state reported by the app.
 */
public class KeyedAppState {
    /**
     * The creation time of the app state on the device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public KeyedAppState withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Optionally, a machine-readable value to be read by the EMM. For example, setting values that the admin can choose to query against in the EMM console (e.g. \u201cnotify me if the battery_warning data &lt; 10\u201d).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("data")
    public String data;
    public KeyedAppState withData(String data) {
        this.data = data;
        return this;
    }
    
    /**
     * The key for the app state. Acts as a point of reference for what the app is providing state for. For example, when providing managed configuration feedback, this key could be the managed configuration key.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    public String key;
    public KeyedAppState withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * The time the app state was most recently updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastUpdateTime")
    public String lastUpdateTime;
    public KeyedAppState withLastUpdateTime(String lastUpdateTime) {
        this.lastUpdateTime = lastUpdateTime;
        return this;
    }
    
    /**
     * Optionally, a free-form message string to explain the app state. If the state was triggered by a particular value (e.g. a managed configuration value), it should be included in the message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message")
    public String message;
    public KeyedAppState withMessage(String message) {
        this.message = message;
        return this;
    }
    
    /**
     * The severity of the app state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("severity")
    public KeyedAppStateSeverityEnum severity;
    public KeyedAppState withSeverity(KeyedAppStateSeverityEnum severity) {
        this.severity = severity;
        return this;
    }
    
}
