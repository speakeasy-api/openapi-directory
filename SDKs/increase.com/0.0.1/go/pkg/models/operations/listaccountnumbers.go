// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListAccountNumbersStatusEnum - The status to retrieve Account Numbers for.
type ListAccountNumbersStatusEnum string

const (
	ListAccountNumbersStatusEnumActive   ListAccountNumbersStatusEnum = "active"
	ListAccountNumbersStatusEnumDisabled ListAccountNumbersStatusEnum = "disabled"
	ListAccountNumbersStatusEnumCanceled ListAccountNumbersStatusEnum = "canceled"
)

func (e *ListAccountNumbersStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "disabled":
		fallthrough
	case "canceled":
		*e = ListAccountNumbersStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersStatusEnum: %s", s)
	}
}

type ListAccountNumbersQueryParams struct {
	AccountID *string `queryParam:"style=form,explode=true,name=account_id"`
	Cursor    *string `queryParam:"style=form,explode=true,name=cursor"`
	Limit     *int64  `queryParam:"style=form,explode=true,name=limit"`
	// The status to retrieve Account Numbers for.
	Status *ListAccountNumbersStatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type ListAccountNumbersRequest struct {
	QueryParams ListAccountNumbersQueryParams
}

type ListAccountNumbersDefaultApplicationJSON13StatusEnum string

const (
	ListAccountNumbersDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ListAccountNumbersDefaultApplicationJSON13StatusEnum = "429"
)

func (e *ListAccountNumbersDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = ListAccountNumbersDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON13TypeEnum string

const (
	ListAccountNumbersDefaultApplicationJSON13TypeEnumRateLimitedError ListAccountNumbersDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *ListAccountNumbersDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = ListAccountNumbersDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON13 struct {
	Detail     string                                               `json:"detail"`
	RetryAfter *int64                                               `json:"retry_after,omitempty"`
	Status     ListAccountNumbersDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                               `json:"title"`
	Type       ListAccountNumbersDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ListAccountNumbersDefaultApplicationJSON12StatusEnum string

const (
	ListAccountNumbersDefaultApplicationJSON12StatusEnumFourHundredAndThree ListAccountNumbersDefaultApplicationJSON12StatusEnum = "403"
)

func (e *ListAccountNumbersDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListAccountNumbersDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON12TypeEnum string

const (
	ListAccountNumbersDefaultApplicationJSON12TypeEnumPrivateFeatureError ListAccountNumbersDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *ListAccountNumbersDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = ListAccountNumbersDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON12 struct {
	Detail string                                               `json:"detail"`
	Status ListAccountNumbersDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                               `json:"title"`
	Type   ListAccountNumbersDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ListAccountNumbersDefaultApplicationJSON11StatusEnum string

const (
	ListAccountNumbersDefaultApplicationJSON11StatusEnumFourHundredAndFour ListAccountNumbersDefaultApplicationJSON11StatusEnum = "404"
)

func (e *ListAccountNumbersDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ListAccountNumbersDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON11TypeEnum string

const (
	ListAccountNumbersDefaultApplicationJSON11TypeEnumObjectNotFoundError ListAccountNumbersDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *ListAccountNumbersDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = ListAccountNumbersDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON11 struct {
	Detail string                                               `json:"detail"`
	Status ListAccountNumbersDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                               `json:"title"`
	Type   ListAccountNumbersDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ListAccountNumbersDefaultApplicationJSON10StatusEnum string

const (
	ListAccountNumbersDefaultApplicationJSON10StatusEnumFourHundred ListAccountNumbersDefaultApplicationJSON10StatusEnum = "400"
)

func (e *ListAccountNumbersDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ListAccountNumbersDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON10TypeEnum string

const (
	ListAccountNumbersDefaultApplicationJSON10TypeEnumMalformedRequestError ListAccountNumbersDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *ListAccountNumbersDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = ListAccountNumbersDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON10 struct {
	Detail string                                               `json:"detail"`
	Status ListAccountNumbersDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                               `json:"title"`
	Type   ListAccountNumbersDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ListAccountNumbersDefaultApplicationJSON9StatusEnum string

const (
	ListAccountNumbersDefaultApplicationJSON9StatusEnumFourHundred ListAccountNumbersDefaultApplicationJSON9StatusEnum = "400"
)

func (e *ListAccountNumbersDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ListAccountNumbersDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON9TypeEnum string

const (
	ListAccountNumbersDefaultApplicationJSON9TypeEnumInvalidParametersError ListAccountNumbersDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *ListAccountNumbersDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = ListAccountNumbersDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                            `json:"errors,omitempty"`
	Status ListAccountNumbersDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListAccountNumbersDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ListAccountNumbersDefaultApplicationJSON8StatusEnum string

const (
	ListAccountNumbersDefaultApplicationJSON8StatusEnumFourHundredAndNine ListAccountNumbersDefaultApplicationJSON8StatusEnum = "409"
)

func (e *ListAccountNumbersDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ListAccountNumbersDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON8TypeEnum string

const (
	ListAccountNumbersDefaultApplicationJSON8TypeEnumInvalidOperationError ListAccountNumbersDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *ListAccountNumbersDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = ListAccountNumbersDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON8 struct {
	Detail string                                              `json:"detail"`
	Status ListAccountNumbersDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListAccountNumbersDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ListAccountNumbersDefaultApplicationJSON7StatusEnum string

const (
	ListAccountNumbersDefaultApplicationJSON7StatusEnumFourHundredAndOne ListAccountNumbersDefaultApplicationJSON7StatusEnum = "401"
)

func (e *ListAccountNumbersDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = ListAccountNumbersDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON7TypeEnum string

const (
	ListAccountNumbersDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ListAccountNumbersDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *ListAccountNumbersDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = ListAccountNumbersDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON7 struct {
	Detail string                                              `json:"detail"`
	Status ListAccountNumbersDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListAccountNumbersDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ListAccountNumbersDefaultApplicationJSON6StatusEnum string

const (
	ListAccountNumbersDefaultApplicationJSON6StatusEnumFiveHundred ListAccountNumbersDefaultApplicationJSON6StatusEnum = "500"
)

func (e *ListAccountNumbersDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = ListAccountNumbersDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON6TypeEnum string

const (
	ListAccountNumbersDefaultApplicationJSON6TypeEnumInternalServerError ListAccountNumbersDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *ListAccountNumbersDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = ListAccountNumbersDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON6 struct {
	Detail string                                              `json:"detail"`
	Status ListAccountNumbersDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListAccountNumbersDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ListAccountNumbersDefaultApplicationJSON5StatusEnum string

const (
	ListAccountNumbersDefaultApplicationJSON5StatusEnumFourHundredAndThree ListAccountNumbersDefaultApplicationJSON5StatusEnum = "403"
)

func (e *ListAccountNumbersDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListAccountNumbersDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON5TypeEnum string

const (
	ListAccountNumbersDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ListAccountNumbersDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *ListAccountNumbersDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = ListAccountNumbersDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON5 struct {
	Detail string                                              `json:"detail"`
	Status ListAccountNumbersDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListAccountNumbersDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ListAccountNumbersDefaultApplicationJSON4StatusEnum string

const (
	ListAccountNumbersDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ListAccountNumbersDefaultApplicationJSON4StatusEnum = "422"
)

func (e *ListAccountNumbersDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = ListAccountNumbersDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON4TypeEnum string

const (
	ListAccountNumbersDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ListAccountNumbersDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *ListAccountNumbersDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = ListAccountNumbersDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON4 struct {
	Detail string                                              `json:"detail"`
	Status ListAccountNumbersDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListAccountNumbersDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ListAccountNumbersDefaultApplicationJSON3StatusEnum string

const (
	ListAccountNumbersDefaultApplicationJSON3StatusEnumFourHundredAndNine ListAccountNumbersDefaultApplicationJSON3StatusEnum = "409"
)

func (e *ListAccountNumbersDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ListAccountNumbersDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON3TypeEnum string

const (
	ListAccountNumbersDefaultApplicationJSON3TypeEnumIdempotencyConflictError ListAccountNumbersDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *ListAccountNumbersDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = ListAccountNumbersDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON3 struct {
	Detail string                                              `json:"detail"`
	Status ListAccountNumbersDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListAccountNumbersDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ListAccountNumbersDefaultApplicationJSON2StatusEnum string

const (
	ListAccountNumbersDefaultApplicationJSON2StatusEnumFourHundredAndThree ListAccountNumbersDefaultApplicationJSON2StatusEnum = "403"
)

func (e *ListAccountNumbersDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ListAccountNumbersDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON2TypeEnum string

const (
	ListAccountNumbersDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ListAccountNumbersDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *ListAccountNumbersDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = ListAccountNumbersDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON2 struct {
	Detail string                                              `json:"detail"`
	Status ListAccountNumbersDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListAccountNumbersDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ListAccountNumbersDefaultApplicationJSON1StatusEnum string

const (
	ListAccountNumbersDefaultApplicationJSON1StatusEnumFourHundredAndFour ListAccountNumbersDefaultApplicationJSON1StatusEnum = "404"
)

func (e *ListAccountNumbersDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ListAccountNumbersDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON1TypeEnum string

const (
	ListAccountNumbersDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ListAccountNumbersDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *ListAccountNumbersDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = ListAccountNumbersDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountNumbersDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type ListAccountNumbersDefaultApplicationJSON1 struct {
	Detail string                                              `json:"detail"`
	Status ListAccountNumbersDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                              `json:"title"`
	Type   ListAccountNumbersDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ListAccountNumbersResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Account Number List
	AccountNumberList *shared.AccountNumberList
	// Error
	Error interface{}
}
