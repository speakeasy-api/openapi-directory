/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDialogflowV2beta1AnalyzeContentRequest - The request message for Participants.AnalyzeContent.
 */
public class GoogleCloudDialogflowV2beta1AnalyzeContentRequest {
    /**
     * Represents the parameters of human assist query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assistQueryParams")
    public GoogleCloudDialogflowV2beta1AssistQueryParameters assistQueryParams;

    public GoogleCloudDialogflowV2beta1AnalyzeContentRequest withAssistQueryParams(GoogleCloudDialogflowV2beta1AssistQueryParameters assistQueryParams) {
        this.assistQueryParams = assistQueryParams;
        return this;
    }
    
    /**
     * Represents the natural language speech audio to be processed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audioInput")
    public GoogleCloudDialogflowV2beta1AudioInput audioInput;

    public GoogleCloudDialogflowV2beta1AnalyzeContentRequest withAudioInput(GoogleCloudDialogflowV2beta1AudioInput audioInput) {
        this.audioInput = audioInput;
        return this;
    }
    
    /**
     * The unique identifier of the CX page to override the `current_page` in the session. Format: `projects//locations//agents//flows//pages/`. If `cx_current_page` is specified, the previous state of the session will be ignored by Dialogflow CX, including the previous page and the previous session parameters. In most cases, `cx_current_page` and `cx_parameters` should be configured together to direct a session to a specific state. Note: this field should only be used if you are connecting to a Dialogflow CX agent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cxCurrentPage")
    public String cxCurrentPage;

    public GoogleCloudDialogflowV2beta1AnalyzeContentRequest withCxCurrentPage(String cxCurrentPage) {
        this.cxCurrentPage = cxCurrentPage;
        return this;
    }
    
    /**
     * Additional parameters to be put into Dialogflow CX session parameters. To remove a parameter from the session, clients should explicitly set the parameter value to null. Note: this field should only be used if you are connecting to a Dialogflow CX agent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cxParameters")
    public java.util.Map<String, Object> cxParameters;

    public GoogleCloudDialogflowV2beta1AnalyzeContentRequest withCxParameters(java.util.Map<String, Object> cxParameters) {
        this.cxParameters = cxParameters;
        return this;
    }
    
    /**
     * Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `"Hello #welcome_event.name! What can I do for you today?"`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventInput")
    public GoogleCloudDialogflowV2beta1EventInput eventInput;

    public GoogleCloudDialogflowV2beta1AnalyzeContentRequest withEventInput(GoogleCloudDialogflowV2beta1EventInput eventInput) {
        this.eventInput = eventInput;
        return this;
    }
    
    /**
     * Optional. The send time of the message from end user or human agent's perspective. It is used for identifying the same message under one participant. Given two messages under the same participant: - If send time are different regardless of whether the content of the messages are exactly the same, the conversation will regard them as two distinct messages sent by the participant. - If send time is the same regardless of whether the content of the messages are exactly the same, the conversation will regard them as same message, and ignore the message received later. If the value is not provided, a new request will always be regarded as a new message without any de-duplication.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("messageSendTime")
    public String messageSendTime;

    public GoogleCloudDialogflowV2beta1AnalyzeContentRequest withMessageSendTime(String messageSendTime) {
        this.messageSendTime = messageSendTime;
        return this;
    }
    
    /**
     * Represents the parameters of the conversational query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queryParams")
    public GoogleCloudDialogflowV2beta1QueryParameters queryParams;

    public GoogleCloudDialogflowV2beta1AnalyzeContentRequest withQueryParams(GoogleCloudDialogflowV2beta1QueryParameters queryParams) {
        this.queryParams = queryParams;
        return this;
    }
    
    /**
     * Instructs the speech synthesizer how to generate the output audio content. If this audio config is supplied in a request, it overrides all existing text-to-speech settings applied to the agent.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replyAudioConfig")
    public GoogleCloudDialogflowV2beta1OutputAudioConfig replyAudioConfig;

    public GoogleCloudDialogflowV2beta1AnalyzeContentRequest withReplyAudioConfig(GoogleCloudDialogflowV2beta1OutputAudioConfig replyAudioConfig) {
        this.replyAudioConfig = replyAudioConfig;
        return this;
    }
    
    /**
     * A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a `request_id` is provided.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestId")
    public String requestId;

    public GoogleCloudDialogflowV2beta1AnalyzeContentRequest withRequestId(String requestId) {
        this.requestId = requestId;
        return this;
    }
    
    /**
     * Represents the natural language text to be processed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textInput")
    public GoogleCloudDialogflowV2beta1TextInput textInput;

    public GoogleCloudDialogflowV2beta1AnalyzeContentRequest withTextInput(GoogleCloudDialogflowV2beta1TextInput textInput) {
        this.textInput = textInput;
        return this;
    }
    
    public GoogleCloudDialogflowV2beta1AnalyzeContentRequest(){}
}
