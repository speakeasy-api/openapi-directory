// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// UserUpdateApplicationJSONCustomAttributes - Custom attribute(s) of the user.
type UserUpdateApplicationJSONCustomAttributes struct {
	// Identifier for the custom attribute.
	Key *string `json:"key,omitempty"`
	// Name of the custom attribute.
	Name *string `json:"name,omitempty"`
	// Value of the custom attribute.
	Value *string `json:"value,omitempty"`
}

type UserUpdateApplicationJSONPhoneNumbers struct {
	// Country code of the phone number. For example, for United States phone numbers, the value of this field should be "+1".
	Code *string `json:"code,omitempty"`
	// [Country ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) of the phone number. For example, if the phone number provided in the `number` field is a Brazil based number, the value of the `country` field should be `BR`.
	Country *string `json:"country,omitempty"`
	// Phone number of the user.
	Number *string `json:"number,omitempty"`
}

// UserUpdateApplicationJSONTypeEnum - User types:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).
type UserUpdateApplicationJSONTypeEnum string

const (
	UserUpdateApplicationJSONTypeEnumOne        UserUpdateApplicationJSONTypeEnum = "1"
	UserUpdateApplicationJSONTypeEnumTwo        UserUpdateApplicationJSONTypeEnum = "2"
	UserUpdateApplicationJSONTypeEnumThree      UserUpdateApplicationJSONTypeEnum = "3"
	UserUpdateApplicationJSONTypeEnumNinetyNine UserUpdateApplicationJSONTypeEnum = "99"
)

func (e *UserUpdateApplicationJSONTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "2":
		fallthrough
	case "3":
		fallthrough
	case "99":
		*e = UserUpdateApplicationJSONTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserUpdateApplicationJSONTypeEnum: %s", s)
	}
}

// UserUpdateApplicationJSON - The user update object represents a user on Zoom.
type UserUpdateApplicationJSON struct {
	// Kaltura user ID.
	CmsUserID *string `json:"cms_user_id,omitempty"`
	// User's company.
	Company *string `json:"company,omitempty"`
	// Custom attribute(s) of the user.
	CustomAttributes *UserUpdateApplicationJSONCustomAttributes `json:"custom_attributes,omitempty"`
	// Department for user profile: use for report.
	Dept *string `json:"dept,omitempty"`
	// User's first name. Cannot contain more than 5 Chinese characters.
	FirstName *string `json:"first_name,omitempty"`
	// Provide unique identifier of the group that you would like to add a [pending user](https://support.zoom.us/hc/en-us/articles/201363183-Managing-users#h_13c87a2a-ecd6-40ad-be61-a9935e660edb) to. The value of this field can be retrieved from [List Groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.
	GroupID *string `json:"group_id,omitempty"`
	// Host key. It should be a 6-10 digit number.
	HostKey *string `json:"host_key,omitempty"`
	// User's job title.
	JobTitle *string `json:"job_title,omitempty"`
	// language
	Language *string `json:"language,omitempty"`
	// User's last name. Cannot contain more than 5 Chinese characters.
	LastName *string `json:"last_name,omitempty"`
	// User's location.
	Location *string `json:"location,omitempty"`
	// The manager for the user.
	Manager *string `json:"manager,omitempty"`
	// **Note:** This field has been **deprecated** and will not be supported in the future. Use the **country** field of the **phone_numbers** object instead to select the country for the phone number.
	//
	//
	//
	// [Country ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) of the phone number. For example, if the phone number provided in the `phone_number` field is a Brazil based number, the value of the `phone_country` field should be `BR`.
	PhoneCountry *string `json:"phone_country,omitempty"`
	// **Note:** This field has been **deprecated** and will not be supported in the future. Use the **phone_numbers** field instead to assign phone number(s) to a user.
	//
	//
	// Phone number of the user. To update a phone number, you must also provide the `phone_country` field.
	PhoneNumber  *string                                `json:"phone_number,omitempty"`
	PhoneNumbers *UserUpdateApplicationJSONPhoneNumbers `json:"phone_numbers,omitempty"`
	// Personal meeting ID: length must be 10.
	Pmi *int64 `json:"pmi,omitempty"`
	// The time zone ID for a user profile. For this parameter value please refer to the ID value in the [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list.
	Timezone *string `json:"timezone,omitempty"`
	// User types:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).
	Type *UserUpdateApplicationJSONTypeEnum `json:"type,omitempty"`
	// Use Personal Meeting ID for instant meetings.
	UsePmi *bool `json:"use_pmi,omitempty"`
	// Personal meeting room name.
	VanityName *string `json:"vanity_name,omitempty"`
}

// UserUpdateLoginTypeEnum - `0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO.
type UserUpdateLoginTypeEnum string

const (
	UserUpdateLoginTypeEnumZero             UserUpdateLoginTypeEnum = "0"
	UserUpdateLoginTypeEnumOne              UserUpdateLoginTypeEnum = "1"
	UserUpdateLoginTypeEnumNinetyNine       UserUpdateLoginTypeEnum = "99"
	UserUpdateLoginTypeEnumOneHundred       UserUpdateLoginTypeEnum = "100"
	UserUpdateLoginTypeEnumOneHundredAndOne UserUpdateLoginTypeEnum = "101"
)

func (e *UserUpdateLoginTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "0":
		fallthrough
	case "1":
		fallthrough
	case "99":
		fallthrough
	case "100":
		fallthrough
	case "101":
		*e = UserUpdateLoginTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UserUpdateLoginTypeEnum: %s", s)
	}
}

type UserUpdateRequest struct {
	// User
	RequestBody UserUpdateApplicationJSON `request:"mediaType=application/json"`
	// `0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO.
	LoginType *UserUpdateLoginTypeEnum `queryParam:"style=form,explode=true,name=login_type"`
	// The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
	UserID string `pathParam:"style=simple,explode=false,name=userId"`
}

type UserUpdateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
