// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// QueryEventV1OrderByTimeEnum - The events are ordered by timestamp. Specify desc to show the latest entries first. Specify asc to show the oldest entries first. The default behavior is asc.
type QueryEventV1OrderByTimeEnum string

const (
	QueryEventV1OrderByTimeEnumAsc  QueryEventV1OrderByTimeEnum = "asc"
	QueryEventV1OrderByTimeEnumDesc QueryEventV1OrderByTimeEnum = "desc"
)

func (e QueryEventV1OrderByTimeEnum) ToPointer() *QueryEventV1OrderByTimeEnum {
	return &e
}

func (e *QueryEventV1OrderByTimeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = QueryEventV1OrderByTimeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryEventV1OrderByTimeEnum: %v", v)
	}
}

type QueryEventV1Request struct {
	// Filter the events occurring before the specified date.
	AfterDate *time.Time `queryParam:"style=form,explode=true,name=after_date"`
	// An (event_id, time) tuple. When specified, returns all events with timestamps that come after the time value of after_id based on the sort order defined by the order_by_time parameter.
	AfterID *string `queryParam:"style=form,explode=true,name=after_id"`
	// Filter the events occurring after the specified date.
	BeforeDate *time.Time `queryParam:"style=form,explode=true,name=before_date"`
	// Maximum number of events retrieved.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// The events are ordered by timestamp. Specify desc to show the latest entries first. Specify asc to show the oldest entries first. The default behavior is asc.
	OrderByTime *QueryEventV1OrderByTimeEnum `queryParam:"style=form,explode=true,name=order_by_time"`
	// A Boolean value that determines whether to include event series summary for every event. If set to 'true', a list of event series summary will be returned and each summary has an empty list of events. If set to 'false', an empty list of event series summary will be returned. The default value is 'false'. Setting it to 'true' will increase the response time.
	ShouldIncludeEventSeries *bool `queryParam:"style=form,explode=true,name=should_include_event_series"`
}

type QueryEventV1Response struct {
	ContentType string
	// Returns information for the events that match the query parameters.
	EventsAndSeriesSummariesV1 *shared.EventsAndSeriesSummariesV1
	StatusCode                 int
	RawResponse                *http.Response
}
