// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ChoiceStatusEnum string

const (
	ChoiceStatusEnumSelected      ChoiceStatusEnum = "SELECTED"
	ChoiceStatusEnumNotApplicable ChoiceStatusEnum = "NOT_APPLICABLE"
	ChoiceStatusEnumUnselected    ChoiceStatusEnum = "UNSELECTED"
)

func (e ChoiceStatusEnum) ToPointer() *ChoiceStatusEnum {
	return &e
}

func (e *ChoiceStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SELECTED":
		fallthrough
	case "NOT_APPLICABLE":
		fallthrough
	case "UNSELECTED":
		*e = ChoiceStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ChoiceStatusEnum: %v", v)
	}
}
