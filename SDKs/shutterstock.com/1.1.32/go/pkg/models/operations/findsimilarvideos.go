// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type FindSimilarVideosSecurity struct {
	Basic              *shared.SchemeBasic `security:"scheme,type=http,subtype=basic"`
	CustomerAccessCode *string             `security:"scheme,type=oauth2,name=Authorization"`
}

// FindSimilarVideosViewEnum - Amount of detail to render in the response
type FindSimilarVideosViewEnum string

const (
	FindSimilarVideosViewEnumMinimal FindSimilarVideosViewEnum = "minimal"
	FindSimilarVideosViewEnumFull    FindSimilarVideosViewEnum = "full"
)

func (e FindSimilarVideosViewEnum) ToPointer() *FindSimilarVideosViewEnum {
	return &e
}

func (e *FindSimilarVideosViewEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "minimal":
		fallthrough
	case "full":
		*e = FindSimilarVideosViewEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FindSimilarVideosViewEnum: %v", v)
	}
}

type FindSimilarVideosRequest struct {
	// The ID of a video for which similar videos should be returned
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Language for the keywords and categories in the response
	Language *shared.LanguageEnum `queryParam:"style=form,explode=true,name=language"`
	// Page number
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Number of results per page
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// Amount of detail to render in the response
	View *FindSimilarVideosViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type FindSimilarVideosResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	VideoSearchResults *shared.VideoSearchResults
}
