"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ManageE911signageApplicationJSON2MethodEnum(str, Enum):
    r"""To remove the emergency content from the Zoom Rooms digital signage display, set the value of this field to be `zoomroom.emergency_alert_removed`."""
    ZOOMROOM_EMERGENCY_ALERT_REMOVED = 'zoomroom.emergency_alert_removed'

class ManageE911signageApplicationJSON2ParamsTargetTypeEnum(str, Enum):
    r"""Provide one of the following values for this field that is associated to the value you entered in the `target_ids` field. <br>
    * `account`
    * `location`
    * `room`
    """
    ACCOUNT = 'account'
    LOCATION = 'location'
    ROOM = 'room'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ManageE911signageApplicationJSON2Params:
    
    event_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event_id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of the event."""  
    target_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('target_ids'), 'exclude': lambda f: f is None }})
    r"""Provide one of the following IDs associated with the Zoom Room.<br>
    
    * `accountId`: Account ID of the Zoom account.<br> Provide account ID as the value of this field to remove the alert content from all Zoom Rooms' displays in the account.<br><br>
    * `locationId`: Location ID. Get the value of this field by calling [List Zoom Rooms Locations API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations).<br>Provide location ID as the value of this field to remove the alert content from all Zoom Rooms' displays listed in the specified location.<br><br>
    * `roomId`: Unique identifier of the Zoom Room. Get the value of this field by calling [List Zoom Rooms API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms). Provide room ID as the value of this field to remove the alert content from a specific Zoom Rooms' display.
    """  
    target_type: Optional[ManageE911signageApplicationJSON2ParamsTargetTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('target_type'), 'exclude': lambda f: f is None }})
    r"""Provide one of the following values for this field that is associated to the value you entered in the `target_ids` field. <br>
    * `account`
    * `location`
    * `room`
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ManageE911signageApplicationJSON2:
    r"""Provide this request body to remove the emergency alert content. Note that there won't be a response body for this request."""
    
    method: Optional[ManageE911signageApplicationJSON2MethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('method'), 'exclude': lambda f: f is None }})
    r"""To remove the emergency content from the Zoom Rooms digital signage display, set the value of this field to be `zoomroom.emergency_alert_removed`."""  
    params: Optional[ManageE911signageApplicationJSON2Params] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('params'), 'exclude': lambda f: f is None }})  
    
class ManageE911signageApplicationJSON1MethodEnum(str, Enum):
    r"""To display the emergency content on the Zoom Rooms digital signage display, set the value of this field to be `zoomroom.emergency_alert_displayed`."""
    ZOOMROOM_EMERGENCY_ALERT_DISPLAYED = 'zoomroom.emergency_alert_displayed'

class ManageE911signageApplicationJSON1ParamsTargetTypeEnum(str, Enum):
    r"""Provide one of the following values for this field that is associated to the value you entered in the `target_ids` field. <br>
    * `account`
    * `location`
    * `room`
    """
    ACCOUNT = 'account'
    LOCATION = 'location'
    ROOM = 'room'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ManageE911signageApplicationJSON1Params:
    
    content: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('content'), 'exclude': lambda f: f is None }})
    r"""Provide the content to be displayed."""  
    target_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('target_ids'), 'exclude': lambda f: f is None }})
    r"""Provide one of the following IDs associated with the Zoom Room.<br>
    
    * `accountId`: Account ID of the Zoom account.<br> Provide account ID as the value of this field to display the alert content on all Zoom Rooms' displays in the account.<br><br>
    * `locationId`: Location ID. Get the value of this field by calling [List Zoom Rooms Locations API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations).<br>Provide location ID as the value of this field to display the alert content on all Zoom Rooms' displays listed in the specified location.<br><br>
    * `roomId`: Unique identifier of the Zoom Room. Get the value of this field by calling [List Zoom Rooms API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms/listzoomrooms). Provide room ID as the value of this field to display the alert content on a specific Zoom Rooms' display.
    """  
    target_type: Optional[ManageE911signageApplicationJSON1ParamsTargetTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('target_type'), 'exclude': lambda f: f is None }})
    r"""Provide one of the following values for this field that is associated to the value you entered in the `target_ids` field. <br>
    * `account`
    * `location`
    * `room`
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ManageE911signageApplicationJSON1:
    r"""Provide this request body to set and display the emergency alert content."""
    
    method: Optional[ManageE911signageApplicationJSON1MethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('method'), 'exclude': lambda f: f is None }})
    r"""To display the emergency content on the Zoom Rooms digital signage display, set the value of this field to be `zoomroom.emergency_alert_displayed`."""  
    params: Optional[ManageE911signageApplicationJSON1Params] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('params'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class ManageE911signage202ApplicationXML:
    r"""**HTTP Status Code:** `202` <br>"""
    
    event_id: Optional[str] = dataclasses.field(default=None)
    r"""Unique identifier of the event related to the content being displayed. This field is only returned if you provided `zoomroom.emergency_alert_displayed` as the value of the `method` parameter.
    
    Save this response value and provide it as the value of the `event_id` request parameter when you need to remove the alert content using `zoomroom.emergency_alert_removed` method.
    """  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ManageE911signage202ApplicationJSON:
    r"""**HTTP Status Code:** `202` <br>"""
    
    event_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event_id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of the event related to the content being displayed. This field is only returned if you provided `zoomroom.emergency_alert_displayed` as the value of the `method` parameter.
    
    Save this response value and provide it as the value of the `event_id` request parameter when you need to remove the alert content using `zoomroom.emergency_alert_removed` method.
    """  
    

@dataclasses.dataclass
class ManageE911signageResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    manage_e911signage_202_application_json_object: Optional[ManageE911signage202ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `202` <br>"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    