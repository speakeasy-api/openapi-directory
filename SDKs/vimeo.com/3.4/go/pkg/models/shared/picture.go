// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PictureSizes struct {
	// The height of the image.
	Height float64 `json:"height"`
	// The direct link to the image.
	Link string `json:"link"`
	// The direct link to the image with a play button overlay.
	LinkWithPlayButton *string `json:"link_with_play_button,omitempty"`
	// The width of the image.
	Width float64 `json:"width"`
}

// PictureTypeEnum - The type of the picture:
//
// Option descriptions:
//   - `caution` - An image that is appropriate for all ages.
//   - `custom` - A custom image for the video.
//   - `default` - The default image for the video.
type PictureTypeEnum string

const (
	PictureTypeEnumCaution PictureTypeEnum = "caution"
	PictureTypeEnumCustom  PictureTypeEnum = "custom"
	PictureTypeEnumDefault PictureTypeEnum = "default"
)

func (e *PictureTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "caution":
		fallthrough
	case "custom":
		fallthrough
	case "default":
		*e = PictureTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PictureTypeEnum: %s", s)
	}
}

// Picture - The thumbnail was created.
type Picture struct {
	// Whether this picture is the active picture for its parent resource.
	Active bool `json:"active"`
	// The upload URL for the picture. This field appears when you create the picture resource for the first time.
	Link *string `json:"link,omitempty"`
	// The picture's resource key string.
	ResourceKey string `json:"resource_key"`
	// An array containing reference information about all available image files.
	Sizes []PictureSizes `json:"sizes"`
	// The type of the picture:
	//
	// Option descriptions:
	//  * `caution` - An image that is appropriate for all ages.
	//  * `custom` - A custom image for the video.
	//  * `default` - The default image for the video.
	//
	Type PictureTypeEnum `json:"type"`
	// The picture's URI.
	URI string `json:"uri"`
}
