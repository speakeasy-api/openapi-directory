/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class CreateSIPPhoneSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

/**
 * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
 */
export enum CreateSIPPhoneApplicationJSONTransportProtocolEnum {
  Udp = "UDP",
  Tcp = "TCP",
  Tls = "TLS",
  Auto = "AUTO",
}

/**
 * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
 */
export enum CreateSIPPhoneApplicationJSONTransportProtocol2Enum {
  Udp = "UDP",
  Tcp = "TCP",
  Tls = "TLS",
  Auto = "AUTO",
}

/**
 * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
 */
export enum CreateSIPPhoneApplicationJSONTransportProtocol3Enum {
  Udp = "UDP",
  Tcp = "TCP",
  Tls = "TLS",
  Auto = "AUTO",
}

export class CreateSIPPhoneApplicationJSON extends SpeakeasyBase {
  /**
   * Authorization name of the user  registered for SIP Phone.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authorization_name" })
  authorizationName: string;

  /**
   * The name or IP address of your providerâ€™s SIP domain. (example: CDC.WEB).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  domain: string;

  /**
   * The password generated for the user in the SIP account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password: string;

  /**
   * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "proxy_server" })
  proxyServer: string;

  /**
   * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "proxy_server2" })
  proxyServer2?: string;

  /**
   * IP address of the proxy server for SIP requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address. If you are not using a proxy server, this value can be the same as the Register Server, or empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "proxy_server3" })
  proxyServer3?: string;

  /**
   * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "register_server" })
  registerServer: string;

  /**
   * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "register_server2" })
  registerServer2?: string;

  /**
   * IP address of the server that accepts REGISTER requests. Note that if you are using the UDP transport protocol, the default port is 5060. If you are using UDP with a different port number, that port number must be included with the IP address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "register_server3" })
  registerServer3?: string;

  /**
   * The number of minutes after which the SIP registration of the Zoom client user will expire, and the client will auto register to the SIP server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registration_expire_time" })
  registrationExpireTime?: number;

  /**
   * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transport_protocol" })
  transportProtocol?: CreateSIPPhoneApplicationJSONTransportProtocolEnum;

  /**
   * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transport_protocol2" })
  transportProtocol2?: CreateSIPPhoneApplicationJSONTransportProtocol2Enum;

  /**
   * Protocols supported by the SIP provider.<br> The value must be either `UDP`, `TCP`, `TLS`, `AUTO`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transport_protocol3" })
  transportProtocol3?: CreateSIPPhoneApplicationJSONTransportProtocol3Enum;

  /**
   * The email address of the user to associate with the SIP Phone. Can add [.win, .mac, .android, .ipad, .iphone, .linux, .pc, .mobile, .pad] at the end of the email (ex. user@test.com.mac) to add accounts for different platforms for the same user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_email" })
  userEmail: string;

  /**
   * The phone number associated with the user in the SIP account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_name" })
  userName: string;

  /**
   * The number to dial for checking voicemail.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "voice_mail" })
  voiceMail: string;
}

export class CreateSIPPhoneResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
