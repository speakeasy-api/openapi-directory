/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Request message for Locations.FindMatchingLocations.
 */
export class FindMatchingLocationsRequest extends SpeakeasyBase {
  /**
   * The preferred language for the matching location (in BCP-47 format).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "languageCode" })
  languageCode?: string;

  /**
   * Deprecated. This field is ignored for all requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxCacheDuration" })
  maxCacheDuration?: string;

  /**
   * The number of matches to return. The default value is 3, with a maximum of 10. Note that latency may increase if more are requested. There is no pagination.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numResults" })
  numResults?: number;
}
