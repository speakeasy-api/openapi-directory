/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address } from "./address";
import { City } from "./city";
import { Country } from "./country";
import { Dma } from "./dma";
import { ExternalLink } from "./externallink";
import { Image } from "./image";
import { Location } from "./location";
import { Market } from "./market";
import { Social } from "./social";
import { State } from "./state";
import { VenueBoxOfficeInfo } from "./venueboxofficeinfo";
import { VenueGeneralInfo } from "./venuegeneralinfo";

/**
 * Type of the entity
 */
export enum VenueTypeEnum {
  Event = "event",
  Venue = "venue",
  Attraction = "attraction",
}

/**
 * Venue
 */
export class Venue extends SpeakeasyBase {
  /**
   * Venue accessible seating detail
   */
  @SpeakeasyMetadata()
  accessibleSeatingDetail?: string;

  /**
   * Additional information of the entity
   */
  @SpeakeasyMetadata()
  additionalInfo?: string;

  /**
   * Address
   */
  @SpeakeasyMetadata()
  address?: Address;

  /**
   * Venue box office information
   */
  @SpeakeasyMetadata()
  boxOfficeInfo?: VenueBoxOfficeInfo;

  /**
   * City
   */
  @SpeakeasyMetadata()
  city?: City;

  /**
   * Country
   */
  @SpeakeasyMetadata()
  country?: Country;

  /**
   * Default currency of ticket prices for events in this venue
   */
  @SpeakeasyMetadata()
  currency?: string;

  /**
   * Description's of the entity
   */
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  distance?: number;

  /**
   * The list of associated DMAs (Designated Market Areas) of the venue
   */
  @SpeakeasyMetadata({ elemType: Dma })
  dma?: Dma[];

  /**
   * List of external links
   */
  @SpeakeasyMetadata({ elemType: ExternalLink, elemDepth: 2 })
  externalLinks?: Record<string, ExternalLink[]>;

  /**
   * Venue general information
   */
  @SpeakeasyMetadata()
  generalInfo?: VenueGeneralInfo;

  /**
   * Unique id of the entity in the discovery API
   */
  @SpeakeasyMetadata()
  id: string;

  /**
   * Images of the entity
   */
  @SpeakeasyMetadata({ elemType: Image })
  images?: Image[];

  /**
   * Locale in which the content is returned
   */
  @SpeakeasyMetadata()
  locale?: string;

  /**
   * Location
   */
  @SpeakeasyMetadata()
  location?: Location;

  /**
   * Markets of the venue
   */
  @SpeakeasyMetadata({ elemType: Market })
  markets?: Market[];

  /**
   * Name of the entity
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * Venue parking info
   */
  @SpeakeasyMetadata()
  parkingDetail?: string;

  /**
   * Postal code / zipcode of the venue
   */
  @SpeakeasyMetadata()
  postalCode?: string;

  /**
   * Social networks data
   */
  @SpeakeasyMetadata()
  social?: Social;

  /**
   * State
   */
  @SpeakeasyMetadata()
  state?: State;

  /**
   * Indicate if this is a test entity, by default test entities won't appear in discovery API
   */
  @SpeakeasyMetadata()
  test?: boolean;

  /**
   * Timezone of the venue
   */
  @SpeakeasyMetadata()
  timezone?: string;

  /**
   * Type of the entity
   */
  @SpeakeasyMetadata()
  type: VenueTypeEnum;

  @SpeakeasyMetadata()
  units?: string;

  /**
   * number of upcoming events
   */
  @SpeakeasyMetadata()
  upcomingEvents?: Record<string, number>;

  /**
   * URL of a web site detail page of the entity
   */
  @SpeakeasyMetadata()
  url?: string;
}
