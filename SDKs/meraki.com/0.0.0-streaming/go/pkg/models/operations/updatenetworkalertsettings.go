// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

// UpdateNetworkAlertSettingsRequestBodyAlertsAlertDestinations - A hash of destinations for this specific alert
type UpdateNetworkAlertSettingsRequestBodyAlertsAlertDestinations struct {
	// If true, then all network admins will receive emails for this alert
	AllAdmins *bool `json:"allAdmins,omitempty"`
	// A list of emails that will receive information about the alert
	Emails []string `json:"emails,omitempty"`
	// A list of HTTP server IDs to send a Webhook to for this alert
	HTTPServerIds []string `json:"httpServerIds,omitempty"`
	// If true, then an SNMP trap will be sent for this alert if there is an SNMP trap server configured for this network
	Snmp *bool `json:"snmp,omitempty"`
}

type UpdateNetworkAlertSettingsRequestBodyAlerts struct {
	// A hash of destinations for this specific alert
	AlertDestinations *UpdateNetworkAlertSettingsRequestBodyAlertsAlertDestinations `json:"alertDestinations,omitempty"`
	// A boolean depicting if the alert is turned on or off
	Enabled *bool `json:"enabled,omitempty"`
	// A hash of specific configuration data for the alert. Only filters specific to the alert will be updated.
	Filters map[string]interface{} `json:"filters,omitempty"`
	// The type of alert
	Type string `json:"type"`
}

// UpdateNetworkAlertSettingsRequestBodyDefaultDestinations - The network-wide destinations for all alerts on the network.
type UpdateNetworkAlertSettingsRequestBodyDefaultDestinations struct {
	// If true, then all network admins will receive emails.
	AllAdmins *bool `json:"allAdmins,omitempty"`
	// A list of emails that will recieve the alert(s).
	Emails []string `json:"emails,omitempty"`
	// A list of HTTP server IDs to send a Webhook to
	HTTPServerIds []string `json:"httpServerIds,omitempty"`
	// If true, then an SNMP trap will be sent if there is an SNMP trap server configured for this network.
	Snmp *bool `json:"snmp,omitempty"`
}

type UpdateNetworkAlertSettingsRequestBody struct {
	// Alert-specific configuration for each type. Only alerts that pertain to the network can be updated.
	Alerts []UpdateNetworkAlertSettingsRequestBodyAlerts `json:"alerts,omitempty"`
	// The network-wide destinations for all alerts on the network.
	DefaultDestinations *UpdateNetworkAlertSettingsRequestBodyDefaultDestinations `json:"defaultDestinations,omitempty"`
}

type UpdateNetworkAlertSettingsRequest struct {
	RequestBody *UpdateNetworkAlertSettingsRequestBody `request:"mediaType=application/json"`
	NetworkID   string                                 `pathParam:"style=simple,explode=false,name=networkId"`
}

type UpdateNetworkAlertSettingsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateNetworkAlertSettings200ApplicationJSONObject map[string]interface{}
}
