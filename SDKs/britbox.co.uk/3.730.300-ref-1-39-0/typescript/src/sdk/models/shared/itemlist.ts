/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ItemSummary } from "./itemsummary";
import { ListData } from "./listdata";
import { Pagination } from "./pagination";
import { Theme } from "./theme";
import { Expose, Type } from "class-transformer";

export enum ItemListItemTypesEnum {
  Movie = "movie",
  Show = "show",
  Season = "season",
  Episode = "episode",
  Program = "program",
  Link = "link",
  Trailer = "trailer",
  Channel = "channel",
  CustomAsset = "customAsset",
}

/**
 * A pageable list of items.
 */
export class ItemList extends SpeakeasyBase {
  /**
   * A map of custom fields defined by a curator for a list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customFields" })
  customFields?: Record<string, any>;

  /**
   * A full description of this list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The id of this list
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "images" })
  images?: Record<string, string>;

  /**
   * The types of items in the list
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itemTypes" })
  itemTypes?: ItemListItemTypesEnum[];

  /**
   * A list of items
   */
  @SpeakeasyMetadata({ elemType: ItemSummary })
  @Expose({ name: "items" })
  @Type(() => ItemSummary)
  items: ItemSummary[];

  /**
   * Extra data to accompany ItemList content. The (single) key in the object is
   *
   * @remarks
   * the list name and the data changes depending on the list
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listData" })
  @Type(() => ListData)
  listData?: ListData;

  @SpeakeasyMetadata()
  @Expose({ name: "paging" })
  @Type(() => Pagination)
  paging: Pagination;

  /**
   * If this list is parameterized, then this contains the parameter of the list in the format `name:value`.
   *
   * @remarks
   * For example the Movies Genre list will take a parameter `genre` with a given value. e.g. `genre:action` or `genre:drama`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parameter" })
  parameter?: string;

  /**
   * The path of this list
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path: string;

  /**
   * A short description of this list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortDescription" })
  shortDescription?: string;

  /**
   * The total size of the list
   */
  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size: number;

  /**
   * The tagline of the item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tagline" })
  tagline?: string;

  @SpeakeasyMetadata({ elemType: Theme })
  @Expose({ name: "themes" })
  @Type(() => Theme)
  themes?: Theme[];

  /**
   * The title of this list
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}
