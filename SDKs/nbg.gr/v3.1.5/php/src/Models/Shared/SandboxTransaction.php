<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SandboxTransaction - Transaction information
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SandboxTransaction
{
    /**
     * Balance
     * 
     * @var ?float $accountingBalance
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountingBalance')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $accountingBalance = null;
    
    /**
     * Amount
     * 
     * @var ?float $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $amount = null;
    
    /**
     * Booking date time
     * 
     * @var ?\DateTime $bookingDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('bookingDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $bookingDateTime = null;
    
    /**
     * Credit / Debit indicator
     * 
     * @var ?string $creditDebit
     */
	#[\JMS\Serializer\Annotation\SerializedName('creditDebit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creditDebit = null;
    
    /**
     * Currency (EUR, USD ...)
     * 
     * @var ?string $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currency = null;
    
    /**
     * Description
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Transaction reference
     * 
     * @var ?string $reference
     */
	#[\JMS\Serializer\Annotation\SerializedName('reference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reference = null;
    
    /**
     * Related account
     * 
     * @var ?string $relatedAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('relatedAccount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $relatedAccount = null;
    
    /**
     * Related account
     * 
     * @var ?string $relatedName
     */
	#[\JMS\Serializer\Annotation\SerializedName('relatedName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $relatedName = null;
    
    /**
     * Transaction code
     * 
     * @var ?string $transactionCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('transactionCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transactionCode = null;
    
    /**
     * Valeur
     * 
     * @var ?\DateTime $valueDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('valueDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $valueDateTime = null;
    
	public function __construct()
	{
		$this->accountingBalance = null;
		$this->amount = null;
		$this->bookingDateTime = null;
		$this->creditDebit = null;
		$this->currency = null;
		$this->description = null;
		$this->reference = null;
		$this->relatedAccount = null;
		$this->relatedName = null;
		$this->transactionCode = null;
		$this->valueDateTime = null;
	}
}
