/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AutoMLOverrideStrategyEnum } from "./automloverridestrategyenum";
import { EncryptionConfig } from "./encryptionconfig";
import { EvaluationParameters } from "./evaluationparameters";
import { FeaturizationConfig } from "./featurizationconfig";
import { HyperParameterTuningJobConfig } from "./hyperparametertuningjobconfig";
import { InputDataConfig } from "./inputdataconfig";
import { OptimizationMetricEnum } from "./optimizationmetricenum";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreatePredictorRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AlgorithmArn" })
  algorithmArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AutoMLOverrideStrategy" })
  autoMLOverrideStrategy?: AutoMLOverrideStrategyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "EncryptionConfig" })
  @Type(() => EncryptionConfig)
  encryptionConfig?: EncryptionConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "EvaluationParameters" })
  @Type(() => EvaluationParameters)
  evaluationParameters?: EvaluationParameters;

  @SpeakeasyMetadata()
  @Expose({ name: "FeaturizationConfig" })
  @Type(() => FeaturizationConfig)
  featurizationConfig: FeaturizationConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "ForecastHorizon" })
  forecastHorizon: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ForecastTypes" })
  forecastTypes?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "HPOConfig" })
  @Type(() => HyperParameterTuningJobConfig)
  hpoConfig?: HyperParameterTuningJobConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "InputDataConfig" })
  @Type(() => InputDataConfig)
  inputDataConfig: InputDataConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "OptimizationMetric" })
  optimizationMetric?: OptimizationMetricEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "PerformAutoML" })
  performAutoML?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "PerformHPO" })
  performHPO?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "PredictorName" })
  predictorName: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingParameters" })
  trainingParameters?: Record<string, string>;
}
