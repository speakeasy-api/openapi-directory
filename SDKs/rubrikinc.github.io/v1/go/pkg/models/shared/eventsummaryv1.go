// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type EventSummaryV1 struct {
	// The serialized AfterId of the response, if any.
	AfterID *string `json:"afterId,omitempty"`
	// A string that contains all the information for this event.
	EventInfo string `json:"eventInfo"`
	// The event name.
	EventName *string `json:"eventName,omitempty"`
	// The ID of the event series that this event belongs to.
	EventSeriesID string `json:"eventSeriesId"`
	// Level of event's severity.
	EventSeverity *EventSeverityV1Enum `json:"eventSeverity,omitempty"`
	// Status of an event.
	EventStatus EventStatusV1Enum `json:"eventStatus"`
	// Type of an event.
	EventType EventTypeV1Enum `json:"eventType"`
	// The event ID.
	ID string `json:"id"`
	// The ID of the associated job instance, if any.
	JobInstanceID *string `json:"jobInstanceId,omitempty"`
	// The ID of the object associated with the event.
	ObjectID *string `json:"objectId,omitempty"`
	// The name of the object associated with the event.
	ObjectName *string `json:"objectName,omitempty"`
	// Type of the object associated with the event.
	ObjectType ObjectTypeV1Enum `json:"objectType"`
	// The time at which this event occurred.
	Time time.Time `json:"time"`
}
