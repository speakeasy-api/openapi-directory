/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateIpRecordServerList = ["https://voice.twilio.com"] as const;

export class CreateIpRecordSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateIpRecordCreateIpRecordRequest extends SpeakeasyBase {
  /**
   * An integer representing the length of the [CIDR](https://tools.ietf.org/html/rfc4632) prefix to use with this IP address. By default the entire IP address is used, which for IPv4 is value 32.
   */
  @SpeakeasyMetadata({ data: "form, name=CidrPrefixLength" })
  cidrPrefixLength?: number;

  /**
   * A descriptive string that you create to describe the resource. It is not unique and can be up to 255 characters long.
   */
  @SpeakeasyMetadata({ data: "form, name=FriendlyName" })
  friendlyName?: string;

  /**
   * An IP address in dotted decimal notation, IPv4 only.
   */
  @SpeakeasyMetadata({ data: "form, name=IpAddress" })
  ipAddress: string;
}

export class CreateIpRecordResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  voiceV1IpRecord?: shared.VoiceV1IpRecord;
}
