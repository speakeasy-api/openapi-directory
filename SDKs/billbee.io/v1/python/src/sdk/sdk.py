"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .cloudstorage import CloudStorage
from .customeraddresses import CustomerAddresses
from .customers import Customers
from .deliverynote import DeliveryNote
from .enumapi import EnumAPI
from .events import Events
from .invoice import Invoice
from .orders import Orders
from .products import Products
from .provisioning import Provisioning
from .shipments import Shipments
from .webhooks import Webhooks

SERVERS = [
    "https://app.billbee.io",
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""Documentation of the Billbee REST API to connect a Billbee account to external aplications.
    
    ## Endpoint
    
    The Billbee API endpoint base url is https://api.billbee.io/api/v1 
    
    ## Activation
    
    You have to enable the API in the settings of your Billbee account. In addition you need a Billbee API Key identifying the application you develop. To get an API key, send a mail to support@billbee.io and send us a short note about what you are building.
    
    ## Authorization & security
    
    Because you can access private data with the Billbee API, every request has to be sent over https and must
    
    * Contain a valid API Key identifying the application/developer. It has to be sent as the HTTP header X-Billbee-Api-Key
    * Contain a valid user login with billbee username and api password in form of a basic auth HTTP header
    
    ## Throttling
    
    Each endpoint has a throttle of max 2 requests per second per combination of API Key and Billbee user.
    
    When you exceed these 2 calls, the API will return a HTTP 429 status code
    """
    cloud_storage: CloudStorage
    customer_addresses: CustomerAddresses
    customers: Customers
    delivery_note: DeliveryNote
    enum_api: EnumAPI
    events: Events
    invoice: Invoice
    orders: Orders
    products: Products
    provisioning: Provisioning
    shipments: Shipments
    webhooks: Webhooks

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = self._client
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.cloud_storage = CloudStorage(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.customer_addresses = CustomerAddresses(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.customers = Customers(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.delivery_note = DeliveryNote(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.enum_api = EnumAPI(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.events = Events(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.invoice = Invoice(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.orders = Orders(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.products = Products(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.provisioning = Provisioning(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.shipments = Shipments(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.webhooks = Webhooks(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    