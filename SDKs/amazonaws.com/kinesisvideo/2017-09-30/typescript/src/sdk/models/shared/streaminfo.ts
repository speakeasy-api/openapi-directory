/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StatusEnum } from "./statusenum";
import { Expose, Transform } from "class-transformer";

/**
 * An object describing a Kinesis video stream.
 */
export class StreamInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DataRetentionInHours" })
  dataRetentionInHours?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "DeviceName" })
  deviceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KmsKeyId" })
  kmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MediaType" })
  mediaType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: StatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StreamARN" })
  streamARN?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StreamName" })
  streamName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Version" })
  version?: string;
}
