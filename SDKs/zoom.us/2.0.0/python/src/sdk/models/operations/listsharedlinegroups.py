"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class ListSharedLineGroupsRequest:
    
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'next_page_token', 'style': 'form', 'explode': True }})
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page_size', 'style': 'form', 'explode': True }})
    r"""The number of records returned within a single API call."""  
    
class ListSharedLineGroups200ApplicationXMLSharedLineGroupsPhoneNumbersStatusEnum(str, Enum):
    r"""Status of the number."""
    PENDING = 'pending'
    AVAILABLE = 'available'


@dataclasses.dataclass
class ListSharedLineGroups200ApplicationXMLSharedLineGroupsPhoneNumbers:
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique identifier of the phone number."""  
    number: Optional[str] = dataclasses.field(default=None)
    r"""Phone number in E164 format."""  
    status: Optional[ListSharedLineGroups200ApplicationXMLSharedLineGroupsPhoneNumbersStatusEnum] = dataclasses.field(default=None)
    r"""Status of the number."""  
    

@dataclasses.dataclass
class ListSharedLineGroups200ApplicationXMLSharedLineGroupsSite:
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique Identifier of the [Site](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/getasite)."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the Site."""  
    
class ListSharedLineGroups200ApplicationXMLSharedLineGroupsStatusEnum(str, Enum):
    r"""Status of the Shared Line Group."""
    ACTIVE = 'active'
    INACTIVE = 'inactive'


@dataclasses.dataclass
class ListSharedLineGroups200ApplicationXMLSharedLineGroups:
    
    display_name: Optional[str] = dataclasses.field(default=None)
    r"""Display Name of the Shared Line Group."""  
    extension_number: Optional[int] = dataclasses.field(default=None)
    r"""Extension number assigned to the Shared Line Group."""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique Identifier of the Shared Line Group."""  
    phone_numbers: Optional[list[ListSharedLineGroups200ApplicationXMLSharedLineGroupsPhoneNumbers]] = dataclasses.field(default=None)
    r"""Phone Numbers Assigned to the Shared Line Group."""  
    site: Optional[ListSharedLineGroups200ApplicationXMLSharedLineGroupsSite] = dataclasses.field(default=None)  
    status: Optional[ListSharedLineGroups200ApplicationXMLSharedLineGroupsStatusEnum] = dataclasses.field(default=None)
    r"""Status of the Shared Line Group."""  
    

@dataclasses.dataclass
class ListSharedLineGroups200ApplicationXML:
    r"""**HTTP Status Code:** `200` **OK** <br>
    Shared Line Groups returned.
    """
    
    next_page_token: Optional[str] = dataclasses.field(default=None)
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_size: Optional[int] = dataclasses.field(default=None)
    r"""The number of records returned within a single API call."""  
    shared_line_groups: Optional[list[ListSharedLineGroups200ApplicationXMLSharedLineGroups]] = dataclasses.field(default=None)  
    total_records: Optional[int] = dataclasses.field(default=None)
    r"""Total records found in the response for this request."""  
    
class ListSharedLineGroups200ApplicationJSONSharedLineGroupsPhoneNumbersStatusEnum(str, Enum):
    r"""Status of the number."""
    PENDING = 'pending'
    AVAILABLE = 'available'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListSharedLineGroups200ApplicationJSONSharedLineGroupsPhoneNumbers:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of the phone number."""  
    number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number'), 'exclude': lambda f: f is None }})
    r"""Phone number in E164 format."""  
    status: Optional[ListSharedLineGroups200ApplicationJSONSharedLineGroupsPhoneNumbersStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the number."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListSharedLineGroups200ApplicationJSONSharedLineGroupsSite:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique Identifier of the [Site](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-site/getasite)."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the Site."""  
    
class ListSharedLineGroups200ApplicationJSONSharedLineGroupsStatusEnum(str, Enum):
    r"""Status of the Shared Line Group."""
    ACTIVE = 'active'
    INACTIVE = 'inactive'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListSharedLineGroups200ApplicationJSONSharedLineGroups:
    
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display_name'), 'exclude': lambda f: f is None }})
    r"""Display Name of the Shared Line Group."""  
    extension_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('extension_number'), 'exclude': lambda f: f is None }})
    r"""Extension number assigned to the Shared Line Group."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique Identifier of the Shared Line Group."""  
    phone_numbers: Optional[list[ListSharedLineGroups200ApplicationJSONSharedLineGroupsPhoneNumbers]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone_numbers'), 'exclude': lambda f: f is None }})
    r"""Phone Numbers Assigned to the Shared Line Group."""  
    site: Optional[ListSharedLineGroups200ApplicationJSONSharedLineGroupsSite] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('site'), 'exclude': lambda f: f is None }})  
    status: Optional[ListSharedLineGroups200ApplicationJSONSharedLineGroupsStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the Shared Line Group."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListSharedLineGroups200ApplicationJSON:
    r"""**HTTP Status Code:** `200` **OK** <br>
    Shared Line Groups returned.
    """
    
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_page_token'), 'exclude': lambda f: f is None }})
    r"""The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_size'), 'exclude': lambda f: f is None }})
    r"""The number of records returned within a single API call."""  
    shared_line_groups: Optional[list[ListSharedLineGroups200ApplicationJSONSharedLineGroups]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shared_line_groups'), 'exclude': lambda f: f is None }})  
    total_records: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_records'), 'exclude': lambda f: f is None }})
    r"""Total records found in the response for this request."""  
    

@dataclasses.dataclass
class ListSharedLineGroupsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    list_shared_line_groups_200_application_json_object: Optional[ListSharedLineGroups200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200` **OK** <br>
    Shared Line Groups returned.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    