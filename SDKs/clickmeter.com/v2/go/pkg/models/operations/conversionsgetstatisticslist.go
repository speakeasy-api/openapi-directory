// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ConversionsGetStatisticsListGroupByEnum - The temporal entity you want to group by ("week"/"month"). If unspecified is "day".
type ConversionsGetStatisticsListGroupByEnum string

const (
	ConversionsGetStatisticsListGroupByEnumWeek  ConversionsGetStatisticsListGroupByEnum = "week"
	ConversionsGetStatisticsListGroupByEnumMonth ConversionsGetStatisticsListGroupByEnum = "month"
)

func (e ConversionsGetStatisticsListGroupByEnum) ToPointer() *ConversionsGetStatisticsListGroupByEnum {
	return &e
}

func (e *ConversionsGetStatisticsListGroupByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "week":
		fallthrough
	case "month":
		*e = ConversionsGetStatisticsListGroupByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConversionsGetStatisticsListGroupByEnum: %v", v)
	}
}

// ConversionsGetStatisticsListTimeFrameEnum - Timeframe of the request. See list at $timeframeList
type ConversionsGetStatisticsListTimeFrameEnum string

const (
	ConversionsGetStatisticsListTimeFrameEnumToday         ConversionsGetStatisticsListTimeFrameEnum = "today"
	ConversionsGetStatisticsListTimeFrameEnumYesterday     ConversionsGetStatisticsListTimeFrameEnum = "yesterday"
	ConversionsGetStatisticsListTimeFrameEnumLast7         ConversionsGetStatisticsListTimeFrameEnum = "last7"
	ConversionsGetStatisticsListTimeFrameEnumLast30        ConversionsGetStatisticsListTimeFrameEnum = "last30"
	ConversionsGetStatisticsListTimeFrameEnumLastmonth     ConversionsGetStatisticsListTimeFrameEnum = "lastmonth"
	ConversionsGetStatisticsListTimeFrameEnumCurrentmonth  ConversionsGetStatisticsListTimeFrameEnum = "currentmonth"
	ConversionsGetStatisticsListTimeFrameEnumPreviousmonth ConversionsGetStatisticsListTimeFrameEnum = "previousmonth"
	ConversionsGetStatisticsListTimeFrameEnumLast90        ConversionsGetStatisticsListTimeFrameEnum = "last90"
	ConversionsGetStatisticsListTimeFrameEnumLast120       ConversionsGetStatisticsListTimeFrameEnum = "last120"
	ConversionsGetStatisticsListTimeFrameEnumLast180       ConversionsGetStatisticsListTimeFrameEnum = "last180"
	ConversionsGetStatisticsListTimeFrameEnumLast12months  ConversionsGetStatisticsListTimeFrameEnum = "last12months"
	ConversionsGetStatisticsListTimeFrameEnumLastyear      ConversionsGetStatisticsListTimeFrameEnum = "lastyear"
	ConversionsGetStatisticsListTimeFrameEnumCurrentyear   ConversionsGetStatisticsListTimeFrameEnum = "currentyear"
	ConversionsGetStatisticsListTimeFrameEnumBeginning     ConversionsGetStatisticsListTimeFrameEnum = "beginning"
	ConversionsGetStatisticsListTimeFrameEnumCustom        ConversionsGetStatisticsListTimeFrameEnum = "custom"
)

func (e ConversionsGetStatisticsListTimeFrameEnum) ToPointer() *ConversionsGetStatisticsListTimeFrameEnum {
	return &e
}

func (e *ConversionsGetStatisticsListTimeFrameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "today":
		fallthrough
	case "yesterday":
		fallthrough
	case "last7":
		fallthrough
	case "last30":
		fallthrough
	case "lastmonth":
		fallthrough
	case "currentmonth":
		fallthrough
	case "previousmonth":
		fallthrough
	case "last90":
		fallthrough
	case "last120":
		fallthrough
	case "last180":
		fallthrough
	case "last12months":
		fallthrough
	case "lastyear":
		fallthrough
	case "currentyear":
		fallthrough
	case "beginning":
		fallthrough
	case "custom":
		*e = ConversionsGetStatisticsListTimeFrameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConversionsGetStatisticsListTimeFrameEnum: %v", v)
	}
}

type ConversionsGetStatisticsListRequest struct {
	// Id of the conversion
	ConversionID int64 `pathParam:"style=simple,explode=false,name=conversionId"`
	// If using a "custom" timeFrame you can specify the starting day (YYYYMMDD)
	FromDay *string `queryParam:"style=form,explode=true,name=fromDay"`
	// The temporal entity you want to group by ("week"/"month"). If unspecified is "day".
	GroupBy *ConversionsGetStatisticsListGroupByEnum `queryParam:"style=form,explode=true,name=groupBy"`
	// Timeframe of the request. See list at $timeframeList
	TimeFrame ConversionsGetStatisticsListTimeFrameEnum `queryParam:"style=form,explode=true,name=timeFrame"`
	// If using a "custom" timeFrame you can specify the ending day (YYYYMMDD)
	ToDay *string `queryParam:"style=form,explode=true,name=toDay"`
}

type ConversionsGetStatisticsListResponse struct {
	APICoreResponsesEntitiesResponseAPICoreDtoAggregatedAggregatedResult *shared.APICoreResponsesEntitiesResponseAPICoreDtoAggregatedAggregatedResult
	ContentType                                                          string
	StatusCode                                                           int
	RawResponse                                                          *http.Response
}
