/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class AppPkgIdGETRequest extends SpeakeasyBase {
  /**
   * Include all complex attributes in the response.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=all_fields",
  })
  allFields?: string;

  /**
   * Identifier of an on-boarded individual application package
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=appPkgId",
  })
  appPkgId: string;

  /**
   * Indicates to exclude the following complex attributes of AppPkgInfo from the response.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=exclude_default",
  })
  excludeDefault?: string;

  /**
   * Complex attributes of AppPkgInfo to be excluded from the response.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=exclude_fields",
  })
  excludeFields?: string;

  /**
   * Complex attributes of AppPkgInfo to be included into the response
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fields",
  })
  fields?: string;

  /**
   * Attribute-based filtering parameters according to ETSI GS MEC 009
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter",
  })
  filter?: string;
}

export class AppPkgIdGETResponse extends SpeakeasyBase {
  /**
   * Content of the AppD is returned.
   */
  @SpeakeasyMetadata()
  appD?: string;

  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Bad Request : used to indicate that incorrect parameters were passed to the request.
   */
  @SpeakeasyMetadata()
  problemDetails?: shared.ProblemDetails;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
