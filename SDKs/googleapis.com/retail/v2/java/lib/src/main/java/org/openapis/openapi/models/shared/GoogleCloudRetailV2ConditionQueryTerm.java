/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRetailV2ConditionQueryTerm - Query terms that we want to match on.
 */
public class GoogleCloudRetailV2ConditionQueryTerm {
    /**
     * Whether this is supposed to be a full or partial match.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullMatch")
    public Boolean fullMatch;

    public GoogleCloudRetailV2ConditionQueryTerm withFullMatch(Boolean fullMatch) {
        this.fullMatch = fullMatch;
        return this;
    }
    
    /**
     * The value of the term to match on. Value cannot be empty. Value can have at most 3 terms if specified as a partial match. Each space separated string is considered as one term. For example, "a b c" is 3 terms and allowed, but " a b c d" is 4 terms and not allowed for a partial match.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public String value;

    public GoogleCloudRetailV2ConditionQueryTerm withValue(String value) {
        this.value = value;
        return this;
    }
    
    public GoogleCloudRetailV2ConditionQueryTerm(){}
}
