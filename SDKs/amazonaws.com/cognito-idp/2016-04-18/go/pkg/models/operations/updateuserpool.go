// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateUserPoolXAmzTargetEnum
type UpdateUserPoolXAmzTargetEnum string

const (
	UpdateUserPoolXAmzTargetEnumAwsCognitoIdentityProviderServiceUpdateUserPool UpdateUserPoolXAmzTargetEnum = "AWSCognitoIdentityProviderService.UpdateUserPool"
)

func (e UpdateUserPoolXAmzTargetEnum) ToPointer() *UpdateUserPoolXAmzTargetEnum {
	return &e
}

func (e *UpdateUserPoolXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSCognitoIdentityProviderService.UpdateUserPool":
		*e = UpdateUserPoolXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateUserPoolXAmzTargetEnum: %v", v)
	}
}

type UpdateUserPoolRequest struct {
	UpdateUserPoolRequest shared.UpdateUserPoolRequest `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            UpdateUserPoolXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateUserPoolResponse struct {
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidEmailRoleAccessPolicyException
	InvalidEmailRoleAccessPolicyException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidSmsRoleAccessPolicyException
	InvalidSmsRoleAccessPolicyException interface{}
	// InvalidSmsRoleTrustRelationshipException
	InvalidSmsRoleTrustRelationshipException interface{}
	// NotAuthorizedException
	NotAuthorizedException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// Success
	UpdateUserPoolResponse map[string]interface{}
	// UserImportInProgressException
	UserImportInProgressException interface{}
	// UserPoolTaggingException
	UserPoolTaggingException interface{}
}
