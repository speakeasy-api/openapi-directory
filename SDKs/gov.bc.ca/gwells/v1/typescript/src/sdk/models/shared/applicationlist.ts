/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ApplicationStatusCode } from "./applicationstatuscode";
import { Qualification } from "./qualification";
import { Subactivity } from "./subactivity";
import { Expose, Transform, Type } from "class-transformer";

export class ApplicationList extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cert_authority" })
  certAuthority?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "certificate" })
  certificate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "current_status" })
  @Type(() => ApplicationStatusCode)
  currentStatus?: ApplicationStatusCode;

  @SpeakeasyMetadata()
  @Expose({ name: "display_status" })
  displayStatus?: string;

  @SpeakeasyMetadata({ elemType: Qualification })
  @Expose({ name: "qualifications" })
  @Type(() => Qualification)
  qualifications?: Qualification[];

  @SpeakeasyMetadata()
  @Expose({ name: "removal_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  removalDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "subactivity" })
  @Type(() => Subactivity)
  subactivity: Subactivity;
}
