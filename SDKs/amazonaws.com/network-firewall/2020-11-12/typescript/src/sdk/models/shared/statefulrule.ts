/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Header } from "./header";
import { RuleOption } from "./ruleoption";
import { StatefulActionEnum } from "./statefulactionenum";
import { Expose, Type } from "class-transformer";

/**
 * A single Suricata rules specification, for use in a stateful rule group. Use this option to specify a simple Suricata rule with protocol, source and destination, ports, direction, and rule options. For information about the Suricata <code>Rules</code> format, see <a href="https://suricata.readthedocs.io/rules/intro.html#">Rules Format</a>.
 */
export class StatefulRule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Action" })
  action: StatefulActionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Header" })
  @Type(() => Header)
  header: Header;

  @SpeakeasyMetadata({ elemType: RuleOption })
  @Expose({ name: "RuleOptions" })
  @Type(() => RuleOption)
  ruleOptions: RuleOption[];
}
