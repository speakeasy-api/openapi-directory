<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class PortfoliosEssentials 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Get a specific portfolio
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetPortfolioRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetPortfolioResponse
     */
	public function getPortfolio(
        \OpenAPI\OpenAPI\Models\Operations\GetPortfolioRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetPortfolioResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/users/{user_id}/portfolios/{portfolio_id}', \OpenAPI\OpenAPI\Models\Operations\GetPortfolioRequest::class, $request);
        
        $options = ['http_errors' => false];
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetPortfolioResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/vnd.vimeo.portfolio+json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->portfolio = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Portfolio', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get a specific portfolio
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetPortfolioAlt1Request $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetPortfolioAlt1Response
     */
	public function getPortfolioAlt1(
        \OpenAPI\OpenAPI\Models\Operations\GetPortfolioAlt1Request $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetPortfolioAlt1Response
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/me/portfolios/{portfolio_id}', \OpenAPI\OpenAPI\Models\Operations\GetPortfolioAlt1Request::class, $request);
        
        $options = ['http_errors' => false];
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetPortfolioAlt1Response();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/vnd.vimeo.portfolio+json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->portfolio = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Portfolio', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get all the portfolios that belong to a user
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetPortfoliosRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetPortfoliosResponse
     */
	public function getPortfolios(
        \OpenAPI\OpenAPI\Models\Operations\GetPortfoliosRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetPortfoliosResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/users/{user_id}/portfolios', \OpenAPI\OpenAPI\Models\Operations\GetPortfoliosRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetPortfoliosRequest::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetPortfoliosResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/vnd.vimeo.portfolio+json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->portfolios = $serializer->deserialize((string)$httpResponse->getBody(), 'array<OpenAPI\OpenAPI\Models\Shared\Portfolio>', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get all the portfolios that belong to a user
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetPortfoliosAlt1Request $request
     * @return \OpenAPI\OpenAPI\Models\Operations\GetPortfoliosAlt1Response
     */
	public function getPortfoliosAlt1(
        \OpenAPI\OpenAPI\Models\Operations\GetPortfoliosAlt1Request $request,
    ): \OpenAPI\OpenAPI\Models\Operations\GetPortfoliosAlt1Response
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/me/portfolios');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetPortfoliosAlt1Request::class, $request, null));
        
        $httpResponse = $this->_securityClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetPortfoliosAlt1Response();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/vnd.vimeo.portfolio+json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->portfolios = $serializer->deserialize((string)$httpResponse->getBody(), 'array<OpenAPI\OpenAPI\Models\Shared\Portfolio>', 'json');
            }
        }

        return $response;
    }
}