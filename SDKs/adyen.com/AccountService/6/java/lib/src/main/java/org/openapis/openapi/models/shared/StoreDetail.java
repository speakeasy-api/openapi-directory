/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class StoreDetail {
    @JsonProperty("address")
    public ViasAddress address;
    public StoreDetail withAddress(ViasAddress address) {
        this.address = address;
        return this;
    }
    
    /**
     * The phone number of the store provided as a single string.  It will be handled as a landline phone.
     * 
     * Examples: "0031 6 11 22 33 44", "+316/1122-3344", "(0031) 611223344"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullPhoneNumber")
    public String fullPhoneNumber;
    public StoreDetail withFullPhoneNumber(String fullPhoneNumber) {
        this.fullPhoneNumber = fullPhoneNumber;
        return this;
    }
    
    /**
     * Store logo for payment method setup.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logo")
    public String logo;
    public StoreDetail withLogo(String logo) {
        this.logo = logo;
        return this;
    }
    
    /**
     * The merchant account to which the store belongs.
     */
    @JsonProperty("merchantAccount")
    public String merchantAccount;
    public StoreDetail withMerchantAccount(String merchantAccount) {
        this.merchantAccount = merchantAccount;
        return this;
    }
    
    /**
     * The merchant category code (MCC) that classifies the business of the account holder.
     */
    @JsonProperty("merchantCategoryCode")
    public String merchantCategoryCode;
    public StoreDetail withMerchantCategoryCode(String merchantCategoryCode) {
        this.merchantCategoryCode = merchantCategoryCode;
        return this;
    }
    
    /**
     * Merchant house number for payment method setup.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantHouseNumber")
    public String merchantHouseNumber;
    public StoreDetail withMerchantHouseNumber(String merchantHouseNumber) {
        this.merchantHouseNumber = merchantHouseNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phoneNumber")
    public ViasPhoneNumber phoneNumber;
    public StoreDetail withPhoneNumber(ViasPhoneNumber phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }
    
    /**
     * The sales channel. Possible values: **Ecommerce**, **POS**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shopperInteraction")
    public StoreDetailShopperInteractionEnum shopperInteraction;
    public StoreDetail withShopperInteraction(StoreDetailShopperInteractionEnum shopperInteraction) {
        this.shopperInteraction = shopperInteraction;
        return this;
    }
    
    /**
     * The unique reference for the split configuration, returned when you configure splits in your Customer Area. When this is provided, the `virtualAccount` is also required. Adyen uses the configuration and the `virtualAccount` to split funds between accounts in your platform.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("splitConfigurationUUID")
    public String splitConfigurationUUID;
    public StoreDetail withSplitConfigurationUUID(String splitConfigurationUUID) {
        this.splitConfigurationUUID = splitConfigurationUUID;
        return this;
    }
    
    /**
     * The status of the store. Possible values: **Pending**, **Active**, **Inactive**, **InactiveWithModifications**, **Closed**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public StoreDetailStatusEnum status;
    public StoreDetail withStatus(StoreDetailStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Adyen-generated unique alphanumeric identifier (UUID) for the store, returned in the response when you create a store. Required when updating an existing store in an `/updateAccountHolder` request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("store")
    public String store;
    public StoreDetail withStore(String store) {
        this.store = store;
        return this;
    }
    
    /**
     * The name of the account holder's store. This value is shown in shopper statements.
     * 
     * * Length: Between 3 to 22 characters 
     * 
     * * The following characters are *not* supported: **:;}{$#@!|&lt;&gt;%^*+=\\**
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storeName")
    public String storeName;
    public StoreDetail withStoreName(String storeName) {
        this.storeName = storeName;
        return this;
    }
    
    /**
     * Your unique identifier for the store. The Customer Area also uses this value for the store description.
     * 
     *  * Length: Between 3 to 128 characters
     * 
     * * The following characters are *not* supported: **:;}{$#@!|&lt;&gt;%^*+=\\**
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storeReference")
    public String storeReference;
    public StoreDetail withStoreReference(String storeReference) {
        this.storeReference = storeReference;
        return this;
    }
    
    /**
     * The account holder's `accountCode` where the split amount will be sent. Required when you provide the `splitConfigurationUUID`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("virtualAccount")
    public String virtualAccount;
    public StoreDetail withVirtualAccount(String virtualAccount) {
        this.virtualAccount = virtualAccount;
        return this;
    }
    
    /**
     * URL of the ecommerce store.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAddress")
    public String webAddress;
    public StoreDetail withWebAddress(String webAddress) {
        this.webAddress = webAddress;
        return this;
    }
    
}
