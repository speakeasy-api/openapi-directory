/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorFieldType } from "./errorfieldtype";
import { Expose, Type } from "class-transformer";

/**
 * Speed with which payouts for this account are processed. Permitted values: `STANDARD`, `SAME_DAY`.
 */
export enum PayoutAccountHolderResponsePayoutSpeedEnum {
  Instant = "INSTANT",
  SameDay = "SAME_DAY",
  Standard = "STANDARD",
}

/**
 * OK - the request has succeeded.
 */
export class PayoutAccountHolderResponse extends SpeakeasyBase {
  /**
   * The unique ID of the Bank Account to which the payout was made.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bankAccountUUID" })
  bankAccountUUID?: string;

  /**
   * Contains field validation errors that would prevent requests from being processed.
   */
  @SpeakeasyMetadata({ elemType: ErrorFieldType })
  @Expose({ name: "invalidFields" })
  @Type(() => ErrorFieldType)
  invalidFields?: ErrorFieldType[];

  /**
   * The value supplied by the executing user when initiating the transfer; may be used to link multiple transactions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantReference" })
  merchantReference?: string;

  /**
   * Speed with which payouts for this account are processed. Permitted values: `STANDARD`, `SAME_DAY`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payoutSpeed" })
  payoutSpeed?: PayoutAccountHolderResponsePayoutSpeedEnum;

  /**
   * The reference of a request. Can be used to uniquely identify the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pspReference" })
  pspReference?: string;

  /**
   * The result code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resultCode" })
  resultCode?: string;
}
