// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AlarmStateNameEnum string

const (
	AlarmStateNameEnumDisabled       AlarmStateNameEnum = "DISABLED"
	AlarmStateNameEnumNormal         AlarmStateNameEnum = "NORMAL"
	AlarmStateNameEnumActive         AlarmStateNameEnum = "ACTIVE"
	AlarmStateNameEnumAcknowledged   AlarmStateNameEnum = "ACKNOWLEDGED"
	AlarmStateNameEnumSnoozeDisabled AlarmStateNameEnum = "SNOOZE_DISABLED"
	AlarmStateNameEnumLatched        AlarmStateNameEnum = "LATCHED"
)

func (e *AlarmStateNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DISABLED":
		fallthrough
	case "NORMAL":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "ACKNOWLEDGED":
		fallthrough
	case "SNOOZE_DISABLED":
		fallthrough
	case "LATCHED":
		*e = AlarmStateNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AlarmStateNameEnum: %s", s)
	}
}
