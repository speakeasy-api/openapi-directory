"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class ConferenceRecordStartParametersFileFormatEnum(str, Enum):
    r"""File format (extension)"""
    WAV = 'wav'
    MP3 = 'mp3'


@dataclasses.dataclass
class ConferenceRecordStartParameters:
    r"""POST parameters"""
    
    conference_name: str = dataclasses.field(metadata={'form': { 'field_name': 'ConferenceName' }})
    r"""Name of the conference in question"""  
    file_format: Optional[ConferenceRecordStartParametersFileFormatEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'FileFormat' }})
    r"""File format (extension)"""  
    file_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'FileName' }})
    r"""Recording file name (without extension); if empty, a timestamp based file name will be generated"""  
    file_path: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'FilePath' }})
    r"""Directory path/URI where the recording file will be saved"""  
    