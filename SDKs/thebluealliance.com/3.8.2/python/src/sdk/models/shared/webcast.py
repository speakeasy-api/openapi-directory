"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class WebcastTypeEnum(str, Enum):
    r"""Type of webcast, typically descriptive of the streaming provider."""
    YOUTUBE = 'youtube'
    TWITCH = 'twitch'
    USTREAM = 'ustream'
    IFRAME = 'iframe'
    HTML5 = 'html5'
    RTMP = 'rtmp'
    LIVESTREAM = 'livestream'
    DIRECT_LINK = 'direct_link'
    MMS = 'mms'
    JUSTIN = 'justin'
    STEMTV = 'stemtv'
    DACAST = 'dacast'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Webcast:
    
    channel: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channel') }})
    r"""Type specific channel information. May be the YouTube stream, or Twitch channel name. In the case of iframe types, contains HTML to embed the stream in an HTML iframe."""  
    type: WebcastTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Type of webcast, typically descriptive of the streaming provider."""  
    date_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date'), 'exclude': lambda f: f is None }})
    r"""The date for the webcast in `yyyy-mm-dd` format. May be null."""  
    file: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file'), 'exclude': lambda f: f is None }})
    r"""File identification as may be required for some types. May be null."""  
    