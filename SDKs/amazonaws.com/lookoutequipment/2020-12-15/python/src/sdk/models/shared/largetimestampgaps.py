"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import statisticalissuestatus_enum as shared_statisticalissuestatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LargeTimestampGaps:
    r"""Entity that comprises information on large gaps between consecutive timestamps in data."""
    
    status: shared_statisticalissuestatus_enum.StatisticalIssueStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status') }})  
    max_timestamp_gap_in_days: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxTimestampGapInDays'), 'exclude': lambda f: f is None }})  
    number_of_large_timestamp_gaps: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NumberOfLargeTimestampGaps'), 'exclude': lambda f: f is None }})  
    