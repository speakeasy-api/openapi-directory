/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * A person's gender (can be unknown).
 */
export enum NameGenderEnum {
  Male = "MALE",
  Female = "FEMALE",
  Unknown = "UNKNOWN",
}

export class Name extends SpeakeasyBase {
  /**
   * A person's first name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstName" })
  firstName: string;

  /**
   * A person's gender (can be unknown).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gender" })
  gender: NameGenderEnum;

  /**
   * A person name's infix, if applicable. Maximum length: 20 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "infix" })
  infix?: string;

  /**
   * A person's last name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastName" })
  lastName: string;
}
