"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class UpdateNetworkApplianceFirewallSettingsRequestBodySpoofingProtectionIPSourceGuardModeEnum(str, Enum):
    r"""Mode of protection"""
    BLOCK = 'block'
    LOG = 'log'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkApplianceFirewallSettingsRequestBodySpoofingProtectionIPSourceGuard:
    r"""IP source address spoofing settings"""
    
    mode: Optional[UpdateNetworkApplianceFirewallSettingsRequestBodySpoofingProtectionIPSourceGuardModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mode'), 'exclude': lambda f: f is None }})
    r"""Mode of protection"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkApplianceFirewallSettingsRequestBodySpoofingProtection:
    r"""Spoofing protection settings"""
    
    ip_source_guard: Optional[UpdateNetworkApplianceFirewallSettingsRequestBodySpoofingProtectionIPSourceGuard] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ipSourceGuard'), 'exclude': lambda f: f is None }})
    r"""IP source address spoofing settings"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkApplianceFirewallSettingsRequestBody:
    
    spoofing_protection: Optional[UpdateNetworkApplianceFirewallSettingsRequestBodySpoofingProtection] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spoofingProtection'), 'exclude': lambda f: f is None }})
    r"""Spoofing protection settings"""  
    

@dataclasses.dataclass
class UpdateNetworkApplianceFirewallSettingsRequest:
    
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdateNetworkApplianceFirewallSettingsRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateNetworkApplianceFirewallSettingsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_network_appliance_firewall_settings_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    