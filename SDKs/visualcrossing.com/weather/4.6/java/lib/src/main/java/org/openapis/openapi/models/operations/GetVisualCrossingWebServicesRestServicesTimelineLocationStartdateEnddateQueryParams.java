/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetVisualCrossingWebServicesRestServicesTimelineLocationStartdateEnddateQueryParams {
    /**
     * data format of the output either json or CSV
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=contentType")
    public String contentType;
    public GetVisualCrossingWebServicesRestServicesTimelineLocationStartdateEnddateQueryParams withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * data to include in the output (required for CSV format - days,hours,alerts,current,events )
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=include")
    public String include;
    public GetVisualCrossingWebServicesRestServicesTimelineLocationStartdateEnddateQueryParams withInclude(String include) {
        this.include = include;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;
    public GetVisualCrossingWebServicesRestServicesTimelineLocationStartdateEnddateQueryParams withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * Language to use for weather descriptions
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=lang")
    public String lang;
    public GetVisualCrossingWebServicesRestServicesTimelineLocationStartdateEnddateQueryParams withLang(String lang) {
        this.lang = lang;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=unitGroup")
    public String unitGroup;
    public GetVisualCrossingWebServicesRestServicesTimelineLocationStartdateEnddateQueryParams withUnitGroup(String unitGroup) {
        this.unitGroup = unitGroup;
        return this;
    }
    
}
