// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var ListUnderstandQueryServerList = []string{
	"https://preview.twilio.com",
}

type ListUnderstandQuerySecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type ListUnderstandQueryRequest struct {
	// The unique ID of the parent Assistant.
	AssistantSid string `pathParam:"style=simple,explode=false,name=AssistantSid"`
	// An ISO language-country string of the sample.
	Language *string `queryParam:"style=form,explode=true,name=Language"`
	// The Model Build Sid or unique name of the Model Build to be queried.
	ModelBuild *string `queryParam:"style=form,explode=true,name=ModelBuild"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
	// A string that described the query status. The values can be: pending_review, reviewed, discarded
	Status *string `queryParam:"style=form,explode=true,name=Status"`
}

type ListUnderstandQueryListUnderstandQueryResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListUnderstandQueryListUnderstandQueryResponse - OK
type ListUnderstandQueryListUnderstandQueryResponse struct {
	Meta    *ListUnderstandQueryListUnderstandQueryResponseMeta `json:"meta,omitempty"`
	Queries []shared.PreviewUnderstandAssistantQuery            `json:"queries,omitempty"`
}

type ListUnderstandQueryResponse struct {
	ContentType string
	// OK
	ListUnderstandQueryResponse *ListUnderstandQueryListUnderstandQueryResponse
	StatusCode                  int
	RawResponse                 *http.Response
}
