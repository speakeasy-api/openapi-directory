// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETResetSnapshotAttributeActionEnum
type GETResetSnapshotAttributeActionEnum string

const (
	GETResetSnapshotAttributeActionEnumResetSnapshotAttribute GETResetSnapshotAttributeActionEnum = "ResetSnapshotAttribute"
)

func (e *GETResetSnapshotAttributeActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ResetSnapshotAttribute":
		*e = GETResetSnapshotAttributeActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETResetSnapshotAttributeActionEnum: %s", s)
	}
}

// GETResetSnapshotAttributeAttributeEnum - The attribute to reset. Currently, only the attribute for permission to create volumes can be reset.
type GETResetSnapshotAttributeAttributeEnum string

const (
	GETResetSnapshotAttributeAttributeEnumProductCodes           GETResetSnapshotAttributeAttributeEnum = "productCodes"
	GETResetSnapshotAttributeAttributeEnumCreateVolumePermission GETResetSnapshotAttributeAttributeEnum = "createVolumePermission"
)

func (e *GETResetSnapshotAttributeAttributeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "productCodes":
		fallthrough
	case "createVolumePermission":
		*e = GETResetSnapshotAttributeAttributeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETResetSnapshotAttributeAttributeEnum: %s", s)
	}
}

// GETResetSnapshotAttributeVersionEnum
type GETResetSnapshotAttributeVersionEnum string

const (
	GETResetSnapshotAttributeVersionEnumTwoThousandAndSixteen1115 GETResetSnapshotAttributeVersionEnum = "2016-11-15"
)

func (e *GETResetSnapshotAttributeVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETResetSnapshotAttributeVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETResetSnapshotAttributeVersionEnum: %s", s)
	}
}

type GETResetSnapshotAttributeRequest struct {
	Action GETResetSnapshotAttributeActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The attribute to reset. Currently, only the attribute for permission to create volumes can be reset.
	Attribute GETResetSnapshotAttributeAttributeEnum `queryParam:"style=form,explode=true,name=Attribute"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the snapshot.
	SnapshotID        string                               `queryParam:"style=form,explode=true,name=SnapshotId"`
	Version           GETResetSnapshotAttributeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETResetSnapshotAttributeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
