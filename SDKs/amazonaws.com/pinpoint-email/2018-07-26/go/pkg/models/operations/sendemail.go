// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type SendEmailHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// SendEmailRequestBodyContent - An object that defines the entire content of the email, including the message headers and the body content. You can create a simple email message, in which you specify the subject and the text and HTML versions of the message body. You can also create raw messages, in which you specify a complete MIME-formatted message. Raw messages can include attachments and custom headers.
type SendEmailRequestBodyContent struct {
	Raw      *shared.RawMessage `json:"Raw,omitempty"`
	Simple   *shared.Message    `json:"Simple,omitempty"`
	Template *shared.Template   `json:"Template,omitempty"`
}

// SendEmailRequestBodyDestination - An object that describes the recipients for an email.
type SendEmailRequestBodyDestination struct {
	BccAddresses []string `json:"BccAddresses,omitempty"`
	CcAddresses  []string `json:"CcAddresses,omitempty"`
	ToAddresses  []string `json:"ToAddresses,omitempty"`
}

type SendEmailRequestBody struct {
	// <p>The name of a configuration set.</p> <p>In Amazon Pinpoint, <i>configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>
	ConfigurationSetName *string `json:"ConfigurationSetName,omitempty"`
	// An object that defines the entire content of the email, including the message headers and the body content. You can create a simple email message, in which you specify the subject and the text and HTML versions of the message body. You can also create raw messages, in which you specify a complete MIME-formatted message. Raw messages can include attachments and custom headers.
	Content SendEmailRequestBodyContent `json:"Content"`
	// An object that describes the recipients for an email.
	Destination SendEmailRequestBodyDestination `json:"Destination"`
	// A list of message tags.
	EmailTags []shared.MessageTag `json:"EmailTags,omitempty"`
	// The address that Amazon Pinpoint should send bounce and complaint notifications to.
	FeedbackForwardingEmailAddress *string `json:"FeedbackForwardingEmailAddress,omitempty"`
	// The email address that you want to use as the "From" address for the email. The address that you specify has to be verified.
	FromEmailAddress *string `json:"FromEmailAddress,omitempty"`
	// The "Reply-to" email addresses for the message. When the recipient replies to the message, each Reply-to address receives the reply.
	ReplyToAddresses []string `json:"ReplyToAddresses,omitempty"`
}

type SendEmailRequest struct {
	Headers SendEmailHeaders
	Request SendEmailRequestBody `request:"mediaType=application/json"`
}

type SendEmailResponse struct {
	// AccountSuspendedException
	AccountSuspendedException interface{}
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// LimitExceededException
	LimitExceededException interface{}
	// MailFromDomainNotVerifiedException
	MailFromDomainNotVerifiedException interface{}
	// MessageRejected
	MessageRejected interface{}
	// NotFoundException
	NotFoundException interface{}
	// Success
	SendEmailResponse *shared.SendEmailResponse
	StatusCode        int
	RawResponse       *http.Response
	// SendingPausedException
	SendingPausedException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
