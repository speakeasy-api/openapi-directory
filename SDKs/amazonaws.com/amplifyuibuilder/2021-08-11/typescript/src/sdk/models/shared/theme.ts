/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ThemeValues } from "./themevalues";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A theme is a collection of style settings that apply globally to the components associated with an Amplify application.
 */
export class Theme extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "appId" })
  appId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "environmentName" })
  environmentName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "modifiedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  modifiedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata({ elemType: ThemeValues })
  @Expose({ name: "overrides" })
  @Type(() => ThemeValues)
  overrides?: ThemeValues[];

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata({ elemType: ThemeValues })
  @Expose({ name: "values" })
  @Type(() => ThemeValues)
  values: ThemeValues[];
}
