"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import application_enum as shared_application_enum
from ..shared import tag as shared_tag
from ..shared import workspaceimageingestionprocess_enum as shared_workspaceimageingestionprocess_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ImportWorkspaceImageRequest:
    
    ec2_image_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Ec2ImageId') }})  
    image_description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ImageDescription') }})  
    image_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ImageName') }})  
    ingestion_process: shared_workspaceimageingestionprocess_enum.WorkspaceImageIngestionProcessEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IngestionProcess') }})  
    applications: Optional[list[shared_application_enum.ApplicationEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Applications'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    