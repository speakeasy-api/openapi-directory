"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import legacytrackingchannelcatalog as shared_legacytrackingchannelcatalog
from ..shared import legacytrackingchannelcataloglistlinks as shared_legacytrackingchannelcataloglistlinks
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LegacyTrackingChannelCatalogList:
    r"""This is the index of the channel catalog API"""
    
    channel_catalogs: Optional[dict[str, shared_legacytrackingchannelcatalog.LegacyTrackingChannelCatalog]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channelCatalogs'), 'exclude': lambda f: f is None }})
    r"""The channel catalog list. The key is the channel catalog identifier"""  
    links: Optional[shared_legacytrackingchannelcataloglistlinks.LegacyTrackingChannelCatalogListLinks] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('links'), 'exclude': lambda f: f is None }})
    r"""Indicates how global actions you can do like how to create a channel catalog, exclusion filter operators, etc..."""  
    