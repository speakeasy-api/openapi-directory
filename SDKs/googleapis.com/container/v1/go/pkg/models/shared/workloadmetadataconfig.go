// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// WorkloadMetadataConfigModeEnum - Mode is the configuration for how to expose metadata to workloads running on the node pool.
type WorkloadMetadataConfigModeEnum string

const (
	WorkloadMetadataConfigModeEnumModeUnspecified WorkloadMetadataConfigModeEnum = "MODE_UNSPECIFIED"
	WorkloadMetadataConfigModeEnumGceMetadata     WorkloadMetadataConfigModeEnum = "GCE_METADATA"
	WorkloadMetadataConfigModeEnumGkeMetadata     WorkloadMetadataConfigModeEnum = "GKE_METADATA"
)

func (e *WorkloadMetadataConfigModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MODE_UNSPECIFIED":
		fallthrough
	case "GCE_METADATA":
		fallthrough
	case "GKE_METADATA":
		*e = WorkloadMetadataConfigModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkloadMetadataConfigModeEnum: %s", s)
	}
}

// WorkloadMetadataConfig - WorkloadMetadataConfig defines the metadata configuration to expose to workloads on the node pool.
type WorkloadMetadataConfig struct {
	// Mode is the configuration for how to expose metadata to workloads running on the node pool.
	Mode *WorkloadMetadataConfigModeEnum `json:"mode,omitempty"`
}
