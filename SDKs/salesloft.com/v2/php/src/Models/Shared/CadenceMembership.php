<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CadenceMembership - Success
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CadenceMembership
{
    /**
     * Datetime of when the person was last added to this cadence
     * 
     * @var ?\DateTime $addedAt
     */
	
    public ?\DateTime $addedAt = null;
    
	
    public ?EmbeddedResource $cadence = null;
    
	
    public ?CadenceMembershipCounts $counts = null;
    
    /**
     * Datetime of when the person was first added to this cadence
     * 
     * @var ?\DateTime $createdAt
     */
	
    public ?\DateTime $createdAt = null;
    
    /**
     * The current state of the person on the cadence. Possible values are:
     * 
     * 
     * processing: The person is being processed on a cadence. Cadence-related changes cannot be made at this time
     * 
     * staged: The person is waiting for the first step in the cadence to occur
     * 
     * active: The cadence has begun processing this person and is still in the process, but idle
     * 
     * scheduled: The cadence has begun processing this person and is still in the process, with an activity scheduled to occur
     * 
     * completed: The cadence has been completed for this person
     * 
     * removed: The person was manually or automatically removed from the cadence
     * 
     * removed_no_action: The person was removed from the cadence before any action occurred
     * 
     * reassigned: The person's cadence execution was transferred to a different user, ending this user's interaction
     * 
     * 
     * @var ?string $currentState
     */
	
    public ?string $currentState = null;
    
    /**
     * Whether the person is currently on the cadence
     * 
     * @var ?bool $currentlyOnCadence
     */
	
    public ?bool $currentlyOnCadence = null;
    
    /**
     * Cadence membership ID
     * 
     * @var ?int $id
     */
	
    public ?int $id = null;
    
	
    public ?EmbeddedResource $latestAction = null;
    
	
    public ?EmbeddedResource $person = null;
    
    /**
     * Whether the associated person has since been deleted
     * 
     * @var ?bool $personDeleted
     */
	
    public ?bool $personDeleted = null;
    
    /**
     * Datetime of when the record was last updated
     * 
     * @var ?\DateTime $updatedAt
     */
	
    public ?\DateTime $updatedAt = null;
    
	
    public ?EmbeddedResource $user = null;
    
	public function __construct()
	{
		$this->addedAt = null;
		$this->cadence = null;
		$this->counts = null;
		$this->createdAt = null;
		$this->currentState = null;
		$this->currentlyOnCadence = null;
		$this->id = null;
		$this->latestAction = null;
		$this->person = null;
		$this->personDeleted = null;
		$this->updatedAt = null;
		$this->user = null;
	}
}
