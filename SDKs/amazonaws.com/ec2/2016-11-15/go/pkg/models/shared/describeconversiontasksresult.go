// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DescribeConversionTasksResultConversionTasksImportInstancePlatformEnum - The instance operating system.
type DescribeConversionTasksResultConversionTasksImportInstancePlatformEnum string

const (
	DescribeConversionTasksResultConversionTasksImportInstancePlatformEnumWindows DescribeConversionTasksResultConversionTasksImportInstancePlatformEnum = "Windows"
)

func (e DescribeConversionTasksResultConversionTasksImportInstancePlatformEnum) ToPointer() *DescribeConversionTasksResultConversionTasksImportInstancePlatformEnum {
	return &e
}

func (e *DescribeConversionTasksResultConversionTasksImportInstancePlatformEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Windows":
		*e = DescribeConversionTasksResultConversionTasksImportInstancePlatformEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeConversionTasksResultConversionTasksImportInstancePlatformEnum: %v", v)
	}
}

// DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum - The disk image format.
type DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum string

const (
	DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnumVmdk DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum = "VMDK"
	DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnumRaw  DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum = "RAW"
	DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnumVhd  DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum = "VHD"
)

func (e DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum) ToPointer() *DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum {
	return &e
}

func (e *DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VMDK":
		fallthrough
	case "RAW":
		fallthrough
	case "VHD":
		*e = DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum: %v", v)
	}
}

// DescribeConversionTasksResultConversionTasksImportInstanceVolumesImage - The image.
type DescribeConversionTasksResultConversionTasksImportInstanceVolumesImage struct {
	Checksum          *string
	Format            *DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum
	ImportManifestURL *string
	Size              *int64
}

// DescribeConversionTasksResultConversionTasksImportInstanceVolumesVolume - The volume.
type DescribeConversionTasksResultConversionTasksImportInstanceVolumesVolume struct {
	ID   *string
	Size *int64
}

// DescribeConversionTasksResultConversionTasksImportInstanceVolumes - Describes an import volume task.
type DescribeConversionTasksResultConversionTasksImportInstanceVolumes struct {
	AvailabilityZone *string
	BytesConverted   *int64
	Description      *string
	Image            *DescribeConversionTasksResultConversionTasksImportInstanceVolumesImage
	Status           *string
	StatusMessage    *string
	Volume           *DescribeConversionTasksResultConversionTasksImportInstanceVolumesVolume
}

// DescribeConversionTasksResultConversionTasksImportInstance - If the task is for importing an instance, this contains information about the import instance task.
type DescribeConversionTasksResultConversionTasksImportInstance struct {
	Description *string
	InstanceID  *string
	Platform    *DescribeConversionTasksResultConversionTasksImportInstancePlatformEnum
	Volumes     []DescribeConversionTasksResultConversionTasksImportInstanceVolumes
}

// DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum - The disk image format.
type DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum string

const (
	DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnumVmdk DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum = "VMDK"
	DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnumRaw  DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum = "RAW"
	DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnumVhd  DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum = "VHD"
)

func (e DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum) ToPointer() *DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum {
	return &e
}

func (e *DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VMDK":
		fallthrough
	case "RAW":
		fallthrough
	case "VHD":
		*e = DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum: %v", v)
	}
}

// DescribeConversionTasksResultConversionTasksImportVolumeImage - The image.
type DescribeConversionTasksResultConversionTasksImportVolumeImage struct {
	Checksum          *string
	Format            *DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum
	ImportManifestURL *string
	Size              *int64
}

// DescribeConversionTasksResultConversionTasksImportVolumeVolume - The volume.
type DescribeConversionTasksResultConversionTasksImportVolumeVolume struct {
	ID   *string
	Size *int64
}

// DescribeConversionTasksResultConversionTasksImportVolume - If the task is for importing a volume, this contains information about the import volume task.
type DescribeConversionTasksResultConversionTasksImportVolume struct {
	AvailabilityZone *string
	BytesConverted   *int64
	Description      *string
	Image            *DescribeConversionTasksResultConversionTasksImportVolumeImage
	Volume           *DescribeConversionTasksResultConversionTasksImportVolumeVolume
}

// DescribeConversionTasksResultConversionTasksStateEnum - The state of the conversion task.
type DescribeConversionTasksResultConversionTasksStateEnum string

const (
	DescribeConversionTasksResultConversionTasksStateEnumActive     DescribeConversionTasksResultConversionTasksStateEnum = "active"
	DescribeConversionTasksResultConversionTasksStateEnumCancelling DescribeConversionTasksResultConversionTasksStateEnum = "cancelling"
	DescribeConversionTasksResultConversionTasksStateEnumCancelled  DescribeConversionTasksResultConversionTasksStateEnum = "cancelled"
	DescribeConversionTasksResultConversionTasksStateEnumCompleted  DescribeConversionTasksResultConversionTasksStateEnum = "completed"
)

func (e DescribeConversionTasksResultConversionTasksStateEnum) ToPointer() *DescribeConversionTasksResultConversionTasksStateEnum {
	return &e
}

func (e *DescribeConversionTasksResultConversionTasksStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "cancelling":
		fallthrough
	case "cancelled":
		fallthrough
	case "completed":
		*e = DescribeConversionTasksResultConversionTasksStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeConversionTasksResultConversionTasksStateEnum: %v", v)
	}
}

// DescribeConversionTasksResultConversionTasksTags - Describes a tag.
type DescribeConversionTasksResultConversionTasksTags struct {
	Key   *string
	Value *string
}

// DescribeConversionTasksResultConversionTasks - Describes a conversion task.
type DescribeConversionTasksResultConversionTasks struct {
	ConversionTaskID *string
	ExpirationTime   *string
	ImportInstance   *DescribeConversionTasksResultConversionTasksImportInstance
	ImportVolume     *DescribeConversionTasksResultConversionTasksImportVolume
	State            *DescribeConversionTasksResultConversionTasksStateEnum
	StatusMessage    *string
	Tags             []DescribeConversionTasksResultConversionTasksTags
}

// DescribeConversionTasksResult - Success
type DescribeConversionTasksResult struct {
	ConversionTasks []DescribeConversionTasksResultConversionTasks
}
