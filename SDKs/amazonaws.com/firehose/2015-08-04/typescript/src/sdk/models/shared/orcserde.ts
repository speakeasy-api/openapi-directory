/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OrcCompressionEnum } from "./orccompressionenum";
import { OrcFormatVersionEnum } from "./orcformatversionenum";
import { Expose } from "class-transformer";

/**
 * A serializer to use for converting data to the ORC format before storing it in Amazon S3. For more information, see <a href="https://orc.apache.org/docs/">Apache ORC</a>.
 */
export class OrcSerDe extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BlockSizeBytes" })
  blockSizeBytes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "BloomFilterColumns" })
  bloomFilterColumns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "BloomFilterFalsePositiveProbability" })
  bloomFilterFalsePositiveProbability?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Compression" })
  compression?: OrcCompressionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "DictionaryKeyThreshold" })
  dictionaryKeyThreshold?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "EnablePadding" })
  enablePadding?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "FormatVersion" })
  formatVersion?: OrcFormatVersionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "PaddingTolerance" })
  paddingTolerance?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "RowIndexStride" })
  rowIndexStride?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "StripeSizeBytes" })
  stripeSizeBytes?: number;
}
