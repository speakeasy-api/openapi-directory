"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReplaceTransitGatewayRouteResult = exports.ReplaceTransitGatewayRouteResultRoute = exports.ReplaceTransitGatewayRouteResultRouteTypeEnum = exports.ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachments = exports.ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum = exports.ReplaceTransitGatewayRouteResultRouteStateEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The state of the route.
 */
var ReplaceTransitGatewayRouteResultRouteStateEnum;
(function (ReplaceTransitGatewayRouteResultRouteStateEnum) {
    ReplaceTransitGatewayRouteResultRouteStateEnum["Pending"] = "pending";
    ReplaceTransitGatewayRouteResultRouteStateEnum["Active"] = "active";
    ReplaceTransitGatewayRouteResultRouteStateEnum["Blackhole"] = "blackhole";
    ReplaceTransitGatewayRouteResultRouteStateEnum["Deleting"] = "deleting";
    ReplaceTransitGatewayRouteResultRouteStateEnum["Deleted"] = "deleted";
})(ReplaceTransitGatewayRouteResultRouteStateEnum = exports.ReplaceTransitGatewayRouteResultRouteStateEnum || (exports.ReplaceTransitGatewayRouteResultRouteStateEnum = {}));
/**
 * The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
 */
var ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum;
(function (ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum) {
    ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum["Vpc"] = "vpc";
    ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum["Vpn"] = "vpn";
    ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum["DirectConnectGateway"] = "direct-connect-gateway";
    ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum["Connect"] = "connect";
    ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum["Peering"] = "peering";
    ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum["TgwPeering"] = "tgw-peering";
})(ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum = exports.ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum || (exports.ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum = {}));
/**
 * Describes a route attachment.
 */
var ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachments = /** @class */ (function (_super) {
    __extends(ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachments, _super);
    function ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachments() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachments.prototype, "resourceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachments.prototype, "resourceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachments.prototype, "transitGatewayAttachmentId", void 0);
    return ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachments;
}(utils_1.SpeakeasyBase));
exports.ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachments = ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachments;
/**
 * The route type.
 */
var ReplaceTransitGatewayRouteResultRouteTypeEnum;
(function (ReplaceTransitGatewayRouteResultRouteTypeEnum) {
    ReplaceTransitGatewayRouteResultRouteTypeEnum["Static"] = "static";
    ReplaceTransitGatewayRouteResultRouteTypeEnum["Propagated"] = "propagated";
})(ReplaceTransitGatewayRouteResultRouteTypeEnum = exports.ReplaceTransitGatewayRouteResultRouteTypeEnum || (exports.ReplaceTransitGatewayRouteResultRouteTypeEnum = {}));
/**
 * Information about the modified route.
 */
var ReplaceTransitGatewayRouteResultRoute = /** @class */ (function (_super) {
    __extends(ReplaceTransitGatewayRouteResultRoute, _super);
    function ReplaceTransitGatewayRouteResultRoute() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ReplaceTransitGatewayRouteResultRoute.prototype, "destinationCidrBlock", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ReplaceTransitGatewayRouteResultRoute.prototype, "prefixListId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ReplaceTransitGatewayRouteResultRoute.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachments,
        }),
        __metadata("design:type", Array)
    ], ReplaceTransitGatewayRouteResultRoute.prototype, "transitGatewayAttachments", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ReplaceTransitGatewayRouteResultRoute.prototype, "transitGatewayRouteTableAnnouncementId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ReplaceTransitGatewayRouteResultRoute.prototype, "type", void 0);
    return ReplaceTransitGatewayRouteResultRoute;
}(utils_1.SpeakeasyBase));
exports.ReplaceTransitGatewayRouteResultRoute = ReplaceTransitGatewayRouteResultRoute;
/**
 * Success
 */
var ReplaceTransitGatewayRouteResult = /** @class */ (function (_super) {
    __extends(ReplaceTransitGatewayRouteResult, _super);
    function ReplaceTransitGatewayRouteResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ReplaceTransitGatewayRouteResultRoute)
    ], ReplaceTransitGatewayRouteResult.prototype, "route", void 0);
    return ReplaceTransitGatewayRouteResult;
}(utils_1.SpeakeasyBase));
exports.ReplaceTransitGatewayRouteResult = ReplaceTransitGatewayRouteResult;
