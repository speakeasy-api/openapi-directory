<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ProjectPayment
{
    /**
     * Last 4 digits of the credit card you are using one-time. This parameter is only required when stripe_token is provided.
     * 
     * @var ?string $bin
     */
	#[\JMS\Serializer\Annotation\SerializedName('bin')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bin = null;
    
    /**
     * Optional with corporate accounts. Not available for others.
     * 
     * @var ?string $budgetCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('budget_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $budgetCode = null;
    
    /**
     * Optional. `client`, `app`, `corporate_card` methods require a credit card ID. `credit` method requires Stripe token and bin.
     * 
     * @var ?int $cardId
     */
	#[\JMS\Serializer\Annotation\SerializedName('card_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $cardId = null;
    
    /**
     * Optional. `corporate` payment method requires this.s
     * 
     * @var ?string $paymentCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('payment_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentCode = null;
    
    /**
     * Optional. Determines which method to use for payment. `client`, `app`, `corporate_card` methods require a credit card ID. `credit` method requires Stripe token and bin. `corporate` method follows corporate account policy automatically, either follows invoicing flow or automatically charges corporate's primary card.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ProjectPaymentPaymentMethodEnum $paymentMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('payment_method')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ProjectPaymentPaymentMethodEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ProjectPaymentPaymentMethodEnum $paymentMethod = null;
    
    /**
     * This is required if you are using a one-time credit card. This is the token generted from frontend via Stripe SDK. If you are using a one-time card with `stripe_token`, you must also provide `bin`, last 4 digits of the card.
     * 
     * @var ?string $stripeToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('stripe_token')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stripeToken = null;
    
	public function __construct()
	{
		$this->bin = null;
		$this->budgetCode = null;
		$this->cardId = null;
		$this->paymentCode = null;
		$this->paymentMethod = null;
		$this->stripeToken = null;
	}
}
