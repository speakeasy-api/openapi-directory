"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class PodcastsSubmitRejectedResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PodcastsSubmitRejectedRequestBodyPodcast:
    
    rss: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rss'), 'exclude': lambda f: f is None }})
    r"""RSS url of this podcast. This field is available only in the PRO/ENTERPRISE plan."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PodcastsSubmitRejectedRequestBody:
    r"""Triggered by your request to POST /podcasts/submit, if the podcast submission is rejected."""
    
    podcast: Optional[PodcastsSubmitRejectedRequestBodyPodcast] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('podcast'), 'exclude': lambda f: f is None }})  
    