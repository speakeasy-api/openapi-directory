<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CreateACheckTransferParameters
{
    /**
     * The identifier for the account that will send the transfer.
     * 
     * @var string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $accountId;
    
    /**
     * The city of the check's destination.
     * 
     * @var string $addressCity
     */
	#[\JMS\Serializer\Annotation\SerializedName('address_city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $addressCity;
    
    /**
     * The street address of the check's destination.
     * 
     * @var string $addressLine1
     */
	#[\JMS\Serializer\Annotation\SerializedName('address_line1')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $addressLine1;
    
    /**
     * The second line of the address of the check's destination.
     * 
     * @var ?string $addressLine2
     */
	#[\JMS\Serializer\Annotation\SerializedName('address_line2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressLine2 = null;
    
    /**
     * The state of the check's destination.
     * 
     * @var string $addressState
     */
	#[\JMS\Serializer\Annotation\SerializedName('address_state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $addressState;
    
    /**
     * The postal code of the check's destination.
     * 
     * @var string $addressZip
     */
	#[\JMS\Serializer\Annotation\SerializedName('address_zip')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $addressZip;
    
    /**
     * The transfer amount in cents.
     * 
     * @var int $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $amount;
    
    /**
     * The descriptor that will be printed on the memo field on the check.
     * 
     * @var string $message
     */
	#[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $message;
    
    /**
     * The descriptor that will be printed on the letter included with the check.
     * 
     * @var ?string $note
     */
	#[\JMS\Serializer\Annotation\SerializedName('note')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $note = null;
    
    /**
     * The name that will be printed on the check.
     * 
     * @var string $recipientName
     */
	#[\JMS\Serializer\Annotation\SerializedName('recipient_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $recipientName;
    
    /**
     * Whether the transfer requires explicit approval via the dashboard or API.
     * 
     * @var ?bool $requireApproval
     */
	#[\JMS\Serializer\Annotation\SerializedName('require_approval')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $requireApproval = null;
    
    /**
     * The return address to be printed on the check. If omitted this will default to the address of the Entity of the Account used to make the Check Transfer.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateACheckTransferParametersReturnAddress $returnAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('return_address')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CreateACheckTransferParametersReturnAddress')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateACheckTransferParametersReturnAddress $returnAddress = null;
    
	public function __construct()
	{
		$this->accountId = "";
		$this->addressCity = "";
		$this->addressLine1 = "";
		$this->addressLine2 = null;
		$this->addressState = "";
		$this->addressZip = "";
		$this->amount = 0;
		$this->message = "";
		$this->note = null;
		$this->recipientName = "";
		$this->requireApproval = null;
		$this->returnAddress = null;
	}
}
