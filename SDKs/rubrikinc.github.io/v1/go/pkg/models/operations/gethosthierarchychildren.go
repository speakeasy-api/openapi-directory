// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetHostHierarchyChildrenObjectTypeEnum - Filter by node object type.
type GetHostHierarchyChildrenObjectTypeEnum string

const (
	GetHostHierarchyChildrenObjectTypeEnumHost  GetHostHierarchyChildrenObjectTypeEnum = "Host"
	GetHostHierarchyChildrenObjectTypeEnumShare GetHostHierarchyChildrenObjectTypeEnum = "Share"
)

func (e GetHostHierarchyChildrenObjectTypeEnum) ToPointer() *GetHostHierarchyChildrenObjectTypeEnum {
	return &e
}

func (e *GetHostHierarchyChildrenObjectTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Host":
		fallthrough
	case "Share":
		*e = GetHostHierarchyChildrenObjectTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetHostHierarchyChildrenObjectTypeEnum: %v", v)
	}
}

// GetHostHierarchyChildrenOperatingSystemTypeEnum - Filter the summary information based on the operating system type. Accepted values are 'Windows', 'UnixLike', 'ANY', 'NONE'.
// Use **_NONE_** to only return information for hosts templates that do not have operating system type set.
// Use **_ANY_** to only return information for hosts that have operating system type set.
type GetHostHierarchyChildrenOperatingSystemTypeEnum string

const (
	GetHostHierarchyChildrenOperatingSystemTypeEnumAny      GetHostHierarchyChildrenOperatingSystemTypeEnum = "ANY"
	GetHostHierarchyChildrenOperatingSystemTypeEnumNone     GetHostHierarchyChildrenOperatingSystemTypeEnum = "NONE"
	GetHostHierarchyChildrenOperatingSystemTypeEnumUnixLike GetHostHierarchyChildrenOperatingSystemTypeEnum = "UnixLike"
	GetHostHierarchyChildrenOperatingSystemTypeEnumWindows  GetHostHierarchyChildrenOperatingSystemTypeEnum = "Windows"
)

func (e GetHostHierarchyChildrenOperatingSystemTypeEnum) ToPointer() *GetHostHierarchyChildrenOperatingSystemTypeEnum {
	return &e
}

func (e *GetHostHierarchyChildrenOperatingSystemTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ANY":
		fallthrough
	case "NONE":
		fallthrough
	case "UnixLike":
		fallthrough
	case "Windows":
		*e = GetHostHierarchyChildrenOperatingSystemTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetHostHierarchyChildrenOperatingSystemTypeEnum: %v", v)
	}
}

// GetHostHierarchyChildrenSLAAssignmentEnum - Limit a response to the results that have the specified SLA Domain assignment type.
type GetHostHierarchyChildrenSLAAssignmentEnum string

const (
	GetHostHierarchyChildrenSLAAssignmentEnumDerived    GetHostHierarchyChildrenSLAAssignmentEnum = "Derived"
	GetHostHierarchyChildrenSLAAssignmentEnumDirect     GetHostHierarchyChildrenSLAAssignmentEnum = "Direct"
	GetHostHierarchyChildrenSLAAssignmentEnumUnassigned GetHostHierarchyChildrenSLAAssignmentEnum = "Unassigned"
)

func (e GetHostHierarchyChildrenSLAAssignmentEnum) ToPointer() *GetHostHierarchyChildrenSLAAssignmentEnum {
	return &e
}

func (e *GetHostHierarchyChildrenSLAAssignmentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Derived":
		fallthrough
	case "Direct":
		fallthrough
	case "Unassigned":
		*e = GetHostHierarchyChildrenSLAAssignmentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetHostHierarchyChildrenSLAAssignmentEnum: %v", v)
	}
}

// GetHostHierarchyChildrenSortByEnum - Attribute to sort the results on.
type GetHostHierarchyChildrenSortByEnum string

const (
	GetHostHierarchyChildrenSortByEnumStatus      GetHostHierarchyChildrenSortByEnum = "Status"
	GetHostHierarchyChildrenSortByEnumName        GetHostHierarchyChildrenSortByEnum = "Name"
	GetHostHierarchyChildrenSortByEnumExportPoint GetHostHierarchyChildrenSortByEnum = "ExportPoint"
	GetHostHierarchyChildrenSortByEnumShareType   GetHostHierarchyChildrenSortByEnum = "ShareType"
	GetHostHierarchyChildrenSortByEnumHostname    GetHostHierarchyChildrenSortByEnum = "Hostname"
)

func (e GetHostHierarchyChildrenSortByEnum) ToPointer() *GetHostHierarchyChildrenSortByEnum {
	return &e
}

func (e *GetHostHierarchyChildrenSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Status":
		fallthrough
	case "Name":
		fallthrough
	case "ExportPoint":
		fallthrough
	case "ShareType":
		fallthrough
	case "Hostname":
		*e = GetHostHierarchyChildrenSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetHostHierarchyChildrenSortByEnum: %v", v)
	}
}

// GetHostHierarchyChildrenSortOrderEnum - Order for sorting the results, either ascending or descending.
type GetHostHierarchyChildrenSortOrderEnum string

const (
	GetHostHierarchyChildrenSortOrderEnumAsc  GetHostHierarchyChildrenSortOrderEnum = "asc"
	GetHostHierarchyChildrenSortOrderEnumDesc GetHostHierarchyChildrenSortOrderEnum = "desc"
)

func (e GetHostHierarchyChildrenSortOrderEnum) ToPointer() *GetHostHierarchyChildrenSortOrderEnum {
	return &e
}

func (e *GetHostHierarchyChildrenSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = GetHostHierarchyChildrenSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetHostHierarchyChildrenSortOrderEnum: %v", v)
	}
}

// GetHostHierarchyChildrenVendorTypeEnum - Filter by NAS vendor.
type GetHostHierarchyChildrenVendorTypeEnum string

const (
	GetHostHierarchyChildrenVendorTypeEnumIsilon     GetHostHierarchyChildrenVendorTypeEnum = "Isilon"
	GetHostHierarchyChildrenVendorTypeEnumNetApp     GetHostHierarchyChildrenVendorTypeEnum = "NetApp"
	GetHostHierarchyChildrenVendorTypeEnumFlashBlade GetHostHierarchyChildrenVendorTypeEnum = "FlashBlade"
)

func (e GetHostHierarchyChildrenVendorTypeEnum) ToPointer() *GetHostHierarchyChildrenVendorTypeEnum {
	return &e
}

func (e *GetHostHierarchyChildrenVendorTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Isilon":
		fallthrough
	case "NetApp":
		fallthrough
	case "FlashBlade":
		*e = GetHostHierarchyChildrenVendorTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetHostHierarchyChildrenVendorTypeEnum: %v", v)
	}
}

type GetHostHierarchyChildrenRequest struct {
	// Filter by ID of effective SLA domain.
	EffectiveSLADomainID *string `queryParam:"style=form,explode=true,name=effective_sla_domain_id"`
	// Search object by export point.
	ExportPoint *string `queryParam:"style=form,explode=true,name=export_point"`
	// ID of the parent host hierarchy object. To get top-level nodes, use **root** as the ID.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Limit the number of matches returned.
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Search object by object name.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Filter by node object type.
	ObjectType *GetHostHierarchyChildrenObjectTypeEnum `queryParam:"style=form,explode=true,name=object_type"`
	// Number of matches to ignore from the beginning of the results.
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Filter the summary information based on the operating system type. Accepted values are 'Windows', 'UnixLike', 'ANY', 'NONE'.
	// Use **_NONE_** to only return information for hosts templates that do not have operating system type set.
	// Use **_ANY_** to only return information for hosts that have operating system type set.
	OperatingSystemType *GetHostHierarchyChildrenOperatingSystemTypeEnum `queryParam:"style=form,explode=true,name=operating_system_type"`
	// Filter by primary cluster ID, or **local**.
	PrimaryClusterID *string `queryParam:"style=form,explode=true,name=primary_cluster_id"`
	// Limit a response to the results that have the specified SLA Domain assignment type.
	SLAAssignment *GetHostHierarchyChildrenSLAAssignmentEnum `queryParam:"style=form,explode=true,name=sla_assignment"`
	// Attribute to sort the results on.
	SortBy *GetHostHierarchyChildrenSortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// Order for sorting the results, either ascending or descending.
	SortOrder *GetHostHierarchyChildrenSortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
	// Filter by fileset template ID.
	TemplateID *string `queryParam:"style=form,explode=true,name=template_id"`
	// Filter by NAS vendor.
	VendorType *GetHostHierarchyChildrenVendorTypeEnum `queryParam:"style=form,explode=true,name=vendor_type"`
}

type GetHostHierarchyChildrenResponse struct {
	ContentType string
	// Summary list of immediate descendant objects.
	HostHierarchyObjectSummaryListResponse *shared.HostHierarchyObjectSummaryListResponse
	StatusCode                             int
	RawResponse                            *http.Response
}
