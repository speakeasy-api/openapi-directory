// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateDataCellsFilterHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateDataCellsFilterRequestBodyTableData - A structure that describes certain columns on certain rows.
type CreateDataCellsFilterRequestBodyTableData struct {
	ColumnNames    []string               `json:"ColumnNames,omitempty"`
	ColumnWildcard *shared.ColumnWildcard `json:"ColumnWildcard,omitempty"`
	DatabaseName   *string                `json:"DatabaseName,omitempty"`
	Name           *string                `json:"Name,omitempty"`
	RowFilter      *shared.RowFilter      `json:"RowFilter,omitempty"`
	TableCatalogID *string                `json:"TableCatalogId,omitempty"`
	TableName      *string                `json:"TableName,omitempty"`
	VersionID      *string                `json:"VersionId,omitempty"`
}

type CreateDataCellsFilterRequestBody struct {
	// A structure that describes certain columns on certain rows.
	TableData CreateDataCellsFilterRequestBodyTableData `json:"TableData"`
}

type CreateDataCellsFilterRequest struct {
	Headers CreateDataCellsFilterHeaders
	Request CreateDataCellsFilterRequestBody `request:"mediaType=application/json"`
}

type CreateDataCellsFilterResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AlreadyExistsException
	AlreadyExistsException interface{}
	ContentType            string
	// Success
	CreateDataCellsFilterResponse map[string]interface{}
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	// ResourceNumberLimitExceededException
	ResourceNumberLimitExceededException interface{}
	StatusCode                           int
	RawResponse                          *http.Response
}
