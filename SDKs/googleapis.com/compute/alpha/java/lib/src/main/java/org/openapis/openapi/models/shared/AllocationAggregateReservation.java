/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AllocationAggregateReservation - This reservation type is specified by total resource amounts (e.g. total count of CPUs) and can account for multiple instance SKUs. In other words, one can create instances of varying shapes against this reservation.
 */
public class AllocationAggregateReservation {
    /**
     * [Output only] List of resources currently in use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inUseResources")
    public AllocationAggregateReservationReservedResourceInfo[] inUseResources;
    public AllocationAggregateReservation withInUseResources(AllocationAggregateReservationReservedResourceInfo[] inUseResources) {
        this.inUseResources = inUseResources;
        return this;
    }
    
    /**
     * List of reserved resources (CPUs, memory, accelerators).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reservedResources")
    public AllocationAggregateReservationReservedResourceInfo[] reservedResources;
    public AllocationAggregateReservation withReservedResources(AllocationAggregateReservationReservedResourceInfo[] reservedResources) {
        this.reservedResources = reservedResources;
        return this;
    }
    
    /**
     * The VM family that all instances scheduled against this reservation must belong to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vmFamily")
    public AllocationAggregateReservationVmFamilyEnum vmFamily;
    public AllocationAggregateReservation withVmFamily(AllocationAggregateReservationVmFamilyEnum vmFamily) {
        this.vmFamily = vmFamily;
        return this;
    }
    
}
