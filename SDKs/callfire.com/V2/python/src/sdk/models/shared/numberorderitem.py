"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NumberOrderItem:
    r"""Represents an order item of a particular order"""
    
    fulfilled: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fulfilled'), 'exclude': lambda f: f is None }})
    r"""List of fulfilled items, e.g. phone numbers, keywords"""  
    ordered: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ordered'), 'exclude': lambda f: f is None }})
    r"""A total number of items bought within a single order item"""  
    unit_cost: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unitCost'), 'exclude': lambda f: f is None }})
    r"""A cost of unit"""  
    