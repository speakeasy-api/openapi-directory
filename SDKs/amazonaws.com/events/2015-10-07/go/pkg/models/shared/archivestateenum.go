// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ArchiveStateEnum string

const (
	ArchiveStateEnumEnabled      ArchiveStateEnum = "ENABLED"
	ArchiveStateEnumDisabled     ArchiveStateEnum = "DISABLED"
	ArchiveStateEnumCreating     ArchiveStateEnum = "CREATING"
	ArchiveStateEnumUpdating     ArchiveStateEnum = "UPDATING"
	ArchiveStateEnumCreateFailed ArchiveStateEnum = "CREATE_FAILED"
	ArchiveStateEnumUpdateFailed ArchiveStateEnum = "UPDATE_FAILED"
)

func (e *ArchiveStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ENABLED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "CREATING":
		fallthrough
	case "UPDATING":
		fallthrough
	case "CREATE_FAILED":
		fallthrough
	case "UPDATE_FAILED":
		*e = ArchiveStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ArchiveStateEnum: %s", s)
	}
}
