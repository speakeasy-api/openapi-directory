/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Plan message describes a Service Plan.
 */
export class GoogleCloudServicebrokerV1beta1Plan extends SpeakeasyBase {
  /**
   * Specifies whether instances of the service can be bound to applications.
   *
   * @remarks
   * If not specified, `Service.bindable` will be presumed.
   */
  @SpeakeasyMetadata()
  bindable?: boolean;

  /**
   * Textual description of the plan. Optional.
   */
  @SpeakeasyMetadata()
  description?: string;

  /**
   * Whether the service is free.
   */
  @SpeakeasyMetadata()
  free?: boolean;

  /**
   * ID is a globally unique identifier used to uniquely identify the plan.
   *
   * @remarks
   * User must make no presumption about the format of this field.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * A list of metadata for a service offering.
   *
   * @remarks
   * Metadata is an arbitrary JSON object.
   */
  @SpeakeasyMetadata()
  metadata?: Record<string, any>;

  /**
   * User friendly name of the plan.
   *
   * @remarks
   * The name must be globally unique within GCP project.
   * Note, which is different from ("This must be globally unique within a
   * platform marketplace").
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * Schema definitions for service instances and bindings for the plan.
   */
  @SpeakeasyMetadata()
  schemas?: Record<string, any>;
}
