/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { InventoryResultItem } from "./inventoryresultitem";
import { Expose, Transform } from "class-transformer";

/**
 * Inventory query results.
 */
export class InventoryResultEntity extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: InventoryResultItem })
  @Expose({ name: "Data" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, InventoryResultItem> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], InventoryResultItem);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  data?: Record<string, InventoryResultItem>;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;
}
