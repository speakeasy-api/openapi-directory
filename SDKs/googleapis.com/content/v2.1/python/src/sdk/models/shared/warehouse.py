"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import address as shared_address
from ..shared import businessdayconfig as shared_businessdayconfig
from ..shared import warehousecutofftime as shared_warehousecutofftime
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Warehouse:
    r"""A fulfillment warehouse, which stores and handles inventory."""
    
    business_day_config: Optional[shared_businessdayconfig.BusinessDayConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('businessDayConfig'), 'exclude': lambda f: f is None }})  
    cutoff_time: Optional[shared_warehousecutofftime.WarehouseCutoffTime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cutoffTime'), 'exclude': lambda f: f is None }})  
    handling_days: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('handlingDays'), 'exclude': lambda f: f is None }})
    r"""Required. The number of days it takes for this warehouse to pack up and ship an item. This is on the warehouse level, but can be overridden on the offer level based on the attributes of an item."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Required. The name of the warehouse. Must be unique within account."""  
    shipping_address: Optional[shared_address.Address] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shippingAddress'), 'exclude': lambda f: f is None }})  
    