/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRetailV2alphaCatalogAttributeInput - Catalog level attribute config for an attribute. For example, if customers want to enable/disable facet for a specific attribute.
 */
public class GoogleCloudRetailV2alphaCatalogAttributeInput {
    /**
     * If DYNAMIC_FACETABLE_ENABLED, attribute values are available for dynamic facet. Could only be DYNAMIC_FACETABLE_DISABLED if CatalogAttribute.indexable_option is INDEXABLE_DISABLED. Otherwise, an INVALID_ARGUMENT error is returned. Must be specified, otherwise throws INVALID_FORMAT error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dynamicFacetableOption")
    public GoogleCloudRetailV2alphaCatalogAttributeDynamicFacetableOptionEnum dynamicFacetableOption;

    public GoogleCloudRetailV2alphaCatalogAttributeInput withDynamicFacetableOption(GoogleCloudRetailV2alphaCatalogAttributeDynamicFacetableOptionEnum dynamicFacetableOption) {
        this.dynamicFacetableOption = dynamicFacetableOption;
        return this;
    }
    
    /**
     * If EXACT_SEARCHABLE_ENABLED, attribute values will be exact searchable. This property only applies to textual custom attributes and requires indexable set to enabled to enable exact-searchable. If unset, the server behavior defaults to EXACT_SEARCHABLE_DISABLED.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exactSearchableOption")
    public GoogleCloudRetailV2alphaCatalogAttributeExactSearchableOptionEnum exactSearchableOption;

    public GoogleCloudRetailV2alphaCatalogAttributeInput withExactSearchableOption(GoogleCloudRetailV2alphaCatalogAttributeExactSearchableOptionEnum exactSearchableOption) {
        this.exactSearchableOption = exactSearchableOption;
        return this;
    }
    
    /**
     * If you don't set the facet SearchRequest.FacetSpec.FacetKey.intervals to a numerical attribute, then a weekly pipeline calculates intervals using some percentiles on the distribution of all its product numerical attribute values. The calculated intervals might not be ideal for some attributes. Therefore, we give you the option the overwrite them. For any numerical attribute that is passed as a facet key in the request along with given intervals, the given intervals are the facet intervals returned in the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("facetIntervals")
    public GoogleCloudRetailV2alphaInterval[] facetIntervals;

    public GoogleCloudRetailV2alphaCatalogAttributeInput withFacetIntervals(GoogleCloudRetailV2alphaInterval[] facetIntervals) {
        this.facetIntervals = facetIntervals;
        return this;
    }
    
    /**
     * Each instance represents a list of attribute values to ignore as facet values for a specific time range.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ignoredFacetValues")
    public GoogleCloudRetailV2alphaCatalogAttributeIgnoredFacetValues[] ignoredFacetValues;

    public GoogleCloudRetailV2alphaCatalogAttributeInput withIgnoredFacetValues(GoogleCloudRetailV2alphaCatalogAttributeIgnoredFacetValues[] ignoredFacetValues) {
        this.ignoredFacetValues = ignoredFacetValues;
        return this;
    }
    
    /**
     * When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if INDEXABLE_ENABLED attribute values are indexed so that it can be filtered, faceted, or boosted in SearchService.Search. Must be specified, otherwise throws INVALID_FORMAT error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("indexableOption")
    public GoogleCloudRetailV2alphaCatalogAttributeIndexableOptionEnum indexableOption;

    public GoogleCloudRetailV2alphaCatalogAttributeInput withIndexableOption(GoogleCloudRetailV2alphaCatalogAttributeIndexableOptionEnum indexableOption) {
        this.indexableOption = indexableOption;
        return this;
    }
    
    /**
     * Required. Attribute name. For example: `color`, `brands`, `attributes.custom_attribute`, such as `attributes.xyz`. To be indexable, the attribute name can contain only alpha-numeric characters and underscores. For example, an attribute named `attributes.abc_xyz` can be indexed, but an attribute named `attributes.abc-xyz` cannot be indexed. If the attribute key starts with `attributes.`, then the attribute is a custom attribute. Attributes such as `brands`, `patterns`, and `title` are built-in and called system attributes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    public String key;

    public GoogleCloudRetailV2alphaCatalogAttributeInput withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if RECOMMENDATIONS_FILTERING_ENABLED, attribute values are filterable for recommendations. This option works for categorical features only, does not work for numerical features, inventory filtering.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recommendationsFilteringOption")
    public GoogleCloudRetailV2alphaCatalogAttributeRecommendationsFilteringOptionEnum recommendationsFilteringOption;

    public GoogleCloudRetailV2alphaCatalogAttributeInput withRecommendationsFilteringOption(GoogleCloudRetailV2alphaCatalogAttributeRecommendationsFilteringOptionEnum recommendationsFilteringOption) {
        this.recommendationsFilteringOption = recommendationsFilteringOption;
        return this;
    }
    
    /**
     * If RETRIEVABLE_ENABLED, attribute values are retrievable in the search results. If unset, the server behavior defaults to RETRIEVABLE_DISABLED.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retrievableOption")
    public GoogleCloudRetailV2alphaCatalogAttributeRetrievableOptionEnum retrievableOption;

    public GoogleCloudRetailV2alphaCatalogAttributeInput withRetrievableOption(GoogleCloudRetailV2alphaCatalogAttributeRetrievableOptionEnum retrievableOption) {
        this.retrievableOption = retrievableOption;
        return this;
    }
    
    /**
     * When AttributesConfig.attribute_config_level is CATALOG_LEVEL_ATTRIBUTE_CONFIG, if SEARCHABLE_ENABLED, attribute values are searchable by text queries in SearchService.Search. If SEARCHABLE_ENABLED but attribute type is numerical, attribute values will not be searchable by text queries in SearchService.Search, as there are no text values associated to numerical attributes. Must be specified, otherwise throws INVALID_FORMAT error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("searchableOption")
    public GoogleCloudRetailV2alphaCatalogAttributeSearchableOptionEnum searchableOption;

    public GoogleCloudRetailV2alphaCatalogAttributeInput withSearchableOption(GoogleCloudRetailV2alphaCatalogAttributeSearchableOptionEnum searchableOption) {
        this.searchableOption = searchableOption;
        return this;
    }
    
    public GoogleCloudRetailV2alphaCatalogAttributeInput(){}
}
