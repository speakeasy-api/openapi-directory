<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class MeetingRegistrantsQuestionsGetMeetingRegistrantQuestionsCustomQuestions
{
    /**
     * Answer choices for the question. Can not be used for `short` question type as this type of question requires registrants to type out the answer.
     * 
     * @var ?array<string> $answers
     */
	#[\JMS\Serializer\Annotation\SerializedName('answers')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $answers = null;
    
    /**
     * Indicates whether or not the custom question is required to be answered by participants or not.
     * 
     * @var ?bool $required
     */
	#[\JMS\Serializer\Annotation\SerializedName('required')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $required = null;
    
    /**
     * Title of the custom question.
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
    /**
     * Type of the question being asked.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\MeetingRegistrantsQuestionsGetMeetingRegistrantQuestionsCustomQuestionsTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\MeetingRegistrantsQuestionsGetMeetingRegistrantQuestionsCustomQuestionsTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MeetingRegistrantsQuestionsGetMeetingRegistrantQuestionsCustomQuestionsTypeEnum $type = null;
    
	public function __construct()
	{
		$this->answers = null;
		$this->required = null;
		$this->title = null;
		$this->type = null;
	}
}
