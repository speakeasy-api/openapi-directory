"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class APIResponseSuccess:
    r"""A JSON object containing the url to the PDF and other meta data"""
    
    cost: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cost'), 'exclude': lambda f: f is None }})
    r"""Cost of the operation (mbIn + mbOut) * $.001"""  
    mb_in: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mbIn'), 'exclude': lambda f: f is None }})
    r"""The amount of megabytes of bandwidth used to process the pdf"""  
    mb_out: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mbOut'), 'exclude': lambda f: f is None }})
    r"""The amount of megabytes of bandwidth generated from the resulting pdf"""  
    pdf: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pdf'), 'exclude': lambda f: f is None }})
    r"""A url to the PDF that will exist only for 24 hours"""  
    success: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success'), 'exclude': lambda f: f is None }})
    r"""Will be true if the operation suceeded"""  
    