// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UnmanagedObjectDetailsObjectTypeEnum - The type of the unmanaged object. Valid object types are VirtualMachine, MssqlDatabase, LinuxFileset, ShareFileset, WindowsFileset, NutanixVirtualMachine, Ec2Instance and StorageArrayVolumeGroup.
type UnmanagedObjectDetailsObjectTypeEnum string

const (
	UnmanagedObjectDetailsObjectTypeEnumVirtualMachine          UnmanagedObjectDetailsObjectTypeEnum = "VirtualMachine"
	UnmanagedObjectDetailsObjectTypeEnumMssqlDatabase           UnmanagedObjectDetailsObjectTypeEnum = "MssqlDatabase"
	UnmanagedObjectDetailsObjectTypeEnumLinuxFileset            UnmanagedObjectDetailsObjectTypeEnum = "LinuxFileset"
	UnmanagedObjectDetailsObjectTypeEnumWindowsFileset          UnmanagedObjectDetailsObjectTypeEnum = "WindowsFileset"
	UnmanagedObjectDetailsObjectTypeEnumShareFileset            UnmanagedObjectDetailsObjectTypeEnum = "ShareFileset"
	UnmanagedObjectDetailsObjectTypeEnumNutanixVirtualMachine   UnmanagedObjectDetailsObjectTypeEnum = "NutanixVirtualMachine"
	UnmanagedObjectDetailsObjectTypeEnumHypervVirtualMachine    UnmanagedObjectDetailsObjectTypeEnum = "HypervVirtualMachine"
	UnmanagedObjectDetailsObjectTypeEnumManagedVolume           UnmanagedObjectDetailsObjectTypeEnum = "ManagedVolume"
	UnmanagedObjectDetailsObjectTypeEnumEc2Instance             UnmanagedObjectDetailsObjectTypeEnum = "Ec2Instance"
	UnmanagedObjectDetailsObjectTypeEnumStorageArrayVolumeGroup UnmanagedObjectDetailsObjectTypeEnum = "StorageArrayVolumeGroup"
	UnmanagedObjectDetailsObjectTypeEnumVcdVapp                 UnmanagedObjectDetailsObjectTypeEnum = "VcdVapp"
	UnmanagedObjectDetailsObjectTypeEnumLinuxHost               UnmanagedObjectDetailsObjectTypeEnum = "LinuxHost"
	UnmanagedObjectDetailsObjectTypeEnumWindowsHost             UnmanagedObjectDetailsObjectTypeEnum = "WindowsHost"
	UnmanagedObjectDetailsObjectTypeEnumOracleDatabase          UnmanagedObjectDetailsObjectTypeEnum = "OracleDatabase"
	UnmanagedObjectDetailsObjectTypeEnumVolumeGroup             UnmanagedObjectDetailsObjectTypeEnum = "VolumeGroup"
	UnmanagedObjectDetailsObjectTypeEnumAppBlueprint            UnmanagedObjectDetailsObjectTypeEnum = "AppBlueprint"
)

func (e UnmanagedObjectDetailsObjectTypeEnum) ToPointer() *UnmanagedObjectDetailsObjectTypeEnum {
	return &e
}

func (e *UnmanagedObjectDetailsObjectTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VirtualMachine":
		fallthrough
	case "MssqlDatabase":
		fallthrough
	case "LinuxFileset":
		fallthrough
	case "WindowsFileset":
		fallthrough
	case "ShareFileset":
		fallthrough
	case "NutanixVirtualMachine":
		fallthrough
	case "HypervVirtualMachine":
		fallthrough
	case "ManagedVolume":
		fallthrough
	case "Ec2Instance":
		fallthrough
	case "StorageArrayVolumeGroup":
		fallthrough
	case "VcdVapp":
		fallthrough
	case "LinuxHost":
		fallthrough
	case "WindowsHost":
		fallthrough
	case "OracleDatabase":
		fallthrough
	case "VolumeGroup":
		fallthrough
	case "AppBlueprint":
		*e = UnmanagedObjectDetailsObjectTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UnmanagedObjectDetailsObjectTypeEnum: %v", v)
	}
}

// UnmanagedObjectDetailsUnmanagedStatusEnum - Unmanaged Status of this object. Protected means that this object is still protected by an SLA Policy. Unprotected means that this object has become unprotected. Relic means that Rubrik has lost contact with this object.
type UnmanagedObjectDetailsUnmanagedStatusEnum string

const (
	UnmanagedObjectDetailsUnmanagedStatusEnumProtected         UnmanagedObjectDetailsUnmanagedStatusEnum = "Protected"
	UnmanagedObjectDetailsUnmanagedStatusEnumRelic             UnmanagedObjectDetailsUnmanagedStatusEnum = "Relic"
	UnmanagedObjectDetailsUnmanagedStatusEnumUnprotected       UnmanagedObjectDetailsUnmanagedStatusEnum = "Unprotected"
	UnmanagedObjectDetailsUnmanagedStatusEnumReplicatedRelic   UnmanagedObjectDetailsUnmanagedStatusEnum = "ReplicatedRelic"
	UnmanagedObjectDetailsUnmanagedStatusEnumRemoteUnprotected UnmanagedObjectDetailsUnmanagedStatusEnum = "RemoteUnprotected"
)

func (e UnmanagedObjectDetailsUnmanagedStatusEnum) ToPointer() *UnmanagedObjectDetailsUnmanagedStatusEnum {
	return &e
}

func (e *UnmanagedObjectDetailsUnmanagedStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Protected":
		fallthrough
	case "Relic":
		fallthrough
	case "Unprotected":
		fallthrough
	case "ReplicatedRelic":
		fallthrough
	case "RemoteUnprotected":
		*e = UnmanagedObjectDetailsUnmanagedStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UnmanagedObjectDetailsUnmanagedStatusEnum: %v", v)
	}
}

type UnmanagedObjectDetails struct {
	// The amount of storage on the archival location used by unmanaged snapshots.
	ArchiveStorage int64 `json:"archiveStorage"`
	// A boolean that specifies whether any of the snapshots for this object are being retained by a SLA Domain at any location.
	//
	HasSnapshotsWithPolicy bool   `json:"hasSnapshotsWithPolicy"`
	ID                     string `json:"id"`
	// Boolean that specifies whether the object is remote or local. A value of true indicates that the object is remote.
	//
	IsRemote *bool `json:"isRemote,omitempty"`
	// The amount of storage on the local cluster used by unmanaged snapshots.
	LocalStorage int64  `json:"localStorage"`
	Name         string `json:"name"`
	// The type of the unmanaged object. Valid object types are VirtualMachine, MssqlDatabase, LinuxFileset, ShareFileset, WindowsFileset, NutanixVirtualMachine, Ec2Instance and StorageArrayVolumeGroup.
	ObjectType       UnmanagedObjectDetailsObjectTypeEnum `json:"objectType"`
	PendingSLADomain *ManagedObjectPendingSLAInfo         `json:"pendingSlaDomain,omitempty"`
	// Summary information of all objects on the physical path to this object.
	PhysicalLocation []LocationPathPoint    `json:"physicalLocation"`
	RecoveryInfo     *SnappableRecoveryInfo `json:"recoveryInfo,omitempty"`
	// ID assigned to an SLA Domain retention policy.
	RetentionSLADomainID string `json:"retentionSlaDomainId"`
	// Name of an SLA Domain retention policy.
	RetentionSLADomainName string `json:"retentionSlaDomainName"`
	// Optional field with the ID assigned to an SLA Domain by Polaris.
	RetentionSLADomainPolarisManagedID *string `json:"retentionSlaDomainPolarisManagedId,omitempty"`
	// Total number of snapshots to for the specified object.
	SnapshotCount int64 `json:"snapshotCount"`
	// Unmanaged Status of this object. Protected means that this object is still protected by an SLA Policy. Unprotected means that this object has become unprotected. Relic means that Rubrik has lost contact with this object.
	UnmanagedStatus UnmanagedObjectDetailsUnmanagedStatusEnum `json:"unmanagedStatus"`
}
