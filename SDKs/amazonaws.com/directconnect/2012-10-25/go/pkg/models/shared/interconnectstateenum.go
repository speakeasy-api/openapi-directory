// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InterconnectStateEnum string

const (
	InterconnectStateEnumRequested InterconnectStateEnum = "requested"
	InterconnectStateEnumPending   InterconnectStateEnum = "pending"
	InterconnectStateEnumAvailable InterconnectStateEnum = "available"
	InterconnectStateEnumDown      InterconnectStateEnum = "down"
	InterconnectStateEnumDeleting  InterconnectStateEnum = "deleting"
	InterconnectStateEnumDeleted   InterconnectStateEnum = "deleted"
	InterconnectStateEnumUnknown   InterconnectStateEnum = "unknown"
)

func (e *InterconnectStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "requested":
		fallthrough
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "down":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		fallthrough
	case "unknown":
		*e = InterconnectStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InterconnectStateEnum: %s", s)
	}
}
