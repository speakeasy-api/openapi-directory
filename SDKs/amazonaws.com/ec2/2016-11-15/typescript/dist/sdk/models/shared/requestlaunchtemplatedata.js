"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestLaunchTemplateData = exports.RequestLaunchTemplateDataTagSpecifications = exports.RequestLaunchTemplateDataTagSpecificationsTags = exports.RequestLaunchTemplateDataNetworkInterfaces = exports.RequestLaunchTemplateDataNetworkInterfacesIpv6Prefixes = exports.RequestLaunchTemplateDataNetworkInterfacesIpv4Prefixes = exports.RequestLaunchTemplateDataLicenseSpecifications = exports.RequestLaunchTemplateDataElasticInferenceAccelerators = exports.RequestLaunchTemplateDataElasticGpuSpecifications = exports.RequestLaunchTemplateDataBlockDeviceMappings = void 0;
var utils_1 = require("../../../internal/utils");
var creditspecificationrequest_1 = require("./creditspecificationrequest");
var instanceipv6addresslistrequest_1 = require("./instanceipv6addresslistrequest");
var instancerequirementsrequest_1 = require("./instancerequirementsrequest");
var instancetypeenum_1 = require("./instancetypeenum");
var launchtemplatecapacityreservationspecificationrequest_1 = require("./launchtemplatecapacityreservationspecificationrequest");
var launchtemplatecpuoptionsrequest_1 = require("./launchtemplatecpuoptionsrequest");
var launchtemplateebsblockdevicerequest_1 = require("./launchtemplateebsblockdevicerequest");
var launchtemplateenclaveoptionsrequest_1 = require("./launchtemplateenclaveoptionsrequest");
var launchtemplatehibernationoptionsrequest_1 = require("./launchtemplatehibernationoptionsrequest");
var launchtemplateiaminstanceprofilespecificationrequest_1 = require("./launchtemplateiaminstanceprofilespecificationrequest");
var launchtemplateinstancemaintenanceoptionsrequest_1 = require("./launchtemplateinstancemaintenanceoptionsrequest");
var launchtemplateinstancemarketoptionsrequest_1 = require("./launchtemplateinstancemarketoptionsrequest");
var launchtemplateinstancemetadataoptionsrequest_1 = require("./launchtemplateinstancemetadataoptionsrequest");
var launchtemplateplacementrequest_1 = require("./launchtemplateplacementrequest");
var launchtemplateprivatednsnameoptionsrequest_1 = require("./launchtemplateprivatednsnameoptionsrequest");
var launchtemplatesmonitoringrequest_1 = require("./launchtemplatesmonitoringrequest");
var privateipaddressspecificationlist_1 = require("./privateipaddressspecificationlist");
var resourcetypeenum_1 = require("./resourcetypeenum");
var shutdownbehaviorenum_1 = require("./shutdownbehaviorenum");
/**
 * Describes a block device mapping.
 */
var RequestLaunchTemplateDataBlockDeviceMappings = /** @class */ (function (_super) {
    __extends(RequestLaunchTemplateDataBlockDeviceMappings, _super);
    function RequestLaunchTemplateDataBlockDeviceMappings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateDataBlockDeviceMappings.prototype, "deviceName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", launchtemplateebsblockdevicerequest_1.LaunchTemplateEbsBlockDeviceRequest)
    ], RequestLaunchTemplateDataBlockDeviceMappings.prototype, "ebs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateDataBlockDeviceMappings.prototype, "noDevice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateDataBlockDeviceMappings.prototype, "virtualName", void 0);
    return RequestLaunchTemplateDataBlockDeviceMappings;
}(utils_1.SpeakeasyBase));
exports.RequestLaunchTemplateDataBlockDeviceMappings = RequestLaunchTemplateDataBlockDeviceMappings;
/**
 * A specification for an Elastic Graphics accelerator.
 */
var RequestLaunchTemplateDataElasticGpuSpecifications = /** @class */ (function (_super) {
    __extends(RequestLaunchTemplateDataElasticGpuSpecifications, _super);
    function RequestLaunchTemplateDataElasticGpuSpecifications() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateDataElasticGpuSpecifications.prototype, "type", void 0);
    return RequestLaunchTemplateDataElasticGpuSpecifications;
}(utils_1.SpeakeasyBase));
exports.RequestLaunchTemplateDataElasticGpuSpecifications = RequestLaunchTemplateDataElasticGpuSpecifications;
/**
 *  Describes an elastic inference accelerator.
 */
var RequestLaunchTemplateDataElasticInferenceAccelerators = /** @class */ (function (_super) {
    __extends(RequestLaunchTemplateDataElasticInferenceAccelerators, _super);
    function RequestLaunchTemplateDataElasticInferenceAccelerators() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RequestLaunchTemplateDataElasticInferenceAccelerators.prototype, "count", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateDataElasticInferenceAccelerators.prototype, "type", void 0);
    return RequestLaunchTemplateDataElasticInferenceAccelerators;
}(utils_1.SpeakeasyBase));
exports.RequestLaunchTemplateDataElasticInferenceAccelerators = RequestLaunchTemplateDataElasticInferenceAccelerators;
/**
 * Describes a license configuration.
 */
var RequestLaunchTemplateDataLicenseSpecifications = /** @class */ (function (_super) {
    __extends(RequestLaunchTemplateDataLicenseSpecifications, _super);
    function RequestLaunchTemplateDataLicenseSpecifications() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateDataLicenseSpecifications.prototype, "licenseConfigurationArn", void 0);
    return RequestLaunchTemplateDataLicenseSpecifications;
}(utils_1.SpeakeasyBase));
exports.RequestLaunchTemplateDataLicenseSpecifications = RequestLaunchTemplateDataLicenseSpecifications;
/**
 * Describes the IPv4 prefix option for a network interface.
 */
var RequestLaunchTemplateDataNetworkInterfacesIpv4Prefixes = /** @class */ (function (_super) {
    __extends(RequestLaunchTemplateDataNetworkInterfacesIpv4Prefixes, _super);
    function RequestLaunchTemplateDataNetworkInterfacesIpv4Prefixes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateDataNetworkInterfacesIpv4Prefixes.prototype, "ipv4Prefix", void 0);
    return RequestLaunchTemplateDataNetworkInterfacesIpv4Prefixes;
}(utils_1.SpeakeasyBase));
exports.RequestLaunchTemplateDataNetworkInterfacesIpv4Prefixes = RequestLaunchTemplateDataNetworkInterfacesIpv4Prefixes;
/**
 * Describes the IPv4 prefix option for a network interface.
 */
var RequestLaunchTemplateDataNetworkInterfacesIpv6Prefixes = /** @class */ (function (_super) {
    __extends(RequestLaunchTemplateDataNetworkInterfacesIpv6Prefixes, _super);
    function RequestLaunchTemplateDataNetworkInterfacesIpv6Prefixes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateDataNetworkInterfacesIpv6Prefixes.prototype, "ipv6Prefix", void 0);
    return RequestLaunchTemplateDataNetworkInterfacesIpv6Prefixes;
}(utils_1.SpeakeasyBase));
exports.RequestLaunchTemplateDataNetworkInterfacesIpv6Prefixes = RequestLaunchTemplateDataNetworkInterfacesIpv6Prefixes;
/**
 * The parameters for a network interface.
 */
var RequestLaunchTemplateDataNetworkInterfaces = /** @class */ (function (_super) {
    __extends(RequestLaunchTemplateDataNetworkInterfaces, _super);
    function RequestLaunchTemplateDataNetworkInterfaces() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "associateCarrierIpAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "associatePublicIpAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "deleteOnTermination", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "deviceIndex", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "groups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "interfaceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "ipv4PrefixCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RequestLaunchTemplateDataNetworkInterfacesIpv4Prefixes,
        }),
        __metadata("design:type", Array)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "ipv4Prefixes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "ipv6AddressCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: instanceipv6addresslistrequest_1.InstanceIpv6AddressListRequest }),
        __metadata("design:type", Array)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "ipv6Addresses", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "ipv6PrefixCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RequestLaunchTemplateDataNetworkInterfacesIpv6Prefixes,
        }),
        __metadata("design:type", Array)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "ipv6Prefixes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "networkCardIndex", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "networkInterfaceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "privateIpAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: privateipaddressspecificationlist_1.PrivateIpAddressSpecificationList }),
        __metadata("design:type", Array)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "privateIpAddresses", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "secondaryPrivateIpAddressCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateDataNetworkInterfaces.prototype, "subnetId", void 0);
    return RequestLaunchTemplateDataNetworkInterfaces;
}(utils_1.SpeakeasyBase));
exports.RequestLaunchTemplateDataNetworkInterfaces = RequestLaunchTemplateDataNetworkInterfaces;
/**
 * Describes a tag.
 */
var RequestLaunchTemplateDataTagSpecificationsTags = /** @class */ (function (_super) {
    __extends(RequestLaunchTemplateDataTagSpecificationsTags, _super);
    function RequestLaunchTemplateDataTagSpecificationsTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateDataTagSpecificationsTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateDataTagSpecificationsTags.prototype, "value", void 0);
    return RequestLaunchTemplateDataTagSpecificationsTags;
}(utils_1.SpeakeasyBase));
exports.RequestLaunchTemplateDataTagSpecificationsTags = RequestLaunchTemplateDataTagSpecificationsTags;
/**
 * The tags specification for the resources that are created during instance launch.
 */
var RequestLaunchTemplateDataTagSpecifications = /** @class */ (function (_super) {
    __extends(RequestLaunchTemplateDataTagSpecifications, _super);
    function RequestLaunchTemplateDataTagSpecifications() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateDataTagSpecifications.prototype, "resourceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RequestLaunchTemplateDataTagSpecificationsTags,
        }),
        __metadata("design:type", Array)
    ], RequestLaunchTemplateDataTagSpecifications.prototype, "tags", void 0);
    return RequestLaunchTemplateDataTagSpecifications;
}(utils_1.SpeakeasyBase));
exports.RequestLaunchTemplateDataTagSpecifications = RequestLaunchTemplateDataTagSpecifications;
/**
 * <p>The information to include in the launch template.</p> <note> <p>You must specify at least one parameter for the launch template data.</p> </note>
 */
var RequestLaunchTemplateData = /** @class */ (function (_super) {
    __extends(RequestLaunchTemplateData, _super);
    function RequestLaunchTemplateData() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: RequestLaunchTemplateDataBlockDeviceMappings }),
        __metadata("design:type", Array)
    ], RequestLaunchTemplateData.prototype, "blockDeviceMappings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", launchtemplatecapacityreservationspecificationrequest_1.LaunchTemplateCapacityReservationSpecificationRequest)
    ], RequestLaunchTemplateData.prototype, "capacityReservationSpecification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", launchtemplatecpuoptionsrequest_1.LaunchTemplateCpuOptionsRequest)
    ], RequestLaunchTemplateData.prototype, "cpuOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", creditspecificationrequest_1.CreditSpecificationRequest)
    ], RequestLaunchTemplateData.prototype, "creditSpecification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RequestLaunchTemplateData.prototype, "disableApiStop", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RequestLaunchTemplateData.prototype, "disableApiTermination", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], RequestLaunchTemplateData.prototype, "ebsOptimized", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RequestLaunchTemplateDataElasticGpuSpecifications,
        }),
        __metadata("design:type", Array)
    ], RequestLaunchTemplateData.prototype, "elasticGpuSpecifications", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RequestLaunchTemplateDataElasticInferenceAccelerators,
        }),
        __metadata("design:type", Array)
    ], RequestLaunchTemplateData.prototype, "elasticInferenceAccelerators", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", launchtemplateenclaveoptionsrequest_1.LaunchTemplateEnclaveOptionsRequest)
    ], RequestLaunchTemplateData.prototype, "enclaveOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", launchtemplatehibernationoptionsrequest_1.LaunchTemplateHibernationOptionsRequest)
    ], RequestLaunchTemplateData.prototype, "hibernationOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", launchtemplateiaminstanceprofilespecificationrequest_1.LaunchTemplateIamInstanceProfileSpecificationRequest)
    ], RequestLaunchTemplateData.prototype, "iamInstanceProfile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateData.prototype, "imageId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateData.prototype, "instanceInitiatedShutdownBehavior", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", launchtemplateinstancemarketoptionsrequest_1.LaunchTemplateInstanceMarketOptionsRequest)
    ], RequestLaunchTemplateData.prototype, "instanceMarketOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", instancerequirementsrequest_1.InstanceRequirementsRequest)
    ], RequestLaunchTemplateData.prototype, "instanceRequirements", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateData.prototype, "instanceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateData.prototype, "kernelId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateData.prototype, "keyName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: RequestLaunchTemplateDataLicenseSpecifications,
        }),
        __metadata("design:type", Array)
    ], RequestLaunchTemplateData.prototype, "licenseSpecifications", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", launchtemplateinstancemaintenanceoptionsrequest_1.LaunchTemplateInstanceMaintenanceOptionsRequest)
    ], RequestLaunchTemplateData.prototype, "maintenanceOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", launchtemplateinstancemetadataoptionsrequest_1.LaunchTemplateInstanceMetadataOptionsRequest)
    ], RequestLaunchTemplateData.prototype, "metadataOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", launchtemplatesmonitoringrequest_1.LaunchTemplatesMonitoringRequest)
    ], RequestLaunchTemplateData.prototype, "monitoring", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: RequestLaunchTemplateDataNetworkInterfaces }),
        __metadata("design:type", Array)
    ], RequestLaunchTemplateData.prototype, "networkInterfaces", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", launchtemplateplacementrequest_1.LaunchTemplatePlacementRequest)
    ], RequestLaunchTemplateData.prototype, "placement", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", launchtemplateprivatednsnameoptionsrequest_1.LaunchTemplatePrivateDnsNameOptionsRequest)
    ], RequestLaunchTemplateData.prototype, "privateDnsNameOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateData.prototype, "ramDiskId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], RequestLaunchTemplateData.prototype, "securityGroupIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], RequestLaunchTemplateData.prototype, "securityGroups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: RequestLaunchTemplateDataTagSpecifications }),
        __metadata("design:type", Array)
    ], RequestLaunchTemplateData.prototype, "tagSpecifications", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RequestLaunchTemplateData.prototype, "userData", void 0);
    return RequestLaunchTemplateData;
}(utils_1.SpeakeasyBase));
exports.RequestLaunchTemplateData = RequestLaunchTemplateData;
