// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartingLineupsByDateFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type StartingLineupsByDateFormatEnum string

const (
	StartingLineupsByDateFormatEnumXML  StartingLineupsByDateFormatEnum = "XML"
	StartingLineupsByDateFormatEnumJSON StartingLineupsByDateFormatEnum = "JSON"
)

func (e StartingLineupsByDateFormatEnum) ToPointer() *StartingLineupsByDateFormatEnum {
	return &e
}

func (e *StartingLineupsByDateFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "XML":
		fallthrough
	case "JSON":
		*e = StartingLineupsByDateFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartingLineupsByDateFormatEnum: %v", v)
	}
}

type StartingLineupsByDateRequest struct {
	// The date of the slates.
	// <br>Examples: <code>2017-JUL-31</code>, <code>2017-SEP-01</code>.
	Date string `pathParam:"style=simple,explode=false,name=date"`
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format StartingLineupsByDateFormatEnum `pathParam:"style=simple,explode=false,name=format"`
}

type StartingLineupsByDateResponse struct {
	ContentType     string
	StartingLineups []shared.StartingLineups
	StatusCode      int
	RawResponse     *http.Response
}
