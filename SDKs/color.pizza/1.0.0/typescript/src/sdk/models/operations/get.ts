/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetRequest extends SpeakeasyBase {
  /**
   * The name of the color name list to use
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=false;name=list" })
  list?: shared.PossibleListsEnum;

  /**
   * Allow duplicate names or not
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=noduplicates",
  })
  noduplicates?: boolean;

  /**
   * The hex values of the colors to retrieve without '#'
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=values",
  })
  values?: string;
}

/**
 * OK
 */
export class Get200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.Color })
  @Expose({ name: "colors" })
  @Type(() => shared.Color)
  colors?: shared.Color[];

  @SpeakeasyMetadata()
  @Expose({ name: "paletteTitle" })
  paletteTitle?: string;
}

export class GetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * NOT FOUND
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  get200ApplicationJSONObject?: Get200ApplicationJSON;
}
