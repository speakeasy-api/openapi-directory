"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DashboardFilterFilterTypeEnum(str, Enum):
    r"""The specified filter type"""
    FILTER_TYPE_UNSPECIFIED = 'FILTER_TYPE_UNSPECIFIED'
    RESOURCE_LABEL = 'RESOURCE_LABEL'
    METRIC_LABEL = 'METRIC_LABEL'
    USER_METADATA_LABEL = 'USER_METADATA_LABEL'
    SYSTEM_METADATA_LABEL = 'SYSTEM_METADATA_LABEL'
    GROUP = 'GROUP'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DashboardFilter:
    r"""A filter to reduce the amount of data charted in relevant widgets."""
    
    filter_type: Optional[DashboardFilterFilterTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filterType'), 'exclude': lambda f: f is None }})
    r"""The specified filter type"""  
    label_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labelKey'), 'exclude': lambda f: f is None }})
    r"""Required. The key for the label"""  
    string_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stringValue'), 'exclude': lambda f: f is None }})
    r"""A variable-length string value."""  
    template_variable: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('templateVariable'), 'exclude': lambda f: f is None }})
    r"""The placeholder text that can be referenced in a filter string or MQL query. If omitted, the dashboard filter will be applied to all relevant widgets in the dashboard."""  
    