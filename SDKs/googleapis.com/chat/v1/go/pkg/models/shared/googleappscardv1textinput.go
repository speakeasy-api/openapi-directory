// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleAppsCardV1TextInputTypeEnum - How a text input field appears in the user interface. For example, whether the field is single or multi-line.
type GoogleAppsCardV1TextInputTypeEnum string

const (
	GoogleAppsCardV1TextInputTypeEnumSingleLine   GoogleAppsCardV1TextInputTypeEnum = "SINGLE_LINE"
	GoogleAppsCardV1TextInputTypeEnumMultipleLine GoogleAppsCardV1TextInputTypeEnum = "MULTIPLE_LINE"
)

func (e *GoogleAppsCardV1TextInputTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SINGLE_LINE":
		fallthrough
	case "MULTIPLE_LINE":
		*e = GoogleAppsCardV1TextInputTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAppsCardV1TextInputTypeEnum: %s", s)
	}
}

// GoogleAppsCardV1TextInput - A field in which users can enter text. Supports suggestions and on-change actions. Chat apps receive and can process the value of entered text during form input events. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/how-tos/dialogs#receive_form_data_from_dialogs). When you need to collect abstract data from users, use a text input. To collect defined data from users, use the selection input widget instead.
type GoogleAppsCardV1TextInput struct {
	// An action that describes the behavior when the form is submitted. For example, an Apps Script can be invoked to handle the form. If the action is triggered, the form values are sent to the server.
	AutoCompleteAction *GoogleAppsCardV1Action `json:"autoCompleteAction,omitempty"`
	// Text that appears below the text input field meant to assist users by prompting them to enter a certain value. This text is always visible. Required if `label` is unspecified. Otherwise, optional.
	HintText *string `json:"hintText,omitempty"`
	// Suggested values that users can enter. These values appear when users click inside the text input field. As users type, the suggested values dynamically filter to match what the users have typed. For example, a text input field for programming language might suggest Java, JavaScript, Python, and C++. When users start typing "Jav", the list of suggestions filters to show just Java and JavaScript. Suggested values help guide users to enter values that your app can make sense of. When referring to JavaScript, some users might enter "javascript" and others "java script". Suggesting "JavaScript" can standardize how users interact with your app. When specified, `TextInput.type` is always `SINGLE_LINE`, even if it is set to `MULTIPLE_LINE`.
	InitialSuggestions *GoogleAppsCardV1Suggestions `json:"initialSuggestions,omitempty"`
	// The text that appears above the text input field in the user interface. Specify text that helps the user enter the information your app needs. For example, if you are asking someone's name, but specifically need their surname, write "surname" instead of "name". Required if `hintText` is unspecified. Otherwise, optional.
	Label *string `json:"label,omitempty"`
	// The name by which the text input is identified in a form input event. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/how-tos/dialogs#receive_form_data_from_dialogs).
	Name *string `json:"name,omitempty"`
	// An action that describes the behavior when the form is submitted. For example, an Apps Script can be invoked to handle the form. If the action is triggered, the form values are sent to the server.
	OnChangeAction *GoogleAppsCardV1Action `json:"onChangeAction,omitempty"`
	// How a text input field appears in the user interface. For example, whether the field is single or multi-line.
	Type *GoogleAppsCardV1TextInputTypeEnum `json:"type,omitempty"`
	// The value entered by a user, returned as part of a form input event. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/how-tos/dialogs#receive_form_data_from_dialogs).
	Value *string `json:"value,omitempty"`
}
