/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DiskAttachment } from "./diskattachment";
import { NewDiskInitializeParams } from "./newdiskinitializeparams";
import { Expose, Type } from "class-transformer";

/**
 * A Persistent Disk resource that will be created and attached to each Replica in the Pool. Each Replica will have a unique persistent disk that is created and attached to that Replica in READ_WRITE mode.
 */
export class NewDisk extends SpeakeasyBase {
  /**
   * Specifies how to attach a disk to a Replica.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attachment" })
  @Type(() => DiskAttachment)
  attachment?: DiskAttachment;

  /**
   * If true, then this disk will be deleted when the instance is deleted. The default value is true.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "autoDelete" })
  autoDelete?: boolean;

  /**
   * If true, indicates that this is the root persistent disk.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "boot" })
  boot?: boolean;

  /**
   * Initialization parameters for creating a new disk.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "initializeParams" })
  @Type(() => NewDiskInitializeParams)
  initializeParams?: NewDiskInitializeParams;
}
