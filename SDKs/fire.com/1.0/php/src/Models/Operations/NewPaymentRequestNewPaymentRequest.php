<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * NewPaymentRequestNewPaymentRequest - Details of the new payment request
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class NewPaymentRequestNewPaymentRequest
{
    /**
     * These fields will be dispalyed to the payer when using the hosted option. You can choose to display any of `ORDER_ID`, `PRODUCT_ID`, `CUSTOMER_ID`, `CUSTOMER_NUMBER` and `COMMENT2` to the payer.
     * 
     * @var ?string $additionalFields
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalFields')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $additionalFields = null;
    
    /**
     * The requested amount to pay. Note the last two digits represent pennies/cents, (e.g., £1.00 = 100).
     * 
     * @var ?int $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $amount = null;
    
    /**
     * For the hosted option, the payer will be asked to fill in these fields but they will not be mandatory. You can choose to collect any of the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.
     * 
     * @var ?string $collectFields
     */
	#[\JMS\Serializer\Annotation\SerializedName('collectFields')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $collectFields = null;
    
    /**
     * Either `EUR` or `GBP`, and must correspond to the currency of the account the funds are being lodged into in the `icanTo`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\NewPaymentRequestNewPaymentRequestCurrencyEnum $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\NewPaymentRequestNewPaymentRequestCurrencyEnum>')]
    public NewPaymentRequestNewPaymentRequestCurrencyEnum $currency;
    
    /**
     * A public facing description of the request. This will be shown to the user when they tap or scan the request.
     * 
     * @var string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $description;
    
    /**
     * This is the expiry of the payment request. After this time, the payment cannot be paid.
     * 
     * @var ?\DateTime $expiry
     */
	#[\JMS\Serializer\Annotation\SerializedName('expiry')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $expiry = null;
    
    /**
     * The ican of the account to collect the funds into. Must be one of your fire.com Accounts.
     * 
     * @var int $icanTo
     */
	#[\JMS\Serializer\Annotation\SerializedName('icanTo')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $icanTo;
    
    /**
     * For the hosted option, these fields will be madatory for the payer to fill in on the hosted payment page. You can choose to collect any the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.
     * 
     * @var ?string $mandatoryFields
     */
	#[\JMS\Serializer\Annotation\SerializedName('mandatoryFields')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mandatoryFields = null;
    
    /**
     * The max number of people who can pay this request. Must be set to 1 for the ECOMMERCE_GOODS and ECOMMERCE_SERVICES types.
     * 
     * @var ?int $maxNumberPayments
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxNumberPayments')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxNumberPayments = null;
    
    /**
     * An internal description of the request.
     * 
     * @var string $myRef
     */
	#[\JMS\Serializer\Annotation\SerializedName('myRef')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $myRef;
    
	#[\JMS\Serializer\Annotation\SerializedName('orderDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\NewPaymentRequestNewPaymentRequestOrderDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NewPaymentRequestNewPaymentRequestOrderDetails $orderDetails = null;
    
    /**
     * The merchant return URL where the customer will be re-directed to with the result of the transaction.
     * 
     * @var ?string $returnUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('returnUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $returnUrl = null;
    
    /**
     * The type of Fire Open Payment that was created
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\NewPaymentRequestNewPaymentRequestTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\NewPaymentRequestNewPaymentRequestTypeEnum>')]
    public NewPaymentRequestNewPaymentRequestTypeEnum $type;
    
	public function __construct()
	{
		$this->additionalFields = null;
		$this->amount = null;
		$this->collectFields = null;
		$this->currency = \OpenAPI\OpenAPI\Models\Operations\NewPaymentRequestNewPaymentRequestCurrencyEnum::EUR;
		$this->description = "";
		$this->expiry = null;
		$this->icanTo = 0;
		$this->mandatoryFields = null;
		$this->maxNumberPayments = null;
		$this->myRef = "";
		$this->orderDetails = null;
		$this->returnUrl = null;
		$this->type = \OpenAPI\OpenAPI\Models\Operations\NewPaymentRequestNewPaymentRequestTypeEnum::OTHER;
	}
}
