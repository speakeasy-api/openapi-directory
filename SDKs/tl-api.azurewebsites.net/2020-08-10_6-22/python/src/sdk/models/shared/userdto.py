"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UserDTO:
    r"""The UserDTO Class.
    Contains relevant fields of User DTO by masking actual User entity's fields in application.
    """
    
    account_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountNumber'), 'exclude': lambda f: f is None }})
    r"""Account number of the user.It can be any stakeholder of the application.even can be a gym."""  
    external_entity_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('externalEntityNumber'), 'exclude': lambda f: f is None }})
    r"""Entity number that make a relationship with BOX API DB."""  
    guardian: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('guardian'), 'exclude': lambda f: f is None }})
    r"""Gaurdian of the this user if he/she is under 18 years old."""  
    gym_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gymNumber'), 'exclude': lambda f: f is None }})
    r"""If this user is a gym, then the gym number."""  
    introduce_by: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('introduceBy'), 'exclude': lambda f: f is None }})
    r"""If Someone introduced this user to the system, then that user's UserId."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the user."""  
    number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number'), 'exclude': lambda f: f is None }})
    r"""Unique number maintain by application to idenify user."""  
    type_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('typeId'), 'exclude': lambda f: f is None }})
    r"""Type of the user."""  
    user_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userId'), 'exclude': lambda f: f is None }})
    r"""Indentity number(primary key) for user object. Generated in DB table when inserting a record."""  
    