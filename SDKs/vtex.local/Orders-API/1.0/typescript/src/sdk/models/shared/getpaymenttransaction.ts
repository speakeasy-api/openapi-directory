/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Payment1 } from "./payment1";
import { Expose, Type } from "class-transformer";

/**
 * OK
 */
export class GetPaymenttransaction extends SpeakeasyBase {
  /**
   * If it is an active transaction (`true`) or not (`false`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isActive" })
  isActive: boolean;

  /**
   * Transaction merchant's name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantName" })
  merchantName: string;

  /**
   * Payments' details object.
   */
  @SpeakeasyMetadata({ elemType: Payment1 })
  @Expose({ name: "payments" })
  @Type(() => Payment1)
  payments: Payment1[];

  /**
   * Transaction status.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  /**
   * Transaction ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transactionId" })
  transactionId: string;
}
