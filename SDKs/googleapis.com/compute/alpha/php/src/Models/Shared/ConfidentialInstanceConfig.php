<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ConfidentialInstanceConfig - A set of Confidential Instance options.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ConfidentialInstanceConfig
{
    /**
     * Defines the type of technology used by the confidential instance.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ConfidentialInstanceConfigConfidentialInstanceTypeEnum $confidentialInstanceType
     */
	#[\JMS\Serializer\Annotation\SerializedName('confidentialInstanceType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ConfidentialInstanceConfigConfidentialInstanceTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ConfidentialInstanceConfigConfidentialInstanceTypeEnum $confidentialInstanceType = null;
    
    /**
     * Defines whether the instance should have confidential compute enabled.
     * 
     * @var ?bool $enableConfidentialCompute
     */
	#[\JMS\Serializer\Annotation\SerializedName('enableConfidentialCompute')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enableConfidentialCompute = null;
    
	public function __construct()
	{
		$this->confidentialInstanceType = null;
		$this->enableConfidentialCompute = null;
	}
}
