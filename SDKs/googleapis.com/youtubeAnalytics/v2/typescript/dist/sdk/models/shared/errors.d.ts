import { SpeakeasyBase } from "../../../internal/utils";
import { ErrorProto } from "./errorproto";
/**
 * Global error code. Deprecated and ignored. Set custom error codes in ErrorProto.domain and ErrorProto.code instead.
 */
export declare enum ErrorsCodeEnum {
    BadRequest = "BAD_REQUEST",
    Forbidden = "FORBIDDEN",
    NotFound = "NOT_FOUND",
    Conflict = "CONFLICT",
    Gone = "GONE",
    PreconditionFailed = "PRECONDITION_FAILED",
    InternalError = "INTERNAL_ERROR",
    ServiceUnavailable = "SERVICE_UNAVAILABLE"
}
/**
 * Request Error information. The presence of an error field signals that the operation has failed.
 */
export declare class Errors extends SpeakeasyBase {
    /**
     * Global error code. Deprecated and ignored. Set custom error codes in ErrorProto.domain and ErrorProto.code instead.
     */
    code?: ErrorsCodeEnum;
    /**
     * Specific error description and codes
     */
    error?: ErrorProto[];
    /**
     * Request identifier generated by the service, which can be used to identify the error in the logs
     */
    requestId?: string;
}
