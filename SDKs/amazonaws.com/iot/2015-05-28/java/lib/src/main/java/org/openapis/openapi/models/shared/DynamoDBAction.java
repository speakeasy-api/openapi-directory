/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DynamoDBAction - &lt;p&gt;Describes an action to write to a DynamoDB table.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;tableName&lt;/code&gt;, &lt;code&gt;hashKeyField&lt;/code&gt;, and &lt;code&gt;rangeKeyField&lt;/code&gt; values must match the values used when you created the table.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;hashKeyValue&lt;/code&gt; and &lt;code&gt;rangeKeyvalue&lt;/code&gt; fields use a substitution template syntax. These templates provide data at runtime. The syntax is as follows: ${&lt;i&gt;sql-expression&lt;/i&gt;}.&lt;/p&gt; &lt;p&gt;You can specify any valid expression in a WHERE or SELECT clause, including JSON properties, comparisons, calculations, and functions. For example, the following field uses the third level of the topic:&lt;/p&gt; &lt;p&gt; &lt;code&gt;"hashKeyValue": "${topic(3)}"&lt;/code&gt; &lt;/p&gt; &lt;p&gt;The following field uses the timestamp:&lt;/p&gt; &lt;p&gt; &lt;code&gt;"rangeKeyValue": "${timestamp()}"&lt;/code&gt; &lt;/p&gt;
 */
public class DynamoDBAction {
    @JsonProperty("hashKeyField")
    public String hashKeyField;
    public DynamoDBAction withHashKeyField(String hashKeyField) {
        this.hashKeyField = hashKeyField;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hashKeyType")
    public DynamoKeyTypeEnum hashKeyType;
    public DynamoDBAction withHashKeyType(DynamoKeyTypeEnum hashKeyType) {
        this.hashKeyType = hashKeyType;
        return this;
    }
    
    @JsonProperty("hashKeyValue")
    public String hashKeyValue;
    public DynamoDBAction withHashKeyValue(String hashKeyValue) {
        this.hashKeyValue = hashKeyValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("operation")
    public String operation;
    public DynamoDBAction withOperation(String operation) {
        this.operation = operation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payloadField")
    public String payloadField;
    public DynamoDBAction withPayloadField(String payloadField) {
        this.payloadField = payloadField;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rangeKeyField")
    public String rangeKeyField;
    public DynamoDBAction withRangeKeyField(String rangeKeyField) {
        this.rangeKeyField = rangeKeyField;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rangeKeyType")
    public DynamoKeyTypeEnum rangeKeyType;
    public DynamoDBAction withRangeKeyType(DynamoKeyTypeEnum rangeKeyType) {
        this.rangeKeyType = rangeKeyType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rangeKeyValue")
    public String rangeKeyValue;
    public DynamoDBAction withRangeKeyValue(String rangeKeyValue) {
        this.rangeKeyValue = rangeKeyValue;
        return this;
    }
    
    @JsonProperty("roleArn")
    public String roleArn;
    public DynamoDBAction withRoleArn(String roleArn) {
        this.roleArn = roleArn;
        return this;
    }
    
    @JsonProperty("tableName")
    public String tableName;
    public DynamoDBAction withTableName(String tableName) {
        this.tableName = tableName;
        return this;
    }
    
}
