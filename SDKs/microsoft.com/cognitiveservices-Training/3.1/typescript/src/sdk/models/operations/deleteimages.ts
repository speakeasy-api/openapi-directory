/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class DeleteImagesRequest extends SpeakeasyBase {
  /**
   * API key.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Training-Key",
  })
  trainingKey: string;

  /**
   * Flag to specify delete all images, specify this flag or a list of images. Using this flag will return a 202 response to indicate the images are being deleted.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=allImages",
  })
  allImages?: boolean;

  /**
   * Removes these images from all iterations, not just the current workspace. Using this flag will return a 202 response to indicate the images are being deleted.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=allIterations",
  })
  allIterations?: boolean;

  /**
   * Ids of the images to be deleted. Limited to 256 images per batch.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=imageIds",
  })
  imageIds?: string[];

  /**
   * The project id.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=projectId",
  })
  projectId: string;
}

export class DeleteImagesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Error response
   */
  @SpeakeasyMetadata()
  customVisionError?: shared.CustomVisionError;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
