/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CreateFileSystemLustreConfiguration } from "./createfilesystemlustreconfiguration";
import { CreateFileSystemOntapConfiguration } from "./createfilesystemontapconfiguration";
import { CreateFileSystemOpenZFSConfiguration } from "./createfilesystemopenzfsconfiguration";
import { CreateFileSystemWindowsConfiguration } from "./createfilesystemwindowsconfiguration";
import { FileSystemTypeEnum } from "./filesystemtypeenum";
import { StorageTypeEnum } from "./storagetypeenum";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

/**
 * The request object used to create a new Amazon FSx file system.
 */
export class CreateFileSystemRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ClientRequestToken" })
  clientRequestToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FileSystemType" })
  fileSystemType: FileSystemTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "FileSystemTypeVersion" })
  fileSystemTypeVersion?: string;

  /**
   * <p>Specifies the ID of the Key Management Service (KMS) key to use for encrypting data on Amazon FSx file systems, as follows:</p> <ul> <li> <p>Amazon FSx for Lustre <code>PERSISTENT_1</code> and <code>PERSISTENT_2</code> deployment types only.</p> <p> <code>SCRATCH_1</code> and <code>SCRATCH_2</code> types are encrypted using the Amazon FSx service KMS key for your account.</p> </li> <li> <p>Amazon FSx for NetApp ONTAP</p> </li> <li> <p>Amazon FSx for OpenZFS</p> </li> <li> <p>Amazon FSx for Windows File Server</p> </li> </ul> <p>If a <code>KmsKeyId</code> isn't specified, the Amazon FSx-managed KMS key for your account is used. For more information, see <a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_Encrypt.html">Encrypt</a> in the <i>Key Management Service API Reference</i>.</p>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "KmsKeyId" })
  kmsKeyId?: string;

  /**
   * <p>The Lustre configuration for the file system being created.</p> <note> <p>The following parameters are not supported for file systems with the <code>Persistent_2</code> deployment type. Instead, use <code>CreateDataRepositoryAssociation</code> to create a data repository association to link your Lustre file system to a data repository.</p> <ul> <li> <p> <code>AutoImportPolicy</code> </p> </li> <li> <p> <code>ExportPath</code> </p> </li> <li> <p> <code>ImportedChunkSize</code> </p> </li> <li> <p> <code>ImportPath</code> </p> </li> </ul> </note>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LustreConfiguration" })
  @Type(() => CreateFileSystemLustreConfiguration)
  lustreConfiguration?: CreateFileSystemLustreConfiguration;

  /**
   * The ONTAP configuration properties of the FSx for ONTAP file system that you are creating.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "OntapConfiguration" })
  @Type(() => CreateFileSystemOntapConfiguration)
  ontapConfiguration?: CreateFileSystemOntapConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "OpenZFSConfiguration" })
  @Type(() => CreateFileSystemOpenZFSConfiguration)
  openZFSConfiguration?: CreateFileSystemOpenZFSConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "SecurityGroupIds" })
  securityGroupIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "StorageCapacity" })
  storageCapacity: number;

  @SpeakeasyMetadata()
  @Expose({ name: "StorageType" })
  storageType?: StorageTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SubnetIds" })
  subnetIds: string[];

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "WindowsConfiguration" })
  @Type(() => CreateFileSystemWindowsConfiguration)
  windowsConfiguration?: CreateFileSystemWindowsConfiguration;
}
