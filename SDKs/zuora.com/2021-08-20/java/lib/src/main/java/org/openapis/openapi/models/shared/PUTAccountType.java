/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PUTAccountType - Container for custom fields of an Account object.
 * 
 */
public class PUTAccountType {
    /**
     * Value of the Class field for the corresponding customer account in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Class__NS")
    public String classNS;
    public PUTAccountType withClassNS(String classNS) {
        this.classNS = classNS;
        return this;
    }
    
    /**
     * Value of the Customer Type field for the corresponding customer account in NetSuite. The Customer Type field is used when the customer account is created in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomerType__NS")
    public PUTAccountTypeCustomerTypeNSEnum customerTypeNS;
    public PUTAccountType withCustomerTypeNS(PUTAccountTypeCustomerTypeNSEnum customerTypeNS) {
        this.customerTypeNS = customerTypeNS;
        return this;
    }
    
    /**
     * Value of the Department field for the corresponding customer account in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Department__NS")
    public String departmentNS;
    public PUTAccountType withDepartmentNS(String departmentNS) {
        this.departmentNS = departmentNS;
        return this;
    }
    
    /**
     * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationId__NS")
    public String integrationIdNS;
    public PUTAccountType withIntegrationIdNS(String integrationIdNS) {
        this.integrationIdNS = integrationIdNS;
        return this;
    }
    
    /**
     * Status of the account's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationStatus__NS")
    public String integrationStatusNS;
    public PUTAccountType withIntegrationStatusNS(String integrationStatusNS) {
        this.integrationStatusNS = integrationStatusNS;
        return this;
    }
    
    /**
     * Value of the Location field for the corresponding customer account in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Location__NS")
    public String locationNS;
    public PUTAccountType withLocationNS(String locationNS) {
        this.locationNS = locationNS;
        return this;
    }
    
    /**
     * Value of the Subsidiary field for the corresponding customer account in NetSuite. The Subsidiary field is required if you use NetSuite OneWorld. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Subsidiary__NS")
    public String subsidiaryNS;
    public PUTAccountType withSubsidiaryNS(String subsidiaryNS) {
        this.subsidiaryNS = subsidiaryNS;
        return this;
    }
    
    /**
     * Date when the account was sychronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SyncDate__NS")
    public String syncDateNS;
    public PUTAccountType withSyncDateNS(String syncDateNS) {
        this.syncDateNS = syncDateNS;
        return this;
    }
    
    /**
     * Specifies whether the account should be synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SynctoNetSuite__NS")
    public PUTAccountTypeSynctoNetSuiteNSEnum synctoNetSuiteNS;
    public PUTAccountType withSynctoNetSuiteNS(PUTAccountTypeSynctoNetSuiteNSEnum synctoNetSuiteNS) {
        this.synctoNetSuiteNS = synctoNetSuiteNS;
        return this;
    }
    
    /**
     * A list of additional email addresses to receive emailed invoices. Use a comma to separate each email address.
     * 
     * **Note:** Invoices are emailed to the email addresses specified in this field only when the `invoiceDeliveryPrefsEmail` field is `true`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalEmailAddresses")
    public String[] additionalEmailAddresses;
    public PUTAccountType withAdditionalEmailAddresses(String[] additionalEmailAddresses) {
        this.additionalEmailAddresses = additionalEmailAddresses;
        return this;
    }
    
    /**
     * Whether future payments are to be automatically billed when they are due. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoPay")
    public Boolean autoPay;
    public PUTAccountType withAutoPay(Boolean autoPay) {
        this.autoPay = autoPay;
        return this;
    }
    
    /**
     * The alias name given to a batch. A string of 50 characters or less.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("batch")
    public String batch;
    public PUTAccountType withBatch(String batch) {
        this.batch = batch;
        return this;
    }
    
    /**
     * Container for bill-to contact information for this account.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billToContact")
    public PUTAccountTypeBillToContact billToContact;
    public PUTAccountType withBillToContact(PUTAccountTypeBillToContact billToContact) {
        this.billToContact = billToContact;
        return this;
    }
    
    /**
     * The ID of a communication profile.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("communicationProfileId")
    public String communicationProfileId;
    public PUTAccountType withCommunicationProfileId(String communicationProfileId) {
        this.communicationProfileId = communicationProfileId;
        return this;
    }
    
    /**
     * **Note:** This field is only available if you have [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement) enabled. The Invoice Settlement feature is generally available as of Zuora Billing Release 296 (March 2021). This feature includes Unapplied Payments, Credit and Debit Memo, and Invoice Item Settlement. If you want to enable Invoice Settlement, see [Invoice Settlement Enablement and Checklist Guide](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement/Invoice_Settlement_Migration_Checklist_and_Guide) for more information.
     * 
     * The unique ID of the credit memo template, configured in **Billing Settings** &gt; **Manage Billing Document Configuration** through the Zuora UI. For example, 2c92c08a6246fdf101626b1b3fe0144b.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditMemoTemplateId")
    public String creditMemoTemplateId;
    public PUTAccountType withCreditMemoTemplateId(String creditMemoTemplateId) {
        this.creditMemoTemplateId = creditMemoTemplateId;
        return this;
    }
    
    /**
     * CRM account ID for the account, up to 100 characters.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("crmId")
    public String crmId;
    public PUTAccountType withCrmId(String crmId) {
        this.crmId = crmId;
        return this;
    }
    
    /**
     * **Note:** This field is only available if you have [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement) enabled. The Invoice Settlement feature is generally available as of Zuora Billing Release 296 (March 2021). This feature includes Unapplied Payments, Credit and Debit Memo, and Invoice Item Settlement. If you want to enable Invoice Settlement, see [Invoice Settlement Enablement and Checklist Guide](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement/Invoice_Settlement_Migration_Checklist_and_Guide) for more information.
     * 
     * The unique ID of the debit memo template, configured in **Billing Settings** &gt; **Manage Billing Document Configuration** through the Zuora UI. For example, 2c92c08d62470a8501626b19d24f19e2.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("debitMemoTemplateId")
    public String debitMemoTemplateId;
    public PUTAccountType withDebitMemoTemplateId(String debitMemoTemplateId) {
        this.debitMemoTemplateId = debitMemoTemplateId;
        return this;
    }
    
    /**
     * Whether the customer wants to receive invoices through email. 
     * 
     * The default value is `false`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceDeliveryPrefsEmail")
    public Boolean invoiceDeliveryPrefsEmail;
    public PUTAccountType withInvoiceDeliveryPrefsEmail(Boolean invoiceDeliveryPrefsEmail) {
        this.invoiceDeliveryPrefsEmail = invoiceDeliveryPrefsEmail;
        return this;
    }
    
    /**
     * Whether the customer wants to receive printed invoices, such as through postal mail.
     * 
     * The default value is `false`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceDeliveryPrefsPrint")
    public Boolean invoiceDeliveryPrefsPrint;
    public PUTAccountType withInvoiceDeliveryPrefsPrint(Boolean invoiceDeliveryPrefsPrint) {
        this.invoiceDeliveryPrefsPrint = invoiceDeliveryPrefsPrint;
        return this;
    }
    
    /**
     * Invoice template ID, configured in Billing Settings in the Zuora UI.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceTemplateId")
    public String invoiceTemplateId;
    public PUTAccountType withInvoiceTemplateId(String invoiceTemplateId) {
        this.invoiceTemplateId = invoiceTemplateId;
        return this;
    }
    
    /**
     * Account name, up to 255 characters.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public PUTAccountType withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A string of up to 65,535 characters.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public PUTAccountType withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * Identifier of the parent customer account for this Account object. The length is 32 characters. Use this field if you have customer hierarchy enabled.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentId")
    public String parentId;
    public PUTAccountType withParentId(String parentId) {
        this.parentId = parentId;
        return this;
    }
    
    /**
     * The name of the payment gateway instance. If null or left unassigned, the Account will use the Default Gateway.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentGateway")
    public String paymentGateway;
    public PUTAccountType withPaymentGateway(String paymentGateway) {
        this.paymentGateway = paymentGateway;
        return this;
    }
    
    /**
     * The name of the sales representative associated with this account, if applicable. Maximum of 50 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("salesRep")
    public String salesRep;
    public PUTAccountType withSalesRep(String salesRep) {
        this.salesRep = salesRep;
        return this;
    }
    
    /**
     * The ID of the billing document sequence set to assign to the customer account. 
     * 
     * The billing documents to generate for this account will adopt the prefix and starting document number configured in the sequence set.
     * 
     * If a customer account has no assigned billing document sequence set, billing documents generated for this account adopt the prefix and starting document number from the default sequence set.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sequenceSetId")
    public String sequenceSetId;
    public PUTAccountType withSequenceSetId(String sequenceSetId) {
        this.sequenceSetId = sequenceSetId;
        return this;
    }
    
    /**
     * Container for optional sold-to contact.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("soldToContact")
    public PUTAccountTypeSoldToContact soldToContact;
    public PUTAccountType withSoldToContact(PUTAccountTypeSoldToContact soldToContact) {
        this.soldToContact = soldToContact;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tagging")
    public String tagging;
    public PUTAccountType withTagging(String tagging) {
        this.tagging = tagging;
        return this;
    }
    
    /**
     * Container for tax exempt information, used to establish the tax exempt status of a customer account.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxInfo")
    public PUTAccountTypeTaxInfo taxInfo;
    public PUTAccountType withTaxInfo(PUTAccountTypeTaxInfo taxInfo) {
        this.taxInfo = taxInfo;
        return this;
    }
    
}
