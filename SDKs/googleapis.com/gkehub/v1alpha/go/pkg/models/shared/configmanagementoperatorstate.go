// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ConfigManagementOperatorStateDeploymentStateEnum - The state of the Operator's deployment
type ConfigManagementOperatorStateDeploymentStateEnum string

const (
	ConfigManagementOperatorStateDeploymentStateEnumDeploymentStateUnspecified ConfigManagementOperatorStateDeploymentStateEnum = "DEPLOYMENT_STATE_UNSPECIFIED"
	ConfigManagementOperatorStateDeploymentStateEnumNotInstalled               ConfigManagementOperatorStateDeploymentStateEnum = "NOT_INSTALLED"
	ConfigManagementOperatorStateDeploymentStateEnumInstalled                  ConfigManagementOperatorStateDeploymentStateEnum = "INSTALLED"
	ConfigManagementOperatorStateDeploymentStateEnumError                      ConfigManagementOperatorStateDeploymentStateEnum = "ERROR"
)

func (e *ConfigManagementOperatorStateDeploymentStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DEPLOYMENT_STATE_UNSPECIFIED":
		fallthrough
	case "NOT_INSTALLED":
		fallthrough
	case "INSTALLED":
		fallthrough
	case "ERROR":
		*e = ConfigManagementOperatorStateDeploymentStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ConfigManagementOperatorStateDeploymentStateEnum: %s", s)
	}
}

// ConfigManagementOperatorState - State information for an ACM's Operator
type ConfigManagementOperatorState struct {
	// The state of the Operator's deployment
	DeploymentState *ConfigManagementOperatorStateDeploymentStateEnum `json:"deploymentState,omitempty"`
	// Install errors.
	Errors []ConfigManagementInstallError `json:"errors,omitempty"`
	// The semenatic version number of the operator
	Version *string `json:"version,omitempty"`
}
