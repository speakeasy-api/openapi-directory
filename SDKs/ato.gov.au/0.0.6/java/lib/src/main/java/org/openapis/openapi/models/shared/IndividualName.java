/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * IndividualName - The Individual Name resource.
 */
public class IndividualName {
    /**
     * The direction used to render the individual's name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("direction")
    public IndividualNameDirectionEnum direction;
    public IndividualName withDirection(IndividualNameDirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * The individual's family name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("familyName")
    public String familyName;
    public IndividualName withFamilyName(String familyName) {
        this.familyName = familyName;
        return this;
    }
    
    /**
     * The individual's formal salutation, for example, "Mr William Smith".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("formalSalutation")
    public String formalSalutation;
    public IndividualName withFormalSalutation(String formalSalutation) {
        this.formalSalutation = formalSalutation;
        return this;
    }
    
    /**
     * The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("fromDate")
    public OffsetDateTime fromDate;
    public IndividualName withFromDate(OffsetDateTime fromDate) {
        this.fromDate = fromDate;
        return this;
    }
    
    /**
     * The individual's given name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("givenName")
    public String givenName;
    public IndividualName withGivenName(String givenName) {
        this.givenName = givenName;
        return this;
    }
    
    /**
     * The resource's unique identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public IndividualName withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The individual's informal salutation, for example, "Bill".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("informalSalutation")
    public String informalSalutation;
    public IndividualName withInformalSalutation(String informalSalutation) {
        this.informalSalutation = informalSalutation;
        return this;
    }
    
    /**
     * The individual's middle name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("middleName")
    public String middleName;
    public IndividualName withMiddleName(String middleName) {
        this.middleName = middleName;
        return this;
    }
    
    /**
     * The individual's name prefix.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("namePrefix")
    public IndividualNameNamePrefixEnum namePrefix;
    public IndividualName withNamePrefix(IndividualNameNamePrefixEnum namePrefix) {
        this.namePrefix = namePrefix;
        return this;
    }
    
    /**
     * The individual's name suffix, for example, "Jr" or "Sr".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nameSuffix")
    public String nameSuffix;
    public IndividualName withNameSuffix(String nameSuffix) {
        this.nameSuffix = nameSuffix;
        return this;
    }
    
    /**
     * The name type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nameType")
    public IndividualNameNameTypeEnum nameType;
    public IndividualName withNameType(IndividualNameNameTypeEnum nameType) {
        this.nameType = nameType;
        return this;
    }
    
    /**
     * The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("toDate")
    public OffsetDateTime toDate;
    public IndividualName withToDate(OffsetDateTime toDate) {
        this.toDate = toDate;
        return this;
    }
    
}
