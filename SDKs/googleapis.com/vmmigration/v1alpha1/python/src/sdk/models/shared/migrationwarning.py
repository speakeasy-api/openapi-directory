"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import link as shared_link
from ..shared import localizedmessage as shared_localizedmessage
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MigrationWarningCodeEnum(str, Enum):
    r"""The warning code."""
    WARNING_CODE_UNSPECIFIED = 'WARNING_CODE_UNSPECIFIED'
    ADAPTATION_WARNING = 'ADAPTATION_WARNING'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MigrationWarning:
    r"""Represents migration resource warning information that can be used with google.rpc.Status message. MigrationWarning is used to present the user with warning information in migration operations."""
    
    action_item: Optional[shared_localizedmessage.LocalizedMessage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('actionItem'), 'exclude': lambda f: f is None }})
    r"""Provides a localized error message that is safe to return to the user which can be attached to an RPC error."""  
    code: Optional[MigrationWarningCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""The warning code."""  
    help_links: Optional[list[shared_link.Link]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('helpLinks'), 'exclude': lambda f: f is None }})
    r"""URL(s) pointing to additional information on handling the current warning."""  
    warning_message: Optional[shared_localizedmessage.LocalizedMessage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('warningMessage'), 'exclude': lambda f: f is None }})
    r"""Provides a localized error message that is safe to return to the user which can be attached to an RPC error."""  
    warning_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('warningTime'), 'exclude': lambda f: f is None }})
    r"""The time the warning occurred."""  
    