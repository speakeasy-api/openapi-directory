/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Point } from "./point";
import { Expose, Type } from "class-transformer";

/**
 * Information about the progress of some component of job execution.
 */
export class ProgressTimeseries extends SpeakeasyBase {
  /**
   * The current progress of the component, in the range [0,1].
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentProgress" })
  currentProgress?: number;

  /**
   * History of progress for the component. Points are sorted by time.
   */
  @SpeakeasyMetadata({ elemType: Point })
  @Expose({ name: "dataPoints" })
  @Type(() => Point)
  dataPoints?: Point[];
}
