"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from datetime import datetime
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationDestinationPortRange:
    r"""The destination port range."""
    
    from_port: Optional[int] = dataclasses.field(default=None)  
    to_port: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationSourcePortRange:
    r"""The source port range."""
    
    from_port: Optional[int] = dataclasses.field(default=None)  
    to_port: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestination:
    r"""Scopes the analysis to network paths that match specific filters at the destination."""
    
    destination_address: Optional[str] = dataclasses.field(default=None)  
    destination_port_range: Optional[CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationDestinationPortRange] = dataclasses.field(default=None)  
    source_address: Optional[str] = dataclasses.field(default=None)  
    source_port_range: Optional[CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestinationSourcePortRange] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceDestinationPortRange:
    r"""The destination port range."""
    
    from_port: Optional[int] = dataclasses.field(default=None)  
    to_port: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceSourcePortRange:
    r"""The source port range."""
    
    from_port: Optional[int] = dataclasses.field(default=None)  
    to_port: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSource:
    r"""Scopes the analysis to network paths that match specific filters at the source."""
    
    destination_address: Optional[str] = dataclasses.field(default=None)  
    destination_port_range: Optional[CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceDestinationPortRange] = dataclasses.field(default=None)  
    source_address: Optional[str] = dataclasses.field(default=None)  
    source_port_range: Optional[CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSourceSourcePortRange] = dataclasses.field(default=None)  
    
class CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum(str, Enum):
    r"""The protocol."""
    TCP = 'tcp'
    UDP = 'udp'


@dataclasses.dataclass
class CreateNetworkInsightsPathResultNetworkInsightsPathTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreateNetworkInsightsPathResultNetworkInsightsPath:
    r"""Information about the path."""
    
    created_date: Optional[datetime] = dataclasses.field(default=None)  
    destination: Optional[str] = dataclasses.field(default=None)  
    destination_arn: Optional[str] = dataclasses.field(default=None)  
    destination_ip: Optional[str] = dataclasses.field(default=None)  
    destination_port: Optional[int] = dataclasses.field(default=None)  
    filter_at_destination: Optional[CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtDestination] = dataclasses.field(default=None)  
    filter_at_source: Optional[CreateNetworkInsightsPathResultNetworkInsightsPathFilterAtSource] = dataclasses.field(default=None)  
    network_insights_path_arn: Optional[str] = dataclasses.field(default=None)  
    network_insights_path_id: Optional[str] = dataclasses.field(default=None)  
    protocol: Optional[CreateNetworkInsightsPathResultNetworkInsightsPathProtocolEnum] = dataclasses.field(default=None)  
    source: Optional[str] = dataclasses.field(default=None)  
    source_arn: Optional[str] = dataclasses.field(default=None)  
    source_ip: Optional[str] = dataclasses.field(default=None)  
    tags: Optional[list[CreateNetworkInsightsPathResultNetworkInsightsPathTags]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreateNetworkInsightsPathResult:
    r"""Success"""
    
    network_insights_path: Optional[CreateNetworkInsightsPathResultNetworkInsightsPath] = dataclasses.field(default=None)  
    