// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NotebookOutputOptionEnum string

const (
	NotebookOutputOptionEnumAllowed  NotebookOutputOptionEnum = "Allowed"
	NotebookOutputOptionEnumDisabled NotebookOutputOptionEnum = "Disabled"
)

func (e NotebookOutputOptionEnum) ToPointer() *NotebookOutputOptionEnum {
	return &e
}

func (e *NotebookOutputOptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Allowed":
		fallthrough
	case "Disabled":
		*e = NotebookOutputOptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NotebookOutputOptionEnum: %v", v)
	}
}
