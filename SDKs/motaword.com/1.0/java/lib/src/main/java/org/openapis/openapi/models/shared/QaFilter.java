/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class QaFilter {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("budget_codes")
    public String[] budgetCodes;
    public QaFilter withBudgetCodes(String[] budgetCodes) {
        this.budgetCodes = budgetCodes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categories")
    public String[] categories;
    public QaFilter withCategories(String[] categories) {
        this.categories = categories;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clients")
    public Double[] clients;
    public QaFilter withClients(Double[] clients) {
        this.clients = clients;
        return this;
    }
    
    /**
     * the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_from")
    public OffsetDateTime dateFrom;
    public QaFilter withDateFrom(OffsetDateTime dateFrom) {
        this.dateFrom = dateFrom;
        return this;
    }
    
    /**
     * the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_to")
    public OffsetDateTime dateTo;
    public QaFilter withDateTo(OffsetDateTime dateTo) {
        this.dateTo = dateTo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documents")
    public Double[] documents;
    public QaFilter withDocuments(Double[] documents) {
        this.documents = documents;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("projects")
    public Double[] projects;
    public QaFilter withProjects(Double[] projects) {
        this.projects = projects;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("severities")
    public String[] severities;
    public QaFilter withSeverities(String[] severities) {
        this.severities = severities;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source_languages")
    public String[] sourceLanguages;
    public QaFilter withSourceLanguages(String[] sourceLanguages) {
        this.sourceLanguages = sourceLanguages;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subjects")
    public String[] subjects;
    public QaFilter withSubjects(String[] subjects) {
        this.subjects = subjects;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("target_languages")
    public String[] targetLanguages;
    public QaFilter withTargetLanguages(String[] targetLanguages) {
        this.targetLanguages = targetLanguages;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vendors")
    public Double[] vendors;
    public QaFilter withVendors(Double[] vendors) {
        this.vendors = vendors;
        return this;
    }
    
}
