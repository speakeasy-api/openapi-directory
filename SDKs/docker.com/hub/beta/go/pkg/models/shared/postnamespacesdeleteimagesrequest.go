// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PostNamespacesDeleteImagesRequestIgnoreWarningsWarningEnum - Warning to ignore.
type PostNamespacesDeleteImagesRequestIgnoreWarningsWarningEnum string

const (
	PostNamespacesDeleteImagesRequestIgnoreWarningsWarningEnumIsActive   PostNamespacesDeleteImagesRequestIgnoreWarningsWarningEnum = "is_active"
	PostNamespacesDeleteImagesRequestIgnoreWarningsWarningEnumCurrentTag PostNamespacesDeleteImagesRequestIgnoreWarningsWarningEnum = "current_tag"
)

func (e *PostNamespacesDeleteImagesRequestIgnoreWarningsWarningEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "is_active":
		fallthrough
	case "current_tag":
		*e = PostNamespacesDeleteImagesRequestIgnoreWarningsWarningEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostNamespacesDeleteImagesRequestIgnoreWarningsWarningEnum: %s", s)
	}
}

type PostNamespacesDeleteImagesRequestIgnoreWarnings struct {
	// Digest of the image to ignore the warning for.
	Digest string `json:"digest"`
	// Name of the repository of the image to ignore the warning for.
	Repository string `json:"repository"`
	// Current tags to ignore.
	Tags []string `json:"tags,omitempty"`
	// Warning to ignore.
	Warning PostNamespacesDeleteImagesRequestIgnoreWarningsWarningEnum `json:"warning"`
}

type PostNamespacesDeleteImagesRequestManifests struct {
	// Digest of the image to delete.
	Digest string `json:"digest"`
	// Name of the repository to delete the image from.
	Repository string `json:"repository"`
}

// PostNamespacesDeleteImagesRequest - Delete images request.
type PostNamespacesDeleteImagesRequest struct {
	// Sets the time from which an image must have been pushed or pulled to
	// be counted as active.
	//
	// Defaults to 1 month before the current time.
	//
	ActiveFrom *string `json:"active_from,omitempty"`
	// If `true` then will check and return errors and unignored warnings for the deletion request but will not delete any images.
	DryRun *bool `json:"dry_run,omitempty"`
	// Warnings to ignore. If a warning is not ignored then no deletions will happen and the
	// warning is returned in the response.
	//
	// These warnings include:
	//
	// - is_active: warning when attempting to delete an image that is marked as active.
	// - current_tag: warning when attempting to delete an image that has one or more current
	// tags in the repository.
	//
	// Warnings can be copied from the response to the request.
	//
	IgnoreWarnings []PostNamespacesDeleteImagesRequestIgnoreWarnings `json:"ignore_warnings,omitempty"`
	// Image manifests to delete.
	Manifests []PostNamespacesDeleteImagesRequestManifests `json:"manifests,omitempty"`
}
