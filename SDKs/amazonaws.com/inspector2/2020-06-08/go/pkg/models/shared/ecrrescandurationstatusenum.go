// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EcrRescanDurationStatusEnum string

const (
	EcrRescanDurationStatusEnumSuccess EcrRescanDurationStatusEnum = "SUCCESS"
	EcrRescanDurationStatusEnumPending EcrRescanDurationStatusEnum = "PENDING"
	EcrRescanDurationStatusEnumFailed  EcrRescanDurationStatusEnum = "FAILED"
)

func (e EcrRescanDurationStatusEnum) ToPointer() *EcrRescanDurationStatusEnum {
	return &e
}

func (e *EcrRescanDurationStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUCCESS":
		fallthrough
	case "PENDING":
		fallthrough
	case "FAILED":
		*e = EcrRescanDurationStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EcrRescanDurationStatusEnum: %v", v)
	}
}
