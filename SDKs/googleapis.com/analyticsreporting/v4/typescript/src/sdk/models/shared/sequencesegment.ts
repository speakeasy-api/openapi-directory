/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SegmentSequenceStep } from "./segmentsequencestep";
import { Expose, Type } from "class-transformer";

/**
 * Sequence conditions consist of one or more steps, where each step is defined by one or more dimension/metric conditions. Multiple steps can be combined with special sequence operators.
 */
export class SequenceSegment extends SpeakeasyBase {
  /**
   * If set, first step condition must match the first hit of the visitor (in the date range).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstStepShouldMatchFirstHit" })
  firstStepShouldMatchFirstHit?: boolean;

  /**
   * The list of steps in the sequence.
   */
  @SpeakeasyMetadata({ elemType: SegmentSequenceStep })
  @Expose({ name: "segmentSequenceSteps" })
  @Type(() => SegmentSequenceStep)
  segmentSequenceSteps?: SegmentSequenceStep[];
}
