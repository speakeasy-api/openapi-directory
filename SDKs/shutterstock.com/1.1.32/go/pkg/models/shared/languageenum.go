// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LanguageEnum - Language code
type LanguageEnum string

const (
	LanguageEnumAr     LanguageEnum = "ar"
	LanguageEnumBg     LanguageEnum = "bg"
	LanguageEnumBn     LanguageEnum = "bn"
	LanguageEnumCs     LanguageEnum = "cs"
	LanguageEnumDa     LanguageEnum = "da"
	LanguageEnumDe     LanguageEnum = "de"
	LanguageEnumEl     LanguageEnum = "el"
	LanguageEnumEn     LanguageEnum = "en"
	LanguageEnumEs     LanguageEnum = "es"
	LanguageEnumFi     LanguageEnum = "fi"
	LanguageEnumFr     LanguageEnum = "fr"
	LanguageEnumGu     LanguageEnum = "gu"
	LanguageEnumHe     LanguageEnum = "he"
	LanguageEnumHi     LanguageEnum = "hi"
	LanguageEnumHr     LanguageEnum = "hr"
	LanguageEnumHu     LanguageEnum = "hu"
	LanguageEnumID     LanguageEnum = "id"
	LanguageEnumIt     LanguageEnum = "it"
	LanguageEnumJa     LanguageEnum = "ja"
	LanguageEnumKn     LanguageEnum = "kn"
	LanguageEnumKo     LanguageEnum = "ko"
	LanguageEnumMl     LanguageEnum = "ml"
	LanguageEnumMr     LanguageEnum = "mr"
	LanguageEnumNb     LanguageEnum = "nb"
	LanguageEnumNl     LanguageEnum = "nl"
	LanguageEnumOr     LanguageEnum = "or"
	LanguageEnumPl     LanguageEnum = "pl"
	LanguageEnumPt     LanguageEnum = "pt"
	LanguageEnumRo     LanguageEnum = "ro"
	LanguageEnumRu     LanguageEnum = "ru"
	LanguageEnumSk     LanguageEnum = "sk"
	LanguageEnumSl     LanguageEnum = "sl"
	LanguageEnumSv     LanguageEnum = "sv"
	LanguageEnumTa     LanguageEnum = "ta"
	LanguageEnumTe     LanguageEnum = "te"
	LanguageEnumTh     LanguageEnum = "th"
	LanguageEnumTr     LanguageEnum = "tr"
	LanguageEnumUk     LanguageEnum = "uk"
	LanguageEnumUr     LanguageEnum = "ur"
	LanguageEnumVi     LanguageEnum = "vi"
	LanguageEnumZh     LanguageEnum = "zh"
	LanguageEnumZhHant LanguageEnum = "zh-Hant"
)

func (e LanguageEnum) ToPointer() *LanguageEnum {
	return &e
}

func (e *LanguageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ar":
		fallthrough
	case "bg":
		fallthrough
	case "bn":
		fallthrough
	case "cs":
		fallthrough
	case "da":
		fallthrough
	case "de":
		fallthrough
	case "el":
		fallthrough
	case "en":
		fallthrough
	case "es":
		fallthrough
	case "fi":
		fallthrough
	case "fr":
		fallthrough
	case "gu":
		fallthrough
	case "he":
		fallthrough
	case "hi":
		fallthrough
	case "hr":
		fallthrough
	case "hu":
		fallthrough
	case "id":
		fallthrough
	case "it":
		fallthrough
	case "ja":
		fallthrough
	case "kn":
		fallthrough
	case "ko":
		fallthrough
	case "ml":
		fallthrough
	case "mr":
		fallthrough
	case "nb":
		fallthrough
	case "nl":
		fallthrough
	case "or":
		fallthrough
	case "pl":
		fallthrough
	case "pt":
		fallthrough
	case "ro":
		fallthrough
	case "ru":
		fallthrough
	case "sk":
		fallthrough
	case "sl":
		fallthrough
	case "sv":
		fallthrough
	case "ta":
		fallthrough
	case "te":
		fallthrough
	case "th":
		fallthrough
	case "tr":
		fallthrough
	case "uk":
		fallthrough
	case "ur":
		fallthrough
	case "vi":
		fallthrough
	case "zh":
		fallthrough
	case "zh-Hant":
		*e = LanguageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LanguageEnum: %v", v)
	}
}
