<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * EnterpriseCrmFrontendsEventbusProtoParameterEntry - Key-value pair of EventBus parameters.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class EnterpriseCrmFrontendsEventbusProtoParameterEntry
{
    /**
     * Explicitly getting the type of the parameter.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmFrontendsEventbusProtoParameterEntryDataTypeEnum $dataType
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmFrontendsEventbusProtoParameterEntryDataTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EnterpriseCrmFrontendsEventbusProtoParameterEntryDataTypeEnum $dataType = null;
    
    /**
     * Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the workflow definition.
     * 
     * @var ?string $key
     */
	#[\JMS\Serializer\Annotation\SerializedName('key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $key = null;
    
    /**
     * To support various types of parameter values. Next available id: 14
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmFrontendsEventbusProtoParameterValueType $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmFrontendsEventbusProtoParameterValueType')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EnterpriseCrmFrontendsEventbusProtoParameterValueType $value = null;
    
	public function __construct()
	{
		$this->dataType = null;
		$this->key = null;
		$this->value = null;
	}
}
