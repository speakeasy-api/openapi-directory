/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Date } from "./date";
import { TimeOfDay } from "./timeofday";
import { Expose, Type } from "class-transformer";

/**
 * An interval of time, inclusive. It must contain all fields to be valid.
 */
export class TimeInterval extends SpeakeasyBase {
  /**
   * Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDate" })
  @Type(() => Date)
  endDate?: Date;

  /**
   * Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  @Type(() => TimeOfDay)
  endTime?: TimeOfDay;

  /**
   * Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values * A month and day value, with a zero year, such as an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, such as a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startDate" })
  @Type(() => Date)
  startDate?: Date;

  /**
   * Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Type(() => TimeOfDay)
  startTime?: TimeOfDay;
}
