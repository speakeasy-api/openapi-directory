"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import mutationprotectionstatus_enum as shared_mutationprotectionstatus_enum
from ..shared import tag as shared_tag
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AssociateFirewallRuleGroupRequest:
    
    creator_request_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatorRequestId') }})  
    firewall_rule_group_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FirewallRuleGroupId') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    priority: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Priority') }})  
    vpc_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VpcId') }})  
    mutation_protection: Optional[shared_mutationprotectionstatus_enum.MutationProtectionStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MutationProtection'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    