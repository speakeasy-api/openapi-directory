/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Parent link for the custom metric. Points to the property to which the custom metric belongs.
 */
export class CustomMetricParentLink extends SpeakeasyBase {
  /**
   * Link to the property to which the custom metric belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;

  /**
   * Type of the parent link. Set to "analytics#webproperty".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * JSON template for Analytics Custom Metric.
 */
export class CustomMetricInput extends SpeakeasyBase {
  /**
   * Account ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * Boolean indicating whether the custom metric is active.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  /**
   * Custom metric ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Max value of custom metric.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_value" })
  maxValue?: string;

  /**
   * Min value of custom metric.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "min_value" })
  minValue?: string;

  /**
   * Name of the custom metric.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Parent link for the custom metric. Points to the property to which the custom metric belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentLink" })
  @Type(() => CustomMetricParentLink)
  parentLink?: CustomMetricParentLink;

  /**
   * Scope of the custom metric: HIT or PRODUCT.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: string;

  /**
   * Data type of custom metric.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Property ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "webPropertyId" })
  webPropertyId?: string;
}

/**
 * JSON template for Analytics Custom Metric.
 */
export class CustomMetric extends SpeakeasyBase {
  /**
   * Account ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  /**
   * Boolean indicating whether the custom metric is active.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  /**
   * Time the custom metric was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  /**
   * Custom metric ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Index of the custom metric.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "index" })
  index?: number;

  /**
   * Kind value for a custom metric. Set to "analytics#customMetric". It is a read-only field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Max value of custom metric.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max_value" })
  maxValue?: string;

  /**
   * Min value of custom metric.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "min_value" })
  minValue?: string;

  /**
   * Name of the custom metric.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Parent link for the custom metric. Points to the property to which the custom metric belongs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentLink" })
  @Type(() => CustomMetricParentLink)
  parentLink?: CustomMetricParentLink;

  /**
   * Scope of the custom metric: HIT or PRODUCT.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: string;

  /**
   * Link for the custom metric
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * Data type of custom metric.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Time the custom metric was last modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updated?: Date;

  /**
   * Property ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "webPropertyId" })
  webPropertyId?: string;
}
