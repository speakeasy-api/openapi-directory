// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETClusterCredentialsWithIAMActionEnum
type GETGETClusterCredentialsWithIAMActionEnum string

const (
	GETGETClusterCredentialsWithIAMActionEnumGetClusterCredentialsWithIam GETGETClusterCredentialsWithIAMActionEnum = "GetClusterCredentialsWithIAM"
)

func (e *GETGETClusterCredentialsWithIAMActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetClusterCredentialsWithIAM":
		*e = GETGETClusterCredentialsWithIAMActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETClusterCredentialsWithIAMActionEnum: %s", s)
	}
}

// GETGETClusterCredentialsWithIAMVersionEnum
type GETGETClusterCredentialsWithIAMVersionEnum string

const (
	GETGETClusterCredentialsWithIAMVersionEnumTwoThousandAndTwelve1201 GETGETClusterCredentialsWithIAMVersionEnum = "2012-12-01"
)

func (e *GETGETClusterCredentialsWithIAMVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = GETGETClusterCredentialsWithIAMVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETClusterCredentialsWithIAMVersionEnum: %s", s)
	}
}

type GETGETClusterCredentialsWithIAMRequest struct {
	Action GETGETClusterCredentialsWithIAMActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The unique identifier of the cluster that contains the database for which you are requesting credentials.
	ClusterIdentifier string `queryParam:"style=form,explode=true,name=ClusterIdentifier"`
	// The name of the database for which you are requesting credentials. If the database name is specified, the IAM policy must allow access to the resource <code>dbname</code> for the specified database name. If the database name is not specified, access to all databases is allowed.
	DbName *string `queryParam:"style=form,explode=true,name=DbName"`
	// <p>The number of seconds until the returned temporary password expires.</p> <p>Range: 900-3600. Default: 900.</p>
	DurationSeconds   *int64                                     `queryParam:"style=form,explode=true,name=DurationSeconds"`
	Version           GETGETClusterCredentialsWithIAMVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETClusterCredentialsWithIAMResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
