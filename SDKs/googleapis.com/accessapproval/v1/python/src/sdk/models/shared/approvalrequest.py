"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accesslocations as shared_accesslocations
from ..shared import accessreason as shared_accessreason
from ..shared import approvedecision as shared_approvedecision
from ..shared import dismissdecision as shared_dismissdecision
from ..shared import resourceproperties as shared_resourceproperties
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ApprovalRequest:
    r"""A request for the customer to approve access to a resource."""
    
    approve: Optional[shared_approvedecision.ApproveDecision] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('approve'), 'exclude': lambda f: f is None }})
    r"""A decision that has been made to approve access to a resource."""  
    dismiss: Optional[shared_dismissdecision.DismissDecision] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dismiss'), 'exclude': lambda f: f is None }})
    r"""A decision that has been made to dismiss an approval request."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name of the request. Format is \\"{projects|folders|organizations}/{id}/approvalRequests/{approval_request}\\"."""  
    requested_expiration: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestedExpiration'), 'exclude': lambda f: f is None }})
    r"""The requested expiration for the approval. If the request is approved, access will be granted from the time of approval until the expiration time."""  
    requested_locations: Optional[shared_accesslocations.AccessLocations] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestedLocations'), 'exclude': lambda f: f is None }})
    r"""Home office and physical location of the principal."""  
    requested_reason: Optional[shared_accessreason.AccessReason] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestedReason'), 'exclude': lambda f: f is None }})  
    requested_resource_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestedResourceName'), 'exclude': lambda f: f is None }})
    r"""The resource for which approval is being requested. The format of the resource name is defined at https://cloud.google.com/apis/design/resource_names. The resource name here may either be a \\"full\\" resource name (e.g. \\"//library.googleapis.com/shelves/shelf1/books/book2\\") or a \\"relative\\" resource name (e.g. \\"shelves/shelf1/books/book2\\") as described in the resource name specification."""  
    requested_resource_properties: Optional[shared_resourceproperties.ResourceProperties] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestedResourceProperties'), 'exclude': lambda f: f is None }})
    r"""The properties associated with the resource of the request."""  
    request_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requestTime'), 'exclude': lambda f: f is None }})
    r"""The time at which approval was requested."""  
    