"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import deductiontypecalculationtype_enum as shared_deductiontypecalculationtype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeductionLine:
    
    calculation_type: shared_deductiontypecalculationtype_enum.DeductionTypeCalculationTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CalculationType') }})  
    deduction_type_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeductionTypeID') }})
    r"""Xero deduction type identifier"""  
    amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Amount'), 'exclude': lambda f: f is None }})
    r"""Deduction type amount"""  
    number_of_units: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NumberOfUnits'), 'exclude': lambda f: f is None }})
    r"""Deduction number of units"""  
    percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Percentage'), 'exclude': lambda f: f is None }})
    r"""The Percentage of the Deduction"""  
    