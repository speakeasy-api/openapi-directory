/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class CodeownersErrorsErrors extends SpeakeasyBase {
  /**
   * The column number where this errors occurs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "column" })
  column: number;

  /**
   * The type of error.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind: string;

  /**
   * The line number where this errors occurs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "line" })
  line: number;

  /**
   * A human-readable description of the error, combining information from multiple fields, laid out for display in a monospaced typeface (for example, a command-line setting).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  /**
   * The path of the file where the error occured.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path: string;

  /**
   * The contents of the line where the error occurs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source?: string;

  /**
   * Suggested action to fix the error. This will usually be `null`, but is provided for some common errors.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "suggestion" })
  suggestion?: string;
}

/**
 * A list of errors found in a repo's CODEOWNERS file
 */
export class CodeownersErrors extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: CodeownersErrorsErrors })
  @Expose({ name: "errors" })
  @Type(() => CodeownersErrorsErrors)
  errors: CodeownersErrorsErrors[];
}
