/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PlaceOrderFromExistingOrderFormRequestBody {
    /**
     * Interest rate to be used in case it applies.
     */
    @JsonProperty("interestValue")
    public Long interestValue;
    public PlaceOrderFromExistingOrderFormRequestBody withInterestValue(Long interestValue) {
        this.interestValue = interestValue;
        return this;
    }
    
    /**
     * True if the shopper opted to receive the newsletter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("optinNewsLetter")
    public Boolean optinNewsLetter;
    public PlaceOrderFromExistingOrderFormRequestBody withOptinNewsLetter(Boolean optinNewsLetter) {
        this.optinNewsLetter = optinNewsLetter;
        return this;
    }
    
    /**
     * ID of the `orderForm` corresponding to the cart from which to place the order. This is the same as the `orderFormId` parameter.
     */
    @JsonProperty("referenceId")
    public String referenceId;
    public PlaceOrderFromExistingOrderFormRequestBody withReferenceId(String referenceId) {
        this.referenceId = referenceId;
        return this;
    }
    
    /**
     * Reference value of the order for calculating interest if that is the case. Can be equal to the total value and does not separate cents. For example, $24.99 is represented `2499`.
     */
    @JsonProperty("referenceValue")
    public Long referenceValue;
    public PlaceOrderFromExistingOrderFormRequestBody withReferenceValue(Long referenceValue) {
        this.referenceValue = referenceValue;
        return this;
    }
    
    /**
     * `true` if the shopper's data provided during checkout should be saved for future reference.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("savePersonalData")
    public Boolean savePersonalData;
    public PlaceOrderFromExistingOrderFormRequestBody withSavePersonalData(Boolean savePersonalData) {
        this.savePersonalData = savePersonalData;
        return this;
    }
    
    /**
     * Total value of the order without separating cents. For example, $24.99 is represented `2499`.
     */
    @JsonProperty("value")
    public Long value;
    public PlaceOrderFromExistingOrderFormRequestBody withValue(Long value) {
        this.value = value;
        return this;
    }
    
}
