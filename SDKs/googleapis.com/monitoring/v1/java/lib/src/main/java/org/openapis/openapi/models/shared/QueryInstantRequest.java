/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * QueryInstantRequest - QueryInstantRequest holds all parameters of the Prometheus upstream instant query API plus GCM specific parameters.
 */
public class QueryInstantRequest {
    /**
     * A PromQL query string. Query lanauge documentation: https://prometheus.io/docs/prometheus/latest/querying/basics/.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("query")
    public String query;
    public QueryInstantRequest withQuery(String query) {
        this.query = query;
        return this;
    }
    
    /**
     * The single point in time to evaluate the query for. Either floating point UNIX seconds or RFC3339 formatted timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("time")
    public String time;
    public QueryInstantRequest withTime(String time) {
        this.time = time;
        return this;
    }
    
    /**
     * An upper bound timeout for the query. Either a Prometheus duration string (https://prometheus.io/docs/prometheus/latest/querying/basics/#time-durations) or floating point seconds. This non-standard encoding must be used for compatibility with the open source API. Clients may still implement timeouts at the connection level while ignoring this field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeout")
    public String timeout;
    public QueryInstantRequest withTimeout(String timeout) {
        this.timeout = timeout;
        return this;
    }
    
}
