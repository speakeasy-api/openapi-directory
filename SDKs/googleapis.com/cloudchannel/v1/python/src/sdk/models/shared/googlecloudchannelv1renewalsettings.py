"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudchannelv1period as shared_googlecloudchannelv1period
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudChannelV1RenewalSettingsPaymentPlanEnum(str, Enum):
    r"""Describes how a reseller will be billed."""
    PAYMENT_PLAN_UNSPECIFIED = 'PAYMENT_PLAN_UNSPECIFIED'
    COMMITMENT = 'COMMITMENT'
    FLEXIBLE = 'FLEXIBLE'
    FREE = 'FREE'
    TRIAL = 'TRIAL'
    OFFLINE = 'OFFLINE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudChannelV1RenewalSettings:
    r"""Renewal settings for renewable Offers."""
    
    enable_renewal: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enableRenewal'), 'exclude': lambda f: f is None }})
    r"""If false, the plan will be completed at the end date."""  
    payment_cycle: Optional[shared_googlecloudchannelv1period.GoogleCloudChannelV1Period] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentCycle'), 'exclude': lambda f: f is None }})
    r"""Represents period in days/months/years."""  
    payment_plan: Optional[GoogleCloudChannelV1RenewalSettingsPaymentPlanEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentPlan'), 'exclude': lambda f: f is None }})
    r"""Describes how a reseller will be billed."""  
    resize_unit_count: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resizeUnitCount'), 'exclude': lambda f: f is None }})
    r"""If true and enable_renewal = true, the unit (for example seats or licenses) will be set to the number of active units at renewal time."""  
    