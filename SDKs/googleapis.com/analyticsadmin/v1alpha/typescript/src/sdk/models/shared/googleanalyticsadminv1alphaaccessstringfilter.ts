/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The match type for this filter.
 */
export enum GoogleAnalyticsAdminV1alphaAccessStringFilterMatchTypeEnum {
  MatchTypeUnspecified = "MATCH_TYPE_UNSPECIFIED",
  Exact = "EXACT",
  BeginsWith = "BEGINS_WITH",
  EndsWith = "ENDS_WITH",
  Contains = "CONTAINS",
  FullRegexp = "FULL_REGEXP",
  PartialRegexp = "PARTIAL_REGEXP",
}

/**
 * The filter for strings.
 */
export class GoogleAnalyticsAdminV1alphaAccessStringFilter extends SpeakeasyBase {
  /**
   * If true, the string value is case sensitive.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caseSensitive" })
  caseSensitive?: boolean;

  /**
   * The match type for this filter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "matchType" })
  matchType?: GoogleAnalyticsAdminV1alphaAccessStringFilterMatchTypeEnum;

  /**
   * The string value used for the matching.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}
