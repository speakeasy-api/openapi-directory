<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

/**
 * SDK - HeraldAPI is the API for commercial insurance.
 * 
 * 
 * Below are the available endpoints:
 * 
 * <b>Welcome & Health Check</b>
 * <br><tt>[GET&nbsp;/](/b3A6ODY5Mzc1MA-)</tt>
 * <hr>
 * 
 * <b>Submissions</b>
 * <br><tt>[POST&nbsp;/submissions](/b3A6OTQ1Mjg5Nw-submissions)</tt>
 * <br><tt>[GET&nbsp;&nbsp;/submissions/{submission_id}](/b3A6OTQ1ODY3Mg-submissions-submission-id)</tt>
 * <hr>
 * 
 * <b>Quotes</b>
 * <br><tt>[GET&nbsp;/quotes/{quote_id}](/b3A6ODc3NjcwMg-quotes-quote-id)</tt>
 * <hr>
 * 
 * <b>Producers</b>
 * <br><tt>[GET&nbsp;/producers](/b3A6ODc3NjcwMQ-producers)</tt>
 * <hr>
 * 
 * <b>Products</b>
 * <br><tt>[GET&nbsp;/products](/b3A6ODc3NjcwNg-products)</tt>
 * <hr>
 * 
 * <b>Institutions</b>
 * <br><tt>[GET&nbsp;/institutions](/b3A6ODc3NjcwNw-institutions)</tt>
 * <hr>
 * 
 * <b>Coverage Parameters</b>
 * <br><tt>[GET&nbsp;/coverage_parameters](/b3A6MTA0MDgyNzc-coverage-parameters)</tt>
 * <hr>
 * 
 * <b>Risk Parameters</b>
 * <br><tt>[GET&nbsp;/risk_parameters](/b3A6MTA0MDgyNzg-risk-parameters)</tt>
 * 
 * @package OpenAPI\OpenAPI
 * @access public
 */
class SDK
{
	public const SERVERS = [
        /** Sandbox Environment */
		'https://sandbox.heraldapi.com',
        /** Production Environment */
		'https://production.heraldapi.com',
	];
  	
	public Applications $applications;
	
	public Auth $auth;
	
	public Classifications $classifications;
	
	public CoverageParameters $coverageParameters;
	
	public Files $files;
	
	public Institutions $institutions;
	
	public Policies $policies;
	
	public Producers $producers;
	
	public Products $products;
	
	public Quotes $quotes;
	
	public RiskParameters $riskParameters;
	
	public Submissions $submissions;
	
	public WelcomeAndHealthCheck $welcomeAndHealthCheck;
		
	// SDK private variables namespaced with _ to avoid conflicts with API models
	private ?\GuzzleHttp\ClientInterface $_defaultClient;
	private ?\GuzzleHttp\ClientInterface $_securityClient;
	private ?Models\Shared\Security $_security;
	private string $_serverUrl;
	private string $_language = 'php';
	private string $_sdkVersion = '0.0.1';
	private string $_genVersion = 'internal';

	/**
	 * Returns a new instance of the SDK builder used to configure and create the SDK instance.
	 * 
	 * @return SDKBuilder
	 */
	public static function builder(): SDKBuilder
	{
		return new SDKBuilder();
	}

	/**
	 * @param \GuzzleHttp\ClientInterface|null $client	 
	 * @param Models\Shared\Security|null $security
	 * @param string $serverUrl
	 * @param array<string, string>|null $params
	 */
	public function __construct(?\GuzzleHttp\ClientInterface $client, ?Models\Shared\Security $security, string $serverUrl, ?array $params)
	{
		$this->_defaultClient = $client;
		
		if ($this->_defaultClient === null) {
			$this->_defaultClient = new \GuzzleHttp\Client([
				'timeout' => 60,
			]);
		}

		$this->_securityClient = null;
		if ($security !== null) {
			$this->_security = $security;
			$this->_securityClient = Utils\Utils::configureSecurityClient($this->_defaultClient, $this->_security);
		}
		
		if ($this->_securityClient === null) {
			$this->_securityClient = $this->_defaultClient;
		}

		if (!empty($serverUrl)) {
			$this->_serverUrl = Utils\Utils::templateUrl($serverUrl, $params);
		}
		
		if (empty($this->_serverUrl)) {
			$this->_serverUrl = $this::SERVERS[0];
		}
		
		$this->applications = new Applications(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->auth = new Auth(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->classifications = new Classifications(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->coverageParameters = new CoverageParameters(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->files = new Files(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->institutions = new Institutions(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->policies = new Policies(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->producers = new Producers(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->products = new Products(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->quotes = new Quotes(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->riskParameters = new RiskParameters(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->submissions = new Submissions(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->welcomeAndHealthCheck = new WelcomeAndHealthCheck(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
	}
}