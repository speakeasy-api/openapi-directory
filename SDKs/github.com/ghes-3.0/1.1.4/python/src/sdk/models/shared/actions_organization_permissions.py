"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import allowed_actions_enum as shared_allowed_actions_enum
from ..shared import enabled_repositories_enum as shared_enabled_repositories_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ActionsOrganizationPermissions:
    r"""Response"""
    
    enabled_repositories: shared_enabled_repositories_enum.EnabledRepositoriesEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled_repositories') }})
    r"""The policy that controls the repositories in the organization that are allowed to run GitHub Actions. Can be one of: `all`, `none`, or `selected`."""  
    allowed_actions: Optional[shared_allowed_actions_enum.AllowedActionsEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowed_actions'), 'exclude': lambda f: f is None }})
    r"""The permissions policy that controls the actions that are allowed to run. Can be one of: `all`, `local_only`, or `selected`."""  
    selected_actions_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selected_actions_url'), 'exclude': lambda f: f is None }})
    r"""The API URL to use to get or set the actions that are allowed to run, when `allowed_actions` is set to `selected`."""  
    selected_repositories_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selected_repositories_url'), 'exclude': lambda f: f is None }})
    r"""The API URL to use to get or set the selected repositories that are allowed to run GitHub Actions, when `enabled_repositories` is set to `selected`."""  
    