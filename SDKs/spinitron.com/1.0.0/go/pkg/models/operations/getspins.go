// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type GetSpinsRequest struct {
	// Amount of items to return
	Count *int64 `queryParam:"style=form,explode=true,name=count"`
	// The ending datetime.
	//
	End *time.Time `queryParam:"style=form,explode=true,name=end"`
	// Allows to select extra fields
	Expand []string `queryParam:"style=form,explode=true,name=expand"`
	// Allows to select only needed fields
	Fields []string `queryParam:"style=form,explode=true,name=fields"`
	// Offset, used together with count
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Filter by playlist
	PlaylistID *int64 `queryParam:"style=form,explode=true,name=playlist_id"`
	// Filter by show
	ShowID *int64 `queryParam:"style=form,explode=true,name=show_id"`
	// The datetime starting from items must be returned.
	//
	Start *time.Time `queryParam:"style=form,explode=true,name=start"`
}

type GetSpins200ApplicationXMLLinks struct {
	Self *shared.Link
}

// GetSpins200ApplicationXML - The spins
type GetSpins200ApplicationXML struct {
	Links *GetSpins200ApplicationXMLLinks
	Meta  *shared.Pagination
	Items []shared.Spin
}

type GetSpins200ApplicationJSONLinks struct {
	Self *shared.Link `json:"self,omitempty"`
}

// GetSpins200ApplicationJSON - The spins
type GetSpins200ApplicationJSON struct {
	Links *GetSpins200ApplicationJSONLinks `json:"_links,omitempty"`
	Meta  *shared.Pagination               `json:"_meta,omitempty"`
	Items []shared.Spin                    `json:"items,omitempty"`
}

type GetSpinsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The spins
	GetSpins200ApplicationJSONObject *GetSpins200ApplicationJSON
}
