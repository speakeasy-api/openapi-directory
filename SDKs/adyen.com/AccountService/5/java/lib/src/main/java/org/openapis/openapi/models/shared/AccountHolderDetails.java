/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AccountHolderDetails {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public ViasAddress address;
    public AccountHolderDetails withAddress(ViasAddress address) {
        this.address = address;
        return this;
    }
    
    /**
     * Array of bank accounts associated with the account holder. For details about the required `bankAccountDetail` fields, see [Required information](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/required-information).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankAccountDetails")
    public BankAccountDetail[] bankAccountDetails;
    public AccountHolderDetails withBankAccountDetails(BankAccountDetail[] bankAccountDetails) {
        this.bankAccountDetails = bankAccountDetails;
        return this;
    }
    
    /**
     * The opaque reference value returned by the Adyen API during bank account login.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankAggregatorDataReference")
    public String bankAggregatorDataReference;
    public AccountHolderDetails withBankAggregatorDataReference(String bankAggregatorDataReference) {
        this.bankAggregatorDataReference = bankAggregatorDataReference;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("businessDetails")
    public BusinessDetails businessDetails;
    public AccountHolderDetails withBusinessDetails(BusinessDetails businessDetails) {
        this.businessDetails = businessDetails;
        return this;
    }
    
    /**
     * The email address of the account holder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public AccountHolderDetails withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * The phone number of the account holder provided as a single string. It will be handled as a landline phone.
     * **Examples:** "0031 6 11 22 33 44", "+316/1122-3344", "(0031) 611223344"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullPhoneNumber")
    public String fullPhoneNumber;
    public AccountHolderDetails withFullPhoneNumber(String fullPhoneNumber) {
        this.fullPhoneNumber = fullPhoneNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("individualDetails")
    public IndividualDetails individualDetails;
    public AccountHolderDetails withIndividualDetails(IndividualDetails individualDetails) {
        this.individualDetails = individualDetails;
        return this;
    }
    
    /**
     * Date when you last reviewed the account holder's information, in ISO-8601 YYYY-MM-DD format. For example, **2020-01-31**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastReviewDate")
    public String lastReviewDate;
    public AccountHolderDetails withLastReviewDate(String lastReviewDate) {
        this.lastReviewDate = lastReviewDate;
        return this;
    }
    
    /**
     * The Merchant Category Code of the account holder.
     * &gt; If not specified in the request, this will be derived from the platform account (which is configured by Adyen).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantCategoryCode")
    public String merchantCategoryCode;
    public AccountHolderDetails withMerchantCategoryCode(String merchantCategoryCode) {
        this.merchantCategoryCode = merchantCategoryCode;
        return this;
    }
    
    /**
     * A set of key and value pairs for general use by the account holder or merchant.
     * The keys do not have specific names and may be used for storing miscellaneous data as desired.
     * &gt; The values being stored have a maximum length of eighty (80) characters and will be truncated if necessary.
     * &gt; Note that during an update of metadata, the omission of existing key-value pairs will result in the deletion of those key-value pairs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, String> metadata;
    public AccountHolderDetails withMetadata(java.util.Map<String, String> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Array of tokenized card details associated with the account holder. For details about how you can use the tokens to pay out, refer to [Pay out to cards](https://docs.adyen.com/marketplaces-and-platforms/classic/payout-to-cards).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payoutMethods")
    public PayoutMethod[] payoutMethods;
    public AccountHolderDetails withPayoutMethods(PayoutMethod[] payoutMethods) {
        this.payoutMethods = payoutMethods;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("principalBusinessAddress")
    public ViasAddress principalBusinessAddress;
    public AccountHolderDetails withPrincipalBusinessAddress(ViasAddress principalBusinessAddress) {
        this.principalBusinessAddress = principalBusinessAddress;
        return this;
    }
    
    /**
     * Array of stores associated with the account holder. Required when onboarding account holders that have an Adyen [point of sale](https://docs.adyen.com/marketplaces-and-platforms/classic/platforms-for-pos).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storeDetails")
    public StoreDetail[] storeDetails;
    public AccountHolderDetails withStoreDetails(StoreDetail[] storeDetails) {
        this.storeDetails = storeDetails;
        return this;
    }
    
    /**
     * The URL of the website of the account holder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAddress")
    public String webAddress;
    public AccountHolderDetails withWebAddress(String webAddress) {
        this.webAddress = webAddress;
        return this;
    }
    
}
