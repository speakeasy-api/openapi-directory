/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the deposit.
 */
export enum CheckDepositCurrencyEnum {
  Cad = "CAD",
  Chf = "CHF",
  Eur = "EUR",
  Gbp = "GBP",
  Jpy = "JPY",
  Usd = "USD",
}

/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
 */
export enum CheckDepositCheckDepositAcceptanceCurrencyEnum {
  Cad = "CAD",
  Chf = "CHF",
  Eur = "EUR",
  Gbp = "GBP",
  Jpy = "JPY",
  Usd = "USD",
}

/**
 * If your deposit is successfully parsed and accepted by Increase, this will contain details of the parsed check.
 */
export class CheckDepositCheckDepositAcceptance extends SpeakeasyBase {
  /**
   * The account number printed on the check.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_number" })
  accountNumber: string;

  /**
   * The amount to be deposited in the minor unit of the transaction's currency. For dollars, for example, this is cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: number;

  /**
   * An additional line of metadata printed on the check. This typically includes the check number for business checks.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "auxiliary_on_us" })
  auxiliaryOnUs: string;

  /**
   * The ID of the Check Deposit that was accepted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "check_deposit_id" })
  checkDepositId: string;

  /**
   * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: CheckDepositCheckDepositAcceptanceCurrencyEnum;

  /**
   * The routing number printed on the check.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "routing_number" })
  routingNumber: string;

  /**
   * The check serial number, if present, for consumer checks. For business checks, the serial number is usually in the `auxiliary_on_us` field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serial_number" })
  serialNumber: string;
}

/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.
 */
export enum CheckDepositCheckDepositRejectionCurrencyEnum {
  Cad = "CAD",
  Chf = "CHF",
  Eur = "EUR",
  Gbp = "GBP",
  Jpy = "JPY",
  Usd = "USD",
}

/**
 * Why the check deposit was rejected.
 */
export enum CheckDepositCheckDepositRejectionReasonEnum {
  IncompleteImage = "incomplete_image",
  Duplicate = "duplicate",
  PoorImageQuality = "poor_image_quality",
  IncorrectAmount = "incorrect_amount",
  IncorrectRecipient = "incorrect_recipient",
  NotEligibleForMobileDeposit = "not_eligible_for_mobile_deposit",
  Unknown = "unknown",
}

/**
 * If your deposit is rejected by Increase, this will contain details as to why it was rejected.
 */
export class CheckDepositCheckDepositRejection extends SpeakeasyBase {
  /**
   * The rejected amount in the minor unit of check's currency. For dollars, for example, this is cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: number;

  /**
   * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the check's currency.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: CheckDepositCheckDepositRejectionCurrencyEnum;

  /**
   * Why the check deposit was rejected.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason: CheckDepositCheckDepositRejectionReasonEnum;

  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was rejected.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rejected_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  rejectedAt: Date;
}

/**
 * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
 */
export enum CheckDepositCheckDepositReturnCurrencyEnum {
  Cad = "CAD",
  Chf = "CHF",
  Eur = "EUR",
  Gbp = "GBP",
  Jpy = "JPY",
  Usd = "USD",
}

export enum CheckDepositCheckDepositReturnReturnReasonEnum {
  AchConversionNotSupported = "ach_conversion_not_supported",
  ClosedAccount = "closed_account",
  DuplicateSubmission = "duplicate_submission",
  InsufficientFunds = "insufficient_funds",
  NoAccount = "no_account",
  NotAuthorized = "not_authorized",
  StaleDated = "stale_dated",
  StopPayment = "stop_payment",
  UnknownReason = "unknown_reason",
  UnmatchedDetails = "unmatched_details",
  UnreadableImage = "unreadable_image",
}

/**
 * If your deposit is returned, this will contain details as to why it was returned.
 */
export class CheckDepositCheckDepositReturn extends SpeakeasyBase {
  /**
   * The amount in the minor unit of the transaction's currency. For dollars, for example, this is cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: number;

  /**
   * The identifier of the Check Deposit that was returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "check_deposit_id" })
  checkDepositId: string;

  /**
   * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transaction's currency.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: CheckDepositCheckDepositReturnCurrencyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "return_reason" })
  returnReason: CheckDepositCheckDepositReturnReturnReasonEnum;

  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the check deposit was returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "returned_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  returnedAt: Date;

  /**
   * The identifier of the transaction that reversed the original check deposit transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transaction_id" })
  transactionId: string;
}

/**
 * The status of the Check Deposit.
 */
export enum CheckDepositStatusEnum {
  Pending = "pending",
  Submitted = "submitted",
  Rejected = "rejected",
  Returned = "returned",
}

/**
 * A constant representing the object's type. For this resource it will always be `check_deposit`.
 */
export enum CheckDepositTypeEnum {
  CheckDeposit = "check_deposit",
}

/**
 * Check Deposits allow you to deposit images of paper checks into your account.
 */
export class CheckDeposit extends SpeakeasyBase {
  /**
   * The Account the check was deposited into.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_id" })
  accountId: string;

  /**
   * The deposited amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: number;

  /**
   * The ID for the File containing the image of the back of the check.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "back_image_file_id" })
  backImageFileId: string;

  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the deposit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: CheckDepositCurrencyEnum;

  /**
   * If your deposit is successfully parsed and accepted by Increase, this will contain details of the parsed check.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deposit_acceptance" })
  @Type(() => CheckDepositCheckDepositAcceptance)
  depositAcceptance: CheckDepositCheckDepositAcceptance;

  /**
   * If your deposit is rejected by Increase, this will contain details as to why it was rejected.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deposit_rejection" })
  @Type(() => CheckDepositCheckDepositRejection)
  depositRejection: CheckDepositCheckDepositRejection;

  /**
   * If your deposit is returned, this will contain details as to why it was returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deposit_return" })
  @Type(() => CheckDepositCheckDepositReturn)
  depositReturn: CheckDepositCheckDepositReturn;

  /**
   * The ID for the File containing the image of the front of the check.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "front_image_file_id" })
  frontImageFileId: string;

  /**
   * The deposit's identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The status of the Check Deposit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: CheckDepositStatusEnum;

  /**
   * The ID for the Transaction created by the deposit.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transaction_id" })
  transactionId: string;

  /**
   * A constant representing the object's type. For this resource it will always be `check_deposit`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: CheckDepositTypeEnum;
}
