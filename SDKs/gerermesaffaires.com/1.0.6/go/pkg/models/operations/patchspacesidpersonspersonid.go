// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PatchSpacesIDPersonsPersonIDPathParams struct {
	// Id of the space
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the person to modify or memberId
	PersonID string `pathParam:"style=simple,explode=false,name=personId"`
}

type PatchSpacesIDPersonsPersonIDRequestBodyAddress struct {
	City       *string `json:"City,omitempty"`
	Complement *string `json:"Complement,omitempty"`
	Country    *string `json:"Country,omitempty"`
	Street     *string `json:"Street,omitempty"`
	ZipCode    *string `json:"ZipCode,omitempty"`
}

type PatchSpacesIDPersonsPersonIDRequestBodyBirth struct {
	Date  *int64  `json:"Date,omitempty"`
	Place *string `json:"Place,omitempty"`
}

type PatchSpacesIDPersonsPersonIDRequestBodySexEnum string

const (
	PatchSpacesIDPersonsPersonIDRequestBodySexEnumMale   PatchSpacesIDPersonsPersonIDRequestBodySexEnum = "male"
	PatchSpacesIDPersonsPersonIDRequestBodySexEnumFemale PatchSpacesIDPersonsPersonIDRequestBodySexEnum = "female"
)

func (e *PatchSpacesIDPersonsPersonIDRequestBodySexEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "male":
		fallthrough
	case "female":
		*e = PatchSpacesIDPersonsPersonIDRequestBodySexEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesIDPersonsPersonIDRequestBodySexEnum: %s", s)
	}
}

// PatchSpacesIDPersonsPersonIDRequestBody - Person to modify
type PatchSpacesIDPersonsPersonIDRequestBody struct {
	Address      *PatchSpacesIDPersonsPersonIDRequestBodyAddress `json:"Address,omitempty"`
	ArchivalDate *string                                         `json:"ArchivalDate,omitempty"`
	Birth        *PatchSpacesIDPersonsPersonIDRequestBodyBirth   `json:"Birth,omitempty"`
	Comment      *string                                         `json:"Comment,omitempty"`
	Email        *string                                         `json:"Email,omitempty"`
	FirstName    *string                                         `json:"FirstName,omitempty"`
	Mobile       *string                                         `json:"Mobile,omitempty"`
	Name         *string                                         `json:"Name,omitempty"`
	Sex          *PatchSpacesIDPersonsPersonIDRequestBodySexEnum `json:"Sex,omitempty"`
}

type PatchSpacesIDPersonsPersonIDRequest struct {
	PathParams PatchSpacesIDPersonsPersonIDPathParams
	// Person to modify
	Request PatchSpacesIDPersonsPersonIDRequestBody `request:"mediaType=application/json"`
}

type PatchSpacesIDPersonsPersonIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
