/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleChromePolicyVersionsV1ResolveRequest - Request message for getting the resolved policy value for a specific target.
 */
public class GoogleChromePolicyVersionsV1ResolveRequest {
    /**
     * The maximum number of policies to return, defaults to 100 and has a maximum of 1000.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageSize")
    public Integer pageSize;
    public GoogleChromePolicyVersionsV1ResolveRequest withPageSize(Integer pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    /**
     * The page token used to retrieve a specific page of the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageToken")
    public String pageToken;
    public GoogleChromePolicyVersionsV1ResolveRequest withPageToken(String pageToken) {
        this.pageToken = pageToken;
        return this;
    }
    
    /**
     * Required. The schema filter to apply to the resolve request. Specify a schema name to view a particular schema, for example: chrome.users.ShowLogoutButton Wildcards are supported, but only in the leaf portion of the schema name. Wildcards cannot be used in namespace directly. Please read https://developers.google.com/chrome/policy/guides/policy-schemas for details on schema namespaces. For example: Valid: "chrome.users.*", "chrome.users.apps.*", "chrome.printers.*" Invalid: "*", "*.users", "chrome.*", "chrome.*.apps.*"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policySchemaFilter")
    public String policySchemaFilter;
    public GoogleChromePolicyVersionsV1ResolveRequest withPolicySchemaFilter(String policySchemaFilter) {
        this.policySchemaFilter = policySchemaFilter;
        return this;
    }
    
    /**
     * The key used to identify the target on which the policy will be applied.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policyTargetKey")
    public GoogleChromePolicyVersionsV1PolicyTargetKey policyTargetKey;
    public GoogleChromePolicyVersionsV1ResolveRequest withPolicyTargetKey(GoogleChromePolicyVersionsV1PolicyTargetKey policyTargetKey) {
        this.policyTargetKey = policyTargetKey;
        return this;
    }
    
}
