// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// PayoutScheduleResponseScheduleEnum - The payout schedule of the account.
// Permitted values: `DEFAULT`, `DAILY`, `DAILY_US`, `DAILY_EU`, `DAILY_AU`, `DAILY_SG`, `WEEKLY`, `WEEKLY_ON_TUE_FRI_MIDNIGHT`, `BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT`, `MONTHLY`, `HOLD`.
type PayoutScheduleResponseScheduleEnum string

const (
	PayoutScheduleResponseScheduleEnumBiweeklyOn1StAnd15ThAtMidnight PayoutScheduleResponseScheduleEnum = "BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT"
	PayoutScheduleResponseScheduleEnumDaily                          PayoutScheduleResponseScheduleEnum = "DAILY"
	PayoutScheduleResponseScheduleEnumDailyAu                        PayoutScheduleResponseScheduleEnum = "DAILY_AU"
	PayoutScheduleResponseScheduleEnumDailyEu                        PayoutScheduleResponseScheduleEnum = "DAILY_EU"
	PayoutScheduleResponseScheduleEnumDailySg                        PayoutScheduleResponseScheduleEnum = "DAILY_SG"
	PayoutScheduleResponseScheduleEnumDailyUs                        PayoutScheduleResponseScheduleEnum = "DAILY_US"
	PayoutScheduleResponseScheduleEnumHold                           PayoutScheduleResponseScheduleEnum = "HOLD"
	PayoutScheduleResponseScheduleEnumMonthly                        PayoutScheduleResponseScheduleEnum = "MONTHLY"
	PayoutScheduleResponseScheduleEnumWeekly                         PayoutScheduleResponseScheduleEnum = "WEEKLY"
	PayoutScheduleResponseScheduleEnumWeeklyOnTueFriMidnight         PayoutScheduleResponseScheduleEnum = "WEEKLY_ON_TUE_FRI_MIDNIGHT"
)

func (e *PayoutScheduleResponseScheduleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT":
		fallthrough
	case "DAILY":
		fallthrough
	case "DAILY_AU":
		fallthrough
	case "DAILY_EU":
		fallthrough
	case "DAILY_SG":
		fallthrough
	case "DAILY_US":
		fallthrough
	case "HOLD":
		fallthrough
	case "MONTHLY":
		fallthrough
	case "WEEKLY":
		fallthrough
	case "WEEKLY_ON_TUE_FRI_MIDNIGHT":
		*e = PayoutScheduleResponseScheduleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PayoutScheduleResponseScheduleEnum: %s", s)
	}
}

type PayoutScheduleResponse struct {
	// The date of the next scheduled payout.
	NextScheduledPayout *time.Time `json:"nextScheduledPayout,omitempty"`
	// The payout schedule of the account.
	// Permitted values: `DEFAULT`, `DAILY`, `DAILY_US`, `DAILY_EU`, `DAILY_AU`, `DAILY_SG`, `WEEKLY`, `WEEKLY_ON_TUE_FRI_MIDNIGHT`, `BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT`, `MONTHLY`, `HOLD`.
	Schedule PayoutScheduleResponseScheduleEnum `json:"schedule"`
}
