/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DestinationSchema } from "./destinationschema";
import { KinesisFirehoseOutput } from "./kinesisfirehoseoutput";
import { KinesisStreamsOutput } from "./kinesisstreamsoutput";
import { LambdaOutput } from "./lambdaoutput";
import { Expose, Type } from "class-transformer";

/**
 * <p> Describes application output configuration in which you identify an in-application stream and a destination where you want the in-application stream data to be written. The destination can be an Amazon Kinesis stream or an Amazon Kinesis Firehose delivery stream. </p> <p/> <p>For limits on how many destinations an application can write and other limitations, see <a href="https://docs.aws.amazon.com/kinesisanalytics/latest/dev/limits.html">Limits</a>. </p>
 */
export class Output extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DestinationSchema" })
  @Type(() => DestinationSchema)
  destinationSchema: DestinationSchema;

  @SpeakeasyMetadata()
  @Expose({ name: "KinesisFirehoseOutput" })
  @Type(() => KinesisFirehoseOutput)
  kinesisFirehoseOutput?: KinesisFirehoseOutput;

  @SpeakeasyMetadata()
  @Expose({ name: "KinesisStreamsOutput" })
  @Type(() => KinesisStreamsOutput)
  kinesisStreamsOutput?: KinesisStreamsOutput;

  @SpeakeasyMetadata()
  @Expose({ name: "LambdaOutput" })
  @Type(() => LambdaOutput)
  lambdaOutput?: LambdaOutput;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;
}
