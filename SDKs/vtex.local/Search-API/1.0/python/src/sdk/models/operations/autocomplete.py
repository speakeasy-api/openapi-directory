"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional

AUTO_COMPLETE_SERVERS = [
	"http://example.com/.{environment}.com.br",
]


@dataclasses.dataclass
class AutoCompleteRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand"""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Type of the content being sent"""  
    product_name_contains: str = dataclasses.field(metadata={'query_param': { 'field_name': 'productNameContains', 'style': 'form', 'explode': True }})
    r"""Part of the string that will be searched."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AutoCompleteTheRootSchemaItemsReturned:
    
    criteria: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('criteria') }})
    r"""Item criteria."""  
    href: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('href') }})
    r"""Item URL."""  
    items: list[Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('items') }})
    r"""Array of products."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Item name."""  
    thumb: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thumb') }})
    r"""Item thumbnail."""  
    thumb_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thumbUrl') }})
    r"""Item thumbnail URL."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AutoCompleteTheRootSchema:
    r"""The root schema comprises the entire JSON document."""
    
    items_returned: list[AutoCompleteTheRootSchemaItemsReturned] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('itemsReturned') }})
    r"""Autocomplete returned items."""  
    

@dataclasses.dataclass
class AutoCompleteResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    the_root_schema: Optional[AutoCompleteTheRootSchema] = dataclasses.field(default=None)  
    