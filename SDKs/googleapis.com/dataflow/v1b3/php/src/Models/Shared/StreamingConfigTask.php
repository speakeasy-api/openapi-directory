<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * StreamingConfigTask - A task that carries configuration information for streaming computations.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class StreamingConfigTask
{
    /**
     * Chunk size for commit streams from the harness to windmill.
     * 
     * @var ?string $commitStreamChunkSizeBytes
     */
	#[\JMS\Serializer\Annotation\SerializedName('commitStreamChunkSizeBytes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $commitStreamChunkSizeBytes = null;
    
    /**
     * Chunk size for get data streams from the harness to windmill.
     * 
     * @var ?string $getDataStreamChunkSizeBytes
     */
	#[\JMS\Serializer\Annotation\SerializedName('getDataStreamChunkSizeBytes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $getDataStreamChunkSizeBytes = null;
    
    /**
     * Maximum size for work item commit supported windmill storage layer.
     * 
     * @var ?string $maxWorkItemCommitBytes
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxWorkItemCommitBytes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $maxWorkItemCommitBytes = null;
    
    /**
     * Set of computation configuration information.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\StreamingComputationConfig> $streamingComputationConfigs
     */
	#[\JMS\Serializer\Annotation\SerializedName('streamingComputationConfigs')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\StreamingComputationConfig>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $streamingComputationConfigs = null;
    
    /**
     * Map from user step names to state families.
     * 
     * @var ?array<string, string> $userStepToStateFamilyNameMap
     */
	#[\JMS\Serializer\Annotation\SerializedName('userStepToStateFamilyNameMap')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $userStepToStateFamilyNameMap = null;
    
    /**
     * If present, the worker must use this endpoint to communicate with Windmill Service dispatchers, otherwise the worker must continue to use whatever endpoint it had been using.
     * 
     * @var ?string $windmillServiceEndpoint
     */
	#[\JMS\Serializer\Annotation\SerializedName('windmillServiceEndpoint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $windmillServiceEndpoint = null;
    
    /**
     * If present, the worker must use this port to communicate with Windmill Service dispatchers. Only applicable when windmill_service_endpoint is specified.
     * 
     * @var ?string $windmillServicePort
     */
	#[\JMS\Serializer\Annotation\SerializedName('windmillServicePort')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $windmillServicePort = null;
    
	public function __construct()
	{
		$this->commitStreamChunkSizeBytes = null;
		$this->getDataStreamChunkSizeBytes = null;
		$this->maxWorkItemCommitBytes = null;
		$this->streamingComputationConfigs = null;
		$this->userStepToStateFamilyNameMap = null;
		$this->windmillServiceEndpoint = null;
		$this->windmillServicePort = null;
	}
}
