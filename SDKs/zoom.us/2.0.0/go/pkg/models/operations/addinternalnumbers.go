// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type AddInternalNumbersPathParams struct {
	// Unique identifier of the account.<br>To add internal numbers to a sub account, provide the account ID of the sub account in the `accountId` path parameter. To add internal numbers to a master account, provide `me` as the value of the `accountId` path parameter.
	AccountID string `pathParam:"style=simple,explode=false,name=accountId"`
}

// AddInternalNumbersApplicationJSONInternalNumbersLanguagesEnum - Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.
type AddInternalNumbersApplicationJSONInternalNumbersLanguagesEnum string

const (
	AddInternalNumbersApplicationJSONInternalNumbersLanguagesEnumEnGb AddInternalNumbersApplicationJSONInternalNumbersLanguagesEnum = "en-GB"
	AddInternalNumbersApplicationJSONInternalNumbersLanguagesEnumEnUs AddInternalNumbersApplicationJSONInternalNumbersLanguagesEnum = "en-US"
	AddInternalNumbersApplicationJSONInternalNumbersLanguagesEnumDeDe AddInternalNumbersApplicationJSONInternalNumbersLanguagesEnum = "de-DE"
)

func (e *AddInternalNumbersApplicationJSONInternalNumbersLanguagesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "en-GB":
		fallthrough
	case "en-US":
		fallthrough
	case "de-DE":
		*e = AddInternalNumbersApplicationJSONInternalNumbersLanguagesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AddInternalNumbersApplicationJSONInternalNumbersLanguagesEnum: %s", s)
	}
}

// AddInternalNumbersApplicationJSONInternalNumbersTypeEnum - Type of phone number. <br>
// The value can be one of the following:<br>
// * `0` : toll <br>
// * `1` : tollfree
type AddInternalNumbersApplicationJSONInternalNumbersTypeEnum string

const (
	AddInternalNumbersApplicationJSONInternalNumbersTypeEnumZero AddInternalNumbersApplicationJSONInternalNumbersTypeEnum = "0"
	AddInternalNumbersApplicationJSONInternalNumbersTypeEnumOne  AddInternalNumbersApplicationJSONInternalNumbersTypeEnum = "1"
)

func (e *AddInternalNumbersApplicationJSONInternalNumbersTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "0":
		fallthrough
	case "1":
		*e = AddInternalNumbersApplicationJSONInternalNumbersTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AddInternalNumbersApplicationJSONInternalNumbersTypeEnum: %s", s)
	}
}

type AddInternalNumbersApplicationJSONInternalNumbers struct {
	// Control whether the number can be used to attend 3rd party meetings.
	AllowForExternalMeetings *bool `json:"allow_for_external_meetings,omitempty"`
	// Specify whether this number can be used by users to join a meeting or not. <br>
	// * `true` : This number can be used to join a meeting. <br>
	// *  `false`: This number can not be used to join a meeting.
	//
	// Note that if the value of `visible` field is set to `true`, the value of this field will always be `true`.
	AllowJoin *bool `json:"allow_join,omitempty"`
	// Two letter country code of the country.
	Country string `json:"country"`
	// Phone number with display format. For instance, if the value in the number field is `+1888888000`, the value of this field could be `+1 888 888 000`.
	DisplayNumber string `json:"display_number"`
	// A short description for the phone number.
	Labels string `json:"labels"`
	// Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.
	Languages AddInternalNumbersApplicationJSONInternalNumbersLanguagesEnum `json:"languages"`
	// Phone number in E164 format.
	Number string `json:"number"`
	// Type of phone number. <br>
	// The value can be one of the following:<br>
	// * `0` : toll <br>
	// * `1` : tollfree
	Type AddInternalNumbersApplicationJSONInternalNumbersTypeEnum `json:"type"`
	// Specify whether you want this number to be visible (in Zoom Client and Zoom Portal) to the account users or not. The value could be one of the following:<br>
	// * `true`: Make the number visible. <br>
	// * `false`: Hide the number.
	Visible *bool `json:"visible,omitempty"`
}

type AddInternalNumbersApplicationJSON struct {
	InternalNumbers []AddInternalNumbersApplicationJSONInternalNumbers `json:"internal_numbers,omitempty"`
}

type AddInternalNumbersRequest struct {
	PathParams AddInternalNumbersPathParams
	Request    *AddInternalNumbersApplicationJSON `request:"mediaType=application/json"`
}

// AddInternalNumbers201ApplicationXMLInternalNumbersLanguagesEnum - Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.
type AddInternalNumbers201ApplicationXMLInternalNumbersLanguagesEnum string

const (
	AddInternalNumbers201ApplicationXMLInternalNumbersLanguagesEnumEnGb AddInternalNumbers201ApplicationXMLInternalNumbersLanguagesEnum = "en-GB"
	AddInternalNumbers201ApplicationXMLInternalNumbersLanguagesEnumEnUs AddInternalNumbers201ApplicationXMLInternalNumbersLanguagesEnum = "en-US"
	AddInternalNumbers201ApplicationXMLInternalNumbersLanguagesEnumDeDe AddInternalNumbers201ApplicationXMLInternalNumbersLanguagesEnum = "de-DE"
)

func (e *AddInternalNumbers201ApplicationXMLInternalNumbersLanguagesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "en-GB":
		fallthrough
	case "en-US":
		fallthrough
	case "de-DE":
		*e = AddInternalNumbers201ApplicationXMLInternalNumbersLanguagesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AddInternalNumbers201ApplicationXMLInternalNumbersLanguagesEnum: %s", s)
	}
}

// AddInternalNumbers201ApplicationXMLInternalNumbersTypeEnum - Type of phone number. <br>
// The value can be one of the following:<br>
// * `0` : toll <br>
// * `1` : tollfree
type AddInternalNumbers201ApplicationXMLInternalNumbersTypeEnum string

const (
	AddInternalNumbers201ApplicationXMLInternalNumbersTypeEnumZero AddInternalNumbers201ApplicationXMLInternalNumbersTypeEnum = "0"
	AddInternalNumbers201ApplicationXMLInternalNumbersTypeEnumOne  AddInternalNumbers201ApplicationXMLInternalNumbersTypeEnum = "1"
)

func (e *AddInternalNumbers201ApplicationXMLInternalNumbersTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "0":
		fallthrough
	case "1":
		*e = AddInternalNumbers201ApplicationXMLInternalNumbersTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AddInternalNumbers201ApplicationXMLInternalNumbersTypeEnum: %s", s)
	}
}

type AddInternalNumbers201ApplicationXMLInternalNumbers struct {
	// Control whether the number can be used to attend 3rd party meetings.
	AllowForExternalMeetings *bool
	// Specify whether this number can be used by users to join a meeting or not. <br>
	// * `true` : This number can be used to join a meeting. <br>
	// *  `false`: This number can not be used to join a meeting.
	//
	// Note that if the value of `visible` field is set to `true`, the value of this field will always be `true`.
	AllowJoin *bool
	// Two letter country code of the country.
	Country string
	// Phone number with display format. For instance, if the value in the number field is `+1888888000`, the value of this field could be `+1 888 888 000`.
	DisplayNumber string
	// Unique identifier of the internal number.
	ID *string
	// A short description for the phone number.
	Labels string
	// Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.
	Languages AddInternalNumbers201ApplicationXMLInternalNumbersLanguagesEnum
	// Phone number in E164 format.
	Number string
	// Type of phone number. <br>
	// The value can be one of the following:<br>
	// * `0` : toll <br>
	// * `1` : tollfree
	Type AddInternalNumbers201ApplicationXMLInternalNumbersTypeEnum
	// Specify whether you want this number to be visible (in Zoom Client and Zoom Portal) to the account users or not. The value could be one of the following:<br>
	// * `true`: Make the number visible. <br>
	// * `false`: Hide the number.
	Visible *bool
}

// AddInternalNumbers201ApplicationXML - **HTTP Status Code:** `201` **Created** <br>
// Internal numbers added successfully.
type AddInternalNumbers201ApplicationXML struct {
	InternalNumbers []AddInternalNumbers201ApplicationXMLInternalNumbers
}

// AddInternalNumbers201ApplicationJSONInternalNumbersLanguagesEnum - Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.
type AddInternalNumbers201ApplicationJSONInternalNumbersLanguagesEnum string

const (
	AddInternalNumbers201ApplicationJSONInternalNumbersLanguagesEnumEnGb AddInternalNumbers201ApplicationJSONInternalNumbersLanguagesEnum = "en-GB"
	AddInternalNumbers201ApplicationJSONInternalNumbersLanguagesEnumEnUs AddInternalNumbers201ApplicationJSONInternalNumbersLanguagesEnum = "en-US"
	AddInternalNumbers201ApplicationJSONInternalNumbersLanguagesEnumDeDe AddInternalNumbers201ApplicationJSONInternalNumbersLanguagesEnum = "de-DE"
)

func (e *AddInternalNumbers201ApplicationJSONInternalNumbersLanguagesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "en-GB":
		fallthrough
	case "en-US":
		fallthrough
	case "de-DE":
		*e = AddInternalNumbers201ApplicationJSONInternalNumbersLanguagesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AddInternalNumbers201ApplicationJSONInternalNumbersLanguagesEnum: %s", s)
	}
}

// AddInternalNumbers201ApplicationJSONInternalNumbersTypeEnum - Type of phone number. <br>
// The value can be one of the following:<br>
// * `0` : toll <br>
// * `1` : tollfree
type AddInternalNumbers201ApplicationJSONInternalNumbersTypeEnum string

const (
	AddInternalNumbers201ApplicationJSONInternalNumbersTypeEnumZero AddInternalNumbers201ApplicationJSONInternalNumbersTypeEnum = "0"
	AddInternalNumbers201ApplicationJSONInternalNumbersTypeEnumOne  AddInternalNumbers201ApplicationJSONInternalNumbersTypeEnum = "1"
)

func (e *AddInternalNumbers201ApplicationJSONInternalNumbersTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "0":
		fallthrough
	case "1":
		*e = AddInternalNumbers201ApplicationJSONInternalNumbersTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AddInternalNumbers201ApplicationJSONInternalNumbersTypeEnum: %s", s)
	}
}

type AddInternalNumbers201ApplicationJSONInternalNumbers struct {
	// Control whether the number can be used to attend 3rd party meetings.
	AllowForExternalMeetings *bool `json:"allow_for_external_meetings,omitempty"`
	// Specify whether this number can be used by users to join a meeting or not. <br>
	// * `true` : This number can be used to join a meeting. <br>
	// *  `false`: This number can not be used to join a meeting.
	//
	// Note that if the value of `visible` field is set to `true`, the value of this field will always be `true`.
	AllowJoin *bool `json:"allow_join,omitempty"`
	// Two letter country code of the country.
	Country string `json:"country"`
	// Phone number with display format. For instance, if the value in the number field is `+1888888000`, the value of this field could be `+1 888 888 000`.
	DisplayNumber string `json:"display_number"`
	// Unique identifier of the internal number.
	ID *string `json:"id,omitempty"`
	// A short description for the phone number.
	Labels string `json:"labels"`
	// Specify the language in which this phone number should be displayed. Currently, the only supported languages are `en-GB`, `en-US`, `de-DE`.
	Languages AddInternalNumbers201ApplicationJSONInternalNumbersLanguagesEnum `json:"languages"`
	// Phone number in E164 format.
	Number string `json:"number"`
	// Type of phone number. <br>
	// The value can be one of the following:<br>
	// * `0` : toll <br>
	// * `1` : tollfree
	Type AddInternalNumbers201ApplicationJSONInternalNumbersTypeEnum `json:"type"`
	// Specify whether you want this number to be visible (in Zoom Client and Zoom Portal) to the account users or not. The value could be one of the following:<br>
	// * `true`: Make the number visible. <br>
	// * `false`: Hide the number.
	Visible *bool `json:"visible,omitempty"`
}

// AddInternalNumbers201ApplicationJSON - **HTTP Status Code:** `201` **Created** <br>
// Internal numbers added successfully.
type AddInternalNumbers201ApplicationJSON struct {
	InternalNumbers []AddInternalNumbers201ApplicationJSONInternalNumbers `json:"internal_numbers,omitempty"`
}

type AddInternalNumbersResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `201` **Created** <br>
	// Internal numbers added successfully.
	//
	AddInternalNumbers201ApplicationJSONObject *AddInternalNumbers201ApplicationJSON
}
