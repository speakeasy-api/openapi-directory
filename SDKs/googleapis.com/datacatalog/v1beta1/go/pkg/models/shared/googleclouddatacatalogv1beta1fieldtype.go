// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnum - Represents primitive types - string, bool etc.
type GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnum string

const (
	GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnumPrimitiveTypeUnspecified GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnum = "PRIMITIVE_TYPE_UNSPECIFIED"
	GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnumDouble                   GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnum = "DOUBLE"
	GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnumString                   GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnum = "STRING"
	GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnumBool                     GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnum = "BOOL"
	GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnumTimestamp                GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnum = "TIMESTAMP"
)

func (e GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnum) ToPointer() *GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnum {
	return &e
}

func (e *GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PRIMITIVE_TYPE_UNSPECIFIED":
		fallthrough
	case "DOUBLE":
		fallthrough
	case "STRING":
		fallthrough
	case "BOOL":
		fallthrough
	case "TIMESTAMP":
		*e = GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnum: %v", v)
	}
}

type GoogleCloudDatacatalogV1beta1FieldType struct {
	EnumType *GoogleCloudDatacatalogV1beta1FieldTypeEnumType `json:"enumType,omitempty"`
	// Represents primitive types - string, bool etc.
	PrimitiveType *GoogleCloudDatacatalogV1beta1FieldTypePrimitiveTypeEnum `json:"primitiveType,omitempty"`
}
