/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDocumentaiV1DocumentPageDetectedLanguage } from "./googleclouddocumentaiv1documentpagedetectedlanguage";
import { GoogleCloudDocumentaiV1DocumentPageLayout } from "./googleclouddocumentaiv1documentpagelayout";
import { GoogleCloudDocumentaiV1DocumentProvenance } from "./googleclouddocumentaiv1documentprovenance";
import { Expose, Type } from "class-transformer";

/**
 * A form field detected on the page.
 */
export class GoogleCloudDocumentaiV1DocumentPageFormField extends SpeakeasyBase {
  /**
   * Created for Labeling UI to export key text. If corrections were made to the text identified by the `field_name.text_anchor`, this field will contain the correction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "correctedKeyText" })
  correctedKeyText?: string;

  /**
   * Created for Labeling UI to export value text. If corrections were made to the text identified by the `field_value.text_anchor`, this field will contain the correction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "correctedValueText" })
  correctedValueText?: string;

  /**
   * Visual element describing a layout unit on a page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fieldName" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageLayout)
  fieldName?: GoogleCloudDocumentaiV1DocumentPageLayout;

  /**
   * Visual element describing a layout unit on a page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fieldValue" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageLayout)
  fieldValue?: GoogleCloudDocumentaiV1DocumentPageLayout;

  /**
   * A list of detected languages for name together with confidence.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage,
  })
  @Expose({ name: "nameDetectedLanguages" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageDetectedLanguage)
  nameDetectedLanguages?: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage[];

  /**
   * Structure to identify provenance relationships between annotations in different revisions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "provenance" })
  @Type(() => GoogleCloudDocumentaiV1DocumentProvenance)
  provenance?: GoogleCloudDocumentaiV1DocumentProvenance;

  /**
   * A list of detected languages for value together with confidence.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage,
  })
  @Expose({ name: "valueDetectedLanguages" })
  @Type(() => GoogleCloudDocumentaiV1DocumentPageDetectedLanguage)
  valueDetectedLanguages?: GoogleCloudDocumentaiV1DocumentPageDetectedLanguage[];

  /**
   * If the value is non-textual, this field represents the type. Current valid values are: - blank (this indicates the `field_value` is normal text) - `unfilled_checkbox` - `filled_checkbox`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "valueType" })
  valueType?: string;
}
