/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DialogActionTypeEnum } from "./dialogactiontypeenum";
import { FulfillmentStateEnum } from "./fulfillmentstateenum";
import { MessageFormatTypeEnum } from "./messageformattypeenum";
import { Expose } from "class-transformer";

/**
 * Describes the next action that the bot should take in its interaction with the user and provides information about the context in which the action takes place. Use the <code>DialogAction</code> data type to set the interaction to a specific state, or to return the interaction to a previous state.
 */
export class DialogAction extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "fulfillmentState" })
  fulfillmentState?: FulfillmentStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "intentName" })
  intentName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "messageFormat" })
  messageFormat?: MessageFormatTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "slotToElicit" })
  slotToElicit?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slots" })
  slots?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: DialogActionTypeEnum;
}
