/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class SearchQuantumTasksRequestBody {
    /**
     * Array of &lt;code&gt;SearchQuantumTasksFilter&lt;/code&gt; objects.
     */
    @JsonProperty("filters")
    public org.openapis.openapi.models.shared.SearchQuantumTasksFilter[] filters;
    public SearchQuantumTasksRequestBody withFilters(org.openapis.openapi.models.shared.SearchQuantumTasksFilter[] filters) {
        this.filters = filters;
        return this;
    }
    
    /**
     * Maximum number of results to return in the response.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxResults")
    public Long maxResults;
    public SearchQuantumTasksRequestBody withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    /**
     * A token used for pagination of results returned in the response. Use the token returned from the previous request continue results where the previous request ended.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextToken")
    public String nextToken;
    public SearchQuantumTasksRequestBody withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
}
