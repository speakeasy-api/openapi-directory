// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type PutMetadataHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type PutMetadataRequestBody struct {
	// ARN of the channel into which metadata is inserted. This channel must have an active stream.
	ChannelArn string `json:"channelArn"`
	// Metadata to insert into the stream. Maximum: 1 KB per request.
	Metadata string `json:"metadata"`
}

type PutMetadataRequest struct {
	Headers PutMetadataHeaders
	Request PutMetadataRequestBody `request:"mediaType=application/json"`
}

type PutMetadataResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ChannelNotBroadcasting
	ChannelNotBroadcasting interface{}
	ContentType            string
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
