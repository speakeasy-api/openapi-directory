"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import config as shared_config
from ..shared import httpvalidationerror as shared_httpvalidationerror
from typing import Optional


@dataclasses.dataclass
class ConfigConfigGetRequest:
    
    authorization: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'authorization', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class ConfigConfigGetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    config: Optional[shared_config.Config] = dataclasses.field(default=None)
    r"""Successful Response"""  
    http_validation_error: Optional[shared_httpvalidationerror.HTTPValidationError] = dataclasses.field(default=None)
    r"""Validation Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    