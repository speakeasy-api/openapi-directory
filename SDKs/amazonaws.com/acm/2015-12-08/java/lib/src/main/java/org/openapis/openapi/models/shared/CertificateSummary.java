/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CertificateSummary - This structure is returned in the response object of &lt;a&gt;ListCertificates&lt;/a&gt; action. 
 */
public class CertificateSummary {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CertificateArn")
    public String certificateArn;

    public CertificateSummary withCertificateArn(String certificateArn) {
        this.certificateArn = certificateArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedAt")
    public OffsetDateTime createdAt;

    public CertificateSummary withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DomainName")
    public String domainName;

    public CertificateSummary withDomainName(String domainName) {
        this.domainName = domainName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Exported")
    public Boolean exported;

    public CertificateSummary withExported(Boolean exported) {
        this.exported = exported;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExtendedKeyUsages")
    public ExtendedKeyUsageNameEnum[] extendedKeyUsages;

    public CertificateSummary withExtendedKeyUsages(ExtendedKeyUsageNameEnum[] extendedKeyUsages) {
        this.extendedKeyUsages = extendedKeyUsages;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HasAdditionalSubjectAlternativeNames")
    public Boolean hasAdditionalSubjectAlternativeNames;

    public CertificateSummary withHasAdditionalSubjectAlternativeNames(Boolean hasAdditionalSubjectAlternativeNames) {
        this.hasAdditionalSubjectAlternativeNames = hasAdditionalSubjectAlternativeNames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ImportedAt")
    public OffsetDateTime importedAt;

    public CertificateSummary withImportedAt(OffsetDateTime importedAt) {
        this.importedAt = importedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InUse")
    public Boolean inUse;

    public CertificateSummary withInUse(Boolean inUse) {
        this.inUse = inUse;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("IssuedAt")
    public OffsetDateTime issuedAt;

    public CertificateSummary withIssuedAt(OffsetDateTime issuedAt) {
        this.issuedAt = issuedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KeyAlgorithm")
    public KeyAlgorithmEnum keyAlgorithm;

    public CertificateSummary withKeyAlgorithm(KeyAlgorithmEnum keyAlgorithm) {
        this.keyAlgorithm = keyAlgorithm;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KeyUsages")
    public KeyUsageNameEnum[] keyUsages;

    public CertificateSummary withKeyUsages(KeyUsageNameEnum[] keyUsages) {
        this.keyUsages = keyUsages;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("NotAfter")
    public OffsetDateTime notAfter;

    public CertificateSummary withNotAfter(OffsetDateTime notAfter) {
        this.notAfter = notAfter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("NotBefore")
    public OffsetDateTime notBefore;

    public CertificateSummary withNotBefore(OffsetDateTime notBefore) {
        this.notBefore = notBefore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RenewalEligibility")
    public RenewalEligibilityEnum renewalEligibility;

    public CertificateSummary withRenewalEligibility(RenewalEligibilityEnum renewalEligibility) {
        this.renewalEligibility = renewalEligibility;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("RevokedAt")
    public OffsetDateTime revokedAt;

    public CertificateSummary withRevokedAt(OffsetDateTime revokedAt) {
        this.revokedAt = revokedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public CertificateStatusEnum status;

    public CertificateSummary withStatus(CertificateStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubjectAlternativeNameSummaries")
    public String[] subjectAlternativeNameSummaries;

    public CertificateSummary withSubjectAlternativeNameSummaries(String[] subjectAlternativeNameSummaries) {
        this.subjectAlternativeNameSummaries = subjectAlternativeNameSummaries;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Type")
    public CertificateTypeEnum type;

    public CertificateSummary withType(CertificateTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public CertificateSummary(){}
}
