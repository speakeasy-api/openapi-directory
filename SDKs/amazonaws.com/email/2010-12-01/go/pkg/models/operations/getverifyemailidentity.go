// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETVerifyEmailIdentityActionEnum
type GETVerifyEmailIdentityActionEnum string

const (
	GETVerifyEmailIdentityActionEnumVerifyEmailIdentity GETVerifyEmailIdentityActionEnum = "VerifyEmailIdentity"
)

func (e GETVerifyEmailIdentityActionEnum) ToPointer() *GETVerifyEmailIdentityActionEnum {
	return &e
}

func (e *GETVerifyEmailIdentityActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VerifyEmailIdentity":
		*e = GETVerifyEmailIdentityActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETVerifyEmailIdentityActionEnum: %v", v)
	}
}

// GETVerifyEmailIdentityVersionEnum
type GETVerifyEmailIdentityVersionEnum string

const (
	GETVerifyEmailIdentityVersionEnumTwoThousandAndTen1201 GETVerifyEmailIdentityVersionEnum = "2010-12-01"
)

func (e GETVerifyEmailIdentityVersionEnum) ToPointer() *GETVerifyEmailIdentityVersionEnum {
	return &e
}

func (e *GETVerifyEmailIdentityVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETVerifyEmailIdentityVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETVerifyEmailIdentityVersionEnum: %v", v)
	}
}

type GETVerifyEmailIdentityRequest struct {
	Action GETVerifyEmailIdentityActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The email address to be verified.
	EmailAddress      string                            `queryParam:"style=form,explode=true,name=EmailAddress"`
	Version           GETVerifyEmailIdentityVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETVerifyEmailIdentityResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
