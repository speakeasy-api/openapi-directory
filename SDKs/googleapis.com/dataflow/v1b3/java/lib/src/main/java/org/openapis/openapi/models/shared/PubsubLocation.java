/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PubsubLocation - Identifies a pubsub location to use for transferring data into or out of a streaming Dataflow job.
 */
public class PubsubLocation {
    /**
     * Indicates whether the pipeline allows late-arriving data.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dropLateData")
    public Boolean dropLateData;
    public PubsubLocation withDropLateData(Boolean dropLateData) {
        this.dropLateData = dropLateData;
        return this;
    }
    
    /**
     * If set, contains a pubsub label from which to extract record ids. If left empty, record deduplication will be strictly best effort.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("idLabel")
    public String idLabel;
    public PubsubLocation withIdLabel(String idLabel) {
        this.idLabel = idLabel;
        return this;
    }
    
    /**
     * A pubsub subscription, in the form of "pubsub.googleapis.com/subscriptions//"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscription")
    public String subscription;
    public PubsubLocation withSubscription(String subscription) {
        this.subscription = subscription;
        return this;
    }
    
    /**
     * If set, contains a pubsub label from which to extract record timestamps. If left empty, record timestamps will be generated upon arrival.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestampLabel")
    public String timestampLabel;
    public PubsubLocation withTimestampLabel(String timestampLabel) {
        this.timestampLabel = timestampLabel;
        return this;
    }
    
    /**
     * A pubsub topic, in the form of "pubsub.googleapis.com/topics//"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("topic")
    public String topic;
    public PubsubLocation withTopic(String topic) {
        this.topic = topic;
        return this;
    }
    
    /**
     * If set, specifies the pubsub subscription that will be used for tracking custom time timestamps for watermark estimation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trackingSubscription")
    public String trackingSubscription;
    public PubsubLocation withTrackingSubscription(String trackingSubscription) {
        this.trackingSubscription = trackingSubscription;
        return this;
    }
    
    /**
     * If true, then the client has requested to get pubsub attributes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("withAttributes")
    public Boolean withAttributes;
    public PubsubLocation withWithAttributes(Boolean withAttributes) {
        this.withAttributes = withAttributes;
        return this;
    }
    
}
