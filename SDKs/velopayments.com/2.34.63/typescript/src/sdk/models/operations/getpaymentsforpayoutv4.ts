/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Payment Status
 */
export enum GetPaymentsForPayoutV4StatusEnum {
  Accepted = "ACCEPTED",
  AwaitingFunds = "AWAITING_FUNDS",
  Funded = "FUNDED",
  Unfunded = "UNFUNDED",
  BankPaymentRequested = "BANK_PAYMENT_REQUESTED",
  Rejected = "REJECTED",
  AcceptedByRails = "ACCEPTED_BY_RAILS",
  Confirmed = "CONFIRMED",
  Failed = "FAILED",
  Returned = "RETURNED",
  Withdrawn = "WITHDRAWN",
}

/**
 * Transmission Type
 *
 * @remarks
 * * ACH
 * * SAME_DAY_ACH
 * * WIRE
 * * GACHO
 *
 */
export enum GetPaymentsForPayoutV4TransmissionTypeEnum {
  Ach = "ACH",
  SameDayAch = "SAME_DAY_ACH",
  Wire = "WIRE",
  Local = "LOCAL",
  Gacho = "GACHO",
}

export class GetPaymentsForPayoutV4Request extends SpeakeasyBase {
  /**
   * Page number. Default is 1.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of results to return in a page
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageSize",
  })
  pageSize?: number;

  /**
   * The payment amount from range filter. Filters for paymentAmount >= paymentAmountFrom
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=paymentAmountFrom",
  })
  paymentAmountFrom?: number;

  /**
   * The payment amount to range filter. Filters for paymentAmount ⇐ paymentAmountTo
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=paymentAmountTo",
  })
  paymentAmountTo?: number;

  /**
   * The id (UUID) of the payout.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=payoutId",
  })
  payoutId: string;

  /**
   * The remote id of the payees.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=remoteId",
  })
  remoteId?: string;

  /**
   * The id of the remote system that is orchestrating payments
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=remoteSystemId",
  })
  remoteSystemId?: string;

  /**
   * Optional. If omitted or set to false, any Personal Identifiable Information (PII) values are returned masked.
   *
   * @remarks
   * If set to true, and you have permission, the PII values will be returned as their original unmasked values.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sensitive",
  })
  sensitive?: boolean;

  /**
   * List of sort fields (e.g. ?sort=submittedDateTime:asc,status:asc). Default is sort by remoteId
   *
   * @remarks
   * The supported sort fields are: sourceAmount, sourceCurrency, paymentAmount, paymentCurrency,
   * routingNumber, accountNumber, remoteId, submittedDateTime and status
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: string;

  /**
   * The source amount from range filter. Filters for sourceAmount >= sourceAmountFrom
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sourceAmountFrom",
  })
  sourceAmountFrom?: number;

  /**
   * The source amount to range filter. Filters for sourceAmount ⇐ sourceAmountTo
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=sourceAmountTo",
  })
  sourceAmountTo?: number;

  /**
   * Payment Status
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: GetPaymentsForPayoutV4StatusEnum;

  /**
   * The submitted date from range filter. Format is yyyy-MM-dd.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=submittedDateFrom;dateTimeFormat=YYYY-MM-DD",
  })
  submittedDateFrom?: Date;

  /**
   * The submitted date to range filter. Format is yyyy-MM-dd.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=submittedDateTo;dateTimeFormat=YYYY-MM-DD",
  })
  submittedDateTo?: Date;

  /**
   * Transmission Type
   *
   * @remarks
   * * ACH
   * * SAME_DAY_ACH
   * * WIRE
   * * GACHO
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=transmissionType",
  })
  transmissionType?: GetPaymentsForPayoutV4TransmissionTypeEnum;
}

export class GetPaymentsForPayoutV4Response extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * 200 response, data found okay
   */
  @SpeakeasyMetadata()
  getPaymentsForPayoutResponseV4?: shared.GetPaymentsForPayoutResponseV4;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Invalid request. See Error message payload for details of failure
   */
  @SpeakeasyMetadata()
  inlineResponse400?: shared.InlineResponse400;

  /**
   * Invalid access token. May be expired or invalid
   */
  @SpeakeasyMetadata()
  inlineResponse401?: shared.InlineResponse401;

  /**
   * The authentication does not have permissions to access the resource
   *
   * @remarks
   * This usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions
   *
   */
  @SpeakeasyMetadata()
  inlineResponse403?: shared.InlineResponse403;

  /**
   * The resource was not found or is no longer available
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  inlineResponse404?: shared.InlineResponse404;
}
