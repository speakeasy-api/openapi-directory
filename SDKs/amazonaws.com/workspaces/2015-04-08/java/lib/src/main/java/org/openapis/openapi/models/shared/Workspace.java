/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Workspace - Describes a WorkSpace.
 */
public class Workspace {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BundleId")
    public String bundleId;
    public Workspace withBundleId(String bundleId) {
        this.bundleId = bundleId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ComputerName")
    public String computerName;
    public Workspace withComputerName(String computerName) {
        this.computerName = computerName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DirectoryId")
    public String directoryId;
    public Workspace withDirectoryId(String directoryId) {
        this.directoryId = directoryId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ErrorCode")
    public String errorCode;
    public Workspace withErrorCode(String errorCode) {
        this.errorCode = errorCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ErrorMessage")
    public String errorMessage;
    public Workspace withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IpAddress")
    public String ipAddress;
    public Workspace withIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ModificationStates")
    public ModificationState[] modificationStates;
    public Workspace withModificationStates(ModificationState[] modificationStates) {
        this.modificationStates = modificationStates;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RelatedWorkspaces")
    public RelatedWorkspaceProperties[] relatedWorkspaces;
    public Workspace withRelatedWorkspaces(RelatedWorkspaceProperties[] relatedWorkspaces) {
        this.relatedWorkspaces = relatedWorkspaces;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RootVolumeEncryptionEnabled")
    public Boolean rootVolumeEncryptionEnabled;
    public Workspace withRootVolumeEncryptionEnabled(Boolean rootVolumeEncryptionEnabled) {
        this.rootVolumeEncryptionEnabled = rootVolumeEncryptionEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("State")
    public WorkspaceStateEnum state;
    public Workspace withState(WorkspaceStateEnum state) {
        this.state = state;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubnetId")
    public String subnetId;
    public Workspace withSubnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UserName")
    public String userName;
    public Workspace withUserName(String userName) {
        this.userName = userName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UserVolumeEncryptionEnabled")
    public Boolean userVolumeEncryptionEnabled;
    public Workspace withUserVolumeEncryptionEnabled(Boolean userVolumeEncryptionEnabled) {
        this.userVolumeEncryptionEnabled = userVolumeEncryptionEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VolumeEncryptionKey")
    public String volumeEncryptionKey;
    public Workspace withVolumeEncryptionKey(String volumeEncryptionKey) {
        this.volumeEncryptionKey = volumeEncryptionKey;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkspaceId")
    public String workspaceId;
    public Workspace withWorkspaceId(String workspaceId) {
        this.workspaceId = workspaceId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkspaceProperties")
    public WorkspaceProperties workspaceProperties;
    public Workspace withWorkspaceProperties(WorkspaceProperties workspaceProperties) {
        this.workspaceProperties = workspaceProperties;
        return this;
    }
    
}
