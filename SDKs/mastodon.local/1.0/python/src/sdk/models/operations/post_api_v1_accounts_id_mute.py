"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import relationship as shared_relationship
from typing import Optional


@dataclasses.dataclass
class PostAPIV1AccountsIDMuteSecurity:
    
    bearer_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'bearer', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class PostAPIV1AccountsIDMuteRequestBody:
    
    duration: Optional[int] = dataclasses.field(default=None)
    r"""How long the mute should last, in seconds. Defaults to 0 (indefinite)."""  
    notifications: Optional[bool] = dataclasses.field(default=None)
    r"""Mute notifications in addition to statuses? Defaults to true."""  
    

@dataclasses.dataclass
class PostAPIV1AccountsIDMuteRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""The id of the account in the database"""  
    request_body: Optional[bytes] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/form-data' }})  
    

@dataclasses.dataclass
class PostAPIV1AccountsIDMuteResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Invalid or missing Authorization header"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    relationship: Optional[shared_relationship.Relationship] = dataclasses.field(default=None)
    r"""Successfully muted, or account was already muted. Note that you can call this API method again with notifications=false to update the relationship so that only statuses are muted."""  
    