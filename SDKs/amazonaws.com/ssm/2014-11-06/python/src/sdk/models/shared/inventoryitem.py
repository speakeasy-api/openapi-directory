"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InventoryItem:
    r"""Information collected from managed nodes based on your inventory policy document"""
    
    capture_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CaptureTime') }})  
    schema_version: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SchemaVersion') }})  
    type_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TypeName') }})  
    content: Optional[list[dict[str, str]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Content'), 'exclude': lambda f: f is None }})  
    content_hash: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ContentHash'), 'exclude': lambda f: f is None }})  
    context: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Context'), 'exclude': lambda f: f is None }})  
    