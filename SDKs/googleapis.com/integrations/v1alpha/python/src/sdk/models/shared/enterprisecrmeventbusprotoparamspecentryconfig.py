"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOptionEnum(str, Enum):
    DEFAULT = 'DEFAULT'
    STRING_MULTI_LINE = 'STRING_MULTI_LINE'
    NUMBER_SLIDER = 'NUMBER_SLIDER'
    BOOLEAN_TOGGLE = 'BOOLEAN_TOGGLE'

class EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOptionEnum(str, Enum):
    DEFAULT_NOT_PARAMETER_NAME = 'DEFAULT_NOT_PARAMETER_NAME'
    IS_PARAMETER_NAME = 'IS_PARAMETER_NAME'
    KEY_IS_PARAMETER_NAME = 'KEY_IS_PARAMETER_NAME'
    VALUE_IS_PARAMETER_NAME = 'VALUE_IS_PARAMETER_NAME'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EnterpriseCrmEventbusProtoParamSpecEntryConfig:
    
    descriptive_phrase: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('descriptivePhrase'), 'exclude': lambda f: f is None }})
    r"""A short phrase to describe what this parameter contains."""  
    help_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('helpText'), 'exclude': lambda f: f is None }})
    r"""Detailed help text for this parameter containing information not provided elsewhere. For example, instructions on how to migrate from a deprecated parameter."""  
    hide_default_value: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hideDefaultValue'), 'exclude': lambda f: f is None }})
    r"""Whether the default value is hidden in the UI."""  
    input_display_option: Optional[EnterpriseCrmEventbusProtoParamSpecEntryConfigInputDisplayOptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inputDisplayOption'), 'exclude': lambda f: f is None }})  
    is_hidden: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isHidden'), 'exclude': lambda f: f is None }})
    r"""Whether this field is hidden in the UI."""  
    label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('label'), 'exclude': lambda f: f is None }})
    r"""A user-friendly label for the parameter."""  
    parameter_name_option: Optional[EnterpriseCrmEventbusProtoParamSpecEntryConfigParameterNameOptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parameterNameOption'), 'exclude': lambda f: f is None }})  
    sub_section_label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subSectionLabel'), 'exclude': lambda f: f is None }})
    r"""A user-friendly label for subSection under which the parameter will be displayed."""  
    ui_placeholder_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uiPlaceholderText'), 'exclude': lambda f: f is None }})
    r"""Placeholder text which will appear in the UI input form for this parameter."""  
    