/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PutSettingsOrganizationsOrganizationNameReceiversReceiverNameSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth2: string;
}

export class PutSettingsOrganizationsOrganizationNameReceiversReceiverNameRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  receiverInput?: shared.ReceiverInput;

  /**
   * Create receivers under this organization name
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=organizationName",
  })
  organizationName: string;

  /**
   * The name of the receiver
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=receiverName",
  })
  receiverName: string;
}

export class PutSettingsOrganizationsOrganizationNameReceiversReceiverNameResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK, the receiver setting was updated
   */
  @SpeakeasyMetadata()
  receiver?: shared.Receiver;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
