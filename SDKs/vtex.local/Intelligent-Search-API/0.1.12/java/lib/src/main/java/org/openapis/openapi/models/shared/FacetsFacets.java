/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class FacetsFacets {
    /**
     * Whether the client-side should hide the facet (`true`) or not (`false`)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hidden")
    public Boolean hidden;
    public FacetsFacets withHidden(Boolean hidden) {
        this.hidden = hidden;
        return this;
    }
    
    /**
     * Human-readable format of the facet key.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public FacetsFacets withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Number of possible values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public Double quantity;
    public FacetsFacets withQuantity(Double quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * Facet type
     *  - `TEXT` - The value is a simple text.
     *  - `PRICERANGE` - The value contains the property `range` representing the minimum and the maximum price for the query.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public FacetsFacetsTypeEnum type;
    public FacetsFacets withType(FacetsFacetsTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Possible values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("values")
    public FacetsFacetsValues[] values;
    public FacetsFacets withValues(FacetsFacetsValues[] values) {
        this.values = values;
        return this;
    }
    
}
