// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetRuleXAmzTargetEnum
type GetRuleXAmzTargetEnum string

const (
	GetRuleXAmzTargetEnumAwswafRegional20161128GetRule GetRuleXAmzTargetEnum = "AWSWAF_Regional_20161128.GetRule"
)

func (e *GetRuleXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSWAF_Regional_20161128.GetRule":
		*e = GetRuleXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetRuleXAmzTargetEnum: %s", s)
	}
}

type GetRuleRequest struct {
	GetRuleRequest    shared.GetRuleRequest `request:"mediaType=application/json"`
	XAmzAlgorithm     *string               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetRuleXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetRuleResponse struct {
	ContentType string
	// Success
	GetRuleResponse *shared.GetRuleResponse
	StatusCode      int
	RawResponse     *http.Response
	// WAFInternalErrorException
	WAFInternalErrorException interface{}
	// WAFInvalidAccountException
	WAFInvalidAccountException interface{}
	// WAFNonexistentItemException
	WAFNonexistentItemException interface{}
}
