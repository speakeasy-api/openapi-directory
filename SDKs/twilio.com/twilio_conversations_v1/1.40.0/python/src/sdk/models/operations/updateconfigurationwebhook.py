"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import configuration_webhook_enum_target_enum as shared_configuration_webhook_enum_target_enum
from ..shared import conversations_v1_configuration_configuration_webhook as shared_conversations_v1_configuration_configuration_webhook
from typing import Optional

UPDATE_CONFIGURATION_WEBHOOK_SERVERS = [
	"https://conversations.twilio.com",
]


@dataclasses.dataclass
class UpdateConfigurationWebhookSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class UpdateConfigurationWebhookUpdateConfigurationWebhookRequest:
    
    filters: Optional[list[str]] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Filters' }})
    r"""The list of webhook event triggers that are enabled for this Service: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`"""  
    method: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Method' }})
    r"""The HTTP method to be used when sending a webhook request."""  
    post_webhook_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'PostWebhookUrl' }})
    r"""The absolute url the post-event webhook request should be sent to."""  
    pre_webhook_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'PreWebhookUrl' }})
    r"""The absolute url the pre-event webhook request should be sent to."""  
    target: Optional[shared_configuration_webhook_enum_target_enum.ConfigurationWebhookEnumTargetEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Target' }})  
    

@dataclasses.dataclass
class UpdateConfigurationWebhookResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    conversations_v1_configuration_configuration_webhook: Optional[shared_conversations_v1_configuration_configuration_webhook.ConversationsV1ConfigurationConfigurationWebhook] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    