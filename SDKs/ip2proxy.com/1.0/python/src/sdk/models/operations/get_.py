"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class GetFormatEnum(str, Enum):
    r"""If not present, json format will be returned as the search result."""
    JSON = 'json'
    XML = 'xml'


@dataclasses.dataclass
class GetRequest:
    
    ip: str = dataclasses.field(metadata={'query_param': { 'field_name': 'ip', 'style': 'form', 'explode': True }})
    r"""IP address (IPv4) for lookup purpose. If not present, the server IP address will be used for the lookup."""  
    key: str = dataclasses.field(metadata={'query_param': { 'field_name': 'key', 'style': 'form', 'explode': True }})
    r"""API key. Please sign up free trial license key at ip2location.com"""  
    format: Optional[GetFormatEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'format', 'style': 'form', 'explode': True }})
    r"""If not present, json format will be returned as the search result."""  
    package: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'package', 'style': 'form', 'explode': True }})
    r"""Package name from PX1 to PX11. If not present, the web service will assume the PX1 package query."""  
    

@dataclasses.dataclass
class GetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_200_text_html_string: Optional[str] = dataclasses.field(default=None)
    r"""Get response from IP2Proxy"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    