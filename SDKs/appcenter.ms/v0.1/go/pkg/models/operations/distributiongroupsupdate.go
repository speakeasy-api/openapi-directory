// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type DistributionGroupsUpdateSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

// DistributionGroupsUpdateRequestBody - The attributes to update for the distribution group
type DistributionGroupsUpdateRequestBody struct {
	// Whether the distribution group is public
	IsPublic *bool `json:"is_public,omitempty"`
	// The name of the distribution group
	Name *string `json:"name,omitempty"`
}

type DistributionGroupsUpdateRequest struct {
	// The attributes to update for the distribution group
	RequestBody DistributionGroupsUpdateRequestBody `request:"mediaType=application/json"`
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the distribution group
	DistributionGroupName string `pathParam:"style=simple,explode=false,name=distribution_group_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnum string

const (
	DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnumBadRequest          DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnumConflict            DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnum = "Conflict"
	DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnumNotAcceptable       DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnumNotFound            DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnum = "NotFound"
	DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnumInternalServerError DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnumUnauthorized        DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnumTooManyRequests     DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type DistributionGroupsUpdateDefaultApplicationJSONError struct {
	Code    DistributionGroupsUpdateDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                      `json:"message"`
}

// DistributionGroupsUpdateDefaultApplicationJSON - Error
type DistributionGroupsUpdateDefaultApplicationJSON struct {
	Error DistributionGroupsUpdateDefaultApplicationJSONError `json:"error"`
}

// DistributionGroupsUpdate200ApplicationJSONOriginEnum - The creation origin of this distribution group
type DistributionGroupsUpdate200ApplicationJSONOriginEnum string

const (
	DistributionGroupsUpdate200ApplicationJSONOriginEnumAppcenter DistributionGroupsUpdate200ApplicationJSONOriginEnum = "appcenter"
	DistributionGroupsUpdate200ApplicationJSONOriginEnumHockeyapp DistributionGroupsUpdate200ApplicationJSONOriginEnum = "hockeyapp"
)

func (e *DistributionGroupsUpdate200ApplicationJSONOriginEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "appcenter":
		fallthrough
	case "hockeyapp":
		*e = DistributionGroupsUpdate200ApplicationJSONOriginEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DistributionGroupsUpdate200ApplicationJSONOriginEnum: %s", s)
	}
}

// DistributionGroupsUpdate200ApplicationJSON - Success
type DistributionGroupsUpdate200ApplicationJSON struct {
	// The name of the distribution group
	DisplayName *string `json:"display_name,omitempty"`
	// The unique ID of the distribution group
	ID string `json:"id"`
	// Whether the distribution group is public
	IsPublic bool `json:"is_public"`
	// The name of the distribution group used in URLs
	Name string `json:"name"`
	// The creation origin of this distribution group
	Origin DistributionGroupsUpdate200ApplicationJSONOriginEnum `json:"origin"`
}

type DistributionGroupsUpdateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	DistributionGroupsUpdate200ApplicationJSONObject *DistributionGroupsUpdate200ApplicationJSON
	// Error
	DistributionGroupsUpdateDefaultApplicationJSONObject *DistributionGroupsUpdateDefaultApplicationJSON
}
