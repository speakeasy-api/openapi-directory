// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DeleteNodePathParams struct {
	// Id of the target node
	NodeID string `pathParam:"style=simple,explode=false,name=nodeId"`
}

type DeleteNodeQueryParams struct {
	// Deletion mode to use, either move to trash ('move', default) or erase ('erase')
	Mode *shared.NodeDeleteModeEnum `queryParam:"style=form,explode=true,name=mode"`
}

type DeleteNodeRequest struct {
	PathParams  DeleteNodePathParams
	QueryParams DeleteNodeQueryParams
}

// DeleteNode200ApplicationJSONActionEnum - The id of the action
type DeleteNode200ApplicationJSONActionEnum string

const (
	DeleteNode200ApplicationJSONActionEnumDeleteNode DeleteNode200ApplicationJSONActionEnum = "deleteNode"
)

func (e *DeleteNode200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "deleteNode":
		*e = DeleteNode200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteNode200ApplicationJSONActionEnum: %s", s)
	}
}

// DeleteNode200ApplicationJSONData - Information about the node
type DeleteNode200ApplicationJSONData struct {
	Nodes []shared.NodeFull `json:"nodes"`
}

// DeleteNode200ApplicationJSONResultEnum - Result of the request
type DeleteNode200ApplicationJSONResultEnum string

const (
	DeleteNode200ApplicationJSONResultEnumSuccess DeleteNode200ApplicationJSONResultEnum = "success"
	DeleteNode200ApplicationJSONResultEnumError   DeleteNode200ApplicationJSONResultEnum = "error"
)

func (e *DeleteNode200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = DeleteNode200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteNode200ApplicationJSONResultEnum: %s", s)
	}
}

// DeleteNode200ApplicationJSON - Nodes
type DeleteNode200ApplicationJSON struct {
	// The id of the action
	Action DeleteNode200ApplicationJSONActionEnum `json:"action"`
	// Information about the node
	Data DeleteNode200ApplicationJSONData `json:"data"`
	// Result of the request
	Result DeleteNode200ApplicationJSONResultEnum `json:"result"`
}

type DeleteNodeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Nodes
	DeleteNode200ApplicationJSONObject *DeleteNode200ApplicationJSON
}
