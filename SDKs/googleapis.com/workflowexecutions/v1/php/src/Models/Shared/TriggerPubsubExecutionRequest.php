<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TriggerPubsubExecutionRequest - Request for the TriggerPubsubExecution method.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TriggerPubsubExecutionRequest
{
    /**
     * Required. LINT: LEGACY_NAMES The query parameter value for __GCP_CloudEventsMode, set by the Eventarc service when configuring triggers.
     * 
     * @var ?string $gcpCloudEventsMode
     */
	#[\JMS\Serializer\Annotation\SerializedName('GCPCloudEventsMode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gcpCloudEventsMode = null;
    
    /**
     * A message that is published by publishers and consumed by subscribers. The message must contain either a non-empty data field or at least one attribute. Note that client libraries represent this object differently depending on the language. See the corresponding [client library documentation](https://cloud.google.com/pubsub/docs/reference/libraries) for more information. See [quotas and limits] (https://cloud.google.com/pubsub/quotas) for more information about message limits.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PubsubMessage $message
     */
	#[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PubsubMessage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PubsubMessage $message = null;
    
    /**
     * Required. The subscription of the Pub/Sub push notification. Format: projects/{project}/subscriptions/{sub}
     * 
     * @var ?string $subscription
     */
	#[\JMS\Serializer\Annotation\SerializedName('subscription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subscription = null;
    
	public function __construct()
	{
		$this->gcpCloudEventsMode = null;
		$this->message = null;
		$this->subscription = null;
	}
}
