// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetUnfilteredTableMetadataXAmzTargetEnum
type GetUnfilteredTableMetadataXAmzTargetEnum string

const (
	GetUnfilteredTableMetadataXAmzTargetEnumAwsGlueGetUnfilteredTableMetadata GetUnfilteredTableMetadataXAmzTargetEnum = "AWSGlue.GetUnfilteredTableMetadata"
)

func (e *GetUnfilteredTableMetadataXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSGlue.GetUnfilteredTableMetadata":
		*e = GetUnfilteredTableMetadataXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetUnfilteredTableMetadataXAmzTargetEnum: %s", s)
	}
}

type GetUnfilteredTableMetadataRequest struct {
	GetUnfilteredTableMetadataRequest shared.GetUnfilteredTableMetadataRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                 *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                        GetUnfilteredTableMetadataXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetUnfilteredTableMetadataResponse struct {
	ContentType string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// Success
	GetUnfilteredTableMetadataResponse *shared.GetUnfilteredTableMetadataResponse
	// GlueEncryptionException
	GlueEncryptionException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	// PermissionTypeMismatchException
	PermissionTypeMismatchException interface{}
	StatusCode                      int
	RawResponse                     *http.Response
}
