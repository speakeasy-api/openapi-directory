<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ReportSummaryAssetAggregateStats - Aggregate statistics for a collection of assets.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ReportSummaryAssetAggregateStats
{
    /**
     * Describes a collection of data points rendered as a Chart.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ReportSummaryChartData $assetAge
     */
	#[\JMS\Serializer\Annotation\SerializedName('assetAge')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ReportSummaryChartData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReportSummaryChartData $assetAge = null;
    
    /**
     * A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ReportSummaryHistogramChartData $coreCountHistogram
     */
	#[\JMS\Serializer\Annotation\SerializedName('coreCountHistogram')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ReportSummaryHistogramChartData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReportSummaryHistogramChartData $coreCountHistogram = null;
    
    /**
     * A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ReportSummaryHistogramChartData $memoryBytesHistogram
     */
	#[\JMS\Serializer\Annotation\SerializedName('memoryBytesHistogram')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ReportSummaryHistogramChartData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReportSummaryHistogramChartData $memoryBytesHistogram = null;
    
    /**
     * Describes a collection of data points rendered as a Chart.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ReportSummaryChartData $memoryUtilization
     */
	#[\JMS\Serializer\Annotation\SerializedName('memoryUtilization')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ReportSummaryChartData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReportSummaryChartData $memoryUtilization = null;
    
    /**
     * Utilization Chart is a specific type of visualization which displays a metric classified into "Used" and "Free" buckets.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ReportSummaryUtilizationChartData $memoryUtilizationChart
     */
	#[\JMS\Serializer\Annotation\SerializedName('memoryUtilizationChart')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ReportSummaryUtilizationChartData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReportSummaryUtilizationChartData $memoryUtilizationChart = null;
    
    /**
     * Describes a collection of data points rendered as a Chart.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ReportSummaryChartData $operatingSystem
     */
	#[\JMS\Serializer\Annotation\SerializedName('operatingSystem')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ReportSummaryChartData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReportSummaryChartData $operatingSystem = null;
    
    /**
     * A Histogram Chart shows a distribution of values into buckets, showing a count of values which fall into a bucket.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ReportSummaryHistogramChartData $storageBytesHistogram
     */
	#[\JMS\Serializer\Annotation\SerializedName('storageBytesHistogram')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ReportSummaryHistogramChartData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReportSummaryHistogramChartData $storageBytesHistogram = null;
    
    /**
     * Describes a collection of data points rendered as a Chart.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ReportSummaryChartData $storageUtilization
     */
	#[\JMS\Serializer\Annotation\SerializedName('storageUtilization')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ReportSummaryChartData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReportSummaryChartData $storageUtilization = null;
    
    /**
     * Utilization Chart is a specific type of visualization which displays a metric classified into "Used" and "Free" buckets.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ReportSummaryUtilizationChartData $storageUtilizationChart
     */
	#[\JMS\Serializer\Annotation\SerializedName('storageUtilizationChart')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ReportSummaryUtilizationChartData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReportSummaryUtilizationChartData $storageUtilizationChart = null;
    
    /**
     * Count of the number of unique assets in this collection.
     * 
     * @var ?string $totalAssets
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalAssets')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $totalAssets = null;
    
    /**
     * Sum of the CPU core count of all the assets in this collection.
     * 
     * @var ?string $totalCores
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalCores')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $totalCores = null;
    
    /**
     * Sum of the memory in bytes of all the assets in this collection.
     * 
     * @var ?string $totalMemoryBytes
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalMemoryBytes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $totalMemoryBytes = null;
    
    /**
     * Sum of persistent storage in bytes of all the assets in this collection.
     * 
     * @var ?string $totalStorageBytes
     */
	#[\JMS\Serializer\Annotation\SerializedName('totalStorageBytes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $totalStorageBytes = null;
    
	public function __construct()
	{
		$this->assetAge = null;
		$this->coreCountHistogram = null;
		$this->memoryBytesHistogram = null;
		$this->memoryUtilization = null;
		$this->memoryUtilizationChart = null;
		$this->operatingSystem = null;
		$this->storageBytesHistogram = null;
		$this->storageUtilization = null;
		$this->storageUtilizationChart = null;
		$this->totalAssets = null;
		$this->totalCores = null;
		$this->totalMemoryBytes = null;
		$this->totalStorageBytes = null;
	}
}
