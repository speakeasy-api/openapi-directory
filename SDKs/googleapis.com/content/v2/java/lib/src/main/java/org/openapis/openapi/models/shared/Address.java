/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Address {
    /**
     * Required. Top-level administrative subdivision of the country. For example, a state like California ("CA") or a province like Quebec ("QC").
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("administrativeArea")
    public String administrativeArea;
    public Address withAdministrativeArea(String administrativeArea) {
        this.administrativeArea = administrativeArea;
        return this;
    }
    
    /**
     * Required. City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city")
    public String city;
    public Address withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * Required. [CLDR country code](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml)(e.g. "US").
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;
    public Address withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * Required. Postal code or ZIP (e.g. "94043"). Required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postalCode")
    public String postalCode;
    public Address withPostalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }
    
    /**
     * Street-level part of the address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("streetAddress")
    public String streetAddress;
    public Address withStreetAddress(String streetAddress) {
        this.streetAddress = streetAddress;
        return this;
    }
    
}
