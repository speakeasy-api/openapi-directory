/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PublishLayerVersionRequestBody {
    /**
     * A list of compatible &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/foundation-arch.html"&gt;instruction set architectures&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CompatibleArchitectures")
    public org.openapis.openapi.models.shared.ArchitectureEnum[] compatibleArchitectures;
    public PublishLayerVersionRequestBody withCompatibleArchitectures(org.openapis.openapi.models.shared.ArchitectureEnum[] compatibleArchitectures) {
        this.compatibleArchitectures = compatibleArchitectures;
        return this;
    }
    
    /**
     * A list of compatible &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html"&gt;function runtimes&lt;/a&gt;. Used for filtering with &lt;a&gt;ListLayers&lt;/a&gt; and &lt;a&gt;ListLayerVersions&lt;/a&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CompatibleRuntimes")
    public org.openapis.openapi.models.shared.RuntimeEnum[] compatibleRuntimes;
    public PublishLayerVersionRequestBody withCompatibleRuntimes(org.openapis.openapi.models.shared.RuntimeEnum[] compatibleRuntimes) {
        this.compatibleRuntimes = compatibleRuntimes;
        return this;
    }
    
    /**
     * A ZIP archive that contains the contents of an &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html"&gt;Lambda layer&lt;/a&gt;. You can specify either an Amazon S3 location, or upload a layer archive directly.
     */
    @JsonProperty("Content")
    public PublishLayerVersionRequestBodyContent content;
    public PublishLayerVersionRequestBody withContent(PublishLayerVersionRequestBodyContent content) {
        this.content = content;
        return this;
    }
    
    /**
     * The description of the version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public PublishLayerVersionRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * &lt;p&gt;The layer's software license. It can be any of the following:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;An &lt;a href="https://spdx.org/licenses/"&gt;SPDX license identifier&lt;/a&gt;. For example, &lt;code&gt;MIT&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The URL of a license hosted on the internet. For example, &lt;code&gt;https://opensource.org/licenses/MIT&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;The full text of the license.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LicenseInfo")
    public String licenseInfo;
    public PublishLayerVersionRequestBody withLicenseInfo(String licenseInfo) {
        this.licenseInfo = licenseInfo;
        return this;
    }
    
}
