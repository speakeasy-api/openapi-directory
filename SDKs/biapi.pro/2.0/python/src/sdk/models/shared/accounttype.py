"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountType:
    r"""Successful GET on AccountType resource"""
    
    display_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display_name') }})
    r"""Name to display in singular"""  
    display_name_p: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('display_name_p') }})
    r"""Name to display in plurial"""  
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""ID of the account type"""  
    is_invest: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_invest') }})
    r"""Is it an investment account"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Name of the account type"""  
    weboob_type_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weboob_type_id') }})
    r"""Map to the weboob_type_id"""  
    color: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('color'), 'exclude': lambda f: f is None }})
    r"""Color of the account type (hexdecimal)"""  
    id_parent: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id_parent'), 'exclude': lambda f: f is None }})
    r"""Id of the parent type"""  
    product: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('product'), 'exclude': lambda f: f is None }})
    r"""Product associated with the account"""  
    