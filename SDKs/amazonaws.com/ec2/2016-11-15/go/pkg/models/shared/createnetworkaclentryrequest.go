// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateNetworkACLEntryRequestIcmpTypeCode - ICMP protocol: The ICMP or ICMPv6 type and code. Required if specifying protocol 1 (ICMP) or protocol 58 (ICMPv6) with an IPv6 CIDR block.
type CreateNetworkACLEntryRequestIcmpTypeCode struct {
	Code *int64
	Type *int64
}

// CreateNetworkACLEntryRequestPortRange - TCP or UDP protocols: The range of ports the rule applies to. Required if specifying protocol 6 (TCP) or 17 (UDP).
type CreateNetworkACLEntryRequestPortRange struct {
	From *int64
	To   *int64
}

// CreateNetworkACLEntryRequestRuleActionEnum - Indicates whether to allow or deny the traffic that matches the rule.
type CreateNetworkACLEntryRequestRuleActionEnum string

const (
	CreateNetworkACLEntryRequestRuleActionEnumAllow CreateNetworkACLEntryRequestRuleActionEnum = "allow"
	CreateNetworkACLEntryRequestRuleActionEnumDeny  CreateNetworkACLEntryRequestRuleActionEnum = "deny"
)

func (e *CreateNetworkACLEntryRequestRuleActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "allow":
		fallthrough
	case "deny":
		*e = CreateNetworkACLEntryRequestRuleActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNetworkACLEntryRequestRuleActionEnum: %s", s)
	}
}

type CreateNetworkACLEntryRequest struct {
	CidrBlock     *string
	DryRun        *bool
	Egress        bool
	IcmpTypeCode  *CreateNetworkACLEntryRequestIcmpTypeCode
	Ipv6CidrBlock *string
	NetworkACLID  string
	PortRange     *CreateNetworkACLEntryRequestPortRange
	Protocol      string
	RuleAction    CreateNetworkACLEntryRequestRuleActionEnum
	RuleNumber    int64
}
