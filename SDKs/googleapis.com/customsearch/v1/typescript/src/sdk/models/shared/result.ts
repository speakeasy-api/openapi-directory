/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Image belonging to a custom search result.
 */
export class ResultImage extends SpeakeasyBase {
  /**
   * The size of the image, in bytes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "byteSize" })
  byteSize?: number;

  /**
   * A URL pointing to the webpage hosting the image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contextLink" })
  contextLink?: string;

  /**
   * The height of the image, in pixels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "height" })
  height?: number;

  /**
   * The height of the thumbnail image, in pixels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumbnailHeight" })
  thumbnailHeight?: number;

  /**
   * A URL to the thumbnail image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumbnailLink" })
  thumbnailLink?: string;

  /**
   * The width of the thumbnail image, in pixels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumbnailWidth" })
  thumbnailWidth?: number;

  /**
   * The width of the image, in pixels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "width" })
  width?: number;
}

/**
 * Refinement label associated with a custom search result.
 */
export class ResultLabels extends SpeakeasyBase {
  /**
   * The display name of a refinement label. This is the name you should display in your user interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Refinement label and the associated refinement operation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "label_with_op" })
  labelWithOp?: string;

  /**
   * The name of a refinement label, which you can use to refine searches. Don't display this in your user interface; instead, use displayName.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * A custom search result.
 */
export class Result extends SpeakeasyBase {
  /**
   * Indicates the ID of Google's cached version of the search result.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cacheId" })
  cacheId?: string;

  /**
   * An abridged version of this search resultâ€™s URL, e.g. www.example.com.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayLink" })
  displayLink?: string;

  /**
   * The file format of the search result.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fileFormat" })
  fileFormat?: string;

  /**
   * The URL displayed after the snippet for each search result.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "formattedUrl" })
  formattedUrl?: string;

  /**
   * The HTML-formatted URL displayed after the snippet for each search result.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "htmlFormattedUrl" })
  htmlFormattedUrl?: string;

  /**
   * The snippet of the search result, in HTML.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "htmlSnippet" })
  htmlSnippet?: string;

  /**
   * The title of the search result, in HTML.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "htmlTitle" })
  htmlTitle?: string;

  /**
   * Image belonging to a custom search result.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image" })
  @Type(() => ResultImage)
  image?: ResultImage;

  /**
   * A unique identifier for the type of current object. For this API, it is `customsearch#result.`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Encapsulates all information about refinement labels.
   */
  @SpeakeasyMetadata({ elemType: ResultLabels })
  @Expose({ name: "labels" })
  @Type(() => ResultLabels)
  labels?: ResultLabels[];

  /**
   * The full URL to which the search result is pointing, e.g. http://www.example.com/foo/bar.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link?: string;

  /**
   * The MIME type of the search result.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mime" })
  mime?: string;

  /**
   * Contains [PageMap](https://developers.google.com/custom-search/docs/structured_data#pagemaps) information for this search result.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pagemap" })
  pagemap?: Record<string, any>;

  /**
   * The snippet of the search result, in plain text.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "snippet" })
  snippet?: string;

  /**
   * The title of the search result, in plain text.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}
