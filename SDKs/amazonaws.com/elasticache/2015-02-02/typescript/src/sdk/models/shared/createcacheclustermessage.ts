/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AZModeEnum } from "./azmodeenum";
import { IpDiscoveryEnum } from "./ipdiscoveryenum";
import { LogDeliveryConfigurationRequestList } from "./logdeliveryconfigurationrequestlist";
import { NetworkTypeEnum } from "./networktypeenum";
import { OutpostModeEnum } from "./outpostmodeenum";
import { TagList } from "./taglist";

/**
 * Represents the input of a CreateCacheCluster operation.
 */
export class CreateCacheClusterMessage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  azMode?: AZModeEnum;

  @SpeakeasyMetadata()
  authToken?: string;

  @SpeakeasyMetadata()
  autoMinorVersionUpgrade?: boolean;

  @SpeakeasyMetadata()
  cacheClusterId: string;

  @SpeakeasyMetadata()
  cacheNodeType?: string;

  @SpeakeasyMetadata()
  cacheParameterGroupName?: string;

  @SpeakeasyMetadata()
  cacheSecurityGroupNames?: string[];

  @SpeakeasyMetadata()
  cacheSubnetGroupName?: string;

  @SpeakeasyMetadata()
  engine?: string;

  @SpeakeasyMetadata()
  engineVersion?: string;

  @SpeakeasyMetadata()
  ipDiscovery?: IpDiscoveryEnum;

  @SpeakeasyMetadata({ elemType: LogDeliveryConfigurationRequestList })
  logDeliveryConfigurations?: LogDeliveryConfigurationRequestList[];

  @SpeakeasyMetadata()
  networkType?: NetworkTypeEnum;

  @SpeakeasyMetadata()
  notificationTopicArn?: string;

  @SpeakeasyMetadata()
  numCacheNodes?: number;

  @SpeakeasyMetadata()
  outpostMode?: OutpostModeEnum;

  @SpeakeasyMetadata()
  port?: number;

  @SpeakeasyMetadata()
  preferredAvailabilityZone?: string;

  @SpeakeasyMetadata()
  preferredAvailabilityZones?: string[];

  @SpeakeasyMetadata()
  preferredMaintenanceWindow?: string;

  @SpeakeasyMetadata()
  preferredOutpostArn?: string;

  @SpeakeasyMetadata()
  preferredOutpostArns?: string[];

  @SpeakeasyMetadata()
  replicationGroupId?: string;

  @SpeakeasyMetadata()
  securityGroupIds?: string[];

  @SpeakeasyMetadata()
  snapshotArns?: string[];

  @SpeakeasyMetadata()
  snapshotName?: string;

  @SpeakeasyMetadata()
  snapshotRetentionLimit?: number;

  @SpeakeasyMetadata()
  snapshotWindow?: string;

  @SpeakeasyMetadata({ elemType: TagList })
  tags?: TagList[];

  @SpeakeasyMetadata()
  transitEncryptionEnabled?: boolean;
}
