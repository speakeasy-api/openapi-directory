"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import instancetype_enum as shared_instancetype_enum
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class DescribeSpotPriceHistoryRequestFilters:
    r"""<p>A filter name and value pair that is used to return a more specific list of results from a describe operation. Filters can be used to match a set of resources by specific criteria, such as tags, attributes, or IDs.</p> <p>If you specify multiple filters, the filters are joined with an <code>AND</code>, and the request returns only results that match all of the specified filters.</p>"""
    
    name: Optional[str] = dataclasses.field(default=None)  
    values: Optional[list[str]] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class DescribeSpotPriceHistoryRequest:
    r"""Contains the parameters for DescribeSpotPriceHistory."""
    
    availability_zone: Optional[str] = dataclasses.field(default=None)  
    dry_run: Optional[bool] = dataclasses.field(default=None)  
    end_time: Optional[datetime] = dataclasses.field(default=None)  
    filters: Optional[list[DescribeSpotPriceHistoryRequestFilters]] = dataclasses.field(default=None)  
    instance_types: Optional[list[shared_instancetype_enum.InstanceTypeEnum]] = dataclasses.field(default=None)  
    max_results: Optional[int] = dataclasses.field(default=None)  
    next_token: Optional[str] = dataclasses.field(default=None)  
    product_descriptions: Optional[list[str]] = dataclasses.field(default=None)  
    start_time: Optional[datetime] = dataclasses.field(default=None)  
    