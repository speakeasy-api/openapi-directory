// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PutAccountPreferencesRequestBodyResourceIDTypeEnum - A preference indicating a choice to use 63bit/32bit IDs for all applicable resources.
type PutAccountPreferencesRequestBodyResourceIDTypeEnum string

const (
	PutAccountPreferencesRequestBodyResourceIDTypeEnumLongID  PutAccountPreferencesRequestBodyResourceIDTypeEnum = "LONG_ID"
	PutAccountPreferencesRequestBodyResourceIDTypeEnumShortID PutAccountPreferencesRequestBodyResourceIDTypeEnum = "SHORT_ID"
)

func (e *PutAccountPreferencesRequestBodyResourceIDTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LONG_ID":
		fallthrough
	case "SHORT_ID":
		*e = PutAccountPreferencesRequestBodyResourceIDTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PutAccountPreferencesRequestBodyResourceIDTypeEnum: %s", s)
	}
}

type PutAccountPreferencesRequestBody struct {
	// A preference indicating a choice to use 63bit/32bit IDs for all applicable resources.
	ResourceIDType PutAccountPreferencesRequestBodyResourceIDTypeEnum `json:"ResourceIdType"`
}

type PutAccountPreferencesRequest struct {
	RequestBody       PutAccountPreferencesRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type PutAccountPreferencesResponse struct {
	// BadRequest
	BadRequest  interface{}
	ContentType string
	// InternalServerError
	InternalServerError interface{}
	// Success
	PutAccountPreferencesResponse *shared.PutAccountPreferencesResponse
	StatusCode                    int
	RawResponse                   *http.Response
}
