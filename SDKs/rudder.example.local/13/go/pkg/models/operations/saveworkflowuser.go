// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type SaveWorkflowUserRequestBody struct {
	// list of user to put in validated list
	ValidatedUsers []string `json:"validatedUsers"`
}

type SaveWorkflowUserRequest struct {
	Request SaveWorkflowUserRequestBody `request:"mediaType=application/json"`
}

// SaveWorkflowUser200ApplicationJSONActionEnum - The id of the action
type SaveWorkflowUser200ApplicationJSONActionEnum string

const (
	SaveWorkflowUser200ApplicationJSONActionEnumAddUser SaveWorkflowUser200ApplicationJSONActionEnum = "addUser"
)

func (e *SaveWorkflowUser200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "addUser":
		*e = SaveWorkflowUser200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SaveWorkflowUser200ApplicationJSONActionEnum: %s", s)
	}
}

// SaveWorkflowUser200ApplicationJSONResultEnum - Result of the request
type SaveWorkflowUser200ApplicationJSONResultEnum string

const (
	SaveWorkflowUser200ApplicationJSONResultEnumSuccess SaveWorkflowUser200ApplicationJSONResultEnum = "success"
	SaveWorkflowUser200ApplicationJSONResultEnumError   SaveWorkflowUser200ApplicationJSONResultEnum = "error"
)

func (e *SaveWorkflowUser200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = SaveWorkflowUser200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SaveWorkflowUser200ApplicationJSONResultEnum: %s", s)
	}
}

// SaveWorkflowUser200ApplicationJSON - Updated
type SaveWorkflowUser200ApplicationJSON struct {
	// The id of the action
	Action SaveWorkflowUser200ApplicationJSONActionEnum `json:"action"`
	// list of users with their workflow settings
	Data shared.ValidatedUser `json:"data"`
	// Result of the request
	Result SaveWorkflowUser200ApplicationJSONResultEnum `json:"result"`
}

type SaveWorkflowUserResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Updated
	SaveWorkflowUser200ApplicationJSONObject *SaveWorkflowUser200ApplicationJSON
}
