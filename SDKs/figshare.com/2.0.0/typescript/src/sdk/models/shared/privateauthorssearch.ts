/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The field by which to order. Default varies by endpoint/resource.
 */
export enum PrivateAuthorsSearchOrderEnum {
  PublishedDate = "published_date",
  ModifiedDate = "modified_date",
  Views = "views",
  Shares = "shares",
  Downloads = "downloads",
  Cites = "cites",
}

/**
 * Direction of ordering
 */
export enum PrivateAuthorsSearchOrderDirectionEnum {
  Asc = "asc",
  Desc = "desc",
}

/**
 * Search Parameters
 */
export class PrivateAuthorsSearch extends SpeakeasyBase {
  /**
   * Return only authors in this group or subgroups of the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group_id" })
  groupId?: number;

  /**
   * Return only authors associated to this institution
   */
  @SpeakeasyMetadata()
  @Expose({ name: "institution_id" })
  institutionId?: number;

  /**
   * Return only active authors if True
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_active" })
  isActive?: boolean;

  /**
   * Return only authors that have published items if True
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_public" })
  isPublic?: boolean;

  /**
   * Number of results included on a page. Used for pagination with query
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;

  /**
   * Where to start the listing(the offset of the first result). Used for pagination with limit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offset" })
  offset?: number;

  /**
   * Orcid of author
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orcid" })
  orcid?: string;

  /**
   * The field by which to order. Default varies by endpoint/resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "order" })
  order?: PrivateAuthorsSearchOrderEnum;

  /**
   * Direction of ordering
   */
  @SpeakeasyMetadata()
  @Expose({ name: "order_direction" })
  orderDirection?: PrivateAuthorsSearchOrderDirectionEnum;

  /**
   * Page number. Used for pagination with page_size
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  /**
   * The number of results included on a page. Used for pagination with page
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  /**
   * Search term
   */
  @SpeakeasyMetadata()
  @Expose({ name: "search_for" })
  searchFor?: string;
}
