"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AssignmentJobTypeEnum(str, Enum):
    r"""Which type of jobs will use the reservation."""
    JOB_TYPE_UNSPECIFIED = 'JOB_TYPE_UNSPECIFIED'
    PIPELINE = 'PIPELINE'
    QUERY = 'QUERY'
    ML_EXTERNAL = 'ML_EXTERNAL'
    BACKGROUND = 'BACKGROUND'

class AssignmentStateEnum(str, Enum):
    r"""Output only. State of the assignment."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    PENDING = 'PENDING'
    ACTIVE = 'ACTIVE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Assignment:
    r"""An assignment allows a project to submit jobs of a certain type using slots from the specified reservation."""
    
    assignee: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assignee'), 'exclude': lambda f: f is None }})
    r"""The resource which will use the reservation. E.g. `projects/myproject`, `folders/123`, or `organizations/456`."""  
    job_type: Optional[AssignmentJobTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobType'), 'exclude': lambda f: f is None }})
    r"""Which type of jobs will use the reservation."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. Name of the resource. E.g.: `projects/myproject/locations/US/reservations/team1-prod/assignments/123`. The assignment_id must only contain lower case alphanumeric characters or dashes and the max length is 64 characters."""  
    state: Optional[AssignmentStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Output only. State of the assignment."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AssignmentInput:
    r"""An assignment allows a project to submit jobs of a certain type using slots from the specified reservation."""
    
    assignee: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assignee'), 'exclude': lambda f: f is None }})
    r"""The resource which will use the reservation. E.g. `projects/myproject`, `folders/123`, or `organizations/456`."""  
    job_type: Optional[AssignmentJobTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobType'), 'exclude': lambda f: f is None }})
    r"""Which type of jobs will use the reservation."""  
    