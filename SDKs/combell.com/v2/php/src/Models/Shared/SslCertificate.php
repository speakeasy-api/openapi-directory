<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class SslCertificate
{
    /**
     * The common name (e.g. domain.com) of the certificate.
     * 
     * @var ?string $commonName
     */
	#[\JMS\Serializer\Annotation\SerializedName('common_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $commonName = null;
    
    /**
     * The exact time the certificate will expire.
     * 
     * @var ?\DateTime $expiresAfter
     */
	#[\JMS\Serializer\Annotation\SerializedName('expires_after')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $expiresAfter = null;
    
    /**
     * The SHA-1 fingerprint of the certificate.<br />
     * 
     * The fingerprint is a cryptographic hash which is a short unique identification of the certificate.
     * 
     * @var ?string $sha1Fingerprint
     */
	#[\JMS\Serializer\Annotation\SerializedName('sha1_fingerprint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sha1Fingerprint = null;
    
    /**
     * The type of the certificate:
     * 
     * <ul><li>Standard: Certificate for a single domain.</li><li>Multi domain: Certificate for multiple (sub)domains belonging to the same owner.</li><li>Wildcard: Certificate for all the subdomains.</li></ul>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SslCertificateTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SslCertificateTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SslCertificateTypeEnum $type = null;
    
    /**
     * The validation level of the certificate:
     * 
     * <ul><li>Domain validated: Basic check of the identity of the owner of the domain name.</li><li>Organization validated: Company details are verified and integrated in the certificate.</li><li>Extended validated: A thorough verification of your domain name and company details.</li></ul>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SslCertificateValidationLevelEnum $validationLevel
     */
	#[\JMS\Serializer\Annotation\SerializedName('validation_level')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SslCertificateValidationLevelEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SslCertificateValidationLevelEnum $validationLevel = null;
    
	public function __construct()
	{
		$this->commonName = null;
		$this->expiresAfter = null;
		$this->sha1Fingerprint = null;
		$this->type = null;
		$this->validationLevel = null;
	}
}
