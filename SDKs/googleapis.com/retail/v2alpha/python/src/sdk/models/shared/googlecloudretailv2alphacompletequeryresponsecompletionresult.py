"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudretailv2alphacustomattribute as shared_googlecloudretailv2alphacustomattribute
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult:
    r"""Resource that represents completion results."""
    
    attributes: Optional[dict[str, shared_googlecloudretailv2alphacustomattribute.GoogleCloudRetailV2alphaCustomAttribute]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attributes'), 'exclude': lambda f: f is None }})
    r"""Custom attributes for the suggestion term. * For \\"user-data\\", the attributes are additional custom attributes ingested through BigQuery. * For \\"cloud-retail\\", the attributes are product attributes generated by Cloud Retail. It requires UserEvent.product_details is imported properly."""  
    suggestion: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suggestion'), 'exclude': lambda f: f is None }})
    r"""The suggestion for the query."""  
    