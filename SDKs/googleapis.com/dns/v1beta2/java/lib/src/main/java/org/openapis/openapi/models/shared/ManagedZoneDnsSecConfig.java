/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ManagedZoneDnsSecConfig {
    /**
     * Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultKeySpecs")
    public DnsKeySpec[] defaultKeySpecs;

    public ManagedZoneDnsSecConfig withDefaultKeySpecs(DnsKeySpec[] defaultKeySpecs) {
        this.defaultKeySpecs = defaultKeySpecs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public ManagedZoneDnsSecConfig withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nonExistence")
    public ManagedZoneDnsSecConfigNonExistenceEnum nonExistence;

    public ManagedZoneDnsSecConfig withNonExistence(ManagedZoneDnsSecConfigNonExistenceEnum nonExistence) {
        this.nonExistence = nonExistence;
        return this;
    }
    
    /**
     * Specifies whether DNSSEC is enabled, and what mode it is in.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public ManagedZoneDnsSecConfigStateEnum state;

    public ManagedZoneDnsSecConfig withState(ManagedZoneDnsSecConfigStateEnum state) {
        this.state = state;
        return this;
    }
    
    public ManagedZoneDnsSecConfig(){}
}
