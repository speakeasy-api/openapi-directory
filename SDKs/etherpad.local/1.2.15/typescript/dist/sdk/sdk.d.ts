import { AxiosInstance, AxiosRequestConfig } from "axios";
import * as operations from "./models/operations";
import { Security } from "./models/shared";
import { Author } from "./author";
import { Group } from "./group";
import { Pad } from "./pad";
import { Session } from "./session";
export declare const ServerList: readonly ["http://etherpad.local", "http://pads.mro.name/api/1.2.15"];
export type SDKProps = {
    defaultClient?: AxiosInstance;
    security?: Security;
    serverUrl?: string;
};
export declare class SDK {
    author: Author;
    group: Group;
    pad: Pad;
    session: Session;
    _defaultClient: AxiosInstance;
    _securityClient: AxiosInstance;
    _serverURL: string;
    private _language;
    private _sdkVersion;
    private _genVersion;
    constructor(props: SDKProps);
    appendTextUsingGet(req: operations.AppendTextUsingGetRequest, config?: AxiosRequestConfig): Promise<operations.AppendTextUsingGetResponse>;
    appendTextUsingPost(req: operations.AppendTextUsingPostRequest, config?: AxiosRequestConfig): Promise<operations.AppendTextUsingPostResponse>;
    copyPadUsingGet(req: operations.CopyPadUsingGetRequest, config?: AxiosRequestConfig): Promise<operations.CopyPadUsingGetResponse>;
    copyPadUsingPost(req: operations.CopyPadUsingPostRequest, config?: AxiosRequestConfig): Promise<operations.CopyPadUsingPostResponse>;
    copyPadWithoutHistoryUsingGet(req: operations.CopyPadWithoutHistoryUsingGetRequest, config?: AxiosRequestConfig): Promise<operations.CopyPadWithoutHistoryUsingGetResponse>;
    copyPadWithoutHistoryUsingPost(req: operations.CopyPadWithoutHistoryUsingPostRequest, config?: AxiosRequestConfig): Promise<operations.CopyPadWithoutHistoryUsingPostResponse>;
    getAttributePoolUsingGet(req: operations.GetAttributePoolUsingGetRequest, config?: AxiosRequestConfig): Promise<operations.GetAttributePoolUsingGetResponse>;
    getAttributePoolUsingPost(req: operations.GetAttributePoolUsingPostRequest, config?: AxiosRequestConfig): Promise<operations.GetAttributePoolUsingPostResponse>;
    getPadIdUsingGet(req: operations.GetPadIdUsingGetRequest, config?: AxiosRequestConfig): Promise<operations.GetPadIdUsingGetResponse>;
    getPadIdUsingPost(req: operations.GetPadIdUsingPostRequest, config?: AxiosRequestConfig): Promise<operations.GetPadIdUsingPostResponse>;
    getRevisionChangesetUsingGet(req: operations.GetRevisionChangesetUsingGetRequest, config?: AxiosRequestConfig): Promise<operations.GetRevisionChangesetUsingGetResponse>;
    getRevisionChangesetUsingPost(req: operations.GetRevisionChangesetUsingPostRequest, config?: AxiosRequestConfig): Promise<operations.GetRevisionChangesetUsingPostResponse>;
    getSavedRevisionsCountUsingGet(req: operations.GetSavedRevisionsCountUsingGetRequest, config?: AxiosRequestConfig): Promise<operations.GetSavedRevisionsCountUsingGetResponse>;
    getSavedRevisionsCountUsingPost(req: operations.GetSavedRevisionsCountUsingPostRequest, config?: AxiosRequestConfig): Promise<operations.GetSavedRevisionsCountUsingPostResponse>;
    getStatsUsingGet(config?: AxiosRequestConfig): Promise<operations.GetStatsUsingGetResponse>;
    getStatsUsingPost(config?: AxiosRequestConfig): Promise<operations.GetStatsUsingPostResponse>;
    listSavedRevisionsUsingGet(req: operations.ListSavedRevisionsUsingGetRequest, config?: AxiosRequestConfig): Promise<operations.ListSavedRevisionsUsingGetResponse>;
    listSavedRevisionsUsingPost(req: operations.ListSavedRevisionsUsingPostRequest, config?: AxiosRequestConfig): Promise<operations.ListSavedRevisionsUsingPostResponse>;
    movePadUsingGet(req: operations.MovePadUsingGetRequest, config?: AxiosRequestConfig): Promise<operations.MovePadUsingGetResponse>;
    movePadUsingPost(req: operations.MovePadUsingPostRequest, config?: AxiosRequestConfig): Promise<operations.MovePadUsingPostResponse>;
    restoreRevisionUsingGet(req: operations.RestoreRevisionUsingGetRequest, config?: AxiosRequestConfig): Promise<operations.RestoreRevisionUsingGetResponse>;
    restoreRevisionUsingPost(req: operations.RestoreRevisionUsingPostRequest, config?: AxiosRequestConfig): Promise<operations.RestoreRevisionUsingPostResponse>;
    saveRevisionUsingGet(req: operations.SaveRevisionUsingGetRequest, config?: AxiosRequestConfig): Promise<operations.SaveRevisionUsingGetResponse>;
    saveRevisionUsingPost(req: operations.SaveRevisionUsingPostRequest, config?: AxiosRequestConfig): Promise<operations.SaveRevisionUsingPostResponse>;
}
