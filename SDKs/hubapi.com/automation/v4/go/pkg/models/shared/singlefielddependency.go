// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SingleFieldDependencyDependencyTypeEnum string

const (
	SingleFieldDependencyDependencyTypeEnumSingleField SingleFieldDependencyDependencyTypeEnum = "SINGLE_FIELD"
)

func (e *SingleFieldDependencyDependencyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SINGLE_FIELD":
		*e = SingleFieldDependencyDependencyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SingleFieldDependencyDependencyTypeEnum: %s", s)
	}
}

type SingleFieldDependency struct {
	ControllingFieldName string                                  `json:"controllingFieldName"`
	DependencyType       SingleFieldDependencyDependencyTypeEnum `json:"dependencyType"`
	DependentFieldNames  []string                                `json:"dependentFieldNames"`
}
