/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The new state of the product. This field will always be present.
 */
export enum ProductAvailabilityChangeEventAvailabilityStatusEnum {
  Unknown = "unknown",
  Available = "available",
  Removed = "removed",
  Unpublished = "unpublished",
}

/**
 * An event generated whenever a product's availability changes.
 */
export class ProductAvailabilityChangeEvent extends SpeakeasyBase {
  /**
   * The new state of the product. This field will always be present.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availabilityStatus" })
  availabilityStatus?: ProductAvailabilityChangeEventAvailabilityStatusEnum;

  /**
   * The id of the product (e.g. "app:com.google.android.gm") for which the product availability changed. This field will always be present.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productId" })
  productId?: string;
}
