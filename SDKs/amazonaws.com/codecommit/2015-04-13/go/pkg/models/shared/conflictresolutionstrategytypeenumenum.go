// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConflictResolutionStrategyTypeEnumEnum string

const (
	ConflictResolutionStrategyTypeEnumEnumNone              ConflictResolutionStrategyTypeEnumEnum = "NONE"
	ConflictResolutionStrategyTypeEnumEnumAcceptSource      ConflictResolutionStrategyTypeEnumEnum = "ACCEPT_SOURCE"
	ConflictResolutionStrategyTypeEnumEnumAcceptDestination ConflictResolutionStrategyTypeEnumEnum = "ACCEPT_DESTINATION"
	ConflictResolutionStrategyTypeEnumEnumAutomerge         ConflictResolutionStrategyTypeEnumEnum = "AUTOMERGE"
)

func (e ConflictResolutionStrategyTypeEnumEnum) ToPointer() *ConflictResolutionStrategyTypeEnumEnum {
	return &e
}

func (e *ConflictResolutionStrategyTypeEnumEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NONE":
		fallthrough
	case "ACCEPT_SOURCE":
		fallthrough
	case "ACCEPT_DESTINATION":
		fallthrough
	case "AUTOMERGE":
		*e = ConflictResolutionStrategyTypeEnumEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConflictResolutionStrategyTypeEnumEnum: %v", v)
	}
}
