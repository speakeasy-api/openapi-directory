"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import catalogconfiguration as shared_catalogconfiguration
from ..shared import customartifactconfiguration as shared_customartifactconfiguration
from ..shared import deployasapplicationconfiguration as shared_deployasapplicationconfiguration
from ..shared import zeppelinmonitoringconfiguration as shared_zeppelinmonitoringconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ZeppelinApplicationConfiguration:
    r"""The configuration of a Kinesis Data Analytics Studio notebook."""
    
    catalog_configuration: Optional[shared_catalogconfiguration.CatalogConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CatalogConfiguration'), 'exclude': lambda f: f is None }})  
    custom_artifacts_configuration: Optional[list[shared_customartifactconfiguration.CustomArtifactConfiguration]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CustomArtifactsConfiguration'), 'exclude': lambda f: f is None }})  
    deploy_as_application_configuration: Optional[shared_deployasapplicationconfiguration.DeployAsApplicationConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeployAsApplicationConfiguration'), 'exclude': lambda f: f is None }})  
    monitoring_configuration: Optional[shared_zeppelinmonitoringconfiguration.ZeppelinMonitoringConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MonitoringConfiguration'), 'exclude': lambda f: f is None }})  
    