/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class BurnTokenRequestBurn extends SpeakeasyBase {
  /**
   * Amount of tokens to burn
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: number;

  /**
   * Unique token id we are burning
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tokenId" })
  tokenId?: string;
}

export class BurnTokenRequestTransfer extends SpeakeasyBase {
  /**
   * Address to transfer tokens to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * Number of tokens to send
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: number;

  /**
   * ID of token we are sending
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tokenId" })
  tokenId?: string;
}

/**
 * Object representing the token to be burned
 */
export class BurnTokenRequest extends SpeakeasyBase {
  /**
   * Array of objects representing tokens to be burned
   */
  @SpeakeasyMetadata({ elemType: BurnTokenRequestBurn })
  @Expose({ name: "burn" })
  @Type(() => BurnTokenRequestBurn)
  burn: BurnTokenRequestBurn[];

  /**
   * Fee in satoshi to include in the issuance transaction min 10000 (0.0001 NEBL)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fee" })
  fee: number;

  /**
   * Array of addresses to send the token from
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  from?: string[];

  @SpeakeasyMetadata({ elemType: BurnTokenRequestTransfer })
  @Expose({ name: "transfer" })
  @Type(() => BurnTokenRequestTransfer)
  transfer?: BurnTokenRequestTransfer[];
}
