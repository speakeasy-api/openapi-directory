// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SegmentDataRequestTypeEnum string

const (
	SegmentDataRequestTypeEnumUser    SegmentDataRequestTypeEnum = "user"
	SegmentDataRequestTypeEnumChannel SegmentDataRequestTypeEnum = "channel"
)

func (e *SegmentDataRequestTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "user":
		fallthrough
	case "channel":
		*e = SegmentDataRequestTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SegmentDataRequestTypeEnum: %s", s)
	}
}

type SegmentDataRequest struct {
	Description *string                    `json:"description,omitempty"`
	Filter      map[string]interface{}     `json:"filter"`
	Name        string                     `json:"name"`
	Type        SegmentDataRequestTypeEnum `json:"type"`
}
