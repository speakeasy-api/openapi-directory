/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class SystemInfoRepresentation {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileEncoding")
    public String fileEncoding;
    public SystemInfoRepresentation withFileEncoding(String fileEncoding) {
        this.fileEncoding = fileEncoding;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("javaHome")
    public String javaHome;
    public SystemInfoRepresentation withJavaHome(String javaHome) {
        this.javaHome = javaHome;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("javaRuntime")
    public String javaRuntime;
    public SystemInfoRepresentation withJavaRuntime(String javaRuntime) {
        this.javaRuntime = javaRuntime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("javaVendor")
    public String javaVendor;
    public SystemInfoRepresentation withJavaVendor(String javaVendor) {
        this.javaVendor = javaVendor;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("javaVersion")
    public String javaVersion;
    public SystemInfoRepresentation withJavaVersion(String javaVersion) {
        this.javaVersion = javaVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("javaVm")
    public String javaVm;
    public SystemInfoRepresentation withJavaVm(String javaVm) {
        this.javaVm = javaVm;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("javaVmVersion")
    public String javaVmVersion;
    public SystemInfoRepresentation withJavaVmVersion(String javaVmVersion) {
        this.javaVmVersion = javaVmVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osArchitecture")
    public String osArchitecture;
    public SystemInfoRepresentation withOsArchitecture(String osArchitecture) {
        this.osArchitecture = osArchitecture;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osName")
    public String osName;
    public SystemInfoRepresentation withOsName(String osName) {
        this.osName = osName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osVersion")
    public String osVersion;
    public SystemInfoRepresentation withOsVersion(String osVersion) {
        this.osVersion = osVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serverTime")
    public String serverTime;
    public SystemInfoRepresentation withServerTime(String serverTime) {
        this.serverTime = serverTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uptime")
    public String uptime;
    public SystemInfoRepresentation withUptime(String uptime) {
        this.uptime = uptime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uptimeMillis")
    public Long uptimeMillis;
    public SystemInfoRepresentation withUptimeMillis(Long uptimeMillis) {
        this.uptimeMillis = uptimeMillis;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userDir")
    public String userDir;
    public SystemInfoRepresentation withUserDir(String userDir) {
        this.userDir = userDir;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userLocale")
    public String userLocale;
    public SystemInfoRepresentation withUserLocale(String userLocale) {
        this.userLocale = userLocale;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userName")
    public String userName;
    public SystemInfoRepresentation withUserName(String userName) {
        this.userName = userName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userTimezone")
    public String userTimezone;
    public SystemInfoRepresentation withUserTimezone(String userTimezone) {
        this.userTimezone = userTimezone;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public String version;
    public SystemInfoRepresentation withVersion(String version) {
        this.version = version;
        return this;
    }
    
}
