/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class PayoutSummaryAudit {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("dateTime")
    public OffsetDateTime dateTime;

    public PayoutSummaryAudit withDateTime(OffsetDateTime dateTime) {
        this.dateTime = dateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fxSummaries")
    public FxSummary[] fxSummaries;

    public PayoutSummaryAudit withFxSummaries(FxSummary[] fxSummaries) {
        this.fxSummaries = fxSummaries;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instructedDateTime")
    public String instructedDateTime;

    public PayoutSummaryAudit withInstructedDateTime(String instructedDateTime) {
        this.instructedDateTime = instructedDateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payorId")
    public String payorId;

    public PayoutSummaryAudit withPayorId(String payorId) {
        this.payorId = payorId;
        return this;
    }
    
    @JsonProperty("payorName")
    public String payorName;

    public PayoutSummaryAudit withPayorName(String payorName) {
        this.payorName = payorName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payoutId")
    public String payoutId;

    public PayoutSummaryAudit withPayoutId(String payoutId) {
        this.payoutId = payoutId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payoutMemo")
    public String payoutMemo;

    public PayoutSummaryAudit withPayoutMemo(String payoutMemo) {
        this.payoutMemo = payoutMemo;
        return this;
    }
    
    /**
     * The type of payout. One of the following values: STANDARD, AS, ON_BEHALF_OF
     */
    @JsonProperty("payoutType")
    public String payoutType;

    public PayoutSummaryAudit withPayoutType(String payoutType) {
        this.payoutType = payoutType;
        return this;
    }
    
    /**
     * Details relating to a payout that was executed via a schedule or is still waiting to be executed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schedule")
    public PayoutSchedule schedule;

    public PayoutSummaryAudit withSchedule(PayoutSchedule schedule) {
        this.schedule = schedule;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceAccountSummary")
    public SourceAccountSummary[] sourceAccountSummary;

    public PayoutSummaryAudit withSourceAccountSummary(SourceAccountSummary[] sourceAccountSummary) {
        this.sourceAccountSummary = sourceAccountSummary;
        return this;
    }
    
    /**
     * Current status of the Payout. One of the following values: ACCEPTED, REJECTED, SUBMITTED, QUOTED, INSTRUCTED, COMPLETED, INCOMPLETE, CONFIRMED, WITHDRAWN
     */
    @JsonProperty("status")
    public String status;

    public PayoutSummaryAudit withStatus(String status) {
        this.status = status;
        return this;
    }
    
    @JsonProperty("submittedDateTime")
    public String submittedDateTime;

    public PayoutSummaryAudit withSubmittedDateTime(String submittedDateTime) {
        this.submittedDateTime = submittedDateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalIncompletePayments")
    public Long totalIncompletePayments;

    public PayoutSummaryAudit withTotalIncompletePayments(Long totalIncompletePayments) {
        this.totalIncompletePayments = totalIncompletePayments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalPayments")
    public Long totalPayments;

    public PayoutSummaryAudit withTotalPayments(Long totalPayments) {
        this.totalPayments = totalPayments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalReturnedPayments")
    public Long totalReturnedPayments;

    public PayoutSummaryAudit withTotalReturnedPayments(Long totalReturnedPayments) {
        this.totalReturnedPayments = totalReturnedPayments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalWithdrawnPayments")
    public Long totalWithdrawnPayments;

    public PayoutSummaryAudit withTotalWithdrawnPayments(Long totalWithdrawnPayments) {
        this.totalWithdrawnPayments = totalWithdrawnPayments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("withdrawnDateTime")
    public OffsetDateTime withdrawnDateTime;

    public PayoutSummaryAudit withWithdrawnDateTime(OffsetDateTime withdrawnDateTime) {
        this.withdrawnDateTime = withdrawnDateTime;
        return this;
    }
    
    public PayoutSummaryAudit(@JsonProperty("payorName") String payorName, @JsonProperty("payoutType") String payoutType, @JsonProperty("status") String status, @JsonProperty("submittedDateTime") String submittedDateTime) {
        this.payorName = payorName;
        this.payoutType = payoutType;
        this.status = status;
        this.submittedDateTime = submittedDateTime;
  }
}
