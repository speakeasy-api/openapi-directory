<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TlsContext - [Deprecated] The TLS settings for the client or server. The TLS settings for the client or server.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TlsContext
{
    /**
     * [Deprecated] Defines the mechanism to obtain the client or server certificate. Defines the mechanism to obtain the client or server certificate.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TlsCertificateContext $certificateContext
     */
	#[\JMS\Serializer\Annotation\SerializedName('certificateContext')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TlsCertificateContext')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TlsCertificateContext $certificateContext = null;
    
    /**
     * [Deprecated] Defines the mechanism to obtain the Certificate Authority certificate to validate the client/server certificate. validate the client/server certificate.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TlsValidationContext $validationContext
     */
	#[\JMS\Serializer\Annotation\SerializedName('validationContext')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TlsValidationContext')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TlsValidationContext $validationContext = null;
    
	public function __construct()
	{
		$this->certificateContext = null;
		$this->validationContext = null;
	}
}
