// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PostAssetsCorrelationMatrixValidationRequestBody struct {
	// The number of assets
	Assets int64 `json:"assets"`
	// assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j
	AssetsCorrelationMatrix [][]float64 `json:"assetsCorrelationMatrix"`
}

// PostAssetsCorrelationMatrixValidation200ApplicationJSONMessageEnum - Indicates whether the matrix is a valid correlation matrix
type PostAssetsCorrelationMatrixValidation200ApplicationJSONMessageEnum string

const (
	PostAssetsCorrelationMatrixValidation200ApplicationJSONMessageEnumValidCorrelationMatrix                                PostAssetsCorrelationMatrixValidation200ApplicationJSONMessageEnum = "valid correlation matrix"
	PostAssetsCorrelationMatrixValidation200ApplicationJSONMessageEnumInvalidCorrelationMatrixNonSymmetricMatrix            PostAssetsCorrelationMatrixValidation200ApplicationJSONMessageEnum = "invalid correlation matrix - non symmetric matrix"
	PostAssetsCorrelationMatrixValidation200ApplicationJSONMessageEnumInvalidCorrelationMatrixNonPositiveDiagonalElements   PostAssetsCorrelationMatrixValidation200ApplicationJSONMessageEnum = "invalid correlation matrix - non positive diagonal elements"
	PostAssetsCorrelationMatrixValidation200ApplicationJSONMessageEnumInvalidCorrelationMatrixNonPositiveSemiDefiniteMatrix PostAssetsCorrelationMatrixValidation200ApplicationJSONMessageEnum = "invalid correlation matrix - non positive semi-definite matrix"
)

func (e PostAssetsCorrelationMatrixValidation200ApplicationJSONMessageEnum) ToPointer() *PostAssetsCorrelationMatrixValidation200ApplicationJSONMessageEnum {
	return &e
}

func (e *PostAssetsCorrelationMatrixValidation200ApplicationJSONMessageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "valid correlation matrix":
		fallthrough
	case "invalid correlation matrix - non symmetric matrix":
		fallthrough
	case "invalid correlation matrix - non positive diagonal elements":
		fallthrough
	case "invalid correlation matrix - non positive semi-definite matrix":
		*e = PostAssetsCorrelationMatrixValidation200ApplicationJSONMessageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostAssetsCorrelationMatrixValidation200ApplicationJSONMessageEnum: %v", v)
	}
}

// PostAssetsCorrelationMatrixValidation200ApplicationJSON - OK
type PostAssetsCorrelationMatrixValidation200ApplicationJSON struct {
	// Indicates whether the matrix is a valid correlation matrix
	Message PostAssetsCorrelationMatrixValidation200ApplicationJSONMessageEnum `json:"message"`
}

type PostAssetsCorrelationMatrixValidationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	PostAssetsCorrelationMatrixValidation200ApplicationJSONObject *PostAssetsCorrelationMatrixValidation200ApplicationJSON
}
