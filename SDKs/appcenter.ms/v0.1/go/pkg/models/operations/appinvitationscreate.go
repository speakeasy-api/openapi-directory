// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type AppInvitationsCreateSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

// AppInvitationsCreateRequestBodyRoleEnum - The user's role
type AppInvitationsCreateRequestBodyRoleEnum string

const (
	AppInvitationsCreateRequestBodyRoleEnumAdmin        AppInvitationsCreateRequestBodyRoleEnum = "admin"
	AppInvitationsCreateRequestBodyRoleEnumCollaborator AppInvitationsCreateRequestBodyRoleEnum = "collaborator"
	AppInvitationsCreateRequestBodyRoleEnumMember       AppInvitationsCreateRequestBodyRoleEnum = "member"
)

func (e AppInvitationsCreateRequestBodyRoleEnum) ToPointer() *AppInvitationsCreateRequestBodyRoleEnum {
	return &e
}

func (e *AppInvitationsCreateRequestBodyRoleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "admin":
		fallthrough
	case "collaborator":
		fallthrough
	case "member":
		*e = AppInvitationsCreateRequestBodyRoleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AppInvitationsCreateRequestBodyRoleEnum: %v", v)
	}
}

// AppInvitationsCreateRequestBody - The email of the user to invite
type AppInvitationsCreateRequestBody struct {
	// The user's role
	Role *AppInvitationsCreateRequestBodyRoleEnum `json:"role,omitempty"`
	// The user's email address
	UserEmail string `json:"user_email"`
}

type AppInvitationsCreateRequest struct {
	// The email of the user to invite
	RequestBody *AppInvitationsCreateRequestBody `request:"mediaType=application/json"`
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
}

type AppInvitationsCreateDefaultApplicationJSONErrorCodeEnum string

const (
	AppInvitationsCreateDefaultApplicationJSONErrorCodeEnumBadRequest          AppInvitationsCreateDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	AppInvitationsCreateDefaultApplicationJSONErrorCodeEnumConflict            AppInvitationsCreateDefaultApplicationJSONErrorCodeEnum = "Conflict"
	AppInvitationsCreateDefaultApplicationJSONErrorCodeEnumNotAcceptable       AppInvitationsCreateDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	AppInvitationsCreateDefaultApplicationJSONErrorCodeEnumNotFound            AppInvitationsCreateDefaultApplicationJSONErrorCodeEnum = "NotFound"
	AppInvitationsCreateDefaultApplicationJSONErrorCodeEnumInternalServerError AppInvitationsCreateDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	AppInvitationsCreateDefaultApplicationJSONErrorCodeEnumUnauthorized        AppInvitationsCreateDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	AppInvitationsCreateDefaultApplicationJSONErrorCodeEnumTooManyRequests     AppInvitationsCreateDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e AppInvitationsCreateDefaultApplicationJSONErrorCodeEnum) ToPointer() *AppInvitationsCreateDefaultApplicationJSONErrorCodeEnum {
	return &e
}

func (e *AppInvitationsCreateDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = AppInvitationsCreateDefaultApplicationJSONErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AppInvitationsCreateDefaultApplicationJSONErrorCodeEnum: %v", v)
	}
}

type AppInvitationsCreateDefaultApplicationJSONError struct {
	Code    AppInvitationsCreateDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                  `json:"message"`
}

// AppInvitationsCreateDefaultApplicationJSON - Error
type AppInvitationsCreateDefaultApplicationJSON struct {
	Error AppInvitationsCreateDefaultApplicationJSONError `json:"error"`
}

type AppInvitationsCreateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	AppInvitationsCreateDefaultApplicationJSONObject *AppInvitationsCreateDefaultApplicationJSON
}
