"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import brandedfoodobject as shared_brandedfoodobject
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetFoodBrandedNamePhpSecurity:
    
    api_key_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'query', 'field_name': 'api_key' }})  
    
class GetFoodBrandedNamePhpLimitEnum(str, Enum):
    r"""#### Set maximum number of records you want the API to return. The default value is \\"**10**.\\" 
    
    **Example**
    > ```&limit=10```
    """
    ONE = '1'
    TWO = '2'
    THREE = '3'
    FOUR = '4'
    FIVE = '5'
    SIX = '6'
    SEVEN = '7'
    EIGHT = '8'
    NINE = '9'
    TEN = '10'


@dataclasses.dataclass
class GetFoodBrandedNamePhpRequest:
    
    name: str = dataclasses.field(metadata={'query_param': { 'field_name': 'name', 'style': 'form', 'explode': True }})
    r"""#### Search for branded food items using a general food name keyword. This does not have to exactly match the \\"official\\" name for the food.
    
    **Example**
    > ```&name=Starburst```
    """  
    limit: Optional[GetFoodBrandedNamePhpLimitEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""#### Set maximum number of records you want the API to return. The default value is \\"**10**.\\" 
    
    **Example**
    > ```&limit=10```
    """  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""#### This is how you paginate the search result. By default, you will see the first 10 records. You must increment the page number to access the next 10 records, and so on. The default value is \\"**1**.\\" 
    
    **Example**
    > ```&page=1```
    """  
    

@dataclasses.dataclass
class GetFoodBrandedNamePhpResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    branded_food_object: Optional[shared_brandedfoodobject.BrandedFoodObject] = dataclasses.field(default=None)
    r"""**Valid** - Will return an object containing any matching foods."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    