"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import discoverytype_enum as shared_discoverytype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ApplicationInfo:
    r"""Describes the status of the application."""
    
    auto_config_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AutoConfigEnabled'), 'exclude': lambda f: f is None }})  
    cwe_monitor_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CWEMonitorEnabled'), 'exclude': lambda f: f is None }})  
    discovery_type: Optional[shared_discoverytype_enum.DiscoveryTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DiscoveryType'), 'exclude': lambda f: f is None }})  
    life_cycle: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LifeCycle'), 'exclude': lambda f: f is None }})  
    ops_center_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OpsCenterEnabled'), 'exclude': lambda f: f is None }})  
    ops_item_sns_topic_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OpsItemSNSTopicArn'), 'exclude': lambda f: f is None }})  
    remarks: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Remarks'), 'exclude': lambda f: f is None }})  
    resource_group_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceGroupName'), 'exclude': lambda f: f is None }})  
    