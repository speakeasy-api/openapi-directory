/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DateTimeFieldType } from "./datetimefieldtype";
import { DurationField } from "./durationfield";
import { Expose, Type } from "class-transformer";

export class DateTimeField extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "durationField" })
  @Type(() => DurationField)
  durationField?: DurationField;

  @SpeakeasyMetadata()
  @Expose({ name: "leapDurationField" })
  @Type(() => DurationField)
  leapDurationField?: DurationField;

  @SpeakeasyMetadata()
  @Expose({ name: "lenient" })
  lenient?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "maximumValue" })
  maximumValue?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "minimumValue" })
  minimumValue?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "rangeDurationField" })
  @Type(() => DurationField)
  rangeDurationField?: DurationField;

  @SpeakeasyMetadata()
  @Expose({ name: "supported" })
  supported?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  @Type(() => DateTimeFieldType)
  type?: DateTimeFieldType;
}
