/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * UsageRecord - &lt;p&gt;A &lt;code&gt;UsageRecord&lt;/code&gt; indicates a quantity of usage for a given product, customer, dimension and time.&lt;/p&gt; &lt;p&gt;Multiple requests with the same &lt;code&gt;UsageRecords&lt;/code&gt; as input will be de-duplicated to prevent double charges.&lt;/p&gt;
 */
public class UsageRecord {
    @JsonProperty("CustomerIdentifier")
    public String customerIdentifier;

    public UsageRecord withCustomerIdentifier(String customerIdentifier) {
        this.customerIdentifier = customerIdentifier;
        return this;
    }
    
    @JsonProperty("Dimension")
    public String dimension;

    public UsageRecord withDimension(String dimension) {
        this.dimension = dimension;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Quantity")
    public Long quantity;

    public UsageRecord withQuantity(Long quantity) {
        this.quantity = quantity;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("Timestamp")
    public OffsetDateTime timestamp;

    public UsageRecord withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UsageAllocations")
    public UsageAllocation[] usageAllocations;

    public UsageRecord withUsageAllocations(UsageAllocation[] usageAllocations) {
        this.usageAllocations = usageAllocations;
        return this;
    }
    
    public UsageRecord(@JsonProperty("CustomerIdentifier") String customerIdentifier, @JsonProperty("Dimension") String dimension, @JsonProperty("Timestamp") OffsetDateTime timestamp) {
        this.customerIdentifier = customerIdentifier;
        this.dimension = dimension;
        this.timestamp = timestamp;
  }
}
