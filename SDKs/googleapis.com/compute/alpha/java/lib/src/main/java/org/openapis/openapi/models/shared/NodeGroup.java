/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NodeGroup - Represents a sole-tenant Node Group resource. A sole-tenant node is a physical server that is dedicated to hosting VM instances only for your specific project. Use sole-tenant nodes to keep your instances physically separated from instances in other projects, or to group your instances together on the same host hardware. For more information, read Sole-tenant nodes.
 */
public class NodeGroup {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoscalingPolicy")
    public NodeGroupAutoscalingPolicy autoscalingPolicy;

    public NodeGroup withAutoscalingPolicy(NodeGroupAutoscalingPolicy autoscalingPolicy) {
        this.autoscalingPolicy = autoscalingPolicy;
        return this;
    }
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;

    public NodeGroup withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public NodeGroup withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fingerprint")
    public String fingerprint;

    public NodeGroup withFingerprint(String fingerprint) {
        this.fingerprint = fingerprint;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public NodeGroup withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * [Output Only] The type of the resource. Always compute#nodeGroup for node group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public NodeGroup withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * An opaque location hint used to place the Node close to other resources. This field is for use by internal tools that use the public API. The location hint here on the NodeGroup overrides any location_hint present in the NodeTemplate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("locationHint")
    public String locationHint;

    public NodeGroup withLocationHint(String locationHint) {
        this.locationHint = locationHint;
        return this;
    }
    
    /**
     * Specifies the frequency of planned maintenance events. The accepted values are: `AS_NEEDED` and `RECURRENT`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maintenanceInterval")
    public NodeGroupMaintenanceIntervalEnum maintenanceInterval;

    public NodeGroup withMaintenanceInterval(NodeGroupMaintenanceIntervalEnum maintenanceInterval) {
        this.maintenanceInterval = maintenanceInterval;
        return this;
    }
    
    /**
     * Specifies how to handle instances when a node in the group undergoes maintenance. Set to one of: DEFAULT, RESTART_IN_PLACE, or MIGRATE_WITHIN_NODE_GROUP. The default value is DEFAULT. For more information, see Maintenance policies.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maintenancePolicy")
    public NodeGroupMaintenancePolicyEnum maintenancePolicy;

    public NodeGroup withMaintenancePolicy(NodeGroupMaintenancePolicyEnum maintenancePolicy) {
        this.maintenancePolicy = maintenancePolicy;
        return this;
    }
    
    /**
     * Time window specified for daily maintenance operations. GCE's internal maintenance will be performed within this window.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maintenanceWindow")
    public NodeGroupMaintenanceWindow maintenanceWindow;

    public NodeGroup withMaintenanceWindow(NodeGroupMaintenanceWindow maintenanceWindow) {
        this.maintenanceWindow = maintenanceWindow;
        return this;
    }
    
    /**
     * The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public NodeGroup withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * URL of the node template to create the node group from.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodeTemplate")
    public String nodeTemplate;

    public NodeGroup withNodeTemplate(String nodeTemplate) {
        this.nodeTemplate = nodeTemplate;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;

    public NodeGroup withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for this resource with the resource id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLinkWithId")
    public String selfLinkWithId;

    public NodeGroup withSelfLinkWithId(String selfLinkWithId) {
        this.selfLinkWithId = selfLinkWithId;
        return this;
    }
    
    /**
     * The share setting for reservations and sole tenancy node groups.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shareSettings")
    public ShareSettings shareSettings;

    public NodeGroup withShareSettings(ShareSettings shareSettings) {
        this.shareSettings = shareSettings;
        return this;
    }
    
    /**
     * [Output Only] The total number of nodes in the node group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Integer size;

    public NodeGroup withSize(Integer size) {
        this.size = size;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public NodeGroupStatusEnum status;

    public NodeGroup withStatus(NodeGroupStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * [Output Only] The name of the zone where the node group resides, such as us-central1-a.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zone")
    public String zone;

    public NodeGroup withZone(String zone) {
        this.zone = zone;
        return this;
    }
    
    public NodeGroup(){}
}
