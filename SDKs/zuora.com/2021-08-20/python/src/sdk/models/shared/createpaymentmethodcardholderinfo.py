"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreatePaymentMethodCardholderInfo:
    r"""Container for cardholder information. If provided, Zuora will
    only use this information for this card. Otherwise, Zuora will use
    the account''s existing bill-to contact information for this card.
    """
    
    card_holder_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cardHolderName') }})
    r"""The card holder's full name as it appears on the card, e.g., \\"John J Smith\\", 50 characters or less."""  
    address_line1: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addressLine1'), 'exclude': lambda f: f is None }})
    r"""First address line, 255 characters or less."""  
    address_line2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addressLine2'), 'exclude': lambda f: f is None }})
    r"""Second address line, 255 characters or less."""  
    city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('city'), 'exclude': lambda f: f is None }})
    r"""City, 40 characters or less."""  
    country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country'), 'exclude': lambda f: f is None }})
    r"""Country, must be a valid country name or abbreviation."""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""Card holder's email address, 80 characters or less."""  
    phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone'), 'exclude': lambda f: f is None }})
    r"""Phone number, 40 characters or less."""  
    state: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""State; must be a valid state name or 2-character abbreviation."""  
    zip_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zipCode'), 'exclude': lambda f: f is None }})
    r"""Zip code, 20 characters or less."""  
    