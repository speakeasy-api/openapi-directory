/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ProxyGetAccount - Container for custom fields of an Account object.
 * 
 */
public class ProxyGetAccount {
    /**
     * Unique account number assigned to the account. **Character limit**: 50 **Values**: one of the following:
     * 
     * - null to auto-generate
     * - a string of 50 characters or fewer that doesn't begin with the default account number prefix
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccountNumber")
    public String accountNumber;
    public ProxyGetAccount withAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }
    
    /**
     * List of additional email addresses to receive emailed invoices. **Character limit**: 120 **Values**: comma-separated list of email addresses 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdditionalEmailAddresses")
    public String additionalEmailAddresses;
    public ProxyGetAccount withAdditionalEmailAddresses(String additionalEmailAddresses) {
        this.additionalEmailAddresses = additionalEmailAddresses;
        return this;
    }
    
    /**
     *  Indicates if associated invoices can be edited.
     * **Character limit**: 5 **Values**: `true`, `false` (default if left null) 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AllowInvoiceEdit")
    public Boolean allowInvoiceEdit;
    public ProxyGetAccount withAllowInvoiceEdit(Boolean allowInvoiceEdit) {
        this.allowInvoiceEdit = allowInvoiceEdit;
        return this;
    }
    
    /**
     *  Indicates if future payments are automatically collected when they're due during a Payment Run.
     * **Character limit**: 5 **Values**: `true`, `false` (default) 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AutoPay")
    public Boolean autoPay;
    public ProxyGetAccount withAutoPay(Boolean autoPay) {
        this.autoPay = autoPay;
        return this;
    }
    
    /**
     * Current outstanding balance for the account. **Character limit**: 16 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Balance")
    public Double balance;
    public ProxyGetAccount withBalance(Double balance) {
        this.balance = balance;
        return this;
    }
    
    /**
     *  Organizes your customer accounts into groups to optimize your billing and payment operations. Required if you use the Subscribe call
     * **Character limit**: 20 **Values**:any system-defined batch (`Batch1` - `Batch50 `or by name). 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Batch")
    public String batch;
    public ProxyGetAccount withBatch(String batch) {
        this.batch = batch;
        return this;
    }
    
    /**
     * Billing cycle day setting option. **Character limit**: 9 **Values**: `AutoSet`, `ManualSet` 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BcdSettingOption")
    public String bcdSettingOption;
    public ProxyGetAccount withBcdSettingOption(String bcdSettingOption) {
        this.bcdSettingOption = bcdSettingOption;
        return this;
    }
    
    /**
     * Billing cycle day (BCD) on which bill runs generate invoices for the account. **Character limit**: 2 **Values**: any activated system-defined bill cycle day (`1` - `31`) 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BillCycleDay")
    public Integer billCycleDay;
    public ProxyGetAccount withBillCycleDay(Integer billCycleDay) {
        this.billCycleDay = billCycleDay;
        return this;
    }
    
    /**
     * ID of the person to bill for the account. **Character limit**: 32 **Values**: a valid contact ID for the account 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BillToId")
    public String billToId;
    public ProxyGetAccount withBillToId(String billToId) {
        this.billToId = billToId;
        return this;
    }
    
    /**
     * Value of the Class field for the corresponding customer account in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Class__NS")
    public String classNS;
    public ProxyGetAccount withClassNS(String classNS) {
        this.classNS = classNS;
        return this;
    }
    
    /**
     * Associates the account with a specified communication profile. **Character limit**: 32 **Values**: a valid communication profile ID 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CommunicationProfileId")
    public String communicationProfileId;
    public ProxyGetAccount withCommunicationProfileId(String communicationProfileId) {
        this.communicationProfileId = communicationProfileId;
        return this;
    }
    
    /**
     * ID of the Zuora user who created the Account object. **Character limit**: 32 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreatedById")
    public String createdById;
    public ProxyGetAccount withCreatedById(String createdById) {
        this.createdById = createdById;
        return this;
    }
    
    /**
     * Date when the Account object was created. **Character limit**: 29 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedDate")
    public OffsetDateTime createdDate;
    public ProxyGetAccount withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * Total credit balance for the account. **Character limit**: 16 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreditBalance")
    public Double creditBalance;
    public ProxyGetAccount withCreditBalance(Double creditBalance) {
        this.creditBalance = creditBalance;
        return this;
    }
    
    /**
     * CRM account ID for the account. A CRM is a customer relationship management system, such as Salesforce.com. **Character limit**: 100 **Values**: a string of 100 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CrmId")
    public String crmId;
    public ProxyGetAccount withCrmId(String crmId) {
        this.crmId = crmId;
        return this;
    }
    
    /**
     *  Currency that the customer is billed in. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Currency")
    public String currency;
    public ProxyGetAccount withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * Name of the account's customer service representative, if applicable. **Character limit**: 50 **Values**: a string of 50 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomerServiceRepName")
    public String customerServiceRepName;
    public ProxyGetAccount withCustomerServiceRepName(String customerServiceRepName) {
        this.customerServiceRepName = customerServiceRepName;
        return this;
    }
    
    /**
     * Value of the Customer Type field for the corresponding customer account in NetSuite. The Customer Type field is used when the customer account is created in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomerType__NS")
    public ProxyGetAccountCustomerTypeNSEnum customerTypeNS;
    public ProxyGetAccount withCustomerTypeNS(ProxyGetAccountCustomerTypeNSEnum customerTypeNS) {
        this.customerTypeNS = customerTypeNS;
        return this;
    }
    
    /**
     * ID of the default payment method for the account. This field is required if the AutoPay field is set to `true`. **Character limit**: 32 **Values**: a valid ID for an existing payment method 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefaultPaymentMethodId")
    public String defaultPaymentMethodId;
    public ProxyGetAccount withDefaultPaymentMethodId(String defaultPaymentMethodId) {
        this.defaultPaymentMethodId = defaultPaymentMethodId;
        return this;
    }
    
    /**
     * Value of the Department field for the corresponding customer account in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Department__NS")
    public String departmentNS;
    public ProxyGetAccount withDepartmentNS(String departmentNS) {
        this.departmentNS = departmentNS;
        return this;
    }
    
    /**
     * Object identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;
    public ProxyGetAccount withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationId__NS")
    public String integrationIdNS;
    public ProxyGetAccount withIntegrationIdNS(String integrationIdNS) {
        this.integrationIdNS = integrationIdNS;
        return this;
    }
    
    /**
     * Status of the account's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationStatus__NS")
    public String integrationStatusNS;
    public ProxyGetAccount withIntegrationStatusNS(String integrationStatusNS) {
        this.integrationStatusNS = integrationStatusNS;
        return this;
    }
    
    /**
     * Indicates if the customer wants to receive invoices through email.  **Character limit**: 5 **Values**: `true`, `false` (default if left null) 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceDeliveryPrefsEmail")
    public Boolean invoiceDeliveryPrefsEmail;
    public ProxyGetAccount withInvoiceDeliveryPrefsEmail(Boolean invoiceDeliveryPrefsEmail) {
        this.invoiceDeliveryPrefsEmail = invoiceDeliveryPrefsEmail;
        return this;
    }
    
    /**
     * Indicates if the customer wants to receive printed invoices, such as through postal mail. **Character limit**: 5 **Values**: `true`, `false` (default if left null) 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceDeliveryPrefsPrint")
    public Boolean invoiceDeliveryPrefsPrint;
    public ProxyGetAccount withInvoiceDeliveryPrefsPrint(Boolean invoiceDeliveryPrefsPrint) {
        this.invoiceDeliveryPrefsPrint = invoiceDeliveryPrefsPrint;
        return this;
    }
    
    /**
     * The ID of the invoice template. Each customer account can use a specific invoice template for invoice generation. **Character limit**: 32 **Values**: a valid template ID configured in Zuora Billing Settings 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InvoiceTemplateId")
    public String invoiceTemplateId;
    public ProxyGetAccount withInvoiceTemplateId(String invoiceTemplateId) {
        this.invoiceTemplateId = invoiceTemplateId;
        return this;
    }
    
    /**
     *  The date when the previous invoice was generated for the account. The field value is null if no invoice has ever been generated for the account.
     * **Character limit**: 29 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("LastInvoiceDate")
    public LocalDate lastInvoiceDate;
    public ProxyGetAccount withLastInvoiceDate(LocalDate lastInvoiceDate) {
        this.lastInvoiceDate = lastInvoiceDate;
        return this;
    }
    
    /**
     * Value of the Location field for the corresponding customer account in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Location__NS")
    public String locationNS;
    public ProxyGetAccount withLocationNS(String locationNS) {
        this.locationNS = locationNS;
        return this;
    }
    
    /**
     * Name of the account as displayed in the Zuora UI. **Character limit**: 255 **Values**: a string of 255 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public ProxyGetAccount withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     *  Comments about the account. **Character limit**: 65,535 **Values**: a string of 65,535 characters 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Notes")
    public String notes;
    public ProxyGetAccount withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * Identifier of the parent customer account for this Account object. Use this field if you have customer hierarchy enabled. **Character limit**: 32 **Values**: a valid account ID 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ParentId")
    public String parentId;
    public ProxyGetAccount withParentId(String parentId) {
        this.parentId = parentId;
        return this;
    }
    
    /**
     * Gateway used for processing electronic payments and refunds. **Character limit**: 40 **Values**: one of the following:
     * 
     * - a valid configured gateway name
     * - Null to inherit the default value set in Payment Settings
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PaymentGateway")
    public String paymentGateway;
    public ProxyGetAccount withPaymentGateway(String paymentGateway) {
        this.paymentGateway = paymentGateway;
        return this;
    }
    
    /**
     * Indicates when the customer pays for subscriptions. **Character limit**: 100 **Values**: a valid, active payment term defined in the web-based UI administrative settings 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PaymentTerm")
    public String paymentTerm;
    public ProxyGetAccount withPaymentTerm(String paymentTerm) {
        this.paymentTerm = paymentTerm;
        return this;
    }
    
    /**
     * The number of the purchase order associated with this account. Purchase order information generally comes from customers. **Character limit**: 100 **Values**: a string of 100 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PurchaseOrderNumber")
    public String purchaseOrderNumber;
    public ProxyGetAccount withPurchaseOrderNumber(String purchaseOrderNumber) {
        this.purchaseOrderNumber = purchaseOrderNumber;
        return this;
    }
    
    /**
     * The name of the sales representative associated with this account, if applicable. **Character limit**: 50 **Values**: a string of 50 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SalesRepName")
    public String salesRepName;
    public ProxyGetAccount withSalesRepName(String salesRepName) {
        this.salesRepName = salesRepName;
        return this;
    }
    
    /**
     * ID of the person who bought the subscription associated with the account. **Character limit**: 32 **Values**: a valid contact ID for the account 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SoldToId")
    public String soldToId;
    public ProxyGetAccount withSoldToId(String soldToId) {
        this.soldToId = soldToId;
        return this;
    }
    
    /**
     * Status of the account in the system.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public ProxyGetAccountStatusEnum status;
    public ProxyGetAccount withStatus(ProxyGetAccountStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Value of the Subsidiary field for the corresponding customer account in NetSuite. The Subsidiary field is required if you use NetSuite OneWorld. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Subsidiary__NS")
    public String subsidiaryNS;
    public ProxyGetAccount withSubsidiaryNS(String subsidiaryNS) {
        this.subsidiaryNS = subsidiaryNS;
        return this;
    }
    
    /**
     * Date when the account was sychronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SyncDate__NS")
    public String syncDateNS;
    public ProxyGetAccount withSyncDateNS(String syncDateNS) {
        this.syncDateNS = syncDateNS;
        return this;
    }
    
    /**
     * Specifies whether the account should be synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SynctoNetSuite__NS")
    public ProxyGetAccountSynctoNetSuiteNSEnum synctoNetSuiteNS;
    public ProxyGetAccount withSynctoNetSuiteNS(ProxyGetAccountSynctoNetSuiteNSEnum synctoNetSuiteNS) {
        this.synctoNetSuiteNS = synctoNetSuiteNS;
        return this;
    }
    
    /**
     *  Unique code that identifies a company account in Avalara. Use this field to calculate taxes based on origin and sold-to addresses in Avalara.
     * This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
     * 
     * **Character limit**: 50 **Values**: a valid company code 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxCompanyCode")
    public String taxCompanyCode;
    public ProxyGetAccount withTaxCompanyCode(String taxCompanyCode) {
        this.taxCompanyCode = taxCompanyCode;
        return this;
    }
    
    /**
     * ID of your customer's tax exemption certificate. **Character limit**: 32 **Values**: a string of 32 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxExemptCertificateID")
    public String taxExemptCertificateID;
    public ProxyGetAccount withTaxExemptCertificateID(String taxExemptCertificateID) {
        this.taxExemptCertificateID = taxExemptCertificateID;
        return this;
    }
    
    /**
     * Type of the tax exemption certificate that your customer holds.  **Character limit**: 32 **Values**: a string of 32 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxExemptCertificateType")
    public String taxExemptCertificateType;
    public ProxyGetAccount withTaxExemptCertificateType(String taxExemptCertificateType) {
        this.taxExemptCertificateType = taxExemptCertificateType;
        return this;
    }
    
    /**
     * Description of the tax exemption certificate that your customer holds. **Character limit**: 500 **Values**: a string of 500 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxExemptDescription")
    public String taxExemptDescription;
    public ProxyGetAccount withTaxExemptDescription(String taxExemptDescription) {
        this.taxExemptDescription = taxExemptDescription;
        return this;
    }
    
    /**
     * Date when the the customer's tax exemption starts. **Character limit**: 29 **Version notes**: requires Zuora Tax 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("TaxExemptEffectiveDate")
    public LocalDate taxExemptEffectiveDate;
    public ProxyGetAccount withTaxExemptEffectiveDate(LocalDate taxExemptEffectiveDate) {
        this.taxExemptEffectiveDate = taxExemptEffectiveDate;
        return this;
    }
    
    /**
     * Date when the customer's tax exemption certificate expires  **Character limit**: 29 **Version notes**: requires Zuora Tax 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("TaxExemptExpirationDate")
    public LocalDate taxExemptExpirationDate;
    public ProxyGetAccount withTaxExemptExpirationDate(LocalDate taxExemptExpirationDate) {
        this.taxExemptExpirationDate = taxExemptExpirationDate;
        return this;
    }
    
    /**
     * Indicates the jurisdiction in which the customer's tax exemption certificate was issued. **Character limit**: 32 **Values**: a string of 32 characters or fewer 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxExemptIssuingJurisdiction")
    public String taxExemptIssuingJurisdiction;
    public ProxyGetAccount withTaxExemptIssuingJurisdiction(String taxExemptIssuingJurisdiction) {
        this.taxExemptIssuingJurisdiction = taxExemptIssuingJurisdiction;
        return this;
    }
    
    /**
     *  Status of the account's tax exemption. Required if you use Zuora Tax.
     * **Character limit**: 19 **Values**: one of the following:
     * 
     * - `Yes`
     * - `No`
     * - `PendingVerification`
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaxExemptStatus")
    public String taxExemptStatus;
    public ProxyGetAccount withTaxExemptStatus(String taxExemptStatus) {
        this.taxExemptStatus = taxExemptStatus;
        return this;
    }
    
    /**
     * Total balance of the account's invoices. **Character limit**: 16 **Values**: a valid currency value 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalInvoiceBalance")
    public Double totalInvoiceBalance;
    public ProxyGetAccount withTotalInvoiceBalance(Double totalInvoiceBalance) {
        this.totalInvoiceBalance = totalInvoiceBalance;
        return this;
    }
    
    /**
     * ID of the user who last updated the account. **Character limit**: 32 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UpdatedById")
    public String updatedById;
    public ProxyGetAccount withUpdatedById(String updatedById) {
        this.updatedById = updatedById;
        return this;
    }
    
    /**
     * Date when the account was last updated. **Character limit**: 29 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("UpdatedDate")
    public OffsetDateTime updatedDate;
    public ProxyGetAccount withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
    /**
     *  EU Value Added Tax ID.
     * This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
     * 
     * **Character limit**: 25 **Values**: a valid Value Added Tax ID 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VATId")
    public String vatId;
    public ProxyGetAccount withVATId(String vatId) {
        this.vatId = vatId;
        return this;
    }
    
}
