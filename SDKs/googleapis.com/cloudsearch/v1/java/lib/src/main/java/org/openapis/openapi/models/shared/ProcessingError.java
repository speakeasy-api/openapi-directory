/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ProcessingError {
    /**
     * Error code indicating the nature of the error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    public ProcessingErrorCodeEnum code;
    public ProcessingError withCode(ProcessingErrorCodeEnum code) {
        this.code = code;
        return this;
    }
    
    /**
     * The description of the error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorMessage")
    public String errorMessage;
    public ProcessingError withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }
    
    /**
     * In case the item fields are invalid, this field contains the details about the validation errors.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fieldViolations")
    public FieldViolation[] fieldViolations;
    public ProcessingError withFieldViolations(FieldViolation[] fieldViolations) {
        this.fieldViolations = fieldViolations;
        return this;
    }
    
}
