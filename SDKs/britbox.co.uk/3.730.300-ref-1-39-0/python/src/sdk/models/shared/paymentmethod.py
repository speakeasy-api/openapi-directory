"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PaymentMethodBrandEnum(str, Enum):
    r"""The brand of the card if the payment method is a card."""
    VISA = 'Visa'
    MASTER_CARD = 'MasterCard'
    AMERICAN_EXPRESS = 'AmericanExpress'
    OTHER = 'Other'

class PaymentMethodTypeEnum(str, Enum):
    r"""The type of payment method."""
    CARD = 'Card'
    WALLET = 'Wallet'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaymentMethod:
    r"""The created payment method."""
    
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})
    r"""A short description of a payment method.
    
    If the payment method is of type `Wallet` this will be \"My Wallet\"
    
    For `Card` type payment methods the format of this description may differ
    depending on the payment gateway in use. In the case of Stripe, this will
    be in the format \"Visa (**** 4242, exp 08/19)\" 
    """  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The unique identifier of a payment method."""  
    type: PaymentMethodTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of payment method."""  
    balance: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balance'), 'exclude': lambda f: f is None }})
    r"""The balance of the wallet if the payment method is a wallet."""  
    brand: Optional[PaymentMethodBrandEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('brand'), 'exclude': lambda f: f is None }})
    r"""The brand of the card if the payment method is a card."""  
    currency: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency'), 'exclude': lambda f: f is None }})
    r"""The currency code of the wallet if the payment method is a wallet."""  
    expiry_month: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiryMonth'), 'exclude': lambda f: f is None }})
    r"""The expiry month of the card if the payment method is a card."""  
    expiry_year: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiryYear'), 'exclude': lambda f: f is None }})
    r"""The expiry year of the card if the payment method is a card."""  
    last_digits: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastDigits'), 'exclude': lambda f: f is None }})
    r"""The last digits of the card if the payment method is a card.
    Depending on the payment gateway in use this value may be undefined.
    """  
    