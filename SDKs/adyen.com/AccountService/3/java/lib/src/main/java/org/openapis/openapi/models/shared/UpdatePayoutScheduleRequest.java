/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdatePayoutScheduleRequest {
    /**
     * Direction on how to handle any payouts that have already been scheduled.
     * Permitted values:
     * * `CLOSE` will close the existing batch of payouts.
     * * `UPDATE` will reschedule the existing batch to the new schedule.
     * * `NOTHING` (**default**) will allow the payout to proceed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public UpdatePayoutScheduleRequestActionEnum action;
    public UpdatePayoutScheduleRequest withAction(UpdatePayoutScheduleRequestActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The reason for the payout schedule update.
     * &gt; This field is required when the `schedule` parameter is set to `HOLD`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason")
    public String reason;
    public UpdatePayoutScheduleRequest withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * The payout schedule to which the account is to be updated.
     * Permitted values: `DAILY`, `DAILY_US`, `DAILY_EU`, `DAILY_AU`, `DAILY_SG`, `WEEKLY`, `WEEKLY_ON_TUE_FRI_MIDNIGHT`, `BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT`, `MONTHLY`, `HOLD`.
     * `HOLD` will prevent scheduled payouts from happening but will still allow manual payouts to occur.
     */
    @JsonProperty("schedule")
    public UpdatePayoutScheduleRequestScheduleEnum schedule;
    public UpdatePayoutScheduleRequest withSchedule(UpdatePayoutScheduleRequestScheduleEnum schedule) {
        this.schedule = schedule;
        return this;
    }
    
}
