"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import readonly as shared_readonly
from ..shared import readwrite as shared_readwrite
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TransactionOptions:
    r"""Options for creating a new transaction."""
    
    read_only: Optional[shared_readonly.ReadOnly] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('readOnly'), 'exclude': lambda f: f is None }})
    r"""Options for a transaction that can only be used to read documents."""  
    read_write: Optional[shared_readwrite.ReadWrite] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('readWrite'), 'exclude': lambda f: f is None }})
    r"""Options for a transaction that can be used to read and write documents."""  
    