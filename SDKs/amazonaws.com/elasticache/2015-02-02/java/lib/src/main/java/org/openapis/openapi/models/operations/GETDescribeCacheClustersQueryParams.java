/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETDescribeCacheClustersQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETDescribeCacheClustersActionEnum action;
    public GETDescribeCacheClustersQueryParams withAction(GETDescribeCacheClustersActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The user-supplied cluster identifier. If this parameter is specified, only information about that specific cluster is returned. This parameter isn't case sensitive.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=CacheClusterId")
    public String cacheClusterId;
    public GETDescribeCacheClustersQueryParams withCacheClusterId(String cacheClusterId) {
        this.cacheClusterId = cacheClusterId;
        return this;
    }
    
    /**
     * An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by &lt;code&gt;MaxRecords&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Marker")
    public String marker;
    public GETDescribeCacheClustersQueryParams withMarker(String marker) {
        this.marker = marker;
        return this;
    }
    
    /**
     * &lt;p&gt;The maximum number of records to include in the response. If more records exist than the specified &lt;code&gt;MaxRecords&lt;/code&gt; value, a marker is included in the response so that the remaining results can be retrieved.&lt;/p&gt; &lt;p&gt;Default: 100&lt;/p&gt; &lt;p&gt;Constraints: minimum 20; maximum 100.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=MaxRecords")
    public Long maxRecords;
    public GETDescribeCacheClustersQueryParams withMaxRecords(Long maxRecords) {
        this.maxRecords = maxRecords;
        return this;
    }
    
    /**
     * An optional flag that can be included in the &lt;code&gt;DescribeCacheCluster&lt;/code&gt; request to show only nodes (API/CLI: clusters) that are not members of a replication group. In practice, this mean Memcached and single node Redis clusters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ShowCacheClustersNotInReplicationGroups")
    public Boolean showCacheClustersNotInReplicationGroups;
    public GETDescribeCacheClustersQueryParams withShowCacheClustersNotInReplicationGroups(Boolean showCacheClustersNotInReplicationGroups) {
        this.showCacheClustersNotInReplicationGroups = showCacheClustersNotInReplicationGroups;
        return this;
    }
    
    /**
     * An optional flag that can be included in the &lt;code&gt;DescribeCacheCluster&lt;/code&gt; request to retrieve information about the individual cache nodes.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ShowCacheNodeInfo")
    public Boolean showCacheNodeInfo;
    public GETDescribeCacheClustersQueryParams withShowCacheNodeInfo(Boolean showCacheNodeInfo) {
        this.showCacheNodeInfo = showCacheNodeInfo;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETDescribeCacheClustersVersionEnum version;
    public GETDescribeCacheClustersQueryParams withVersion(GETDescribeCacheClustersVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
