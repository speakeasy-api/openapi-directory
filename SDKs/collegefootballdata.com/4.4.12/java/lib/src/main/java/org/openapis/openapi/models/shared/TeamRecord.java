/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class TeamRecord {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("awayGames")
    public TeamRecordAwayGames awayGames;

    public TeamRecord withAwayGames(TeamRecordAwayGames awayGames) {
        this.awayGames = awayGames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conference")
    public String conference;

    public TeamRecord withConference(String conference) {
        this.conference = conference;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conferenceGames")
    public TeamRecordConferenceGames conferenceGames;

    public TeamRecord withConferenceGames(TeamRecordConferenceGames conferenceGames) {
        this.conferenceGames = conferenceGames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("division")
    public String division;

    public TeamRecord withDivision(String division) {
        this.division = division;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expectedWins")
    public Double expectedWins;

    public TeamRecord withExpectedWins(Double expectedWins) {
        this.expectedWins = expectedWins;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("homeGames")
    public TeamRecordHomeGames homeGames;

    public TeamRecord withHomeGames(TeamRecordHomeGames homeGames) {
        this.homeGames = homeGames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("team")
    public String team;

    public TeamRecord withTeam(String team) {
        this.team = team;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public TeamRecordTotal total;

    public TeamRecord withTotal(TeamRecordTotal total) {
        this.total = total;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("year")
    public Long year;

    public TeamRecord withYear(Long year) {
        this.year = year;
        return this;
    }
    
    public TeamRecord(){}
}
