/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;



/**
 * AccountSettings200ApplicationXMLAccountSettingsSecurityPasswordRequirement - This object refers to the [enhanced password rules](https://support.zoom.us/hc/en-us/articles/360034675592-Advanced-security-settings#h_bf8a25f6-9a66-447a-befd-f02ed3404f89) that allows Zoom account admins and owners to apply extra requiremets to the users' Zoom login password. 
 */
public class AccountSettings200ApplicationXMLAccountSettingsSecurityPasswordRequirement {
    /**
     * Specify the max length of consecutive characters(abcde...) that can be used in a password.
     * If you set the value of this field to `0`, no restriction will be applied on consecutive characters. 
     * 
     * If you would like to set this restriction, you can specify a number between 4 and 8 that define the maximum allowed length for consecutive characters in a password.
     * 
     * The max allowed length will be `n-1` where `n` refers to the value you provide for this field.  For instance, if you provide `4` as the value, there can only be a maximum of `3` consecutive characters in a password(example: abc1x@8fdh).
     */
    
    public Long consecutiveCharactersLength;
    public AccountSettings200ApplicationXMLAccountSettingsSecurityPasswordRequirement withConsecutiveCharactersLength(Long consecutiveCharactersLength) {
        this.consecutiveCharactersLength = consecutiveCharactersLength;
        return this;
    }
    
    /**
     * If the value of this field is set to `true`, the password must have at least one special character(!, @, #...).
     */
    
    public Boolean haveSpecialCharacter;
    public AccountSettings200ApplicationXMLAccountSettingsSecurityPasswordRequirement withHaveSpecialCharacter(Boolean haveSpecialCharacter) {
        this.haveSpecialCharacter = haveSpecialCharacter;
        return this;
    }
    
    /**
     * Specify a minimum length for the password. The password length can be from a minimum of 9 characters, up to 14 characters. If you provide `0` as the value of this field, this field will be disabled and not be used and the basic password length requirement (minimum of 8 characters) will be applied for the requirement.
     */
    
    public Long minimumPasswordLength;
    public AccountSettings200ApplicationXMLAccountSettingsSecurityPasswordRequirement withMinimumPasswordLength(Long minimumPasswordLength) {
        this.minimumPasswordLength = minimumPasswordLength;
        return this;
    }
    
    /**
     * If the value of this field is set to `true`, user passwords will have to pass detection through a weak password dictionary in case hackers use simple passwords to sign in to your users\u2019 accounts.
     */
    
    public Boolean weakEnhanceDetection;
    public AccountSettings200ApplicationXMLAccountSettingsSecurityPasswordRequirement withWeakEnhanceDetection(Boolean weakEnhanceDetection) {
        this.weakEnhanceDetection = weakEnhanceDetection;
        return this;
    }
    
}
