"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Volume:
    r"""Created. Your volume was successfully created in your space."""
    
    fs_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fsID'), 'exclude': lambda f: f is None }})
    r"""Unique identifier representing the file share on which the volume is hosted."""  
    host_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hostPath'), 'exclude': lambda f: f is None }})
    r"""Full path to the mounted volume inside the container."""  
    other_space_visibility: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('otherSpaceVisibility'), 'exclude': lambda f: f is None }})
    r"""List of space IDs in which the volume is visible and can be used by all the single containers and container groups."""  
    space_guid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spaceGuid'), 'exclude': lambda f: f is None }})
    r"""Unique identifier representing the space where the volume got created."""  
    vol_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('volName'), 'exclude': lambda f: f is None }})
    r"""The name of the volume."""  
    