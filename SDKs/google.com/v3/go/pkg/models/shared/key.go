// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// KeyDeviceTypeEnum - The user’s device type. If `deviceType` is not a value of the `aggregateBy` parameter in the request call, then the `deviceType` field is not returned in the `Key`.
type KeyDeviceTypeEnum string

const (
	KeyDeviceTypeEnumDeviceUnspecified KeyDeviceTypeEnum = "DEVICE_UNSPECIFIED"
	KeyDeviceTypeEnumDeviceUnknown     KeyDeviceTypeEnum = "DEVICE_UNKNOWN"
	KeyDeviceTypeEnumDesktop           KeyDeviceTypeEnum = "DESKTOP"
	KeyDeviceTypeEnumMobile            KeyDeviceTypeEnum = "MOBILE"
	KeyDeviceTypeEnumTablet            KeyDeviceTypeEnum = "TABLET"
)

func (e KeyDeviceTypeEnum) ToPointer() *KeyDeviceTypeEnum {
	return &e
}

func (e *KeyDeviceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DEVICE_UNSPECIFIED":
		fallthrough
	case "DEVICE_UNKNOWN":
		fallthrough
	case "DESKTOP":
		fallthrough
	case "MOBILE":
		fallthrough
	case "TABLET":
		*e = KeyDeviceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for KeyDeviceTypeEnum: %v", v)
	}
}

// Key - Key of a result.
type Key struct {
	// The number of days in advance the user wants to book the itinerary. If `advanceBookingWindow` is not a value of the `aggregateBy` parameter in the request call, then the `advanceBookingWindow` field is not returned in the `Key`.
	AdvanceBookingWindow *int `json:"advanceBookingWindow,omitempty"`
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	CheckinDate *Date `json:"checkinDate,omitempty"`
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	Date *Date `json:"date,omitempty"`
	// The user’s device type. If `deviceType` is not a value of the `aggregateBy` parameter in the request call, then the `deviceType` field is not returned in the `Key`.
	DeviceType *KeyDeviceTypeEnum `json:"deviceType,omitempty"`
	// CLDR region code of the country/region of the hotel. If `hotelRegionCode` is not a value of the `aggregateBy` parameter in the request call, then the `hotelRegionCode` field is not returned in the `Key`.
	HotelRegionCode *string `json:"hotelRegionCode,omitempty"`
	// The number of nights for the itinerary. If `lengthOfStayDays` is not a value of the `aggregateBy` parameter in the request call, then the `lengthOfStayDays` field is not returned in the `Key`.
	LengthOfStayDays *int `json:"lengthOfStayDays,omitempty"`
	// The total occupancy of the itinerary. If `occupancy` is not a value of the `aggregateBy` parameter in the request call, then the `occupancy` field is not returned in the `Key`.
	Occupancy *int `json:"occupancy,omitempty"`
	// Partner's hotel ID. If `partnerHotelId` is not a value of the `aggregateBy` parameter in the request call, then the `partnerHotelId` field is not returned in the `Key`.
	PartnerHotelID *string `json:"partnerHotelId,omitempty"`
	// ISO 3116 region code of the country/region of the user. If `userRegionCode` is not a value of the `aggregateBy` parameter in the request call, then the `userRegionCode` field is not returned in the `Key`.
	UserRegionCode *string `json:"userRegionCode,omitempty"`
}
