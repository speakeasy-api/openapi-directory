/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { WidgetMarkup } from "./widgetmarkup";
import { Expose, Type } from "class-transformer";

/**
 * A section contains a collection of widgets that are rendered (vertically) in the order that they are specified. Across all platforms, cards have a narrow fixed width, so there is currently no need for layout properties (e.g. float).
 */
export class Section extends SpeakeasyBase {
  /**
   * The header of the section, text formatted supported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "header" })
  header?: string;

  /**
   * A section must contain at least 1 widget.
   */
  @SpeakeasyMetadata({ elemType: WidgetMarkup })
  @Expose({ name: "widgets" })
  @Type(() => WidgetMarkup)
  widgets?: WidgetMarkup[];
}
