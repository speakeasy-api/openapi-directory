// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type ScimServiceProviderConfigAuthenticationSchemes struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
	SpecURI     *string `json:"specUri,omitempty"`
	Type        *string `json:"type,omitempty"`
}

type ScimServiceProviderConfigBulk struct {
	MaxOperations  *int64 `json:"maxOperations,omitempty"`
	MaxPayloadSize *int64 `json:"maxPayloadSize,omitempty"`
	Supported      *bool  `json:"supported,omitempty"`
}

type ScimServiceProviderConfigChangePassword struct {
	Supported *bool `json:"supported,omitempty"`
}

type ScimServiceProviderConfigEtag struct {
	Supported *bool `json:"supported,omitempty"`
}

type ScimServiceProviderConfigFilter struct {
	MaxResults *int64 `json:"maxResults,omitempty"`
	Supported  *bool  `json:"supported,omitempty"`
}

type ScimServiceProviderConfigPatch struct {
	Supported *bool `json:"supported,omitempty"`
}

type ScimServiceProviderConfigSort struct {
	Supported *bool `json:"supported,omitempty"`
}

type ScimServiceProviderConfig struct {
	AuthenticationSchemes *ScimServiceProviderConfigAuthenticationSchemes `json:"authenticationSchemes,omitempty"`
	Bulk                  *ScimServiceProviderConfigBulk                  `json:"bulk,omitempty"`
	ChangePassword        *ScimServiceProviderConfigChangePassword        `json:"changePassword,omitempty"`
	DocumentationURI      *string                                         `json:"documentationUri,omitempty"`
	Etag                  *ScimServiceProviderConfigEtag                  `json:"etag,omitempty"`
	Filter                *ScimServiceProviderConfigFilter                `json:"filter,omitempty"`
	Patch                 *ScimServiceProviderConfigPatch                 `json:"patch,omitempty"`
	Schemas               []string                                        `json:"schemas,omitempty"`
	Sort                  *ScimServiceProviderConfigSort                  `json:"sort,omitempty"`
}
