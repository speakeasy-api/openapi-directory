"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import billbee_interfaces_billbeeapi_model_articleapicustomfieldvaluemodel as shared_billbee_interfaces_billbeeapi_model_articleapicustomfieldvaluemodel
from ..shared import billbee_interfaces_billbeeapi_model_articlecategoryapimodel as shared_billbee_interfaces_billbeeapi_model_articlecategoryapimodel
from ..shared import billbee_interfaces_billbeeapi_model_articleimagerelationapimodel as shared_billbee_interfaces_billbeeapi_model_articleimagerelationapimodel
from ..shared import billbee_interfaces_billbeeapi_model_articlesourceapimodel as shared_billbee_interfaces_billbeeapi_model_articlesourceapimodel
from ..shared import billbee_interfaces_billbeeapi_model_bomsubarticleapimodel as shared_billbee_interfaces_billbeeapi_model_bomsubarticleapimodel
from ..shared import billbee_interfaces_billbeeapi_model_stockarticleapimodel as shared_billbee_interfaces_billbeeapi_model_stockarticleapimodel
from ..shared import billbee_interfaces_order_multilanguagestring as shared_billbee_interfaces_order_multilanguagestring
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BillbeeInterfacesBillbeeAPIModelArticleAPIModel:
    
    is_customizable: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsCustomizable') }})  
    is_digital: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsDigital') }})  
    price: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Price') }})  
    type: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type') }})  
    vat1_rate: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Vat1Rate') }})  
    vat2_rate: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Vat2Rate') }})  
    vat_index: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VatIndex') }})  
    basic_attributes: Optional[list[shared_billbee_interfaces_order_multilanguagestring.BillbeeInterfacesOrderMultiLanguageString]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BasicAttributes'), 'exclude': lambda f: f is None }})  
    bill_of_material: Optional[list[shared_billbee_interfaces_billbeeapi_model_bomsubarticleapimodel.BillbeeInterfacesBillbeeAPIModelBomSubArticleAPIModel]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BillOfMaterial'), 'exclude': lambda f: f is None }})  
    category1: Optional[shared_billbee_interfaces_billbeeapi_model_articlecategoryapimodel.BillbeeInterfacesBillbeeAPIModelArticleCategoryAPIModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Category1'), 'exclude': lambda f: f is None }})  
    category2: Optional[shared_billbee_interfaces_billbeeapi_model_articlecategoryapimodel.BillbeeInterfacesBillbeeAPIModelArticleCategoryAPIModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Category2'), 'exclude': lambda f: f is None }})  
    category3: Optional[shared_billbee_interfaces_billbeeapi_model_articlecategoryapimodel.BillbeeInterfacesBillbeeAPIModelArticleCategoryAPIModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Category3'), 'exclude': lambda f: f is None }})  
    condition: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Condition'), 'exclude': lambda f: f is None }})  
    cost_price: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CostPrice'), 'exclude': lambda f: f is None }})  
    country_of_origin: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CountryOfOrigin'), 'exclude': lambda f: f is None }})  
    custom_fields: Optional[list[shared_billbee_interfaces_billbeeapi_model_articleapicustomfieldvaluemodel.BillbeeInterfacesBillbeeAPIModelArticleAPICustomFieldValueModel]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CustomFields'), 'exclude': lambda f: f is None }})  
    delivery_time: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeliveryTime'), 'exclude': lambda f: f is None }})  
    description: Optional[list[shared_billbee_interfaces_order_multilanguagestring.BillbeeInterfacesOrderMultiLanguageString]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})  
    ean: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EAN'), 'exclude': lambda f: f is None }})  
    export_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExportDescription'), 'exclude': lambda f: f is None }})  
    export_description_multi_language: Optional[list[shared_billbee_interfaces_order_multilanguagestring.BillbeeInterfacesOrderMultiLanguageString]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExportDescriptionMultiLanguage'), 'exclude': lambda f: f is None }})  
    height_cm: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HeightCm'), 'exclude': lambda f: f is None }})  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})  
    images: Optional[list[shared_billbee_interfaces_billbeeapi_model_articleimagerelationapimodel.BillbeeInterfacesBillbeeAPIModelArticleImageRelationAPIModel]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Images'), 'exclude': lambda f: f is None }})  
    invoice_text: Optional[list[shared_billbee_interfaces_order_multilanguagestring.BillbeeInterfacesOrderMultiLanguageString]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InvoiceText'), 'exclude': lambda f: f is None }})  
    is_deactivated: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsDeactivated'), 'exclude': lambda f: f is None }})  
    length_cm: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LengthCm'), 'exclude': lambda f: f is None }})  
    low_stock: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LowStock'), 'exclude': lambda f: f is None }})  
    manufacturer: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Manufacturer'), 'exclude': lambda f: f is None }})  
    materials: Optional[list[shared_billbee_interfaces_order_multilanguagestring.BillbeeInterfacesOrderMultiLanguageString]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Materials'), 'exclude': lambda f: f is None }})  
    occasion: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Occasion'), 'exclude': lambda f: f is None }})  
    recipient: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Recipient'), 'exclude': lambda f: f is None }})  
    shipping_product_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShippingProductId'), 'exclude': lambda f: f is None }})  
    short_description: Optional[list[shared_billbee_interfaces_order_multilanguagestring.BillbeeInterfacesOrderMultiLanguageString]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShortDescription'), 'exclude': lambda f: f is None }})  
    sku: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SKU'), 'exclude': lambda f: f is None }})  
    sold_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SoldAmount'), 'exclude': lambda f: f is None }})  
    sold_amount_last30_days: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SoldAmountLast30Days'), 'exclude': lambda f: f is None }})  
    sold_sum_gross: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SoldSumGross'), 'exclude': lambda f: f is None }})  
    sold_sum_gross_last30_days: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SoldSumGrossLast30Days'), 'exclude': lambda f: f is None }})  
    sold_sum_net: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SoldSumNet'), 'exclude': lambda f: f is None }})  
    sold_sum_net_last30_days: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SoldSumNetLast30Days'), 'exclude': lambda f: f is None }})  
    sources: Optional[list[shared_billbee_interfaces_billbeeapi_model_articlesourceapimodel.BillbeeInterfacesBillbeeAPIModelArticleSourceAPIModel]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Sources'), 'exclude': lambda f: f is None }})  
    stock_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StockCode'), 'exclude': lambda f: f is None }})  
    stock_current: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StockCurrent'), 'exclude': lambda f: f is None }})  
    stock_desired: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StockDesired'), 'exclude': lambda f: f is None }})  
    stock_reduce_items_per_sale: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StockReduceItemsPerSale'), 'exclude': lambda f: f is None }})  
    stocks: Optional[list[shared_billbee_interfaces_billbeeapi_model_stockarticleapimodel.BillbeeInterfacesBillbeeAPIModelStockArticleAPIModel]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Stocks'), 'exclude': lambda f: f is None }})  
    stock_warning: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StockWarning'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_billbee_interfaces_order_multilanguagestring.BillbeeInterfacesOrderMultiLanguageString]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    taric_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TaricNumber'), 'exclude': lambda f: f is None }})  
    title: Optional[list[shared_billbee_interfaces_order_multilanguagestring.BillbeeInterfacesOrderMultiLanguageString]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Title'), 'exclude': lambda f: f is None }})  
    unit: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Unit'), 'exclude': lambda f: f is None }})  
    units_per_item: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UnitsPerItem'), 'exclude': lambda f: f is None }})  
    weight: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Weight'), 'exclude': lambda f: f is None }})  
    weight_net: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WeightNet'), 'exclude': lambda f: f is None }})  
    width_cm: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WidthCm'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BillbeeInterfacesBillbeeAPIModelArticleAPIModelInput:
    
    is_customizable: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsCustomizable') }, 'form': { 'field_name': 'IsCustomizable' }})  
    is_digital: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsDigital') }, 'form': { 'field_name': 'IsDigital' }})  
    price: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Price') }, 'form': { 'field_name': 'Price' }})  
    type: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type') }, 'form': { 'field_name': 'Type' }})  
    vat1_rate: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Vat1Rate') }, 'form': { 'field_name': 'Vat1Rate' }})  
    vat2_rate: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Vat2Rate') }, 'form': { 'field_name': 'Vat2Rate' }})  
    vat_index: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VatIndex') }, 'form': { 'field_name': 'VatIndex' }})  
    basic_attributes: Optional[list[shared_billbee_interfaces_order_multilanguagestring.BillbeeInterfacesOrderMultiLanguageString]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BasicAttributes'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'BasicAttributes', 'json': True }})  
    bill_of_material: Optional[list[shared_billbee_interfaces_billbeeapi_model_bomsubarticleapimodel.BillbeeInterfacesBillbeeAPIModelBomSubArticleAPIModel]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BillOfMaterial'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'BillOfMaterial', 'json': True }})  
    category1: Optional[shared_billbee_interfaces_billbeeapi_model_articlecategoryapimodel.BillbeeInterfacesBillbeeAPIModelArticleCategoryAPIModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Category1'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Category1', 'json': True }})  
    category2: Optional[shared_billbee_interfaces_billbeeapi_model_articlecategoryapimodel.BillbeeInterfacesBillbeeAPIModelArticleCategoryAPIModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Category2'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Category2', 'json': True }})  
    category3: Optional[shared_billbee_interfaces_billbeeapi_model_articlecategoryapimodel.BillbeeInterfacesBillbeeAPIModelArticleCategoryAPIModel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Category3'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Category3', 'json': True }})  
    condition: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Condition'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Condition' }})  
    cost_price: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CostPrice'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'CostPrice' }})  
    country_of_origin: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CountryOfOrigin'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'CountryOfOrigin' }})  
    custom_fields: Optional[list[shared_billbee_interfaces_billbeeapi_model_articleapicustomfieldvaluemodel.BillbeeInterfacesBillbeeAPIModelArticleAPICustomFieldValueModel]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CustomFields'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'CustomFields', 'json': True }})  
    delivery_time: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeliveryTime'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'DeliveryTime' }})  
    description: Optional[list[shared_billbee_interfaces_order_multilanguagestring.BillbeeInterfacesOrderMultiLanguageString]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Description', 'json': True }})  
    ean: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EAN'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'EAN' }})  
    export_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExportDescription'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'ExportDescription' }})  
    export_description_multi_language: Optional[list[shared_billbee_interfaces_order_multilanguagestring.BillbeeInterfacesOrderMultiLanguageString]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExportDescriptionMultiLanguage'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'ExportDescriptionMultiLanguage', 'json': True }})  
    height_cm: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HeightCm'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'HeightCm' }})  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Id' }})  
    images: Optional[list[shared_billbee_interfaces_billbeeapi_model_articleimagerelationapimodel.BillbeeInterfacesBillbeeAPIModelArticleImageRelationAPIModel]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Images'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Images', 'json': True }})  
    invoice_text: Optional[list[shared_billbee_interfaces_order_multilanguagestring.BillbeeInterfacesOrderMultiLanguageString]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InvoiceText'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'InvoiceText', 'json': True }})  
    is_deactivated: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsDeactivated'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'IsDeactivated' }})  
    length_cm: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LengthCm'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'LengthCm' }})  
    manufacturer: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Manufacturer'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Manufacturer' }})  
    materials: Optional[list[shared_billbee_interfaces_order_multilanguagestring.BillbeeInterfacesOrderMultiLanguageString]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Materials'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Materials', 'json': True }})  
    occasion: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Occasion'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Occasion' }})  
    recipient: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Recipient'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Recipient' }})  
    shipping_product_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShippingProductId'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'ShippingProductId' }})  
    short_description: Optional[list[shared_billbee_interfaces_order_multilanguagestring.BillbeeInterfacesOrderMultiLanguageString]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShortDescription'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'ShortDescription', 'json': True }})  
    sku: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SKU'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'SKU' }})  
    sold_amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SoldAmount'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'SoldAmount' }})  
    sold_amount_last30_days: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SoldAmountLast30Days'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'SoldAmountLast30Days' }})  
    sold_sum_gross: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SoldSumGross'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'SoldSumGross' }})  
    sold_sum_gross_last30_days: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SoldSumGrossLast30Days'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'SoldSumGrossLast30Days' }})  
    sold_sum_net: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SoldSumNet'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'SoldSumNet' }})  
    sold_sum_net_last30_days: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SoldSumNetLast30Days'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'SoldSumNetLast30Days' }})  
    sources: Optional[list[shared_billbee_interfaces_billbeeapi_model_articlesourceapimodel.BillbeeInterfacesBillbeeAPIModelArticleSourceAPIModel]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Sources'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Sources', 'json': True }})  
    stock_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StockCode'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'StockCode' }})  
    stock_current: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StockCurrent'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'StockCurrent' }})  
    stock_desired: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StockDesired'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'StockDesired' }})  
    stock_reduce_items_per_sale: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StockReduceItemsPerSale'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'StockReduceItemsPerSale' }})  
    stocks: Optional[list[shared_billbee_interfaces_billbeeapi_model_stockarticleapimodel.BillbeeInterfacesBillbeeAPIModelStockArticleAPIModel]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Stocks'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Stocks', 'json': True }})  
    stock_warning: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StockWarning'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'StockWarning' }})  
    tags: Optional[list[shared_billbee_interfaces_order_multilanguagestring.BillbeeInterfacesOrderMultiLanguageString]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Tags', 'json': True }})  
    taric_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TaricNumber'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'TaricNumber' }})  
    title: Optional[list[shared_billbee_interfaces_order_multilanguagestring.BillbeeInterfacesOrderMultiLanguageString]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Title'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Title', 'json': True }})  
    unit: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Unit'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Unit' }})  
    units_per_item: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UnitsPerItem'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'UnitsPerItem' }})  
    weight: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Weight'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Weight' }})  
    weight_net: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WeightNet'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'WeightNet' }})  
    width_cm: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WidthCm'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'WidthCm' }})  
    