// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateIntegrationResponseRequestBodyContentHandlingStrategyEnum - Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
type CreateIntegrationResponseRequestBodyContentHandlingStrategyEnum string

const (
	CreateIntegrationResponseRequestBodyContentHandlingStrategyEnumConvertToBinary CreateIntegrationResponseRequestBodyContentHandlingStrategyEnum = "CONVERT_TO_BINARY"
	CreateIntegrationResponseRequestBodyContentHandlingStrategyEnumConvertToText   CreateIntegrationResponseRequestBodyContentHandlingStrategyEnum = "CONVERT_TO_TEXT"
)

func (e CreateIntegrationResponseRequestBodyContentHandlingStrategyEnum) ToPointer() *CreateIntegrationResponseRequestBodyContentHandlingStrategyEnum {
	return &e
}

func (e *CreateIntegrationResponseRequestBodyContentHandlingStrategyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CONVERT_TO_BINARY":
		fallthrough
	case "CONVERT_TO_TEXT":
		*e = CreateIntegrationResponseRequestBodyContentHandlingStrategyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateIntegrationResponseRequestBodyContentHandlingStrategyEnum: %v", v)
	}
}

type CreateIntegrationResponseRequestBody struct {
	// Specifies how to handle response payload content type conversions. Supported only for WebSocket APIs.
	ContentHandlingStrategy *CreateIntegrationResponseRequestBodyContentHandlingStrategyEnum `json:"contentHandlingStrategy,omitempty"`
	// After evaluating a selection expression, the result is compared against one or more selection keys to find a matching key. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for a list of expressions and each expression's associated selection key type.
	IntegrationResponseKey string `json:"integrationResponseKey"`
	// <p>For WebSocket APIs, a key-value map specifying request parameters that are passed from the method request to the backend. The key is an integration request parameter name and the associated value is a method request parameter value or static value that must be enclosed within single quotes and pre-encoded as required by the backend. The method request parameter value must match the pattern of method.request.<replaceable>{location}</replaceable>.<replaceable>{name}</replaceable>
	//           , where
	//             <replaceable>{location}</replaceable>
	//            is querystring, path, or header; and
	//             <replaceable>{name}</replaceable>
	//            must be a valid and unique method request parameter name.</p> <p>For HTTP API integrations with a specified integrationSubtype, request parameters are a key-value map specifying parameters that are passed to AWS_PROXY integrations. You can provide static values, or map request data, stage variables, or context variables that are evaluated at runtime. To learn more, see <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-develop-integrations-aws-services.html">Working with AWS service integrations for HTTP APIs</a>.</p> <p>For HTTP API integrations without a specified integrationSubtype request parameters are a key-value map specifying how to transform HTTP requests before sending them to the backend. The key should follow the pattern &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt; where action can be append, overwrite or remove. For values, you can provide static values, or map request data, stage variables, or context variables that are evaluated at runtime. To learn more, see <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-parameter-mapping.html">Transforming API requests and responses</a>.</p>
	ResponseParameters map[string]string `json:"responseParameters,omitempty"`
	// A mapping of identifier keys to templates. The value is an actual template script. The key is typically a SelectionKey which is chosen based on evaluating a selection expression.
	ResponseTemplates map[string]string `json:"responseTemplates,omitempty"`
	// An expression used to extract information at runtime. See <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions">Selection Expressions</a> for more information.
	TemplateSelectionExpression *string `json:"templateSelectionExpression,omitempty"`
}

type CreateIntegrationResponseRequest struct {
	RequestBody       CreateIntegrationResponseRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The API identifier.
	APIID string `pathParam:"style=simple,explode=false,name=apiId"`
	// The integration ID.
	IntegrationID string `pathParam:"style=simple,explode=false,name=integrationId"`
}

type CreateIntegrationResponseResponse struct {
	// BadRequestException
	BadRequestException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateIntegrationResponseResponse *shared.CreateIntegrationResponseResponse
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
