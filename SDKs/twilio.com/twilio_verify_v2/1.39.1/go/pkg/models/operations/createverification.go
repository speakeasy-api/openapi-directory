// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var CreateVerificationServerList = []string{
	"https://verify.twilio.com",
}

type CreateVerificationSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type CreateVerificationPathParams struct {
	// The SID of the verification [Service](https://www.twilio.com/docs/verify/api/service) to create the resource under.
	ServiceSid string `pathParam:"style=simple,explode=false,name=ServiceSid"`
}

type CreateVerificationCreateVerificationRequest struct {
	// The amount of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.
	Amount *string `form:"name=Amount"`
	// Your [App Hash](https://developers.google.com/identity/sms-retriever/verify#computing_your_apps_hash_string) to be appended at the end of your verification SMS body. Applies only to SMS. Example SMS body: `<#> Your AppName verification code is: 1234 He42w354ol9`.
	AppHash *string `form:"name=AppHash"`
	// The verification method to use. One of: [`email`](https://www.twilio.com/docs/verify/email), `sms`, `whatsapp`, `call`, `sna` or `auto`.
	Channel string `form:"name=Channel"`
	// [`email`](https://www.twilio.com/docs/verify/email) channel configuration in json format. The fields 'from' and 'from_name' are optional but if included the 'from' field must have a valid email address.
	ChannelConfiguration interface{} `form:"name=ChannelConfiguration"`
	// A pre-generated code to use for verification. The code can be between 4 and 10 characters, inclusive.
	CustomCode *string `form:"name=CustomCode"`
	// A custom user defined friendly name that overwrites the existing one in the verification message
	CustomFriendlyName *string `form:"name=CustomFriendlyName"`
	// The text of a custom message to use for the verification.
	CustomMessage *string `form:"name=CustomMessage"`
	// The IP address of the client's device. If provided, it has to be a valid IPv4 or IPv6 address.
	DeviceIP *string `form:"name=DeviceIp"`
	// Locale will automatically resolve based on phone number country code for SMS, WhatsApp, and call channel verifications. It will fallback to English or the templateâ€™s default translation if the selected translation is not available. This parameter will override the automatic locale resolution. [See supported languages and more information here](https://www.twilio.com/docs/verify/supported-languages).
	Locale *string `form:"name=Locale"`
	// The payee of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.
	Payee *string `form:"name=Payee"`
	// The custom key-value pairs of Programmable Rate Limits. Keys correspond to `unique_name` fields defined when [creating your Rate Limit](https://www.twilio.com/docs/verify/api/service-rate-limits). Associated value pairs represent values in the request that you are rate limiting on. You may include multiple Rate Limit values in each request.
	RateLimits interface{} `form:"name=RateLimits"`
	// The digits to send after a phone call is answered, for example, to dial an extension. For more information, see the Programmable Voice documentation of [sendDigits](https://www.twilio.com/docs/voice/twiml/number#attributes-sendDigits).
	SendDigits *string `form:"name=SendDigits"`
	// A stringified JSON object in which the keys are the template's special variables and the values are the variables substitutions.
	TemplateCustomSubstitutions *string `form:"name=TemplateCustomSubstitutions"`
	// The message [template](https://www.twilio.com/docs/verify/api/templates). If provided, will override the default template for the Service. SMS and Voice channels only.
	TemplateSid *string `form:"name=TemplateSid"`
	// The phone number or [email](https://www.twilio.com/docs/verify/email) to verify. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).
	To string `form:"name=To"`
}

type CreateVerificationRequest struct {
	PathParams CreateVerificationPathParams
	Request    *CreateVerificationCreateVerificationRequest `request:"mediaType=application/x-www-form-urlencoded"`
	Security   CreateVerificationSecurity
	ServerURL  *string
}

type CreateVerificationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Created
	VerifyV2ServiceVerification *shared.VerifyV2ServiceVerification
}
