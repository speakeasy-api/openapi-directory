<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CashDrawerShiftEvent
{
    /**
     * The event time in ISO 8601 format.
     * 
     * @var ?string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * An optional description of the event, entered by the employee that
     * 
     * created the event.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The ID of the employee that created the event.
     * 
     * @var ?string $employeeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('employee_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $employeeId = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $eventMoney
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_money')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $eventMoney = null;
    
    /**
     * The type of cash drawer shift event.
     * 
     * @var ?string $eventType
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventType = null;
    
    /**
     * The unique ID of the event.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
	public function __construct()
	{
		$this->createdAt = null;
		$this->description = null;
		$this->employeeId = null;
		$this->eventMoney = null;
		$this->eventType = null;
		$this->id = null;
	}
}
