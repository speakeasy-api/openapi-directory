// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/types"
	"time"
)

type DashboardZoomRoomSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type DashboardZoomRoomRequest struct {
	// Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
	From types.Date `queryParam:"style=form,explode=true,name=from"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `queryParam:"style=form,explode=true,name=next_page_token"`
	// The number of records returned within a single API call.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// End date.
	To types.Date `queryParam:"style=form,explode=true,name=to"`
	// The Zoom room ID.
	ZoomroomID string `pathParam:"style=simple,explode=false,name=zoomroomId"`
}

type DashboardZoomRoomZoomRoomMeetingMetricsCustomKeys struct {
	// Custom key associated with the meetinh.
	Key *string `json:"key,omitempty"`
	// Value of the custom key associated with the meeting.
	Value *string `json:"value,omitempty"`
}

// DashboardZoomRoomZoomRoomMeetingMetrics - Meeting metric details.
type DashboardZoomRoomZoomRoomMeetingMetrics struct {
	// Custom keys and values assigned to the meeting.
	CustomKeys []DashboardZoomRoomZoomRoomMeetingMetricsCustomKeys `json:"custom_keys,omitempty"`
	// Department of the host.
	Dept *string `json:"dept,omitempty"`
	// Meeting duration.
	Duration *string `json:"duration,omitempty"`
	// Email address of the host.
	Email *string `json:"email,omitempty"`
	// Meeting end time.
	EndTime *time.Time `json:"end_time,omitempty"`
	// Indicates whether or not [third party audio](https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference) was used in the meeting.
	Has3rdPartyAudio *bool `json:"has_3rd_party_audio,omitempty"`
	// Indicates whether or not the PSTN was used in the meeting.
	HasPstn *bool `json:"has_pstn,omitempty"`
	// Indicates whether or not the recording feature was used in the meeting.
	HasRecording *bool `json:"has_recording,omitempty"`
	// Indicates whether or not screenshare feature was used in the meeting.
	HasScreenShare *bool `json:"has_screen_share,omitempty"`
	// Indicates whether or not someone joined the meeting using SIP.
	HasSip *bool `json:"has_sip,omitempty"`
	// Indicates whether or not video was used in the meeting.
	HasVideo *bool `json:"has_video,omitempty"`
	// Indicates whether or not VoIP was used in the meeting.
	HasVoip *bool `json:"has_voip,omitempty"`
	// Host display name.
	Host *string `json:"host,omitempty"`
	// [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
	ID *int64 `json:"id,omitempty"`
	// The number of Zoom Room participants in the meeting.
	InRoomParticipants *int64 `json:"in_room_participants,omitempty"`
	// Meeting participant count.
	Participants *int64 `json:"participants,omitempty"`
	// Meeting start time.
	StartTime *time.Time `json:"start_time,omitempty"`
	// Meeting topic.
	Topic *string `json:"topic,omitempty"`
	// License type of the user.
	UserType *string `json:"user_type,omitempty"`
	// Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.
	UUID *string `json:"uuid,omitempty"`
}

type DashboardZoomRoomZoomRoomPastMeetingsMeetingMetricsCustomKeys struct {
	// Custom key associated with the meetinh.
	Key *string `json:"key,omitempty"`
	// Value of the custom key associated with the meeting.
	Value *string `json:"value,omitempty"`
}

// DashboardZoomRoomZoomRoomPastMeetingsMeetingMetrics - Meeting metric details.
type DashboardZoomRoomZoomRoomPastMeetingsMeetingMetrics struct {
	// Custom keys and values assigned to the meeting.
	CustomKeys []DashboardZoomRoomZoomRoomPastMeetingsMeetingMetricsCustomKeys `json:"custom_keys,omitempty"`
	// Department of the host.
	Dept *string `json:"dept,omitempty"`
	// Meeting duration.
	Duration *string `json:"duration,omitempty"`
	// Email address of the host.
	Email *string `json:"email,omitempty"`
	// Meeting end time.
	EndTime *time.Time `json:"end_time,omitempty"`
	// Indicates whether or not [third party audio](https://support.zoom.us/hc/en-us/articles/202470795-3rd-Party-Audio-Conference) was used in the meeting.
	Has3rdPartyAudio *bool `json:"has_3rd_party_audio,omitempty"`
	// Indicates whether or not the PSTN was used in the meeting.
	HasPstn *bool `json:"has_pstn,omitempty"`
	// Indicates whether or not the recording feature was used in the meeting.
	HasRecording *bool `json:"has_recording,omitempty"`
	// Indicates whether or not screenshare feature was used in the meeting.
	HasScreenShare *bool `json:"has_screen_share,omitempty"`
	// Indicates whether or not someone joined the meeting using SIP.
	HasSip *bool `json:"has_sip,omitempty"`
	// Indicates whether or not video was used in the meeting.
	HasVideo *bool `json:"has_video,omitempty"`
	// Indicates whether or not VoIP was used in the meeting.
	HasVoip *bool `json:"has_voip,omitempty"`
	// Host display name.
	Host *string `json:"host,omitempty"`
	// [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
	ID *int64 `json:"id,omitempty"`
	// The number of Zoom Room participants in the meeting.
	InRoomParticipants *int64 `json:"in_room_participants,omitempty"`
	// Meeting participant count.
	Participants *int64 `json:"participants,omitempty"`
	// Meeting start time.
	StartTime *time.Time `json:"start_time,omitempty"`
	// Meeting topic.
	Topic *string `json:"topic,omitempty"`
	// License type of the user.
	UserType *string `json:"user_type,omitempty"`
	// Meeting UUID. Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.
	UUID *string `json:"uuid,omitempty"`
}

// DashboardZoomRoomZoomRoomPastMeetings - Pagination object.
type DashboardZoomRoomZoomRoomPastMeetings struct {
	// Start date for this report in 'yyyy-mm-dd' format.
	From *types.Date `json:"from,omitempty"`
	// Array of meeting objects.
	Meetings []DashboardZoomRoomZoomRoomPastMeetingsMeetingMetrics `json:"meetings,omitempty"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// The number of pages returned for the request made.
	PageCount *int64 `json:"page_count,omitempty"`
	// The number of records returned within a single API call.
	PageSize *int64 `json:"page_size,omitempty"`
	// End date for this report in 'yyyy-mm-dd' format.
	To *types.Date `json:"to,omitempty"`
	// The number of all records available across pages.
	TotalRecords *int64 `json:"total_records,omitempty"`
}

// DashboardZoomRoomZoomRoom - Zoom room.
type DashboardZoomRoomZoomRoom struct {
	// Zoom room email type.
	AccountType *string `json:"account_type,omitempty"`
	// Zoom calendar name.
	CalenderName *string `json:"calender_name,omitempty"`
	// Zoom room camera.
	Camera *string `json:"camera,omitempty"`
	// Zoom room device IP.
	DeviceIP *string `json:"device_ip,omitempty"`
	// Zoom room email.
	Email *string `json:"email,omitempty"`
	// Health of the Zoom Room.
	Health *string `json:"health,omitempty"`
	// Zoom room ID.
	ID *string `json:"id,omitempty"`
	// Issues encountered by the Zoom Room.
	Issues []string `json:"issues,omitempty"`
	// Zoom room last start time.
	LastStartTime *string `json:"last_start_time,omitempty"`
	// Meeting metric details.
	LiveMeeting *DashboardZoomRoomZoomRoomMeetingMetrics `json:"live_meeting,omitempty"`
	// Zoom room location.
	Location *string `json:"location,omitempty"`
	// Zoom room microphone.
	Microphone   *string                                `json:"microphone,omitempty"`
	PastMeetings *DashboardZoomRoomZoomRoomPastMeetings `json:"past_meetings,omitempty"`
	// Zoom room name.
	RoomName *string `json:"room_name,omitempty"`
	// Zoom room speaker.
	Speaker *string `json:"speaker,omitempty"`
	// Zoom room status.
	Status *string `json:"status,omitempty"`
}

type DashboardZoomRoomResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code:** `200`<br>
	// Zoom room returned.<br>
	// Only available for paid accounts that have enabled the Dashboard feature.
	ZoomRoom *DashboardZoomRoomZoomRoom
}
