// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCopyDBSnapshotActionEnum
type GETCopyDBSnapshotActionEnum string

const (
	GETCopyDBSnapshotActionEnumCopyDbSnapshot GETCopyDBSnapshotActionEnum = "CopyDBSnapshot"
)

func (e GETCopyDBSnapshotActionEnum) ToPointer() *GETCopyDBSnapshotActionEnum {
	return &e
}

func (e *GETCopyDBSnapshotActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CopyDBSnapshot":
		*e = GETCopyDBSnapshotActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCopyDBSnapshotActionEnum: %v", v)
	}
}

// GETCopyDBSnapshotVersionEnum
type GETCopyDBSnapshotVersionEnum string

const (
	GETCopyDBSnapshotVersionEnumTwoThousandAndThirteen0212 GETCopyDBSnapshotVersionEnum = "2013-02-12"
)

func (e GETCopyDBSnapshotVersionEnum) ToPointer() *GETCopyDBSnapshotVersionEnum {
	return &e
}

func (e *GETCopyDBSnapshotVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-02-12":
		*e = GETCopyDBSnapshotVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCopyDBSnapshotVersionEnum: %v", v)
	}
}

type GETCopyDBSnapshotRequest struct {
	Action                     GETCopyDBSnapshotActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	SourceDBSnapshotIdentifier string                       `queryParam:"style=form,explode=true,name=SourceDBSnapshotIdentifier"`
	TargetDBSnapshotIdentifier string                       `queryParam:"style=form,explode=true,name=TargetDBSnapshotIdentifier"`
	Version                    GETCopyDBSnapshotVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm              *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCopyDBSnapshotResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
