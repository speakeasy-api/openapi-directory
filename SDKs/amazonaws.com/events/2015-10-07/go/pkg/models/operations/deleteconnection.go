// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteConnectionXAmzTargetEnum
type DeleteConnectionXAmzTargetEnum string

const (
	DeleteConnectionXAmzTargetEnumAwsEventsDeleteConnection DeleteConnectionXAmzTargetEnum = "AWSEvents.DeleteConnection"
)

func (e *DeleteConnectionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSEvents.DeleteConnection":
		*e = DeleteConnectionXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteConnectionXAmzTargetEnum: %s", s)
	}
}

type DeleteConnectionRequest struct {
	DeleteConnectionRequest shared.DeleteConnectionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              DeleteConnectionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteConnectionResponse struct {
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// Success
	DeleteConnectionResponse *shared.DeleteConnectionResponse
	// InternalException
	InternalException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
