/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Repository invitations let you manage who you collaborate with.
 */
export class RepositorySubscription extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * Determines if all notifications should be blocked from this repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ignored" })
  ignored: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason: string;

  @SpeakeasyMetadata()
  @Expose({ name: "repository_url" })
  repositoryUrl: string;

  /**
   * Determines if notifications should be received from this repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscribed" })
  subscribed: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
