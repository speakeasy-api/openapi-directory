"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VolumeStatistics:
    r"""An object that contains information about the amount of email that was delivered to recipients."""
    
    inbox_raw_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InboxRawCount'), 'exclude': lambda f: f is None }})  
    projected_inbox: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProjectedInbox'), 'exclude': lambda f: f is None }})  
    projected_spam: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProjectedSpam'), 'exclude': lambda f: f is None }})  
    spam_raw_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SpamRawCount'), 'exclude': lambda f: f is None }})  
    