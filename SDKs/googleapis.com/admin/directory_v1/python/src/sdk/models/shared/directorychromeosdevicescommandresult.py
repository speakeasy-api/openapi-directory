"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DirectoryChromeosdevicesCommandResultResultEnum(str, Enum):
    r"""The result of the command."""
    COMMAND_RESULT_TYPE_UNSPECIFIED = 'COMMAND_RESULT_TYPE_UNSPECIFIED'
    IGNORED = 'IGNORED'
    FAILURE = 'FAILURE'
    SUCCESS = 'SUCCESS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DirectoryChromeosdevicesCommandResult:
    r"""The result of executing a command."""
    
    command_result_payload: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commandResultPayload'), 'exclude': lambda f: f is None }})
    r"""The payload for the command result. The following commands respond with a payload: * `DEVICE_START_CRD_SESSION`: Payload is a stringified JSON object in the form: { \\"url\\": url }. The URL provides a link to the Chrome Remote Desktop session."""  
    error_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorMessage'), 'exclude': lambda f: f is None }})
    r"""The error message with a short explanation as to why the command failed. Only present if the command failed."""  
    execute_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executeTime'), 'exclude': lambda f: f is None }})
    r"""The time at which the command was executed or failed to execute."""  
    result: Optional[DirectoryChromeosdevicesCommandResultResultEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result'), 'exclude': lambda f: f is None }})
    r"""The result of the command."""  
    