/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PostSpacesSpaceIdPersonsIdInvitationSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  gmaAuth: string;
}

export enum PostSpacesSpaceIdPersonsIdInvitationRequestBodyClientManagementEnum {
  No = "no",
  Manager = "manager",
  Adn = "adn",
}

export enum PostSpacesSpaceIdPersonsIdInvitationRequestBodyFoldersRightEnum {
  Read = "read",
  Write = "write",
}

export class PostSpacesSpaceIdPersonsIdInvitationRequestBodyFolders extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Right" })
  right?: PostSpacesSpaceIdPersonsIdInvitationRequestBodyFoldersRightEnum;
}

export enum PostSpacesSpaceIdPersonsIdInvitationRequestBodyPlayerEnum {
  Guest = "guest",
  Owner = "owner",
  Manager = "manager",
  Assistant = "assistant",
  Collaborator = "collaborator",
}

/**
 * Invitation to create
 */
export class PostSpacesSpaceIdPersonsIdInvitationRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ClientManagement" })
  clientManagement?: PostSpacesSpaceIdPersonsIdInvitationRequestBodyClientManagementEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "EmployeeAccess" })
  employeeAccess?: boolean;

  @SpeakeasyMetadata({
    elemType: PostSpacesSpaceIdPersonsIdInvitationRequestBodyFolders,
  })
  @Expose({ name: "Folders" })
  @Type(() => PostSpacesSpaceIdPersonsIdInvitationRequestBodyFolders)
  folders?: PostSpacesSpaceIdPersonsIdInvitationRequestBodyFolders[];

  @SpeakeasyMetadata()
  @Expose({ name: "GroupIds" })
  groupIds?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "IsAdmin" })
  isAdmin?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Player" })
  player?: PostSpacesSpaceIdPersonsIdInvitationRequestBodyPlayerEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "PlayerEnd" })
  playerEnd?: string;
}

export class PostSpacesSpaceIdPersonsIdInvitationRequest extends SpeakeasyBase {
  /**
   * Invitation to create
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PostSpacesSpaceIdPersonsIdInvitationRequestBody;

  /**
   * Id of the person
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=spaceId",
  })
  spaceId: string;
}

/**
 * Id of invitation created
 */
export class PostSpacesSpaceIdPersonsIdInvitation201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;
}

export class PostSpacesSpaceIdPersonsIdInvitationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Id of invitation created
   */
  @SpeakeasyMetadata()
  postSpacesSpaceIdPersonsIdInvitation201ApplicationJSONObject?: PostSpacesSpaceIdPersonsIdInvitation201ApplicationJSON;
}
