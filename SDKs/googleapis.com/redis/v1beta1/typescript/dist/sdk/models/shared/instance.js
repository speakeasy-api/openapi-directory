"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Instance = exports.InstanceStateEnum = exports.InstanceInput = exports.InstanceTransitEncryptionModeEnum = exports.InstanceTierEnum = exports.InstanceSuspensionReasonsEnum = exports.InstanceReadReplicasModeEnum = exports.InstanceConnectModeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var maintenancepolicy_1 = require("./maintenancepolicy");
var maintenanceschedule_1 = require("./maintenanceschedule");
var nodeinfo_1 = require("./nodeinfo");
var persistenceconfig_1 = require("./persistenceconfig");
var tlscertificate_1 = require("./tlscertificate");
var class_transformer_1 = require("class-transformer");
/**
 * Optional. The network connect mode of the Redis instance. If not provided, the connect mode defaults to DIRECT_PEERING.
 */
var InstanceConnectModeEnum;
(function (InstanceConnectModeEnum) {
    InstanceConnectModeEnum["ConnectModeUnspecified"] = "CONNECT_MODE_UNSPECIFIED";
    InstanceConnectModeEnum["DirectPeering"] = "DIRECT_PEERING";
    InstanceConnectModeEnum["PrivateServiceAccess"] = "PRIVATE_SERVICE_ACCESS";
})(InstanceConnectModeEnum = exports.InstanceConnectModeEnum || (exports.InstanceConnectModeEnum = {}));
/**
 * Optional. Read replicas mode for the instance. Defaults to READ_REPLICAS_DISABLED.
 */
var InstanceReadReplicasModeEnum;
(function (InstanceReadReplicasModeEnum) {
    InstanceReadReplicasModeEnum["ReadReplicasModeUnspecified"] = "READ_REPLICAS_MODE_UNSPECIFIED";
    InstanceReadReplicasModeEnum["ReadReplicasDisabled"] = "READ_REPLICAS_DISABLED";
    InstanceReadReplicasModeEnum["ReadReplicasEnabled"] = "READ_REPLICAS_ENABLED";
})(InstanceReadReplicasModeEnum = exports.InstanceReadReplicasModeEnum || (exports.InstanceReadReplicasModeEnum = {}));
var InstanceSuspensionReasonsEnum;
(function (InstanceSuspensionReasonsEnum) {
    InstanceSuspensionReasonsEnum["SuspensionReasonUnspecified"] = "SUSPENSION_REASON_UNSPECIFIED";
    InstanceSuspensionReasonsEnum["CustomerManagedKeyIssue"] = "CUSTOMER_MANAGED_KEY_ISSUE";
})(InstanceSuspensionReasonsEnum = exports.InstanceSuspensionReasonsEnum || (exports.InstanceSuspensionReasonsEnum = {}));
/**
 * Required. The service tier of the instance.
 */
var InstanceTierEnum;
(function (InstanceTierEnum) {
    InstanceTierEnum["TierUnspecified"] = "TIER_UNSPECIFIED";
    InstanceTierEnum["Basic"] = "BASIC";
    InstanceTierEnum["StandardHa"] = "STANDARD_HA";
})(InstanceTierEnum = exports.InstanceTierEnum || (exports.InstanceTierEnum = {}));
/**
 * Optional. The TLS mode of the Redis instance. If not provided, TLS is disabled for the instance.
 */
var InstanceTransitEncryptionModeEnum;
(function (InstanceTransitEncryptionModeEnum) {
    InstanceTransitEncryptionModeEnum["TransitEncryptionModeUnspecified"] = "TRANSIT_ENCRYPTION_MODE_UNSPECIFIED";
    InstanceTransitEncryptionModeEnum["ServerAuthentication"] = "SERVER_AUTHENTICATION";
    InstanceTransitEncryptionModeEnum["Disabled"] = "DISABLED";
})(InstanceTransitEncryptionModeEnum = exports.InstanceTransitEncryptionModeEnum || (exports.InstanceTransitEncryptionModeEnum = {}));
/**
 * A Memorystore for Redis instance.
 */
var InstanceInput = /** @class */ (function (_super) {
    __extends(InstanceInput, _super);
    function InstanceInput() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "alternativeLocationId" }),
        __metadata("design:type", String)
    ], InstanceInput.prototype, "alternativeLocationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authEnabled" }),
        __metadata("design:type", Boolean)
    ], InstanceInput.prototype, "authEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authorizedNetwork" }),
        __metadata("design:type", String)
    ], InstanceInput.prototype, "authorizedNetwork", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "availableMaintenanceVersions" }),
        __metadata("design:type", Array)
    ], InstanceInput.prototype, "availableMaintenanceVersions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectMode" }),
        __metadata("design:type", String)
    ], InstanceInput.prototype, "connectMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "customerManagedKey" }),
        __metadata("design:type", String)
    ], InstanceInput.prototype, "customerManagedKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], InstanceInput.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], InstanceInput.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "locationId" }),
        __metadata("design:type", String)
    ], InstanceInput.prototype, "locationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maintenancePolicy" }),
        (0, class_transformer_1.Type)(function () { return maintenancepolicy_1.MaintenancePolicyInput; }),
        __metadata("design:type", maintenancepolicy_1.MaintenancePolicyInput)
    ], InstanceInput.prototype, "maintenancePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maintenanceSchedule" }),
        (0, class_transformer_1.Type)(function () { return maintenanceschedule_1.MaintenanceScheduleInput; }),
        __metadata("design:type", maintenanceschedule_1.MaintenanceScheduleInput)
    ], InstanceInput.prototype, "maintenanceSchedule", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maintenanceVersion" }),
        __metadata("design:type", String)
    ], InstanceInput.prototype, "maintenanceVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "memorySizeGb" }),
        __metadata("design:type", Number)
    ], InstanceInput.prototype, "memorySizeGb", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], InstanceInput.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "persistenceConfig" }),
        (0, class_transformer_1.Type)(function () { return persistenceconfig_1.PersistenceConfigInput; }),
        __metadata("design:type", persistenceconfig_1.PersistenceConfigInput)
    ], InstanceInput.prototype, "persistenceConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "readReplicasMode" }),
        __metadata("design:type", String)
    ], InstanceInput.prototype, "readReplicasMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "redisConfigs" }),
        __metadata("design:type", Object)
    ], InstanceInput.prototype, "redisConfigs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "redisVersion" }),
        __metadata("design:type", String)
    ], InstanceInput.prototype, "redisVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "replicaCount" }),
        __metadata("design:type", Number)
    ], InstanceInput.prototype, "replicaCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reservedIpRange" }),
        __metadata("design:type", String)
    ], InstanceInput.prototype, "reservedIpRange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "secondaryIpRange" }),
        __metadata("design:type", String)
    ], InstanceInput.prototype, "secondaryIpRange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "suspensionReasons" }),
        __metadata("design:type", Array)
    ], InstanceInput.prototype, "suspensionReasons", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tier" }),
        __metadata("design:type", String)
    ], InstanceInput.prototype, "tier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transitEncryptionMode" }),
        __metadata("design:type", String)
    ], InstanceInput.prototype, "transitEncryptionMode", void 0);
    return InstanceInput;
}(utils_1.SpeakeasyBase));
exports.InstanceInput = InstanceInput;
/**
 * Output only. The current state of this instance.
 */
var InstanceStateEnum;
(function (InstanceStateEnum) {
    InstanceStateEnum["StateUnspecified"] = "STATE_UNSPECIFIED";
    InstanceStateEnum["Creating"] = "CREATING";
    InstanceStateEnum["Ready"] = "READY";
    InstanceStateEnum["Updating"] = "UPDATING";
    InstanceStateEnum["Deleting"] = "DELETING";
    InstanceStateEnum["Repairing"] = "REPAIRING";
    InstanceStateEnum["Maintenance"] = "MAINTENANCE";
    InstanceStateEnum["Importing"] = "IMPORTING";
    InstanceStateEnum["FailingOver"] = "FAILING_OVER";
})(InstanceStateEnum = exports.InstanceStateEnum || (exports.InstanceStateEnum = {}));
/**
 * A Memorystore for Redis instance.
 */
var Instance = /** @class */ (function (_super) {
    __extends(Instance, _super);
    function Instance() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "alternativeLocationId" }),
        __metadata("design:type", String)
    ], Instance.prototype, "alternativeLocationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authEnabled" }),
        __metadata("design:type", Boolean)
    ], Instance.prototype, "authEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authorizedNetwork" }),
        __metadata("design:type", String)
    ], Instance.prototype, "authorizedNetwork", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "availableMaintenanceVersions" }),
        __metadata("design:type", Array)
    ], Instance.prototype, "availableMaintenanceVersions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectMode" }),
        __metadata("design:type", String)
    ], Instance.prototype, "connectMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createTime" }),
        __metadata("design:type", String)
    ], Instance.prototype, "createTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currentLocationId" }),
        __metadata("design:type", String)
    ], Instance.prototype, "currentLocationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "customerManagedKey" }),
        __metadata("design:type", String)
    ], Instance.prototype, "customerManagedKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], Instance.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "host" }),
        __metadata("design:type", String)
    ], Instance.prototype, "host", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], Instance.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "locationId" }),
        __metadata("design:type", String)
    ], Instance.prototype, "locationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maintenancePolicy" }),
        (0, class_transformer_1.Type)(function () { return maintenancepolicy_1.MaintenancePolicy; }),
        __metadata("design:type", maintenancepolicy_1.MaintenancePolicy)
    ], Instance.prototype, "maintenancePolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maintenanceSchedule" }),
        (0, class_transformer_1.Type)(function () { return maintenanceschedule_1.MaintenanceSchedule; }),
        __metadata("design:type", maintenanceschedule_1.MaintenanceSchedule)
    ], Instance.prototype, "maintenanceSchedule", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "maintenanceVersion" }),
        __metadata("design:type", String)
    ], Instance.prototype, "maintenanceVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "memorySizeGb" }),
        __metadata("design:type", Number)
    ], Instance.prototype, "memorySizeGb", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Instance.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: nodeinfo_1.NodeInfo }),
        (0, class_transformer_1.Expose)({ name: "nodes" }),
        (0, class_transformer_1.Type)(function () { return nodeinfo_1.NodeInfo; }),
        __metadata("design:type", Array)
    ], Instance.prototype, "nodes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "persistenceConfig" }),
        (0, class_transformer_1.Type)(function () { return persistenceconfig_1.PersistenceConfig; }),
        __metadata("design:type", persistenceconfig_1.PersistenceConfig)
    ], Instance.prototype, "persistenceConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "persistenceIamIdentity" }),
        __metadata("design:type", String)
    ], Instance.prototype, "persistenceIamIdentity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "port" }),
        __metadata("design:type", Number)
    ], Instance.prototype, "port", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "readEndpoint" }),
        __metadata("design:type", String)
    ], Instance.prototype, "readEndpoint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "readEndpointPort" }),
        __metadata("design:type", Number)
    ], Instance.prototype, "readEndpointPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "readReplicasMode" }),
        __metadata("design:type", String)
    ], Instance.prototype, "readReplicasMode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "redisConfigs" }),
        __metadata("design:type", Object)
    ], Instance.prototype, "redisConfigs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "redisVersion" }),
        __metadata("design:type", String)
    ], Instance.prototype, "redisVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "replicaCount" }),
        __metadata("design:type", Number)
    ], Instance.prototype, "replicaCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reservedIpRange" }),
        __metadata("design:type", String)
    ], Instance.prototype, "reservedIpRange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "secondaryIpRange" }),
        __metadata("design:type", String)
    ], Instance.prototype, "secondaryIpRange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: tlscertificate_1.TlsCertificate }),
        (0, class_transformer_1.Expose)({ name: "serverCaCerts" }),
        (0, class_transformer_1.Type)(function () { return tlscertificate_1.TlsCertificate; }),
        __metadata("design:type", Array)
    ], Instance.prototype, "serverCaCerts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        __metadata("design:type", String)
    ], Instance.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "statusMessage" }),
        __metadata("design:type", String)
    ], Instance.prototype, "statusMessage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "suspensionReasons" }),
        __metadata("design:type", Array)
    ], Instance.prototype, "suspensionReasons", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tier" }),
        __metadata("design:type", String)
    ], Instance.prototype, "tier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transitEncryptionMode" }),
        __metadata("design:type", String)
    ], Instance.prototype, "transitEncryptionMode", void 0);
    return Instance;
}(utils_1.SpeakeasyBase));
exports.Instance = Instance;
