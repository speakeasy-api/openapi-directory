/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Destination } from "./destination";
import { Source } from "./source";
import { Expose, Type } from "class-transformer";

/**
 * Specification of rules.
 */
export class Rule extends SpeakeasyBase {
  /**
   * Optional. List of attributes for the traffic destination. All of the destinations must match. A destination is a match if a request matches all the specified hosts, ports, methods and headers. If not set, the action specified in the 'action' field will be applied without any rule checks for the destination.
   */
  @SpeakeasyMetadata({ elemType: Destination })
  @Expose({ name: "destinations" })
  @Type(() => Destination)
  destinations?: Destination[];

  /**
   * Optional. List of attributes for the traffic source. All of the sources must match. A source is a match if both principals and ip_blocks match. If not set, the action specified in the 'action' field will be applied without any rule checks for the source.
   */
  @SpeakeasyMetadata({ elemType: Source })
  @Expose({ name: "sources" })
  @Type(() => Source)
  sources?: Source[];
}
