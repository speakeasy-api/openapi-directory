// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateAssistantRequestBodyServerSideEncryptionConfiguration - The KMS key used for encryption.
type CreateAssistantRequestBodyServerSideEncryptionConfiguration struct {
	KmsKeyID *string `json:"kmsKeyId,omitempty"`
}

// CreateAssistantRequestBodyTypeEnum - The type of assistant.
type CreateAssistantRequestBodyTypeEnum string

const (
	CreateAssistantRequestBodyTypeEnumAgent CreateAssistantRequestBodyTypeEnum = "AGENT"
)

func (e CreateAssistantRequestBodyTypeEnum) ToPointer() *CreateAssistantRequestBodyTypeEnum {
	return &e
}

func (e *CreateAssistantRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AGENT":
		*e = CreateAssistantRequestBodyTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAssistantRequestBodyTypeEnum: %v", v)
	}
}

type CreateAssistantRequestBody struct {
	// A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If not provided, the Amazon Web Services SDK populates this field. For more information about idempotency, see <a href="https://aws.amazon.com/builders-library/making-retries-safe-with-idempotent-APIs/">Making retries safe with idempotent APIs</a>.
	ClientToken *string `json:"clientToken,omitempty"`
	// The description of the assistant.
	Description *string `json:"description,omitempty"`
	// The name of the assistant.
	Name string `json:"name"`
	// The KMS key used for encryption.
	ServerSideEncryptionConfiguration *CreateAssistantRequestBodyServerSideEncryptionConfiguration `json:"serverSideEncryptionConfiguration,omitempty"`
	// The tags used to organize, track, or control access for this resource.
	Tags map[string]string `json:"tags,omitempty"`
	// The type of assistant.
	Type CreateAssistantRequestBodyTypeEnum `json:"type"`
}

type CreateAssistantRequest struct {
	RequestBody       CreateAssistantRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateAssistantResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateAssistantResponse *shared.CreateAssistantResponse
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ValidationException
	ValidationException interface{}
}
