/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A CORS configuration. Supported only for HTTP APIs.
 */
export class ApiCorsConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AllowCredentials" })
  allowCredentials?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "AllowHeaders" })
  allowHeaders?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "AllowMethods" })
  allowMethods?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "AllowOrigins" })
  allowOrigins?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ExposeHeaders" })
  exposeHeaders?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "MaxAge" })
  maxAge?: number;
}

/**
 * The API protocol.
 */
export enum ApiProtocolTypeEnum {
  Websocket = "WEBSOCKET",
  Http = "HTTP",
}

/**
 * Represents an API.
 */
export class Api extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ApiEndpoint" })
  apiEndpoint?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ApiGatewayManaged" })
  apiGatewayManaged?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ApiId" })
  apiId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ApiKeySelectionExpression" })
  apiKeySelectionExpression?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CorsConfiguration" })
  @Type(() => ApiCorsConfiguration)
  corsConfiguration?: ApiCorsConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DisableExecuteApiEndpoint" })
  disableExecuteApiEndpoint?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "DisableSchemaValidation" })
  disableSchemaValidation?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ImportInfo" })
  importInfo?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProtocolType" })
  protocolType: ApiProtocolTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "RouteSelectionExpression" })
  routeSelectionExpression: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Version" })
  version?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Warnings" })
  warnings?: string[];
}
