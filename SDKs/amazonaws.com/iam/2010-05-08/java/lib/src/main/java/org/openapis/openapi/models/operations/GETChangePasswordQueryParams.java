/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETChangePasswordQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETChangePasswordActionEnum action;
    public GETChangePasswordQueryParams withAction(GETChangePasswordActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * &lt;p&gt;The new password. The new password must conform to the Amazon Web Services account's password policy, if one exists.&lt;/p&gt; &lt;p&gt;The &lt;a href="http://wikipedia.org/wiki/regex"&gt;regex pattern&lt;/a&gt; that is used to validate this parameter is a string of characters. That string can include almost any printable ASCII character from the space (&lt;code&gt;\ u0020&lt;/code&gt;) through the end of the ASCII character range (&lt;code&gt;\ u00FF&lt;/code&gt;). You can also include the tab (&lt;code&gt;\ u0009&lt;/code&gt;), line feed (&lt;code&gt;\ u000A&lt;/code&gt;), and carriage return (&lt;code&gt;\ u000D&lt;/code&gt;) characters. Any of these characters are valid in a password. However, many tools, such as the Amazon Web Services Management Console, might restrict the ability to type certain characters because they have special meaning within that tool.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=NewPassword")
    public String newPassword;
    public GETChangePasswordQueryParams withNewPassword(String newPassword) {
        this.newPassword = newPassword;
        return this;
    }
    
    /**
     * The IAM user's current password.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=OldPassword")
    public String oldPassword;
    public GETChangePasswordQueryParams withOldPassword(String oldPassword) {
        this.oldPassword = oldPassword;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETChangePasswordVersionEnum version;
    public GETChangePasswordQueryParams withVersion(GETChangePasswordVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
