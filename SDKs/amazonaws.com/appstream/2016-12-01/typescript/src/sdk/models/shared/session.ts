/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuthenticationTypeEnum } from "./authenticationtypeenum";
import { NetworkAccessConfiguration } from "./networkaccessconfiguration";
import { SessionConnectionStateEnum } from "./sessionconnectionstateenum";
import { SessionStateEnum } from "./sessionstateenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes a streaming session.
 */
export class Session extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AuthenticationType" })
  authenticationType?: AuthenticationTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ConnectionState" })
  connectionState?: SessionConnectionStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "FleetName" })
  fleetName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxExpirationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  maxExpirationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "NetworkAccessConfiguration" })
  @Type(() => NetworkAccessConfiguration)
  networkAccessConfiguration?: NetworkAccessConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "StackName" })
  stackName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state: SessionStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "UserId" })
  userId: string;
}
