/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorT } from "./error";
import { LoyaltyEvent } from "./loyaltyevent";
import { Expose, Type } from "class-transformer";

/**
 * A response that contains loyalty events that satisfy the search
 *
 * @remarks
 * criteria, in order by the `created_at` date.
 */
export class SearchLoyaltyEventsResponse extends SpeakeasyBase {
  /**
   * The pagination cursor to be used in a subsequent
   *
   * @remarks
   * request. If empty, this is the final response.
   * For more information,
   * see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cursor" })
  cursor?: string;

  /**
   * Any errors that occurred during the request.
   */
  @SpeakeasyMetadata({ elemType: ErrorT })
  @Expose({ name: "errors" })
  @Type(() => ErrorT)
  errors?: ErrorT[];

  /**
   * The loyalty events that satisfy the search criteria.
   */
  @SpeakeasyMetadata({ elemType: LoyaltyEvent })
  @Expose({ name: "events" })
  @Type(() => LoyaltyEvent)
  events?: LoyaltyEvent[];
}
