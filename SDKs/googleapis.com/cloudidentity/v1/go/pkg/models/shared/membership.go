// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MembershipDeliverySettingEnum - Output only. Delivery setting associated with the membership.
type MembershipDeliverySettingEnum string

const (
	MembershipDeliverySettingEnumDeliverySettingUnspecified MembershipDeliverySettingEnum = "DELIVERY_SETTING_UNSPECIFIED"
	MembershipDeliverySettingEnumAllMail                    MembershipDeliverySettingEnum = "ALL_MAIL"
	MembershipDeliverySettingEnumDigest                     MembershipDeliverySettingEnum = "DIGEST"
	MembershipDeliverySettingEnumDaily                      MembershipDeliverySettingEnum = "DAILY"
	MembershipDeliverySettingEnumNone                       MembershipDeliverySettingEnum = "NONE"
	MembershipDeliverySettingEnumDisabled                   MembershipDeliverySettingEnum = "DISABLED"
)

func (e MembershipDeliverySettingEnum) ToPointer() *MembershipDeliverySettingEnum {
	return &e
}

func (e *MembershipDeliverySettingEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DELIVERY_SETTING_UNSPECIFIED":
		fallthrough
	case "ALL_MAIL":
		fallthrough
	case "DIGEST":
		fallthrough
	case "DAILY":
		fallthrough
	case "NONE":
		fallthrough
	case "DISABLED":
		*e = MembershipDeliverySettingEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MembershipDeliverySettingEnum: %v", v)
	}
}

// MembershipTypeEnum - Output only. The type of the membership.
type MembershipTypeEnum string

const (
	MembershipTypeEnumTypeUnspecified MembershipTypeEnum = "TYPE_UNSPECIFIED"
	MembershipTypeEnumUser            MembershipTypeEnum = "USER"
	MembershipTypeEnumServiceAccount  MembershipTypeEnum = "SERVICE_ACCOUNT"
	MembershipTypeEnumGroup           MembershipTypeEnum = "GROUP"
	MembershipTypeEnumSharedDrive     MembershipTypeEnum = "SHARED_DRIVE"
	MembershipTypeEnumOther           MembershipTypeEnum = "OTHER"
)

func (e MembershipTypeEnum) ToPointer() *MembershipTypeEnum {
	return &e
}

func (e *MembershipTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TYPE_UNSPECIFIED":
		fallthrough
	case "USER":
		fallthrough
	case "SERVICE_ACCOUNT":
		fallthrough
	case "GROUP":
		fallthrough
	case "SHARED_DRIVE":
		fallthrough
	case "OTHER":
		*e = MembershipTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MembershipTypeEnum: %v", v)
	}
}

// Membership - A membership within the Cloud Identity Groups API. A `Membership` defines a relationship between a `Group` and an entity belonging to that `Group`, referred to as a "member".
type Membership struct {
	// Output only. The time when the `Membership` was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. Delivery setting associated with the membership.
	DeliverySetting *MembershipDeliverySettingEnum `json:"deliverySetting,omitempty"`
	// Output only. The [resource name](https://cloud.google.com/apis/design/resource_names) of the `Membership`. Shall be of the form `groups/{group}/memberships/{membership}`.
	Name *string `json:"name,omitempty"`
	// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
	PreferredMemberKey *EntityKey `json:"preferredMemberKey,omitempty"`
	// The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`.
	Roles []MembershipRole `json:"roles,omitempty"`
	// Output only. The type of the membership.
	Type *MembershipTypeEnum `json:"type,omitempty"`
	// Output only. The time when the `Membership` was last updated.
	UpdateTime *string `json:"updateTime,omitempty"`
}

// MembershipInput - A membership within the Cloud Identity Groups API. A `Membership` defines a relationship between a `Group` and an entity belonging to that `Group`, referred to as a "member".
type MembershipInput struct {
	// A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
	PreferredMemberKey *EntityKey `json:"preferredMemberKey,omitempty"`
	// The `MembershipRole`s that apply to the `Membership`. If unspecified, defaults to a single `MembershipRole` with `name` `MEMBER`. Must not contain duplicate `MembershipRole`s with the same `name`.
	Roles []MembershipRoleInput `json:"roles,omitempty"`
}
