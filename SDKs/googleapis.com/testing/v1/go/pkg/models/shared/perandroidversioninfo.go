// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PerAndroidVersionInfoDeviceCapacityEnum - The number of online devices for an Android version.
type PerAndroidVersionInfoDeviceCapacityEnum string

const (
	PerAndroidVersionInfoDeviceCapacityEnumDeviceCapacityUnspecified PerAndroidVersionInfoDeviceCapacityEnum = "DEVICE_CAPACITY_UNSPECIFIED"
	PerAndroidVersionInfoDeviceCapacityEnumDeviceCapacityHigh        PerAndroidVersionInfoDeviceCapacityEnum = "DEVICE_CAPACITY_HIGH"
	PerAndroidVersionInfoDeviceCapacityEnumDeviceCapacityMedium      PerAndroidVersionInfoDeviceCapacityEnum = "DEVICE_CAPACITY_MEDIUM"
	PerAndroidVersionInfoDeviceCapacityEnumDeviceCapacityLow         PerAndroidVersionInfoDeviceCapacityEnum = "DEVICE_CAPACITY_LOW"
	PerAndroidVersionInfoDeviceCapacityEnumDeviceCapacityNone        PerAndroidVersionInfoDeviceCapacityEnum = "DEVICE_CAPACITY_NONE"
)

func (e PerAndroidVersionInfoDeviceCapacityEnum) ToPointer() *PerAndroidVersionInfoDeviceCapacityEnum {
	return &e
}

func (e *PerAndroidVersionInfoDeviceCapacityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DEVICE_CAPACITY_UNSPECIFIED":
		fallthrough
	case "DEVICE_CAPACITY_HIGH":
		fallthrough
	case "DEVICE_CAPACITY_MEDIUM":
		fallthrough
	case "DEVICE_CAPACITY_LOW":
		fallthrough
	case "DEVICE_CAPACITY_NONE":
		*e = PerAndroidVersionInfoDeviceCapacityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PerAndroidVersionInfoDeviceCapacityEnum: %v", v)
	}
}

// PerAndroidVersionInfo - A version-specific information of an Android model.
type PerAndroidVersionInfo struct {
	// The number of online devices for an Android version.
	DeviceCapacity *PerAndroidVersionInfoDeviceCapacityEnum `json:"deviceCapacity,omitempty"`
	// An Android version.
	VersionID *string `json:"versionId,omitempty"`
}
