// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTMoveAddressToVpcActionEnum
type POSTMoveAddressToVpcActionEnum string

const (
	POSTMoveAddressToVpcActionEnumMoveAddressToVpc POSTMoveAddressToVpcActionEnum = "MoveAddressToVpc"
)

func (e *POSTMoveAddressToVpcActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MoveAddressToVpc":
		*e = POSTMoveAddressToVpcActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTMoveAddressToVpcActionEnum: %s", s)
	}
}

// POSTMoveAddressToVpcVersionEnum
type POSTMoveAddressToVpcVersionEnum string

const (
	POSTMoveAddressToVpcVersionEnumTwoThousandAndSixteen1115 POSTMoveAddressToVpcVersionEnum = "2016-11-15"
)

func (e *POSTMoveAddressToVpcVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTMoveAddressToVpcVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTMoveAddressToVpcVersionEnum: %s", s)
	}
}

type POSTMoveAddressToVpcRequest struct {
	Action            POSTMoveAddressToVpcActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                          `request:"mediaType=text/xml"`
	Version           POSTMoveAddressToVpcVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTMoveAddressToVpcResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
