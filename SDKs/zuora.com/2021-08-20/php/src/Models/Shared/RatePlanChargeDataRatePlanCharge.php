<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RatePlanChargeDataRatePlanCharge - Container for custom fields of a Rate Plan Charge object.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RatePlanChargeDataRatePlanCharge
{
    /**
     * The accounting code for the charge. Accounting codes group transactions that contain similar accounting attributes.
     * 
     * 
     * **Character limit**: 100
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.AccountingCode` 
     * 
     * @var ?string $accountingCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('AccountingCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountingCode = null;
    
    /**
     *  Specifies the type of charges a specific discount applies to.
     * 
     * 
     * **Character limit**: 21
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.ApplyDiscountTo` 
     * 
     * @var ?string $applyDiscountTo
     */
	#[\JMS\Serializer\Annotation\SerializedName('ApplyDiscountTo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $applyDiscountTo = null;
    
    /**
     *  Indicates the charge's billing cycle day (BCD), which is when bill runs generate invoices for charges associated with the product rate plan charge or the account.
     * 
     * 
     * 
     * **Character limit**: 2
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.BillCycleDay` 
     * 
     * @var ?int $billCycleDay
     */
	#[\JMS\Serializer\Annotation\SerializedName('BillCycleDay')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $billCycleDay = null;
    
    /**
     *  Specifies how to determine the billing day for the charge.
     * 
     * 
     * 
     * **Character limit**: 20
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.BillCycleType` **Note:** You can override the value inherited from the Product Rate Plan Charge, but only when creating a new subscription or a New Product amendment. 
     * 
     * @var ?string $billCycleType
     */
	#[\JMS\Serializer\Annotation\SerializedName('BillCycleType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $billCycleType = null;
    
    /**
     *  Allows billing period to be overridden on rate plan charge.
     * 
     * 
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.BillingPeriod` **Note:** You can override the value inherited from the Product Rate Plan Charge, but only when creating a new subscription or a New Product amendment. 
     * 
     * @var ?string $billingPeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('BillingPeriod')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $billingPeriod = null;
    
    /**
     *  Aligns charges within the same subscription if multiple charges begin on different dates.
     * 
     * 
     * 
     * **Character limit**: 24
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.BillingPeriodAlignment` 
     * 
     * @var ?string $billingPeriodAlignment
     */
	#[\JMS\Serializer\Annotation\SerializedName('BillingPeriodAlignment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $billingPeriodAlignment = null;
    
    /**
     *  The billing timing for the charge. You can choose to bill in advance or in arrears for recurring charge types. This field is not used in one-time or usage based charge types.
     * 
     * 
     * 
     * **Character limit**:
     * 
     * 
     * **Values**: one of the following:
     * 
     * - I`n Advance`
     * - `In Arrears`
     * **Note:** You can override the value inherited from the Product Rate Plan Charge when a subscription has a recurring charge type.
     * This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
     * 
     * 
     * 
     * @var ?string $billingTiming
     */
	#[\JMS\Serializer\Annotation\SerializedName('BillingTiming')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $billingTiming = null;
    
    /**
     *  Determines how to evaluate charges. Charge models must be individually activated in the web-based UI.
     * 
     * 
     * 
     * **Character limit**: 29
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.ChargeModel` 
     * 
     * @var ?string $chargeModel
     */
	#[\JMS\Serializer\Annotation\SerializedName('ChargeModel')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $chargeModel = null;
    
    /**
     *  A unique number that identifies the charge. This number is returned as a string.
     * 
     * 
     * 
     * **Character limit**: 50
     * 
     * 
     * **Values**: one of the following:
     * 
     * - automatically generated if left null
     * - a unique number of 50 characters or fewer
     * 
     * 
     * @var ?string $chargeNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('ChargeNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $chargeNumber = null;
    
    /**
     *  Specifies the type of charge.
     * 
     * 
     * 
     * **Character limit**: 9
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.ChargeType` 
     * 
     * @var ?string $chargeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('ChargeType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $chargeType = null;
    
    /**
     *  The date through which a customer has been billed for the charge.
     * 
     * 
     * 
     * **Character limit**: 29
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?\DateTime $chargedThroughDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('ChargedThroughDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $chargedThroughDate = null;
    
    /**
     * The ID of the Zuora user who created the `RatePlanCharge` object.
     * 
     * 
     * **Character limit**: 32
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?string $createdById
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreatedById')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdById = null;
    
    /**
     *  The date when the `RatePlanCharge` object was created.
     * 
     * 
     * 
     * **Character limit**: 29
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?\DateTime $createdDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreatedDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdDate = null;
    
    /**
     * A delta monthly recurring charge is the change in monthly recurring revenue caused by an amendment or a new subscription.
     * 
     * 
     * **Character limit**: 16
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?float $dmrc
     */
	#[\JMS\Serializer\Annotation\SerializedName('DMRC')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $dmrc = null;
    
    /**
     *  After an Amendment, the change in the total contract value (TCV) amount for this charge, compared with its previous value.
     * 
     * 
     * 
     * **Character limit**: 16
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?float $dtcv
     */
	#[\JMS\Serializer\Annotation\SerializedName('DTCV')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $dtcv = null;
    
    /**
     *  A description of the charge.
     * 
     * 
     * 
     * **Character limit**: 500
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.Description` 
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('Description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     *  Specifies the amount of a fixed-amount discount. You can provide a value for this field if the `ChargeModel` field value is `Discount-Fixed Amount`. If this field is included in a query, the query will filter out the rate plans whose `ChargeModel` field is not of a Discount type. You cannot query this field with the following fields in a single query:
     * 
     * 
     * - Price
     * - IncludedUnits
     * - DiscountPercentage
     * - OveragePrice
     * 
     * 
     * **Character limit**: 16
     * 
     * 
     * **Values**: a valid currency amount 
     * 
     * @var ?float $discountAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('DiscountAmount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $discountAmount = null;
    
    /**
     * Specifies if the discount applies to just the product rate plan, the entire subscription, or to any activity in the account. This field is only required if the `ChargeModel` field is set to `DiscountFixedAmount` or `DiscountPercentage`.
     * 
     * 
     * **Character limit**: 12
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.DiscountLevel` 
     * 
     * @var ?string $discountLevel
     */
	#[\JMS\Serializer\Annotation\SerializedName('DiscountLevel')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $discountLevel = null;
    
    /**
     *  Query Filter 
     * 
     * @var ?float $discountPercentage
     */
	#[\JMS\Serializer\Annotation\SerializedName('DiscountPercentage')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $discountPercentage = null;
    
    /**
     *  The date when the segmented charge ends or ended.
     * 
     * 
     * 
     * **Character limit**: 16
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?\DateTime $effectiveEndDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('EffectiveEndDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $effectiveEndDate = null;
    
    /**
     *  The date when the segmented charge starts or started.
     * 
     * 
     * 
     * **Character limit**: 16
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?\DateTime $effectiveStartDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('EffectiveStartDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $effectiveStartDate = null;
    
    /**
     *  Defines when the charge ends after the charge trigger date. This field can be updated when **Status** is `Draft`.
     * 
     * 
     * 
     * 
     * **Values**: one of the following:
     * 
     * - `SubscriptionEnd`: The charge ends on the subscription end date after the charge trigger date. This is the default value.
     * - `FixedPeriod`: The charge ends after a specified period based on the trigger date of the charge. If you set this field to `FixedPeriod`, you must specify the length of the period and a period type by defining the `UpToPeriods` and `UpToPeriodsType` fields.
     * - `SpecificEndDate`: The specific date on which the charge ends. If you set this field to `SpecificEndDate`, you must specify the specific date by defining the `SpecificEndDate` field.
     * 
     * 
     * 
     * **Note**: If the subscription ends before the charge end date, the charge ends when the subscription ends. But if the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge will end on the charge end date. 
     * 
     * @var ?string $endDateCondition
     */
	#[\JMS\Serializer\Annotation\SerializedName('EndDateCondition')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $endDateCondition = null;
    
    /**
     *  Query Filter 
     * 
     * @var ?float $includedUnits
     */
	#[\JMS\Serializer\Annotation\SerializedName('IncludedUnits')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $includedUnits = null;
    
    /**
     * Indicates if the segment of the rate plan charge is the most recent segment.
     * 
     * 
     * **Character limit**: 5
     * 
     * 
     * **Values**: automatically generated: `true`, `false` 
     * 
     * @var ?bool $isLastSegment
     */
	#[\JMS\Serializer\Annotation\SerializedName('IsLastSegment')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isLastSegment = null;
    
    /**
     * The list price base for the product rate plan charge.
     * 
     * 
     * 
     * **Values**: one of the following:
     * 
     * - `Per Month`
     * - `Per Billing Period`
     * - `Per Week`
     * 
     * 
     * @var ?string $listPriceBase
     */
	#[\JMS\Serializer\Annotation\SerializedName('ListPriceBase')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $listPriceBase = null;
    
    /**
     * Monthly recurring revenue (MRR) is the amount of recurring charges in a given month. The MRR calculation doesn't include one-time charges nor usage charges.
     * 
     * 
     * **Character limit**: 16
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?float $mrr
     */
	#[\JMS\Serializer\Annotation\SerializedName('MRR')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $mrr = null;
    
    /**
     * The name of the rate plan charge.
     * 
     * 
     * **Character limit**: 100
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Specifies the number of periods to use when calculating charges in an overage smoothing charge model.
     * 
     * 
     * **Character limit**: 5
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.NumberOfPeriod` 
     * 
     * @var ?int $numberOfPeriods
     */
	#[\JMS\Serializer\Annotation\SerializedName('NumberOfPeriods')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $numberOfPeriods = null;
    
    /**
     * The original ID of the rate plan charge.
     * 
     * 
     * **Character limit**: 32
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?string $originalId
     */
	#[\JMS\Serializer\Annotation\SerializedName('OriginalId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $originalId = null;
    
    /**
     * Determines when to calculate overage charges. If the value of the SmoothingMode field is null (not specified and not inherited from ProductRatePlanCharge.SmoothingMode), the value of this field is ignored.
     * 
     * 
     * **Character limit**: 20
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.OverageCalculationOption` 
     * 
     * @var ?string $overageCalculationOption
     */
	#[\JMS\Serializer\Annotation\SerializedName('OverageCalculationOption')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $overageCalculationOption = null;
    
    /**
     *  Query Filter 
     * 
     * @var ?float $overagePrice
     */
	#[\JMS\Serializer\Annotation\SerializedName('OveragePrice')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $overagePrice = null;
    
    /**
     *  Determines whether to credit the customer with unused units of usage.
     * 
     * 
     * 
     * **Character limit**: 20
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.OverageUnusedUnitsCreditOption` 
     * 
     * @var ?string $overageUnusedUnitsCreditOption
     */
	#[\JMS\Serializer\Annotation\SerializedName('OverageUnusedUnitsCreditOption')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $overageUnusedUnitsCreditOption = null;
    
    /**
     *  Query Filter 
     * 
     * @var ?float $price
     */
	#[\JMS\Serializer\Annotation\SerializedName('Price')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $price = null;
    
    /**
     *  Applies an automatic price change when a termed subscription is renewed.
     * 
     * 
     * 
     * **Character limit**:
     * 
     * 
     * **Values**: one of the following:
     * 
     * - `NoChange` (default)
     * - `SpecificPercentageValue`
     * - `UseLatestProductCatalogPricing`
     * 
     * 
     * @var ?string $priceChangeOption
     */
	#[\JMS\Serializer\Annotation\SerializedName('PriceChangeOption')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $priceChangeOption = null;
    
    /**
     *  Specifies the percentage to increase or decrease the price of renewed subscriptions. Use this field if the `ProductRatePlanCharge`.`PriceChangeOption` value is set to `SpecificPercentageValue`.
     * 
     * 
     * 
     * **Character limit**: 16
     * 
     * 
     * **Values**: a decimal value between -100 and 100 
     * 
     * @var ?float $priceIncreasePercentage
     */
	#[\JMS\Serializer\Annotation\SerializedName('PriceIncreasePercentage')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $priceIncreasePercentage = null;
    
    /**
     *  The date until when charges have been processed. When billing in arrears, such as usage, this field value is the the same as the `ChargedThroughDate` value. This date is the earliest date when a charge can be amended.
     * 
     * 
     * 
     * **Character limit**: 29
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?\DateTime $processedThroughDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('ProcessedThroughDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $processedThroughDate = null;
    
    /**
     *  The ID of the product rate plan charge associated with the subscription rate plan charge,
     * 
     * 
     * **Character limit**: 32
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.Id` 
     * 
     * @var string $productRatePlanChargeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('ProductRatePlanChargeId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $productRatePlanChargeId;
    
    /**
     *  The default quantity of units, such as the number of authors in a hosted wiki service. Valid for all charge models except for Flat Fee pricing. This field is only rquired if the charge model is tiered pricing or volume pricing.
     * 
     * 
     * 
     * **Character limit**: 16
     * 
     * 
     * **Values**: a valid quantity value 
     * 
     * @var ?float $quantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('Quantity')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $quantity = null;
    
    /**
     *  The ID of the rate plan associated with the rate plan charge.
     * 
     * 
     * 
     * **Character limit**: 32
     * 
     * 
     * **Values**: inherited from `RatePlan.Id` 
     * 
     * @var ?string $ratePlanId
     */
	#[\JMS\Serializer\Annotation\SerializedName('RatePlanId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ratePlanId = null;
    
    /**
     *  Associates this product rate plan charge with a specific revenue recognition code.
     * 
     * 
     * 
     * **Character limit**: 70
     * 
     * 
     * **Values**: a valid revenue recognition code 
     * 
     * @var ?string $revRecCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('RevRecCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $revRecCode = null;
    
    /**
     *  Specifies when revenue recognition begins.
     * 
     * 
     * 
     * **Character limit**: 22
     * 
     * 
     * **Values**: one of the following:
     * 
     * -  `ContractEffectiveDate`
     * 
     * -  `ServiceActivationDate`
     * 
     * -  `CustomerAcceptanceDate`
     * 
     * 
     * 
     * @var ?string $revRecTriggerCondition
     */
	#[\JMS\Serializer\Annotation\SerializedName('RevRecTriggerCondition')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $revRecTriggerCondition = null;
    
    /**
     *  Specifies the Revenue Recognition Rule that you want the Rate Plan Charge to use. This field can be updated when **Status** is `Draft`. By default, the Revenue Recognition Rule is inherited from the Product Rate Plan Charge. For Amend
     * 
     * calls, you can use this field only for NewProduct amendments. For Update
     * calls, you can use this field only to update subscriptions in draft status. Note that if you use this field to specify a Revenue Recognition Rule for the Rate Plan Charge, the rule will remain as specified even if you later change the rule used by the corresponding Product Rate Plan Charge. See [Z-Billing User Role](https://knowledgecenter.zuora.com/CF_Users_and_Administrators/A_Administrator_Settings/User_Roles/d_Billing_Roles) permission enabled to use this field.
     * 
     * 
     * 
     * **Character limit**: n/a
     * 
     * 
     * **Values**: name of an active Revenue Recognition Rule 
     * 
     * @var ?string $revenueRecognitionRuleName
     */
	#[\JMS\Serializer\Annotation\SerializedName('RevenueRecognitionRuleName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $revenueRecognitionRuleName = null;
    
    /**
     *  Specifies the number of units of measure (UOM) rolled over from previous periods. This field is applicable only to usage charges with overage models.
     * 
     * 
     * 
     * **Character limit**: 16
     * 
     * 
     * **Values**: automatically generated
     * 
     * **Note**:
     * 
     * - You cannot query or filter this field with other fields in a single query.
     * - To query or filter this field, you must specify and only specify the rate plan charge Id in the condition.
     * - You cannot use this field in the query or filter condition.
     * 
     * 
     * @var ?float $rolloverBalance
     */
	#[\JMS\Serializer\Annotation\SerializedName('RolloverBalance')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $rolloverBalance = null;
    
    /**
     *  The identifying number of the subscription rate plan segment. Segments are numbered sequentially, starting with 1.
     * 
     * 
     * 
     * **Character limit**: 2
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?int $segment
     */
	#[\JMS\Serializer\Annotation\SerializedName('Segment')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $segment = null;
    
    /**
     *  Customizes the number of months or weeks for the charges billing period. This field is only required if you set the value of the `BillingPeriod` field to `Specific Months` or `Specific Weeks`.
     * 
     * 
     * **Character limit**: 5
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.BillingPeriod` **Note:** You can override the value inherited from the Product Rate Plan Charge, but only when creating a new subscription or a New Product amendment. 
     * 
     * @var ?int $specificBillingPeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('SpecificBillingPeriod')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $specificBillingPeriod = null;
    
    /**
     *  The specific date on which the charge ends, in `yyyy-mm-dd` format.
     * 
     * 
     * 
     * **Character limit**: 29
     * 
     * 
     * 
     * **Note**:
     * 
     * - This field is only applicable when the `EndDateCondition` field is set to `SpecificEndDate`.
     * - If the subscription ends before the specific end date, the charge ends when the subscription ends. But if the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge will end on the specific end date.
     * 
     * 
     * @var ?\DateTime $specificEndDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('SpecificEndDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $specificEndDate = null;
    
    /**
     *  The total contract value (TCV) is the value of a single rate plan charge in a subscription over the lifetime of the subscription. This value does not represent all charges on the subscription. The TCV includes recurring charges and one-time charges, but it doesn't include usage charge.
     * 
     * 
     * 
     * **Character limit**: 16
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?float $tcv
     */
	#[\JMS\Serializer\Annotation\SerializedName('TCV')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $tcv = null;
    
    /**
     *  The date when the charge becomes effective and billing begins, in `yyyy-mm-dd` format. This field is only required if the `TriggerEvent` field is set to `SpecificDate`.
     * 
     * 
     * 
     * **Character limit**: 29
     * 
     * 
     * 
     * @var ?\DateTime $triggerDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('TriggerDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $triggerDate = null;
    
    /**
     *  Specifies when to start billing the customer for the charge.
     * 
     * **Note: **This field can be passed through the subscribe
     * and amend
     * calls and will override the default value set on the Product Rate Plan Charge.
     * 
     * 
     * **Character limit**: 18
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.TriggerEvent` and can be one of the following values:
     * 
     * - `ContractEffective`is the date when the subscription's contract goes into effect and the charge is ready to be billed. When previewing invoices with the subscribe call, if a charge's trigger event is set to `ContractEffective`, you must also set the `subscribes` > `SubscriptionData` > `Subscription` > `ContractEffectiveDate` field to a specific date to complete your preview. You cannot leave this field as blank.
     * - `ServiceActivation`is when the services or products for a subscription have been activated and the customers have access. When previewing invoices with the subscribe call, if a charge's trigger event is set to `ServiceActivation`, you must also set the `subscribes` > `SubscriptionData` > `Subscription` > `ServiceActivationDate` field to a specific date to complete your preview. You cannot leave this field as blank.
     * - `CustomerAcceptance`is when the customer accepts the services or products for a subscription. When previewing invoices with the subscribe call, if a charge's trigger event is set to `CustomerAcceptance`, you must also set the `subscribes` > `SubscriptionData` > `Subscription` > `CustomerAcceptanceDate` field to a specific date to complete your preview. You cannot leave this field as blank.
     * - `SpecificDate` is valid only on the RatePlanCharge.
     * 
     * 
     * @var ?string $triggerEvent
     */
	#[\JMS\Serializer\Annotation\SerializedName('TriggerEvent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $triggerEvent = null;
    
    /**
     *  Specifies the units to measure usage. Units of measure are configured in the web-based UI: **Z-Billing > Settings**.
     * 
     * 
     * 
     * **Character limit**: 25
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.UOM` 
     * 
     * @var ?string $uom
     */
	#[\JMS\Serializer\Annotation\SerializedName('UOM')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uom = null;
    
    /**
     *  Specifies the rate to credit a customer for unused units of usage. This field is applicable only for overage charge models when the `OverageUnusedUnitsCreditOption` field value is CreditBySpecificRate.
     * 
     * 
     * 
     * **Character limit**: 16
     * 
     * 
     * **Values**: a valid decimal value 
     * 
     * @var ?float $unusedUnitsCreditRates
     */
	#[\JMS\Serializer\Annotation\SerializedName('UnusedUnitsCreditRates')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $unusedUnitsCreditRates = null;
    
    /**
     *  Specifies the length of the period during which the charge is active. If this period ends before the subscription ends, the charge ends when this period ends.
     * 
     * 
     * 
     * **Character limit**: 5
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.UpToPeriods`
     * 
     * **Note**:
     * 
     * - You must use this field together with the `UpToPeriodsType` field to specify the time period. This field is only applicable only when the `EndDateCondition` field is set to `FixedPeriod`.
     * - You can override the value inherited from the Product Rate Plan Charge, but only when creating a new subscription or a New Product amendment.
     * - Use this field to override the value in `ProductRatePlanCharge.UpToPeriod`.
     * - If you override the value in this field, enter a whole number between 0 and 65535, exclusive.
     * - If the subscription end date is subsequently changed through a Renewal, or Terms and Conditions amendment, the charge end date will change accordingly up to the original period end.
     * 
     * 
     * @var ?int $upToPeriods
     */
	#[\JMS\Serializer\Annotation\SerializedName('UpToPeriods')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $upToPeriods = null;
    
    /**
     *  The period type used to define when the charge ends. This field can be updated when **Status** is `Draft`.
     * 
     * 
     * 
     * **Values**: one of the following:
     * 
     * - `Billing Periods` (default)
     * - `Days`
     * - `Weeks`
     * - `Months`
     * - `Years`
     * 
     * 
     * **Note**:
     * 
     * - You must use this field together with the `UpToPeriods` field to specify the time period.
     * - This field is only applicable only when the `EndDateCondition` field is set to `FixedPeriod`.
     * 
     * 
     * @var ?string $upToPeriodsType
     */
	#[\JMS\Serializer\Annotation\SerializedName('UpToPeriodsType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $upToPeriodsType = null;
    
    /**
     * The ID of the last user to update the object.
     * 
     * 
     * **Character limit**: 32
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?string $updatedById
     */
	#[\JMS\Serializer\Annotation\SerializedName('UpdatedById')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedById = null;
    
    /**
     *  The date when the object was last updated.
     * 
     * 
     * 
     * **Character limit**: 29
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?\DateTime $updatedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('UpdatedDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedDate = null;
    
    /**
     *  Determines how Zuora processes usage records for per-unit usage charges.
     * 
     * 
     * **Character limit**: 18
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?string $usageRecordRatingOption
     */
	#[\JMS\Serializer\Annotation\SerializedName('UsageRecordRatingOption')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $usageRecordRatingOption = null;
    
    /**
     *  Determines whether to define a new accounting code for the new discount charge.
     * 
     * 
     * 
     * **Character limit**: 5
     * 
     * 
     * **Values**: inherited from `ProductRatePlanCharge.UseDiscountSpecificAccountingCode` 
     * 
     * @var ?bool $useDiscountSpecificAccountingCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('UseDiscountSpecificAccountingCode')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $useDiscountSpecificAccountingCode = null;
    
    /**
     *  The version of the rate plan charge. Each time a charge is amended, Zuora creates a new version of the rate plan charge.
     * 
     * 
     * **Character limit**: 5
     * 
     * 
     * **Values**: automatically generated 
     * 
     * @var ?int $version
     */
	#[\JMS\Serializer\Annotation\SerializedName('Version')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $version = null;
    
    /**
     *  Specifies which day of the week as the bill cycle day (BCD) for the charge.
     * 
     * This feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
     * 
     * 
     * 
     * 
     * **Values**: one of the following:
     * 
     * - `Sunday`
     * - `Monday`
     * - `Tuesday`
     * - `Wednesday`
     * - `Thursday`
     * - `Friday`
     * - `Saturday`
     * 
     * 
     * @var ?string $weeklyBillCycleDay
     */
	#[\JMS\Serializer\Annotation\SerializedName('WeeklyBillCycleDay')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $weeklyBillCycleDay = null;
    
	public function __construct()
	{
		$this->accountingCode = null;
		$this->applyDiscountTo = null;
		$this->billCycleDay = null;
		$this->billCycleType = null;
		$this->billingPeriod = null;
		$this->billingPeriodAlignment = null;
		$this->billingTiming = null;
		$this->chargeModel = null;
		$this->chargeNumber = null;
		$this->chargeType = null;
		$this->chargedThroughDate = null;
		$this->createdById = null;
		$this->createdDate = null;
		$this->dmrc = null;
		$this->dtcv = null;
		$this->description = null;
		$this->discountAmount = null;
		$this->discountLevel = null;
		$this->discountPercentage = null;
		$this->effectiveEndDate = null;
		$this->effectiveStartDate = null;
		$this->endDateCondition = null;
		$this->includedUnits = null;
		$this->isLastSegment = null;
		$this->listPriceBase = null;
		$this->mrr = null;
		$this->name = null;
		$this->numberOfPeriods = null;
		$this->originalId = null;
		$this->overageCalculationOption = null;
		$this->overagePrice = null;
		$this->overageUnusedUnitsCreditOption = null;
		$this->price = null;
		$this->priceChangeOption = null;
		$this->priceIncreasePercentage = null;
		$this->processedThroughDate = null;
		$this->productRatePlanChargeId = "";
		$this->quantity = null;
		$this->ratePlanId = null;
		$this->revRecCode = null;
		$this->revRecTriggerCondition = null;
		$this->revenueRecognitionRuleName = null;
		$this->rolloverBalance = null;
		$this->segment = null;
		$this->specificBillingPeriod = null;
		$this->specificEndDate = null;
		$this->tcv = null;
		$this->triggerDate = null;
		$this->triggerEvent = null;
		$this->uom = null;
		$this->unusedUnitsCreditRates = null;
		$this->upToPeriods = null;
		$this->upToPeriodsType = null;
		$this->updatedById = null;
		$this->updatedDate = null;
		$this->usageRecordRatingOption = null;
		$this->useDiscountSpecificAccountingCode = null;
		$this->version = null;
		$this->weeklyBillCycleDay = null;
	}
}
