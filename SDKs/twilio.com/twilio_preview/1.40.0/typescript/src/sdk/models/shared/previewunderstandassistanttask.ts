/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Created
 */
export class PreviewUnderstandAssistantTask extends SpeakeasyBase {
  /**
   * The unique ID of the Account that created this Task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * User-provided HTTP endpoint where from the assistant fetches actions
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actions_url" })
  actionsUrl?: string;

  /**
   * The unique ID of the Assistant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assistant_sid" })
  assistantSid?: string;

  /**
   * The date that this resource was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  /**
   * The date that this resource was last updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateUpdated?: Date;

  /**
   * A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "friendly_name" })
  friendlyName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  links?: Record<string, any>;

  /**
   * A 34 character string that uniquely identifies this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  /**
   * A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unique_name" })
  uniqueName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
