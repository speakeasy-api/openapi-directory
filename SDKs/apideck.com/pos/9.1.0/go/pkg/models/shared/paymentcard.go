// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PaymentCardCardBrandEnum - The first six digits of the card number, known as the Bank Identification Number (BIN).
type PaymentCardCardBrandEnum string

const (
	PaymentCardCardBrandEnumVisa              PaymentCardCardBrandEnum = "visa"
	PaymentCardCardBrandEnumMastercard        PaymentCardCardBrandEnum = "mastercard"
	PaymentCardCardBrandEnumAmex              PaymentCardCardBrandEnum = "amex"
	PaymentCardCardBrandEnumDiscover          PaymentCardCardBrandEnum = "discover"
	PaymentCardCardBrandEnumDiscoverDiners    PaymentCardCardBrandEnum = "discover-diners"
	PaymentCardCardBrandEnumJcb               PaymentCardCardBrandEnum = "jcb"
	PaymentCardCardBrandEnumChinaUnionpay     PaymentCardCardBrandEnum = "china-unionpay"
	PaymentCardCardBrandEnumSquareGiftCard    PaymentCardCardBrandEnum = "square-gift-card"
	PaymentCardCardBrandEnumSquareCapitalCard PaymentCardCardBrandEnum = "square-capital-card"
	PaymentCardCardBrandEnumInterac           PaymentCardCardBrandEnum = "interac"
	PaymentCardCardBrandEnumEftpos            PaymentCardCardBrandEnum = "eftpos"
	PaymentCardCardBrandEnumFelica            PaymentCardCardBrandEnum = "felica"
	PaymentCardCardBrandEnumEbt               PaymentCardCardBrandEnum = "ebt"
	PaymentCardCardBrandEnumOther             PaymentCardCardBrandEnum = "other"
)

func (e *PaymentCardCardBrandEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "visa":
		fallthrough
	case "mastercard":
		fallthrough
	case "amex":
		fallthrough
	case "discover":
		fallthrough
	case "discover-diners":
		fallthrough
	case "jcb":
		fallthrough
	case "china-unionpay":
		fallthrough
	case "square-gift-card":
		fallthrough
	case "square-capital-card":
		fallthrough
	case "interac":
		fallthrough
	case "eftpos":
		fallthrough
	case "felica":
		fallthrough
	case "ebt":
		fallthrough
	case "other":
		*e = PaymentCardCardBrandEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentCardCardBrandEnum: %s", s)
	}
}

type PaymentCardCardTypeEnum string

const (
	PaymentCardCardTypeEnumCredit  PaymentCardCardTypeEnum = "credit"
	PaymentCardCardTypeEnumDebit   PaymentCardCardTypeEnum = "debit"
	PaymentCardCardTypeEnumPrepaid PaymentCardCardTypeEnum = "prepaid"
	PaymentCardCardTypeEnumOther   PaymentCardCardTypeEnum = "other"
)

func (e *PaymentCardCardTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "credit":
		fallthrough
	case "debit":
		fallthrough
	case "prepaid":
		fallthrough
	case "other":
		*e = PaymentCardCardTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentCardCardTypeEnum: %s", s)
	}
}

type PaymentCardPrepaidTypeEnum string

const (
	PaymentCardPrepaidTypeEnumNonPrepaid PaymentCardPrepaidTypeEnum = "non-prepaid"
	PaymentCardPrepaidTypeEnumPrepaid    PaymentCardPrepaidTypeEnum = "prepaid"
	PaymentCardPrepaidTypeEnumUnknown    PaymentCardPrepaidTypeEnum = "unknown"
)

func (e *PaymentCardPrepaidTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "non-prepaid":
		fallthrough
	case "prepaid":
		fallthrough
	case "unknown":
		*e = PaymentCardPrepaidTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentCardPrepaidTypeEnum: %s", s)
	}
}

// PaymentCardInput - A card's non-confidential details.
type PaymentCardInput struct {
	BillingAddress *Address `json:"billing_address,omitempty"`
	// The first six digits of the card number, known as the Bank Identification Number (BIN).
	Bin *string `json:"bin,omitempty"`
	// The first six digits of the card number, known as the Bank Identification Number (BIN).
	CardBrand      *PaymentCardCardBrandEnum `json:"card_brand,omitempty"`
	CardType       *PaymentCardCardTypeEnum  `json:"card_type,omitempty"`
	CardholderName *string                   `json:"cardholder_name,omitempty"`
	CustomerID     *string                   `json:"customer_id,omitempty"`
	// Indicates whether or not a card can be used for payments.
	Enabled *bool `json:"enabled,omitempty"`
	// The expiration month of the associated card as an integer between 1 and 12.
	ExpMonth *int64 `json:"exp_month,omitempty"`
	// The four-digit year of the card's expiration date.
	ExpYear     *int64                      `json:"exp_year,omitempty"`
	Fingerprint *string                     `json:"fingerprint,omitempty"`
	Last4       *string                     `json:"last_4,omitempty"`
	MerchantID  *string                     `json:"merchant_id,omitempty"`
	PrepaidType *PaymentCardPrepaidTypeEnum `json:"prepaid_type,omitempty"`
	// An optional user-defined reference ID that associates this record with another entity in an external system. For example, a customer ID from an external customer management system.
	ReferenceID *string `json:"reference_id,omitempty"`
	Version     *string `json:"version,omitempty"`
}

// PaymentCard - A card's non-confidential details.
type PaymentCard struct {
	BillingAddress *Address `json:"billing_address,omitempty"`
	// The first six digits of the card number, known as the Bank Identification Number (BIN).
	Bin *string `json:"bin,omitempty"`
	// The first six digits of the card number, known as the Bank Identification Number (BIN).
	CardBrand      *PaymentCardCardBrandEnum `json:"card_brand,omitempty"`
	CardType       *PaymentCardCardTypeEnum  `json:"card_type,omitempty"`
	CardholderName *string                   `json:"cardholder_name,omitempty"`
	CustomerID     *string                   `json:"customer_id,omitempty"`
	// Indicates whether or not a card can be used for payments.
	Enabled *bool `json:"enabled,omitempty"`
	// The expiration month of the associated card as an integer between 1 and 12.
	ExpMonth *int64 `json:"exp_month,omitempty"`
	// The four-digit year of the card's expiration date.
	ExpYear     *int64  `json:"exp_year,omitempty"`
	Fingerprint *string `json:"fingerprint,omitempty"`
	// A unique identifier for an object.
	ID          *string                     `json:"id,omitempty"`
	Last4       *string                     `json:"last_4,omitempty"`
	MerchantID  *string                     `json:"merchant_id,omitempty"`
	PrepaidType *PaymentCardPrepaidTypeEnum `json:"prepaid_type,omitempty"`
	// An optional user-defined reference ID that associates this record with another entity in an external system. For example, a customer ID from an external customer management system.
	ReferenceID *string `json:"reference_id,omitempty"`
	Version     *string `json:"version,omitempty"`
}
