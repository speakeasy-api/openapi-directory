// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartContinuousExportXAmzTargetEnum
type StartContinuousExportXAmzTargetEnum string

const (
	StartContinuousExportXAmzTargetEnumAwsPoseidonServiceV20151101StartContinuousExport StartContinuousExportXAmzTargetEnum = "AWSPoseidonService_V2015_11_01.StartContinuousExport"
)

func (e StartContinuousExportXAmzTargetEnum) ToPointer() *StartContinuousExportXAmzTargetEnum {
	return &e
}

func (e *StartContinuousExportXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSPoseidonService_V2015_11_01.StartContinuousExport":
		*e = StartContinuousExportXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartContinuousExportXAmzTargetEnum: %v", v)
	}
}

type StartContinuousExportRequest struct {
	RequestBody       map[string]interface{}              `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        StartContinuousExportXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartContinuousExportResponse struct {
	// AuthorizationErrorException
	AuthorizationErrorException interface{}
	// ConflictErrorException
	ConflictErrorException interface{}
	ContentType            string
	// HomeRegionNotSetException
	HomeRegionNotSetException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ServerInternalErrorException
	ServerInternalErrorException interface{}
	// Success
	StartContinuousExportResponse *shared.StartContinuousExportResponse
	StatusCode                    int
	RawResponse                   *http.Response
}
