<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TransactionsEnrichGetRequest - TransactionsEnrichGetRequest defines the request schema for `/transactions/enrich`.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TransactionsEnrichGetRequest
{
    /**
     * The account type for the requested transactions (either `depository` or `credit`).
     * 
     * @var string $accountType
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $accountType;
    
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     * 
     * @var ?string $clientId
     */
	#[\JMS\Serializer\Annotation\SerializedName('client_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientId = null;
    
    /**
     * An optional object to be used with the request.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TransactionsEnrichRequestOptions $options
     */
	#[\JMS\Serializer\Annotation\SerializedName('options')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TransactionsEnrichRequestOptions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TransactionsEnrichRequestOptions $options = null;
    
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     * 
     * @var ?string $secret
     */
	#[\JMS\Serializer\Annotation\SerializedName('secret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $secret = null;
    
    /**
     * An array of transaction objects to be enriched by Plaid. Maximum of 100 transactions per request.
     * 
     * @var array<array<string, mixed>> $transactions
     */
	#[\JMS\Serializer\Annotation\SerializedName('transactions')]
    #[\JMS\Serializer\Annotation\Type('array<array<string, mixed>>')]
    public array $transactions;
    
	public function __construct()
	{
		$this->accountType = "";
		$this->clientId = null;
		$this->options = null;
		$this->secret = null;
		$this->transactions = [];
	}
}
