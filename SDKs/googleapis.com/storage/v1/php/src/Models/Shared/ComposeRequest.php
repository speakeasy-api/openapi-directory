<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ComposeRequest - A Compose request.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ComposeRequest
{
    /**
     * An object.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Object $destination
     */
	#[\JMS\Serializer\Annotation\SerializedName('destination')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Object')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Object $destination = null;
    
    /**
     * The kind of item this is.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * The list of source objects that will be concatenated into a single object.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ComposeRequestSourceObjects> $sourceObjects
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceObjects')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ComposeRequestSourceObjects>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $sourceObjects = null;
    
	public function __construct()
	{
		$this->destination = null;
		$this->kind = null;
		$this->sourceObjects = null;
	}
}
