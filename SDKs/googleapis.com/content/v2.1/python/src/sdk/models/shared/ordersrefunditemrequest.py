"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import orderscustombatchrequestentryrefunditemitem as shared_orderscustombatchrequestentryrefunditemitem
from ..shared import orderscustombatchrequestentryrefunditemshipping as shared_orderscustombatchrequestentryrefunditemshipping
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrdersRefundItemRequest:
    
    items: Optional[list[shared_orderscustombatchrequestentryrefunditemitem.OrdersCustomBatchRequestEntryRefundItemItem]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('items'), 'exclude': lambda f: f is None }})
    r"""The items that are refunded. Either Item or Shipping must be provided in the request."""  
    operation_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operationId'), 'exclude': lambda f: f is None }})
    r"""The ID of the operation. Unique across all operations for a given order."""  
    reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reason'), 'exclude': lambda f: f is None }})
    r"""The reason for the refund. Acceptable values are: - \\"`shippingCostAdjustment`\\" - \\"`priceAdjustment`\\" - \\"`taxAdjustment`\\" - \\"`feeAdjustment`\\" - \\"`courtesyAdjustment`\\" - \\"`adjustment`\\" - \\"`customerCancelled`\\" - \\"`noInventory`\\" - \\"`productNotAsDescribed`\\" - \\"`undeliverableShippingAddress`\\" - \\"`wrongProductShipped`\\" - \\"`lateShipmentCredit`\\" - \\"`deliveredLateByCarrier`\\" - \\"`productArrivedDamaged`\\" """  
    reason_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reasonText'), 'exclude': lambda f: f is None }})
    r"""The explanation of the reason."""  
    shipping: Optional[shared_orderscustombatchrequestentryrefunditemshipping.OrdersCustomBatchRequestEntryRefundItemShipping] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shipping'), 'exclude': lambda f: f is None }})  
    