// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ArtistAPIGetOnePathParams struct {
	// Artist ID (required).
	ID int `pathParam:"style=simple,explode=false,name=id"`
}

// ArtistAPIGetOneFieldsEnum - List of optional fields (optional). Possible values are Description, Groups, Members, Names, Tags, WebLinks.
type ArtistAPIGetOneFieldsEnum string

const (
	ArtistAPIGetOneFieldsEnumNone               ArtistAPIGetOneFieldsEnum = "None"
	ArtistAPIGetOneFieldsEnumAdditionalNames    ArtistAPIGetOneFieldsEnum = "AdditionalNames"
	ArtistAPIGetOneFieldsEnumArtistLinks        ArtistAPIGetOneFieldsEnum = "ArtistLinks"
	ArtistAPIGetOneFieldsEnumArtistLinksReverse ArtistAPIGetOneFieldsEnum = "ArtistLinksReverse"
	ArtistAPIGetOneFieldsEnumBaseVoicebank      ArtistAPIGetOneFieldsEnum = "BaseVoicebank"
	ArtistAPIGetOneFieldsEnumDescription        ArtistAPIGetOneFieldsEnum = "Description"
	ArtistAPIGetOneFieldsEnumMainPicture        ArtistAPIGetOneFieldsEnum = "MainPicture"
	ArtistAPIGetOneFieldsEnumNames              ArtistAPIGetOneFieldsEnum = "Names"
	ArtistAPIGetOneFieldsEnumTags               ArtistAPIGetOneFieldsEnum = "Tags"
	ArtistAPIGetOneFieldsEnumWebLinks           ArtistAPIGetOneFieldsEnum = "WebLinks"
)

func (e *ArtistAPIGetOneFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AdditionalNames":
		fallthrough
	case "ArtistLinks":
		fallthrough
	case "ArtistLinksReverse":
		fallthrough
	case "BaseVoicebank":
		fallthrough
	case "Description":
		fallthrough
	case "MainPicture":
		fallthrough
	case "Names":
		fallthrough
	case "Tags":
		fallthrough
	case "WebLinks":
		*e = ArtistAPIGetOneFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ArtistAPIGetOneFieldsEnum: %s", s)
	}
}

// ArtistAPIGetOneLangEnum - Content language preference (optional).
type ArtistAPIGetOneLangEnum string

const (
	ArtistAPIGetOneLangEnumDefault  ArtistAPIGetOneLangEnum = "Default"
	ArtistAPIGetOneLangEnumJapanese ArtistAPIGetOneLangEnum = "Japanese"
	ArtistAPIGetOneLangEnumRomaji   ArtistAPIGetOneLangEnum = "Romaji"
	ArtistAPIGetOneLangEnumEnglish  ArtistAPIGetOneLangEnum = "English"
)

func (e *ArtistAPIGetOneLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = ArtistAPIGetOneLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ArtistAPIGetOneLangEnum: %s", s)
	}
}

// ArtistAPIGetOneRelationsEnum - List of artist relations (optional). Possible values are LatestAlbums, PopularAlbums, LatestSongs, PopularSongs, All
type ArtistAPIGetOneRelationsEnum string

const (
	ArtistAPIGetOneRelationsEnumNone          ArtistAPIGetOneRelationsEnum = "None"
	ArtistAPIGetOneRelationsEnumLatestAlbums  ArtistAPIGetOneRelationsEnum = "LatestAlbums"
	ArtistAPIGetOneRelationsEnumLatestEvents  ArtistAPIGetOneRelationsEnum = "LatestEvents"
	ArtistAPIGetOneRelationsEnumLatestSongs   ArtistAPIGetOneRelationsEnum = "LatestSongs"
	ArtistAPIGetOneRelationsEnumPopularAlbums ArtistAPIGetOneRelationsEnum = "PopularAlbums"
	ArtistAPIGetOneRelationsEnumPopularSongs  ArtistAPIGetOneRelationsEnum = "PopularSongs"
	ArtistAPIGetOneRelationsEnumAll           ArtistAPIGetOneRelationsEnum = "All"
)

func (e *ArtistAPIGetOneRelationsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "LatestAlbums":
		fallthrough
	case "LatestEvents":
		fallthrough
	case "LatestSongs":
		fallthrough
	case "PopularAlbums":
		fallthrough
	case "PopularSongs":
		fallthrough
	case "All":
		*e = ArtistAPIGetOneRelationsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ArtistAPIGetOneRelationsEnum: %s", s)
	}
}

type ArtistAPIGetOneQueryParams struct {
	// List of optional fields (optional). Possible values are Description, Groups, Members, Names, Tags, WebLinks.
	Fields *ArtistAPIGetOneFieldsEnum `queryParam:"style=form,explode=true,name=fields"`
	// Content language preference (optional).
	Lang *ArtistAPIGetOneLangEnum `queryParam:"style=form,explode=true,name=lang"`
	// List of artist relations (optional). Possible values are LatestAlbums, PopularAlbums, LatestSongs, PopularSongs, All
	Relations *ArtistAPIGetOneRelationsEnum `queryParam:"style=form,explode=true,name=relations"`
}

type ArtistAPIGetOneRequest struct {
	PathParams  ArtistAPIGetOnePathParams
	QueryParams ArtistAPIGetOneQueryParams
}

type ArtistAPIGetOneResponse struct {
	// OK
	ArtistForAPIContract *shared.ArtistForAPIContract
	Body                 []byte
	ContentType          string
	StatusCode           int
	RawResponse          *http.Response
}
