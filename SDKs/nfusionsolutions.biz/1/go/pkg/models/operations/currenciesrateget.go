// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CurrenciesRateGETFormatEnum - to override content negotiation specify a value of json or xml
type CurrenciesRateGETFormatEnum string

const (
	CurrenciesRateGETFormatEnumJSON CurrenciesRateGETFormatEnum = "json"
	CurrenciesRateGETFormatEnumXML  CurrenciesRateGETFormatEnum = "xml"
)

func (e CurrenciesRateGETFormatEnum) ToPointer() *CurrenciesRateGETFormatEnum {
	return &e
}

func (e *CurrenciesRateGETFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "xml":
		*e = CurrenciesRateGETFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CurrenciesRateGETFormatEnum: %v", v)
	}
}

type CurrenciesRateGETRequest struct {
	// to override content negotiation specify a value of json or xml
	Format *CurrenciesRateGETFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// comma separated list of currency pairs. For example: USD/CAD,USD/EUR,USD/AUD
	Pairs string `queryParam:"style=form,explode=true,name=pairs"`
}

type CurrenciesRateGETResponse struct {
	Body        []byte
	ContentType string
	// Success
	RateResponses []shared.RateResponse
	StatusCode    int
	RawResponse   *http.Response
}
