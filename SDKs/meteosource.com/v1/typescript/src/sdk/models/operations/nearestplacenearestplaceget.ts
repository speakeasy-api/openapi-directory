/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class NearestPlaceNearestPlaceGetSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Key",
  })
  apiKeyHeader: string;
}

/**
 * An enumeration.
 */
export enum NearestPlaceNearestPlaceGetLanguageLanguageEnum {
  Cs = "cs",
  En = "en",
  De = "de",
  Es = "es",
  Fr = "fr",
  Pl = "pl",
  Pt = "pt",
}

export class NearestPlaceNearestPlaceGetRequest extends SpeakeasyBase {
  /**
   * Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=key" })
  key?: string;

  /**
   * The language of text summaries and place names (variable names are never translated). Available languages are:
   *
   * @remarks
   *
   *    * ``en``: English
   *    * ``es``: Spanish
   *    * ``fr``: French
   *    * ``de``: German
   *    * ``pl``: Polish
   *    * ``pt``: Portuguese
   *    * ``cs``: Czech
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=language",
  })
  language?: NearestPlaceNearestPlaceGetLanguageLanguageEnum;

  /**
   * Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=lat" })
  lat: string;

  /**
   * Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=lon" })
  lon: string;
}

export class NearestPlaceNearestPlaceGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Successful Response
   */
  @SpeakeasyMetadata()
  findPlacesModel?: shared.FindPlacesModel;

  /**
   * Error in passed parameter.
   */
  @SpeakeasyMetadata()
  generalRequestError?: shared.GeneralRequestError;

  /**
   * Validation Error
   */
  @SpeakeasyMetadata()
  httpValidationError?: shared.HTTPValidationError;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
