"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudrecommendationenginev1beta1featuremapfloatlist as shared_googlecloudrecommendationenginev1beta1featuremapfloatlist
from ..shared import googlecloudrecommendationenginev1beta1featuremapstringlist as shared_googlecloudrecommendationenginev1beta1featuremapstringlist
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudRecommendationengineV1beta1FeatureMap:
    r"""FeatureMap represents extra features that customers want to include in the recommendation model for catalogs/user events as categorical/numerical features."""
    
    categorical_features: Optional[dict[str, shared_googlecloudrecommendationenginev1beta1featuremapstringlist.GoogleCloudRecommendationengineV1beta1FeatureMapStringList]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('categoricalFeatures'), 'exclude': lambda f: f is None }})
    r"""Categorical features that can take on one of a limited number of possible values. Some examples would be the brand/maker of a product, or country of a customer. Feature names and values must be UTF-8 encoded strings. For example: `{ \\"colors\\": {\\"value\\": [\\"yellow\\", \\"green\\"]}, \\"sizes\\": {\\"value\\":[\\"S\\", \\"M\\"]}`"""  
    numerical_features: Optional[dict[str, shared_googlecloudrecommendationenginev1beta1featuremapfloatlist.GoogleCloudRecommendationengineV1beta1FeatureMapFloatList]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numericalFeatures'), 'exclude': lambda f: f is None }})
    r"""Numerical features. Some examples would be the height/weight of a product, or age of a customer. Feature names must be UTF-8 encoded strings. For example: `{ \\"lengths_cm\\": {\\"value\\":[2.3, 15.4]}, \\"heights_cm\\": {\\"value\\":[8.1, 6.4]} }`"""  
    