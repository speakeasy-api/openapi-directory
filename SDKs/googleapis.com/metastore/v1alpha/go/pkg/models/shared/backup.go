// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BackupStateEnum - Output only. The current state of the backup.
type BackupStateEnum string

const (
	BackupStateEnumStateUnspecified BackupStateEnum = "STATE_UNSPECIFIED"
	BackupStateEnumCreating         BackupStateEnum = "CREATING"
	BackupStateEnumDeleting         BackupStateEnum = "DELETING"
	BackupStateEnumActive           BackupStateEnum = "ACTIVE"
	BackupStateEnumFailed           BackupStateEnum = "FAILED"
	BackupStateEnumRestoring        BackupStateEnum = "RESTORING"
)

func (e *BackupStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "CREATING":
		fallthrough
	case "DELETING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "FAILED":
		fallthrough
	case "RESTORING":
		*e = BackupStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BackupStateEnum: %s", s)
	}
}

// Backup - The details of a backup resource.
type Backup struct {
	// Output only. The time when the backup was started.
	CreateTime *string `json:"createTime,omitempty"`
	// The description of the backup.
	Description *string `json:"description,omitempty"`
	// Output only. The time when the backup finished creating.
	EndTime *string `json:"endTime,omitempty"`
	// Immutable. The relative resource name of the backup, in the following form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}
	Name *string `json:"name,omitempty"`
	// Output only. Services that are restoring from the backup.
	RestoringServices []string `json:"restoringServices,omitempty"`
	// A managed metastore service that serves metadata queries.
	ServiceRevision *Service `json:"serviceRevision,omitempty"`
	// Output only. The current state of the backup.
	State *BackupStateEnum `json:"state,omitempty"`
}

// BackupInput - The details of a backup resource.
type BackupInput struct {
	// The description of the backup.
	Description *string `json:"description,omitempty"`
	// Immutable. The relative resource name of the backup, in the following form:projects/{project_number}/locations/{location_id}/services/{service_id}/backups/{backup_id}
	Name *string `json:"name,omitempty"`
	// A managed metastore service that serves metadata queries.
	ServiceRevision *ServiceInput `json:"serviceRevision,omitempty"`
}
