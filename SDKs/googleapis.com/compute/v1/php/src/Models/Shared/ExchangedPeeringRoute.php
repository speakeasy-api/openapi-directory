<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ExchangedPeeringRoute
{
    /**
     * The destination range of the route.
     * 
     * @var ?string $destRange
     */
	#[\JMS\Serializer\Annotation\SerializedName('destRange')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destRange = null;
    
    /**
     * True if the peering route has been imported from a peer. The actual import happens if the field networkPeering.importCustomRoutes is true for this network, and networkPeering.exportCustomRoutes is true for the peer network, and the import does not result in a route conflict.
     * 
     * @var ?bool $imported
     */
	#[\JMS\Serializer\Annotation\SerializedName('imported')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $imported = null;
    
    /**
     * The region of peering route next hop, only applies to dynamic routes.
     * 
     * @var ?string $nextHopRegion
     */
	#[\JMS\Serializer\Annotation\SerializedName('nextHopRegion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nextHopRegion = null;
    
    /**
     * The priority of the peering route.
     * 
     * @var ?int $priority
     */
	#[\JMS\Serializer\Annotation\SerializedName('priority')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $priority = null;
    
    /**
     * The type of the peering route.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ExchangedPeeringRouteTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ExchangedPeeringRouteTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ExchangedPeeringRouteTypeEnum $type = null;
    
	public function __construct()
	{
		$this->destRange = null;
		$this->imported = null;
		$this->nextHopRegion = null;
		$this->priority = null;
		$this->type = null;
	}
}
