<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Projects 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Lists all contacts for the resource that are subscribed to the specified notification categories, including contacts inherited from any parent resources.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsComputeRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsComputeSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsComputeResponse
     */
	public function essentialcontactsProjectsContactsCompute(
        \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsComputeRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsComputeSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsComputeResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{parent}/contacts:compute', \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsComputeRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsComputeRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsComputeResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->googleCloudEssentialcontactsV1ComputeContactsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GoogleCloudEssentialcontactsV1ComputeContactsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Adds a new contact for a resource.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsCreateRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsCreateSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsCreateResponse
     */
	public function essentialcontactsProjectsContactsCreate(
        \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsCreateRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsCreateSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsCreateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{parent}/contacts', \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsCreateRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "googleCloudEssentialcontactsV1ContactInput", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsCreateRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsCreateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->googleCloudEssentialcontactsV1Contact = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GoogleCloudEssentialcontactsV1Contact', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Deletes a contact.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsDeleteRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsDeleteSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsDeleteResponse
     */
	public function essentialcontactsProjectsContactsDelete(
        \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsDeleteRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsDeleteSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsDeleteResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{name}', \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsDeleteRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsDeleteRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsDeleteResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->googleProtobufEmpty = $serializer->deserialize((string)$httpResponse->getBody(), 'array<string, mixed>', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Gets a single contact.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsGetResponse
     */
	public function essentialcontactsProjectsContactsGet(
        \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{name}', \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->googleCloudEssentialcontactsV1Contact = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GoogleCloudEssentialcontactsV1Contact', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Lists the contacts that have been set on a resource.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsListResponse
     */
	public function essentialcontactsProjectsContactsList(
        \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{parent}/contacts', \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsListRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->googleCloudEssentialcontactsV1ListContactsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GoogleCloudEssentialcontactsV1ListContactsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Updates a contact. Note: A contact's email address cannot be changed.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsPatchRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsPatchSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsPatchResponse
     */
	public function essentialcontactsProjectsContactsPatch(
        \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsPatchRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsPatchSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsPatchResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{name}', \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsPatchRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "googleCloudEssentialcontactsV1ContactInput", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsPatchRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('PATCH', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsPatchResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->googleCloudEssentialcontactsV1Contact = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GoogleCloudEssentialcontactsV1Contact', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Allows a contact admin to send a test message to contact to verify that it has been configured correctly.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsSendTestMessageRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsSendTestMessageSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsSendTestMessageResponse
     */
	public function essentialcontactsProjectsContactsSendTestMessage(
        \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsSendTestMessageRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsSendTestMessageSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsSendTestMessageResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1/{resource}/contacts:sendTestMessage', \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsSendTestMessageRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "googleCloudEssentialcontactsV1SendTestMessageRequest", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsSendTestMessageRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\EssentialcontactsProjectsContactsSendTestMessageResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->googleProtobufEmpty = $serializer->deserialize((string)$httpResponse->getBody(), 'array<string, mixed>', 'json');
            }
        }

        return $response;
    }
}