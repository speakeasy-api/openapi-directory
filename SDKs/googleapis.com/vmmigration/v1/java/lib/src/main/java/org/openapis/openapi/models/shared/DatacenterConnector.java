/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DatacenterConnector - DatacenterConnector message describes a connector between the Source and Google Cloud, which is installed on a vmware datacenter (an OVA vm installed by the user) to connect the Datacenter to Google Cloud and support vm migration data transfer.
 */
public class DatacenterConnector {
    /**
     * Output only. Appliance OVA version. This is the OVA which is manually installed by the user and contains the infrastructure for the automatically updatable components on the appliance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applianceInfrastructureVersion")
    public String applianceInfrastructureVersion;

    public DatacenterConnector withApplianceInfrastructureVersion(String applianceInfrastructureVersion) {
        this.applianceInfrastructureVersion = applianceInfrastructureVersion;
        return this;
    }
    
    /**
     * Output only. Appliance last installed update bundle version. This is the version of the automatically updatable components on the appliance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applianceSoftwareVersion")
    public String applianceSoftwareVersion;

    public DatacenterConnector withApplianceSoftwareVersion(String applianceSoftwareVersion) {
        this.applianceSoftwareVersion = applianceSoftwareVersion;
        return this;
    }
    
    /**
     * Holds informatiom about the available versions for upgrade.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availableVersions")
    public AvailableUpdates availableVersions;

    public DatacenterConnector withAvailableVersions(AvailableUpdates availableVersions) {
        this.availableVersions = availableVersions;
        return this;
    }
    
    /**
     * Output only. The communication channel between the datacenter connector and Google Cloud.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bucket")
    public String bucket;

    public DatacenterConnector withBucket(String bucket) {
        this.bucket = bucket;
        return this;
    }
    
    /**
     * Output only. The time the connector was created (as an API call, not when it was actually installed).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public DatacenterConnector withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public Status error;

    public DatacenterConnector withError(Status error) {
        this.error = error;
        return this;
    }
    
    /**
     * Output only. The connector's name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public DatacenterConnector withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Immutable. A unique key for this connector. This key is internal to the OVA connector and is supplied with its creation during the registration process and can not be modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registrationId")
    public String registrationId;

    public DatacenterConnector withRegistrationId(String registrationId) {
        this.registrationId = registrationId;
        return this;
    }
    
    /**
     * The service account to use in the connector when communicating with the cloud.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccount")
    public String serviceAccount;

    public DatacenterConnector withServiceAccount(String serviceAccount) {
        this.serviceAccount = serviceAccount;
        return this;
    }
    
    /**
     * Output only. State of the DatacenterConnector, as determined by the health checks.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public DatacenterConnectorStateEnum state;

    public DatacenterConnector withState(DatacenterConnectorStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Output only. The time the state was last set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stateTime")
    public String stateTime;

    public DatacenterConnector withStateTime(String stateTime) {
        this.stateTime = stateTime;
        return this;
    }
    
    /**
     * Output only. The last time the connector was updated with an API call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public DatacenterConnector withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * UpgradeStatus contains information about upgradeAppliance operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("upgradeStatus")
    public UpgradeStatus upgradeStatus;

    public DatacenterConnector withUpgradeStatus(UpgradeStatus upgradeStatus) {
        this.upgradeStatus = upgradeStatus;
        return this;
    }
    
    /**
     * The version running in the DatacenterConnector. This is supplied by the OVA connector during the registration process and can not be modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public String version;

    public DatacenterConnector withVersion(String version) {
        this.version = version;
        return this;
    }
    
    public DatacenterConnector(){}
}
