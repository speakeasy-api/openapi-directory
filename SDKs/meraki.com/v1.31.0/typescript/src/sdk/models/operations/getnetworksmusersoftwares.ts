/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetNetworkSmUserSoftwaresRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userId",
  })
  userId: string;
}

export class GetNetworkSmUserSoftwares200ApplicationJSON extends SpeakeasyBase {
  /**
   * The Meraki managed application Id for this record on a particular device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appId" })
  appId?: string;

  /**
   * The size of the software bundle.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bundleSize" })
  bundleSize?: number;

  /**
   * When the Meraki record for the software was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  createdAt?: string;

  /**
   * The Meraki managed device Id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deviceId" })
  deviceId?: string;

  /**
   * The size of the data stored in the application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dynamicSize" })
  dynamicSize?: number;

  /**
   * The Meraki software Id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Software bundle identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "identifier" })
  identifier?: string;

  /**
   * When the Software was installed on the device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "installedAt" })
  installedAt?: string;

  /**
   * A boolean indicating whether or not an iOS redemption code was used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "iosRedemptionCode" })
  iosRedemptionCode?: boolean;

  /**
   * A boolean indicating whether or not the software is managed by Meraki.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isManaged" })
  isManaged?: boolean;

  /**
   * The itunes numerical identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "itunesId" })
  itunesId?: string;

  /**
   * The license key associated with this software installation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "licenseKey" })
  licenseKey?: string;

  /**
   * The name of the software.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The path on the device where the software record is located.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;

  /**
   * The redemption code used for this software.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "redemptionCode" })
  redemptionCode?: number;

  /**
   * Short version notation for the software.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortVersion" })
  shortVersion?: string;

  /**
   * The management status of the software.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * A boolean indicating this software record should be installed on the associated device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toInstall" })
  toInstall?: boolean;

  /**
   * A boolean indicating this software record should be uninstalled on the associated device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toUninstall" })
  toUninstall?: boolean;

  /**
   * When the record was uninstalled from the device.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uninstalledAt" })
  uninstalledAt?: string;

  /**
   * When the record was last updated by Meraki.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  updatedAt?: string;

  /**
   * The vendor of the software.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vendor" })
  vendor?: string;

  /**
   * Full version notation for the software.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: string;
}

export class GetNetworkSmUserSoftwaresResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata({ elemType: GetNetworkSmUserSoftwares200ApplicationJSON })
  getNetworkSmUserSoftwares200ApplicationJSONObjects?: GetNetworkSmUserSoftwares200ApplicationJSON[];
}
