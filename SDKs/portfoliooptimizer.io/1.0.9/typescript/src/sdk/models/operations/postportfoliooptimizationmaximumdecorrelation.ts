/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PostPortfolioOptimizationMaximumDecorrelationRequestBodyConstraints extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "assetsGroups" })
  assetsGroups?: number[][];

  /**
   * assetsGroupsMatrix[k][i] is the weight of the asset i in the group of assets k; exclusive with assetsGroups
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assetsGroupsMatrix" })
  assetsGroupsMatrix?: number[][];

  /**
   * maximumAssetsGroupsWeights[k] is the maximum weight of the assets group k in the portfolio, in percentage between 0 and 1 if assetsGroups is provided
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maximumAssetsGroupsWeights" })
  maximumAssetsGroupsWeights?: number[];

  /**
   * maximumAssetsWeights[i] is the maximum weight of the asset i in the portfolio, in percentage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maximumAssetsWeights" })
  maximumAssetsWeights?: number[];

  /**
   * The maximum portfolio exposure; must be higher than or equal to minimumPortfolioExposure
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maximumPortfolioExposure" })
  maximumPortfolioExposure?: number;

  /**
   * minimumAssetsWeights[i] is the minimum weight of the asset i in the portfolio, in percentage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minimumAssetsWeights" })
  minimumAssetsWeights?: number[];

  /**
   * The minimum portfolio exposure; must be lower than or equal to maximumPortfolioExposure
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minimumPortfolioExposure" })
  minimumPortfolioExposure?: number;
}

export class PostPortfolioOptimizationMaximumDecorrelationRequestBody extends SpeakeasyBase {
  /**
   * The number of assets
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assets" })
  assets: number;

  /**
   * assetsCorrelationMatrix[i][j] is the correlation between the asset i and the asset j
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assetsCorrelationMatrix" })
  assetsCorrelationMatrix: number[][];

  /**
   * assetsReturns[i] is the arithmetic return of asset i
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assetsReturns" })
  assetsReturns?: number[];

  @SpeakeasyMetadata()
  @Expose({ name: "constraints" })
  @Type(
    () => PostPortfolioOptimizationMaximumDecorrelationRequestBodyConstraints
  )
  constraints?: PostPortfolioOptimizationMaximumDecorrelationRequestBodyConstraints;
}

/**
 * OK
 */
export class PostPortfolioOptimizationMaximumDecorrelation200ApplicationJSON extends SpeakeasyBase {
  /**
   * assetsWeights[i] is the weight of the asset i in the portfolio, in percentage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assetsWeights" })
  assetsWeights: number[];
}

export class PostPortfolioOptimizationMaximumDecorrelationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  postPortfolioOptimizationMaximumDecorrelation200ApplicationJSONObject?: PostPortfolioOptimizationMaximumDecorrelation200ApplicationJSON;
}
