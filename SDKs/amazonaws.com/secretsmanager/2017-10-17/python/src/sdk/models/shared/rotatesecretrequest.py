"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import rotationrulestype as shared_rotationrulestype
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RotateSecretRequest:
    
    secret_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SecretId') }})  
    client_request_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClientRequestToken'), 'exclude': lambda f: f is None }})  
    rotate_immediately: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RotateImmediately'), 'exclude': lambda f: f is None }})  
    rotation_lambda_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RotationLambdaARN'), 'exclude': lambda f: f is None }})  
    rotation_rules: Optional[shared_rotationrulestype.RotationRulesType] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RotationRules'), 'exclude': lambda f: f is None }})  
    