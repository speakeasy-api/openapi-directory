/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AutoBranchCreationConfig } from "./autobranchcreationconfig";
import { CustomRule } from "./customrule";
import { PlatformEnum } from "./platformenum";
import { ProductionBranch } from "./productionbranch";
import { RepositoryCloneMethodEnum } from "./repositoryclonemethodenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 *  Represents the different branches of a repository for building, deploying, and hosting an Amplify app.
 */
export class App extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "appArn" })
  appArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "appId" })
  appId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "autoBranchCreationConfig" })
  @Type(() => AutoBranchCreationConfig)
  autoBranchCreationConfig?: AutoBranchCreationConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "autoBranchCreationPatterns" })
  autoBranchCreationPatterns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "basicAuthCredentials" })
  basicAuthCredentials?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "buildSpec" })
  buildSpec?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "customHeaders" })
  customHeaders?: string;

  @SpeakeasyMetadata({ elemType: CustomRule })
  @Expose({ name: "customRules" })
  @Type(() => CustomRule)
  customRules?: CustomRule[];

  @SpeakeasyMetadata()
  @Expose({ name: "defaultDomain" })
  defaultDomain: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "enableAutoBranchCreation" })
  enableAutoBranchCreation?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "enableBasicAuth" })
  enableBasicAuth: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "enableBranchAutoBuild" })
  enableBranchAutoBuild: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "enableBranchAutoDeletion" })
  enableBranchAutoDeletion?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "environmentVariables" })
  environmentVariables: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "iamServiceRoleArn" })
  iamServiceRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "platform" })
  platform: PlatformEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "productionBranch" })
  @Type(() => ProductionBranch)
  productionBranch?: ProductionBranch;

  @SpeakeasyMetadata()
  @Expose({ name: "repository" })
  repository: string;

  @SpeakeasyMetadata()
  @Expose({ name: "repositoryCloneMethod" })
  repositoryCloneMethod?: RepositoryCloneMethodEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updateTime: Date;
}
