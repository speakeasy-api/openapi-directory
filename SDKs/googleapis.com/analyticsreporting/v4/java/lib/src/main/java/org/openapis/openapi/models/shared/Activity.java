/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Activity - An Activity represents data for an activity of a user. Note that an Activity is different from a hit. A hit might result in multiple Activity's. For example, if a hit includes a transaction and a goal completion, there will be two Activity protos for this hit, one for ECOMMERCE and one for GOAL. Conversely, multiple hits can also construct one Activity. In classic e-commerce, data for one transaction might be sent through multiple hits. These hits will be merged into one ECOMMERCE Activity.
 */
public class Activity {
    /**
     * Timestamp of the activity. If activities for a visit cross midnight and occur in two separate dates, then two sessions (one per date) share the session identifier. For example, say session ID 113472 has activity within 2019-08-20, and session ID 243742 has activity within 2019-08-25 and 2019-08-26. Session ID 113472 is one session, and session ID 243742 is two sessions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activityTime")
    public String activityTime;
    public Activity withActivityTime(String activityTime) {
        this.activityTime = activityTime;
        return this;
    }
    
    /**
     * Type of this activity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activityType")
    public ActivityActivityTypeEnum activityType;
    public Activity withActivityType(ActivityActivityTypeEnum activityType) {
        this.activityType = activityType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appview")
    public ScreenviewData appview;
    public Activity withAppview(ScreenviewData appview) {
        this.appview = appview;
        return this;
    }
    
    /**
     * For manual campaign tracking, it is the value of the utm_campaign campaign tracking parameter. For AdWords autotagging, it is the name(s) of the online ad campaign(s) you use for the property. If you use neither, its value is (not set).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("campaign")
    public String campaign;
    public Activity withCampaign(String campaign) {
        this.campaign = campaign;
        return this;
    }
    
    /**
     * The Channel Group associated with an end user's session for this View (defined by the View's Channel Groupings).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channelGrouping")
    public String channelGrouping;
    public Activity withChannelGrouping(String channelGrouping) {
        this.channelGrouping = channelGrouping;
        return this;
    }
    
    /**
     * A list of all custom dimensions associated with this activity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customDimension")
    public CustomDimension[] customDimension;
    public Activity withCustomDimension(CustomDimension[] customDimension) {
        this.customDimension = customDimension;
        return this;
    }
    
    /**
     * E-commerce details associated with the user activity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ecommerce")
    public EcommerceData ecommerce;
    public Activity withEcommerce(EcommerceData ecommerce) {
        this.ecommerce = ecommerce;
        return this;
    }
    
    /**
     * Represents all the details pertaining to an event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("event")
    public EventData event;
    public Activity withEvent(EventData event) {
        this.event = event;
        return this;
    }
    
    /**
     * Represents a set of goals that were reached in an activity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("goals")
    public GoalSetData goals;
    public Activity withGoals(GoalSetData goals) {
        this.goals = goals;
        return this;
    }
    
    /**
     * The hostname from which the tracking request was made.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hostname")
    public String hostname;
    public Activity withHostname(String hostname) {
        this.hostname = hostname;
        return this;
    }
    
    /**
     * For manual campaign tracking, it is the value of the utm_term campaign tracking parameter. For AdWords traffic, it contains the best matching targeting criteria. For the display network, where multiple targeting criteria could have caused the ad to show up, it returns the best matching targeting criteria as selected by Ads. This could be display_keyword, site placement, boomuserlist, user_interest, age, or gender. Otherwise its value is (not set).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keyword")
    public String keyword;
    public Activity withKeyword(String keyword) {
        this.keyword = keyword;
        return this;
    }
    
    /**
     * The first page in users' sessions, or the landing page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("landingPagePath")
    public String landingPagePath;
    public Activity withLandingPagePath(String landingPagePath) {
        this.landingPagePath = landingPagePath;
        return this;
    }
    
    /**
     * The type of referrals. For manual campaign tracking, it is the value of the utm_medium campaign tracking parameter. For AdWords autotagging, it is cpc. If users came from a search engine detected by Google Analytics, it is organic. If the referrer is not a search engine, it is referral. If users came directly to the property and document.referrer is empty, its value is (none).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("medium")
    public String medium;
    public Activity withMedium(String medium) {
        this.medium = medium;
        return this;
    }
    
    /**
     * Represents details collected when the visitor views a page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageview")
    public PageviewData pageview;
    public Activity withPageview(PageviewData pageview) {
        this.pageview = pageview;
        return this;
    }
    
    /**
     * The source of referrals. For manual campaign tracking, it is the value of the utm_source campaign tracking parameter. For AdWords autotagging, it is google. If you use neither, it is the domain of the source (e.g., document.referrer) referring the users. It may also contain a port address. If users arrived without a referrer, its value is (direct).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source")
    public String source;
    public Activity withSource(String source) {
        this.source = source;
        return this;
    }
    
}
