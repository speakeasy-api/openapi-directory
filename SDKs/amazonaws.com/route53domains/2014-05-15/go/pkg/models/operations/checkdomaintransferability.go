// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CheckDomainTransferabilityXAmzTargetEnum
type CheckDomainTransferabilityXAmzTargetEnum string

const (
	CheckDomainTransferabilityXAmzTargetEnumRoute53DomainsV20140515CheckDomainTransferability CheckDomainTransferabilityXAmzTargetEnum = "Route53Domains_v20140515.CheckDomainTransferability"
)

func (e CheckDomainTransferabilityXAmzTargetEnum) ToPointer() *CheckDomainTransferabilityXAmzTargetEnum {
	return &e
}

func (e *CheckDomainTransferabilityXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Route53Domains_v20140515.CheckDomainTransferability":
		*e = CheckDomainTransferabilityXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CheckDomainTransferabilityXAmzTargetEnum: %v", v)
	}
}

type CheckDomainTransferabilityRequest struct {
	CheckDomainTransferabilityRequest shared.CheckDomainTransferabilityRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                 *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                 *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                        CheckDomainTransferabilityXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CheckDomainTransferabilityResponse struct {
	// Success
	CheckDomainTransferabilityResponse *shared.CheckDomainTransferabilityResponse
	ContentType                        string
	// InvalidInput
	InvalidInput interface{}
	StatusCode   int
	RawResponse  *http.Response
	// UnsupportedTLD
	UnsupportedTLD interface{}
}
