/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * UserCipherUseEntity - List User Cipher Uses
 */
public class UserCipherUseEntity {
    /**
     * The earliest recorded use of this combination of interface and protocol and cipher (for this user)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public UserCipherUseEntity withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * UserCipherUse ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Integer id;

    public UserCipherUseEntity withId(Integer id) {
        this.id = id;
        return this;
    }
    
    /**
     * The interface accessed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("interface")
    public UserCipherUseEntityInterfaceEnum interface_;

    public UserCipherUseEntity withInterface(UserCipherUseEntityInterfaceEnum interface_) {
        this.interface_ = interface_;
        return this;
    }
    
    /**
     * The protocol and cipher employed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protocol_cipher")
    public String protocolCipher;

    public UserCipherUseEntity withProtocolCipher(String protocolCipher) {
        this.protocolCipher = protocolCipher;
        return this;
    }
    
    /**
     * The most recent use of this combination of interface and protocol and cipher (for this user)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;

    public UserCipherUseEntity withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * ID of the user who performed this access
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    public Integer userId;

    public UserCipherUseEntity withUserId(Integer userId) {
        this.userId = userId;
        return this;
    }
    
    public UserCipherUseEntity(){}
}
