/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountEvent } from "./accountevent";
import { AccountPayoutState } from "./accountpayoutstate";
import { AccountProcessingState } from "./accountprocessingstate";
import { Expose, Type } from "class-transformer";

/**
 * The status of the account holder.
 *
 * @remarks
 * >Permitted values: `Active`, `Inactive`, `Suspended`, `Closed`.
 */
export enum AccountHolderStatusStatusEnum {
  Active = "Active",
  Closed = "Closed",
  Inactive = "Inactive",
  Suspended = "Suspended",
}

export class AccountHolderStatus extends SpeakeasyBase {
  /**
   * A list of events scheduled for the account holder.
   */
  @SpeakeasyMetadata({ elemType: AccountEvent })
  @Expose({ name: "events" })
  @Type(() => AccountEvent)
  events?: AccountEvent[];

  @SpeakeasyMetadata()
  @Expose({ name: "payoutState" })
  @Type(() => AccountPayoutState)
  payoutState?: AccountPayoutState;

  @SpeakeasyMetadata()
  @Expose({ name: "processingState" })
  @Type(() => AccountProcessingState)
  processingState?: AccountProcessingState;

  /**
   * The status of the account holder.
   *
   * @remarks
   * >Permitted values: `Active`, `Inactive`, `Suspended`, `Closed`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: AccountHolderStatusStatusEnum;

  /**
   * The reason why the status was assigned to the account holder.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "statusReason" })
  statusReason?: string;
}
