/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GooglePrivacyDlpV2Deidentify - Create a de-identified copy of the requested table or files. A TransformationDetail will be created for each transformation. If any rows in BigQuery are skipped during de-identification (transformation errors or row size exceeds BigQuery insert API limits) they are placed in the failure output table. If the original row exceeds the BigQuery insert API limit it will be truncated when written to the failure output table. The failure output table can be set in the action.deidentify.output.big_query_output.deidentified_failure_output_table field, if no table is set, a table will be automatically created in the same project and dataset as the original table. Compatible with: Inspect
 */
public class GooglePrivacyDlpV2Deidentify {
    /**
     * Required. User settable Cloud Storage bucket and folders to store de-identified files. This field must be set for cloud storage deidentification. The output Cloud Storage bucket must be different from the input bucket. De-identified files will overwrite files in the output path. Form of: gs://bucket/folder/ or gs://bucket
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cloudStorageOutput")
    public String cloudStorageOutput;
    public GooglePrivacyDlpV2Deidentify withCloudStorageOutput(String cloudStorageOutput) {
        this.cloudStorageOutput = cloudStorageOutput;
        return this;
    }
    
    /**
     * List of user-specified file type groups to transform. If specified, only the files with these filetypes will be transformed. If empty, all supported files will be transformed. Supported types may be automatically added over time. If a file type is set in this field that isn't supported by the Deidentify action then the job will fail and will not be successfully created/started. Currently the only filetypes supported are: IMAGES, TEXT_FILES, CSV, TSV.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileTypesToTransform")
    public GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum[] fileTypesToTransform;
    public GooglePrivacyDlpV2Deidentify withFileTypesToTransform(GooglePrivacyDlpV2DeidentifyFileTypesToTransformEnum[] fileTypesToTransform) {
        this.fileTypesToTransform = fileTypesToTransform;
        return this;
    }
    
    /**
     * User specified templates and configs for how to deidentify structured, unstructures, and image files. User must provide either a unstructured deidentify template or at least one redact image config.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transformationConfig")
    public GooglePrivacyDlpV2TransformationConfig transformationConfig;
    public GooglePrivacyDlpV2Deidentify withTransformationConfig(GooglePrivacyDlpV2TransformationConfig transformationConfig) {
        this.transformationConfig = transformationConfig;
        return this;
    }
    
    /**
     * Config for storing transformation details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transformationDetailsStorageConfig")
    public GooglePrivacyDlpV2TransformationDetailsStorageConfig transformationDetailsStorageConfig;
    public GooglePrivacyDlpV2Deidentify withTransformationDetailsStorageConfig(GooglePrivacyDlpV2TransformationDetailsStorageConfig transformationDetailsStorageConfig) {
        this.transformationDetailsStorageConfig = transformationDetailsStorageConfig;
        return this;
    }
    
}
