// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETListSnapshotsInRecycleBinActionEnum
type GETListSnapshotsInRecycleBinActionEnum string

const (
	GETListSnapshotsInRecycleBinActionEnumListSnapshotsInRecycleBin GETListSnapshotsInRecycleBinActionEnum = "ListSnapshotsInRecycleBin"
)

func (e GETListSnapshotsInRecycleBinActionEnum) ToPointer() *GETListSnapshotsInRecycleBinActionEnum {
	return &e
}

func (e *GETListSnapshotsInRecycleBinActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ListSnapshotsInRecycleBin":
		*e = GETListSnapshotsInRecycleBinActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListSnapshotsInRecycleBinActionEnum: %v", v)
	}
}

// GETListSnapshotsInRecycleBinVersionEnum
type GETListSnapshotsInRecycleBinVersionEnum string

const (
	GETListSnapshotsInRecycleBinVersionEnumTwoThousandAndSixteen1115 GETListSnapshotsInRecycleBinVersionEnum = "2016-11-15"
)

func (e GETListSnapshotsInRecycleBinVersionEnum) ToPointer() *GETListSnapshotsInRecycleBinVersionEnum {
	return &e
}

func (e *GETListSnapshotsInRecycleBinVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETListSnapshotsInRecycleBinVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETListSnapshotsInRecycleBinVersionEnum: %v", v)
	}
}

type GETListSnapshotsInRecycleBinRequest struct {
	Action GETListSnapshotsInRecycleBinActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The maximum number of items to return for this request. To get the next page of items, make another request with the token returned in the output. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Query-Requests.html#api-pagination">Pagination</a>.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=MaxResults"`
	// The token returned from a previous paginated request. Pagination continues from the end of the items returned by the previous request.
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
	// The IDs of the snapshots to list. Omit this parameter to list all of the snapshots that are in the Recycle Bin.
	SnapshotID        []string                                `queryParam:"style=form,explode=true,name=SnapshotId"`
	Version           GETListSnapshotsInRecycleBinVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETListSnapshotsInRecycleBinResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
