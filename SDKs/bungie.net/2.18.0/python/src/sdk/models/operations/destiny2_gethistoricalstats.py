"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import destiny_historicalstats_destinyhistoricalstatsbyperiod as shared_destiny_historicalstats_destinyhistoricalstatsbyperiod
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class Destiny2GetHistoricalStatsRequest:
    
    character_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'characterId', 'style': 'simple', 'explode': False }})
    r"""The id of the character to retrieve. You can omit this character ID or set it to 0 to get aggregate stats across all characters."""  
    destiny_membership_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'destinyMembershipId', 'style': 'simple', 'explode': False }})
    r"""The Destiny membershipId of the user to retrieve."""  
    membership_type: int = dataclasses.field(metadata={'path_param': { 'field_name': 'membershipType', 'style': 'simple', 'explode': False }})
    r"""A valid non-BungieNet membership type."""  
    dayend: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'dayend', 'style': 'form', 'explode': True }})
    r"""Last day to return when daily stats are requested. Use the format YYYY-MM-DD. Currently, we cannot allow more than 31 days of daily data to be requested in a single request."""  
    daystart: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'daystart', 'style': 'form', 'explode': True }})
    r"""First day to return when daily stats are requested. Use the format YYYY-MM-DD. Currently, we cannot allow more than 31 days of daily data to be requested in a single request."""  
    groups: Optional[list[int]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'groups', 'style': 'form', 'explode': False }})
    r"""Group of stats to include, otherwise only general stats are returned. Comma separated list is allowed. Values: General, Weapons, Medals"""  
    modes: Optional[list[int]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'modes', 'style': 'form', 'explode': False }})
    r"""Game modes to return. See the documentation for DestinyActivityModeType for valid values, and pass in string representation, comma delimited."""  
    period_type: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'periodType', 'style': 'form', 'explode': True }})
    r"""Indicates a specific period type to return. Optional. May be: Daily, AllTime, or Activity"""  
    

@dataclasses.dataclass
class Destiny2GetHistoricalStats200Wildcard:
    r"""Look at the Response property for more information about the nature of this response"""
    
    detailed_error_trace: Optional[str] = dataclasses.field(default=None)  
    error_code: Optional[int] = dataclasses.field(default=None)  
    error_status: Optional[str] = dataclasses.field(default=None)  
    message: Optional[str] = dataclasses.field(default=None)  
    message_data: Optional[dict[str, str]] = dataclasses.field(default=None)  
    response: Optional[dict[str, shared_destiny_historicalstats_destinyhistoricalstatsbyperiod.DestinyHistoricalStatsDestinyHistoricalStatsByPeriod]] = dataclasses.field(default=None)  
    throttle_seconds: Optional[int] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class Destiny2GetHistoricalStatsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    