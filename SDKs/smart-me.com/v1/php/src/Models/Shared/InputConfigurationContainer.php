<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InputConfigurationContainer - Configuration for the input of a meter (digital inputs)
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InputConfigurationContainer
{
    /**
     * The Name of the Input
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The number of the Input. (1 for Input 1)
     * 
     * @var ?int $number
     */
	#[\JMS\Serializer\Annotation\SerializedName('Number')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $number = null;
    
    /**
     * The visualization text for an OFF action
     * 
     * @var ?string $offText
     */
	#[\JMS\Serializer\Annotation\SerializedName('OffText')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $offText = null;
    
    /**
     * The visualization text for an ON action
     * 
     * @var ?string $onText
     */
	#[\JMS\Serializer\Annotation\SerializedName('OnText')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $onText = null;
    
    /**
     * The Type of the output
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InputConfigurationContainerTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('Type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InputConfigurationContainerTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InputConfigurationContainerTypeEnum $type = null;
    
	public function __construct()
	{
		$this->name = null;
		$this->number = null;
		$this->offText = null;
		$this->onText = null;
		$this->type = null;
	}
}
