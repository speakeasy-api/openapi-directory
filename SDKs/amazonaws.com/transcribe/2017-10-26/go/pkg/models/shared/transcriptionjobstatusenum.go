// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TranscriptionJobStatusEnum string

const (
	TranscriptionJobStatusEnumQueued     TranscriptionJobStatusEnum = "QUEUED"
	TranscriptionJobStatusEnumInProgress TranscriptionJobStatusEnum = "IN_PROGRESS"
	TranscriptionJobStatusEnumFailed     TranscriptionJobStatusEnum = "FAILED"
	TranscriptionJobStatusEnumCompleted  TranscriptionJobStatusEnum = "COMPLETED"
)

func (e TranscriptionJobStatusEnum) ToPointer() *TranscriptionJobStatusEnum {
	return &e
}

func (e *TranscriptionJobStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "QUEUED":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "FAILED":
		fallthrough
	case "COMPLETED":
		*e = TranscriptionJobStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TranscriptionJobStatusEnum: %v", v)
	}
}
