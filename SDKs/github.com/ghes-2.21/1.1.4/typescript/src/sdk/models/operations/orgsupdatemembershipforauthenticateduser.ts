/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The state that the membership should be in. Only `"active"` will be accepted.
 */
export enum OrgsUpdateMembershipForAuthenticatedUserRequestBodyStateEnum {
  Active = "active",
}

export class OrgsUpdateMembershipForAuthenticatedUserRequestBody extends SpeakeasyBase {
  /**
   * The state that the membership should be in. Only `"active"` will be accepted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: OrgsUpdateMembershipForAuthenticatedUserRequestBodyStateEnum;
}

export class OrgsUpdateMembershipForAuthenticatedUserRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: OrgsUpdateMembershipForAuthenticatedUserRequestBody;

  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=org" })
  org: string;
}

export class OrgsUpdateMembershipForAuthenticatedUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Forbidden
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  orgMembership?: shared.OrgMembership;

  /**
   * Validation failed
   */
  @SpeakeasyMetadata()
  validationError?: shared.ValidationError;
}
