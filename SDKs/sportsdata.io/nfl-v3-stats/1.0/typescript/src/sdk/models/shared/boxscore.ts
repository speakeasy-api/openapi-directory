/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FantasyDefenseGame } from "./fantasydefensegame";
import { Game } from "./game";
import { PlayerDefense } from "./playerdefense";
import { PlayerKicking } from "./playerkicking";
import { PlayerKickPuntReturns } from "./playerkickpuntreturns";
import { PlayerPassing } from "./playerpassing";
import { PlayerPunting } from "./playerpunting";
import { PlayerReceiving } from "./playerreceiving";
import { PlayerRushing } from "./playerrushing";
import { Score } from "./score";
import { ScoringDetail } from "./scoringdetail";
import { ScoringPlay } from "./scoringplay";
import { Expose, Type } from "class-transformer";

export class BoxScore extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: PlayerDefense })
  @Expose({ name: "AwayDefense" })
  @Type(() => PlayerDefense)
  awayDefense?: PlayerDefense[];

  @SpeakeasyMetadata()
  @Expose({ name: "AwayFantasyDefense" })
  @Type(() => FantasyDefenseGame)
  awayFantasyDefense?: FantasyDefenseGame;

  @SpeakeasyMetadata({ elemType: PlayerKickPuntReturns })
  @Expose({ name: "AwayKickPuntReturns" })
  @Type(() => PlayerKickPuntReturns)
  awayKickPuntReturns?: PlayerKickPuntReturns[];

  @SpeakeasyMetadata({ elemType: PlayerKicking })
  @Expose({ name: "AwayKicking" })
  @Type(() => PlayerKicking)
  awayKicking?: PlayerKicking[];

  @SpeakeasyMetadata({ elemType: PlayerPassing })
  @Expose({ name: "AwayPassing" })
  @Type(() => PlayerPassing)
  awayPassing?: PlayerPassing[];

  @SpeakeasyMetadata({ elemType: PlayerPunting })
  @Expose({ name: "AwayPunting" })
  @Type(() => PlayerPunting)
  awayPunting?: PlayerPunting[];

  @SpeakeasyMetadata({ elemType: PlayerReceiving })
  @Expose({ name: "AwayReceiving" })
  @Type(() => PlayerReceiving)
  awayReceiving?: PlayerReceiving[];

  @SpeakeasyMetadata({ elemType: PlayerRushing })
  @Expose({ name: "AwayRushing" })
  @Type(() => PlayerRushing)
  awayRushing?: PlayerRushing[];

  @SpeakeasyMetadata()
  @Expose({ name: "Game" })
  @Type(() => Game)
  game?: Game;

  @SpeakeasyMetadata({ elemType: PlayerDefense })
  @Expose({ name: "HomeDefense" })
  @Type(() => PlayerDefense)
  homeDefense?: PlayerDefense[];

  @SpeakeasyMetadata()
  @Expose({ name: "HomeFantasyDefense" })
  @Type(() => FantasyDefenseGame)
  homeFantasyDefense?: FantasyDefenseGame;

  @SpeakeasyMetadata({ elemType: PlayerKickPuntReturns })
  @Expose({ name: "HomeKickPuntReturns" })
  @Type(() => PlayerKickPuntReturns)
  homeKickPuntReturns?: PlayerKickPuntReturns[];

  @SpeakeasyMetadata({ elemType: PlayerKicking })
  @Expose({ name: "HomeKicking" })
  @Type(() => PlayerKicking)
  homeKicking?: PlayerKicking[];

  @SpeakeasyMetadata({ elemType: PlayerPassing })
  @Expose({ name: "HomePassing" })
  @Type(() => PlayerPassing)
  homePassing?: PlayerPassing[];

  @SpeakeasyMetadata({ elemType: PlayerPunting })
  @Expose({ name: "HomePunting" })
  @Type(() => PlayerPunting)
  homePunting?: PlayerPunting[];

  @SpeakeasyMetadata({ elemType: PlayerReceiving })
  @Expose({ name: "HomeReceiving" })
  @Type(() => PlayerReceiving)
  homeReceiving?: PlayerReceiving[];

  @SpeakeasyMetadata({ elemType: PlayerRushing })
  @Expose({ name: "HomeRushing" })
  @Type(() => PlayerRushing)
  homeRushing?: PlayerRushing[];

  @SpeakeasyMetadata()
  @Expose({ name: "Score" })
  @Type(() => Score)
  score?: Score;

  @SpeakeasyMetadata({ elemType: ScoringDetail })
  @Expose({ name: "ScoringDetails" })
  @Type(() => ScoringDetail)
  scoringDetails?: ScoringDetail[];

  @SpeakeasyMetadata({ elemType: ScoringPlay })
  @Expose({ name: "ScoringPlays" })
  @Type(() => ScoringPlay)
  scoringPlays?: ScoringPlay[];
}
