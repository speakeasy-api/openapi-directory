/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ContentMatcher - Optional. Used to perform content matching. This allows matching based on substrings and regular expressions, together with their negations. Only the first 4 MB of an HTTP or HTTPS check's response (and the first 1 MB of a TCP check's response) are examined for purposes of content matching.
 */
public class ContentMatcher {
    /**
     * String, regex or JSON content to match. Maximum 1024 bytes. An empty content string indicates no content matching is to be performed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content")
    public String content;

    public ContentMatcher withContent(String content) {
        this.content = content;
        return this;
    }
    
    /**
     * Information needed to perform a JSONPath content match. Used for ContentMatcherOption::MATCHES_JSON_PATH and ContentMatcherOption::NOT_MATCHES_JSON_PATH.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jsonPathMatcher")
    public JsonPathMatcher jsonPathMatcher;

    public ContentMatcher withJsonPathMatcher(JsonPathMatcher jsonPathMatcher) {
        this.jsonPathMatcher = jsonPathMatcher;
        return this;
    }
    
    /**
     * The type of content matcher that will be applied to the server output, compared to the content string when the check is run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("matcher")
    public ContentMatcherMatcherEnum matcher;

    public ContentMatcher withMatcher(ContentMatcherMatcherEnum matcher) {
        this.matcher = matcher;
        return this;
    }
    
    public ContentMatcher(){}
}
