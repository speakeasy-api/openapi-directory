// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PutOrganisationsPartyIDLicensesProductIDPathParams struct {
	// The party identifier.
	PartyID string `pathParam:"style=simple,explode=false,name=partyId"`
	// The product identifier.
	ProductID string `pathParam:"style=simple,explode=false,name=productId"`
}

type PutOrganisationsPartyIDLicensesProductIDHeaders struct {
	// The API key.
	APIKey string `header:"style=simple,explode=false,name=apiKey"`
}

type PutOrganisationsPartyIDLicensesProductIDRequest struct {
	PathParams PutOrganisationsPartyIDLicensesProductIDPathParams
	Headers    PutOrganisationsPartyIDLicensesProductIDHeaders
	// License resource
	Request shared.LicenseInput `request:"mediaType=application/json"`
}

type PutOrganisationsPartyIDLicensesProductIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The client specified an invalid argument
	InvalidArgument *shared.InvalidArgument
	// License was updated
	License *shared.License
	// The specified resource was not found
	NotFound *shared.NotFound
	// Request not authenticated due to missing, invalid, or expired token
	Unauthenticated *shared.Unauthenticated
}
