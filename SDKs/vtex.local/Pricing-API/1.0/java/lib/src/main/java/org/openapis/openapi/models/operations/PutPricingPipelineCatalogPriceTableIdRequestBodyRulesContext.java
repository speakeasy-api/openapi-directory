/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PutPricingPipelineCatalogPriceTableIdRequestBodyRulesContext - Rule Context is a group of filters to be checked at an item level when applying the rule. If all those filters check out, the rule will be applied for that item, unless there is a fixed price for that item.
 */
public class PutPricingPipelineCatalogPriceTableIdRequestBodyRulesContext {
    /**
     * Brands that an item should have to be eligible for the rule. Format: key: `brandId`, value: `brandName`.
     */
    @JsonProperty("brands")
    public java.util.Map<String, String> brands;
    public PutPricingPipelineCatalogPriceTableIdRequestBodyRulesContext withBrands(java.util.Map<String, String> brands) {
        this.brands = brands;
        return this;
    }
    
    /**
     * Categories that an item should have to be eligible for the rule. Format: key: `categoryId`, value: `categoryName`.
     */
    @JsonProperty("categories")
    public java.util.Map<String, String> categories;
    public PutPricingPipelineCatalogPriceTableIdRequestBodyRulesContext withCategories(java.util.Map<String, String> categories) {
        this.categories = categories;
        return this;
    }
    
    /**
     * The rule will be active during this time range.
     */
    @JsonProperty("dateRange")
    public PutPricingPipelineCatalogPriceTableIdRequestBodyRulesContextDateRange dateRange;
    public PutPricingPipelineCatalogPriceTableIdRequestBodyRulesContext withDateRange(PutPricingPipelineCatalogPriceTableIdRequestBodyRulesContextDateRange dateRange) {
        this.dateRange = dateRange;
        return this;
    }
    
    /**
     * Internal Categories.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("internalCategories")
    public java.util.Map<String, Object> internalCategories;
    public PutPricingPipelineCatalogPriceTableIdRequestBodyRulesContext withInternalCategories(java.util.Map<String, Object> internalCategories) {
        this.internalCategories = internalCategories;
        return this;
    }
    
    /**
     * For an item to be eligible to the rule, it's markup should be in this Markup Range.
     */
    @JsonProperty("markupRange")
    public PutPricingPipelineCatalogPriceTableIdRequestBodyRulesContextMarkupRange markupRange;
    public PutPricingPipelineCatalogPriceTableIdRequestBodyRulesContext withMarkupRange(PutPricingPipelineCatalogPriceTableIdRequestBodyRulesContextMarkupRange markupRange) {
        this.markupRange = markupRange;
        return this;
    }
    
    /**
     * Stock statuses.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stockStatuses")
    public java.util.Map<String, Object> stockStatuses;
    public PutPricingPipelineCatalogPriceTableIdRequestBodyRulesContext withStockStatuses(java.util.Map<String, Object> stockStatuses) {
        this.stockStatuses = stockStatuses;
        return this;
    }
    
}
