<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ListRecordingRequest
{
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Recording resources to read.
     * 
     * @var string $accountSid
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=AccountSid')]
    public string $accountSid;
    
    /**
     * The [Call](https://www.twilio.com/docs/voice/api/call-resource) SID of the resources to read.
     * 
     * @var ?string $callSid
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=CallSid')]
    public ?string $callSid = null;
    
    /**
     * The Conference SID that identifies the conference associated with the recording to read.
     * 
     * @var ?string $conferenceSid
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ConferenceSid')]
    public ?string $conferenceSid = null;
    
    /**
     * Only include recordings that were created on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read recordings that were created on this date. You can also specify an inequality, such as `DateCreated<=YYYY-MM-DD`, to read recordings that were created on or before midnight of this date, and `DateCreated>=YYYY-MM-DD` to read recordings that were created on or after midnight of this date.
     * 
     * @var ?\DateTime $dateCreated
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DateCreated,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public ?\DateTime $dateCreated = null;
    
    /**
     * Only include recordings that were created on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read recordings that were created on this date. You can also specify an inequality, such as `DateCreated<=YYYY-MM-DD`, to read recordings that were created on or before midnight of this date, and `DateCreated>=YYYY-MM-DD` to read recordings that were created on or after midnight of this date.
     * 
     * @var ?\DateTime $dateCreatedLessThan
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DateCreated<,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public ?\DateTime $dateCreatedLessThan = null;
    
    /**
     * Only include recordings that were created on this date. Specify a date as `YYYY-MM-DD` in GMT, for example: `2009-07-06`, to read recordings that were created on this date. You can also specify an inequality, such as `DateCreated<=YYYY-MM-DD`, to read recordings that were created on or before midnight of this date, and `DateCreated>=YYYY-MM-DD` to read recordings that were created on or after midnight of this date.
     * 
     * @var ?\DateTime $dateCreatedGreaterThan
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DateCreated>,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public ?\DateTime $dateCreatedGreaterThan = null;
    
    /**
     * A boolean parameter indicating whether to retrieve soft deleted recordings or not. Recordings metadata are kept after deletion for a retention period of 40 days.
     * 
     * @var ?bool $includeSoftDeleted
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=IncludeSoftDeleted')]
    public ?bool $includeSoftDeleted = null;
    
    /**
     * The page index. This value is simply for client state.
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Page')]
    public ?int $page = null;
    
    /**
     * How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * 
     * @var ?int $pageSize
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=PageSize')]
    public ?int $pageSize = null;
    
    /**
     * The page token. This is provided by the API.
     * 
     * @var ?string $pageToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=PageToken')]
    public ?string $pageToken = null;
    
	public function __construct()
	{
		$this->accountSid = "";
		$this->callSid = null;
		$this->conferenceSid = null;
		$this->dateCreated = null;
		$this->dateCreatedLessThan = null;
		$this->dateCreatedGreaterThan = null;
		$this->includeSoftDeleted = null;
		$this->page = null;
		$this->pageSize = null;
		$this->pageToken = null;
	}
}
