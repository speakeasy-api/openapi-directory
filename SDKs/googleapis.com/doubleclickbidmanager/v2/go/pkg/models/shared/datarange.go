// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DataRangeRangeEnum - Report data range used to generate the report.
type DataRangeRangeEnum string

const (
	DataRangeRangeEnumRangeUnspecified DataRangeRangeEnum = "RANGE_UNSPECIFIED"
	DataRangeRangeEnumCustomDates      DataRangeRangeEnum = "CUSTOM_DATES"
	DataRangeRangeEnumCurrentDay       DataRangeRangeEnum = "CURRENT_DAY"
	DataRangeRangeEnumPreviousDay      DataRangeRangeEnum = "PREVIOUS_DAY"
	DataRangeRangeEnumWeekToDate       DataRangeRangeEnum = "WEEK_TO_DATE"
	DataRangeRangeEnumMonthToDate      DataRangeRangeEnum = "MONTH_TO_DATE"
	DataRangeRangeEnumQuarterToDate    DataRangeRangeEnum = "QUARTER_TO_DATE"
	DataRangeRangeEnumYearToDate       DataRangeRangeEnum = "YEAR_TO_DATE"
	DataRangeRangeEnumPreviousWeek     DataRangeRangeEnum = "PREVIOUS_WEEK"
	DataRangeRangeEnumPreviousMonth    DataRangeRangeEnum = "PREVIOUS_MONTH"
	DataRangeRangeEnumPreviousQuarter  DataRangeRangeEnum = "PREVIOUS_QUARTER"
	DataRangeRangeEnumPreviousYear     DataRangeRangeEnum = "PREVIOUS_YEAR"
	DataRangeRangeEnumLast7Days        DataRangeRangeEnum = "LAST_7_DAYS"
	DataRangeRangeEnumLast30Days       DataRangeRangeEnum = "LAST_30_DAYS"
	DataRangeRangeEnumLast90Days       DataRangeRangeEnum = "LAST_90_DAYS"
	DataRangeRangeEnumLast365Days      DataRangeRangeEnum = "LAST_365_DAYS"
	DataRangeRangeEnumAllTime          DataRangeRangeEnum = "ALL_TIME"
	DataRangeRangeEnumLast14Days       DataRangeRangeEnum = "LAST_14_DAYS"
	DataRangeRangeEnumLast60Days       DataRangeRangeEnum = "LAST_60_DAYS"
)

func (e *DataRangeRangeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RANGE_UNSPECIFIED":
		fallthrough
	case "CUSTOM_DATES":
		fallthrough
	case "CURRENT_DAY":
		fallthrough
	case "PREVIOUS_DAY":
		fallthrough
	case "WEEK_TO_DATE":
		fallthrough
	case "MONTH_TO_DATE":
		fallthrough
	case "QUARTER_TO_DATE":
		fallthrough
	case "YEAR_TO_DATE":
		fallthrough
	case "PREVIOUS_WEEK":
		fallthrough
	case "PREVIOUS_MONTH":
		fallthrough
	case "PREVIOUS_QUARTER":
		fallthrough
	case "PREVIOUS_YEAR":
		fallthrough
	case "LAST_7_DAYS":
		fallthrough
	case "LAST_30_DAYS":
		fallthrough
	case "LAST_90_DAYS":
		fallthrough
	case "LAST_365_DAYS":
		fallthrough
	case "ALL_TIME":
		fallthrough
	case "LAST_14_DAYS":
		fallthrough
	case "LAST_60_DAYS":
		*e = DataRangeRangeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DataRangeRangeEnum: %s", s)
	}
}

// DataRange - Report data range.
type DataRange struct {
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	CustomEndDate *Date `json:"customEndDate,omitempty"`
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	CustomStartDate *Date `json:"customStartDate,omitempty"`
	// Report data range used to generate the report.
	Range *DataRangeRangeEnum `json:"range,omitempty"`
}
