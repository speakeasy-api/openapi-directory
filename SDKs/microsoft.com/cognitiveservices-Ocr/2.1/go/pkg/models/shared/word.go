// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// WordConfidenceEnum - Qualitative confidence measure.
type WordConfidenceEnum string

const (
	WordConfidenceEnumHigh WordConfidenceEnum = "High"
	WordConfidenceEnumLow  WordConfidenceEnum = "Low"
)

func (e WordConfidenceEnum) ToPointer() *WordConfidenceEnum {
	return &e
}

func (e *WordConfidenceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "High":
		fallthrough
	case "Low":
		*e = WordConfidenceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WordConfidenceEnum: %v", v)
	}
}

// Word - An object representing a recognized word.
type Word struct {
	// Quadrangle bounding box, with coordinates in original image. The eight numbers represent the four points (x-coordinate, y-coordinate from the left-top corner of the image) of the detected rectangle from the left-top corner in the clockwise direction. For images, coordinates are in pixels. For PDF, coordinates are in inches.
	BoundingBox []float64 `json:"boundingBox"`
	// Qualitative confidence measure.
	Confidence *WordConfidenceEnum `json:"confidence,omitempty"`
	// The text content of the word.
	Text string `json:"text"`
}
