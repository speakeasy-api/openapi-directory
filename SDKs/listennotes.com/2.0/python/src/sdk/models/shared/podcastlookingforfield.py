"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PodcastLookingForField:
    
    cohosts: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cohosts'), 'exclude': lambda f: f is None }})
    r"""Whether this podcast is looking for cohosts."""  
    cross_promotion: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cross_promotion'), 'exclude': lambda f: f is None }})
    r"""Whether this podcast is looking for cross promotion opportunities with other podcasts."""  
    guests: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('guests'), 'exclude': lambda f: f is None }})
    r"""Whether this podcast is looking for guests."""  
    sponsors: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sponsors'), 'exclude': lambda f: f is None }})
    r"""Whether this podcast is looking for sponsors."""  
    