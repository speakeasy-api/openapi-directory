"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import streamingappliancesnapshotconfig as shared_streamingappliancesnapshotconfig
from ..shared import topologyconfig as shared_topologyconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StreamingSetupTask:
    r"""A task which initializes part of a streaming Dataflow job."""
    
    drain: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('drain'), 'exclude': lambda f: f is None }})
    r"""The user has requested drain."""  
    receive_work_port: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('receiveWorkPort'), 'exclude': lambda f: f is None }})
    r"""The TCP port on which the worker should listen for messages from other streaming computation workers."""  
    snapshot_config: Optional[shared_streamingappliancesnapshotconfig.StreamingApplianceSnapshotConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('snapshotConfig'), 'exclude': lambda f: f is None }})
    r"""Streaming appliance snapshot configuration."""  
    streaming_computation_topology: Optional[shared_topologyconfig.TopologyConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('streamingComputationTopology'), 'exclude': lambda f: f is None }})
    r"""Global topology of the streaming Dataflow job, including all computations and their sharded locations."""  
    worker_harness_port: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workerHarnessPort'), 'exclude': lambda f: f is None }})
    r"""The TCP port used by the worker to communicate with the Dataflow worker harness."""  
    