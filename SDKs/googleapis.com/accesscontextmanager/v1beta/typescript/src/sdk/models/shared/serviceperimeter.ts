/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ServicePerimeterConfig } from "./serviceperimeterconfig";
import { Expose, Type } from "class-transformer";

/**
 * Perimeter type indicator. A single project is allowed to be a member of single regular perimeter, but multiple service perimeter bridges. A project cannot be a included in a perimeter bridge without being included in regular perimeter. For perimeter bridges, restricted/unrestricted service lists as well as access lists must be empty.
 */
export enum ServicePerimeterPerimeterTypeEnum {
  PerimeterTypeRegular = "PERIMETER_TYPE_REGULAR",
  PerimeterTypeBridge = "PERIMETER_TYPE_BRIDGE",
}

/**
 * `ServicePerimeter` describes a set of Google Cloud resources which can freely import and export data amongst themselves, but not export outside of the `ServicePerimeter`. If a request with a source within this `ServicePerimeter` has a target outside of the `ServicePerimeter`, the request will be blocked. Otherwise the request is allowed. There are two types of Service Perimeter - Regular and Bridge. Regular Service Perimeters cannot overlap, a single Google Cloud project can only belong to a single regular Service Perimeter. Service Perimeter Bridges can contain only Google Cloud projects as members, a single Google Cloud project may belong to multiple Service Perimeter Bridges.
 */
export class ServicePerimeter extends SpeakeasyBase {
  /**
   * Description of the `ServicePerimeter` and its use. Does not affect behavior.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Resource name for the `ServicePerimeter`. Format: `accessPolicies/{access_policy}/servicePerimeters/{service_perimeter}`. The `service_perimeter` component must begin with a letter, followed by alphanumeric characters or `_`. After you create a `ServicePerimeter`, you cannot change its `name`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Perimeter type indicator. A single project is allowed to be a member of single regular perimeter, but multiple service perimeter bridges. A project cannot be a included in a perimeter bridge without being included in regular perimeter. For perimeter bridges, restricted/unrestricted service lists as well as access lists must be empty.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "perimeterType" })
  perimeterType?: ServicePerimeterPerimeterTypeEnum;

  /**
   * `ServicePerimeterConfig` specifies a set of Google Cloud resources that describe specific Service Perimeter configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => ServicePerimeterConfig)
  status?: ServicePerimeterConfig;

  /**
   * Human readable title. Must be unique within the Policy.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}
