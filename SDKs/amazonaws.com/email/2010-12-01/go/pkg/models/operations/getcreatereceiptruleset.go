// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCreateReceiptRuleSetActionEnum
type GETCreateReceiptRuleSetActionEnum string

const (
	GETCreateReceiptRuleSetActionEnumCreateReceiptRuleSet GETCreateReceiptRuleSetActionEnum = "CreateReceiptRuleSet"
)

func (e GETCreateReceiptRuleSetActionEnum) ToPointer() *GETCreateReceiptRuleSetActionEnum {
	return &e
}

func (e *GETCreateReceiptRuleSetActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CreateReceiptRuleSet":
		*e = GETCreateReceiptRuleSetActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateReceiptRuleSetActionEnum: %v", v)
	}
}

// GETCreateReceiptRuleSetVersionEnum
type GETCreateReceiptRuleSetVersionEnum string

const (
	GETCreateReceiptRuleSetVersionEnumTwoThousandAndTen1201 GETCreateReceiptRuleSetVersionEnum = "2010-12-01"
)

func (e GETCreateReceiptRuleSetVersionEnum) ToPointer() *GETCreateReceiptRuleSetVersionEnum {
	return &e
}

func (e *GETCreateReceiptRuleSetVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETCreateReceiptRuleSetVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateReceiptRuleSetVersionEnum: %v", v)
	}
}

type GETCreateReceiptRuleSetRequest struct {
	Action GETCreateReceiptRuleSetActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The name of the rule set to create. The name must:</p> <ul> <li> <p>This value can only contain ASCII letters (a-z, A-Z), numbers (0-9), underscores (_), or dashes (-).</p> </li> <li> <p>Start and end with a letter or number.</p> </li> <li> <p>Contain less than 64 characters.</p> </li> </ul>
	RuleSetName       string                             `queryParam:"style=form,explode=true,name=RuleSetName"`
	Version           GETCreateReceiptRuleSetVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCreateReceiptRuleSetResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
