/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Snapshot - A snapshot object that contains databases.
 */
public class Snapshot {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountsWithProvisionedRestoreAccess")
    public String[] accountsWithProvisionedRestoreAccess;

    public Snapshot withAccountsWithProvisionedRestoreAccess(String[] accountsWithProvisionedRestoreAccess) {
        this.accountsWithProvisionedRestoreAccess = accountsWithProvisionedRestoreAccess;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountsWithRestoreAccess")
    public String[] accountsWithRestoreAccess;

    public Snapshot withAccountsWithRestoreAccess(String[] accountsWithRestoreAccess) {
        this.accountsWithRestoreAccess = accountsWithRestoreAccess;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("actualIncrementalBackupSizeInMegaBytes")
    public Double actualIncrementalBackupSizeInMegaBytes;

    public Snapshot withActualIncrementalBackupSizeInMegaBytes(Double actualIncrementalBackupSizeInMegaBytes) {
        this.actualIncrementalBackupSizeInMegaBytes = actualIncrementalBackupSizeInMegaBytes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adminUsername")
    public String adminUsername;

    public Snapshot withAdminUsername(String adminUsername) {
        this.adminUsername = adminUsername;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backupProgressInMegaBytes")
    public Double backupProgressInMegaBytes;

    public Snapshot withBackupProgressInMegaBytes(Double backupProgressInMegaBytes) {
        this.backupProgressInMegaBytes = backupProgressInMegaBytes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentBackupRateInMegaBytesPerSecond")
    public Double currentBackupRateInMegaBytesPerSecond;

    public Snapshot withCurrentBackupRateInMegaBytesPerSecond(Double currentBackupRateInMegaBytesPerSecond) {
        this.currentBackupRateInMegaBytesPerSecond = currentBackupRateInMegaBytesPerSecond;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("elapsedTimeInSeconds")
    public Long elapsedTimeInSeconds;

    public Snapshot withElapsedTimeInSeconds(Long elapsedTimeInSeconds) {
        this.elapsedTimeInSeconds = elapsedTimeInSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("estimatedSecondsToCompletion")
    public Long estimatedSecondsToCompletion;

    public Snapshot withEstimatedSecondsToCompletion(Long estimatedSecondsToCompletion) {
        this.estimatedSecondsToCompletion = estimatedSecondsToCompletion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kmsKeyId")
    public String kmsKeyId;

    public Snapshot withKmsKeyId(String kmsKeyId) {
        this.kmsKeyId = kmsKeyId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("namespaceArn")
    public String namespaceArn;

    public Snapshot withNamespaceArn(String namespaceArn) {
        this.namespaceArn = namespaceArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("namespaceName")
    public String namespaceName;

    public Snapshot withNamespaceName(String namespaceName) {
        this.namespaceName = namespaceName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownerAccount")
    public String ownerAccount;

    public Snapshot withOwnerAccount(String ownerAccount) {
        this.ownerAccount = ownerAccount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("snapshotArn")
    public String snapshotArn;

    public Snapshot withSnapshotArn(String snapshotArn) {
        this.snapshotArn = snapshotArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("snapshotCreateTime")
    public OffsetDateTime snapshotCreateTime;

    public Snapshot withSnapshotCreateTime(OffsetDateTime snapshotCreateTime) {
        this.snapshotCreateTime = snapshotCreateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("snapshotName")
    public String snapshotName;

    public Snapshot withSnapshotName(String snapshotName) {
        this.snapshotName = snapshotName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("snapshotRemainingDays")
    public Long snapshotRemainingDays;

    public Snapshot withSnapshotRemainingDays(Long snapshotRemainingDays) {
        this.snapshotRemainingDays = snapshotRemainingDays;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("snapshotRetentionPeriod")
    public Long snapshotRetentionPeriod;

    public Snapshot withSnapshotRetentionPeriod(Long snapshotRetentionPeriod) {
        this.snapshotRetentionPeriod = snapshotRetentionPeriod;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("snapshotRetentionStartTime")
    public OffsetDateTime snapshotRetentionStartTime;

    public Snapshot withSnapshotRetentionStartTime(OffsetDateTime snapshotRetentionStartTime) {
        this.snapshotRetentionStartTime = snapshotRetentionStartTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public SnapshotStatusEnum status;

    public Snapshot withStatus(SnapshotStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalBackupSizeInMegaBytes")
    public Double totalBackupSizeInMegaBytes;

    public Snapshot withTotalBackupSizeInMegaBytes(Double totalBackupSizeInMegaBytes) {
        this.totalBackupSizeInMegaBytes = totalBackupSizeInMegaBytes;
        return this;
    }
    
    public Snapshot(){}
}
