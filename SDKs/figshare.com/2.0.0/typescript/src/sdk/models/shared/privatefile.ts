/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * OK. Article private file
 */
export class PrivateFile extends SpeakeasyBase {
  /**
   * File computed md5
   */
  @SpeakeasyMetadata()
  @Expose({ name: "computed_md5" })
  computedMd5: string;

  /**
   * Url for file download
   */
  @SpeakeasyMetadata()
  @Expose({ name: "download_url" })
  downloadUrl: string;

  /**
   * File id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * True if the file is attached to a public item version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_attached_to_public_version" })
  isAttachedToPublicVersion: boolean;

  /**
   * True if file is hosted somewhere else
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_link_only" })
  isLinkOnly: boolean;

  /**
   * File name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * File preview state
   */
  @SpeakeasyMetadata()
  @Expose({ name: "preview_state" })
  previewState: string;

  /**
   * File size
   */
  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size: number;

  /**
   * Status for file upload
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  /**
   * File supplied md5
   */
  @SpeakeasyMetadata()
  @Expose({ name: "supplied_md5" })
  suppliedMd5: string;

  /**
   * Token for file upload
   */
  @SpeakeasyMetadata()
  @Expose({ name: "upload_token" })
  uploadToken: string;

  /**
   * Upload url for file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "upload_url" })
  uploadUrl: string;

  /**
   * File viewer type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "viewer_type" })
  viewerType: string;
}
