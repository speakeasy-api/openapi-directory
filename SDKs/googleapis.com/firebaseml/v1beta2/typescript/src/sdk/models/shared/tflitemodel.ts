/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Information that is specific to TfLite models.
 */
export class TfLiteModelInput extends SpeakeasyBase {
  /**
   * The AutoML model id referencing a model you created with the AutoML API. The name should have format 'projects//locations//models/' (This is the model resource name returned from the AutoML API)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "automlModel" })
  automlModel?: string;

  /**
   * The TfLite file containing the model. (Stored in Google Cloud). The gcs_tflite_uri should have form: gs://some-bucket/some-model.tflite Note: If you update the file in the original location, it is necessary to call UpdateModel for ML to pick up and validate the updated file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gcsTfliteUri" })
  gcsTfliteUri?: string;
}

/**
 * Information that is specific to TfLite models.
 */
export class TfLiteModel extends SpeakeasyBase {
  /**
   * The AutoML model id referencing a model you created with the AutoML API. The name should have format 'projects//locations//models/' (This is the model resource name returned from the AutoML API)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "automlModel" })
  automlModel?: string;

  /**
   * The TfLite file containing the model. (Stored in Google Cloud). The gcs_tflite_uri should have form: gs://some-bucket/some-model.tflite Note: If you update the file in the original location, it is necessary to call UpdateModel for ML to pick up and validate the updated file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gcsTfliteUri" })
  gcsTfliteUri?: string;

  /**
   * Output only. The size of the TFLite model
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sizeBytes" })
  sizeBytes?: string;
}
