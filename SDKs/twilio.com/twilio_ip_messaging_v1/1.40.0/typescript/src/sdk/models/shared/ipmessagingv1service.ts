/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Created
 */
export class IpMessagingV1Service extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "consumption_report_interval" })
  consumptionReportInterval?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "default_channel_creator_role_sid" })
  defaultChannelCreatorRoleSid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "default_channel_role_sid" })
  defaultChannelRoleSid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "default_service_role_sid" })
  defaultServiceRoleSid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "friendly_name" })
  friendlyName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "limits" })
  limits?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  links?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "notifications" })
  notifications?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "post_webhook_url" })
  postWebhookUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pre_webhook_url" })
  preWebhookUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reachability_enabled" })
  reachabilityEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "read_status_enabled" })
  readStatusEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "typing_indicator_timeout" })
  typingIndicatorTimeout?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "webhook_filters" })
  webhookFilters?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "webhook_method" })
  webhookMethod?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "webhooks" })
  webhooks?: any;
}
