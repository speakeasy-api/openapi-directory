"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import blogarticlelist as shared_blogarticlelist
from typing import Optional


@dataclasses.dataclass
class GetBlogPostsRequest:
    
    fallback: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fallback', 'style': 'form', 'explode': True }})
    r"""When `true`, and no article is found in the locale, it falls back to `locale=en`."""  
    locale: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'locale', 'style': 'form', 'explode': True }})
    r"""Article language, default `en`. When no blog article is available and `fallback=true` is specified, it falls back to `en`."""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})  
    per_page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class GetBlogPostsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    blog_article_list: Optional[shared_blogarticlelist.BlogArticleList] = dataclasses.field(default=None)
    r"""List of blog articles"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    