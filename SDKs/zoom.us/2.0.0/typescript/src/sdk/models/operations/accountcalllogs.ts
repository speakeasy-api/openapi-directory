/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class AccountCallLogsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

/**
 * Enables you to sort call logs by start or end time. Choose the sort time value. Values include `startTime` or `endTime`.
 */
export enum AccountCallLogsTimeTypeEnum {
  StartTime = "startTime",
  EndTime = "endTime",
}

export class AccountCallLogsRequest extends SpeakeasyBase {
  /**
   * Start date from which you would like to get the call logs. The start date should be within past six months. <br>
   *
   * @remarks
   *
   * The API only returns data pertaining to a month. Thus, the date range(defined using "from" and "to" fields) for which the call logs are to be returned must not exceed a month.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=from" })
  from?: string;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * Filter the API response by [path](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-and-identifying-logs#h_646b46c6-0623-4ab1-8b8b-ea5b8bcef679) of the call. The value of this field can be one of the following: `voiceMail`, `message`, `forward`, `extension`, `callQueue`, `ivrMenu`, `companyDirectory`, `autoReceptionist`, `contactCenter`, `disconnected`, `commonAreaPhone`,
   *
   * @remarks
   * `pstn`, `transfer`, `sharedLines`, `sharedLineGroup`, `tollFreeBilling`, `meetingService`, `parkPickup`,
   * `parkTimeout`, `monitor`, `takeover`, `sipGroup`
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=path" })
  path?: string;

  /**
   * Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites). Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by call logs of a specific phone site.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=site_id",
  })
  siteId?: string;

  /**
   * Enables you to sort call logs by start or end time. Choose the sort time value. Values include `startTime` or `endTime`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=time_type",
  })
  timeType?: AccountCallLogsTimeTypeEnum;

  /**
   * The end date upto which you would like to get the call logs for. The end date should be within past six months.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=to" })
  to?: string;

  /**
   * The type of the call logs. The value can be either "all" or "missed".
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: string;
}

/**
 * The type of call:
 *
 * @remarks
 * *`voip` (Voice over IP)
 * *`pstn` (Public Switched Telephone Network)
 * *`tollfree`
 * *`international`
 * *`contactCenter`
 */
export enum AccountCallLogs200ApplicationXMLCallLogsCallTypeEnum {
  Voip = "voip",
  Pstn = "pstn",
  Tollfree = "tollfree",
  International = "international",
  ContactCenter = "contactCenter",
}

/**
 * The owner type:
 *
 * @remarks
 * *`user`
 * *`callQueue`
 * *`autoReceptionist`
 * *`commonAreaPhone`
 * *`sharedLineGroup`
 */
export enum AccountCallLogs200ApplicationXMLCallLogsOwnerTypeEnum {
  User = "user",
  CallQueue = "callQueue",
  AutoReceptionist = "autoReceptionist",
  CommonAreaPhone = "commonAreaPhone",
  SharedLineGroup = "sharedLineGroup",
}

export class AccountCallLogs200ApplicationXMLCallLogsOwner extends SpeakeasyBase {
  /**
   * The owner's extension number.
   */
  @SpeakeasyMetadata()
  extensionNumber?: number;

  /**
   * The owner ID.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * The owner name.
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * The owner type:
   *
   * @remarks
   * *`user`
   * *`callQueue`
   * *`autoReceptionist`
   * *`commonAreaPhone`
   * *`sharedLineGroup`
   */
  @SpeakeasyMetadata()
  type?: AccountCallLogs200ApplicationXMLCallLogsOwnerTypeEnum;
}

/**
 * Type of call recording:<br>
 *
 * @remarks
 * `1` OnDemand<br>
 * `2` Automatic
 */
export enum AccountCallLogs200ApplicationXMLCallLogsRecordingTypeEnum {
  One = "1",
  Two = "2",
}

export class AccountCallLogs200ApplicationXMLCallLogsSite extends SpeakeasyBase {
  /**
   * Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Name of the site where the phone number is assigned.
   */
  @SpeakeasyMetadata()
  name?: string;
}

export class AccountCallLogs200ApplicationXMLCallLogs extends SpeakeasyBase {
  /**
   * GMT date and time at which the inbound call was answered. The value of this field is in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  answerStartTime?: Date;

  /**
   * Unique identifier of the phone call.
   */
  @SpeakeasyMetadata()
  callId?: string;

  /**
   * The type of call:
   *
   * @remarks
   * *`voip` (Voice over IP)
   * *`pstn` (Public Switched Telephone Network)
   * *`tollfree`
   * *`international`
   * *`contactCenter`
   */
  @SpeakeasyMetadata()
  callType?: AccountCallLogs200ApplicationXMLCallLogsCallTypeEnum;

  /**
   * Contact name of callee
   */
  @SpeakeasyMetadata()
  calleeName?: string;

  /**
   * Number of callee
   */
  @SpeakeasyMetadata()
  calleeNumber?: string;

  /**
   * Type of callee's number. 1 - internal | 2 - external
   */
  @SpeakeasyMetadata()
  calleeNumberType?: string;

  /**
   * Contact name of caller
   */
  @SpeakeasyMetadata()
  callerName?: string;

  /**
   * Number of caller
   */
  @SpeakeasyMetadata()
  callerNumber?: string;

  /**
   * Type of caller's number. 1 - internal | 2 - external
   */
  @SpeakeasyMetadata()
  callerNumberType?: string;

  /**
   * Billing charge for the call.
   */
  @SpeakeasyMetadata()
  charge?: string;

  /**
   * Client code.
   */
  @SpeakeasyMetadata()
  clientCode?: string;

  /**
   * Start time of the call
   */
  @SpeakeasyMetadata()
  dateTime?: string;

  /**
   * Direction of the call. "inbound" | "outbound"
   */
  @SpeakeasyMetadata()
  direction?: string;

  /**
   * Duration of the call in seconds.
   */
  @SpeakeasyMetadata()
  duration?: number;

  /**
   * Call Log ID
   */
  @SpeakeasyMetadata()
  id?: string;

  @SpeakeasyMetadata()
  owner?: AccountCallLogs200ApplicationXMLCallLogsOwner;

  /**
   * Path of the call.
   */
  @SpeakeasyMetadata()
  path?: string;

  /**
   * Billing rate for the call.
   */
  @SpeakeasyMetadata()
  rate?: string;

  /**
   * Unique identifier of the call recording.
   */
  @SpeakeasyMetadata()
  recordingId?: string;

  /**
   * Type of call recording:<br>
   *
   * @remarks
   * `1` OnDemand<br>
   * `2` Automatic
   */
  @SpeakeasyMetadata()
  recordingType?: AccountCallLogs200ApplicationXMLCallLogsRecordingTypeEnum;

  /**
   * Result of the call. "call_connected" | "recorded" | "no_answer"
   */
  @SpeakeasyMetadata()
  result?: string;

  @SpeakeasyMetadata()
  site?: AccountCallLogs200ApplicationXMLCallLogsSite;

  /**
   * User ID of the call log owner.
   */
  @SpeakeasyMetadata()
  userId?: string;

  /**
   * Duration that a  **call queue member** takes to answer a call from the time it started ringing. The value of the duration is in seconds.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  waitingTime?: string;
}

/**
 * Account Call Logs
 */
export class AccountCallLogs200ApplicationXML extends SpeakeasyBase {
  /**
   * Call Log
   */
  @SpeakeasyMetadata({ elemType: AccountCallLogs200ApplicationXMLCallLogs })
  callLogs?: AccountCallLogs200ApplicationXMLCallLogs[];

  /**
   * Date from which you would like to view the logs.
   */
  @SpeakeasyMetadata()
  from?: string;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * Total number of pages
   */
  @SpeakeasyMetadata()
  pageCount?: number;

  /**
   * The number of records returned within a single API call for each page.
   */
  @SpeakeasyMetadata()
  pageSize?: number;

  /**
   * Date up to which you would like to view the phone log.
   */
  @SpeakeasyMetadata()
  to?: string;

  /**
   * The total number of records returned.
   */
  @SpeakeasyMetadata()
  totalRecords?: number;
}

/**
 * The type of call:
 *
 * @remarks
 * *`voip` (Voice over IP)
 * *`pstn` (Public Switched Telephone Network)
 * *`tollfree`
 * *`international`
 * *`contactCenter`
 */
export enum AccountCallLogs200ApplicationJSONCallLogsCallTypeEnum {
  Voip = "voip",
  Pstn = "pstn",
  Tollfree = "tollfree",
  International = "international",
  ContactCenter = "contactCenter",
}

/**
 * The owner type:
 *
 * @remarks
 * *`user`
 * *`callQueue`
 * *`autoReceptionist`
 * *`commonAreaPhone`
 * *`sharedLineGroup`
 */
export enum AccountCallLogs200ApplicationJSONCallLogsOwnerTypeEnum {
  User = "user",
  CallQueue = "callQueue",
  AutoReceptionist = "autoReceptionist",
  CommonAreaPhone = "commonAreaPhone",
  SharedLineGroup = "sharedLineGroup",
}

export class AccountCallLogs200ApplicationJSONCallLogsOwner extends SpeakeasyBase {
  /**
   * The owner's extension number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "extension_number" })
  extensionNumber?: number;

  /**
   * The owner ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The owner name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The owner type:
   *
   * @remarks
   * *`user`
   * *`callQueue`
   * *`autoReceptionist`
   * *`commonAreaPhone`
   * *`sharedLineGroup`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: AccountCallLogs200ApplicationJSONCallLogsOwnerTypeEnum;
}

/**
 * Type of call recording:<br>
 *
 * @remarks
 * `1` OnDemand<br>
 * `2` Automatic
 */
export enum AccountCallLogs200ApplicationJSONCallLogsRecordingTypeEnum {
  One = "1",
  Two = "2",
}

export class AccountCallLogs200ApplicationJSONCallLogsSite extends SpeakeasyBase {
  /**
   * Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of the site where the phone number is assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class AccountCallLogs200ApplicationJSONCallLogs extends SpeakeasyBase {
  /**
   * GMT date and time at which the inbound call was answered. The value of this field is in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "answer_start_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  answerStartTime?: Date;

  /**
   * Unique identifier of the phone call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "call_id" })
  callId?: string;

  /**
   * The type of call:
   *
   * @remarks
   * *`voip` (Voice over IP)
   * *`pstn` (Public Switched Telephone Network)
   * *`tollfree`
   * *`international`
   * *`contactCenter`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "call_type" })
  callType?: AccountCallLogs200ApplicationJSONCallLogsCallTypeEnum;

  /**
   * Contact name of callee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callee_name" })
  calleeName?: string;

  /**
   * Number of callee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callee_number" })
  calleeNumber?: string;

  /**
   * Type of callee's number. 1 - internal | 2 - external
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callee_number_type" })
  calleeNumberType?: string;

  /**
   * Contact name of caller
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caller_name" })
  callerName?: string;

  /**
   * Number of caller
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caller_number" })
  callerNumber?: string;

  /**
   * Type of caller's number. 1 - internal | 2 - external
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caller_number_type" })
  callerNumberType?: string;

  /**
   * Billing charge for the call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "charge" })
  charge?: string;

  /**
   * Client code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_code" })
  clientCode?: string;

  /**
   * Start time of the call
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_time" })
  dateTime?: string;

  /**
   * Direction of the call. "inbound" | "outbound"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction?: string;

  /**
   * Duration of the call in seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration?: number;

  /**
   * Call Log ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  @Type(() => AccountCallLogs200ApplicationJSONCallLogsOwner)
  owner?: AccountCallLogs200ApplicationJSONCallLogsOwner;

  /**
   * Path of the call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;

  /**
   * Billing rate for the call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rate" })
  rate?: string;

  /**
   * Unique identifier of the call recording.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recording_id" })
  recordingId?: string;

  /**
   * Type of call recording:<br>
   *
   * @remarks
   * `1` OnDemand<br>
   * `2` Automatic
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recording_type" })
  recordingType?: AccountCallLogs200ApplicationJSONCallLogsRecordingTypeEnum;

  /**
   * Result of the call. "call_connected" | "recorded" | "no_answer"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "result" })
  result?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "site" })
  @Type(() => AccountCallLogs200ApplicationJSONCallLogsSite)
  site?: AccountCallLogs200ApplicationJSONCallLogsSite;

  /**
   * User ID of the call log owner.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId?: string;

  /**
   * Duration that a  **call queue member** takes to answer a call from the time it started ringing. The value of the duration is in seconds.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "waiting_time" })
  waitingTime?: string;
}

/**
 * Account Call Logs
 */
export class AccountCallLogs200ApplicationJSON extends SpeakeasyBase {
  /**
   * Call Log
   */
  @SpeakeasyMetadata({ elemType: AccountCallLogs200ApplicationJSONCallLogs })
  @Expose({ name: "call_logs" })
  @Type(() => AccountCallLogs200ApplicationJSONCallLogs)
  callLogs?: AccountCallLogs200ApplicationJSONCallLogs[];

  /**
   * Date from which you would like to view the logs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  from?: string;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * Total number of pages
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_count" })
  pageCount?: number;

  /**
   * The number of records returned within a single API call for each page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  /**
   * Date up to which you would like to view the phone log.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  to?: string;

  /**
   * The total number of records returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;
}

export class AccountCallLogsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * Account's call logs returned.
   */
  @SpeakeasyMetadata()
  accountCallLogs200ApplicationJSONObject?: AccountCallLogs200ApplicationJSON;
}
