/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TemplateDefinitionNew - Template configuration
 */
public class TemplateDefinitionNew {
    /**
     * Indicates if the template is a draft or published.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isDraft")
    public Boolean isDraft;
    public TemplateDefinitionNew withIsDraft(Boolean isDraft) {
        this.isDraft = isDraft;
        return this;
    }
    
    /**
     * Defines template layout (e.g page format, margins).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("layout")
    public TemplateDefinitionNewLayout layout;
    public TemplateDefinitionNew withLayout(TemplateDefinitionNewLayout layout) {
        this.layout = layout;
        return this;
    }
    
    /**
     * Template name
     */
    @JsonProperty("name")
    public String name;
    public TemplateDefinitionNew withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Defines page or label size, margins and components on page or label
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pages")
    public TemplateDefinitionNewPages[] pages;
    public TemplateDefinitionNew withPages(TemplateDefinitionNewPages[] pages) {
        this.pages = pages;
        return this;
    }
    
    /**
     * A list of tags assigned to a template
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String[] tags;
    public TemplateDefinitionNew withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
}
