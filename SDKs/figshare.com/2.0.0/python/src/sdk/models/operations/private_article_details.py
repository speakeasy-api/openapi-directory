"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import articlecompleteprivate as shared_articlecompleteprivate
from ..shared import errormessage as shared_errormessage
from typing import Optional


@dataclasses.dataclass
class PrivateArticleDetailsSecurity:
    
    o_auth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class PrivateArticleDetailsRequest:
    
    article_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'article_id', 'style': 'simple', 'explode': False }})
    r"""Article unique identifier"""  
    

@dataclasses.dataclass
class PrivateArticleDetailsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    article_complete_private: Optional[shared_articlecompleteprivate.ArticleCompletePrivate] = dataclasses.field(default=None)
    r"""OK. Article representation"""  
    error_message: Optional[shared_errormessage.ErrorMessage] = dataclasses.field(default=None)
    r"""Forbidden"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    