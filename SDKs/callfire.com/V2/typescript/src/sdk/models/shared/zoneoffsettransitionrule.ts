/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LocalTime } from "./localtime";
import { ZoneOffset } from "./zoneoffset";
import { Expose, Type } from "class-transformer";

/**
 * ~
 */
export enum ZoneOffsetTransitionRuleDayOfWeekEnum {
  Monday = "MONDAY",
  Tuesday = "TUESDAY",
  Wednesday = "WEDNESDAY",
  Thursday = "THURSDAY",
  Friday = "FRIDAY",
  Saturday = "SATURDAY",
  Sunday = "SUNDAY",
}

/**
 * ~
 */
export enum ZoneOffsetTransitionRuleMonthEnum {
  January = "JANUARY",
  February = "FEBRUARY",
  March = "MARCH",
  April = "APRIL",
  May = "MAY",
  June = "JUNE",
  July = "JULY",
  August = "AUGUST",
  September = "SEPTEMBER",
  October = "OCTOBER",
  November = "NOVEMBER",
  December = "DECEMBER",
}

/**
 * ~
 */
export enum ZoneOffsetTransitionRuleTimeDefinitionEnum {
  Utc = "UTC",
  Wall = "WALL",
  Standard = "STANDARD",
}

/**
 * ~
 */
export class ZoneOffsetTransitionRule extends SpeakeasyBase {
  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dayOfMonthIndicator" })
  dayOfMonthIndicator?: number;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dayOfWeek" })
  dayOfWeek?: ZoneOffsetTransitionRuleDayOfWeekEnum;

  /**
   * Represents a time part of a given date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "localTime" })
  @Type(() => LocalTime)
  localTime?: LocalTime;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "midnightEndOfDay" })
  midnightEndOfDay?: boolean;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "month" })
  month?: ZoneOffsetTransitionRuleMonthEnum;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offsetAfter" })
  @Type(() => ZoneOffset)
  offsetAfter?: ZoneOffset;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offsetBefore" })
  @Type(() => ZoneOffset)
  offsetBefore?: ZoneOffset;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "standardOffset" })
  @Type(() => ZoneOffset)
  standardOffset?: ZoneOffset;

  /**
   * ~
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeDefinition" })
  timeDefinition?: ZoneOffsetTransitionRuleTimeDefinitionEnum;
}
