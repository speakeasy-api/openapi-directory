"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import flex_v2_web_channel as shared_flex_v2_web_channel
from typing import Optional

CREATE_WEB_CHANNEL_SERVERS = [
	"https://flex-api.twilio.com",
]


@dataclasses.dataclass
class CreateWebChannelSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateWebChannelCreateWebChannelRequest:
    
    address_sid: str = dataclasses.field(metadata={'form': { 'field_name': 'AddressSid' }})
    r"""The SID of the Conversations Address. See [Address Configuration Resource](https://www.twilio.com/docs/conversations/api/address-configuration-resource) for configuration details. When a conversation is created on the Flex backend, the callback URL will be set to the corresponding Studio Flow SID or webhook URL in your address configuration."""  
    chat_friendly_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'ChatFriendlyName' }})
    r"""The Conversation's friendly name. See the [Conversation resource](https://www.twilio.com/docs/conversations/api/conversation-resource) for an example."""  
    customer_friendly_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'CustomerFriendlyName' }})
    r"""The Conversation participant's friendly name. See the [Conversation Participant Resource](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) for an example."""  
    pre_engagement_data: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'PreEngagementData' }})
    r"""The pre-engagement data."""  
    

@dataclasses.dataclass
class CreateWebChannelResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    flex_v2_web_channel: Optional[shared_flex_v2_web_channel.FlexV2WebChannel] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    