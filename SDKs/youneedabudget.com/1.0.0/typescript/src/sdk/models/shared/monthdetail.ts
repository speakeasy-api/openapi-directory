/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Category } from "./category";
import { Expose, Transform, Type } from "class-transformer";

export class MonthDetail extends SpeakeasyBase {
  /**
   * The total amount of transactions in the month, excluding those categorized to 'Inflow: Ready to Assign'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "activity" })
  activity: number;

  /**
   * The Age of Money as of the month
   */
  @SpeakeasyMetadata()
  @Expose({ name: "age_of_money" })
  ageOfMoney?: number;

  /**
   * The total amount budgeted in the month
   */
  @SpeakeasyMetadata()
  @Expose({ name: "budgeted" })
  budgeted: number;

  /**
   * The budget month categories.  Amounts (budgeted, activity, balance, etc.) are specific to the {month} parameter specified.
   */
  @SpeakeasyMetadata({ elemType: Category })
  @Expose({ name: "categories" })
  @Type(() => Category)
  categories: Category[];

  /**
   * Whether or not the month has been deleted.  Deleted months will only be included in delta requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deleted" })
  deleted: boolean;

  /**
   * The total amount of transactions categorized to 'Inflow: Ready to Assign' in the month
   */
  @SpeakeasyMetadata()
  @Expose({ name: "income" })
  income: number;

  @SpeakeasyMetadata()
  @Expose({ name: "month" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  month: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "note" })
  note?: string;

  /**
   * The available amount for 'Ready to Assign'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to_be_budgeted" })
  toBeBudgeted: number;
}
