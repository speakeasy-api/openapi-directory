/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ReferencesAirportsByAirportCodeGetSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  auth: string;
}

export class ReferencesAirportsByAirportCodeGetRequest extends SpeakeasyBase {
  /**
   * http header: application/json or application/xml (Acceptable values are: "application/json", "application/xml")
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Restrict the results to locations with flights operated by LH (false=0, true=1)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=LHoperated",
  })
  lHoperated?: boolean;

  /**
   * 3-letter IATA airport code
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=airportCode",
  })
  airportCode: string;

  /**
   * 2-letter ISO 3166-1 language code
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=lang" })
  lang?: string;

  /**
   * Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: string;

  /**
   * Number of records skipped. Defaults to 0
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: string;
}

export class ReferencesAirportsByAirportCodeGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  airportResponse?: shared.AirportResponse;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
