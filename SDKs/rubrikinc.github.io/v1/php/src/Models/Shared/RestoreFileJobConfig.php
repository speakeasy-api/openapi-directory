<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RestoreFileJobConfig - Configuration for the restore request.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RestoreFileJobConfig
{
    /**
     * Domain name (Use . for local admin).
     * 
     * @var ?string $domainName
     */
	#[\JMS\Serializer\Annotation\SerializedName('domainName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $domainName = null;
    
    /**
     * Optional Boolean field to determine whether to ignore errors during restore jobs that use the Rubrik Backup Service. When 'true', errors are ignored. Default value is 'false', errors are not ignored.
     * 
     * @var ?bool $ignoreErrors
     */
	#[\JMS\Serializer\Annotation\SerializedName('ignoreErrors')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $ignoreErrors = null;
    
    /**
     * Password.
     * 
     * @var ?string $password
     */
	#[\JMS\Serializer\Annotation\SerializedName('password')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $password = null;
    
    /**
     * Absolute file path.
     * 
     * @var string $path
     */
	#[\JMS\Serializer\Annotation\SerializedName('path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $path;
    
    /**
     * Directory of folder to copy files into.
     * 
     * @var string $restorePath
     */
	#[\JMS\Serializer\Annotation\SerializedName('restorePath')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $restorePath;
    
    /**
     * Boolean value that determines restore file settings for Linux systems and for Windows systems. For Linux, use 'true' to include the extended attributes of restored files. For Window, use 'true' to include alternate data streams for restored files. For both, use 'false' to exclude this additional metadata.
     * 
     * @var ?bool $shouldRestoreXAttrs
     */
	#[\JMS\Serializer\Annotation\SerializedName('shouldRestoreXAttrs')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $shouldRestoreXAttrs = null;
    
    /**
     * A Boolean value that specifies whether to save the user-entered credentials. When 'true', the user-entered credentials are saved.
     * 
     * @var ?bool $shouldSaveCredentials
     */
	#[\JMS\Serializer\Annotation\SerializedName('shouldSaveCredentials')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $shouldSaveCredentials = null;
    
    /**
     * A Boolean that specifies whether to use the Rubrik Backup Service or VMware tools to restore file. When 'true', the RBS restores file. When 'false', the VMware tools restores file.
     * 
     * @var ?bool $shouldUseAgent
     */
	#[\JMS\Serializer\Annotation\SerializedName('shouldUseAgent')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $shouldUseAgent = null;
    
    /**
     * Username.
     * 
     * @var ?string $username
     */
	#[\JMS\Serializer\Annotation\SerializedName('username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $username = null;
    
	public function __construct()
	{
		$this->domainName = null;
		$this->ignoreErrors = null;
		$this->password = null;
		$this->path = "";
		$this->restorePath = "";
		$this->shouldRestoreXAttrs = null;
		$this->shouldSaveCredentials = null;
		$this->shouldUseAgent = null;
		$this->username = null;
	}
}
