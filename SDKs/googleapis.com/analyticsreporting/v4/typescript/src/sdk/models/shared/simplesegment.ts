/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OrFiltersForSegment } from "./orfiltersforsegment";
import { Expose, Type } from "class-transformer";

/**
 * A Simple segment conditions consist of one or more dimension/metric conditions that can be combined.
 */
export class SimpleSegment extends SpeakeasyBase {
  /**
   * A list of segment filters groups which are combined with logical `AND` operator.
   */
  @SpeakeasyMetadata({ elemType: OrFiltersForSegment })
  @Expose({ name: "orFiltersForSegment" })
  @Type(() => OrFiltersForSegment)
  orFiltersForSegment?: OrFiltersForSegment[];
}
