// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateUpdatedWorkspaceImageXAmzTargetEnum
type CreateUpdatedWorkspaceImageXAmzTargetEnum string

const (
	CreateUpdatedWorkspaceImageXAmzTargetEnumWorkspacesServiceCreateUpdatedWorkspaceImage CreateUpdatedWorkspaceImageXAmzTargetEnum = "WorkspacesService.CreateUpdatedWorkspaceImage"
)

func (e *CreateUpdatedWorkspaceImageXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WorkspacesService.CreateUpdatedWorkspaceImage":
		*e = CreateUpdatedWorkspaceImageXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateUpdatedWorkspaceImageXAmzTargetEnum: %s", s)
	}
}

type CreateUpdatedWorkspaceImageRequest struct {
	CreateUpdatedWorkspaceImageRequest shared.CreateUpdatedWorkspaceImageRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                      *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                  *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                     *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                           *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                  *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                      *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                  *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                         CreateUpdatedWorkspaceImageXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateUpdatedWorkspaceImageResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	CreateUpdatedWorkspaceImageResult *shared.CreateUpdatedWorkspaceImageResult
	// InvalidParameterValuesException
	InvalidParameterValuesException interface{}
	// InvalidResourceStateException
	InvalidResourceStateException interface{}
	// OperationNotSupportedException
	OperationNotSupportedException interface{}
	// ResourceAlreadyExistsException
	ResourceAlreadyExistsException interface{}
	// ResourceLimitExceededException
	ResourceLimitExceededException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
