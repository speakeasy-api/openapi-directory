/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Aggregation frequency
 */
export enum GetCrawlStatisticsByFrequencyFrequencyEnum {
  Onemn = "1mn",
  Fivemn = "5mn",
  Sixtymn = "60mn",
}

export class GetCrawlStatisticsByFrequencyRequest extends SpeakeasyBase {
  /**
   * Analysis' identifier
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=analysis_slug",
  })
  analysisSlug: string;

  /**
   * Aggregation frequency
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=frequency",
  })
  frequency: GetCrawlStatisticsByFrequencyFrequencyEnum;

  /**
   * max number of elements to retrieve
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * Project's identifier
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=project_slug",
  })
  projectSlug: string;

  /**
   * User's identifier
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=username",
  })
  username: string;
}

export class GetCrawlStatisticsByFrequencyResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  crawlStatisticsTime?: shared.CrawlStatisticsTime;

  /**
   * error payload
   */
  @SpeakeasyMetadata()
  defaultPayload?: shared.DefaultPayload;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
