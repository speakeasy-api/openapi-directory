/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DelegationStatusEnum } from "./delegationstatusenum";
import { RoleTypeEnum } from "./roletypeenum";
import { Expose, Transform } from "class-transformer";

/**
 *  The assignment of a control set to a delegate for review.
 */
export class Delegation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "assessmentId" })
  assessmentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assessmentName" })
  assessmentName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "controlSetId" })
  controlSetId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdBy" })
  createdBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "roleType" })
  roleType?: RoleTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: DelegationStatusEnum;
}
