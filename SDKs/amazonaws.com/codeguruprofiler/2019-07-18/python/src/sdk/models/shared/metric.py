"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import metrictype_enum as shared_metrictype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Metric:
    r"""Details about the metric that the analysis used when it detected the anomaly. The metric what is analyzed to create recommendations. It includes the name of the frame that was analyzed and the type and thread states used to derive the metric value for that frame."""
    
    frame_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('frameName') }})  
    thread_states: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('threadStates') }})  
    type: shared_metrictype_enum.MetricTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    