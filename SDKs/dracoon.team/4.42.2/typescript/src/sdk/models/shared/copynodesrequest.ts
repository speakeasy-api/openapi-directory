/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CopyNode } from "./copynode";
import { Expose, Type } from "class-transformer";

/**
 * Node conflict resolution strategy:
 *
 * @remarks
 *
 * * `autorename`
 *
 * * `overwrite`
 *
 * * `fail`
 */
export enum CopyNodesRequestResolutionStrategyEnum {
  Autorename = "autorename",
  Overwrite = "overwrite",
  Fail = "fail",
}

/**
 * Request model for copying nodes
 */
export class CopyNodesRequest extends SpeakeasyBase {
  /**
   * List of nodes to be copied
   */
  @SpeakeasyMetadata({ elemType: CopyNode })
  @Expose({ name: "items" })
  @Type(() => CopyNode)
  items?: CopyNode[];

  /**
   * Preserve Download Share Links and point them to the new node.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "keepShareLinks" })
  keepShareLinks?: boolean;

  /**
   * &#128679; Deprecated since v4.5.0
   *
   * @remarks
   *
   * Node IDs
   *
   * Please use `items` instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nodeIds" })
  nodeIds?: number[];

  /**
   * Node conflict resolution strategy:
   *
   * @remarks
   *
   * * `autorename`
   *
   * * `overwrite`
   *
   * * `fail`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resolutionStrategy" })
  resolutionStrategy?: CopyNodesRequestResolutionStrategyEnum;
}
