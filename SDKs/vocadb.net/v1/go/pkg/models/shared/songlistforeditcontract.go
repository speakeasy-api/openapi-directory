// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type SongListForEditContractFeaturedCategoryEnum string

const (
	SongListForEditContractFeaturedCategoryEnumNothing         SongListForEditContractFeaturedCategoryEnum = "Nothing"
	SongListForEditContractFeaturedCategoryEnumConcerts        SongListForEditContractFeaturedCategoryEnum = "Concerts"
	SongListForEditContractFeaturedCategoryEnumVocaloidRanking SongListForEditContractFeaturedCategoryEnum = "VocaloidRanking"
	SongListForEditContractFeaturedCategoryEnumPools           SongListForEditContractFeaturedCategoryEnum = "Pools"
	SongListForEditContractFeaturedCategoryEnumOther           SongListForEditContractFeaturedCategoryEnum = "Other"
)

func (e *SongListForEditContractFeaturedCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Nothing":
		fallthrough
	case "Concerts":
		fallthrough
	case "VocaloidRanking":
		fallthrough
	case "Pools":
		fallthrough
	case "Other":
		*e = SongListForEditContractFeaturedCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongListForEditContractFeaturedCategoryEnum: %s", s)
	}
}

type SongListForEditContractStatusEnum string

const (
	SongListForEditContractStatusEnumDraft    SongListForEditContractStatusEnum = "Draft"
	SongListForEditContractStatusEnumFinished SongListForEditContractStatusEnum = "Finished"
	SongListForEditContractStatusEnumApproved SongListForEditContractStatusEnum = "Approved"
	SongListForEditContractStatusEnumLocked   SongListForEditContractStatusEnum = "Locked"
)

func (e *SongListForEditContractStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Draft":
		fallthrough
	case "Finished":
		fallthrough
	case "Approved":
		fallthrough
	case "Locked":
		*e = SongListForEditContractStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongListForEditContractStatusEnum: %s", s)
	}
}

// SongListForEditContractInput - Song list properties.
type SongListForEditContractInput struct {
	Author           *UserForAPIContract                          `json:"author,omitempty" form:"name=author,json"`
	CanEdit          *bool                                        `json:"canEdit,omitempty" form:"name=canEdit"`
	Deleted          *bool                                        `json:"deleted,omitempty" form:"name=deleted"`
	Description      *string                                      `json:"description,omitempty" form:"name=description"`
	EventDate        *time.Time                                   `json:"eventDate,omitempty" form:"name=eventDate"`
	FeaturedCategory *SongListForEditContractFeaturedCategoryEnum `json:"featuredCategory,omitempty" form:"name=featuredCategory"`
	ID               *int                                         `json:"id,omitempty" form:"name=id"`
	Name             *string                                      `json:"name,omitempty" form:"name=name"`
	SongLinks        []SongInListEditContractInput                `json:"songLinks,omitempty" form:"name=songLinks,json"`
	Status           *SongListForEditContractStatusEnum           `json:"status,omitempty" form:"name=status"`
	Thumb            *EntryThumbContract                          `json:"thumb,omitempty" form:"name=thumb,json"`
	UpdateNotes      *string                                      `json:"updateNotes,omitempty" form:"name=updateNotes"`
	Version          *int                                         `json:"version,omitempty" form:"name=version"`
}
