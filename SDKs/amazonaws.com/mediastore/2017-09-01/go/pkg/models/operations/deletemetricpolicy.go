// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteMetricPolicyXAmzTargetEnum
type DeleteMetricPolicyXAmzTargetEnum string

const (
	DeleteMetricPolicyXAmzTargetEnumMediaStore20170901DeleteMetricPolicy DeleteMetricPolicyXAmzTargetEnum = "MediaStore_20170901.DeleteMetricPolicy"
)

func (e *DeleteMetricPolicyXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MediaStore_20170901.DeleteMetricPolicy":
		*e = DeleteMetricPolicyXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteMetricPolicyXAmzTargetEnum: %s", s)
	}
}

type DeleteMetricPolicyHeaders struct {
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteMetricPolicyXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteMetricPolicyRequest struct {
	Headers DeleteMetricPolicyHeaders
	Request shared.DeleteMetricPolicyInput `request:"mediaType=application/json"`
}

type DeleteMetricPolicyResponse struct {
	// ContainerInUseException
	ContainerInUseException interface{}
	// ContainerNotFoundException
	ContainerNotFoundException interface{}
	ContentType                string
	// Success
	DeleteMetricPolicyOutput map[string]interface{}
	// InternalServerError
	InternalServerError interface{}
	// PolicyNotFoundException
	PolicyNotFoundException interface{}
	StatusCode              int
	RawResponse             *http.Response
}
