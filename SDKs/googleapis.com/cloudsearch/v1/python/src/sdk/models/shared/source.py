"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SourcePredefinedSourceEnum(str, Enum):
    r"""Predefined content source for Google Apps."""
    NONE = 'NONE'
    QUERY_HISTORY = 'QUERY_HISTORY'
    PERSON = 'PERSON'
    GOOGLE_DRIVE = 'GOOGLE_DRIVE'
    GOOGLE_GMAIL = 'GOOGLE_GMAIL'
    GOOGLE_SITES = 'GOOGLE_SITES'
    GOOGLE_GROUPS = 'GOOGLE_GROUPS'
    GOOGLE_CALENDAR = 'GOOGLE_CALENDAR'
    GOOGLE_KEEP = 'GOOGLE_KEEP'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Source:
    r"""Defines sources for the suggest/search APIs."""
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Source name for content indexed by the Indexing API."""  
    predefined_source: Optional[SourcePredefinedSourceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('predefinedSource'), 'exclude': lambda f: f is None }})
    r"""Predefined content source for Google Apps."""  
    