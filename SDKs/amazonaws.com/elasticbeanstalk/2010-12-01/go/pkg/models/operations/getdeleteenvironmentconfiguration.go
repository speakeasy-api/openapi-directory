// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteEnvironmentConfigurationActionEnum
type GETDeleteEnvironmentConfigurationActionEnum string

const (
	GETDeleteEnvironmentConfigurationActionEnumDeleteEnvironmentConfiguration GETDeleteEnvironmentConfigurationActionEnum = "DeleteEnvironmentConfiguration"
)

func (e GETDeleteEnvironmentConfigurationActionEnum) ToPointer() *GETDeleteEnvironmentConfigurationActionEnum {
	return &e
}

func (e *GETDeleteEnvironmentConfigurationActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteEnvironmentConfiguration":
		*e = GETDeleteEnvironmentConfigurationActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteEnvironmentConfigurationActionEnum: %v", v)
	}
}

// GETDeleteEnvironmentConfigurationVersionEnum
type GETDeleteEnvironmentConfigurationVersionEnum string

const (
	GETDeleteEnvironmentConfigurationVersionEnumTwoThousandAndTen1201 GETDeleteEnvironmentConfigurationVersionEnum = "2010-12-01"
)

func (e GETDeleteEnvironmentConfigurationVersionEnum) ToPointer() *GETDeleteEnvironmentConfigurationVersionEnum {
	return &e
}

func (e *GETDeleteEnvironmentConfigurationVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-12-01":
		*e = GETDeleteEnvironmentConfigurationVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteEnvironmentConfigurationVersionEnum: %v", v)
	}
}

type GETDeleteEnvironmentConfigurationRequest struct {
	Action GETDeleteEnvironmentConfigurationActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the application the environment is associated with.
	ApplicationName string `queryParam:"style=form,explode=true,name=ApplicationName"`
	// The name of the environment to delete the draft configuration from.
	EnvironmentName   string                                       `queryParam:"style=form,explode=true,name=EnvironmentName"`
	Version           GETDeleteEnvironmentConfigurationVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteEnvironmentConfigurationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
