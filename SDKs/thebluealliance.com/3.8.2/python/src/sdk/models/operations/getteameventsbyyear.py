"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import event as shared_event
from typing import Optional


@dataclasses.dataclass
class GetTeamEventsByYearSecurity:
    
    api_key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-TBA-Auth-Key' }})  
    

@dataclasses.dataclass
class GetTeamEventsByYearRequest:
    
    team_key: str = dataclasses.field(metadata={'path_param': { 'field_name': 'team_key', 'style': 'simple', 'explode': False }})
    r"""TBA Team Key, eg `frc254`"""  
    year: int = dataclasses.field(metadata={'path_param': { 'field_name': 'year', 'style': 'simple', 'explode': False }})
    r"""Competition Year (or Season). Must be 4 digits."""  
    if_none_match: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'If-None-Match', 'style': 'simple', 'explode': False }})
    r"""Value of the `ETag` header in the most recently cached response by the client."""  
    

@dataclasses.dataclass
class GetTeamEventsByYearResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    events: Optional[list[shared_event.Event]] = dataclasses.field(default=None)
    r"""Successful response"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    