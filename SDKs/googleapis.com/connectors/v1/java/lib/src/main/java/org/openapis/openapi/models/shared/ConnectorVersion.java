/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ConnectorVersion - ConnectorVersion indicates a specific version of a connector.
 */
public class ConnectorVersion {
    /**
     * Output only. List of auth configs supported by the Connector Version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authConfigTemplates")
    public AuthConfigTemplate[] authConfigTemplates;

    public ConnectorVersion withAuthConfigTemplates(AuthConfigTemplate[] authConfigTemplates) {
        this.authConfigTemplates = authConfigTemplates;
        return this;
    }
    
    /**
     * Output only. List of config variables needed to create a connection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configVariableTemplates")
    public ConfigVariableTemplate[] configVariableTemplates;

    public ConnectorVersion withConfigVariableTemplates(ConfigVariableTemplate[] configVariableTemplates) {
        this.configVariableTemplates = configVariableTemplates;
        return this;
    }
    
    /**
     * Output only. Created time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public ConnectorVersion withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Output only. List of destination configs needed to create a connection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationConfigTemplates")
    public DestinationConfigTemplate[] destinationConfigTemplates;

    public ConnectorVersion withDestinationConfigTemplates(DestinationConfigTemplate[] destinationConfigTemplates) {
        this.destinationConfigTemplates = destinationConfigTemplates;
        return this;
    }
    
    /**
     * Output only. Display name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public ConnectorVersion withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Egress control config for connector runtime. These configurations define the rules to identify which outbound domains/hosts needs to be whitelisted. It may be a static information for a particular connector version or it is derived from the configurations provided by the customer in Connection resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("egressControlConfig")
    public EgressControlConfig egressControlConfig;

    public ConnectorVersion withEgressControlConfig(EgressControlConfig egressControlConfig) {
        this.egressControlConfig = egressControlConfig;
        return this;
    }
    
    /**
     * Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public ConnectorVersion withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Output only. Flag to mark the version indicating the launch stage.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("launchStage")
    public ConnectorVersionLaunchStageEnum launchStage;

    public ConnectorVersion withLaunchStage(ConnectorVersionLaunchStageEnum launchStage) {
        this.launchStage = launchStage;
        return this;
    }
    
    /**
     * Output only. Resource name of the Version. Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector}/versions/{version} Only global location is supported for Connector resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public ConnectorVersion withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. ReleaseVersion of the connector, for example: "1.0.1-alpha".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("releaseVersion")
    public String releaseVersion;

    public ConnectorVersion withReleaseVersion(String releaseVersion) {
        this.releaseVersion = releaseVersion;
        return this;
    }
    
    /**
     * This configuration defines all the Cloud IAM roles that needs to be granted to a particular GCP resource for the selected prinicpal like service account. These configurations will let UI display to customers what IAM roles need to be granted by them. Or these configurations can be used by the UI to render a 'grant' button to do the same on behalf of the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("roleGrant")
    public RoleGrant roleGrant;

    public ConnectorVersion withRoleGrant(RoleGrant roleGrant) {
        this.roleGrant = roleGrant;
        return this;
    }
    
    /**
     * Output only. Role grant configurations for this connector version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("roleGrants")
    public RoleGrant[] roleGrants;

    public ConnectorVersion withRoleGrants(RoleGrant[] roleGrants) {
        this.roleGrants = roleGrants;
        return this;
    }
    
    /**
     * Ssl config details of a connector version
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sslConfigTemplate")
    public SslConfigTemplate sslConfigTemplate;

    public ConnectorVersion withSslConfigTemplate(SslConfigTemplate sslConfigTemplate) {
        this.sslConfigTemplate = sslConfigTemplate;
        return this;
    }
    
    /**
     * Supported runtime features of a connector version. This is passed to the management layer to add a new connector version by the connector developer. Details about how this proto is passed to the management layer is covered in this doc - go/runtime-manifest.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supportedRuntimeFeatures")
    public SupportedRuntimeFeatures supportedRuntimeFeatures;

    public ConnectorVersion withSupportedRuntimeFeatures(SupportedRuntimeFeatures supportedRuntimeFeatures) {
        this.supportedRuntimeFeatures = supportedRuntimeFeatures;
        return this;
    }
    
    /**
     * Output only. Updated time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public ConnectorVersion withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public ConnectorVersion(){}
}
