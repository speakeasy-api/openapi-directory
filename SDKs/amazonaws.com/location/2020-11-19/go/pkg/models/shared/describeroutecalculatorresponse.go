// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DescribeRouteCalculatorResponsePricingPlanEnum - Always returns <code>RequestBasedUsage</code>.Deprecated. Always returns RequestBasedUsage.
type DescribeRouteCalculatorResponsePricingPlanEnum string

const (
	DescribeRouteCalculatorResponsePricingPlanEnumRequestBasedUsage     DescribeRouteCalculatorResponsePricingPlanEnum = "RequestBasedUsage"
	DescribeRouteCalculatorResponsePricingPlanEnumMobileAssetTracking   DescribeRouteCalculatorResponsePricingPlanEnum = "MobileAssetTracking"
	DescribeRouteCalculatorResponsePricingPlanEnumMobileAssetManagement DescribeRouteCalculatorResponsePricingPlanEnum = "MobileAssetManagement"
)

func (e DescribeRouteCalculatorResponsePricingPlanEnum) ToPointer() *DescribeRouteCalculatorResponsePricingPlanEnum {
	return &e
}

func (e *DescribeRouteCalculatorResponsePricingPlanEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RequestBasedUsage":
		fallthrough
	case "MobileAssetTracking":
		fallthrough
	case "MobileAssetManagement":
		*e = DescribeRouteCalculatorResponsePricingPlanEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeRouteCalculatorResponsePricingPlanEnum: %v", v)
	}
}

// DescribeRouteCalculatorResponse - Success
type DescribeRouteCalculatorResponse struct {
	CalculatorArn  string                                          `json:"CalculatorArn"`
	CalculatorName string                                          `json:"CalculatorName"`
	CreateTime     time.Time                                       `json:"CreateTime"`
	DataSource     string                                          `json:"DataSource"`
	Description    string                                          `json:"Description"`
	PricingPlan    *DescribeRouteCalculatorResponsePricingPlanEnum `json:"PricingPlan,omitempty"`
	Tags           map[string]string                               `json:"Tags,omitempty"`
	UpdateTime     time.Time                                       `json:"UpdateTime"`
}
