// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DeleteGroupPathParams struct {
	// Id of the group
	GroupID string `pathParam:"style=simple,explode=false,name=groupId"`
}

type DeleteGroupRequest struct {
	PathParams DeleteGroupPathParams
}

// DeleteGroup200ApplicationJSONActionEnum - The id of the action
type DeleteGroup200ApplicationJSONActionEnum string

const (
	DeleteGroup200ApplicationJSONActionEnumDeleteGroup DeleteGroup200ApplicationJSONActionEnum = "deleteGroup"
)

func (e *DeleteGroup200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "deleteGroup":
		*e = DeleteGroup200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteGroup200ApplicationJSONActionEnum: %s", s)
	}
}

type DeleteGroup200ApplicationJSONData struct {
	Groups []shared.Group `json:"groups"`
}

// DeleteGroup200ApplicationJSONResultEnum - Result of the request
type DeleteGroup200ApplicationJSONResultEnum string

const (
	DeleteGroup200ApplicationJSONResultEnumSuccess DeleteGroup200ApplicationJSONResultEnum = "success"
	DeleteGroup200ApplicationJSONResultEnumError   DeleteGroup200ApplicationJSONResultEnum = "error"
)

func (e *DeleteGroup200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = DeleteGroup200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteGroup200ApplicationJSONResultEnum: %s", s)
	}
}

// DeleteGroup200ApplicationJSON - Groups information
type DeleteGroup200ApplicationJSON struct {
	// The id of the action
	Action DeleteGroup200ApplicationJSONActionEnum `json:"action"`
	Data   DeleteGroup200ApplicationJSONData       `json:"data"`
	// Result of the request
	Result DeleteGroup200ApplicationJSONResultEnum `json:"result"`
}

type DeleteGroupResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Groups information
	DeleteGroup200ApplicationJSONObject *DeleteGroup200ApplicationJSON
}
