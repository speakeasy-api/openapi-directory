/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Controls what kind of layout the page is rendered in
 */
export enum PostApiPagesRequestBodyTemplateEnum {
  Contained = "contained",
  FullWithinLayout = "full_within_layout",
  NavBarIncluded = "nav_bar_included",
  Json = "json",
}

export class PostApiPagesRequestBody extends SpeakeasyBase {
  /**
   * For JSON pages, the JSON body
   */
  @SpeakeasyMetadata()
  @Expose({ name: "body_json" })
  bodyJson?: string;

  /**
   * The text (in markdown) of the ad (required)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "body_markdown" })
  bodyMarkdown?: string;

  /**
   * For internal use, helps similar pages from one another
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * If true, the page is available at '/{slug}' instead of '/page/{slug}', use with caution
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_top_level_path" })
  isTopLevelPath?: boolean;

  /**
   * Used to link to this page in URLs, must be unique and URL-safe
   */
  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug?: string;

  /**
   * Controls what kind of layout the page is rendered in
   */
  @SpeakeasyMetadata()
  @Expose({ name: "template" })
  template?: PostApiPagesRequestBodyTemplateEnum;

  /**
   * Title of the page
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}

export class PostApiPagesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
