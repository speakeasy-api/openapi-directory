// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetTelemetryMetadataXAmzTargetEnum
type GetTelemetryMetadataXAmzTargetEnum string

const (
	GetTelemetryMetadataXAmzTargetEnumInspectorServiceGetTelemetryMetadata GetTelemetryMetadataXAmzTargetEnum = "InspectorService.GetTelemetryMetadata"
)

func (e GetTelemetryMetadataXAmzTargetEnum) ToPointer() *GetTelemetryMetadataXAmzTargetEnum {
	return &e
}

func (e *GetTelemetryMetadataXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "InspectorService.GetTelemetryMetadata":
		*e = GetTelemetryMetadataXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetTelemetryMetadataXAmzTargetEnum: %v", v)
	}
}

type GetTelemetryMetadataRequest struct {
	GetTelemetryMetadataRequest shared.GetTelemetryMetadataRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  GetTelemetryMetadataXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetTelemetryMetadataResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	GetTelemetryMetadataResponse *shared.GetTelemetryMetadataResponse
	// InternalException
	InternalException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// NoSuchEntityException
	NoSuchEntityException interface{}
	StatusCode            int
	RawResponse           *http.Response
}
