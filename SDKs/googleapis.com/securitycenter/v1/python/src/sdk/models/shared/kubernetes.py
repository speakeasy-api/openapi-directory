"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accessreview as shared_accessreview
from ..shared import googlecloudsecuritycenterv1binding as shared_googlecloudsecuritycenterv1binding
from ..shared import node as shared_node
from ..shared import nodepool as shared_nodepool
from ..shared import pod as shared_pod
from ..shared import role as shared_role
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Kubernetes:
    r"""Kubernetes-related attributes."""
    
    access_reviews: Optional[list[shared_accessreview.AccessReview]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessReviews'), 'exclude': lambda f: f is None }})
    r"""Provides information on any Kubernetes access reviews (i.e. privilege checks) relevant to the finding."""  
    bindings: Optional[list[shared_googlecloudsecuritycenterv1binding.GoogleCloudSecuritycenterV1Binding]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bindings'), 'exclude': lambda f: f is None }})
    r"""Provides Kubernetes role binding information for findings that involve RoleBindings or ClusterRoleBindings."""  
    node_pools: Optional[list[shared_nodepool.NodePool]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nodePools'), 'exclude': lambda f: f is None }})
    r"""GKE Node Pools associated with the finding. This field will contain NodePool information for each Node, when it is available."""  
    nodes: Optional[list[shared_node.Node]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nodes'), 'exclude': lambda f: f is None }})
    r"""Provides Kubernetes Node information."""  
    pods: Optional[list[shared_pod.Pod]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pods'), 'exclude': lambda f: f is None }})
    r"""Kubernetes Pods associated with the finding. This field will contain Pod records for each container that is owned by a Pod."""  
    roles: Optional[list[shared_role.Role]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('roles'), 'exclude': lambda f: f is None }})
    r"""Provides Kubernetes role information for findings that involve Roles or ClusterRoles."""  
    