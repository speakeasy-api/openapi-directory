/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class TflApiPresentationEntitiesJourneyPlannerLeg {
    /**
     * Represents a point located at a latitude and longitude using the WGS84 co-ordinate system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("arrivalPoint")
    public TflApiPresentationEntitiesPoint arrivalPoint;
    public TflApiPresentationEntitiesJourneyPlannerLeg withArrivalPoint(TflApiPresentationEntitiesPoint arrivalPoint) {
        this.arrivalPoint = arrivalPoint;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("arrivalTime")
    public OffsetDateTime arrivalTime;
    public TflApiPresentationEntitiesJourneyPlannerLeg withArrivalTime(OffsetDateTime arrivalTime) {
        this.arrivalTime = arrivalTime;
        return this;
    }
    
    /**
     * Represents a point located at a latitude and longitude using the WGS84 co-ordinate system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("departurePoint")
    public TflApiPresentationEntitiesPoint departurePoint;
    public TflApiPresentationEntitiesJourneyPlannerLeg withDeparturePoint(TflApiPresentationEntitiesPoint departurePoint) {
        this.departurePoint = departurePoint;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("departureTime")
    public OffsetDateTime departureTime;
    public TflApiPresentationEntitiesJourneyPlannerLeg withDepartureTime(OffsetDateTime departureTime) {
        this.departureTime = departureTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disruptions")
    public TflApiPresentationEntitiesDisruption[] disruptions;
    public TflApiPresentationEntitiesJourneyPlannerLeg withDisruptions(TflApiPresentationEntitiesDisruption[] disruptions) {
        this.disruptions = disruptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("distance")
    public Double distance;
    public TflApiPresentationEntitiesJourneyPlannerLeg withDistance(Double distance) {
        this.distance = distance;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Integer duration;
    public TflApiPresentationEntitiesJourneyPlannerLeg withDuration(Integer duration) {
        this.duration = duration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasFixedLocations")
    public Boolean hasFixedLocations;
    public TflApiPresentationEntitiesJourneyPlannerLeg withHasFixedLocations(Boolean hasFixedLocations) {
        this.hasFixedLocations = hasFixedLocations;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instruction")
    public TflApiPresentationEntitiesInstruction instruction;
    public TflApiPresentationEntitiesJourneyPlannerLeg withInstruction(TflApiPresentationEntitiesInstruction instruction) {
        this.instruction = instruction;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("interChangeDuration")
    public String interChangeDuration;
    public TflApiPresentationEntitiesJourneyPlannerLeg withInterChangeDuration(String interChangeDuration) {
        this.interChangeDuration = interChangeDuration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("interChangePosition")
    public String interChangePosition;
    public TflApiPresentationEntitiesJourneyPlannerLeg withInterChangePosition(String interChangePosition) {
        this.interChangePosition = interChangePosition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isDisrupted")
    public Boolean isDisrupted;
    public TflApiPresentationEntitiesJourneyPlannerLeg withIsDisrupted(Boolean isDisrupted) {
        this.isDisrupted = isDisrupted;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mode")
    public TflApiPresentationEntitiesIdentifier mode;
    public TflApiPresentationEntitiesJourneyPlannerLeg withMode(TflApiPresentationEntitiesIdentifier mode) {
        this.mode = mode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("obstacles")
    public TflApiPresentationEntitiesJourneyPlannerObstacle[] obstacles;
    public TflApiPresentationEntitiesJourneyPlannerLeg withObstacles(TflApiPresentationEntitiesJourneyPlannerObstacle[] obstacles) {
        this.obstacles = obstacles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public TflApiPresentationEntitiesJourneyPlannerPath path;
    public TflApiPresentationEntitiesJourneyPlannerLeg withPath(TflApiPresentationEntitiesJourneyPlannerPath path) {
        this.path = path;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plannedWorks")
    public TflApiPresentationEntitiesJourneyPlannerPlannedWork[] plannedWorks;
    public TflApiPresentationEntitiesJourneyPlannerLeg withPlannedWorks(TflApiPresentationEntitiesJourneyPlannerPlannedWork[] plannedWorks) {
        this.plannedWorks = plannedWorks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("routeOptions")
    public TflApiPresentationEntitiesJourneyPlannerRouteOption[] routeOptions;
    public TflApiPresentationEntitiesJourneyPlannerLeg withRouteOptions(TflApiPresentationEntitiesJourneyPlannerRouteOption[] routeOptions) {
        this.routeOptions = routeOptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("scheduledArrivalTime")
    public OffsetDateTime scheduledArrivalTime;
    public TflApiPresentationEntitiesJourneyPlannerLeg withScheduledArrivalTime(OffsetDateTime scheduledArrivalTime) {
        this.scheduledArrivalTime = scheduledArrivalTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("scheduledDepartureTime")
    public OffsetDateTime scheduledDepartureTime;
    public TflApiPresentationEntitiesJourneyPlannerLeg withScheduledDepartureTime(OffsetDateTime scheduledDepartureTime) {
        this.scheduledDepartureTime = scheduledDepartureTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("speed")
    public String speed;
    public TflApiPresentationEntitiesJourneyPlannerLeg withSpeed(String speed) {
        this.speed = speed;
        return this;
    }
    
}
