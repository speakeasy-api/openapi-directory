"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import listcatalogresponse as shared_listcatalogresponse
from typing import Optional


@dataclasses.dataclass
class ListCatalogSecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class ListCatalogRequest:
    
    catalog_version: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'catalog_version', 'style': 'form', 'explode': True }})
    r"""The specific version of the catalog objects to be included in the response.
    This allows you to retrieve historical
    versions of objects. The specified version value is matched against
    the [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject)s' `version` attribute.
    """  
    cursor: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'cursor', 'style': 'form', 'explode': True }})
    r"""The pagination cursor returned in the previous response. Leave unset for an initial request.
    The page size is currently set to be 100.
    See [Pagination](https://developer.squareup.com/docs/basics/api101/pagination) for more information.
    """  
    types: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'types', 'style': 'form', 'explode': True }})
    r"""An optional case-insensitive, comma-separated list of object types to retrieve.
    
    The valid values are defined in the [CatalogObjectType](https://developer.squareup.com/reference/square_2021-08-18/enums/CatalogObjectType) enum, including
    `ITEM`, `ITEM_VARIATION`, `CATEGORY`, `DISCOUNT`, `TAX`,
    `MODIFIER`, `MODIFIER_LIST`, or `IMAGE`.
    
    If this is unspecified, the operation returns objects of all the types at the version of the Square API used to make the request.
    """  
    

@dataclasses.dataclass
class ListCatalogResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    list_catalog_response: Optional[shared_listcatalogresponse.ListCatalogResponse] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    