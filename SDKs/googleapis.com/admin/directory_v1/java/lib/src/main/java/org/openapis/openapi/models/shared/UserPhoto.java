/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UserPhoto - Successful response
 */
public class UserPhoto {
    /**
     * ETag of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public UserPhoto withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Height of the photo in pixels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("height")
    public Integer height;

    public UserPhoto withHeight(Integer height) {
        this.height = height;
        return this;
    }
    
    /**
     * The ID the API uses to uniquely identify the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public UserPhoto withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The type of the API resource. For Photo resources, this is `admin#directory#user#photo`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public UserPhoto withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * The MIME type of the photo. Allowed values are `JPEG`, `PNG`, `GIF`, `BMP`, `TIFF`, and web-safe base64 encoding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mimeType")
    public String mimeType;

    public UserPhoto withMimeType(String mimeType) {
        this.mimeType = mimeType;
        return this;
    }
    
    /**
     * The user photo's upload data in [web-safe Base64](https://en.wikipedia.org/wiki/Base64#URL_applications) format in bytes. This means: * The slash (/) character is replaced with the underscore (_) character. * The plus sign (+) character is replaced with the hyphen (-) character. * The equals sign (=) character is replaced with the asterisk (*). * For padding, the period (.) character is used instead of the RFC-4648 baseURL definition which uses the equals sign (=) for padding. This is done to simplify URL-parsing. * Whatever the size of the photo being uploaded, the API downsizes it to 96x96 pixels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("photoData")
    public String photoData;

    public UserPhoto withPhotoData(String photoData) {
        this.photoData = photoData;
        return this;
    }
    
    /**
     * The user's primary email address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryEmail")
    public String primaryEmail;

    public UserPhoto withPrimaryEmail(String primaryEmail) {
        this.primaryEmail = primaryEmail;
        return this;
    }
    
    /**
     * Width of the photo in pixels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("width")
    public Integer width;

    public UserPhoto withWidth(Integer width) {
        this.width = width;
        return this;
    }
    
    public UserPhoto(){}
}
