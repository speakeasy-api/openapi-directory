// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETRestoreTableFromClusterSnapshotActionEnum
type GETRestoreTableFromClusterSnapshotActionEnum string

const (
	GETRestoreTableFromClusterSnapshotActionEnumRestoreTableFromClusterSnapshot GETRestoreTableFromClusterSnapshotActionEnum = "RestoreTableFromClusterSnapshot"
)

func (e *GETRestoreTableFromClusterSnapshotActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RestoreTableFromClusterSnapshot":
		*e = GETRestoreTableFromClusterSnapshotActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRestoreTableFromClusterSnapshotActionEnum: %s", s)
	}
}

// GETRestoreTableFromClusterSnapshotVersionEnum
type GETRestoreTableFromClusterSnapshotVersionEnum string

const (
	GETRestoreTableFromClusterSnapshotVersionEnumTwoThousandAndTwelve1201 GETRestoreTableFromClusterSnapshotVersionEnum = "2012-12-01"
)

func (e *GETRestoreTableFromClusterSnapshotVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = GETRestoreTableFromClusterSnapshotVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRestoreTableFromClusterSnapshotVersionEnum: %s", s)
	}
}

type GETRestoreTableFromClusterSnapshotQueryParams struct {
	Action GETRestoreTableFromClusterSnapshotActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The identifier of the Amazon Redshift cluster to restore the table to.
	ClusterIdentifier string `queryParam:"style=form,explode=true,name=ClusterIdentifier"`
	// Indicates whether name identifiers for database, schema, and table are case sensitive. If <code>true</code>, the names are case sensitive. If <code>false</code> (default), the names are not case sensitive.
	EnableCaseSensitiveIdentifier *bool `queryParam:"style=form,explode=true,name=EnableCaseSensitiveIdentifier"`
	// The name of the table to create as a result of the current request.
	NewTableName string `queryParam:"style=form,explode=true,name=NewTableName"`
	// The identifier of the snapshot to restore the table from. This snapshot must have been created from the Amazon Redshift cluster specified by the <code>ClusterIdentifier</code> parameter.
	SnapshotIdentifier string `queryParam:"style=form,explode=true,name=SnapshotIdentifier"`
	// The name of the source database that contains the table to restore from.
	SourceDatabaseName string `queryParam:"style=form,explode=true,name=SourceDatabaseName"`
	// The name of the source schema that contains the table to restore from. If you do not specify a <code>SourceSchemaName</code> value, the default is <code>public</code>.
	SourceSchemaName *string `queryParam:"style=form,explode=true,name=SourceSchemaName"`
	// The name of the source table to restore from.
	SourceTableName string `queryParam:"style=form,explode=true,name=SourceTableName"`
	// The name of the database to restore the table to.
	TargetDatabaseName *string `queryParam:"style=form,explode=true,name=TargetDatabaseName"`
	// The name of the schema to restore the table to.
	TargetSchemaName *string                                       `queryParam:"style=form,explode=true,name=TargetSchemaName"`
	Version          GETRestoreTableFromClusterSnapshotVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETRestoreTableFromClusterSnapshotHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETRestoreTableFromClusterSnapshotRequest struct {
	QueryParams GETRestoreTableFromClusterSnapshotQueryParams
	Headers     GETRestoreTableFromClusterSnapshotHeaders
}

type GETRestoreTableFromClusterSnapshotResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
