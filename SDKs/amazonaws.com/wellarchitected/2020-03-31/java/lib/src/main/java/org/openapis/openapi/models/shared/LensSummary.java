/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * LensSummary - A lens summary of a lens.
 */
public class LensSummary {
    /**
     * The date and time recorded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedAt")
    public OffsetDateTime createdAt;
    public LensSummary withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The description of the lens.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public LensSummary withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * &lt;p&gt;The alias of the lens.&lt;/p&gt; &lt;p&gt;For Amazon Web Services official lenses, this is either the lens alias, such as &lt;code&gt;serverless&lt;/code&gt;, or the lens ARN, such as &lt;code&gt;arn:aws:wellarchitected:us-west-2::lens/serverless&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;For custom lenses, this is the lens ARN, such as &lt;code&gt;arn:aws:wellarchitected:us-east-1:123456789012:lens/my-lens&lt;/code&gt;. &lt;/p&gt; &lt;p&gt;Each lens is identified by its &lt;a&gt;LensSummary$LensAlias&lt;/a&gt;.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LensAlias")
    public String lensAlias;
    public LensSummary withLensAlias(String lensAlias) {
        this.lensAlias = lensAlias;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LensArn")
    public String lensArn;
    public LensSummary withLensArn(String lensArn) {
        this.lensArn = lensArn;
        return this;
    }
    
    /**
     * The full name of the lens.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LensName")
    public String lensName;
    public LensSummary withLensName(String lensName) {
        this.lensName = lensName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LensStatus")
    public LensStatusEnum lensStatus;
    public LensSummary withLensStatus(LensStatusEnum lensStatus) {
        this.lensStatus = lensStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LensType")
    public LensTypeEnum lensType;
    public LensSummary withLensType(LensTypeEnum lensType) {
        this.lensType = lensType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LensVersion")
    public String lensVersion;
    public LensSummary withLensVersion(String lensVersion) {
        this.lensVersion = lensVersion;
        return this;
    }
    
    /**
     * An Amazon Web Services account ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Owner")
    public String owner;
    public LensSummary withOwner(String owner) {
        this.owner = owner;
        return this;
    }
    
    /**
     * The date and time recorded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("UpdatedAt")
    public OffsetDateTime updatedAt;
    public LensSummary withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
}
