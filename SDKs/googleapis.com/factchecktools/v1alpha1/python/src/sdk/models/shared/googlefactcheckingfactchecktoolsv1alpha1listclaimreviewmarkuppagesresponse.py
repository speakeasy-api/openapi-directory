"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlefactcheckingfactchecktoolsv1alpha1claimreviewmarkuppage as shared_googlefactcheckingfactchecktoolsv1alpha1claimreviewmarkuppage
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleFactcheckingFactchecktoolsV1alpha1ListClaimReviewMarkupPagesResponse:
    r"""Response from listing `ClaimReview` markup."""
    
    claim_review_markup_pages: Optional[list[shared_googlefactcheckingfactchecktoolsv1alpha1claimreviewmarkuppage.GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('claimReviewMarkupPages'), 'exclude': lambda f: f is None }})
    r"""The result list of pages of `ClaimReview` markup."""  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextPageToken'), 'exclude': lambda f: f is None }})
    r"""The next pagination token in the Search response. It should be used as the `page_token` for the following request. An empty value means no more results."""  
    