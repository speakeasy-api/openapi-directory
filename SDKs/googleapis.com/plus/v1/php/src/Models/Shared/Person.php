<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Person - Successful response
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Person
{
    /**
     * A short biography for this person.
     * 
     * @var ?string $aboutMe
     */
	#[\JMS\Serializer\Annotation\SerializedName('aboutMe')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $aboutMe = null;
    
    /**
     * The age range of the person. Valid ranges are 17 or younger, 18 to 20, and 21 or older. Age is determined from the user's birthday using Western age reckoning.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PersonAgeRange $ageRange
     */
	#[\JMS\Serializer\Annotation\SerializedName('ageRange')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PersonAgeRange')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PersonAgeRange $ageRange = null;
    
    /**
     * The person's date of birth, represented as YYYY-MM-DD.
     * 
     * @var ?string $birthday
     */
	#[\JMS\Serializer\Annotation\SerializedName('birthday')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $birthday = null;
    
    /**
     * The "bragging rights" line of this person.
     * 
     * @var ?string $braggingRights
     */
	#[\JMS\Serializer\Annotation\SerializedName('braggingRights')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $braggingRights = null;
    
    /**
     * For followers who are visible, the number of people who have added this person or page to a circle.
     * 
     * @var ?int $circledByCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('circledByCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $circledByCount = null;
    
    /**
     * The cover photo content.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PersonCover $cover
     */
	#[\JMS\Serializer\Annotation\SerializedName('cover')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PersonCover')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PersonCover $cover = null;
    
    /**
     * (this field is not currently used)
     * 
     * @var ?string $currentLocation
     */
	#[\JMS\Serializer\Annotation\SerializedName('currentLocation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currentLocation = null;
    
    /**
     * The name of this person, which is suitable for display.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * The hosted domain name for the user's Google Apps account. For instance, example.com. The plus.profile.emails.read or email scope is needed to get this domain name.
     * 
     * @var ?string $domain
     */
	#[\JMS\Serializer\Annotation\SerializedName('domain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $domain = null;
    
    /**
     * A list of email addresses that this person has, including their Google account email address, and the public verified email addresses on their Google+ profile. The plus.profile.emails.read scope is needed to retrieve these email addresses, or the email scope can be used to retrieve just the Google account email address.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PersonEmails> $emails
     */
	#[\JMS\Serializer\Annotation\SerializedName('emails')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PersonEmails>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $emails = null;
    
    /**
     * ETag of this response for caching purposes.
     * 
     * @var ?string $etag
     */
	#[\JMS\Serializer\Annotation\SerializedName('etag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $etag = null;
    
    /**
     * The person's gender. Possible values include, but are not limited to, the following values:  
     * 
     * - "male" - Male gender. 
     * - "female" - Female gender. 
     * - "other" - Other.
     * 
     * @var ?string $gender
     */
	#[\JMS\Serializer\Annotation\SerializedName('gender')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gender = null;
    
    /**
     * The ID of this person.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The representation of the person's profile photo.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PersonImage $image
     */
	#[\JMS\Serializer\Annotation\SerializedName('image')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PersonImage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PersonImage $image = null;
    
    /**
     * Whether this user has signed up for Google+.
     * 
     * @var ?bool $isPlusUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('isPlusUser')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isPlusUser = null;
    
    /**
     * Identifies this resource as a person. Value: "plus#person".
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * The user's preferred language for rendering.
     * 
     * @var ?string $language
     */
	#[\JMS\Serializer\Annotation\SerializedName('language')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $language = null;
    
    /**
     * An object representation of the individual components of a person's name.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PersonName $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PersonName')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PersonName $name = null;
    
    /**
     * The nickname of this person.
     * 
     * @var ?string $nickname
     */
	#[\JMS\Serializer\Annotation\SerializedName('nickname')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nickname = null;
    
    /**
     * Type of person within Google+. Possible values include, but are not limited to, the following values:  
     * 
     * - "person" - represents an actual person. 
     * - "page" - represents a page.
     * 
     * @var ?string $objectType
     */
	#[\JMS\Serializer\Annotation\SerializedName('objectType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $objectType = null;
    
    /**
     * The occupation of this person.
     * 
     * @var ?string $occupation
     */
	#[\JMS\Serializer\Annotation\SerializedName('occupation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $occupation = null;
    
    /**
     * A list of current or past organizations with which this person is associated.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PersonOrganizations> $organizations
     */
	#[\JMS\Serializer\Annotation\SerializedName('organizations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PersonOrganizations>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $organizations = null;
    
    /**
     * A list of places where this person has lived.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PersonPlacesLived> $placesLived
     */
	#[\JMS\Serializer\Annotation\SerializedName('placesLived')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PersonPlacesLived>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $placesLived = null;
    
    /**
     * If a Google+ Page, the number of people who have +1'd this page.
     * 
     * @var ?int $plusOneCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('plusOneCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $plusOneCount = null;
    
    /**
     * The person's relationship status. Possible values include, but are not limited to, the following values:  
     * 
     * - "single" - Person is single. 
     * - "in_a_relationship" - Person is in a relationship. 
     * - "engaged" - Person is engaged. 
     * - "married" - Person is married. 
     * - "its_complicated" - The relationship is complicated. 
     * - "open_relationship" - Person is in an open relationship. 
     * - "widowed" - Person is widowed. 
     * - "in_domestic_partnership" - Person is in a domestic partnership. 
     * - "in_civil_union" - Person is in a civil union.
     * 
     * @var ?string $relationshipStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('relationshipStatus')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $relationshipStatus = null;
    
    /**
     * The person's skills.
     * 
     * @var ?string $skills
     */
	#[\JMS\Serializer\Annotation\SerializedName('skills')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $skills = null;
    
    /**
     * The brief description (tagline) of this person.
     * 
     * @var ?string $tagline
     */
	#[\JMS\Serializer\Annotation\SerializedName('tagline')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tagline = null;
    
    /**
     * The URL of this person's profile.
     * 
     * @var ?string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
    /**
     * A list of URLs for this person.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PersonUrls> $urls
     */
	#[\JMS\Serializer\Annotation\SerializedName('urls')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PersonUrls>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $urls = null;
    
    /**
     * Whether the person or Google+ Page has been verified.
     * 
     * @var ?bool $verified
     */
	#[\JMS\Serializer\Annotation\SerializedName('verified')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $verified = null;
    
	public function __construct()
	{
		$this->aboutMe = null;
		$this->ageRange = null;
		$this->birthday = null;
		$this->braggingRights = null;
		$this->circledByCount = null;
		$this->cover = null;
		$this->currentLocation = null;
		$this->displayName = null;
		$this->domain = null;
		$this->emails = null;
		$this->etag = null;
		$this->gender = null;
		$this->id = null;
		$this->image = null;
		$this->isPlusUser = null;
		$this->kind = null;
		$this->language = null;
		$this->name = null;
		$this->nickname = null;
		$this->objectType = null;
		$this->occupation = null;
		$this->organizations = null;
		$this->placesLived = null;
		$this->plusOneCount = null;
		$this->relationshipStatus = null;
		$this->skills = null;
		$this->tagline = null;
		$this->url = null;
		$this->urls = null;
		$this->verified = null;
	}
}
