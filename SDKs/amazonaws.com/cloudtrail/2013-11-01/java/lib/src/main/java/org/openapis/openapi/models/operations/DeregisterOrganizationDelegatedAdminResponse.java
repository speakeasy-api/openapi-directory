/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class DeregisterOrganizationDelegatedAdminResponse {
    /**
     * AccountNotFoundException
     */
    
    public Object accountNotFoundException;
    public DeregisterOrganizationDelegatedAdminResponse withAccountNotFoundException(Object accountNotFoundException) {
        this.accountNotFoundException = accountNotFoundException;
        return this;
    }
    
    /**
     * AccountNotRegisteredException
     */
    
    public Object accountNotRegisteredException;
    public DeregisterOrganizationDelegatedAdminResponse withAccountNotRegisteredException(Object accountNotRegisteredException) {
        this.accountNotRegisteredException = accountNotRegisteredException;
        return this;
    }
    
    /**
     * CloudTrailAccessNotEnabledException
     */
    
    public Object cloudTrailAccessNotEnabledException;
    public DeregisterOrganizationDelegatedAdminResponse withCloudTrailAccessNotEnabledException(Object cloudTrailAccessNotEnabledException) {
        this.cloudTrailAccessNotEnabledException = cloudTrailAccessNotEnabledException;
        return this;
    }
    
    /**
     * ConflictException
     */
    
    public Object conflictException;
    public DeregisterOrganizationDelegatedAdminResponse withConflictException(Object conflictException) {
        this.conflictException = conflictException;
        return this;
    }
    
    
    public String contentType;
    public DeregisterOrganizationDelegatedAdminResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public java.util.Map<String, Object> deregisterOrganizationDelegatedAdminResponse;
    public DeregisterOrganizationDelegatedAdminResponse withDeregisterOrganizationDelegatedAdminResponse(java.util.Map<String, Object> deregisterOrganizationDelegatedAdminResponse) {
        this.deregisterOrganizationDelegatedAdminResponse = deregisterOrganizationDelegatedAdminResponse;
        return this;
    }
    
    /**
     * InsufficientDependencyServiceAccessPermissionException
     */
    
    public Object insufficientDependencyServiceAccessPermissionException;
    public DeregisterOrganizationDelegatedAdminResponse withInsufficientDependencyServiceAccessPermissionException(Object insufficientDependencyServiceAccessPermissionException) {
        this.insufficientDependencyServiceAccessPermissionException = insufficientDependencyServiceAccessPermissionException;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;
    public DeregisterOrganizationDelegatedAdminResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * NotOrganizationManagementAccountException
     */
    
    public Object notOrganizationManagementAccountException;
    public DeregisterOrganizationDelegatedAdminResponse withNotOrganizationManagementAccountException(Object notOrganizationManagementAccountException) {
        this.notOrganizationManagementAccountException = notOrganizationManagementAccountException;
        return this;
    }
    
    /**
     * OperationNotPermittedException
     */
    
    public Object operationNotPermittedException;
    public DeregisterOrganizationDelegatedAdminResponse withOperationNotPermittedException(Object operationNotPermittedException) {
        this.operationNotPermittedException = operationNotPermittedException;
        return this;
    }
    
    /**
     * OrganizationNotInAllFeaturesModeException
     */
    
    public Object organizationNotInAllFeaturesModeException;
    public DeregisterOrganizationDelegatedAdminResponse withOrganizationNotInAllFeaturesModeException(Object organizationNotInAllFeaturesModeException) {
        this.organizationNotInAllFeaturesModeException = organizationNotInAllFeaturesModeException;
        return this;
    }
    
    /**
     * OrganizationsNotInUseException
     */
    
    public Object organizationsNotInUseException;
    public DeregisterOrganizationDelegatedAdminResponse withOrganizationsNotInUseException(Object organizationsNotInUseException) {
        this.organizationsNotInUseException = organizationsNotInUseException;
        return this;
    }
    
    
    public Integer statusCode;
    public DeregisterOrganizationDelegatedAdminResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public DeregisterOrganizationDelegatedAdminResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * UnsupportedOperationException
     */
    
    public Object unsupportedOperationException;
    public DeregisterOrganizationDelegatedAdminResponse withUnsupportedOperationException(Object unsupportedOperationException) {
        this.unsupportedOperationException = unsupportedOperationException;
        return this;
    }
    
}
