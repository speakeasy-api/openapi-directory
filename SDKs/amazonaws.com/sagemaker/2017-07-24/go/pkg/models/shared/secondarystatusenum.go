// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SecondaryStatusEnum string

const (
	SecondaryStatusEnumStarting                 SecondaryStatusEnum = "Starting"
	SecondaryStatusEnumLaunchingMlInstances     SecondaryStatusEnum = "LaunchingMLInstances"
	SecondaryStatusEnumPreparingTrainingStack   SecondaryStatusEnum = "PreparingTrainingStack"
	SecondaryStatusEnumDownloading              SecondaryStatusEnum = "Downloading"
	SecondaryStatusEnumDownloadingTrainingImage SecondaryStatusEnum = "DownloadingTrainingImage"
	SecondaryStatusEnumTraining                 SecondaryStatusEnum = "Training"
	SecondaryStatusEnumUploading                SecondaryStatusEnum = "Uploading"
	SecondaryStatusEnumStopping                 SecondaryStatusEnum = "Stopping"
	SecondaryStatusEnumStopped                  SecondaryStatusEnum = "Stopped"
	SecondaryStatusEnumMaxRuntimeExceeded       SecondaryStatusEnum = "MaxRuntimeExceeded"
	SecondaryStatusEnumCompleted                SecondaryStatusEnum = "Completed"
	SecondaryStatusEnumFailed                   SecondaryStatusEnum = "Failed"
	SecondaryStatusEnumInterrupted              SecondaryStatusEnum = "Interrupted"
	SecondaryStatusEnumMaxWaitTimeExceeded      SecondaryStatusEnum = "MaxWaitTimeExceeded"
	SecondaryStatusEnumUpdating                 SecondaryStatusEnum = "Updating"
	SecondaryStatusEnumRestarting               SecondaryStatusEnum = "Restarting"
)

func (e SecondaryStatusEnum) ToPointer() *SecondaryStatusEnum {
	return &e
}

func (e *SecondaryStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Starting":
		fallthrough
	case "LaunchingMLInstances":
		fallthrough
	case "PreparingTrainingStack":
		fallthrough
	case "Downloading":
		fallthrough
	case "DownloadingTrainingImage":
		fallthrough
	case "Training":
		fallthrough
	case "Uploading":
		fallthrough
	case "Stopping":
		fallthrough
	case "Stopped":
		fallthrough
	case "MaxRuntimeExceeded":
		fallthrough
	case "Completed":
		fallthrough
	case "Failed":
		fallthrough
	case "Interrupted":
		fallthrough
	case "MaxWaitTimeExceeded":
		fallthrough
	case "Updating":
		fallthrough
	case "Restarting":
		*e = SecondaryStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SecondaryStatusEnum: %v", v)
	}
}
