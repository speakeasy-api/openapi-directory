// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CardProfileDigitalWalletsTextColor - The Card's text color, specified as an RGB triple.
type CardProfileDigitalWalletsTextColor struct {
	// The value of the blue channel in the RGB color.
	Blue int64 `json:"blue"`
	// The value of the green channel in the RGB color.
	Green int64 `json:"green"`
	// The value of the red channel in the RGB color.
	Red int64 `json:"red"`
}

// CardProfileDigitalWallets - How Cards should appear in digital wallets such as Apple Pay. Different wallets will use these values to render card artwork appropriately for their app.
type CardProfileDigitalWallets struct {
	// The identifier of the File containing the card's icon image.
	AppIconFileID string `json:"app_icon_file_id"`
	// The identifier of the File containing the card's front image.
	BackgroundImageFileID string `json:"background_image_file_id"`
	// A user-facing description for the card itself.
	CardDescription string `json:"card_description"`
	// An email address the user can contact to receive support for their card.
	ContactEmail string `json:"contact_email"`
	// A phone number the user can contact to receive support for their card.
	ContactPhone string `json:"contact_phone"`
	// A website the user can visit to view and receive support for their card.
	ContactWebsite string `json:"contact_website"`
	// A user-facing description for whoever is issuing the card.
	IssuerName string `json:"issuer_name"`
	// The Card's text color, specified as an RGB triple.
	TextColor CardProfileDigitalWalletsTextColor `json:"text_color"`
}

// CardProfileStatusEnum - The status of the Card Profile.
type CardProfileStatusEnum string

const (
	CardProfileStatusEnumPending  CardProfileStatusEnum = "pending"
	CardProfileStatusEnumRejected CardProfileStatusEnum = "rejected"
	CardProfileStatusEnumActive   CardProfileStatusEnum = "active"
	CardProfileStatusEnumArchived CardProfileStatusEnum = "archived"
)

func (e *CardProfileStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "rejected":
		fallthrough
	case "active":
		fallthrough
	case "archived":
		*e = CardProfileStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CardProfileStatusEnum: %s", s)
	}
}

// CardProfileTypeEnum - A constant representing the object's type. For this resource it will always be `card_profile`.
type CardProfileTypeEnum string

const (
	CardProfileTypeEnumCardProfile CardProfileTypeEnum = "card_profile"
)

func (e *CardProfileTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "card_profile":
		*e = CardProfileTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CardProfileTypeEnum: %s", s)
	}
}

// CardProfile - This contains artwork and metadata relating to a Card's appearance in digital wallet apps like Apple Pay and Google Pay. For more information, see our guide on [digital card artwork](https://increase.com/documentation/card-art)
type CardProfile struct {
	// The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was created.
	CreatedAt time.Time `json:"created_at"`
	// A description you can use to identify the Card Profile.
	Description string `json:"description"`
	// How Cards should appear in digital wallets such as Apple Pay. Different wallets will use these values to render card artwork appropriately for their app.
	DigitalWallets CardProfileDigitalWallets `json:"digital_wallets"`
	// The Card Profile identifier.
	ID string `json:"id"`
	// The status of the Card Profile.
	Status CardProfileStatusEnum `json:"status"`
	// A constant representing the object's type. For this resource it will always be `card_profile`.
	Type CardProfileTypeEnum `json:"type"`
}
