/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OrderMoneyAmounts } from "./ordermoneyamounts";
import { OrderReturnDiscount } from "./orderreturndiscount";
import { OrderReturnLineItem } from "./orderreturnlineitem";
import { OrderReturnServiceCharge } from "./orderreturnservicecharge";
import { OrderReturnTax } from "./orderreturntax";
import { OrderRoundingAdjustment } from "./orderroundingadjustment";
import { Expose, Type } from "class-transformer";

/**
 * The set of line items, service charges, taxes, discounts, tips, and other items being returned in an order.
 */
export class OrderReturn extends SpeakeasyBase {
  /**
   * A collection of various money amounts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "return_amounts" })
  @Type(() => OrderMoneyAmounts)
  returnAmounts?: OrderMoneyAmounts;

  /**
   * A collection of references to discounts being returned for an order, including the total
   *
   * @remarks
   * applied discount amount to be returned. The discounts must reference a top-level discount ID
   * from the source order.
   */
  @SpeakeasyMetadata({ elemType: OrderReturnDiscount })
  @Expose({ name: "return_discounts" })
  @Type(() => OrderReturnDiscount)
  returnDiscounts?: OrderReturnDiscount[];

  /**
   * A collection of line items that are being returned.
   */
  @SpeakeasyMetadata({ elemType: OrderReturnLineItem })
  @Expose({ name: "return_line_items" })
  @Type(() => OrderReturnLineItem)
  returnLineItems?: OrderReturnLineItem[];

  /**
   * A collection of service charges that are being returned.
   */
  @SpeakeasyMetadata({ elemType: OrderReturnServiceCharge })
  @Expose({ name: "return_service_charges" })
  @Type(() => OrderReturnServiceCharge)
  returnServiceCharges?: OrderReturnServiceCharge[];

  /**
   * A collection of references to taxes being returned for an order, including the total
   *
   * @remarks
   * applied tax amount to be returned. The taxes must reference a top-level tax ID from the source
   * order.
   */
  @SpeakeasyMetadata({ elemType: OrderReturnTax })
  @Expose({ name: "return_taxes" })
  @Type(() => OrderReturnTax)
  returnTaxes?: OrderReturnTax[];

  /**
   * A rounding adjustment of the money being returned. Commonly used to apply cash rounding
   *
   * @remarks
   * when the minimum unit of the account is smaller than the lowest physical denomination of the currency.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rounding_adjustment" })
  @Type(() => OrderRoundingAdjustment)
  roundingAdjustment?: OrderRoundingAdjustment;

  /**
   * An order that contains the original sale of these return line items. This is unset
   *
   * @remarks
   * for unlinked returns.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source_order_id" })
  sourceOrderId?: string;

  /**
   * A unique ID that identifies the return only within this order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uid" })
  uid?: string;
}
