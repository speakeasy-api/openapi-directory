"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CloudTask = exports.CloudTaskStateEnum = exports.CloudTaskPreviousStateEnum = void 0;
var utils_1 = require("../../../internal/utils");
var affinityinformation_1 = require("./affinityinformation");
var computenodeinformation_1 = require("./computenodeinformation");
var environmentsetting_1 = require("./environmentsetting");
var multiinstancesettings_1 = require("./multiinstancesettings");
var resourcefile_1 = require("./resourcefile");
var taskconstraints_1 = require("./taskconstraints");
var taskdependencies_1 = require("./taskdependencies");
var taskexecutioninformation_1 = require("./taskexecutioninformation");
var taskstatistics_1 = require("./taskstatistics");
var class_transformer_1 = require("class-transformer");
/**
 * Gets or sets the previous state of the task. This property is not set if the task is in its initial Active state.
 */
var CloudTaskPreviousStateEnum;
(function (CloudTaskPreviousStateEnum) {
    CloudTaskPreviousStateEnum["Active"] = "active";
    CloudTaskPreviousStateEnum["Preparing"] = "preparing";
    CloudTaskPreviousStateEnum["Running"] = "running";
    CloudTaskPreviousStateEnum["Completed"] = "completed";
})(CloudTaskPreviousStateEnum = exports.CloudTaskPreviousStateEnum || (exports.CloudTaskPreviousStateEnum = {}));
/**
 * Gets or sets the current state of the task.
 */
var CloudTaskStateEnum;
(function (CloudTaskStateEnum) {
    CloudTaskStateEnum["Active"] = "active";
    CloudTaskStateEnum["Preparing"] = "preparing";
    CloudTaskStateEnum["Running"] = "running";
    CloudTaskStateEnum["Completed"] = "completed";
})(CloudTaskStateEnum = exports.CloudTaskStateEnum || (exports.CloudTaskStateEnum = {}));
/**
 * An Azure Batch task.
 */
var CloudTask = /** @class */ (function (_super) {
    __extends(CloudTask, _super);
    function CloudTask() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "affinityInfo" }),
        (0, class_transformer_1.Type)(function () { return affinityinformation_1.AffinityInformation; }),
        __metadata("design:type", affinityinformation_1.AffinityInformation)
    ], CloudTask.prototype, "affinityInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "commandLine" }),
        __metadata("design:type", String)
    ], CloudTask.prototype, "commandLine", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "constraints" }),
        (0, class_transformer_1.Type)(function () { return taskconstraints_1.TaskConstraints; }),
        __metadata("design:type", taskconstraints_1.TaskConstraints)
    ], CloudTask.prototype, "constraints", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTime" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], CloudTask.prototype, "creationTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dependsOn" }),
        (0, class_transformer_1.Type)(function () { return taskdependencies_1.TaskDependencies; }),
        __metadata("design:type", taskdependencies_1.TaskDependencies)
    ], CloudTask.prototype, "dependsOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], CloudTask.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "eTag" }),
        __metadata("design:type", String)
    ], CloudTask.prototype, "eTag", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: environmentsetting_1.EnvironmentSetting }),
        (0, class_transformer_1.Expose)({ name: "environmentSettings" }),
        (0, class_transformer_1.Type)(function () { return environmentsetting_1.EnvironmentSetting; }),
        __metadata("design:type", Array)
    ], CloudTask.prototype, "environmentSettings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "executionInfo" }),
        (0, class_transformer_1.Type)(function () { return taskexecutioninformation_1.TaskExecutionInformation; }),
        __metadata("design:type", taskexecutioninformation_1.TaskExecutionInformation)
    ], CloudTask.prototype, "executionInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], CloudTask.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lastModified" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], CloudTask.prototype, "lastModified", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "multiInstanceSettings" }),
        (0, class_transformer_1.Type)(function () { return multiinstancesettings_1.MultiInstanceSettings; }),
        __metadata("design:type", multiinstancesettings_1.MultiInstanceSettings)
    ], CloudTask.prototype, "multiInstanceSettings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "nodeInfo" }),
        (0, class_transformer_1.Type)(function () { return computenodeinformation_1.ComputeNodeInformation; }),
        __metadata("design:type", computenodeinformation_1.ComputeNodeInformation)
    ], CloudTask.prototype, "nodeInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "previousState" }),
        __metadata("design:type", String)
    ], CloudTask.prototype, "previousState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "previousStateTransitionTime" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], CloudTask.prototype, "previousStateTransitionTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: resourcefile_1.ResourceFile }),
        (0, class_transformer_1.Expose)({ name: "resourceFiles" }),
        (0, class_transformer_1.Type)(function () { return resourcefile_1.ResourceFile; }),
        __metadata("design:type", Array)
    ], CloudTask.prototype, "resourceFiles", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "runElevated" }),
        __metadata("design:type", Boolean)
    ], CloudTask.prototype, "runElevated", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        __metadata("design:type", String)
    ], CloudTask.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stateTransitionTime" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], CloudTask.prototype, "stateTransitionTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "stats" }),
        (0, class_transformer_1.Type)(function () { return taskstatistics_1.TaskStatistics; }),
        __metadata("design:type", taskstatistics_1.TaskStatistics)
    ], CloudTask.prototype, "stats", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], CloudTask.prototype, "url", void 0);
    return CloudTask;
}(utils_1.SpeakeasyBase));
exports.CloudTask = CloudTask;
