"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import layoutplaceholderidmapping as shared_layoutplaceholderidmapping
from ..shared import layoutreference as shared_layoutreference
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateSlideRequest:
    r"""Creates a slide."""
    
    insertion_index: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('insertionIndex'), 'exclude': lambda f: f is None }})
    r"""The optional zero-based index indicating where to insert the slides. If you don't specify an index, the slide is created at the end."""  
    object_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('objectId'), 'exclude': lambda f: f is None }})
    r"""A user-supplied object ID. If you specify an ID, it must be unique among all pages and page elements in the presentation. The ID must start with an alphanumeric character or an underscore (matches regex `[a-zA-Z0-9_]`); remaining characters may include those as well as a hyphen or colon (matches regex `[a-zA-Z0-9_-:]`). The ID length must be between 5 and 50 characters, inclusive. If you don't specify an ID, a unique one is generated."""  
    placeholder_id_mappings: Optional[list[shared_layoutplaceholderidmapping.LayoutPlaceholderIDMapping]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('placeholderIdMappings'), 'exclude': lambda f: f is None }})
    r"""An optional list of object ID mappings from the placeholder(s) on the layout to the placeholders that are created on the slide from the specified layout. Can only be used when `slide_layout_reference` is specified."""  
    slide_layout_reference: Optional[shared_layoutreference.LayoutReference] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slideLayoutReference'), 'exclude': lambda f: f is None }})
    r"""Slide layout reference. This may reference either: - A predefined layout - One of the layouts in the presentation."""  
    