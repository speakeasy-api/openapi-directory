/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetAdminMappingsStubMappingId200ApplicationJSONRequest {
    /**
     * Pre-emptive basic auth credentials to match against
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("basicAuthCredentials")
    public GetAdminMappingsStubMappingId200ApplicationJSONRequestBasicAuthCredentials basicAuthCredentials;

    public GetAdminMappingsStubMappingId200ApplicationJSONRequest withBasicAuthCredentials(GetAdminMappingsStubMappingId200ApplicationJSONRequestBasicAuthCredentials basicAuthCredentials) {
        this.basicAuthCredentials = basicAuthCredentials;
        return this;
    }
    
    /**
     * Request body patterns to match against in the &lt;key&gt;: { "&lt;predicate&gt;": "&lt;value&gt;" } form
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bodyPatterns")
    public java.util.Map<String, Object>[] bodyPatterns;

    public GetAdminMappingsStubMappingId200ApplicationJSONRequest withBodyPatterns(java.util.Map<String, Object>[] bodyPatterns) {
        this.bodyPatterns = bodyPatterns;
        return this;
    }
    
    /**
     * Cookie patterns to match against in the &lt;key&gt;: { "&lt;predicate&gt;": "&lt;value&gt;" } form
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cookies")
    public java.util.Map<String, Object> cookies;

    public GetAdminMappingsStubMappingId200ApplicationJSONRequest withCookies(java.util.Map<String, Object> cookies) {
        this.cookies = cookies;
        return this;
    }
    
    /**
     * Header patterns to match against in the &lt;key&gt;: { "&lt;predicate&gt;": "&lt;value&gt;" } form
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("headers")
    public java.util.Map<String, Object> headers;

    public GetAdminMappingsStubMappingId200ApplicationJSONRequest withHeaders(java.util.Map<String, Object> headers) {
        this.headers = headers;
        return this;
    }
    
    /**
     * The HTTP request method e.g. GET
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("method")
    public String method;

    public GetAdminMappingsStubMappingId200ApplicationJSONRequest withMethod(String method) {
        this.method = method;
        return this;
    }
    
    /**
     * Query parameter patterns to match against in the &lt;key&gt;: { "&lt;predicate&gt;": "&lt;value&gt;" } form
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queryParameters")
    public java.util.Map<String, Object> queryParameters;

    public GetAdminMappingsStubMappingId200ApplicationJSONRequest withQueryParameters(java.util.Map<String, Object> queryParameters) {
        this.queryParameters = queryParameters;
        return this;
    }
    
    /**
     * The path and query to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public GetAdminMappingsStubMappingId200ApplicationJSONRequest withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * The path to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("urlPath")
    public String urlPath;

    public GetAdminMappingsStubMappingId200ApplicationJSONRequest withUrlPath(String urlPath) {
        this.urlPath = urlPath;
        return this;
    }
    
    /**
     * The path regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("urlPathPattern")
    public String urlPathPattern;

    public GetAdminMappingsStubMappingId200ApplicationJSONRequest withUrlPathPattern(String urlPathPattern) {
        this.urlPathPattern = urlPathPattern;
        return this;
    }
    
    /**
     * The path and query regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("urlPattern")
    public String urlPattern;

    public GetAdminMappingsStubMappingId200ApplicationJSONRequest withUrlPattern(String urlPattern) {
        this.urlPattern = urlPattern;
        return this;
    }
    
    public GetAdminMappingsStubMappingId200ApplicationJSONRequest(){}
}
