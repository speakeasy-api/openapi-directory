"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import automlchanneltype_enum as shared_automlchanneltype_enum
from ..shared import automldatasource as shared_automldatasource
from ..shared import compressiontype_enum as shared_compressiontype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AutoMLJobChannel:
    r"""A channel is a named input source that training algorithms can consume. This channel is used for the non tabular training data of an AutoML job using the V2 API. For tabular training data, see <code> <a href=\\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_AutoMLChannel.html\\"> AutoMLChannel</a> </code>. For more information, see <code> <a href=\\"https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_Channel.html\\"> Channel</a> </code>."""
    
    channel_type: Optional[shared_automlchanneltype_enum.AutoMLChannelTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ChannelType'), 'exclude': lambda f: f is None }})  
    compression_type: Optional[shared_compressiontype_enum.CompressionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CompressionType'), 'exclude': lambda f: f is None }})  
    content_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ContentType'), 'exclude': lambda f: f is None }})  
    data_source: Optional[shared_automldatasource.AutoMLDataSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataSource'), 'exclude': lambda f: f is None }})  
    