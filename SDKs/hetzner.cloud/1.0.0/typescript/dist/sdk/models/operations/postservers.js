"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PostServersResponse = exports.PostServersCreateServerResponse = exports.PostServersCreateServerResponseServer = exports.PostServersCreateServerResponseServerStatusEnum = exports.PostServersCreateServerResponseServerServerType = exports.PostServersCreateServerResponseServerServerTypeStorageTypeEnum = exports.PostServersCreateServerResponseServerServerTypePrices = exports.PostServersCreateServerResponseServerServerTypePricesPriceMonthly = exports.PostServersCreateServerResponseServerServerTypePricesPriceHourly = exports.PostServersCreateServerResponseServerServerTypeCpuTypeEnum = exports.PostServersCreateServerResponseServerPublicNet = exports.PostServersCreateServerResponseServerPublicNetIpv6 = exports.PostServersCreateServerResponseServerPublicNetIpv6DnsPtr = exports.PostServersCreateServerResponseServerPublicNetIpv4 = exports.PostServersCreateServerResponseServerPublicNetServerPublicNetFirewall = exports.PostServersCreateServerResponseServerPublicNetServerPublicNetFirewallStatusEnum = exports.PostServersCreateServerResponseServerProtection = exports.PostServersCreateServerResponseServerPrivateNet = exports.PostServersCreateServerResponseServerPlacementGroupNullable = exports.PostServersCreateServerResponseServerPlacementGroupNullableTypeEnum = exports.PostServersCreateServerResponseServerIso = exports.PostServersCreateServerResponseServerIsoTypeEnum = exports.PostServersCreateServerResponseServerImage = exports.PostServersCreateServerResponseServerImageTypeEnum = exports.PostServersCreateServerResponseServerImageStatusEnum = exports.PostServersCreateServerResponseServerImageProtection = exports.PostServersCreateServerResponseServerImageOsFlavorEnum = exports.PostServersCreateServerResponseServerImageCreatedFrom = exports.PostServersCreateServerResponseServerDatacenter = exports.PostServersCreateServerResponseServerDatacenterServerTypes = exports.PostServersCreateServerResponseServerDatacenterLocation = exports.PostServersCreateServerResponseAction = exports.PostServersCreateServerResponseActionStatusEnum = exports.PostServersCreateServerResponseActionResources = exports.PostServersCreateServerResponseActionError = exports.PostServersCreateServerRequest = exports.PostServersCreateServerRequestPublicNet = exports.PostServersCreateServerRequestFirewalls = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var PostServersCreateServerRequestFirewalls = /** @class */ (function (_super) {
    __extends(PostServersCreateServerRequestFirewalls, _super);
    function PostServersCreateServerRequestFirewalls() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "firewall" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerRequestFirewalls.prototype, "firewall", void 0);
    return PostServersCreateServerRequestFirewalls;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerRequestFirewalls = PostServersCreateServerRequestFirewalls;
/**
 * Public Network options
 */
var PostServersCreateServerRequestPublicNet = /** @class */ (function (_super) {
    __extends(PostServersCreateServerRequestPublicNet, _super);
    function PostServersCreateServerRequestPublicNet() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enable_ipv4" }),
        __metadata("design:type", Boolean)
    ], PostServersCreateServerRequestPublicNet.prototype, "enableIpv4", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enable_ipv6" }),
        __metadata("design:type", Boolean)
    ], PostServersCreateServerRequestPublicNet.prototype, "enableIpv6", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ipv4" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerRequestPublicNet.prototype, "ipv4", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ipv6" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerRequestPublicNet.prototype, "ipv6", void 0);
    return PostServersCreateServerRequestPublicNet;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerRequestPublicNet = PostServersCreateServerRequestPublicNet;
/**
 * Please note that Server names must be unique per Project and valid hostnames as per RFC 1123 (i.e. may only contain letters, digits, periods, and dashes).
 *
 * @remarks
 *
 * For `server_type` you can either use the ID as listed in `/server_types` or its name.
 *
 * For `image` you can either use the ID as listed in `/images` or its name.
 *
 * If you want to create the Server in a Location, you must set `location` to the ID or name as listed in `/locations`. This is the recommended way. You can be even more specific by setting `datacenter` to the ID or name as listed in `/datacenters`. However we only recommend this if you want to assign a specific Primary IP to the Server which is located in the specified Datacenter.
 *
 * Some properties like `start_after_create` or `automount` will trigger Actions after the Server is created. Those Actions are listed in the `next_actions` field in the response.
 *
 * For accessing your Server we strongly recommend to use SSH keys by passing the respective key IDs in `ssh_keys`. If you do not specify any `ssh_keys` we will generate a root password for you and return it in the response.
 *
 * Please note that provided user-data is stored in our systems. While we take measures to protect it we highly recommend that you donâ€™t use it to store passwords or other sensitive information.
 *
 * #### Call specific error codes
 *
 * | Code                             | Description                                                |
 * |----------------------------------|------------------------------------------------------------|
 * | `placement_error`                | An error during the placement occurred                     |
 * | `primary_ip_assigned`            | The specified Primary IP is already assigned to a server   |
 * | `primary_ip_datacenter_mismatch` | The specified Primary IP is in a different datacenter      |
 * | `primary_ip_version_mismatch`    | The specified Primary IP has the wrong IP Version          |
 *
 */
var PostServersCreateServerRequest = /** @class */ (function (_super) {
    __extends(PostServersCreateServerRequest, _super);
    function PostServersCreateServerRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "automount" }),
        __metadata("design:type", Boolean)
    ], PostServersCreateServerRequest.prototype, "automount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "datacenter" }),
        __metadata("design:type", String)
    ], PostServersCreateServerRequest.prototype, "datacenter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: PostServersCreateServerRequestFirewalls }),
        (0, class_transformer_1.Expose)({ name: "firewalls" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerRequestFirewalls; }),
        __metadata("design:type", Array)
    ], PostServersCreateServerRequest.prototype, "firewalls", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "image" }),
        __metadata("design:type", String)
    ], PostServersCreateServerRequest.prototype, "image", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], PostServersCreateServerRequest.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "location" }),
        __metadata("design:type", String)
    ], PostServersCreateServerRequest.prototype, "location", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], PostServersCreateServerRequest.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "networks" }),
        __metadata("design:type", Array)
    ], PostServersCreateServerRequest.prototype, "networks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "placement_group" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerRequest.prototype, "placementGroup", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "public_net" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerRequestPublicNet; }),
        __metadata("design:type", PostServersCreateServerRequestPublicNet)
    ], PostServersCreateServerRequest.prototype, "publicNet", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "server_type" }),
        __metadata("design:type", String)
    ], PostServersCreateServerRequest.prototype, "serverType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ssh_keys" }),
        __metadata("design:type", Array)
    ], PostServersCreateServerRequest.prototype, "sshKeys", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "start_after_create" }),
        __metadata("design:type", Boolean)
    ], PostServersCreateServerRequest.prototype, "startAfterCreate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "user_data" }),
        __metadata("design:type", String)
    ], PostServersCreateServerRequest.prototype, "userData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "volumes" }),
        __metadata("design:type", Array)
    ], PostServersCreateServerRequest.prototype, "volumes", void 0);
    return PostServersCreateServerRequest;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerRequest = PostServersCreateServerRequest;
/**
 * Error message for the Action if error occurred, otherwise null
 */
var PostServersCreateServerResponseActionError = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseActionError, _super);
    function PostServersCreateServerResponseActionError() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseActionError.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseActionError.prototype, "message", void 0);
    return PostServersCreateServerResponseActionError;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseActionError = PostServersCreateServerResponseActionError;
var PostServersCreateServerResponseActionResources = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseActionResources, _super);
    function PostServersCreateServerResponseActionResources() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseActionResources.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseActionResources.prototype, "type", void 0);
    return PostServersCreateServerResponseActionResources;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseActionResources = PostServersCreateServerResponseActionResources;
/**
 * Status of the Action
 */
var PostServersCreateServerResponseActionStatusEnum;
(function (PostServersCreateServerResponseActionStatusEnum) {
    PostServersCreateServerResponseActionStatusEnum["Success"] = "success";
    PostServersCreateServerResponseActionStatusEnum["Running"] = "running";
    PostServersCreateServerResponseActionStatusEnum["Error"] = "error";
})(PostServersCreateServerResponseActionStatusEnum = exports.PostServersCreateServerResponseActionStatusEnum || (exports.PostServersCreateServerResponseActionStatusEnum = {}));
var PostServersCreateServerResponseAction = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseAction, _super);
    function PostServersCreateServerResponseAction() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "command" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseAction.prototype, "command", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "error" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseActionError; }),
        __metadata("design:type", PostServersCreateServerResponseActionError)
    ], PostServersCreateServerResponseAction.prototype, "error", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "finished" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseAction.prototype, "finished", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseAction.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "progress" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseAction.prototype, "progress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: PostServersCreateServerResponseActionResources,
        }),
        (0, class_transformer_1.Expose)({ name: "resources" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseActionResources; }),
        __metadata("design:type", Array)
    ], PostServersCreateServerResponseAction.prototype, "resources", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "started" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseAction.prototype, "started", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseAction.prototype, "status", void 0);
    return PostServersCreateServerResponseAction;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseAction = PostServersCreateServerResponseAction;
var PostServersCreateServerResponseServerDatacenterLocation = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerDatacenterLocation, _super);
    function PostServersCreateServerResponseServerDatacenterLocation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "city" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerDatacenterLocation.prototype, "city", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "country" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerDatacenterLocation.prototype, "country", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerDatacenterLocation.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerDatacenterLocation.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "latitude" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerDatacenterLocation.prototype, "latitude", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "longitude" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerDatacenterLocation.prototype, "longitude", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerDatacenterLocation.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "network_zone" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerDatacenterLocation.prototype, "networkZone", void 0);
    return PostServersCreateServerResponseServerDatacenterLocation;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerDatacenterLocation = PostServersCreateServerResponseServerDatacenterLocation;
/**
 * The Server types the Datacenter can handle
 */
var PostServersCreateServerResponseServerDatacenterServerTypes = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerDatacenterServerTypes, _super);
    function PostServersCreateServerResponseServerDatacenterServerTypes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "available" }),
        __metadata("design:type", Array)
    ], PostServersCreateServerResponseServerDatacenterServerTypes.prototype, "available", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "available_for_migration" }),
        __metadata("design:type", Array)
    ], PostServersCreateServerResponseServerDatacenterServerTypes.prototype, "availableForMigration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "supported" }),
        __metadata("design:type", Array)
    ], PostServersCreateServerResponseServerDatacenterServerTypes.prototype, "supported", void 0);
    return PostServersCreateServerResponseServerDatacenterServerTypes;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerDatacenterServerTypes = PostServersCreateServerResponseServerDatacenterServerTypes;
/**
 * Datacenter this Resource is located at
 */
var PostServersCreateServerResponseServerDatacenter = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerDatacenter, _super);
    function PostServersCreateServerResponseServerDatacenter() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerDatacenter.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerDatacenter.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "location" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerDatacenterLocation; }),
        __metadata("design:type", PostServersCreateServerResponseServerDatacenterLocation)
    ], PostServersCreateServerResponseServerDatacenter.prototype, "location", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerDatacenter.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "server_types" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerDatacenterServerTypes; }),
        __metadata("design:type", PostServersCreateServerResponseServerDatacenterServerTypes)
    ], PostServersCreateServerResponseServerDatacenter.prototype, "serverTypes", void 0);
    return PostServersCreateServerResponseServerDatacenter;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerDatacenter = PostServersCreateServerResponseServerDatacenter;
/**
 * Information about the Server the Image was created from
 */
var PostServersCreateServerResponseServerImageCreatedFrom = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerImageCreatedFrom, _super);
    function PostServersCreateServerResponseServerImageCreatedFrom() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerImageCreatedFrom.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerImageCreatedFrom.prototype, "name", void 0);
    return PostServersCreateServerResponseServerImageCreatedFrom;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerImageCreatedFrom = PostServersCreateServerResponseServerImageCreatedFrom;
/**
 * Flavor of operating system contained in the Image
 */
var PostServersCreateServerResponseServerImageOsFlavorEnum;
(function (PostServersCreateServerResponseServerImageOsFlavorEnum) {
    PostServersCreateServerResponseServerImageOsFlavorEnum["Ubuntu"] = "ubuntu";
    PostServersCreateServerResponseServerImageOsFlavorEnum["Centos"] = "centos";
    PostServersCreateServerResponseServerImageOsFlavorEnum["Debian"] = "debian";
    PostServersCreateServerResponseServerImageOsFlavorEnum["Fedora"] = "fedora";
    PostServersCreateServerResponseServerImageOsFlavorEnum["Unknown"] = "unknown";
})(PostServersCreateServerResponseServerImageOsFlavorEnum = exports.PostServersCreateServerResponseServerImageOsFlavorEnum || (exports.PostServersCreateServerResponseServerImageOsFlavorEnum = {}));
/**
 * Protection configuration for the Resource
 */
var PostServersCreateServerResponseServerImageProtection = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerImageProtection, _super);
    function PostServersCreateServerResponseServerImageProtection() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "delete" }),
        __metadata("design:type", Boolean)
    ], PostServersCreateServerResponseServerImageProtection.prototype, "delete", void 0);
    return PostServersCreateServerResponseServerImageProtection;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerImageProtection = PostServersCreateServerResponseServerImageProtection;
/**
 * Whether the Image can be used or if it's still being created or unavailable
 */
var PostServersCreateServerResponseServerImageStatusEnum;
(function (PostServersCreateServerResponseServerImageStatusEnum) {
    PostServersCreateServerResponseServerImageStatusEnum["Available"] = "available";
    PostServersCreateServerResponseServerImageStatusEnum["Creating"] = "creating";
    PostServersCreateServerResponseServerImageStatusEnum["Unavailable"] = "unavailable";
})(PostServersCreateServerResponseServerImageStatusEnum = exports.PostServersCreateServerResponseServerImageStatusEnum || (exports.PostServersCreateServerResponseServerImageStatusEnum = {}));
/**
 * Type of the Image
 */
var PostServersCreateServerResponseServerImageTypeEnum;
(function (PostServersCreateServerResponseServerImageTypeEnum) {
    PostServersCreateServerResponseServerImageTypeEnum["System"] = "system";
    PostServersCreateServerResponseServerImageTypeEnum["App"] = "app";
    PostServersCreateServerResponseServerImageTypeEnum["Snapshot"] = "snapshot";
    PostServersCreateServerResponseServerImageTypeEnum["Backup"] = "backup";
    PostServersCreateServerResponseServerImageTypeEnum["Temporary"] = "temporary";
})(PostServersCreateServerResponseServerImageTypeEnum = exports.PostServersCreateServerResponseServerImageTypeEnum || (exports.PostServersCreateServerResponseServerImageTypeEnum = {}));
var PostServersCreateServerResponseServerImage = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerImage, _super);
    function PostServersCreateServerResponseServerImage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bound_to" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerImage.prototype, "boundTo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerImage.prototype, "created", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_from" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerImageCreatedFrom; }),
        __metadata("design:type", PostServersCreateServerResponseServerImageCreatedFrom)
    ], PostServersCreateServerResponseServerImage.prototype, "createdFrom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deleted" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerImage.prototype, "deleted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deprecated" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerImage.prototype, "deprecated", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerImage.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "disk_size" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerImage.prototype, "diskSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerImage.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "image_size" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerImage.prototype, "imageSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], PostServersCreateServerResponseServerImage.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerImage.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "os_flavor" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerImage.prototype, "osFlavor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "os_version" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerImage.prototype, "osVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "protection" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerImageProtection; }),
        __metadata("design:type", PostServersCreateServerResponseServerImageProtection)
    ], PostServersCreateServerResponseServerImage.prototype, "protection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rapid_deploy" }),
        __metadata("design:type", Boolean)
    ], PostServersCreateServerResponseServerImage.prototype, "rapidDeploy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerImage.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerImage.prototype, "type", void 0);
    return PostServersCreateServerResponseServerImage;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerImage = PostServersCreateServerResponseServerImage;
/**
 * Type of the ISO
 */
var PostServersCreateServerResponseServerIsoTypeEnum;
(function (PostServersCreateServerResponseServerIsoTypeEnum) {
    PostServersCreateServerResponseServerIsoTypeEnum["Public"] = "public";
    PostServersCreateServerResponseServerIsoTypeEnum["Private"] = "private";
})(PostServersCreateServerResponseServerIsoTypeEnum = exports.PostServersCreateServerResponseServerIsoTypeEnum || (exports.PostServersCreateServerResponseServerIsoTypeEnum = {}));
/**
 * ISO Image that is attached to this Server. Null if no ISO is attached.
 */
var PostServersCreateServerResponseServerIso = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerIso, _super);
    function PostServersCreateServerResponseServerIso() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deprecated" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerIso.prototype, "deprecated", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerIso.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerIso.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerIso.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerIso.prototype, "type", void 0);
    return PostServersCreateServerResponseServerIso;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerIso = PostServersCreateServerResponseServerIso;
/**
 * Type of the Placement Group
 */
var PostServersCreateServerResponseServerPlacementGroupNullableTypeEnum;
(function (PostServersCreateServerResponseServerPlacementGroupNullableTypeEnum) {
    PostServersCreateServerResponseServerPlacementGroupNullableTypeEnum["Spread"] = "spread";
})(PostServersCreateServerResponseServerPlacementGroupNullableTypeEnum = exports.PostServersCreateServerResponseServerPlacementGroupNullableTypeEnum || (exports.PostServersCreateServerResponseServerPlacementGroupNullableTypeEnum = {}));
var PostServersCreateServerResponseServerPlacementGroupNullable = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerPlacementGroupNullable, _super);
    function PostServersCreateServerResponseServerPlacementGroupNullable() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerPlacementGroupNullable.prototype, "created", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerPlacementGroupNullable.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], PostServersCreateServerResponseServerPlacementGroupNullable.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerPlacementGroupNullable.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "servers" }),
        __metadata("design:type", Array)
    ], PostServersCreateServerResponseServerPlacementGroupNullable.prototype, "servers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerPlacementGroupNullable.prototype, "type", void 0);
    return PostServersCreateServerResponseServerPlacementGroupNullable;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerPlacementGroupNullable = PostServersCreateServerResponseServerPlacementGroupNullable;
var PostServersCreateServerResponseServerPrivateNet = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerPrivateNet, _super);
    function PostServersCreateServerResponseServerPrivateNet() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "alias_ips" }),
        __metadata("design:type", Array)
    ], PostServersCreateServerResponseServerPrivateNet.prototype, "aliasIps", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ip" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerPrivateNet.prototype, "ip", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mac_address" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerPrivateNet.prototype, "macAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "network" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerPrivateNet.prototype, "network", void 0);
    return PostServersCreateServerResponseServerPrivateNet;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerPrivateNet = PostServersCreateServerResponseServerPrivateNet;
/**
 * Protection configuration for the Server
 */
var PostServersCreateServerResponseServerProtection = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerProtection, _super);
    function PostServersCreateServerResponseServerProtection() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "delete" }),
        __metadata("design:type", Boolean)
    ], PostServersCreateServerResponseServerProtection.prototype, "delete", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rebuild" }),
        __metadata("design:type", Boolean)
    ], PostServersCreateServerResponseServerProtection.prototype, "rebuild", void 0);
    return PostServersCreateServerResponseServerProtection;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerProtection = PostServersCreateServerResponseServerProtection;
/**
 * Status of the Firewall on the Server
 */
var PostServersCreateServerResponseServerPublicNetServerPublicNetFirewallStatusEnum;
(function (PostServersCreateServerResponseServerPublicNetServerPublicNetFirewallStatusEnum) {
    PostServersCreateServerResponseServerPublicNetServerPublicNetFirewallStatusEnum["Applied"] = "applied";
    PostServersCreateServerResponseServerPublicNetServerPublicNetFirewallStatusEnum["Pending"] = "pending";
})(PostServersCreateServerResponseServerPublicNetServerPublicNetFirewallStatusEnum = exports.PostServersCreateServerResponseServerPublicNetServerPublicNetFirewallStatusEnum || (exports.PostServersCreateServerResponseServerPublicNetServerPublicNetFirewallStatusEnum = {}));
var PostServersCreateServerResponseServerPublicNetServerPublicNetFirewall = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerPublicNetServerPublicNetFirewall, _super);
    function PostServersCreateServerResponseServerPublicNetServerPublicNetFirewall() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerPublicNetServerPublicNetFirewall.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerPublicNetServerPublicNetFirewall.prototype, "status", void 0);
    return PostServersCreateServerResponseServerPublicNetServerPublicNetFirewall;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerPublicNetServerPublicNetFirewall = PostServersCreateServerResponseServerPublicNetServerPublicNetFirewall;
/**
 * IP address (v4) and its reverse DNS entry of this Server
 */
var PostServersCreateServerResponseServerPublicNetIpv4 = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerPublicNetIpv4, _super);
    function PostServersCreateServerResponseServerPublicNetIpv4() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "blocked" }),
        __metadata("design:type", Boolean)
    ], PostServersCreateServerResponseServerPublicNetIpv4.prototype, "blocked", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dns_ptr" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerPublicNetIpv4.prototype, "dnsPtr", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerPublicNetIpv4.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ip" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerPublicNetIpv4.prototype, "ip", void 0);
    return PostServersCreateServerResponseServerPublicNetIpv4;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerPublicNetIpv4 = PostServersCreateServerResponseServerPublicNetIpv4;
var PostServersCreateServerResponseServerPublicNetIpv6DnsPtr = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerPublicNetIpv6DnsPtr, _super);
    function PostServersCreateServerResponseServerPublicNetIpv6DnsPtr() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dns_ptr" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerPublicNetIpv6DnsPtr.prototype, "dnsPtr", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ip" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerPublicNetIpv6DnsPtr.prototype, "ip", void 0);
    return PostServersCreateServerResponseServerPublicNetIpv6DnsPtr;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerPublicNetIpv6DnsPtr = PostServersCreateServerResponseServerPublicNetIpv6DnsPtr;
/**
 * IPv6 network assigned to this Server and its reverse DNS entry
 */
var PostServersCreateServerResponseServerPublicNetIpv6 = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerPublicNetIpv6, _super);
    function PostServersCreateServerResponseServerPublicNetIpv6() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "blocked" }),
        __metadata("design:type", Boolean)
    ], PostServersCreateServerResponseServerPublicNetIpv6.prototype, "blocked", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: PostServersCreateServerResponseServerPublicNetIpv6DnsPtr,
        }),
        (0, class_transformer_1.Expose)({ name: "dns_ptr" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerPublicNetIpv6DnsPtr; }),
        __metadata("design:type", Array)
    ], PostServersCreateServerResponseServerPublicNetIpv6.prototype, "dnsPtr", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerPublicNetIpv6.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ip" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerPublicNetIpv6.prototype, "ip", void 0);
    return PostServersCreateServerResponseServerPublicNetIpv6;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerPublicNetIpv6 = PostServersCreateServerResponseServerPublicNetIpv6;
/**
 * Public network information. The Server's IPv4 address can be found in `public_net->ipv4->ip`
 */
var PostServersCreateServerResponseServerPublicNet = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerPublicNet, _super);
    function PostServersCreateServerResponseServerPublicNet() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: PostServersCreateServerResponseServerPublicNetServerPublicNetFirewall,
        }),
        (0, class_transformer_1.Expose)({ name: "firewalls" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerPublicNetServerPublicNetFirewall; }),
        __metadata("design:type", Array)
    ], PostServersCreateServerResponseServerPublicNet.prototype, "firewalls", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "floating_ips" }),
        __metadata("design:type", Array)
    ], PostServersCreateServerResponseServerPublicNet.prototype, "floatingIps", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ipv4" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerPublicNetIpv4; }),
        __metadata("design:type", PostServersCreateServerResponseServerPublicNetIpv4)
    ], PostServersCreateServerResponseServerPublicNet.prototype, "ipv4", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ipv6" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerPublicNetIpv6; }),
        __metadata("design:type", PostServersCreateServerResponseServerPublicNetIpv6)
    ], PostServersCreateServerResponseServerPublicNet.prototype, "ipv6", void 0);
    return PostServersCreateServerResponseServerPublicNet;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerPublicNet = PostServersCreateServerResponseServerPublicNet;
/**
 * Type of cpu
 */
var PostServersCreateServerResponseServerServerTypeCpuTypeEnum;
(function (PostServersCreateServerResponseServerServerTypeCpuTypeEnum) {
    PostServersCreateServerResponseServerServerTypeCpuTypeEnum["Shared"] = "shared";
    PostServersCreateServerResponseServerServerTypeCpuTypeEnum["Dedicated"] = "dedicated";
})(PostServersCreateServerResponseServerServerTypeCpuTypeEnum = exports.PostServersCreateServerResponseServerServerTypeCpuTypeEnum || (exports.PostServersCreateServerResponseServerServerTypeCpuTypeEnum = {}));
/**
 * Hourly costs for a Server type in this Location
 */
var PostServersCreateServerResponseServerServerTypePricesPriceHourly = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerServerTypePricesPriceHourly, _super);
    function PostServersCreateServerResponseServerServerTypePricesPriceHourly() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gross" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerServerTypePricesPriceHourly.prototype, "gross", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "net" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerServerTypePricesPriceHourly.prototype, "net", void 0);
    return PostServersCreateServerResponseServerServerTypePricesPriceHourly;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerServerTypePricesPriceHourly = PostServersCreateServerResponseServerServerTypePricesPriceHourly;
/**
 * Monthly costs for a Server type in this Location
 */
var PostServersCreateServerResponseServerServerTypePricesPriceMonthly = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerServerTypePricesPriceMonthly, _super);
    function PostServersCreateServerResponseServerServerTypePricesPriceMonthly() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gross" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerServerTypePricesPriceMonthly.prototype, "gross", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "net" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerServerTypePricesPriceMonthly.prototype, "net", void 0);
    return PostServersCreateServerResponseServerServerTypePricesPriceMonthly;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerServerTypePricesPriceMonthly = PostServersCreateServerResponseServerServerTypePricesPriceMonthly;
var PostServersCreateServerResponseServerServerTypePrices = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerServerTypePrices, _super);
    function PostServersCreateServerResponseServerServerTypePrices() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "location" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerServerTypePrices.prototype, "location", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "price_hourly" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerServerTypePricesPriceHourly; }),
        __metadata("design:type", PostServersCreateServerResponseServerServerTypePricesPriceHourly)
    ], PostServersCreateServerResponseServerServerTypePrices.prototype, "priceHourly", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "price_monthly" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerServerTypePricesPriceMonthly; }),
        __metadata("design:type", PostServersCreateServerResponseServerServerTypePricesPriceMonthly)
    ], PostServersCreateServerResponseServerServerTypePrices.prototype, "priceMonthly", void 0);
    return PostServersCreateServerResponseServerServerTypePrices;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerServerTypePrices = PostServersCreateServerResponseServerServerTypePrices;
/**
 * Type of Server boot drive. Local has higher speed. Network has better availability.
 */
var PostServersCreateServerResponseServerServerTypeStorageTypeEnum;
(function (PostServersCreateServerResponseServerServerTypeStorageTypeEnum) {
    PostServersCreateServerResponseServerServerTypeStorageTypeEnum["Local"] = "local";
    PostServersCreateServerResponseServerServerTypeStorageTypeEnum["Network"] = "network";
})(PostServersCreateServerResponseServerServerTypeStorageTypeEnum = exports.PostServersCreateServerResponseServerServerTypeStorageTypeEnum || (exports.PostServersCreateServerResponseServerServerTypeStorageTypeEnum = {}));
/**
 * Type of Server - determines how much ram, disk and cpu a Server has
 */
var PostServersCreateServerResponseServerServerType = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServerServerType, _super);
    function PostServersCreateServerResponseServerServerType() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cores" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerServerType.prototype, "cores", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cpu_type" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerServerType.prototype, "cpuType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "deprecated" }),
        __metadata("design:type", Boolean)
    ], PostServersCreateServerResponseServerServerType.prototype, "deprecated", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerServerType.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "disk" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerServerType.prototype, "disk", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerServerType.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "memory" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServerServerType.prototype, "memory", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerServerType.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: PostServersCreateServerResponseServerServerTypePrices,
        }),
        (0, class_transformer_1.Expose)({ name: "prices" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerServerTypePrices; }),
        __metadata("design:type", Array)
    ], PostServersCreateServerResponseServerServerType.prototype, "prices", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "storage_type" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServerServerType.prototype, "storageType", void 0);
    return PostServersCreateServerResponseServerServerType;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServerServerType = PostServersCreateServerResponseServerServerType;
/**
 * Status of the Server
 */
var PostServersCreateServerResponseServerStatusEnum;
(function (PostServersCreateServerResponseServerStatusEnum) {
    PostServersCreateServerResponseServerStatusEnum["Running"] = "running";
    PostServersCreateServerResponseServerStatusEnum["Initializing"] = "initializing";
    PostServersCreateServerResponseServerStatusEnum["Starting"] = "starting";
    PostServersCreateServerResponseServerStatusEnum["Stopping"] = "stopping";
    PostServersCreateServerResponseServerStatusEnum["Off"] = "off";
    PostServersCreateServerResponseServerStatusEnum["Deleting"] = "deleting";
    PostServersCreateServerResponseServerStatusEnum["Migrating"] = "migrating";
    PostServersCreateServerResponseServerStatusEnum["Rebuilding"] = "rebuilding";
    PostServersCreateServerResponseServerStatusEnum["Unknown"] = "unknown";
})(PostServersCreateServerResponseServerStatusEnum = exports.PostServersCreateServerResponseServerStatusEnum || (exports.PostServersCreateServerResponseServerStatusEnum = {}));
var PostServersCreateServerResponseServer = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponseServer, _super);
    function PostServersCreateServerResponseServer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "backup_window" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServer.prototype, "backupWindow", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServer.prototype, "created", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "datacenter" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerDatacenter; }),
        __metadata("design:type", PostServersCreateServerResponseServerDatacenter)
    ], PostServersCreateServerResponseServer.prototype, "datacenter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServer.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "image" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerImage; }),
        __metadata("design:type", PostServersCreateServerResponseServerImage)
    ], PostServersCreateServerResponseServer.prototype, "image", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "included_traffic" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServer.prototype, "includedTraffic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ingoing_traffic" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServer.prototype, "ingoingTraffic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "iso" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerIso; }),
        __metadata("design:type", PostServersCreateServerResponseServerIso)
    ], PostServersCreateServerResponseServer.prototype, "iso", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], PostServersCreateServerResponseServer.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "load_balancers" }),
        __metadata("design:type", Array)
    ], PostServersCreateServerResponseServer.prototype, "loadBalancers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "locked" }),
        __metadata("design:type", Boolean)
    ], PostServersCreateServerResponseServer.prototype, "locked", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServer.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "outgoing_traffic" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServer.prototype, "outgoingTraffic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "placement_group" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerPlacementGroupNullable; }),
        __metadata("design:type", PostServersCreateServerResponseServerPlacementGroupNullable)
    ], PostServersCreateServerResponseServer.prototype, "placementGroup", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "primary_disk_size" }),
        __metadata("design:type", Number)
    ], PostServersCreateServerResponseServer.prototype, "primaryDiskSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: PostServersCreateServerResponseServerPrivateNet,
        }),
        (0, class_transformer_1.Expose)({ name: "private_net" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerPrivateNet; }),
        __metadata("design:type", Array)
    ], PostServersCreateServerResponseServer.prototype, "privateNet", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "protection" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerProtection; }),
        __metadata("design:type", PostServersCreateServerResponseServerProtection)
    ], PostServersCreateServerResponseServer.prototype, "protection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "public_net" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerPublicNet; }),
        __metadata("design:type", PostServersCreateServerResponseServerPublicNet)
    ], PostServersCreateServerResponseServer.prototype, "publicNet", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rescue_enabled" }),
        __metadata("design:type", Boolean)
    ], PostServersCreateServerResponseServer.prototype, "rescueEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "server_type" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServerServerType; }),
        __metadata("design:type", PostServersCreateServerResponseServerServerType)
    ], PostServersCreateServerResponseServer.prototype, "serverType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponseServer.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "volumes" }),
        __metadata("design:type", Array)
    ], PostServersCreateServerResponseServer.prototype, "volumes", void 0);
    return PostServersCreateServerResponseServer;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponseServer = PostServersCreateServerResponseServer;
/**
 * The `server` key in the reply contains a Server object with this structure
 */
var PostServersCreateServerResponse = /** @class */ (function (_super) {
    __extends(PostServersCreateServerResponse, _super);
    function PostServersCreateServerResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "action" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseAction; }),
        __metadata("design:type", PostServersCreateServerResponseAction)
    ], PostServersCreateServerResponse.prototype, "action", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: PostServersCreateServerResponseAction }),
        (0, class_transformer_1.Expose)({ name: "next_actions" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseAction; }),
        __metadata("design:type", Array)
    ], PostServersCreateServerResponse.prototype, "nextActions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "root_password" }),
        __metadata("design:type", String)
    ], PostServersCreateServerResponse.prototype, "rootPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "server" }),
        (0, class_transformer_1.Type)(function () { return PostServersCreateServerResponseServer; }),
        __metadata("design:type", PostServersCreateServerResponseServer)
    ], PostServersCreateServerResponse.prototype, "server", void 0);
    return PostServersCreateServerResponse;
}(utils_1.SpeakeasyBase));
exports.PostServersCreateServerResponse = PostServersCreateServerResponse;
var PostServersResponse = /** @class */ (function (_super) {
    __extends(PostServersResponse, _super);
    function PostServersResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], PostServersResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", PostServersCreateServerResponse)
    ], PostServersResponse.prototype, "createServerResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], PostServersResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], PostServersResponse.prototype, "rawResponse", void 0);
    return PostServersResponse;
}(utils_1.SpeakeasyBase));
exports.PostServersResponse = PostServersResponse;
