/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

export class DeploymentReleasesUpdateSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

/**
 * Release modification. All fields are optional and only provided fields will get updated.
 */
export class DeploymentReleasesUpdateRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "is_disabled" })
  isDisabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "is_mandatory" })
  isMandatory?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "rollout" })
  rollout?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "target_binary_range" })
  targetBinaryRange?: string;
}

export class DeploymentReleasesUpdateRequest extends SpeakeasyBase {
  /**
   * Release modification. All fields are optional and only provided fields will get updated.
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: DeploymentReleasesUpdateRequestBody;

  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * deployment name
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=deployment_name",
  })
  deploymentName: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;

  /**
   * release label
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=release_label",
  })
  releaseLabel: string;
}

/**
 * Error
 */
export class DeploymentReleasesUpdateDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

export class DeploymentReleasesUpdate200ApplicationJSONDiffPackageMap extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size: number;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}

/**
 * The release method is unknown if unspecified
 */
export enum DeploymentReleasesUpdate200ApplicationJSONReleaseMethodEnum {
  Upload = "Upload",
  Promote = "Promote",
  Rollback = "Rollback",
}

/**
 * Success
 */
export class DeploymentReleasesUpdate200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "blob_url" })
  blobUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata({
    elemType: DeploymentReleasesUpdate200ApplicationJSONDiffPackageMap,
  })
  @Expose({ name: "diff_package_map" })
  @Transform(
    ({ value }) => {
      const obj: Record<
        string,
        DeploymentReleasesUpdate200ApplicationJSONDiffPackageMap
      > = {};
      for (const key in value) {
        obj[key] = objectToClass(
          value[key],
          DeploymentReleasesUpdate200ApplicationJSONDiffPackageMap
        );
      }
      return obj;
    },
    { toClassOnly: true }
  )
  diffPackageMap?: Record<
    string,
    DeploymentReleasesUpdate200ApplicationJSONDiffPackageMap
  >;

  @SpeakeasyMetadata()
  @Expose({ name: "is_disabled" })
  isDisabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "is_mandatory" })
  isMandatory?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;

  /**
   * Set on 'Promote'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "original_deployment" })
  originalDeployment?: string;

  /**
   * Set on 'Promote' and 'Rollback'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "original_label" })
  originalLabel?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "package_hash" })
  packageHash?: string;

  /**
   * The release method is unknown if unspecified
   */
  @SpeakeasyMetadata()
  @Expose({ name: "release_method" })
  releaseMethod?: DeploymentReleasesUpdate200ApplicationJSONReleaseMethodEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "released_by" })
  releasedBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "rollout" })
  rollout?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "target_binary_range" })
  targetBinaryRange?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "upload_time" })
  uploadTime?: number;
}

export class DeploymentReleasesUpdateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  deploymentReleasesUpdate200ApplicationJSONObject?: DeploymentReleasesUpdate200ApplicationJSON;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  deploymentReleasesUpdateDefaultApplicationJSONObject?: DeploymentReleasesUpdateDefaultApplicationJSON;
}
