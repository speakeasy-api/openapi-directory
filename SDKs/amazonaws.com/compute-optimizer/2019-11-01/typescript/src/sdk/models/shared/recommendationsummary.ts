/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CurrentPerformanceRiskRatings } from "./currentperformanceriskratings";
import { RecommendationSourceTypeEnum } from "./recommendationsourcetypeenum";
import { SavingsOpportunity } from "./savingsopportunity";
import { Summary } from "./summary";
import { Expose, Type } from "class-transformer";

/**
 * A summary of a recommendation.
 */
export class RecommendationSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "accountId" })
  accountId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "currentPerformanceRiskRatings" })
  @Type(() => CurrentPerformanceRiskRatings)
  currentPerformanceRiskRatings?: CurrentPerformanceRiskRatings;

  @SpeakeasyMetadata()
  @Expose({ name: "recommendationResourceType" })
  recommendationResourceType?: RecommendationSourceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "savingsOpportunity" })
  @Type(() => SavingsOpportunity)
  savingsOpportunity?: SavingsOpportunity;

  @SpeakeasyMetadata({ elemType: Summary })
  @Expose({ name: "summaries" })
  @Type(() => Summary)
  summaries?: Summary[];
}
