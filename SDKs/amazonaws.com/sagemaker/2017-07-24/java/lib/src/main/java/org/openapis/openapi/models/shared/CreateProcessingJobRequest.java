/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateProcessingJobRequest {
    @JsonProperty("AppSpecification")
    public AppSpecification appSpecification;
    public CreateProcessingJobRequest withAppSpecification(AppSpecification appSpecification) {
        this.appSpecification = appSpecification;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Environment")
    public java.util.Map<String, String> environment;
    public CreateProcessingJobRequest withEnvironment(java.util.Map<String, String> environment) {
        this.environment = environment;
        return this;
    }
    
    /**
     * &lt;p&gt;Associates a SageMaker job as a trial component with an experiment and trial. Specified when you call the following APIs:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateProcessingJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateTrainingJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;a&gt;CreateTransformJob&lt;/a&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExperimentConfig")
    public ExperimentConfig experimentConfig;
    public CreateProcessingJobRequest withExperimentConfig(ExperimentConfig experimentConfig) {
        this.experimentConfig = experimentConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NetworkConfig")
    public NetworkConfig networkConfig;
    public CreateProcessingJobRequest withNetworkConfig(NetworkConfig networkConfig) {
        this.networkConfig = networkConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProcessingInputs")
    public ProcessingInput[] processingInputs;
    public CreateProcessingJobRequest withProcessingInputs(ProcessingInput[] processingInputs) {
        this.processingInputs = processingInputs;
        return this;
    }
    
    @JsonProperty("ProcessingJobName")
    public String processingJobName;
    public CreateProcessingJobRequest withProcessingJobName(String processingJobName) {
        this.processingJobName = processingJobName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ProcessingOutputConfig")
    public ProcessingOutputConfig processingOutputConfig;
    public CreateProcessingJobRequest withProcessingOutputConfig(ProcessingOutputConfig processingOutputConfig) {
        this.processingOutputConfig = processingOutputConfig;
        return this;
    }
    
    @JsonProperty("ProcessingResources")
    public ProcessingResources processingResources;
    public CreateProcessingJobRequest withProcessingResources(ProcessingResources processingResources) {
        this.processingResources = processingResources;
        return this;
    }
    
    @JsonProperty("RoleArn")
    public String roleArn;
    public CreateProcessingJobRequest withRoleArn(String roleArn) {
        this.roleArn = roleArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StoppingCondition")
    public ProcessingStoppingCondition stoppingCondition;
    public CreateProcessingJobRequest withStoppingCondition(ProcessingStoppingCondition stoppingCondition) {
        this.stoppingCondition = stoppingCondition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public Tag[] tags;
    public CreateProcessingJobRequest withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
}
