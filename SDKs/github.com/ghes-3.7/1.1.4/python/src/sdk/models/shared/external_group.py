"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExternalGroupMembers:
    
    member_email: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('member_email') }})
    r"""An email attached to a user"""  
    member_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('member_id') }})
    r"""The internal user ID of the identity"""  
    member_login: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('member_login') }})
    r"""The handle/login for the user"""  
    member_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('member_name') }})
    r"""The user display name/profile name"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExternalGroupTeams:
    
    team_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('team_id') }})
    r"""The id for a team"""  
    team_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('team_name') }})
    r"""The name of the team"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExternalGroup:
    r"""Information about an external group's usage and its members"""
    
    group_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('group_id') }})
    r"""The internal ID of the group"""  
    group_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('group_name') }})
    r"""The display name for the group"""  
    members: list[ExternalGroupMembers] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('members') }})
    r"""An array of external members linked to this group"""  
    teams: list[ExternalGroupTeams] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('teams') }})
    r"""An array of teams linked to this group"""  
    updated_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updated_at'), 'exclude': lambda f: f is None }})
    r"""The date when the group was last updated_at"""  
    