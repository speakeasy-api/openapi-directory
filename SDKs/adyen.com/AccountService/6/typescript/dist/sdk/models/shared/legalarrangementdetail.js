"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LegalArrangementDetail = exports.LegalArrangementDetailTypeEnum = exports.LegalArrangementDetailLegalFormEnum = void 0;
var utils_1 = require("../../../internal/utils");
var legalarrangemententitydetail_1 = require("./legalarrangemententitydetail");
var viasaddress_1 = require("./viasaddress");
var class_transformer_1 = require("class-transformer");
/**
 * The form of legal arrangement. Required if `type` is **Trust** or **Partnership**.
 *
 * @remarks
 *
 * The possible values depend on the `type`.
 *
 * - For `type` **Trust**:  **CashManagementTrust**, **CorporateUnitTrust**, **DeceasedEstate**, **DiscretionaryInvestmentTrust**, **DiscretionaryServicesManagementTrust**, **DiscretionaryTradingTrust**, **FirstHomeSaverAccountsTrust**, **FixedTrust**, **FixedUnitTrust**, **HybridTrust**, **ListedPublicUnitTrust**, **OtherTrust**, **PooledSuperannuationTrust**, **PublicTradingTrust**, or **UnlistedPublicUnitTrust**.
 *
 * - For `type` **Partnership**: **LimitedPartnership**, **FamilyPartnership**, or **OtherPartnership**
 */
var LegalArrangementDetailLegalFormEnum;
(function (LegalArrangementDetailLegalFormEnum) {
    LegalArrangementDetailLegalFormEnum["CashManagementTrust"] = "CashManagementTrust";
    LegalArrangementDetailLegalFormEnum["CorporateUnitTrust"] = "CorporateUnitTrust";
    LegalArrangementDetailLegalFormEnum["DeceasedEstate"] = "DeceasedEstate";
    LegalArrangementDetailLegalFormEnum["DiscretionaryInvestmentTrust"] = "DiscretionaryInvestmentTrust";
    LegalArrangementDetailLegalFormEnum["DiscretionaryServicesManagementTrust"] = "DiscretionaryServicesManagementTrust";
    LegalArrangementDetailLegalFormEnum["DiscretionaryTradingTrust"] = "DiscretionaryTradingTrust";
    LegalArrangementDetailLegalFormEnum["FirstHomeSaverAccountsTrust"] = "FirstHomeSaverAccountsTrust";
    LegalArrangementDetailLegalFormEnum["FixedTrust"] = "FixedTrust";
    LegalArrangementDetailLegalFormEnum["FixedUnitTrust"] = "FixedUnitTrust";
    LegalArrangementDetailLegalFormEnum["HybridTrust"] = "HybridTrust";
    LegalArrangementDetailLegalFormEnum["ListedPublicUnitTrust"] = "ListedPublicUnitTrust";
    LegalArrangementDetailLegalFormEnum["OtherTrust"] = "OtherTrust";
    LegalArrangementDetailLegalFormEnum["PooledSuperannuationTrust"] = "PooledSuperannuationTrust";
    LegalArrangementDetailLegalFormEnum["PublicTradingTrust"] = "PublicTradingTrust";
    LegalArrangementDetailLegalFormEnum["UnlistedPublicUnitTrust"] = "UnlistedPublicUnitTrust";
    LegalArrangementDetailLegalFormEnum["LimitedPartnership"] = "LimitedPartnership";
    LegalArrangementDetailLegalFormEnum["FamilyPartnership"] = "FamilyPartnership";
    LegalArrangementDetailLegalFormEnum["OtherPartnership"] = "OtherPartnership";
})(LegalArrangementDetailLegalFormEnum = exports.LegalArrangementDetailLegalFormEnum || (exports.LegalArrangementDetailLegalFormEnum = {}));
/**
 * The [type of legal arrangement](https://docs.adyen.com/marketplaces-and-platforms/classic/verification-process/legal-arrangements#types-of-legal-arrangements).
 *
 * @remarks
 *
 * Possible values:
 *
 * - **Association**
 *
 * - **Partnership**
 *
 * - **SoleProprietorship**
 *
 * - **Trust**
 *
 *
 */
var LegalArrangementDetailTypeEnum;
(function (LegalArrangementDetailTypeEnum) {
    LegalArrangementDetailTypeEnum["Association"] = "Association";
    LegalArrangementDetailTypeEnum["Partnership"] = "Partnership";
    LegalArrangementDetailTypeEnum["SoleProprietorship"] = "SoleProprietorship";
    LegalArrangementDetailTypeEnum["Trust"] = "Trust";
})(LegalArrangementDetailTypeEnum = exports.LegalArrangementDetailTypeEnum || (exports.LegalArrangementDetailTypeEnum = {}));
var LegalArrangementDetail = /** @class */ (function (_super) {
    __extends(LegalArrangementDetail, _super);
    function LegalArrangementDetail() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address" }),
        (0, class_transformer_1.Type)(function () { return viasaddress_1.ViasAddress; }),
        __metadata("design:type", viasaddress_1.ViasAddress)
    ], LegalArrangementDetail.prototype, "address", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "legalArrangementCode" }),
        __metadata("design:type", String)
    ], LegalArrangementDetail.prototype, "legalArrangementCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: legalarrangemententitydetail_1.LegalArrangementEntityDetail }),
        (0, class_transformer_1.Expose)({ name: "legalArrangementEntities" }),
        (0, class_transformer_1.Type)(function () { return legalarrangemententitydetail_1.LegalArrangementEntityDetail; }),
        __metadata("design:type", Array)
    ], LegalArrangementDetail.prototype, "legalArrangementEntities", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "legalArrangementReference" }),
        __metadata("design:type", String)
    ], LegalArrangementDetail.prototype, "legalArrangementReference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "legalForm" }),
        __metadata("design:type", String)
    ], LegalArrangementDetail.prototype, "legalForm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], LegalArrangementDetail.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "registrationNumber" }),
        __metadata("design:type", String)
    ], LegalArrangementDetail.prototype, "registrationNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "taxNumber" }),
        __metadata("design:type", String)
    ], LegalArrangementDetail.prototype, "taxNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], LegalArrangementDetail.prototype, "type", void 0);
    return LegalArrangementDetail;
}(utils_1.SpeakeasyBase));
exports.LegalArrangementDetail = LegalArrangementDetail;
