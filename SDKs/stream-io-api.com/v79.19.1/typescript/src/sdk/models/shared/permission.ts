/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Level at which permission could be applied (app or channel)
 */
export enum PermissionLevelEnum {
  App = "app",
  Channel = "channel",
}

export class Permission extends SpeakeasyBase {
  /**
   * Action name this permission is for (e.g. SendMessage)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action: string;

  /**
   * MongoDB style condition which decides whether or not the permission is granted
   */
  @SpeakeasyMetadata()
  @Expose({ name: "condition" })
  condition?: Record<string, any>;

  /**
   * Whether this is a custom permission or built-in
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custom" })
  custom: boolean;

  /**
   * Description of the permission
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * Unique permission ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Level at which permission could be applied (app or channel)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "level" })
  level: PermissionLevelEnum;

  /**
   * Name of the permission
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Whether this permission applies to resource owner or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  owner: boolean;

  /**
   * Whether this permission applies to teammates (multi-tenancy mode only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "same_team" })
  sameTeam: boolean;

  /**
   * List of tags of the permission
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags: string[];
}
