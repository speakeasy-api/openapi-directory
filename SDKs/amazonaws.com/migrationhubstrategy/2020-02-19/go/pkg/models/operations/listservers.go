// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListServersRequestBodyServerCriteriaEnum -  Criteria for filtering servers.
type ListServersRequestBodyServerCriteriaEnum string

const (
	ListServersRequestBodyServerCriteriaEnumNotDefined     ListServersRequestBodyServerCriteriaEnum = "NOT_DEFINED"
	ListServersRequestBodyServerCriteriaEnumOsName         ListServersRequestBodyServerCriteriaEnum = "OS_NAME"
	ListServersRequestBodyServerCriteriaEnumStrategy       ListServersRequestBodyServerCriteriaEnum = "STRATEGY"
	ListServersRequestBodyServerCriteriaEnumDestination    ListServersRequestBodyServerCriteriaEnum = "DESTINATION"
	ListServersRequestBodyServerCriteriaEnumServerID       ListServersRequestBodyServerCriteriaEnum = "SERVER_ID"
	ListServersRequestBodyServerCriteriaEnumAnalysisStatus ListServersRequestBodyServerCriteriaEnum = "ANALYSIS_STATUS"
	ListServersRequestBodyServerCriteriaEnumErrorCategory  ListServersRequestBodyServerCriteriaEnum = "ERROR_CATEGORY"
)

func (e *ListServersRequestBodyServerCriteriaEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NOT_DEFINED":
		fallthrough
	case "OS_NAME":
		fallthrough
	case "STRATEGY":
		fallthrough
	case "DESTINATION":
		fallthrough
	case "SERVER_ID":
		fallthrough
	case "ANALYSIS_STATUS":
		fallthrough
	case "ERROR_CATEGORY":
		*e = ListServersRequestBodyServerCriteriaEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListServersRequestBodyServerCriteriaEnum: %s", s)
	}
}

// ListServersRequestBodySortEnum -  Specifies whether to sort by ascending (<code>ASC</code>) or descending (<code>DESC</code>) order.
type ListServersRequestBodySortEnum string

const (
	ListServersRequestBodySortEnumAsc  ListServersRequestBodySortEnum = "ASC"
	ListServersRequestBodySortEnumDesc ListServersRequestBodySortEnum = "DESC"
)

func (e *ListServersRequestBodySortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ASC":
		fallthrough
	case "DESC":
		*e = ListServersRequestBodySortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListServersRequestBodySortEnum: %s", s)
	}
}

type ListServersRequestBody struct {
	//  Specifies the filter value, which is based on the type of server criteria. For example, if <code>serverCriteria</code> is <code>OS_NAME</code>, and the <code>filterValue</code> is equal to <code>WindowsServer</code>, then <code>ListServers</code> returns all of the servers matching the OS name <code>WindowsServer</code>.
	FilterValue *string `json:"filterValue,omitempty"`
	//  Specifies the group ID to filter on.
	GroupIDFilter []shared.Group `json:"groupIdFilter,omitempty"`
	//  The maximum number of items to include in the response. The maximum value is 100.
	MaxResults *int64 `json:"maxResults,omitempty"`
	//  The token from a previous call that you use to retrieve the next set of results. For example, if a previous call to this action returned 100 items, but you set <code>maxResults</code> to 10. You'll receive a set of 10 results along with a token. You then use the returned token to retrieve the next set of 10.
	NextToken *string `json:"nextToken,omitempty"`
	//  Criteria for filtering servers.
	ServerCriteria *ListServersRequestBodyServerCriteriaEnum `json:"serverCriteria,omitempty"`
	//  Specifies whether to sort by ascending (<code>ASC</code>) or descending (<code>DESC</code>) order.
	Sort *ListServersRequestBodySortEnum `json:"sort,omitempty"`
}

type ListServersRequest struct {
	RequestBody       ListServersRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListServersResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListServersResponse *shared.ListServersResponse
	StatusCode          int
	RawResponse         *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
