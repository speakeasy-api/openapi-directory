"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import connection as shared_connection
from typing import Optional


@dataclasses.dataclass
class GetConnectionsSecurity:
    
    o_auth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetConnectionsRequest:
    
    auth_event_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'authEventId', 'style': 'form', 'explode': True }})
    r"""Filter by authEventId"""  
    

@dataclasses.dataclass
class GetConnectionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    connections: Optional[list[shared_connection.Connection]] = dataclasses.field(default=None)
    r"""Success - return response of type Connections array with 0 to n Connection"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    