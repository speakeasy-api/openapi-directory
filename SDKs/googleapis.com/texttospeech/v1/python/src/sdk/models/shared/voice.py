"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class VoiceSsmlGenderEnum(str, Enum):
    r"""The gender of this voice."""
    SSML_VOICE_GENDER_UNSPECIFIED = 'SSML_VOICE_GENDER_UNSPECIFIED'
    MALE = 'MALE'
    FEMALE = 'FEMALE'
    NEUTRAL = 'NEUTRAL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Voice:
    r"""Description of a voice supported by the TTS service."""
    
    language_codes: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('languageCodes'), 'exclude': lambda f: f is None }})
    r"""The languages that this voice supports, expressed as [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tags (e.g. \\"en-US\\", \\"es-419\\", \\"cmn-tw\\")."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of this voice. Each distinct voice has a unique name."""  
    natural_sample_rate_hertz: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('naturalSampleRateHertz'), 'exclude': lambda f: f is None }})
    r"""The natural sample rate (in hertz) for this voice."""  
    ssml_gender: Optional[VoiceSsmlGenderEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ssmlGender'), 'exclude': lambda f: f is None }})
    r"""The gender of this voice."""  
    