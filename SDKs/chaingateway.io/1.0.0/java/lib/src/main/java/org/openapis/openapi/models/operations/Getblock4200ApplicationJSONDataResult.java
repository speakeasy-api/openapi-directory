/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Getblock4200ApplicationJSONDataResult {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bits")
    public String bits;

    public Getblock4200ApplicationJSONDataResult withBits(String bits) {
        this.bits = bits;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chainwork")
    public String chainwork;

    public Getblock4200ApplicationJSONDataResult withChainwork(String chainwork) {
        this.chainwork = chainwork;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confirmations")
    public Double confirmations;

    public Getblock4200ApplicationJSONDataResult withConfirmations(Double confirmations) {
        this.confirmations = confirmations;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("difficulty")
    public Double difficulty;

    public Getblock4200ApplicationJSONDataResult withDifficulty(Double difficulty) {
        this.difficulty = difficulty;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hash")
    public String hash;

    public Getblock4200ApplicationJSONDataResult withHash(String hash) {
        this.hash = hash;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("height")
    public Double height;

    public Getblock4200ApplicationJSONDataResult withHeight(Double height) {
        this.height = height;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mediantime")
    public Double mediantime;

    public Getblock4200ApplicationJSONDataResult withMediantime(Double mediantime) {
        this.mediantime = mediantime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merkleroot")
    public String merkleroot;

    public Getblock4200ApplicationJSONDataResult withMerkleroot(String merkleroot) {
        this.merkleroot = merkleroot;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nTx")
    public Double nTx;

    public Getblock4200ApplicationJSONDataResult withNTx(Double nTx) {
        this.nTx = nTx;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextblockhash")
    public String nextblockhash;

    public Getblock4200ApplicationJSONDataResult withNextblockhash(String nextblockhash) {
        this.nextblockhash = nextblockhash;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nonce")
    public Double nonce;

    public Getblock4200ApplicationJSONDataResult withNonce(Double nonce) {
        this.nonce = nonce;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("previousblockhash")
    public String previousblockhash;

    public Getblock4200ApplicationJSONDataResult withPreviousblockhash(String previousblockhash) {
        this.previousblockhash = previousblockhash;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Double size;

    public Getblock4200ApplicationJSONDataResult withSize(Double size) {
        this.size = size;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("strippedsize")
    public Double strippedsize;

    public Getblock4200ApplicationJSONDataResult withStrippedsize(Double strippedsize) {
        this.strippedsize = strippedsize;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("time")
    public Double time;

    public Getblock4200ApplicationJSONDataResult withTime(Double time) {
        this.time = time;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tx")
    public String[] tx;

    public Getblock4200ApplicationJSONDataResult withTx(String[] tx) {
        this.tx = tx;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public Double version;

    public Getblock4200ApplicationJSONDataResult withVersion(Double version) {
        this.version = version;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("versionHex")
    public String versionHex;

    public Getblock4200ApplicationJSONDataResult withVersionHex(String versionHex) {
        this.versionHex = versionHex;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("weight")
    public Double weight;

    public Getblock4200ApplicationJSONDataResult withWeight(Double weight) {
        this.weight = weight;
        return this;
    }
    
    public Getblock4200ApplicationJSONDataResult(){}
}
