<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PricingInfo - Represents the pricing information for a SKU at a single point of time.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PricingInfo
{
    /**
     * Represents the aggregation level and interval for pricing of a single SKU.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AggregationInfo $aggregationInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('aggregationInfo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AggregationInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AggregationInfo $aggregationInfo = null;
    
    /**
     * Conversion rate used for currency conversion, from USD to the currency specified in the request. This includes any surcharge collected for billing in non USD currency. If a currency is not specified in the request this defaults to 1.0. Example: USD * currency_conversion_rate = JPY
     * 
     * @var ?float $currencyConversionRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('currencyConversionRate')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $currencyConversionRate = null;
    
    /**
     * The timestamp from which this pricing was effective within the requested time range. This is guaranteed to be greater than or equal to the start_time field in the request and less than the end_time field in the request. If a time range was not specified in the request this field will be equivalent to a time within the last 12 hours, indicating the latest pricing info.
     * 
     * @var ?string $effectiveTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('effectiveTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $effectiveTime = null;
    
    /**
     * Expresses a mathematical pricing formula. For Example:- `usage_unit: GBy` `tiered_rates:` `[start_usage_amount: 20, unit_price: $10]` `[start_usage_amount: 100, unit_price: $5]` The above expresses a pricing formula where the first 20GB is free, the next 80GB is priced at $10 per GB followed by $5 per GB for additional usage.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PricingExpression $pricingExpression
     */
	#[\JMS\Serializer\Annotation\SerializedName('pricingExpression')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PricingExpression')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PricingExpression $pricingExpression = null;
    
    /**
     * An optional human readable summary of the pricing information, has a maximum length of 256 characters.
     * 
     * @var ?string $summary
     */
	#[\JMS\Serializer\Annotation\SerializedName('summary')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $summary = null;
    
	public function __construct()
	{
		$this->aggregationInfo = null;
		$this->currencyConversionRate = null;
		$this->effectiveTime = null;
		$this->pricingExpression = null;
		$this->summary = null;
	}
}
