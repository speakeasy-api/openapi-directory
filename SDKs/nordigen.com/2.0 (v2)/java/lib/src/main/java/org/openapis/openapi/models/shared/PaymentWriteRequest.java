/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * PaymentWriteRequest - PaymentWriteSerializer.
 */
public class PaymentWriteRequest {
    /**
     * Registered creditor account
     */
    @JsonProperty("creditor_account")
    public String creditorAccount;
    public PaymentWriteRequest withCreditorAccount(String creditorAccount) {
        this.creditorAccount = creditorAccount;
        return this;
    }
    
    /**
     * Payment Custom Payment ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_payment_id")
    public String customPaymentId;
    public PaymentWriteRequest withCustomPaymentId(String customPaymentId) {
        this.customPaymentId = customPaymentId;
        return this;
    }
    
    /**
     * Debtor account
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("debtor_account")
    public PaymentWriteRequestDebtorAccount debtorAccount;
    public PaymentWriteRequest withDebtorAccount(PaymentWriteRequestDebtorAccount debtorAccount) {
        this.debtorAccount = debtorAccount;
        return this;
    }
    
    /**
     * Payment description
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public PaymentWriteRequest withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Institution ID for Payment
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("institution_id")
    public String institutionId;
    public PaymentWriteRequest withInstitutionId(String institutionId) {
        this.institutionId = institutionId;
        return this;
    }
    
    /**
     * Instructed amount
     */
    @JsonProperty("instructed_amount")
    public InstructedAmountRequest instructedAmount;
    public PaymentWriteRequest withInstructedAmount(InstructedAmountRequest instructedAmount) {
        this.instructedAmount = instructedAmount;
        return this;
    }
    
    /**
     * Payment product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payment_product")
    public PaymentWriteRequestPaymentProductEnum paymentProduct;
    public PaymentWriteRequest withPaymentProduct(PaymentWriteRequestPaymentProductEnum paymentProduct) {
        this.paymentProduct = paymentProduct;
        return this;
    }
    
    /**
     * Periodic Payment Serializer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("periodic_payment")
    public PeriodicPaymentRequest periodicPayment;
    public PaymentWriteRequest withPeriodicPayment(PeriodicPaymentRequest periodicPayment) {
        this.periodicPayment = periodicPayment;
        return this;
    }
    
    /**
     * Redirect URL to your application after payment is done
     */
    @JsonProperty("redirect")
    public String redirect;
    public PaymentWriteRequest withRedirect(String redirect) {
        this.redirect = redirect;
        return this;
    }
    
    /**
     * Payment Execution date (for periodic payments)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("requested_execution_date")
    public LocalDate requestedExecutionDate;
    public PaymentWriteRequest withRequestedExecutionDate(LocalDate requestedExecutionDate) {
        this.requestedExecutionDate = requestedExecutionDate;
        return this;
    }
    
}
