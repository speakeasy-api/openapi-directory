// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetCandidatesTotalsByOfficeByPartyOfficeEnum - Federal office candidate runs for: H, S or P
type GetCandidatesTotalsByOfficeByPartyOfficeEnum string

const (
	GetCandidatesTotalsByOfficeByPartyOfficeEnumUnknown GetCandidatesTotalsByOfficeByPartyOfficeEnum = ""
	GetCandidatesTotalsByOfficeByPartyOfficeEnumH       GetCandidatesTotalsByOfficeByPartyOfficeEnum = "H"
	GetCandidatesTotalsByOfficeByPartyOfficeEnumS       GetCandidatesTotalsByOfficeByPartyOfficeEnum = "S"
	GetCandidatesTotalsByOfficeByPartyOfficeEnumP       GetCandidatesTotalsByOfficeByPartyOfficeEnum = "P"
)

func (e GetCandidatesTotalsByOfficeByPartyOfficeEnum) ToPointer() *GetCandidatesTotalsByOfficeByPartyOfficeEnum {
	return &e
}

func (e *GetCandidatesTotalsByOfficeByPartyOfficeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "":
		fallthrough
	case "H":
		fallthrough
	case "S":
		fallthrough
	case "P":
		*e = GetCandidatesTotalsByOfficeByPartyOfficeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCandidatesTotalsByOfficeByPartyOfficeEnum: %v", v)
	}
}

type GetCandidatesTotalsByOfficeByPartyRequest struct {
	// API key for https://api.data.gov. Get one at https://api.data.gov/signup.
	//
	APIKey string `queryParam:"style=form,explode=true,name=api_key"`
	// `True` indicates that full election period of a candidate.
	// `False` indicates that two year election cycle.
	ElectionFull *bool `queryParam:"style=form,explode=true,name=election_full"`
	// Filter records to only those that were applicable to a given
	// two-year period.The cycle begins with an odd year and is named
	// for its ending, even year.
	//
	ElectionYear []int `queryParam:"style=form,explode=true,name=election_year"`
	//  Candidates who are actively seeking office. If no value is specified, all candidates
	// are returned. When True is specified, only active candidates are returned. When False is
	// specified, only inactive candidates are returned.
	//
	IsActiveCandidate *bool `queryParam:"style=form,explode=true,name=is_active_candidate"`
	// Federal office candidate runs for: H, S or P
	Office *GetCandidatesTotalsByOfficeByPartyOfficeEnum `queryParam:"style=form,explode=true,name=office"`
	// For paginating through results, starting at page 1
	Page *int `queryParam:"style=form,explode=true,name=page"`
	// The number of results returned per page. Defaults to 20.
	PerPage *int `queryParam:"style=form,explode=true,name=per_page"`
	// Provide a field to sort by. Use `-` for descending order.
	//
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// Hide null values on sorted column(s).
	SortHideNull *bool `queryParam:"style=form,explode=true,name=sort_hide_null"`
	// Toggle that filters out all rows having sort column that is non-null
	SortNullOnly *bool `queryParam:"style=form,explode=true,name=sort_null_only"`
	// Toggle that sorts null values last
	SortNullsLast *bool `queryParam:"style=form,explode=true,name=sort_nulls_last"`
}

type GetCandidatesTotalsByOfficeByPartyResponse struct {
	ContentType              string
	StatusCode               int
	RawResponse              *http.Response
	TotalByOfficeByPartyPage *shared.TotalByOfficeByPartyPage
}
