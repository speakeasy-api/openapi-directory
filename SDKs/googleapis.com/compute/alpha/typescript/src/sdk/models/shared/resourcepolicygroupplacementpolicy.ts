/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Specifies network collocation
 */
export enum ResourcePolicyGroupPlacementPolicyCollocationEnum {
  Clustered = "CLUSTERED",
  Collocated = "COLLOCATED",
  UnspecifiedCollocation = "UNSPECIFIED_COLLOCATION",
}

/**
 * Specifies network locality
 */
export enum ResourcePolicyGroupPlacementPolicyLocalityEnum {
  BestEffort = "BEST_EFFORT",
  Strict = "STRICT",
  UnspecifiedLocality = "UNSPECIFIED_LOCALITY",
}

/**
 * Scope specifies the availability domain to which the VMs should be spread.
 */
export enum ResourcePolicyGroupPlacementPolicyScopeEnum {
  Host = "HOST",
  UnspecifiedScope = "UNSPECIFIED_SCOPE",
}

/**
 * Specifies instances to hosts placement relationship
 */
export enum ResourcePolicyGroupPlacementPolicyStyleEnum {
  Compact = "COMPACT",
  FullySpread = "FULLY_SPREAD",
  UnspecifiedPlacementType = "UNSPECIFIED_PLACEMENT_TYPE",
}

/**
 * A GroupPlacementPolicy specifies resource placement configuration. It specifies the failure bucket separation as well as network locality
 */
export class ResourcePolicyGroupPlacementPolicy extends SpeakeasyBase {
  /**
   * The number of availability domains to spread instances across. If two instances are in different availability domain, they are not in the same low latency network.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availabilityDomainCount" })
  availabilityDomainCount?: number;

  /**
   * Specifies network collocation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "collocation" })
  collocation?: ResourcePolicyGroupPlacementPolicyCollocationEnum;

  /**
   * Specifies network locality
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locality" })
  locality?: ResourcePolicyGroupPlacementPolicyLocalityEnum;

  /**
   * Specifies the number of max logical switches.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxDistance" })
  maxDistance?: number;

  /**
   * Scope specifies the availability domain to which the VMs should be spread.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: ResourcePolicyGroupPlacementPolicyScopeEnum;

  /**
   * Specifies instances to hosts placement relationship
   */
  @SpeakeasyMetadata()
  @Expose({ name: "style" })
  style?: ResourcePolicyGroupPlacementPolicyStyleEnum;

  /**
   * Specifies the shape of the TPU slice
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tpuTopology" })
  tpuTopology?: string;

  /**
   * Number of VMs in this placement group. Google does not recommend that you use this field unless you use a compact policy and you want your policy to work only if it contains this exact number of VMs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vmCount" })
  vmCount?: number;
}
