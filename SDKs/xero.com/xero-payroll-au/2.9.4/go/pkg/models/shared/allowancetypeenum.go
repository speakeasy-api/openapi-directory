// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AllowanceTypeEnum string

const (
	AllowanceTypeEnumCar       AllowanceTypeEnum = "CAR"
	AllowanceTypeEnumTransport AllowanceTypeEnum = "TRANSPORT"
	AllowanceTypeEnumTravel    AllowanceTypeEnum = "TRAVEL"
	AllowanceTypeEnumLaundry   AllowanceTypeEnum = "LAUNDRY"
	AllowanceTypeEnumMeals     AllowanceTypeEnum = "MEALS"
	AllowanceTypeEnumJobkeeper AllowanceTypeEnum = "JOBKEEPER"
	AllowanceTypeEnumOther     AllowanceTypeEnum = "OTHER"
)

func (e AllowanceTypeEnum) ToPointer() *AllowanceTypeEnum {
	return &e
}

func (e *AllowanceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAR":
		fallthrough
	case "TRANSPORT":
		fallthrough
	case "TRAVEL":
		fallthrough
	case "LAUNDRY":
		fallthrough
	case "MEALS":
		fallthrough
	case "JOBKEEPER":
		fallthrough
	case "OTHER":
		*e = AllowanceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AllowanceTypeEnum: %v", v)
	}
}
