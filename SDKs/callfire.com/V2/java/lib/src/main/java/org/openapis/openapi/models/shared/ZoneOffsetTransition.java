/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ZoneOffsetTransition - ~
 */
public class ZoneOffsetTransition {
    /**
     * ~
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("dateTimeAfter")
    public OffsetDateTime dateTimeAfter;
    public ZoneOffsetTransition withDateTimeAfter(OffsetDateTime dateTimeAfter) {
        this.dateTimeAfter = dateTimeAfter;
        return this;
    }
    
    /**
     * ~
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("dateTimeBefore")
    public OffsetDateTime dateTimeBefore;
    public ZoneOffsetTransition withDateTimeBefore(OffsetDateTime dateTimeBefore) {
        this.dateTimeBefore = dateTimeBefore;
        return this;
    }
    
    /**
     * ~
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Duration duration;
    public ZoneOffsetTransition withDuration(Duration duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * ~
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gap")
    public Boolean gap;
    public ZoneOffsetTransition withGap(Boolean gap) {
        this.gap = gap;
        return this;
    }
    
    /**
     * ~
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instant")
    public Long instant;
    public ZoneOffsetTransition withInstant(Long instant) {
        this.instant = instant;
        return this;
    }
    
    /**
     * ~
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offsetAfter")
    public ZoneOffset offsetAfter;
    public ZoneOffsetTransition withOffsetAfter(ZoneOffset offsetAfter) {
        this.offsetAfter = offsetAfter;
        return this;
    }
    
    /**
     * ~
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offsetBefore")
    public ZoneOffset offsetBefore;
    public ZoneOffsetTransition withOffsetBefore(ZoneOffset offsetBefore) {
        this.offsetBefore = offsetBefore;
        return this;
    }
    
    /**
     * ~
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("overlap")
    public Boolean overlap;
    public ZoneOffsetTransition withOverlap(Boolean overlap) {
        this.overlap = overlap;
        return this;
    }
    
}
