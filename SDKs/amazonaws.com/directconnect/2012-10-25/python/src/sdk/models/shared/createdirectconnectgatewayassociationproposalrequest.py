"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import routefilterprefix as shared_routefilterprefix
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateDirectConnectGatewayAssociationProposalRequest:
    
    direct_connect_gateway_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('directConnectGatewayId') }})  
    direct_connect_gateway_owner_account: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('directConnectGatewayOwnerAccount') }})  
    gateway_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gatewayId') }})  
    add_allowed_prefixes_to_direct_connect_gateway: Optional[list[shared_routefilterprefix.RouteFilterPrefix]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('addAllowedPrefixesToDirectConnectGateway'), 'exclude': lambda f: f is None }})  
    remove_allowed_prefixes_to_direct_connect_gateway: Optional[list[shared_routefilterprefix.RouteFilterPrefix]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('removeAllowedPrefixesToDirectConnectGateway'), 'exclude': lambda f: f is None }})  
    