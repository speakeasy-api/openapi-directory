"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import fetcherrorresponse as shared_fetcherrorresponse
from ..shared import fetchrewardearningsresponse as shared_fetchrewardearningsresponse
from typing import Optional


@dataclasses.dataclass
class FetchRewardEarningsRequest:
    
    filter_groups: str = dataclasses.field(metadata={'query_param': { 'field_name': 'filter[groups]', 'style': 'form', 'explode': True }})
    r"""Group identifiers"""  
    filter_patient: str = dataclasses.field(metadata={'query_param': { 'field_name': 'filter[patient]', 'style': 'form', 'explode': True }})
    r"""Patient identifier"""  
    filter_ready_for_fulfillment: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter[ready_for_fulfillment]', 'style': 'form', 'explode': True }})
    r"""If true, only returns those reward earnings for which ready_for_fulfillment is true and fulfilled_at is null. If false, only returns those reward earnings for which ready_for_fulfillment is false and fulfilled_at is null."""  
    

@dataclasses.dataclass
class FetchRewardEarningsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    fetch_error_response: Optional[shared_fetcherrorresponse.FetchErrorResponse] = dataclasses.field(default=None)
    r"""Unauthorized"""  
    fetch_reward_earnings_response: Optional[shared_fetchrewardearningsresponse.FetchRewardEarningsResponse] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    