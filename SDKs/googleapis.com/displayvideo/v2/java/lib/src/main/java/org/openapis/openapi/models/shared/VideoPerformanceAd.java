/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VideoPerformanceAd - Details for a video performance ad.
 */
public class VideoPerformanceAd {
    /**
     * The list of text assets shown on the call-to-action button.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("actionButtonLabels")
    public String[] actionButtonLabels;

    public VideoPerformanceAd withActionButtonLabels(String[] actionButtonLabels) {
        this.actionButtonLabels = actionButtonLabels;
        return this;
    }
    
    /**
     * The list of companion banners used by this ad.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("companionBanners")
    public ImageAsset[] companionBanners;

    public VideoPerformanceAd withCompanionBanners(ImageAsset[] companionBanners) {
        this.companionBanners = companionBanners;
        return this;
    }
    
    /**
     * The custom parameters to pass custom values to tracking URL template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customParameters")
    public java.util.Map<String, String> customParameters;

    public VideoPerformanceAd withCustomParameters(java.util.Map<String, String> customParameters) {
        this.customParameters = customParameters;
        return this;
    }
    
    /**
     * The list of descriptions shown on the call-to-action banner.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("descriptions")
    public String[] descriptions;

    public VideoPerformanceAd withDescriptions(String[] descriptions) {
        this.descriptions = descriptions;
        return this;
    }
    
    /**
     * The first piece after the domain in the display URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayUrlBreadcrumb1")
    public String displayUrlBreadcrumb1;

    public VideoPerformanceAd withDisplayUrlBreadcrumb1(String displayUrlBreadcrumb1) {
        this.displayUrlBreadcrumb1 = displayUrlBreadcrumb1;
        return this;
    }
    
    /**
     * The second piece after the domain in the display URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayUrlBreadcrumb2")
    public String displayUrlBreadcrumb2;

    public VideoPerformanceAd withDisplayUrlBreadcrumb2(String displayUrlBreadcrumb2) {
        this.displayUrlBreadcrumb2 = displayUrlBreadcrumb2;
        return this;
    }
    
    /**
     * The domain of the display URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domain")
    public String domain;

    public VideoPerformanceAd withDomain(String domain) {
        this.domain = domain;
        return this;
    }
    
    /**
     * The URL address of the webpage that people reach after they click the ad.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("finalUrl")
    public String finalUrl;

    public VideoPerformanceAd withFinalUrl(String finalUrl) {
        this.finalUrl = finalUrl;
        return this;
    }
    
    /**
     * The list of headlines shown on the call-to-action banner.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("headlines")
    public String[] headlines;

    public VideoPerformanceAd withHeadlines(String[] headlines) {
        this.headlines = headlines;
        return this;
    }
    
    /**
     * The list of lone headlines shown on the call-to-action banner.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("longHeadlines")
    public String[] longHeadlines;

    public VideoPerformanceAd withLongHeadlines(String[] longHeadlines) {
        this.longHeadlines = longHeadlines;
        return this;
    }
    
    /**
     * The URL address loaded in the background for tracking purposes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trackingUrl")
    public String trackingUrl;

    public VideoPerformanceAd withTrackingUrl(String trackingUrl) {
        this.trackingUrl = trackingUrl;
        return this;
    }
    
    /**
     * The list of YouTube video assets used by this ad.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("videos")
    public YoutubeVideoDetails[] videos;

    public VideoPerformanceAd withVideos(YoutubeVideoDetails[] videos) {
        this.videos = videos;
        return this;
    }
    
    public VideoPerformanceAd(){}
}
