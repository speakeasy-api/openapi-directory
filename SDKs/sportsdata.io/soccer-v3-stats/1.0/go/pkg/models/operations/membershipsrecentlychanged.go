// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// MembershipsRecentlyChangedFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type MembershipsRecentlyChangedFormatEnum string

const (
	MembershipsRecentlyChangedFormatEnumXML  MembershipsRecentlyChangedFormatEnum = "xml"
	MembershipsRecentlyChangedFormatEnumJSON MembershipsRecentlyChangedFormatEnum = "json"
)

func (e MembershipsRecentlyChangedFormatEnum) ToPointer() *MembershipsRecentlyChangedFormatEnum {
	return &e
}

func (e *MembershipsRecentlyChangedFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "xml":
		fallthrough
	case "json":
		*e = MembershipsRecentlyChangedFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MembershipsRecentlyChangedFormatEnum: %v", v)
	}
}

type MembershipsRecentlyChangedRequest struct {
	// The number of days since memberships were updated. For example, if you pass <code>3</code>, you'll receive all memberships that have been updated in the past 3 days. Valid entries are: <code>1</code>, <code>2</code> ... <code>30</code>
	Days string `pathParam:"style=simple,explode=false,name=days"`
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format MembershipsRecentlyChangedFormatEnum `pathParam:"style=simple,explode=false,name=format"`
}

type MembershipsRecentlyChangedResponse struct {
	ContentType string
	Memberships []shared.Membership
	StatusCode  int
	RawResponse *http.Response
}
