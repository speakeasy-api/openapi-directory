"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class SignRequestRequest:
    
    request_body: bytes = dataclasses.field(metadata={'request': { 'media_type': 'application/jwt' }})
    r"""Claims of scope"""  
    test: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'test', 'style': 'form', 'explode': True }})
    r"""test only mode, using test issuer"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SignRequest201ApplicationJSON:
    r"""Successful response"""
    
    job: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('job'), 'exclude': lambda f: f is None }})
    r"""20-character ID"""  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""waiting"""  
    

@dataclasses.dataclass
class SignRequestResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Too Many Requests on same address / number `rate-limit`"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    sign_request_201_application_json_object: Optional[SignRequest201ApplicationJSON] = dataclasses.field(default=None)
    r"""Successful response"""  
    