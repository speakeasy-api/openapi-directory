"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import fleetaction_enum as shared_fleetaction_enum
from ..shared import locationstate as shared_locationstate
from ..shared import locationupdatestatus_enum as shared_locationupdatestatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LocationAttributes:
    r"""Details about a location in a multi-location fleet."""
    
    location_state: Optional[shared_locationstate.LocationState] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LocationState'), 'exclude': lambda f: f is None }})  
    stopped_actions: Optional[list[shared_fleetaction_enum.FleetActionEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StoppedActions'), 'exclude': lambda f: f is None }})  
    update_status: Optional[shared_locationupdatestatus_enum.LocationUpdateStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpdateStatus'), 'exclude': lambda f: f is None }})  
    