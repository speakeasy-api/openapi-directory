"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import identityprovider as shared_identityprovider
from ..shared import settings as shared_settings
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IdentityProviderSummary:
    r"""Describes an identity provider."""
    
    identity_provider: shared_identityprovider.IdentityProvider = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IdentityProvider') }})  
    product: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Product') }})  
    settings: shared_settings.Settings = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Settings') }})  
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status') }})  
    failure_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FailureMessage'), 'exclude': lambda f: f is None }})  
    