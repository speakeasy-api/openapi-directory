"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import catalogentry as shared_catalogentry
from ..shared import language_enum as shared_language_enum
from ..shared import location as shared_location
from ..shared import mappingentry as shared_mappingentry
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetPlanRequest:
    
    mapping: list[shared_mappingentry.MappingEntry] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Mapping') }})  
    source: shared_catalogentry.CatalogEntry = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Source') }})  
    additional_plan_options_map: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AdditionalPlanOptionsMap'), 'exclude': lambda f: f is None }})  
    language: Optional[shared_language_enum.LanguageEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Language'), 'exclude': lambda f: f is None }})  
    location: Optional[shared_location.Location] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Location'), 'exclude': lambda f: f is None }})  
    sinks: Optional[list[shared_catalogentry.CatalogEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Sinks'), 'exclude': lambda f: f is None }})  
    