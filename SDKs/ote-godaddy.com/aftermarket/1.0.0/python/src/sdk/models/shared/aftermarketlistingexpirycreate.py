"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AftermarketListingExpiryCreate:
    
    domain: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domain') }})
    r"""Domain name"""  
    expires_at: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiresAt') }})
    r"""Date when the domain expires"""  
    losing_registrar_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('losingRegistrarId') }})
    r"""Losing registrar id for the domain"""  
    page_views_monthly: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pageViewsMonthly'), 'exclude': lambda f: f is None }})
    r"""Monthly traffic page view for the domain"""  
    revenue_monthly: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('revenueMonthly'), 'exclude': lambda f: f is None }})
    r"""Monthly parking revenue (in USD micro unit) for the domain"""  
    