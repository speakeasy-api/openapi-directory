// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// RunPivotReportResponse - The response pivot report table corresponding to a pivot request.
type RunPivotReportResponse struct {
	// Aggregation of metric values. Can be totals, minimums, or maximums. The returned aggregations are controlled by the metric_aggregations in the pivot. The type of aggregation returned in each row is shown by the dimension_values which are set to "RESERVED_".
	Aggregates []Row `json:"aggregates,omitempty"`
	// Describes dimension columns. The number of DimensionHeaders and ordering of DimensionHeaders matches the dimensions present in rows.
	DimensionHeaders []DimensionHeader `json:"dimensionHeaders,omitempty"`
	// Identifies what kind of resource this message is. This `kind` is always the fixed string "analyticsData#runPivotReport". Useful to distinguish between response types in JSON.
	Kind *string `json:"kind,omitempty"`
	// Response's metadata carrying additional information about the report content.
	Metadata *ResponseMetaData `json:"metadata,omitempty"`
	// Describes metric columns. The number of MetricHeaders and ordering of MetricHeaders matches the metrics present in rows.
	MetricHeaders []MetricHeader `json:"metricHeaders,omitempty"`
	// Summarizes the columns and rows created by a pivot. Each pivot in the request produces one header in the response. If we have a request like this: "pivots": [{ "fieldNames": ["country", "city"] }, { "fieldNames": "eventName" }] We will have the following `pivotHeaders` in the response: "pivotHeaders" : [{ "dimensionHeaders": [{ "dimensionValues": [ { "value": "United Kingdom" }, { "value": "London" } ] }, { "dimensionValues": [ { "value": "Japan" }, { "value": "Osaka" } ] }] }, { "dimensionHeaders": [{ "dimensionValues": [{ "value": "session_start" }] }, { "dimensionValues": [{ "value": "scroll" }] }] }]
	PivotHeaders []PivotHeader `json:"pivotHeaders,omitempty"`
	// Current state of all quotas for this Analytics Property. If any quota for a property is exhausted, all requests to that property will return Resource Exhausted errors.
	PropertyQuota *PropertyQuota `json:"propertyQuota,omitempty"`
	// Rows of dimension value combinations and metric values in the report.
	Rows []Row `json:"rows,omitempty"`
}
