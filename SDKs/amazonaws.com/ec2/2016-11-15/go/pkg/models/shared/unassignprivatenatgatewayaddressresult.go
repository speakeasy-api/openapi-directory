// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// UnassignPrivateNatGatewayAddressResultNatGatewayAddressesStatusEnum - The address status.
type UnassignPrivateNatGatewayAddressResultNatGatewayAddressesStatusEnum string

const (
	UnassignPrivateNatGatewayAddressResultNatGatewayAddressesStatusEnumAssigning      UnassignPrivateNatGatewayAddressResultNatGatewayAddressesStatusEnum = "assigning"
	UnassignPrivateNatGatewayAddressResultNatGatewayAddressesStatusEnumUnassigning    UnassignPrivateNatGatewayAddressResultNatGatewayAddressesStatusEnum = "unassigning"
	UnassignPrivateNatGatewayAddressResultNatGatewayAddressesStatusEnumAssociating    UnassignPrivateNatGatewayAddressResultNatGatewayAddressesStatusEnum = "associating"
	UnassignPrivateNatGatewayAddressResultNatGatewayAddressesStatusEnumDisassociating UnassignPrivateNatGatewayAddressResultNatGatewayAddressesStatusEnum = "disassociating"
	UnassignPrivateNatGatewayAddressResultNatGatewayAddressesStatusEnumSucceeded      UnassignPrivateNatGatewayAddressResultNatGatewayAddressesStatusEnum = "succeeded"
	UnassignPrivateNatGatewayAddressResultNatGatewayAddressesStatusEnumFailed         UnassignPrivateNatGatewayAddressResultNatGatewayAddressesStatusEnum = "failed"
)

func (e *UnassignPrivateNatGatewayAddressResultNatGatewayAddressesStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "assigning":
		fallthrough
	case "unassigning":
		fallthrough
	case "associating":
		fallthrough
	case "disassociating":
		fallthrough
	case "succeeded":
		fallthrough
	case "failed":
		*e = UnassignPrivateNatGatewayAddressResultNatGatewayAddressesStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UnassignPrivateNatGatewayAddressResultNatGatewayAddressesStatusEnum: %s", s)
	}
}

// UnassignPrivateNatGatewayAddressResultNatGatewayAddresses - Describes the IP addresses and network interface associated with a NAT gateway.
type UnassignPrivateNatGatewayAddressResultNatGatewayAddresses struct {
	AllocationID       *string
	AssociationID      *string
	FailureMessage     *string
	IsPrimary          *bool
	NetworkInterfaceID *string
	PrivateIP          *string
	PublicIP           *string
	Status             *UnassignPrivateNatGatewayAddressResultNatGatewayAddressesStatusEnum
}

// UnassignPrivateNatGatewayAddressResult - Success
type UnassignPrivateNatGatewayAddressResult struct {
	NatGatewayAddresses []UnassignPrivateNatGatewayAddressResultNatGatewayAddresses
	NatGatewayID        *string
}
