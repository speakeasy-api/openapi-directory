/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PasswordRequirementsSummary - Active password requirements.
 */
public class PasswordRequirementsSummary {
    @JsonProperty("blockPreviousPasswords")
    public Boolean blockPreviousPasswords;

    public PasswordRequirementsSummary withBlockPreviousPasswords(Boolean blockPreviousPasswords) {
        this.blockPreviousPasswords = blockPreviousPasswords;
        return this;
    }
    
    @JsonProperty("clearApiTokens")
    public Boolean clearApiTokens;

    public PasswordRequirementsSummary withClearApiTokens(Boolean clearApiTokens) {
        this.clearApiTokens = clearApiTokens;
        return this;
    }
    
    @JsonProperty("clearWebSessions")
    public Boolean clearWebSessions;

    public PasswordRequirementsSummary withClearWebSessions(Boolean clearWebSessions) {
        this.clearWebSessions = clearWebSessions;
        return this;
    }
    
    @JsonProperty("maxLength")
    public Integer maxLength;

    public PasswordRequirementsSummary withMaxLength(Integer maxLength) {
        this.maxLength = maxLength;
        return this;
    }
    
    @JsonProperty("minLength")
    public Integer minLength;

    public PasswordRequirementsSummary withMinLength(Integer minLength) {
        this.minLength = minLength;
        return this;
    }
    
    @JsonProperty("minLowerCase")
    public Integer minLowerCase;

    public PasswordRequirementsSummary withMinLowerCase(Integer minLowerCase) {
        this.minLowerCase = minLowerCase;
        return this;
    }
    
    @JsonProperty("minNumerics")
    public Integer minNumerics;

    public PasswordRequirementsSummary withMinNumerics(Integer minNumerics) {
        this.minNumerics = minNumerics;
        return this;
    }
    
    @JsonProperty("minSpecial")
    public Integer minSpecial;

    public PasswordRequirementsSummary withMinSpecial(Integer minSpecial) {
        this.minSpecial = minSpecial;
        return this;
    }
    
    @JsonProperty("minUpperCase")
    public Integer minUpperCase;

    public PasswordRequirementsSummary withMinUpperCase(Integer minUpperCase) {
        this.minUpperCase = minUpperCase;
        return this;
    }
    
    @JsonProperty("useZxcvbn")
    public Boolean useZxcvbn;

    public PasswordRequirementsSummary withUseZxcvbn(Boolean useZxcvbn) {
        this.useZxcvbn = useZxcvbn;
        return this;
    }
    
    public PasswordRequirementsSummary(@JsonProperty("blockPreviousPasswords") Boolean blockPreviousPasswords, @JsonProperty("clearApiTokens") Boolean clearApiTokens, @JsonProperty("clearWebSessions") Boolean clearWebSessions, @JsonProperty("maxLength") Integer maxLength, @JsonProperty("minLength") Integer minLength, @JsonProperty("minLowerCase") Integer minLowerCase, @JsonProperty("minNumerics") Integer minNumerics, @JsonProperty("minSpecial") Integer minSpecial, @JsonProperty("minUpperCase") Integer minUpperCase, @JsonProperty("useZxcvbn") Boolean useZxcvbn) {
        this.blockPreviousPasswords = blockPreviousPasswords;
        this.clearApiTokens = clearApiTokens;
        this.clearWebSessions = clearWebSessions;
        this.maxLength = maxLength;
        this.minLength = minLength;
        this.minLowerCase = minLowerCase;
        this.minNumerics = minNumerics;
        this.minSpecial = minSpecial;
        this.minUpperCase = minUpperCase;
        this.useZxcvbn = useZxcvbn;
  }
}
