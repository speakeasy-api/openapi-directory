// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PollForJobsXAmzTargetEnum
type PollForJobsXAmzTargetEnum string

const (
	PollForJobsXAmzTargetEnumCodePipeline20150709PollForJobs PollForJobsXAmzTargetEnum = "CodePipeline_20150709.PollForJobs"
)

func (e *PollForJobsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CodePipeline_20150709.PollForJobs":
		*e = PollForJobsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PollForJobsXAmzTargetEnum: %s", s)
	}
}

type PollForJobsHeaders struct {
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        PollForJobsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type PollForJobsRequest struct {
	Headers PollForJobsHeaders
	Request shared.PollForJobsInput `request:"mediaType=application/json"`
}

type PollForJobsResponse struct {
	// ActionTypeNotFoundException
	ActionTypeNotFoundException interface{}
	ContentType                 string
	// Success
	PollForJobsOutput *shared.PollForJobsOutput
	StatusCode        int
	RawResponse       *http.Response
	// ValidationException
	ValidationException interface{}
}
