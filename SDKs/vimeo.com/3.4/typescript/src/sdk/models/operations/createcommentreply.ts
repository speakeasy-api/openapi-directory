/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class CreateCommentReplySecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

export class CreateCommentReplyRequestBody extends SpeakeasyBase {
  /**
   * The reply to the comment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  text: string;
}

export class CreateCommentReplyRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/vnd.vimeo.comment+json",
  })
  requestBody: CreateCommentReplyRequestBody;

  /**
   * The ID of the comment.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=comment_id",
  })
  commentId: number;

  /**
   * The ID of the video.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=video_id",
  })
  videoId: number;
}

export class CreateCommentReplyResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The reply was added.
   */
  @SpeakeasyMetadata()
  comment?: shared.Comment;

  /**
   * Error code 2207: The comment text is missing.
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;
}
