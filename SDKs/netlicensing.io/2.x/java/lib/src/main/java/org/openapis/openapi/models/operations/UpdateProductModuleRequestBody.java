/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class UpdateProductModuleRequestBody {
    /**
     * If set to 'false', the Product Module is disabled. Licensees can not obtain any new Licenses for this Product Module.
     */
    @SpeakeasyMetadata("form:name=active")
    public Boolean active;

    public UpdateProductModuleRequestBody withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    /**
     * License Template. Mandatory for 'Try &amp;amp; Buy' licensing model.
     */
    @SpeakeasyMetadata("form:name=licenseTemplate")
    public UpdateProductModuleRequestBodyLicenseTemplateEnum[] licenseTemplate;

    public UpdateProductModuleRequestBody withLicenseTemplate(UpdateProductModuleRequestBodyLicenseTemplateEnum[] licenseTemplate) {
        this.licenseTemplate = licenseTemplate;
        return this;
    }
    
    /**
     * Licensing model applied to this Product Module. Defines what License Templates can be configured for the Product Module and how Licenses for this Product Module are processed during validation.
     */
    @SpeakeasyMetadata("form:name=licensingModel")
    public String licensingModel;

    public UpdateProductModuleRequestBody withLicensingModel(String licensingModel) {
        this.licensingModel = licensingModel;
        return this;
    }
    
    /**
     * Maximum checkout validity (days). Mandatory for 'Floating' licensing model.
     */
    @SpeakeasyMetadata("form:name=maxCheckoutValidity")
    public Integer maxCheckoutValidity;

    public UpdateProductModuleRequestBody withMaxCheckoutValidity(Integer maxCheckoutValidity) {
        this.maxCheckoutValidity = maxCheckoutValidity;
        return this;
    }
    
    /**
     * Product Module name that is visible to the end customers in NetLicensing Shop.
     */
    @SpeakeasyMetadata("form:name=name")
    public String name;

    public UpdateProductModuleRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Secret Mode. Mandatory for 'Node-Locked' licensing model.
     */
    @SpeakeasyMetadata("form:name=nodeSecretMode")
    public UpdateProductModuleRequestBodyNodeSecretModeEnum[] nodeSecretMode;

    public UpdateProductModuleRequestBody withNodeSecretMode(UpdateProductModuleRequestBodyNodeSecretModeEnum[] nodeSecretMode) {
        this.nodeSecretMode = nodeSecretMode;
        return this;
    }
    
    /**
     * New Product Module number (update).
     */
    @SpeakeasyMetadata("form:name=number")
    public String number;

    public UpdateProductModuleRequestBody withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * Remaining time volume for red level. Mandatory for 'Rental' licensing model.
     */
    @SpeakeasyMetadata("form:name=redThreshold")
    public Integer redThreshold;

    public UpdateProductModuleRequestBody withRedThreshold(Integer redThreshold) {
        this.redThreshold = redThreshold;
        return this;
    }
    
    /**
     * Remaining time volume for yellow level. Mandatory for 'Rental' licensing model.
     */
    @SpeakeasyMetadata("form:name=yellowThreshold")
    public Integer yellowThreshold;

    public UpdateProductModuleRequestBody withYellowThreshold(Integer yellowThreshold) {
        this.yellowThreshold = yellowThreshold;
        return this;
    }
    
    public UpdateProductModuleRequestBody(){}
}
