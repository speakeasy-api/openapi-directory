<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * FunctionConfiguration - A function is a reusable entity. You can use multiple functions to compose the resolver logic.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class FunctionConfiguration
{
	#[\JMS\Serializer\Annotation\SerializedName('code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $code = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('dataSourceName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dataSourceName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('functionArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $functionArn = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('functionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $functionId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('functionVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $functionVersion = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('maxBatchSize')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxBatchSize = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('requestMappingTemplate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $requestMappingTemplate = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('responseMappingTemplate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $responseMappingTemplate = null;
    
    /**
     * Describes a runtime used by an Amazon Web Services AppSync pipeline resolver or Amazon Web Services AppSync function. Specifies the name and version of the runtime to use. Note that if a runtime is specified, code must also be specified.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AppSyncRuntime $runtime
     */
	#[\JMS\Serializer\Annotation\SerializedName('runtime')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AppSyncRuntime')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AppSyncRuntime $runtime = null;
    
    /**
     * <p>Describes a Sync configuration for a resolver.</p> <p>Specifies which Conflict Detection strategy and Resolution strategy to use when the resolver is invoked.</p>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SyncConfig $syncConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('syncConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SyncConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SyncConfig $syncConfig = null;
    
	public function __construct()
	{
		$this->code = null;
		$this->dataSourceName = null;
		$this->description = null;
		$this->functionArn = null;
		$this->functionId = null;
		$this->functionVersion = null;
		$this->maxBatchSize = null;
		$this->name = null;
		$this->requestMappingTemplate = null;
		$this->responseMappingTemplate = null;
		$this->runtime = null;
		$this->syncConfig = null;
	}
}
