// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InstanceRequirementsWithMetadataRequestArchitectureTypesEnum string

const (
	InstanceRequirementsWithMetadataRequestArchitectureTypesEnumI386     InstanceRequirementsWithMetadataRequestArchitectureTypesEnum = "i386"
	InstanceRequirementsWithMetadataRequestArchitectureTypesEnumX8664    InstanceRequirementsWithMetadataRequestArchitectureTypesEnum = "x86_64"
	InstanceRequirementsWithMetadataRequestArchitectureTypesEnumArm64    InstanceRequirementsWithMetadataRequestArchitectureTypesEnum = "arm64"
	InstanceRequirementsWithMetadataRequestArchitectureTypesEnumX8664Mac InstanceRequirementsWithMetadataRequestArchitectureTypesEnum = "x86_64_mac"
	InstanceRequirementsWithMetadataRequestArchitectureTypesEnumArm64Mac InstanceRequirementsWithMetadataRequestArchitectureTypesEnum = "arm64_mac"
)

func (e *InstanceRequirementsWithMetadataRequestArchitectureTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "i386":
		fallthrough
	case "x86_64":
		fallthrough
	case "arm64":
		fallthrough
	case "x86_64_mac":
		fallthrough
	case "arm64_mac":
		*e = InstanceRequirementsWithMetadataRequestArchitectureTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceRequirementsWithMetadataRequestArchitectureTypesEnum: %s", s)
	}
}

type InstanceRequirementsWithMetadataRequestVirtualizationTypesEnum string

const (
	InstanceRequirementsWithMetadataRequestVirtualizationTypesEnumHvm         InstanceRequirementsWithMetadataRequestVirtualizationTypesEnum = "hvm"
	InstanceRequirementsWithMetadataRequestVirtualizationTypesEnumParavirtual InstanceRequirementsWithMetadataRequestVirtualizationTypesEnum = "paravirtual"
)

func (e *InstanceRequirementsWithMetadataRequestVirtualizationTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "hvm":
		fallthrough
	case "paravirtual":
		*e = InstanceRequirementsWithMetadataRequestVirtualizationTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceRequirementsWithMetadataRequestVirtualizationTypesEnum: %s", s)
	}
}

// InstanceRequirementsWithMetadataRequest - <p>The architecture type, virtualization type, and other attributes for the instance types. When you specify instance attributes, Amazon EC2 will identify instance types with those attributes.</p> <p>If you specify <code>InstanceRequirementsWithMetadataRequest</code>, you can't specify <code>InstanceTypes</code>.</p>
type InstanceRequirementsWithMetadataRequest struct {
	ArchitectureTypes    []InstanceRequirementsWithMetadataRequestArchitectureTypesEnum
	InstanceRequirements *InstanceRequirementsRequest
	VirtualizationTypes  []InstanceRequirementsWithMetadataRequestVirtualizationTypesEnum
}
