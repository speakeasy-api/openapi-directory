"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dimensionmapping as shared_dimensionmapping
from ..shared import mixedmeasuremapping as shared_mixedmeasuremapping
from ..shared import multimeasuremappings as shared_multimeasuremappings
from ..shared import timeunit_enum as shared_timeunit_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DataModel:
    r"""Data model for a batch load task."""
    
    dimension_mappings: list[shared_dimensionmapping.DimensionMapping] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DimensionMappings') }})  
    measure_name_column: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MeasureNameColumn'), 'exclude': lambda f: f is None }})  
    mixed_measure_mappings: Optional[list[shared_mixedmeasuremapping.MixedMeasureMapping]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MixedMeasureMappings'), 'exclude': lambda f: f is None }})  
    multi_measure_mappings: Optional[shared_multimeasuremappings.MultiMeasureMappings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MultiMeasureMappings'), 'exclude': lambda f: f is None }})  
    time_column: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TimeColumn'), 'exclude': lambda f: f is None }})  
    time_unit: Optional[shared_timeunit_enum.TimeUnitEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TimeUnit'), 'exclude': lambda f: f is None }})  
    