<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ResourceCollaboratorCreation - Add a collaborator to a resource.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ResourceCollaboratorCreation
{
    /**
     * `True` if the related user can can manage the current document, i.e. changing the document permissions and deleting the document
     * 
     * 
     * 
     * @var ?bool $aclAdmin
     */
	#[\JMS\Serializer\Annotation\SerializedName('aclAdmin')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $aclAdmin = null;
    
    /**
     * `True` if the related user can read the score. (probably true if the user has a permission on the document).
     * 
     * 
     * 
     * @var ?bool $aclRead
     */
	#[\JMS\Serializer\Annotation\SerializedName('aclRead')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $aclRead = null;
    
    /**
     * `True` if the related user can modify the score.
     * 
     * 
     * 
     * @var ?bool $aclWrite
     */
	#[\JMS\Serializer\Annotation\SerializedName('aclWrite')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $aclWrite = null;
    
    /**
     * The unique identifier of a Flat group
     * 
     * @var ?string $group
     */
	#[\JMS\Serializer\Annotation\SerializedName('group')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $group = null;
    
    /**
     * The unique identifier of a Flat user
     * 
     * @var ?string $user
     */
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $user = null;
    
    /**
     * Fill this field to invite an individual user by email.
     * 
     * 
     * 
     * @var ?string $userEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('userEmail')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userEmail = null;
    
    /**
     * Token received in an invitation to join the score.
     * 
     * 
     * 
     * @var ?string $userToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('userToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userToken = null;
    
	public function __construct()
	{
		$this->aclAdmin = null;
		$this->aclRead = null;
		$this->aclWrite = null;
		$this->group = null;
		$this->user = null;
		$this->userEmail = null;
		$this->userToken = null;
	}
}
