"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import tollfree_verification_enum_opt_in_type_enum as shared_tollfree_verification_enum_opt_in_type_enum
from ..shared import tollfree_verification_enum_status_enum as shared_tollfree_verification_enum_status_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MessagingV1TollfreeVerification:
    r"""Created"""
    
    account_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Tollfree Verification resource."""  
    additional_information: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('additional_information'), 'exclude': lambda f: f is None }})
    r"""Additional information to be provided for verification."""  
    business_city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business_city'), 'exclude': lambda f: f is None }})
    r"""The city of the business or organization using the Tollfree number."""  
    business_contact_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business_contact_email'), 'exclude': lambda f: f is None }})
    r"""The email address of the contact for the business or organization using the Tollfree number."""  
    business_contact_first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business_contact_first_name'), 'exclude': lambda f: f is None }})
    r"""The first name of the contact for the business or organization using the Tollfree number."""  
    business_contact_last_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business_contact_last_name'), 'exclude': lambda f: f is None }})
    r"""The last name of the contact for the business or organization using the Tollfree number."""  
    business_contact_phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business_contact_phone'), 'exclude': lambda f: f is None }})
    r"""The phone number of the contact for the business or organization using the Tollfree number."""  
    business_country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business_country'), 'exclude': lambda f: f is None }})
    r"""The country of the business or organization using the Tollfree number."""  
    business_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business_name'), 'exclude': lambda f: f is None }})
    r"""The name of the business or organization using the Tollfree number."""  
    business_postal_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business_postal_code'), 'exclude': lambda f: f is None }})
    r"""The postal code of the business or organization using the Tollfree number."""  
    business_state_province_region: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business_state_province_region'), 'exclude': lambda f: f is None }})
    r"""The state/province/region of the business or organization using the Tollfree number."""  
    business_street_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business_street_address'), 'exclude': lambda f: f is None }})
    r"""The address of the business or organization using the Tollfree number."""  
    business_street_address2: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business_street_address2'), 'exclude': lambda f: f is None }})
    r"""The address of the business or organization using the Tollfree number."""  
    business_website: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('business_website'), 'exclude': lambda f: f is None }})
    r"""The website of the business or organization using the Tollfree number."""  
    customer_profile_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customer_profile_sid'), 'exclude': lambda f: f is None }})
    r"""Customer's Profile Bundle BundleSid."""  
    date_created: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_created'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format."""  
    date_updated: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_updated'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format."""  
    external_reference_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('external_reference_id'), 'exclude': lambda f: f is None }})
    r"""An optional external reference ID supplied by customer and echoed back on status retrieval."""  
    message_volume: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message_volume'), 'exclude': lambda f: f is None }})
    r"""Estimate monthly volume of messages from the Tollfree Number."""  
    notification_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notification_email'), 'exclude': lambda f: f is None }})
    r"""The email address to receive the notification about the verification result. ."""  
    opt_in_image_urls: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('opt_in_image_urls'), 'exclude': lambda f: f is None }})
    r"""Link to an image that shows the opt-in workflow. Multiple images allowed and must be a publicly hosted URL."""  
    opt_in_type: Optional[shared_tollfree_verification_enum_opt_in_type_enum.TollfreeVerificationEnumOptInTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('opt_in_type'), 'exclude': lambda f: f is None }})  
    production_message_sample: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('production_message_sample'), 'exclude': lambda f: f is None }})
    r"""An example of message content, i.e. a sample message."""  
    regulated_item_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('regulated_item_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the Regulated Item."""  
    resource_links: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resource_links'), 'exclude': lambda f: f is None }})
    r"""The URLs of the documents associated with the Tollfree Verification resource."""  
    sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sid'), 'exclude': lambda f: f is None }})
    r"""The unique string to identify Tollfree Verification."""  
    status: Optional[shared_tollfree_verification_enum_status_enum.TollfreeVerificationEnumStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    tollfree_phone_number_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tollfree_phone_number_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the Phone Number associated with the Tollfree Verification."""  
    trust_product_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trust_product_sid'), 'exclude': lambda f: f is None }})
    r"""Tollfree TrustProduct Bundle BundleSid."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""The absolute URL of the Tollfree Verification resource."""  
    use_case_categories: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('use_case_categories'), 'exclude': lambda f: f is None }})
    r"""The category of the use case for the Tollfree Number. List as many are applicable.."""  
    use_case_summary: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('use_case_summary'), 'exclude': lambda f: f is None }})
    r"""Use this to further explain how messaging is used by the business or organization."""  
    