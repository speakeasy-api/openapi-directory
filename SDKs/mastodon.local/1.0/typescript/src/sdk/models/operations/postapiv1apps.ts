/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class PostApiV1AppsRequestBody extends SpeakeasyBase {
  /**
   * A name for your application
   */
  @SpeakeasyMetadata()
  clientName: string;

  /**
   * Where the user should be redirected after authorization. To display the authorization code to the user instead of redirecting to a web page, use urn:ietf:wg:oauth:2.0:oob in this parameter.
   */
  @SpeakeasyMetadata()
  redirectUris: string;

  /**
   * Space separated list of scopes. If none is provided, defaults to read.
   */
  @SpeakeasyMetadata()
  scopes?: string;

  /**
   * A URL to the homepage of your app
   */
  @SpeakeasyMetadata()
  website?: string;
}

/**
 * Success
 */
export class PostApiV1Apps200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "client_id" })
  clientId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "client_secret" })
  clientSecret?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "redirect_uri" })
  redirectUri?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "vapid_key" })
  vapidKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "website" })
  website?: string;
}

export class PostApiV1AppsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * If a required parameter is missing or improperly formatted, the request will fail.
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  postApiV1Apps200ApplicationJSONObject?: PostApiV1Apps200ApplicationJSON;
}
