// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTGetQueueURLActionEnum
type POSTGetQueueURLActionEnum string

const (
	POSTGetQueueURLActionEnumGetQueueURL POSTGetQueueURLActionEnum = "GetQueueUrl"
)

func (e POSTGetQueueURLActionEnum) ToPointer() *POSTGetQueueURLActionEnum {
	return &e
}

func (e *POSTGetQueueURLActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetQueueUrl":
		*e = POSTGetQueueURLActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetQueueURLActionEnum: %v", v)
	}
}

// POSTGetQueueURLVersionEnum
type POSTGetQueueURLVersionEnum string

const (
	POSTGetQueueURLVersionEnumTwoThousandAndTwelve1105 POSTGetQueueURLVersionEnum = "2012-11-05"
)

func (e POSTGetQueueURLVersionEnum) ToPointer() *POSTGetQueueURLVersionEnum {
	return &e
}

func (e *POSTGetQueueURLVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-11-05":
		*e = POSTGetQueueURLVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetQueueURLVersionEnum: %v", v)
	}
}

type POSTGetQueueURLRequest struct {
	Action            POSTGetQueueURLActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                     `request:"mediaType=text/xml"`
	Version           POSTGetQueueURLVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTGetQueueURLResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
