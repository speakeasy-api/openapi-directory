/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FilterCondition } from "./filtercondition";
import { SortCondition } from "./sortcondition";
import { Expose, Type } from "class-transformer";

/**
 * The ListDomains request includes the following elements.
 */
export class ListDomainsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: FilterCondition })
  @Expose({ name: "FilterConditions" })
  @Type(() => FilterCondition)
  filterConditions?: FilterCondition[];

  @SpeakeasyMetadata()
  @Expose({ name: "Marker" })
  marker?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxItems" })
  maxItems?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SortCondition" })
  @Type(() => SortCondition)
  sortCondition?: SortCondition;
}
