/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BugtrackerGetSettings200ApplicationJSON - Alerting bugtracker resource
 */
public class BugtrackerGetSettings200ApplicationJSON {
    /**
     * Event types enabled for bugtracker
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("event_types")
    public BugtrackerGetSettings200ApplicationJSONEventTypesEnum[] eventTypes;
    public BugtrackerGetSettings200ApplicationJSON withEventTypes(BugtrackerGetSettings200ApplicationJSONEventTypesEnum[] eventTypes) {
        this.eventTypes = eventTypes;
        return this;
    }
    
    /**
     * Bugtracker specific settings
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("settings")
    public BugtrackerGetSettings200ApplicationJSONSettings settings;
    public BugtrackerGetSettings200ApplicationJSON withSettings(BugtrackerGetSettings200ApplicationJSONSettings settings) {
        this.settings = settings;
        return this;
    }
    
    /**
     * bugtracker state
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public BugtrackerGetSettings200ApplicationJSONStateEnum state;
    public BugtrackerGetSettings200ApplicationJSON withState(BugtrackerGetSettings200ApplicationJSONStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * ID of OAuth token
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("token_id")
    public String tokenId;
    public BugtrackerGetSettings200ApplicationJSON withTokenId(String tokenId) {
        this.tokenId = tokenId;
        return this;
    }
    
    /**
     * type of bugtracker
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public BugtrackerGetSettings200ApplicationJSONTypeEnum type;
    public BugtrackerGetSettings200ApplicationJSON withType(BugtrackerGetSettings200ApplicationJSONTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
