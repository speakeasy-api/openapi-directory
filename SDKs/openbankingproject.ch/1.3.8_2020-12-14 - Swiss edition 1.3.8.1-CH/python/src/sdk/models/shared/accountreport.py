"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import hreftype as shared_hreftype
from ..shared import transactions as shared_transactions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountReport:
    r"""JSON based account report.
    This account report contains transactions resulting from the query parameters.
    
    'booked' shall be contained if bookingStatus parameter is set to \"booked\" or \"both\".
    
    'pending' is not contained if the bookingStatus parameter is set to \"booked\" or \"information\".
    
    'information' Only contained if the bookingStatus is set to \"information\" and if supported by ASPSP.
    """
    
    links: dict[str, shared_hreftype.HrefType] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('_links') }})  
    booked: Optional[list[shared_transactions.Transactions]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('booked'), 'exclude': lambda f: f is None }})
    r"""Array of transaction details."""  
    information: Optional[list[shared_transactions.Transactions]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('information'), 'exclude': lambda f: f is None }})
    r"""Array of transaction details."""  
    pending: Optional[list[shared_transactions.Transactions]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pending'), 'exclude': lambda f: f is None }})
    r"""Array of transaction details."""  
    