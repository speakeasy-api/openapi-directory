// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type TeamsGetTeamSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type TeamsGetTeamPathParams struct {
	// The organization's name
	OrgName string `pathParam:"style=simple,explode=false,name=org_name"`
	// The team's name
	TeamName string `pathParam:"style=simple,explode=false,name=team_name"`
}

type TeamsGetTeamRequest struct {
	PathParams TeamsGetTeamPathParams
	Security   TeamsGetTeamSecurity
}

type TeamsGetTeamDefaultApplicationJSONErrorCodeEnum string

const (
	TeamsGetTeamDefaultApplicationJSONErrorCodeEnumBadRequest          TeamsGetTeamDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	TeamsGetTeamDefaultApplicationJSONErrorCodeEnumConflict            TeamsGetTeamDefaultApplicationJSONErrorCodeEnum = "Conflict"
	TeamsGetTeamDefaultApplicationJSONErrorCodeEnumNotAcceptable       TeamsGetTeamDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	TeamsGetTeamDefaultApplicationJSONErrorCodeEnumNotFound            TeamsGetTeamDefaultApplicationJSONErrorCodeEnum = "NotFound"
	TeamsGetTeamDefaultApplicationJSONErrorCodeEnumInternalServerError TeamsGetTeamDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	TeamsGetTeamDefaultApplicationJSONErrorCodeEnumUnauthorized        TeamsGetTeamDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	TeamsGetTeamDefaultApplicationJSONErrorCodeEnumTooManyRequests     TeamsGetTeamDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *TeamsGetTeamDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = TeamsGetTeamDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TeamsGetTeamDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type TeamsGetTeamDefaultApplicationJSONError struct {
	Code    TeamsGetTeamDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                          `json:"message"`
}

// TeamsGetTeamDefaultApplicationJSON - Error
type TeamsGetTeamDefaultApplicationJSON struct {
	Error TeamsGetTeamDefaultApplicationJSONError `json:"error"`
}

// TeamsGetTeam200ApplicationJSON - Success
type TeamsGetTeam200ApplicationJSON struct {
	// The description of the team
	Description *string `json:"description,omitempty"`
	// The display name of the team
	DisplayName string `json:"display_name"`
	// The internal unique id (UUID) of the team.
	ID string `json:"id"`
	// The name of the team
	Name string `json:"name"`
}

type TeamsGetTeamResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	TeamsGetTeam200ApplicationJSONObject *TeamsGetTeam200ApplicationJSON
	// Error
	TeamsGetTeamDefaultApplicationJSONObject *TeamsGetTeamDefaultApplicationJSON
}
