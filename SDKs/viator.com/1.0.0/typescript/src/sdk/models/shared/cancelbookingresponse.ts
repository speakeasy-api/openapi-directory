/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum CancelBookingResponseReasonEnum {
  AlreadyCancelled = "ALREADY_CANCELLED",
  NotCancellable = "NOT_CANCELLABLE",
}

/**
 * String indicating the outcome of the booking cancellation request.
 *
 * @remarks
 *
 *   * `ACCEPTED`: The cancellation was successful
 *   * `DECLINED`: The cancellation failed
 *
 */
export enum CancelBookingResponseStatusEnum {
  Accepted = "ACCEPTED",
  Declined = "DECLINED",
}

/**
 * Success
 */
export class CancelBookingResponse extends SpeakeasyBase {
  /**
   * Booking reference number for this booking, prepended with `BR-`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bookingId" })
  bookingId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: CancelBookingResponseReasonEnum;

  /**
   * String indicating the outcome of the booking cancellation request.
   *
   * @remarks
   *
   *   * `ACCEPTED`: The cancellation was successful
   *   * `DECLINED`: The cancellation failed
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: CancelBookingResponseStatusEnum;
}
