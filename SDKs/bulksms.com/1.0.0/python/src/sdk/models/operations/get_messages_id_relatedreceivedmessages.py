"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import message as shared_message
from typing import Optional


@dataclasses.dataclass
class GetMessagesIDRelatedReceivedMessagesSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class GetMessagesIDRelatedReceivedMessagesRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""The `id` of the sent message"""  
    

@dataclasses.dataclass
class GetMessagesIDRelatedReceivedMessagesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Bad Request. The content or structure of your submission, or a parameter, was found to be invalid."""  
    messages: Optional[list[shared_message.Message]] = dataclasses.field(default=None)
    r"""An array of related messages.  If the `id` is not a sent message, the array will be empty."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    