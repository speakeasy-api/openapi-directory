// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTListMetricsActionEnum
type POSTListMetricsActionEnum string

const (
	POSTListMetricsActionEnumListMetrics POSTListMetricsActionEnum = "ListMetrics"
)

func (e POSTListMetricsActionEnum) ToPointer() *POSTListMetricsActionEnum {
	return &e
}

func (e *POSTListMetricsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ListMetrics":
		*e = POSTListMetricsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListMetricsActionEnum: %v", v)
	}
}

// POSTListMetricsVersionEnum
type POSTListMetricsVersionEnum string

const (
	POSTListMetricsVersionEnumTwoThousandAndTen0801 POSTListMetricsVersionEnum = "2010-08-01"
)

func (e POSTListMetricsVersionEnum) ToPointer() *POSTListMetricsVersionEnum {
	return &e
}

func (e *POSTListMetricsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-08-01":
		*e = POSTListMetricsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListMetricsVersionEnum: %v", v)
	}
}

type POSTListMetricsRequest struct {
	Action POSTListMetricsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	NextToken         *string                    `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       []byte                     `request:"mediaType=text/xml"`
	Version           POSTListMetricsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTListMetricsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
