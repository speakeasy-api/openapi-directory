/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class ReverseResponse {
    
    public String contentType;

    public ReverseResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    
    public java.util.Map<String, String[]> headers;

    public ReverseResponse withHeaders(java.util.Map<String, String[]> headers) {
        this.headers = headers;
        return this;
    }
    
    
    public Integer statusCode;

    public ReverseResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public ReverseResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * Returns a list of matching addresses
     */
    
    public org.openapis.openapi.models.shared.Results results;

    public ReverseResponse withResults(org.openapis.openapi.models.shared.Results results) {
        this.results = results;
        return this;
    }
    
    /**
     * Access denied authentication failed
     */
    
    public Reverse401ApplicationJSON reverse401ApplicationJSONObject;

    public ReverseResponse withReverse401ApplicationJSONObject(Reverse401ApplicationJSON reverse401ApplicationJSONObject) {
        this.reverse401ApplicationJSONObject = reverse401ApplicationJSONObject;
        return this;
    }
    
    /**
     * You are not authorized to access this resource
     */
    
    public Reverse403ApplicationJSON reverse403ApplicationJSONObject;

    public ReverseResponse withReverse403ApplicationJSONObject(Reverse403ApplicationJSON reverse403ApplicationJSONObject) {
        this.reverse403ApplicationJSONObject = reverse403ApplicationJSONObject;
        return this;
    }
    
    /**
     * Route not found
     */
    
    public Reverse404ApplicationJSON reverse404ApplicationJSONObject;

    public ReverseResponse withReverse404ApplicationJSONObject(Reverse404ApplicationJSON reverse404ApplicationJSONObject) {
        this.reverse404ApplicationJSONObject = reverse404ApplicationJSONObject;
        return this;
    }
    
    /**
     * Access denied missing credentials
     */
    
    public Reverse412ApplicationJSON reverse412ApplicationJSONObject;

    public ReverseResponse withReverse412ApplicationJSONObject(Reverse412ApplicationJSON reverse412ApplicationJSONObject) {
        this.reverse412ApplicationJSONObject = reverse412ApplicationJSONObject;
        return this;
    }
    
    /**
     * Invalid body parameters
     */
    
    public Reverse422ApplicationJSON reverse422ApplicationJSONObject;

    public ReverseResponse withReverse422ApplicationJSONObject(Reverse422ApplicationJSON reverse422ApplicationJSONObject) {
        this.reverse422ApplicationJSONObject = reverse422ApplicationJSONObject;
        return this;
    }
    
    /**
     * Too many requests from this IP, please try again in a minute
     */
    
    public Reverse429ApplicationJSON reverse429ApplicationJSONObject;

    public ReverseResponse withReverse429ApplicationJSONObject(Reverse429ApplicationJSON reverse429ApplicationJSONObject) {
        this.reverse429ApplicationJSONObject = reverse429ApplicationJSONObject;
        return this;
    }
    
    public ReverseResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
