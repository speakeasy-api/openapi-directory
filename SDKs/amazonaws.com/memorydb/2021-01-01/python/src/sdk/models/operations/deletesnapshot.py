"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import deletesnapshotrequest as shared_deletesnapshotrequest
from ..shared import deletesnapshotresponse as shared_deletesnapshotresponse
from enum import Enum
from typing import Any, Optional

class DeleteSnapshotXAmzTargetEnum(str, Enum):
    AMAZON_MEMORY_DB_DELETE_SNAPSHOT = 'AmazonMemoryDB.DeleteSnapshot'


@dataclasses.dataclass
class DeleteSnapshotRequest:
    
    delete_snapshot_request: shared_deletesnapshotrequest.DeleteSnapshotRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_target: DeleteSnapshotXAmzTargetEnum = dataclasses.field(metadata={'header': { 'field_name': 'X-Amz-Target', 'style': 'simple', 'explode': False }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class DeleteSnapshotResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    delete_snapshot_response: Optional[shared_deletesnapshotresponse.DeleteSnapshotResponse] = dataclasses.field(default=None)
    r"""Success"""  
    invalid_parameter_combination_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidParameterCombinationException"""  
    invalid_parameter_value_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidParameterValueException"""  
    invalid_snapshot_state_fault: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidSnapshotStateFault"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    service_linked_role_not_found_fault: Optional[Any] = dataclasses.field(default=None)
    r"""ServiceLinkedRoleNotFoundFault"""  
    snapshot_not_found_fault: Optional[Any] = dataclasses.field(default=None)
    r"""SnapshotNotFoundFault"""  
    