/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OrderQuantityUnit - Contains the measurement unit for a quantity and a precision that
 * specifies the number of digits after the decimal point for decimal quantities.
 */
public class OrderQuantityUnit {
    /**
     * The version of the catalog object that this measurement unit references.
     * 
     * This field is set when this is a catalog-backed measurement unit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("catalog_version")
    public Long catalogVersion;
    public OrderQuantityUnit withCatalogVersion(Long catalogVersion) {
        this.catalogVersion = catalogVersion;
        return this;
    }
    
    /**
     * Represents a unit of measurement to use with a quantity, such as ounces
     * or inches. Exactly one of the following fields are required: `custom_unit`,
     * `area_unit`, `length_unit`, `volume_unit`, and `weight_unit`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("measurement_unit")
    public MeasurementUnit measurementUnit;
    public OrderQuantityUnit withMeasurementUnit(MeasurementUnit measurementUnit) {
        this.measurementUnit = measurementUnit;
        return this;
    }
    
    /**
     * For non-integer quantities, represents the number of digits after the decimal point that are
     * recorded for this quantity.
     * 
     * For example, a precision of 1 allows quantities such as `"1.0"` and `"1.1"`, but not `"1.01"`.
     * 
     * Min: 0. Max: 5.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("precision")
    public Long precision;
    public OrderQuantityUnit withPrecision(Long precision) {
        this.precision = precision;
        return this;
    }
    
}
