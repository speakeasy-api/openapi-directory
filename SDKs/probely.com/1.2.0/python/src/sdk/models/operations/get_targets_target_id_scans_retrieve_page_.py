"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetTargetsTargetIDScansRetrievePageRequest:
    
    date_: date = dataclasses.field(metadata={'query_param': { 'field_name': 'date', 'style': 'form', 'explode': True }})
    r"""Date"""  
    target_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'target_id', 'style': 'simple', 'explode': False }})
    r"""Target id"""  
    length: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'length', 'style': 'form', 'explode': True }})
    r"""Number of results to return per page"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetTargetsTargetIDScansRetrievePage404ApplicationJSON:
    r"""Not found"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""Not found."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetTargetsTargetIDScansRetrievePage401ApplicationJSON:
    r"""Access token is missing or invalid"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetTargetsTargetIDScansRetrievePage400ApplicationJSON:
    r"""Bad Request"""
    
    error: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})
    r"""Error message"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetTargetsTargetIDScansRetrievePage200ApplicationJSON:
    r"""Page number for supplied date"""
    
    page: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page'), 'exclude': lambda f: f is None }})
    r"""Page number"""  
    

@dataclasses.dataclass
class GetTargetsTargetIDScansRetrievePageResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_targets_target_id_scans_retrieve_page_200_application_json_object: Optional[GetTargetsTargetIDScansRetrievePage200ApplicationJSON] = dataclasses.field(default=None)
    r"""Page number for supplied date"""  
    get_targets_target_id_scans_retrieve_page_400_application_json_object: Optional[GetTargetsTargetIDScansRetrievePage400ApplicationJSON] = dataclasses.field(default=None)
    r"""Bad Request"""  
    get_targets_target_id_scans_retrieve_page_401_application_json_object: Optional[GetTargetsTargetIDScansRetrievePage401ApplicationJSON] = dataclasses.field(default=None)
    r"""Access token is missing or invalid"""  
    get_targets_target_id_scans_retrieve_page_404_application_json_object: Optional[GetTargetsTargetIDScansRetrievePage404ApplicationJSON] = dataclasses.field(default=None)
    r"""Not found"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    