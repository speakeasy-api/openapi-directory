/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Container - This section describes operations that you can perform on an AWS Elemental MediaStore container.
 */
public class Container {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ARN")
    public String arn;

    public Container withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AccessLoggingEnabled")
    public Boolean accessLoggingEnabled;

    public Container withAccessLoggingEnabled(Boolean accessLoggingEnabled) {
        this.accessLoggingEnabled = accessLoggingEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;

    public Container withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Endpoint")
    public String endpoint;

    public Container withEndpoint(String endpoint) {
        this.endpoint = endpoint;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public Container withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public ContainerStatusEnum status;

    public Container withStatus(ContainerStatusEnum status) {
        this.status = status;
        return this;
    }
    
    public Container(){}
}
