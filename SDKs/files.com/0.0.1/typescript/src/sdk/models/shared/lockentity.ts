/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * List Locks by path
 */
export class LockEntity extends SpeakeasyBase {
  /**
   * Can lock be modified by users other than its creator?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allow_access_by_any_user" })
  allowAccessByAnyUser?: boolean;

  /**
   * DEPRECATED: Lock depth
   */
  @SpeakeasyMetadata()
  @Expose({ name: "depth" })
  depth?: string;

  /**
   * Is lock exclusive?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exclusive" })
  exclusive?: boolean;

  /**
   * Owner of the lock.  This can be any arbitrary string.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  owner?: string;

  /**
   * Path
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;

  /**
   * Does lock apply to subfolders?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recursive" })
  recursive?: boolean;

  /**
   * DEPRECATED: Lock scope
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: string;

  /**
   * Lock timeout in seconds
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeout" })
  timeout?: number;

  /**
   * Lock token.  Use to release lock.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "token" })
  token?: string;

  /**
   * DEPRECATED: Lock type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Lock creator user ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId?: number;

  /**
   * Lock creator username
   */
  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;
}
