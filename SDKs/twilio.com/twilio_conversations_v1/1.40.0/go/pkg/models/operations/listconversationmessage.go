// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var ListConversationMessageServerList = []string{
	"https://conversations.twilio.com",
}

type ListConversationMessageSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type ListConversationMessagePathParams struct {
	// The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for messages.
	ConversationSid string `pathParam:"style=simple,explode=false,name=ConversationSid"`
}

type ListConversationMessageQueryParams struct {
	// The sort order of the returned messages. Can be: `asc` (ascending) or `desc` (descending), with `asc` as the default.
	Order *shared.ConversationMessageEnumOrderTypeEnum `queryParam:"style=form,explode=true,name=Order"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
}

type ListConversationMessageRequest struct {
	PathParams  ListConversationMessagePathParams
	QueryParams ListConversationMessageQueryParams
	Security    ListConversationMessageSecurity
	ServerURL   *string
}

type ListConversationMessageListConversationMessageResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListConversationMessageListConversationMessageResponse - OK
type ListConversationMessageListConversationMessageResponse struct {
	Messages []shared.ConversationsV1ConversationConversationMessage     `json:"messages,omitempty"`
	Meta     *ListConversationMessageListConversationMessageResponseMeta `json:"meta,omitempty"`
}

type ListConversationMessageResponse struct {
	ContentType string
	// OK
	ListConversationMessageResponse *ListConversationMessageListConversationMessageResponse
	StatusCode                      int
	RawResponse                     *http.Response
}
