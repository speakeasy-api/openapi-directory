/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The states of the listed Reserved Instances.
 */
export enum DescribeReservedInstancesListingsResultReservedInstancesListingsInstanceCountsStateEnum {
  Available = "available",
  Sold = "sold",
  Cancelled = "cancelled",
  Pending = "pending",
}

/**
 * Describes a Reserved Instance listing state.
 */
export class DescribeReservedInstancesListingsResultReservedInstancesListingsInstanceCounts extends SpeakeasyBase {
  @SpeakeasyMetadata()
  instanceCount?: number;

  @SpeakeasyMetadata()
  state?: DescribeReservedInstancesListingsResultReservedInstancesListingsInstanceCountsStateEnum;
}

/**
 * The currency for transacting the Reserved Instance resale. At this time, the only supported currency is <code>USD</code>.
 */
export enum DescribeReservedInstancesListingsResultReservedInstancesListingsPriceSchedulesCurrencyCodeEnum {
  Usd = "USD",
}

/**
 * Describes the price for a Reserved Instance.
 */
export class DescribeReservedInstancesListingsResultReservedInstancesListingsPriceSchedules extends SpeakeasyBase {
  @SpeakeasyMetadata()
  active?: boolean;

  @SpeakeasyMetadata()
  currencyCode?: DescribeReservedInstancesListingsResultReservedInstancesListingsPriceSchedulesCurrencyCodeEnum;

  @SpeakeasyMetadata()
  price?: number;

  @SpeakeasyMetadata()
  term?: number;
}

/**
 * The status of the Reserved Instance listing.
 */
export enum DescribeReservedInstancesListingsResultReservedInstancesListingsStatusEnum {
  Active = "active",
  Pending = "pending",
  Cancelled = "cancelled",
  Closed = "closed",
}

/**
 * Describes a tag.
 */
export class DescribeReservedInstancesListingsResultReservedInstancesListingsTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Describes a Reserved Instance listing.
 */
export class DescribeReservedInstancesListingsResultReservedInstancesListings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  clientToken?: string;

  @SpeakeasyMetadata()
  createDate?: Date;

  @SpeakeasyMetadata({
    elemType:
      DescribeReservedInstancesListingsResultReservedInstancesListingsInstanceCounts,
  })
  instanceCounts?: DescribeReservedInstancesListingsResultReservedInstancesListingsInstanceCounts[];

  @SpeakeasyMetadata({
    elemType:
      DescribeReservedInstancesListingsResultReservedInstancesListingsPriceSchedules,
  })
  priceSchedules?: DescribeReservedInstancesListingsResultReservedInstancesListingsPriceSchedules[];

  @SpeakeasyMetadata()
  reservedInstancesId?: string;

  @SpeakeasyMetadata()
  reservedInstancesListingId?: string;

  @SpeakeasyMetadata()
  status?: DescribeReservedInstancesListingsResultReservedInstancesListingsStatusEnum;

  @SpeakeasyMetadata()
  statusMessage?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeReservedInstancesListingsResultReservedInstancesListingsTags,
  })
  tags?: DescribeReservedInstancesListingsResultReservedInstancesListingsTags[];

  @SpeakeasyMetadata()
  updateDate?: Date;
}

/**
 * Contains the output of DescribeReservedInstancesListings.
 */
export class DescribeReservedInstancesListingsResult extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: DescribeReservedInstancesListingsResultReservedInstancesListings,
  })
  reservedInstancesListings?: DescribeReservedInstancesListingsResultReservedInstancesListings[];
}
