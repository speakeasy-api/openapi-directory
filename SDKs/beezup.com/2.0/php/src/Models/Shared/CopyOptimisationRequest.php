<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CopyOptimisationRequest - Copy the optimisation between 2 channels
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CopyOptimisationRequest
{
    /**
     * The channel identifier
     * 
     * @var string $channelIdSource
     */
	#[\JMS\Serializer\Annotation\SerializedName('channelIdSource')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $channelIdSource;
    
    /**
     * The channel identifier
     * 
     * @var string $channelIdTarget
     */
	#[\JMS\Serializer\Annotation\SerializedName('channelIdTarget')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $channelIdTarget;
    
    /**
     * If true the existing optimisation will be kept
     * 
     * @var bool $keepExistingOptimisation
     */
	#[\JMS\Serializer\Annotation\SerializedName('keepExistingOptimisation')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $keepExistingOptimisation;
    
	public function __construct()
	{
		$this->channelIdSource = "";
		$this->channelIdTarget = "";
		$this->keepExistingOptimisation = false;
	}
}
