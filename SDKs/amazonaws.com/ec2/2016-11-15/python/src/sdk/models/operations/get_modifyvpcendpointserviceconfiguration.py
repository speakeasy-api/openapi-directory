"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class GETModifyVpcEndpointServiceConfigurationActionEnum(str, Enum):
    MODIFY_VPC_ENDPOINT_SERVICE_CONFIGURATION = 'ModifyVpcEndpointServiceConfiguration'

class GETModifyVpcEndpointServiceConfigurationVersionEnum(str, Enum):
    TWO_THOUSAND_AND_SIXTEEN_11_15 = '2016-11-15'


@dataclasses.dataclass
class GETModifyVpcEndpointServiceConfigurationRequest:
    
    action: GETModifyVpcEndpointServiceConfigurationActionEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'Action', 'style': 'form', 'explode': True }})  
    service_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'ServiceId', 'style': 'form', 'explode': True }})
    r"""The ID of the service."""  
    version: GETModifyVpcEndpointServiceConfigurationVersionEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'Version', 'style': 'form', 'explode': True }})  
    acceptance_required: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'AcceptanceRequired', 'style': 'form', 'explode': True }})
    r"""Indicates whether requests to create an endpoint to your service must be accepted."""  
    add_gateway_load_balancer_arn: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'AddGatewayLoadBalancerArn', 'style': 'form', 'explode': True }})
    r"""The Amazon Resource Names (ARNs) of Gateway Load Balancers to add to your service configuration."""  
    add_network_load_balancer_arn: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'AddNetworkLoadBalancerArn', 'style': 'form', 'explode': True }})
    r"""The Amazon Resource Names (ARNs) of Network Load Balancers to add to your service configuration."""  
    add_supported_ip_address_type: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'AddSupportedIpAddressType', 'style': 'form', 'explode': True }})
    r"""The IP address types to add to your service configuration."""  
    dry_run: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'DryRun', 'style': 'form', 'explode': True }})
    r"""Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>."""  
    private_dns_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'PrivateDnsName', 'style': 'form', 'explode': True }})
    r"""(Interface endpoint configuration) The private DNS name to assign to the endpoint service."""  
    remove_gateway_load_balancer_arn: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'RemoveGatewayLoadBalancerArn', 'style': 'form', 'explode': True }})
    r"""The Amazon Resource Names (ARNs) of Gateway Load Balancers to remove from your service configuration."""  
    remove_network_load_balancer_arn: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'RemoveNetworkLoadBalancerArn', 'style': 'form', 'explode': True }})
    r"""The Amazon Resource Names (ARNs) of Network Load Balancers to remove from your service configuration."""  
    remove_private_dns_name: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'RemovePrivateDnsName', 'style': 'form', 'explode': True }})
    r"""(Interface endpoint configuration) Removes the private DNS name of the endpoint service."""  
    remove_supported_ip_address_type: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'RemoveSupportedIpAddressType', 'style': 'form', 'explode': True }})
    r"""The IP address types to remove from your service configuration."""  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class GETModifyVpcEndpointServiceConfigurationResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    