// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProjectSettingsClassificationTypeEnum - Gets or sets the classification type of the project.
type ProjectSettingsClassificationTypeEnum string

const (
	ProjectSettingsClassificationTypeEnumMulticlass ProjectSettingsClassificationTypeEnum = "Multiclass"
	ProjectSettingsClassificationTypeEnumMultilabel ProjectSettingsClassificationTypeEnum = "Multilabel"
)

func (e *ProjectSettingsClassificationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Multiclass":
		fallthrough
	case "Multilabel":
		*e = ProjectSettingsClassificationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectSettingsClassificationTypeEnum: %s", s)
	}
}

type ProjectSettingsTargetExportPlatformsEnum string

const (
	ProjectSettingsTargetExportPlatformsEnumCoreMl     ProjectSettingsTargetExportPlatformsEnum = "CoreML"
	ProjectSettingsTargetExportPlatformsEnumTensorFlow ProjectSettingsTargetExportPlatformsEnum = "TensorFlow"
	ProjectSettingsTargetExportPlatformsEnumDockerFile ProjectSettingsTargetExportPlatformsEnum = "DockerFile"
	ProjectSettingsTargetExportPlatformsEnumOnnx       ProjectSettingsTargetExportPlatformsEnum = "ONNX"
	ProjectSettingsTargetExportPlatformsEnumVaidk      ProjectSettingsTargetExportPlatformsEnum = "VAIDK"
)

func (e *ProjectSettingsTargetExportPlatformsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CoreML":
		fallthrough
	case "TensorFlow":
		fallthrough
	case "DockerFile":
		fallthrough
	case "ONNX":
		fallthrough
	case "VAIDK":
		*e = ProjectSettingsTargetExportPlatformsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ProjectSettingsTargetExportPlatformsEnum: %s", s)
	}
}

// ProjectSettings - Represents settings associated with a project.
type ProjectSettings struct {
	// Gets or sets the classification type of the project.
	ClassificationType *ProjectSettingsClassificationTypeEnum `json:"classificationType,omitempty"`
	// Gets or sets the id of the Domain to use with this project.
	DomainID *string `json:"domainId,omitempty"`
	// A list of ExportPlatform that the trained model should be able to support.
	TargetExportPlatforms []ProjectSettingsTargetExportPlatformsEnum `json:"targetExportPlatforms,omitempty"`
}
