"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import item2 as shared_item2
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class List1:
    
    affiliate_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('affiliateId') }})
    r"""Corresponds to the three-digits [affiliate](https://help.vtex.com/en/tutorial/configuring-affiliates--tutorials_187) identification code of the seller responsible for the order."""  
    authorized_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorizedDate') }})
    r"""Authorized order date."""  
    call_center_operator_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callCenterOperatorName') }})
    r"""Call center operator responsible for the order."""  
    client_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clientName') }})
    r"""Order's customer name."""  
    creation_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creationDate') }})
    r"""Order's creation date."""  
    currency_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currencyCode') }})
    r"""Currency code in ISO 4217. For example, `BRL`."""  
    items: list[shared_item2.Item2] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('items') }})
    r"""Information about order's items"""  
    last_message_unread: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastMessageUnread') }})
    r"""Last sent transactional message."""  
    list_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listId') }})
    r"""Related Gift List ID."""  
    list_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listType') }})
    r"""Related Gift list type."""  
    market_place_order_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('marketPlaceOrderId') }})
    r"""Marketplace order ID."""  
    order_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderId') }})
    r"""Order ID is a unique code that identifies an order."""  
    order_is_complete: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderIsComplete') }})
    r"""If it is a completed order (`true`) or not (`false`). For more information, see [Order flow and status](https://help.vtex.com/en/tutorial/order-flow-and-status--tutorials_196)."""  
    origin: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('origin') }})
    r"""Order Origin, if `Marketplace` or `Fulfillment`."""  
    payment_names: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentNames') }})
    r"""Payment system name."""  
    sales_channel: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('salesChannel') }})
    r"""Sales channel (or [trade policy](https://help.vtex.com/tutorial/how-trade-policies-work--6Xef8PZiFm40kg2STrMkMV)) ID related to the order."""  
    sequence: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sequence') }})
    r"""Six-digit string that follows the order ID. For example, in order `1268540501456-01 (501456)`, the sequence is `501456`."""  
    shipping_estimated_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShippingEstimatedDate') }})
    r"""Estimate shipping date."""  
    shipping_estimated_date_max: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShippingEstimatedDateMax') }})
    r"""The most extended shipping estimation possible."""  
    shipping_estimated_date_min: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ShippingEstimatedDateMin') }})
    r"""The least extended shipping estimation possible."""  
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Order [status](https://help.vtex.com/en/tutorial/order-flow-and-status--tutorials_196)."""  
    status_description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statusDescription') }})
    r"""Status description which is displayed on the Admin panel. This field is deprecated and may not return any value."""  
    total_items: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalItems') }})
    r"""Order's total amount of items."""  
    total_value: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalValue') }})
    r"""Total value amount."""  
    workflow_in_error_state: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workflowInErrorState') }})
    r"""If there is a work flow error (`true`) or not (`false`)."""  
    workflow_in_retry: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workflowInRetry') }})
    r"""If the order is in a work flow retry (`true`) or not (`false`)."""  
    