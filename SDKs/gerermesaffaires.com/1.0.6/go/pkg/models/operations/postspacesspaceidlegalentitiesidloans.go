// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PostSpacesSpaceIDLegalEntitiesIDLoansSecurity struct {
	GmaAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnum string

const (
	PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnumDebtSpreading      PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnum = "debt spreading"
	PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnumBankLoan           PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnum = "bank loan"
	PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnumCurrentAccount     PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnum = "current account"
	PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnumOverdraftAgreement PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnum = "overdraft agreement"
	PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnumLeasing            PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnum = "leasing"
	PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnumObligation         PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnum = "obligation"
)

func (e PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnum) ToPointer() *PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnum {
	return &e
}

func (e *PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "debt spreading":
		fallthrough
	case "bank loan":
		fallthrough
	case "current account":
		fallthrough
	case "overdraft agreement":
		fallthrough
	case "leasing":
		fallthrough
	case "obligation":
		*e = PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnum: %v", v)
	}
}

type PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyLevelEnum string

const (
	PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyLevelEnumConfidential PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyLevelEnum = "confidential"
	PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyLevelEnumRegular      PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyLevelEnum = "regular"
	PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyLevelEnumPublic       PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyLevelEnum = "public"
)

func (e PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyLevelEnum) ToPointer() *PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyLevelEnum {
	return &e
}

func (e *PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyLevelEnum: %v", v)
	}
}

// PostSpacesSpaceIDLegalEntitiesIDLoansRequestBody - Loan to add (except name, class and archivaldate)
type PostSpacesSpaceIDLegalEntitiesIDLoansRequestBody struct {
	About        *string                                                       `json:"About,omitempty"`
	Amount       *float32                                                      `json:"Amount,omitempty"`
	Category     *PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyCategoryEnum `json:"Category,omitempty"`
	Comment      *string                                                       `json:"Comment,omitempty"`
	Designation  *string                                                       `json:"Designation,omitempty"`
	DueAmount    *float32                                                      `json:"DueAmount,omitempty"`
	End          *string                                                       `json:"End,omitempty"`
	Home         *bool                                                         `json:"Home,omitempty"`
	Keywords     []string                                                      `json:"Keywords,omitempty"`
	Level        *PostSpacesSpaceIDLegalEntitiesIDLoansRequestBodyLevelEnum    `json:"Level,omitempty"`
	MonthsNumber *float64                                                      `json:"MonthsNumber,omitempty"`
	Rate         *float32                                                      `json:"Rate,omitempty"`
	Start        *string                                                       `json:"Start,omitempty"`
	TotalCost    *float32                                                      `json:"TotalCost,omitempty"`
}

type PostSpacesSpaceIDLegalEntitiesIDLoansRequest struct {
	// Loan to add (except name, class and archivaldate)
	RequestBody PostSpacesSpaceIDLegalEntitiesIDLoansRequestBody `request:"mediaType=application/json"`
	// Id of the loan or memberId
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

// PostSpacesSpaceIDLegalEntitiesIDLoans201ApplicationJSON - Id of folder created
type PostSpacesSpaceIDLegalEntitiesIDLoans201ApplicationJSON struct {
	ID *string `json:"Id,omitempty"`
}

type PostSpacesSpaceIDLegalEntitiesIDLoansResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Id of folder created
	PostSpacesSpaceIDLegalEntitiesIDLoans201ApplicationJSONObject *PostSpacesSpaceIDLegalEntitiesIDLoans201ApplicationJSON
}
