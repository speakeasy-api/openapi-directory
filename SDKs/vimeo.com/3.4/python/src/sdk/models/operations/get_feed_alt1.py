"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import activity_3_1 as shared_activity_3_1
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetFeedAlt1Security:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class GetFeedAlt1TypeEnum(str, Enum):
    r"""The feed type."""
    APPEARS = 'appears'
    CATEGORY_FEATURED = 'category_featured'
    CHANNEL = 'channel'
    FACEBOOK_FEED = 'facebook_feed'
    FOLLOWING = 'following'
    GROUP = 'group'
    LIKES = 'likes'
    ONDEMAND_PUBLISH = 'ondemand_publish'
    SHARE = 'share'
    TAGGED_WITH = 'tagged_with'
    TWITTER_TIMELINE = 'twitter_timeline'
    UPLOADS = 'uploads'


@dataclasses.dataclass
class GetFeedAlt1Request:
    
    offset: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Necessary for proper pagination. You shouldn't provide this value yourself, and instead use the pagination links in the feed response. Please see our [pagination documentation](https://developer.vimeo.com/api/common-formats#using-the-pagination-parameter) for more information."""  
    page: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""The page number of the results to show."""  
    per_page: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': True }})
    r"""The number of items to show on each page of results, up to a maximum of 100."""  
    type: Optional[GetFeedAlt1TypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'type', 'style': 'form', 'explode': True }})
    r"""The feed type."""  
    

@dataclasses.dataclass
class GetFeedAlt1Response:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    activity_3_1s: Optional[list[shared_activity_3_1.Activity31]] = dataclasses.field(default=None)
    r"""The videos were returned."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    