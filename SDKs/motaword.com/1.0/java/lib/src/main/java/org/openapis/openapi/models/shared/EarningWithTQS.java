/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class EarningWithTQS {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Float amount;

    public EarningWithTQS withAmount(Float amount) {
        this.amount = amount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currency")
    public String currency;

    public EarningWithTQS withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("due_date")
    public OffsetDateTime dueDate;

    public EarningWithTQS withDueDate(OffsetDateTime dueDate) {
        this.dueDate = dueDate;
        return this;
    }
    
    /**
     * Is this score above or below the average among other vendors in the same project?
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_above_average")
    public Boolean isAboveAverage;

    public EarningWithTQS withIsAboveAverage(Boolean isAboveAverage) {
        this.isAboveAverage = isAboveAverage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("project_id")
    public Long projectId;

    public EarningWithTQS withProjectId(Long projectId) {
        this.projectId = projectId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("score")
    public Float score;

    public EarningWithTQS withScore(Float score) {
        this.score = score;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public EarningWithTQSStatusEnum status;

    public EarningWithTQS withStatus(EarningWithTQSStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The number of translated strings by this translator which was edited by a proofreader.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("strings_edited")
    public Long stringsEdited;

    public EarningWithTQS withStringsEdited(Long stringsEdited) {
        this.stringsEdited = stringsEdited;
        return this;
    }
    
    /**
     * The number of translated strings by this translator.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("strings_translated")
    public Long stringsTranslated;

    public EarningWithTQS withStringsTranslated(Long stringsTranslated) {
        this.stringsTranslated = stringsTranslated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("words")
    public Long words;

    public EarningWithTQS withWords(Long words) {
        this.words = words;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("words_approved")
    public Long wordsApproved;

    public EarningWithTQS withWordsApproved(Long wordsApproved) {
        this.wordsApproved = wordsApproved;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("words_translated")
    public Long wordsTranslated;

    public EarningWithTQS withWordsTranslated(Long wordsTranslated) {
        this.wordsTranslated = wordsTranslated;
        return this;
    }
    
    public EarningWithTQS(){}
}
