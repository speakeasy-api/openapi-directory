"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class UniversalAdIDRegistryEnum(str, Enum):
    r"""The registry provides unique creative identifiers."""
    UNIVERSAL_AD_REGISTRY_UNSPECIFIED = 'UNIVERSAL_AD_REGISTRY_UNSPECIFIED'
    UNIVERSAL_AD_REGISTRY_OTHER = 'UNIVERSAL_AD_REGISTRY_OTHER'
    UNIVERSAL_AD_REGISTRY_AD_ID = 'UNIVERSAL_AD_REGISTRY_AD_ID'
    UNIVERSAL_AD_REGISTRY_CLEARCAST = 'UNIVERSAL_AD_REGISTRY_CLEARCAST'
    UNIVERSAL_AD_REGISTRY_DV360 = 'UNIVERSAL_AD_REGISTRY_DV360'
    UNIVERSAL_AD_REGISTRY_CM = 'UNIVERSAL_AD_REGISTRY_CM'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UniversalAdID:
    r"""A creative identifier provided by a registry that is unique across all platforms. This is part of the VAST 4.0 standard."""
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The unique creative identifier."""  
    registry: Optional[UniversalAdIDRegistryEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('registry'), 'exclude': lambda f: f is None }})
    r"""The registry provides unique creative identifiers."""  
    