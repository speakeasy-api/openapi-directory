/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ProxyGetRatePlan - Container for custom fields of a Rate Plan object.
 * 
 */
public class ProxyGetRatePlan {
    /**
     *  The ID of the amendment associated with the rate plan. This field only applies to amendment rate plans.
     * **Character limit**: 32 **Values**: a valid amendment ID 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AmendmentId")
    public String amendmentId;
    public ProxyGetRatePlan withAmendmentId(String amendmentId) {
        this.amendmentId = amendmentId;
        return this;
    }
    
    /**
     * The type of amendment associated with the rate plan. This field only applies to amendment rate plans. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AmendmentType")
    public String amendmentType;
    public ProxyGetRatePlan withAmendmentType(String amendmentType) {
        this.amendmentType = amendmentType;
        return this;
    }
    
    /**
     * The ID of the Zuora user who created the RatePlan object. **Character limit**: 32 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreatedById")
    public String createdById;
    public ProxyGetRatePlan withCreatedById(String createdById) {
        this.createdById = createdById;
        return this;
    }
    
    /**
     * The date when the `RatePlan` object was last updated. **Character limit**: 29 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedDate")
    public OffsetDateTime createdDate;
    public ProxyGetRatePlan withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     * Object identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;
    public ProxyGetRatePlan withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The name of the rate plan.
     * 
     * **Values**: inherited from `ProductRatePlan.Name` 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public ProxyGetRatePlan withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The ID of the subscription that the rate plan belongs to. **Character limit**: 32 **Values**: a valid subscription ID 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubscriptionId")
    public String subscriptionId;
    public ProxyGetRatePlan withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }
    
    /**
     *  The ID of the user who last updated the rate plan.
     * **Character limit**: 32 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UpdatedById")
    public String updatedById;
    public ProxyGetRatePlan withUpdatedById(String updatedById) {
        this.updatedById = updatedById;
        return this;
    }
    
    /**
     *  The date when the rate plan was last updated.
     * **Character limit**: 29 **Values**: automatically generated 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("UpdatedDate")
    public OffsetDateTime updatedDate;
    public ProxyGetRatePlan withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
}
