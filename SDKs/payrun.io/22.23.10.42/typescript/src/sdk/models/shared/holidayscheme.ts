/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The holiday schemes' accrual pay codes
 */
export class HolidaySchemeHolidaySchemeAccrualPayCodes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "PayCode" })
  payCode?: string[];
}

export class HolidaySchemeHolidayScheme extends SpeakeasyBase {
  /**
   * The holiday schemes' accrual pay codes
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccrualPayCodes" })
  @Type(() => HolidaySchemeHolidaySchemeAccrualPayCodes)
  accrualPayCodes?: HolidaySchemeHolidaySchemeAccrualPayCodes;

  /**
   * The holiday schemes' allow exceed annual entitlement
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AllowExceedAnnualEntitlement" })
  allowExceedAnnualEntitlement?: boolean;

  /**
   * The holiday schemes' allow negative balance
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AllowNegativeBalance" })
  allowNegativeBalance?: boolean;

  /**
   * The holiday schemes' annual entitlement weeks
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AnnualEntitlementWeeks" })
  annualEntitlementWeeks?: number;

  /**
   * The holiday schemes' bank holiday inclusive
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BankHolidayInclusive" })
  bankHolidayInclusive?: boolean;

  /**
   * The holiday schemes' code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Code" })
  code?: string;

  /**
   * The holiday schemes' effective date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EffectiveDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  effectiveDate?: Date;

  /**
   * The holiday schemes' max carry over days
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MaxCarryOverDays" })
  maxCarryOverDays?: number;

  /**
   * The holiday schemes' next revision date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "NextRevisionDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  nextRevisionDate?: Date;

  /**
   * The holiday schemes' offset payment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "OffsetPayment" })
  offsetPayment?: boolean;

  /**
   * The holiday schemes' revision
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Revision" })
  revision?: number;

  /**
   * The holiday schemes' scheme ceased date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SchemeCeasedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  schemeCeasedDate?: Date;

  /**
   * The holiday schemes' scheme key
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SchemeKey" })
  schemeKey?: string;

  /**
   * The holiday schemes' scheme name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SchemeName" })
  schemeName?: string;

  /**
   * The holiday schemes' year start day
   */
  @SpeakeasyMetadata()
  @Expose({ name: "YearStartDay" })
  yearStartDay?: number;

  /**
   * The holiday schemes' year start month
   */
  @SpeakeasyMetadata()
  @Expose({ name: "YearStartMonth" })
  yearStartMonth?: number;
}

/**
 * The holiday scheme object.
 */
export class HolidayScheme extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "HolidayScheme" })
  @Type(() => HolidaySchemeHolidayScheme)
  holidayScheme?: HolidaySchemeHolidayScheme;
}
