/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConferenceRequestStatus } from "./conferencerequeststatus";
import { ConferenceSolutionKey } from "./conferencesolutionkey";
import { Expose, Type } from "class-transformer";

export class CreateConferenceRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "conferenceSolutionKey" })
  @Type(() => ConferenceSolutionKey)
  conferenceSolutionKey?: ConferenceSolutionKey;

  /**
   * The client-generated unique ID for this request.
   *
   * @remarks
   * Clients should regenerate this ID for every new request. If an ID provided is the same as for the previous request, the request is ignored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => ConferenceRequestStatus)
  status?: ConferenceRequestStatus;
}
