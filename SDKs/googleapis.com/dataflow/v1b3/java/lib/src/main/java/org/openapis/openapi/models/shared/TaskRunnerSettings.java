/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TaskRunnerSettings - Taskrunner configuration settings.
 */
public class TaskRunnerSettings {
    /**
     * Whether to also send taskrunner log info to stderr.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alsologtostderr")
    public Boolean alsologtostderr;

    public TaskRunnerSettings withAlsologtostderr(Boolean alsologtostderr) {
        this.alsologtostderr = alsologtostderr;
        return this;
    }
    
    /**
     * The location on the worker for task-specific subdirectories.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baseTaskDir")
    public String baseTaskDir;

    public TaskRunnerSettings withBaseTaskDir(String baseTaskDir) {
        this.baseTaskDir = baseTaskDir;
        return this;
    }
    
    /**
     * The base URL for the taskrunner to use when accessing Google Cloud APIs. When workers access Google Cloud APIs, they logically do so via relative URLs. If this field is specified, it supplies the base URL to use for resolving these relative URLs. The normative algorithm used is defined by RFC 1808, "Relative Uniform Resource Locators". If not specified, the default value is "http://www.googleapis.com/"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baseUrl")
    public String baseUrl;

    public TaskRunnerSettings withBaseUrl(String baseUrl) {
        this.baseUrl = baseUrl;
        return this;
    }
    
    /**
     * The file to store preprocessing commands in.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("commandlinesFileName")
    public String commandlinesFileName;

    public TaskRunnerSettings withCommandlinesFileName(String commandlinesFileName) {
        this.commandlinesFileName = commandlinesFileName;
        return this;
    }
    
    /**
     * Whether to continue taskrunner if an exception is hit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("continueOnException")
    public Boolean continueOnException;

    public TaskRunnerSettings withContinueOnException(Boolean continueOnException) {
        this.continueOnException = continueOnException;
        return this;
    }
    
    /**
     * The API version of endpoint, e.g. "v1b3"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataflowApiVersion")
    public String dataflowApiVersion;

    public TaskRunnerSettings withDataflowApiVersion(String dataflowApiVersion) {
        this.dataflowApiVersion = dataflowApiVersion;
        return this;
    }
    
    /**
     * The command to launch the worker harness.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("harnessCommand")
    public String harnessCommand;

    public TaskRunnerSettings withHarnessCommand(String harnessCommand) {
        this.harnessCommand = harnessCommand;
        return this;
    }
    
    /**
     * The suggested backend language.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("languageHint")
    public String languageHint;

    public TaskRunnerSettings withLanguageHint(String languageHint) {
        this.languageHint = languageHint;
        return this;
    }
    
    /**
     * The directory on the VM to store logs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logDir")
    public String logDir;

    public TaskRunnerSettings withLogDir(String logDir) {
        this.logDir = logDir;
        return this;
    }
    
    /**
     * Whether to send taskrunner log info to Google Compute Engine VM serial console.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logToSerialconsole")
    public Boolean logToSerialconsole;

    public TaskRunnerSettings withLogToSerialconsole(Boolean logToSerialconsole) {
        this.logToSerialconsole = logToSerialconsole;
        return this;
    }
    
    /**
     * Indicates where to put logs. If this is not specified, the logs will not be uploaded. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logUploadLocation")
    public String logUploadLocation;

    public TaskRunnerSettings withLogUploadLocation(String logUploadLocation) {
        this.logUploadLocation = logUploadLocation;
        return this;
    }
    
    /**
     * The OAuth2 scopes to be requested by the taskrunner in order to access the Cloud Dataflow API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oauthScopes")
    public String[] oauthScopes;

    public TaskRunnerSettings withOauthScopes(String[] oauthScopes) {
        this.oauthScopes = oauthScopes;
        return this;
    }
    
    /**
     * Provides data to pass through to the worker harness.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parallelWorkerSettings")
    public WorkerSettings parallelWorkerSettings;

    public TaskRunnerSettings withParallelWorkerSettings(WorkerSettings parallelWorkerSettings) {
        this.parallelWorkerSettings = parallelWorkerSettings;
        return this;
    }
    
    /**
     * The streaming worker main class name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("streamingWorkerMainClass")
    public String streamingWorkerMainClass;

    public TaskRunnerSettings withStreamingWorkerMainClass(String streamingWorkerMainClass) {
        this.streamingWorkerMainClass = streamingWorkerMainClass;
        return this;
    }
    
    /**
     * The UNIX group ID on the worker VM to use for tasks launched by taskrunner; e.g. "wheel".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskGroup")
    public String taskGroup;

    public TaskRunnerSettings withTaskGroup(String taskGroup) {
        this.taskGroup = taskGroup;
        return this;
    }
    
    /**
     * The UNIX user ID on the worker VM to use for tasks launched by taskrunner; e.g. "root".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taskUser")
    public String taskUser;

    public TaskRunnerSettings withTaskUser(String taskUser) {
        this.taskUser = taskUser;
        return this;
    }
    
    /**
     * The prefix of the resources the taskrunner should use for temporary storage. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tempStoragePrefix")
    public String tempStoragePrefix;

    public TaskRunnerSettings withTempStoragePrefix(String tempStoragePrefix) {
        this.tempStoragePrefix = tempStoragePrefix;
        return this;
    }
    
    /**
     * The ID string of the VM.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vmId")
    public String vmId;

    public TaskRunnerSettings withVmId(String vmId) {
        this.vmId = vmId;
        return this;
    }
    
    /**
     * The file to store the workflow in.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workflowFileName")
    public String workflowFileName;

    public TaskRunnerSettings withWorkflowFileName(String workflowFileName) {
        this.workflowFileName = workflowFileName;
        return this;
    }
    
    public TaskRunnerSettings(){}
}
