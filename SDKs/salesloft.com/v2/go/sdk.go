// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package sdk

import (
	"net/http"
	"openapi/pkg/utils"
	"time"
)

// ServerList contains the list of servers available to the SDK
var ServerList = []string{
	"https://api.salesloft.com",
}

// HTTPClient provides an interface for suplying the SDK with a custom HTTP client
type HTTPClient interface {
	Do(req *http.Request) (*http.Response, error)
}

// String provides a helper function to return a pointer to a string
func String(s string) *string { return &s }

// Bool provides a helper function to return a pointer to a bool
func Bool(b bool) *bool { return &b }

// Int provides a helper function to return a pointer to an int
func Int(i int) *int { return &i }

// Int64 provides a helper function to return a pointer to an int64
func Int64(i int64) *int64 { return &i }

// Float32 provides a helper function to return a pointer to a float32
func Float32(f float32) *float32 { return &f }

// Float64 provides a helper function to return a pointer to a float64
func Float64(f float64) *float64 { return &f }

// SDK - SalesLoft helps transform sales teams into modern sales organizations  - converting more target accounts into customer accounts
type SDK struct {
	// AccountStages - Account Stage Management
	AccountStages *accountStages
	// AccountTiers - Account Tier Information
	AccountTiers *accountTiers
	// AccountUpsert - Account Upsert
	AccountUpsert *accountUpsert
	// Accounts - Account Management
	Accounts *accounts
	// ActionDetailsCallInstructions - Actions - Call Instructions
	ActionDetailsCallInstructions *actionDetailsCallInstructions
	// Actions - Actions
	Actions *actions
	// Activities - Activities
	Activities *activities
	// ActivityHistories - Activity Histories
	ActivityHistories *activityHistories
	// BulkJobs - Bulk Jobs
	BulkJobs *bulkJobs
	// BulkJobsJobData - Bulk Jobs - Job Data
	BulkJobsJobData *bulkJobsJobData
	// BulkJobsResults - Bulk Jobs - Results
	BulkJobsResults *bulkJobsResults
	// CRMActivities - CRM Activity Management
	CRMActivities *crmActivities
	// CRMActivityFields - CRM Activity Fields
	CRMActivityFields *crmActivityFields
	// CadenceExports - Cadence Exports
	CadenceExports *cadenceExports
	// CadenceImports - Cadence Importing
	CadenceImports *cadenceImports
	// CadenceMemberships - Cadence Membership
	CadenceMemberships *cadenceMemberships
	// Cadences - Cadence Management
	Cadences *cadences
	// CalendarEvents - Calendar Events
	CalendarEvents *calendarEvents
	// CallDataRecords - Call Data Record Management
	CallDataRecords *callDataRecords
	// CallDispositions - Call Dispositions
	CallDispositions *callDispositions
	// CallSentiments - Call Sentiments
	CallSentiments *callSentiments
	// CallerIDs - Caller ID Information
	CallerIDs *callerIDs
	// Calls - Call Management
	Calls *calls
	// ConversationsCalls - Conversations Calls
	ConversationsCalls *conversationsCalls
	// CrmUsers - Crm Users
	CrmUsers *crmUsers
	// CustomFields - Custom Field Management
	CustomFields *customFields
	// EmailTemplateAttachments - Email Template Attachments
	EmailTemplateAttachments *emailTemplateAttachments
	// EmailTemplates - Email Templates Management
	EmailTemplates *emailTemplates
	// Emails - Email Management
	Emails *emails
	// ExternalEmails - External Emails
	ExternalEmails *externalEmails
	// Groups - Group Management
	Groups *groups
	// Imports - Import Management
	Imports *imports
	// LiveFeedItems - Live Feed Items
	LiveFeedItems *liveFeedItems
	// LiveWebsiteTrackingParameters - Live Website Tracking Parameters
	LiveWebsiteTrackingParameters *liveWebsiteTrackingParameters
	// Me - User Information
	Me *me
	// MeetingSettings - Meetings Settings
	MeetingSettings *meetingSettings
	// Meetings - Meetings
	Meetings *meetings
	// MeetingsSettingsSearches - Meetings Settings - Searches
	MeetingsSettingsSearches *meetingsSettingsSearches
	// MimeEmailPayloads - MIME content for email
	MimeEmailPayloads *mimeEmailPayloads
	// Notes - Note Management
	Notes *notes
	// OngoingActions - Ongoing Actions
	OngoingActions *ongoingActions
	// PendingEmails - Pending Emails
	PendingEmails *pendingEmails
	// People - Person Management
	People *people
	// PersonStages - Person Stage Management
	PersonStages *personStages
	// PersonUpsert - Person Upsert
	PersonUpsert *personUpsert
	// PhoneNumberAssignments - Phone Number Assignments
	PhoneNumberAssignments *phoneNumberAssignments
	// RecordingSettings - Recording Settings Information
	RecordingSettings *recordingSettings
	// Roles - Role Information
	Roles *roles
	// SavedListViews - Saved List Views
	SavedListViews *savedListViews
	// Steps - Steps
	Steps *steps
	// Successes - Success Management
	Successes *successes
	// Tags - Tags
	Tags *tags
	// Tasks - Tasks
	Tasks *tasks
	// Team - Team Information
	Team *team
	// TeamTemplateAttachments - Team Template Attachments
	TeamTemplateAttachments *teamTemplateAttachments
	// TeamTemplates - Team Template Management
	TeamTemplates *teamTemplates
	// Users - User Management
	Users *users
	// WebhookSubscriptions - Webhook Subscriptions
	WebhookSubscriptions *webhookSubscriptions

	// Non-idiomatic field names below are to namespace fields from the fields names above to avoid name conflicts
	_defaultClient  HTTPClient
	_securityClient HTTPClient

	_serverURL  string
	_language   string
	_sdkVersion string
	_genVersion string
}

type SDKOption func(*SDK)

// WithServerURL allows the overriding of the default server URL
func WithServerURL(serverURL string) SDKOption {
	return func(sdk *SDK) {
		sdk._serverURL = serverURL
	}
}

// WithTemplatedServerURL allows the overriding of the default server URL with a templated URL populated with the provided parameters
func WithTemplatedServerURL(serverURL string, params map[string]string) SDKOption {
	return func(sdk *SDK) {
		if params != nil {
			serverURL = utils.ReplaceParameters(serverURL, params)
		}

		sdk._serverURL = serverURL
	}
}

// WithClient allows the overriding of the default HTTP client used by the SDK
func WithClient(client HTTPClient) SDKOption {
	return func(sdk *SDK) {
		sdk._defaultClient = client
	}
}

// New creates a new instance of the SDK with the provided options
func New(opts ...SDKOption) *SDK {
	sdk := &SDK{
		_language:   "go",
		_sdkVersion: "0.0.1",
		_genVersion: "internal",
	}
	for _, opt := range opts {
		opt(sdk)
	}

	// Use WithClient to override the default client if you would like to customize the timeout
	if sdk._defaultClient == nil {
		sdk._defaultClient = &http.Client{Timeout: 60 * time.Second}
	}
	if sdk._securityClient == nil {
		sdk._securityClient = sdk._defaultClient
	}

	if sdk._serverURL == "" {
		sdk._serverURL = ServerList[0]
	}

	sdk.AccountStages = newAccountStages(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.AccountTiers = newAccountTiers(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.AccountUpsert = newAccountUpsert(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Accounts = newAccounts(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.ActionDetailsCallInstructions = newActionDetailsCallInstructions(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Actions = newActions(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Activities = newActivities(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.ActivityHistories = newActivityHistories(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.BulkJobs = newBulkJobs(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.BulkJobsJobData = newBulkJobsJobData(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.BulkJobsResults = newBulkJobsResults(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.CRMActivities = newCRMActivities(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.CRMActivityFields = newCRMActivityFields(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.CadenceExports = newCadenceExports(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.CadenceImports = newCadenceImports(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.CadenceMemberships = newCadenceMemberships(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Cadences = newCadences(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.CalendarEvents = newCalendarEvents(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.CallDataRecords = newCallDataRecords(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.CallDispositions = newCallDispositions(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.CallSentiments = newCallSentiments(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.CallerIDs = newCallerIDs(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Calls = newCalls(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.ConversationsCalls = newConversationsCalls(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.CrmUsers = newCrmUsers(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.CustomFields = newCustomFields(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.EmailTemplateAttachments = newEmailTemplateAttachments(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.EmailTemplates = newEmailTemplates(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Emails = newEmails(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.ExternalEmails = newExternalEmails(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Groups = newGroups(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Imports = newImports(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.LiveFeedItems = newLiveFeedItems(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.LiveWebsiteTrackingParameters = newLiveWebsiteTrackingParameters(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Me = newMe(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.MeetingSettings = newMeetingSettings(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Meetings = newMeetings(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.MeetingsSettingsSearches = newMeetingsSettingsSearches(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.MimeEmailPayloads = newMimeEmailPayloads(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Notes = newNotes(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.OngoingActions = newOngoingActions(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.PendingEmails = newPendingEmails(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.People = newPeople(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.PersonStages = newPersonStages(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.PersonUpsert = newPersonUpsert(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.PhoneNumberAssignments = newPhoneNumberAssignments(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.RecordingSettings = newRecordingSettings(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Roles = newRoles(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.SavedListViews = newSavedListViews(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Steps = newSteps(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Successes = newSuccesses(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Tags = newTags(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Tasks = newTasks(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Team = newTeam(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.TeamTemplateAttachments = newTeamTemplateAttachments(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.TeamTemplates = newTeamTemplates(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.Users = newUsers(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	sdk.WebhookSubscriptions = newWebhookSubscriptions(
		sdk._defaultClient,
		sdk._securityClient,
		sdk._serverURL,
		sdk._language,
		sdk._sdkVersion,
		sdk._genVersion,
	)

	return sdk
}
