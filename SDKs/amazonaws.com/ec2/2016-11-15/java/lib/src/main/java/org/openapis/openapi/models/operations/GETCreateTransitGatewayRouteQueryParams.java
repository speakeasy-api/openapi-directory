/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETCreateTransitGatewayRouteQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETCreateTransitGatewayRouteActionEnum action;
    public GETCreateTransitGatewayRouteQueryParams withAction(GETCreateTransitGatewayRouteActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * Indicates whether to drop traffic that matches this route.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Blackhole")
    public Boolean blackhole;
    public GETCreateTransitGatewayRouteQueryParams withBlackhole(Boolean blackhole) {
        this.blackhole = blackhole;
        return this;
    }
    
    /**
     * The CIDR range used for destination matches. Routing decisions are based on the most specific match.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DestinationCidrBlock")
    public String destinationCidrBlock;
    public GETCreateTransitGatewayRouteQueryParams withDestinationCidrBlock(String destinationCidrBlock) {
        this.destinationCidrBlock = destinationCidrBlock;
        return this;
    }
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is &lt;code&gt;DryRunOperation&lt;/code&gt;. Otherwise, it is &lt;code&gt;UnauthorizedOperation&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DryRun")
    public Boolean dryRun;
    public GETCreateTransitGatewayRouteQueryParams withDryRun(Boolean dryRun) {
        this.dryRun = dryRun;
        return this;
    }
    
    /**
     * The ID of the attachment.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TransitGatewayAttachmentId")
    public String transitGatewayAttachmentId;
    public GETCreateTransitGatewayRouteQueryParams withTransitGatewayAttachmentId(String transitGatewayAttachmentId) {
        this.transitGatewayAttachmentId = transitGatewayAttachmentId;
        return this;
    }
    
    /**
     * The ID of the transit gateway route table.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TransitGatewayRouteTableId")
    public String transitGatewayRouteTableId;
    public GETCreateTransitGatewayRouteQueryParams withTransitGatewayRouteTableId(String transitGatewayRouteTableId) {
        this.transitGatewayRouteTableId = transitGatewayRouteTableId;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETCreateTransitGatewayRouteVersionEnum version;
    public GETCreateTransitGatewayRouteQueryParams withVersion(GETCreateTransitGatewayRouteVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
