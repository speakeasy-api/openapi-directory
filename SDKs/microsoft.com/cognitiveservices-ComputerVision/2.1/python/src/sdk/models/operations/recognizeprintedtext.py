"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import computervisionerror as shared_computervisionerror
from ..shared import imageurl as shared_imageurl
from ..shared import ocrlanguage_enum as shared_ocrlanguage_enum
from ..shared import ocrresult as shared_ocrresult
from typing import Optional


@dataclasses.dataclass
class RecognizePrintedTextRequest:
    
    detect_orientation: bool = dataclasses.field(metadata={'query_param': { 'field_name': 'detectOrientation', 'style': 'form', 'explode': True }})
    r"""Whether detect the text orientation in the image. With detectOrientation=true the OCR service tries to detect the image orientation and correct it before further processing (e.g. if it's upside-down)."""  
    image_url: shared_imageurl.ImageURL = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""A JSON document with a URL pointing to the image that is to be analyzed."""  
    language: Optional[shared_ocrlanguage_enum.OcrLanguageEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'language', 'style': 'form', 'explode': True }})
    r"""The BCP-47 language code of the text to be detected in the image. The default value is 'unk'."""  
    

@dataclasses.dataclass
class RecognizePrintedTextResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    computer_vision_error: Optional[shared_computervisionerror.ComputerVisionError] = dataclasses.field(default=None)
    r"""Error response."""  
    ocr_result: Optional[shared_ocrresult.OcrResult] = dataclasses.field(default=None)
    r"""The OCR results in the hierarchy of region/line/word. The results include text, bounding box for regions, lines and words. The angle, in radians, of the detected text with respect to the closest horizontal or vertical direction. After rotating the input image clockwise by this angle, the recognized text lines become horizontal or vertical. In combination with the orientation property it can be used to overlay recognition results correctly on the original image, by rotating either the original image or recognition results by a suitable angle around the center of the original image. If the angle cannot be confidently detected, this property is not present. If the image contains text at different angles, only part of the text will be recognized correctly."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    