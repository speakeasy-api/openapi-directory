"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import associationresults as shared_associationresults
from typing import Optional


@dataclasses.dataclass
class GetEvidenceGraphTableRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""association id, e.g. 68e686f6-d05b-46b8-ab1f-1da2fff97ada"""  
    is_publication: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'is_publication', 'style': 'form', 'explode': True }})
    r"""If true, considers dc:source as edge"""  
    

@dataclasses.dataclass
class GetEvidenceGraphTableResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    association_results: Optional[list[shared_associationresults.AssociationResults]] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    