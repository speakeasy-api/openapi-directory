// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ReplaceTransitGatewayRouteResultRouteStateEnum - The state of the route.
type ReplaceTransitGatewayRouteResultRouteStateEnum string

const (
	ReplaceTransitGatewayRouteResultRouteStateEnumPending   ReplaceTransitGatewayRouteResultRouteStateEnum = "pending"
	ReplaceTransitGatewayRouteResultRouteStateEnumActive    ReplaceTransitGatewayRouteResultRouteStateEnum = "active"
	ReplaceTransitGatewayRouteResultRouteStateEnumBlackhole ReplaceTransitGatewayRouteResultRouteStateEnum = "blackhole"
	ReplaceTransitGatewayRouteResultRouteStateEnumDeleting  ReplaceTransitGatewayRouteResultRouteStateEnum = "deleting"
	ReplaceTransitGatewayRouteResultRouteStateEnumDeleted   ReplaceTransitGatewayRouteResultRouteStateEnum = "deleted"
)

func (e *ReplaceTransitGatewayRouteResultRouteStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "active":
		fallthrough
	case "blackhole":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = ReplaceTransitGatewayRouteResultRouteStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReplaceTransitGatewayRouteResultRouteStateEnum: %s", s)
	}
}

// ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum - The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
type ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum string

const (
	ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnumVpc                  ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum = "vpc"
	ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnumVpn                  ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum = "vpn"
	ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnumDirectConnectGateway ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum = "direct-connect-gateway"
	ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnumConnect              ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum = "connect"
	ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnumPeering              ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum = "peering"
	ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnumTgwPeering           ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum = "tgw-peering"
)

func (e *ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "vpc":
		fallthrough
	case "vpn":
		fallthrough
	case "direct-connect-gateway":
		fallthrough
	case "connect":
		fallthrough
	case "peering":
		fallthrough
	case "tgw-peering":
		*e = ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum: %s", s)
	}
}

// ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachments - Describes a route attachment.
type ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachments struct {
	ResourceID                 *string
	ResourceType               *ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachmentsResourceTypeEnum
	TransitGatewayAttachmentID *string
}

// ReplaceTransitGatewayRouteResultRouteTypeEnum - The route type.
type ReplaceTransitGatewayRouteResultRouteTypeEnum string

const (
	ReplaceTransitGatewayRouteResultRouteTypeEnumStatic     ReplaceTransitGatewayRouteResultRouteTypeEnum = "static"
	ReplaceTransitGatewayRouteResultRouteTypeEnumPropagated ReplaceTransitGatewayRouteResultRouteTypeEnum = "propagated"
)

func (e *ReplaceTransitGatewayRouteResultRouteTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "static":
		fallthrough
	case "propagated":
		*e = ReplaceTransitGatewayRouteResultRouteTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReplaceTransitGatewayRouteResultRouteTypeEnum: %s", s)
	}
}

// ReplaceTransitGatewayRouteResultRoute - Information about the modified route.
type ReplaceTransitGatewayRouteResultRoute struct {
	DestinationCidrBlock                   *string
	PrefixListID                           *string
	State                                  *ReplaceTransitGatewayRouteResultRouteStateEnum
	TransitGatewayAttachments              []ReplaceTransitGatewayRouteResultRouteTransitGatewayAttachments
	TransitGatewayRouteTableAnnouncementID *string
	Type                                   *ReplaceTransitGatewayRouteResultRouteTypeEnum
}

// ReplaceTransitGatewayRouteResult - Success
type ReplaceTransitGatewayRouteResult struct {
	Route *ReplaceTransitGatewayRouteResultRoute
}
