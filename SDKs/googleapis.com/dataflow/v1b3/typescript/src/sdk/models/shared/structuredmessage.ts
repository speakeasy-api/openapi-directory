/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Parameter } from "./parameter";
import { Expose, Type } from "class-transformer";

/**
 * A rich message format, including a human readable string, a key for identifying the message, and structured data associated with the message for programmatic consumption.
 */
export class StructuredMessage extends SpeakeasyBase {
  /**
   * Identifier for this message type. Used by external systems to internationalize or personalize message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "messageKey" })
  messageKey?: string;

  /**
   * Human-readable version of message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "messageText" })
  messageText?: string;

  /**
   * The structured data associated with this message.
   */
  @SpeakeasyMetadata({ elemType: Parameter })
  @Expose({ name: "parameters" })
  @Type(() => Parameter)
  parameters?: Parameter[];
}
