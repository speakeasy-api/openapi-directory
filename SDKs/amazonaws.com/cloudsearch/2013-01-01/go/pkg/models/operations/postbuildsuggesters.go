// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTBuildSuggestersActionEnum
type POSTBuildSuggestersActionEnum string

const (
	POSTBuildSuggestersActionEnumBuildSuggesters POSTBuildSuggestersActionEnum = "BuildSuggesters"
)

func (e POSTBuildSuggestersActionEnum) ToPointer() *POSTBuildSuggestersActionEnum {
	return &e
}

func (e *POSTBuildSuggestersActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BuildSuggesters":
		*e = POSTBuildSuggestersActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTBuildSuggestersActionEnum: %v", v)
	}
}

// POSTBuildSuggestersVersionEnum
type POSTBuildSuggestersVersionEnum string

const (
	POSTBuildSuggestersVersionEnumTwoThousandAndThirteen0101 POSTBuildSuggestersVersionEnum = "2013-01-01"
)

func (e POSTBuildSuggestersVersionEnum) ToPointer() *POSTBuildSuggestersVersionEnum {
	return &e
}

func (e *POSTBuildSuggestersVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-01-01":
		*e = POSTBuildSuggestersVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTBuildSuggestersVersionEnum: %v", v)
	}
}

type POSTBuildSuggestersRequest struct {
	Action            POSTBuildSuggestersActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                         `request:"mediaType=text/xml"`
	Version           POSTBuildSuggestersVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTBuildSuggestersResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
