"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ScaleQuestion:
    r"""A scale question. The user has a range of numeric values to choose from."""
    
    high: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('high'), 'exclude': lambda f: f is None }})
    r"""Required. The highest possible value for the scale."""  
    high_label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('highLabel'), 'exclude': lambda f: f is None }})
    r"""The label to display describing the highest point on the scale."""  
    low: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('low'), 'exclude': lambda f: f is None }})
    r"""Required. The lowest possible value for the scale."""  
    low_label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lowLabel'), 'exclude': lambda f: f is None }})
    r"""The label to display describing the lowest point on the scale."""  
    