"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations
from typing import Any, Optional

class Search:
    r"""The ```search``` API is intended to query a collection of documents."""
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def searchdocuments(self, request: operations.SearchdocumentsRequest) -> operations.SearchdocumentsResponse:
        r"""Search documents
        Retrieves documents' information, while choosing which fields will be returned and filtering documents by specific fields.
        
        > The response header `REST-Content-Range` indicates the total amount of results for that specific search. For example, it may return `resources 0-100/136108`, which indicates it has returned results from 0 to 100 of a total 136108.
        
        Below you can see some query examples and learn more about each query parameter.
        
        
        > Avoid sending too many requests with wildcards (`*`) in the search parameters or that use the `keyword` parameter. This may lead to this endpoint being temporarily blocked for your account. If this happens you will receive an error with status code `503`.
        
        ## Query examples
        
        ### Simple filter
        
        ```
        /dataentities/Client/search?email=my@email.com
        ```
        
        ### Complex filter
        
        ```
        /dataentities/Client/search?_where=(firstName=Jon OR lastName=Smith) OR (createdIn between 2001-01-01 AND 2016-01-01)
        ```
        
        ### Date Range
        
        ```
        /dataentities/Client/search?_where=createdIn between 2001-01-01 AND 2016-01-01
        ```
        
        ### Range numeric fields
        
        ```
        /dataentities/Client/search?_where=age between 18 AND 25
        ```
        
        ### Partial filter
        
        ```
        /dataentities/Client/search?firstName=*Maria*
        ```
        
        ### Filter for null values
        
        ```
        /dataentities/Client/search?_where=firstName is null
        ```
        
        ### Filter for non-null values
        
        ```
        /dataentities/Client/search?_where=firstName is not null
        ```
        
        ### Filter for difference
        ```
        /dataentities/Client/search?_where=firstName<>maria
        ```
        
        ### Filter greater than or less than
        ```
        /dataentities/Client/search?_where=number>5
        /dataentities/Client/search?_where=date<2001-01-01
        ```
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.SearchdocumentsRequest, base_url, '/api/dataentities/{dataEntityName}/search', request)
        
        headers = utils.get_headers(request)
        query_params = utils.get_query_params(operations.SearchdocumentsRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.SearchdocumentsResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            pass
        elif http_res.status_code == 503:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[Any])
                res.searchdocuments_503_application_json_any = out

        return res

    