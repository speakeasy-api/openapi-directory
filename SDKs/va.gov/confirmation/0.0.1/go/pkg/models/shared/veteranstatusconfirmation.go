// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VeteranStatusConfirmationVeteranStatusEnum - Whether the system could confirm the Veteran status of an individual based on traits
type VeteranStatusConfirmationVeteranStatusEnum string

const (
	VeteranStatusConfirmationVeteranStatusEnumConfirmed    VeteranStatusConfirmationVeteranStatusEnum = "confirmed"
	VeteranStatusConfirmationVeteranStatusEnumNotConfirmed VeteranStatusConfirmationVeteranStatusEnum = "not confirmed"
)

func (e *VeteranStatusConfirmationVeteranStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "confirmed":
		fallthrough
	case "not confirmed":
		*e = VeteranStatusConfirmationVeteranStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VeteranStatusConfirmationVeteranStatusEnum: %s", s)
	}
}

// VeteranStatusConfirmation - Veteran status confirmation for an individual
type VeteranStatusConfirmation struct {
	// Whether the system could confirm the Veteran status of an individual based on traits
	//
	VeteranStatus *VeteranStatusConfirmationVeteranStatusEnum `json:"veteran_status,omitempty"`
}
