// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListAssessmentRunsXAmzTargetEnum
type ListAssessmentRunsXAmzTargetEnum string

const (
	ListAssessmentRunsXAmzTargetEnumInspectorServiceListAssessmentRuns ListAssessmentRunsXAmzTargetEnum = "InspectorService.ListAssessmentRuns"
)

func (e ListAssessmentRunsXAmzTargetEnum) ToPointer() *ListAssessmentRunsXAmzTargetEnum {
	return &e
}

func (e *ListAssessmentRunsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "InspectorService.ListAssessmentRuns":
		*e = ListAssessmentRunsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAssessmentRunsXAmzTargetEnum: %v", v)
	}
}

type ListAssessmentRunsRequest struct {
	ListAssessmentRunsRequest shared.ListAssessmentRunsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm             *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                ListAssessmentRunsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=maxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListAssessmentRunsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalException
	InternalException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// Success
	ListAssessmentRunsResponse *shared.ListAssessmentRunsResponse
	// NoSuchEntityException
	NoSuchEntityException interface{}
	StatusCode            int
	RawResponse           *http.Response
}
