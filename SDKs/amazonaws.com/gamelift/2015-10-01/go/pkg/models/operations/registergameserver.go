// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RegisterGameServerXAmzTargetEnum
type RegisterGameServerXAmzTargetEnum string

const (
	RegisterGameServerXAmzTargetEnumGameLiftRegisterGameServer RegisterGameServerXAmzTargetEnum = "GameLift.RegisterGameServer"
)

func (e RegisterGameServerXAmzTargetEnum) ToPointer() *RegisterGameServerXAmzTargetEnum {
	return &e
}

func (e *RegisterGameServerXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GameLift.RegisterGameServer":
		*e = RegisterGameServerXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RegisterGameServerXAmzTargetEnum: %v", v)
	}
}

type RegisterGameServerRequest struct {
	RegisterGameServerInput shared.RegisterGameServerInput   `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              RegisterGameServerXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RegisterGameServerResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// Success
	RegisterGameServerOutput *shared.RegisterGameServerOutput
	StatusCode               int
	RawResponse              *http.Response
	// UnauthorizedException
	UnauthorizedException interface{}
}
