<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * WebhookSupport - How webhooks are supported for the connector. Sometimes the connector natively supports webhooks, other times Apideck virtualizes them based on polling.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class WebhookSupport
{
    /**
     * How the subscription is managed in the downstream.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WebhookSupportManagedViaEnum $managedVia
     */
	#[\JMS\Serializer\Annotation\SerializedName('managed_via')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WebhookSupportManagedViaEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WebhookSupportManagedViaEnum $managedVia = null;
    
    /**
     * Mode of the webhook support.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WebhookSupportModeEnum $mode
     */
	#[\JMS\Serializer\Annotation\SerializedName('mode')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WebhookSupportModeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WebhookSupportModeEnum $mode = null;
    
    /**
     * Received events are scoped to connection or across integration.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WebhookSupportSubscriptionLevelEnum $subscriptionLevel
     */
	#[\JMS\Serializer\Annotation\SerializedName('subscription_level')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WebhookSupportSubscriptionLevelEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WebhookSupportSubscriptionLevelEnum $subscriptionLevel = null;
    
    /**
     * Virtual webhook config for the connector.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WebhookSupportVirtualWebhooks $virtualWebhooks
     */
	#[\JMS\Serializer\Annotation\SerializedName('virtual_webhooks')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\WebhookSupportVirtualWebhooks')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WebhookSupportVirtualWebhooks $virtualWebhooks = null;
    
	public function __construct()
	{
		$this->managedVia = null;
		$this->mode = null;
		$this->subscriptionLevel = null;
		$this->virtualWebhooks = null;
	}
}
