"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import volumetype_enum as shared_volumetype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LaunchTemplateDiskConf:
    r"""Launch template disk configuration."""
    
    iops: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iops'), 'exclude': lambda f: f is None }})  
    throughput: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('throughput'), 'exclude': lambda f: f is None }})  
    volume_type: Optional[shared_volumetype_enum.VolumeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('volumeType'), 'exclude': lambda f: f is None }})  
    