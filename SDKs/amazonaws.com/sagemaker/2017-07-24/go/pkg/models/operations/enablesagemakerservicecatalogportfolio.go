// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// EnableSagemakerServicecatalogPortfolioXAmzTargetEnum
type EnableSagemakerServicecatalogPortfolioXAmzTargetEnum string

const (
	EnableSagemakerServicecatalogPortfolioXAmzTargetEnumSageMakerEnableSagemakerServicecatalogPortfolio EnableSagemakerServicecatalogPortfolioXAmzTargetEnum = "SageMaker.EnableSagemakerServicecatalogPortfolio"
)

func (e *EnableSagemakerServicecatalogPortfolioXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SageMaker.EnableSagemakerServicecatalogPortfolio":
		*e = EnableSagemakerServicecatalogPortfolioXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EnableSagemakerServicecatalogPortfolioXAmzTargetEnum: %s", s)
	}
}

type EnableSagemakerServicecatalogPortfolioHeaders struct {
	XAmzAlgorithm     *string                                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        EnableSagemakerServicecatalogPortfolioXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type EnableSagemakerServicecatalogPortfolioRequest struct {
	Headers EnableSagemakerServicecatalogPortfolioHeaders
	Request map[string]interface{} `request:"mediaType=application/json"`
}

type EnableSagemakerServicecatalogPortfolioResponse struct {
	ContentType string
	// Success
	EnableSagemakerServicecatalogPortfolioOutput map[string]interface{}
	StatusCode                                   int
	RawResponse                                  *http.Response
}
