"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import connectorsource as shared_connectorsource
from typing import Optional


@dataclasses.dataclass
class PutConnectorsIDConnectorSourcesIDSourceRequestBody:
    
    auth_mechanism: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'auth_mechanism' }})
    r"""the authentication mechanism to use for this connector source"""  
    disabled: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'disabled' }})
    r"""to enable or disable connector source"""  
    disabled_capabilities: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'disabled_capabilities' }})
    r"""list (json format) of capabilities this source will be disabled for"""  
    unavailable: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'unavailable' }})
    r"""to enable or disable the source (can only be edited by BI employees)"""  
    unavailable_capabilities: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'unavailable_capabilities' }})
    r"""list (json format) of capabilities this source will be unavailable for"""  
    

@dataclasses.dataclass
class PutConnectorsIDConnectorSourcesIDSourceRequest:
    
    id_connector: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id_connector', 'style': 'simple', 'explode': False }})  
    id_source: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id_source', 'style': 'simple', 'explode': False }})  
    expand: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'expand', 'style': 'form', 'explode': True }})  
    request_body: Optional[PutConnectorsIDConnectorSourcesIDSourceRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'multipart/form-data' }})  
    

@dataclasses.dataclass
class PutConnectorsIDConnectorSourcesIDSourceResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    connector_source: Optional[shared_connectorsource.ConnectorSource] = dataclasses.field(default=None)
    r"""Successful PUT on ConnectorSource resource"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    