"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddatalabelingv1beta1boundingpolyconfig as shared_googleclouddatalabelingv1beta1boundingpolyconfig
from ..shared import googleclouddatalabelingv1beta1humanannotationconfig as shared_googleclouddatalabelingv1beta1humanannotationconfig
from ..shared import googleclouddatalabelingv1beta1imageclassificationconfig as shared_googleclouddatalabelingv1beta1imageclassificationconfig
from ..shared import googleclouddatalabelingv1beta1polylineconfig as shared_googleclouddatalabelingv1beta1polylineconfig
from ..shared import googleclouddatalabelingv1beta1segmentationconfig as shared_googleclouddatalabelingv1beta1segmentationconfig
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDatalabelingV1beta1LabelImageRequestFeatureEnum(str, Enum):
    r"""Required. The type of image labeling task."""
    FEATURE_UNSPECIFIED = 'FEATURE_UNSPECIFIED'
    CLASSIFICATION = 'CLASSIFICATION'
    BOUNDING_BOX = 'BOUNDING_BOX'
    ORIENTED_BOUNDING_BOX = 'ORIENTED_BOUNDING_BOX'
    BOUNDING_POLY = 'BOUNDING_POLY'
    POLYLINE = 'POLYLINE'
    SEGMENTATION = 'SEGMENTATION'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatalabelingV1beta1LabelImageRequest:
    r"""Request message for starting an image labeling task."""
    
    basic_config: Optional[shared_googleclouddatalabelingv1beta1humanannotationconfig.GoogleCloudDatalabelingV1beta1HumanAnnotationConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('basicConfig'), 'exclude': lambda f: f is None }})
    r"""Configuration for how human labeling task should be done."""  
    bounding_poly_config: Optional[shared_googleclouddatalabelingv1beta1boundingpolyconfig.GoogleCloudDatalabelingV1beta1BoundingPolyConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('boundingPolyConfig'), 'exclude': lambda f: f is None }})
    r"""Config for image bounding poly (and bounding box) human labeling task."""  
    feature: Optional[GoogleCloudDatalabelingV1beta1LabelImageRequestFeatureEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('feature'), 'exclude': lambda f: f is None }})
    r"""Required. The type of image labeling task."""  
    image_classification_config: Optional[shared_googleclouddatalabelingv1beta1imageclassificationconfig.GoogleCloudDatalabelingV1beta1ImageClassificationConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('imageClassificationConfig'), 'exclude': lambda f: f is None }})
    r"""Config for image classification human labeling task."""  
    polyline_config: Optional[shared_googleclouddatalabelingv1beta1polylineconfig.GoogleCloudDatalabelingV1beta1PolylineConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('polylineConfig'), 'exclude': lambda f: f is None }})
    r"""Config for image polyline human labeling task."""  
    segmentation_config: Optional[shared_googleclouddatalabelingv1beta1segmentationconfig.GoogleCloudDatalabelingV1beta1SegmentationConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('segmentationConfig'), 'exclude': lambda f: f is None }})
    r"""Config for image segmentation"""  
    