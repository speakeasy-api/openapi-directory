// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PriceTypeEnum - The pricing type for the deal.
type PriceTypeEnum string

const (
	PriceTypeEnumTypeUnspecified PriceTypeEnum = "TYPE_UNSPECIFIED"
	PriceTypeEnumCpm             PriceTypeEnum = "CPM"
	PriceTypeEnumCpd             PriceTypeEnum = "CPD"
)

func (e *PriceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TYPE_UNSPECIFIED":
		fallthrough
	case "CPM":
		fallthrough
	case "CPD":
		*e = PriceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PriceTypeEnum: %s", s)
	}
}

// Price - Represents a price and a pricing type for a deal.
type Price struct {
	// Represents an amount of money with its currency type.
	Amount *Money `json:"amount,omitempty"`
	// The pricing type for the deal.
	Type *PriceTypeEnum `json:"type,omitempty"`
}
