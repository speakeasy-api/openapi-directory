// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetOrganizationConfigTemplateSwitchProfilePortRequest struct {
	ConfigTemplateID string `pathParam:"style=simple,explode=false,name=configTemplateId"`
	OrganizationID   string `pathParam:"style=simple,explode=false,name=organizationId"`
	PortID           string `pathParam:"style=simple,explode=false,name=portId"`
	ProfileID        string `pathParam:"style=simple,explode=false,name=profileId"`
}

// GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONAccessPolicyTypeEnum - The type of the access policy of the switch profile port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
type GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONAccessPolicyTypeEnum string

const (
	GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONAccessPolicyTypeEnumCustomAccessPolicy GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONAccessPolicyTypeEnum = "Custom access policy"
	GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONAccessPolicyTypeEnumMacAllowList       GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONAccessPolicyTypeEnum = "MAC allow list"
	GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONAccessPolicyTypeEnumOpen               GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONAccessPolicyTypeEnum = "Open"
	GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONAccessPolicyTypeEnumStickyMacAllowList GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONAccessPolicyTypeEnum = "Sticky MAC allow list"
)

func (e *GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONAccessPolicyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Custom access policy":
		fallthrough
	case "MAC allow list":
		fallthrough
	case "Open":
		fallthrough
	case "Sticky MAC allow list":
		*e = GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONAccessPolicyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONAccessPolicyTypeEnum: %s", s)
	}
}

// GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONProfile - Profile attributes
type GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONProfile struct {
	// When enabled, override this port's configuration with a port profile.
	Enabled *bool `json:"enabled,omitempty"`
	// When enabled, the ID of the port profile used to override the port's configuration.
	ID *string `json:"id,omitempty"`
	// When enabled, the IName of the profile.
	Iname *string `json:"iname,omitempty"`
}

// GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONStpGuardEnum - The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
type GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONStpGuardEnum string

const (
	GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONStpGuardEnumBpduGuard GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONStpGuardEnum = "bpdu guard"
	GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONStpGuardEnumDisabled  GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONStpGuardEnum = "disabled"
	GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONStpGuardEnumLoopGuard GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONStpGuardEnum = "loop guard"
	GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONStpGuardEnumRootGuard GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONStpGuardEnum = "root guard"
)

func (e *GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONStpGuardEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "bpdu guard":
		fallthrough
	case "disabled":
		fallthrough
	case "loop guard":
		fallthrough
	case "root guard":
		*e = GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONStpGuardEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONStpGuardEnum: %s", s)
	}
}

// GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONTypeEnum - The type of the switch profile port ('trunk' or 'access').
type GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONTypeEnum string

const (
	GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONTypeEnumAccess GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONTypeEnum = "access"
	GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONTypeEnumTrunk  GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONTypeEnum = "trunk"
)

func (e *GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "access":
		fallthrough
	case "trunk":
		*e = GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONTypeEnum: %s", s)
	}
}

// GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONUdldEnum - The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
type GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONUdldEnum string

const (
	GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONUdldEnumAlertOnly GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONUdldEnum = "Alert only"
	GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONUdldEnumEnforce   GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONUdldEnum = "Enforce"
)

func (e *GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONUdldEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Alert only":
		fallthrough
	case "Enforce":
		*e = GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONUdldEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONUdldEnum: %s", s)
	}
}

// GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSON - Successful operation
type GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSON struct {
	// The number of a custom access policy to configure on the switch profile port. Only applicable when 'accessPolicyType' is 'Custom access policy'.
	AccessPolicyNumber *int64 `json:"accessPolicyNumber,omitempty"`
	// The type of the access policy of the switch profile port. Only applicable to access ports. Can be one of 'Open', 'Custom access policy', 'MAC allow list' or 'Sticky MAC allow list'.
	AccessPolicyType *GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONAccessPolicyTypeEnum `json:"accessPolicyType,omitempty"`
	// The VLANs allowed on the switch profile port. Only applicable to trunk ports.
	AllowedVlans *string `json:"allowedVlans,omitempty"`
	// If true, ARP packets for this port will be considered trusted, and Dynamic ARP Inspection will allow the traffic.
	DaiTrusted *bool `json:"daiTrusted,omitempty"`
	// The status of the switch profile port.
	Enabled *bool `json:"enabled,omitempty"`
	// For supported switches (e.g. MS420/MS425), whether or not the port has flexible stacking enabled.
	FlexibleStackingEnabled *bool `json:"flexibleStackingEnabled,omitempty"`
	// The isolation status of the switch profile port.
	IsolationEnabled *bool `json:"isolationEnabled,omitempty"`
	// The link speed for the switch profile port.
	LinkNegotiation *string `json:"linkNegotiation,omitempty"`
	// Available link speeds for the switch profile port.
	LinkNegotiationCapabilities []string `json:"linkNegotiationCapabilities,omitempty"`
	// Only devices with MAC addresses specified in this list will have access to this port. Up to 20 MAC addresses can be defined. Only applicable when 'accessPolicyType' is 'MAC allow list'.
	MacAllowList []string `json:"macAllowList,omitempty"`
	// The name of the switch profile port.
	Name *string `json:"name,omitempty"`
	// The PoE status of the switch profile port.
	PoeEnabled *bool `json:"poeEnabled,omitempty"`
	// The identifier of the switch profile port.
	PortID *string `json:"portId,omitempty"`
	// The ID of the port schedule. A value of null will clear the port schedule.
	PortScheduleID *string `json:"portScheduleId,omitempty"`
	// Profile attributes
	Profile *GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONProfile `json:"profile,omitempty"`
	// The rapid spanning tree protocol status.
	RstpEnabled *bool `json:"rstpEnabled,omitempty"`
	// The initial list of MAC addresses for sticky Mac allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
	StickyMacAllowList []string `json:"stickyMacAllowList,omitempty"`
	// The maximum number of MAC addresses for sticky MAC allow list. Only applicable when 'accessPolicyType' is 'Sticky MAC allow list'.
	StickyMacAllowListLimit *int64 `json:"stickyMacAllowListLimit,omitempty"`
	// The storm control status of the switch profile port.
	StormControlEnabled *bool `json:"stormControlEnabled,omitempty"`
	// The state of the STP guard ('disabled', 'root guard', 'bpdu guard' or 'loop guard').
	StpGuard *GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONStpGuardEnum `json:"stpGuard,omitempty"`
	// The list of tags of the switch profile port.
	Tags []string `json:"tags,omitempty"`
	// The type of the switch profile port ('trunk' or 'access').
	Type *GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONTypeEnum `json:"type,omitempty"`
	// The action to take when Unidirectional Link is detected (Alert only, Enforce). Default configuration is Alert only.
	Udld *GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONUdldEnum `json:"udld,omitempty"`
	// The VLAN of the switch profile port. A null value will clear the value set for trunk ports.
	Vlan *int64 `json:"vlan,omitempty"`
	// The voice VLAN of the switch profile port. Only applicable to access ports.
	VoiceVlan *int64 `json:"voiceVlan,omitempty"`
}

type GetOrganizationConfigTemplateSwitchProfilePortResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSONObject *GetOrganizationConfigTemplateSwitchProfilePort200ApplicationJSON
}
