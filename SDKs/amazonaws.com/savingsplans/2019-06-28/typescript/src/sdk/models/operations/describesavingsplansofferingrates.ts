/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class DescribeSavingsPlansOfferingRatesRequestBody extends SpeakeasyBase {
  /**
   * The filters.
   */
  @SpeakeasyMetadata({ elemType: shared.SavingsPlanOfferingRateFilterElement })
  @Expose({ name: "filters" })
  @Type(() => shared.SavingsPlanOfferingRateFilterElement)
  filters?: shared.SavingsPlanOfferingRateFilterElement[];

  /**
   * The maximum number of results to return with a single call. To retrieve additional results, make another call with the returned token value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxResults" })
  maxResults?: number;

  /**
   * The token for the next page of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextToken" })
  nextToken?: string;

  /**
   * The specific AWS operation for the line item in the billing report.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "operations" })
  operations?: string[];

  /**
   * The AWS products.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "products" })
  products?: shared.SavingsPlanProductTypeEnum[];

  /**
   * The IDs of the offerings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "savingsPlanOfferingIds" })
  savingsPlanOfferingIds?: string[];

  /**
   * The payment options.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "savingsPlanPaymentOptions" })
  savingsPlanPaymentOptions?: shared.SavingsPlanPaymentOptionEnum[];

  /**
   * The plan types.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "savingsPlanTypes" })
  savingsPlanTypes?: shared.SavingsPlanTypeEnum[];

  /**
   * The services.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceCodes" })
  serviceCodes?: shared.SavingsPlanRateServiceCodeEnum[];

  /**
   * The usage details of the line item in the billing report.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usageTypes" })
  usageTypes?: string[];
}

export class DescribeSavingsPlansOfferingRatesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: DescribeSavingsPlansOfferingRatesRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class DescribeSavingsPlansOfferingRatesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  describeSavingsPlansOfferingRatesResponse?: shared.DescribeSavingsPlansOfferingRatesResponse;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
