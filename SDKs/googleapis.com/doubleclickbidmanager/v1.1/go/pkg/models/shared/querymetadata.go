// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// QueryMetadataDataRangeEnum - Range of report data.
type QueryMetadataDataRangeEnum string

const (
	QueryMetadataDataRangeEnumCustomDates       QueryMetadataDataRangeEnum = "CUSTOM_DATES"
	QueryMetadataDataRangeEnumCurrentDay        QueryMetadataDataRangeEnum = "CURRENT_DAY"
	QueryMetadataDataRangeEnumPreviousDay       QueryMetadataDataRangeEnum = "PREVIOUS_DAY"
	QueryMetadataDataRangeEnumWeekToDate        QueryMetadataDataRangeEnum = "WEEK_TO_DATE"
	QueryMetadataDataRangeEnumMonthToDate       QueryMetadataDataRangeEnum = "MONTH_TO_DATE"
	QueryMetadataDataRangeEnumQuarterToDate     QueryMetadataDataRangeEnum = "QUARTER_TO_DATE"
	QueryMetadataDataRangeEnumYearToDate        QueryMetadataDataRangeEnum = "YEAR_TO_DATE"
	QueryMetadataDataRangeEnumPreviousWeek      QueryMetadataDataRangeEnum = "PREVIOUS_WEEK"
	QueryMetadataDataRangeEnumPreviousHalfMonth QueryMetadataDataRangeEnum = "PREVIOUS_HALF_MONTH"
	QueryMetadataDataRangeEnumPreviousMonth     QueryMetadataDataRangeEnum = "PREVIOUS_MONTH"
	QueryMetadataDataRangeEnumPreviousQuarter   QueryMetadataDataRangeEnum = "PREVIOUS_QUARTER"
	QueryMetadataDataRangeEnumPreviousYear      QueryMetadataDataRangeEnum = "PREVIOUS_YEAR"
	QueryMetadataDataRangeEnumLast7Days         QueryMetadataDataRangeEnum = "LAST_7_DAYS"
	QueryMetadataDataRangeEnumLast30Days        QueryMetadataDataRangeEnum = "LAST_30_DAYS"
	QueryMetadataDataRangeEnumLast90Days        QueryMetadataDataRangeEnum = "LAST_90_DAYS"
	QueryMetadataDataRangeEnumLast365Days       QueryMetadataDataRangeEnum = "LAST_365_DAYS"
	QueryMetadataDataRangeEnumAllTime           QueryMetadataDataRangeEnum = "ALL_TIME"
	QueryMetadataDataRangeEnumLast14Days        QueryMetadataDataRangeEnum = "LAST_14_DAYS"
	QueryMetadataDataRangeEnumTypeNotSupported  QueryMetadataDataRangeEnum = "TYPE_NOT_SUPPORTED"
	QueryMetadataDataRangeEnumLast60Days        QueryMetadataDataRangeEnum = "LAST_60_DAYS"
)

func (e QueryMetadataDataRangeEnum) ToPointer() *QueryMetadataDataRangeEnum {
	return &e
}

func (e *QueryMetadataDataRangeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CUSTOM_DATES":
		fallthrough
	case "CURRENT_DAY":
		fallthrough
	case "PREVIOUS_DAY":
		fallthrough
	case "WEEK_TO_DATE":
		fallthrough
	case "MONTH_TO_DATE":
		fallthrough
	case "QUARTER_TO_DATE":
		fallthrough
	case "YEAR_TO_DATE":
		fallthrough
	case "PREVIOUS_WEEK":
		fallthrough
	case "PREVIOUS_HALF_MONTH":
		fallthrough
	case "PREVIOUS_MONTH":
		fallthrough
	case "PREVIOUS_QUARTER":
		fallthrough
	case "PREVIOUS_YEAR":
		fallthrough
	case "LAST_7_DAYS":
		fallthrough
	case "LAST_30_DAYS":
		fallthrough
	case "LAST_90_DAYS":
		fallthrough
	case "LAST_365_DAYS":
		fallthrough
	case "ALL_TIME":
		fallthrough
	case "LAST_14_DAYS":
		fallthrough
	case "TYPE_NOT_SUPPORTED":
		fallthrough
	case "LAST_60_DAYS":
		*e = QueryMetadataDataRangeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryMetadataDataRangeEnum: %v", v)
	}
}

// QueryMetadataFormatEnum - Format of the generated report.
type QueryMetadataFormatEnum string

const (
	QueryMetadataFormatEnumCsv      QueryMetadataFormatEnum = "CSV"
	QueryMetadataFormatEnumExcelCsv QueryMetadataFormatEnum = "EXCEL_CSV"
	QueryMetadataFormatEnumXlsx     QueryMetadataFormatEnum = "XLSX"
)

func (e QueryMetadataFormatEnum) ToPointer() *QueryMetadataFormatEnum {
	return &e
}

func (e *QueryMetadataFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CSV":
		fallthrough
	case "EXCEL_CSV":
		fallthrough
	case "XLSX":
		*e = QueryMetadataFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryMetadataFormatEnum: %v", v)
	}
}

// QueryMetadata - Query metadata.
type QueryMetadata struct {
	// Range of report data.
	DataRange *QueryMetadataDataRangeEnum `json:"dataRange,omitempty"`
	// Format of the generated report.
	Format *QueryMetadataFormatEnum `json:"format,omitempty"`
	// The path to the location in Google Cloud Storage where the latest report is stored.
	GoogleCloudStoragePathForLatestReport *string `json:"googleCloudStoragePathForLatestReport,omitempty"`
	// The path in Google Drive for the latest report.
	GoogleDrivePathForLatestReport *string `json:"googleDrivePathForLatestReport,omitempty"`
	// The time when the latest report started to run.
	LatestReportRunTimeMs *string `json:"latestReportRunTimeMs,omitempty"`
	// Locale of the generated reports. Valid values are cs CZECH de GERMAN en ENGLISH es SPANISH fr FRENCH it ITALIAN ja JAPANESE ko KOREAN pl POLISH pt-BR BRAZILIAN_PORTUGUESE ru RUSSIAN tr TURKISH uk UKRAINIAN zh-CN CHINA_CHINESE zh-TW TAIWAN_CHINESE An locale string not in the list above will generate reports in English.
	Locale *string `json:"locale,omitempty"`
	// Number of reports that have been generated for the query.
	ReportCount *int `json:"reportCount,omitempty"`
	// Whether the latest report is currently running.
	Running *bool `json:"running,omitempty"`
	// Whether to send an email notification when a report is ready. Default to false.
	SendNotification *bool `json:"sendNotification,omitempty"`
	// List of email addresses which are sent email notifications when the report is finished. Separate from sendNotification.
	ShareEmailAddress []string `json:"shareEmailAddress,omitempty"`
	// Query title. It is used to name the reports generated from this query.
	Title *string `json:"title,omitempty"`
}
