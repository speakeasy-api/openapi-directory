/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ImportSource } from "./importsource";
import { Expose, Transform, Type } from "class-transformer";

export class StartImportRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Destinations" })
  destinations?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "EndEventTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endEventTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ImportId" })
  importId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ImportSource" })
  @Type(() => ImportSource)
  importSource?: ImportSource;

  @SpeakeasyMetadata()
  @Expose({ name: "StartEventTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startEventTime?: Date;
}
