/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * The state of the package, either active or deleted.
 */
export enum PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserStateEnum {
  Active = "active",
  Deleted = "deleted",
}

export class PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserRequest extends SpeakeasyBase {
  /**
   * The name of the package.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=package_name",
  })
  packageName: string;

  /**
   * The type of supported package. Packages in GitHub's Gradle registry have the type `maven`. Docker images pushed to GitHub's Container registry (`ghcr.io`) have the type `container`. You can use the type `docker` to find images that were pushed to GitHub's Docker registry (`docker.pkg.github.com`), even if these have now been migrated to the Container registry.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=package_type",
  })
  packageType: shared.PackageTypeEnum;

  /**
   * Page number of the results to fetch.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of results per page (max 100).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * The state of the package, either active or deleted.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=state" })
  state?: PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserStateEnum;
}

export class PackagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Requires authentication
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata({ elemType: shared.PackageVersion })
  packageVersions?: shared.PackageVersion[];
}
