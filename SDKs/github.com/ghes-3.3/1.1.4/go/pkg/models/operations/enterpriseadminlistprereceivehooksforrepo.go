// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// EnterpriseAdminListPreReceiveHooksForRepoSortEnum
type EnterpriseAdminListPreReceiveHooksForRepoSortEnum string

const (
	EnterpriseAdminListPreReceiveHooksForRepoSortEnumCreated EnterpriseAdminListPreReceiveHooksForRepoSortEnum = "created"
	EnterpriseAdminListPreReceiveHooksForRepoSortEnumUpdated EnterpriseAdminListPreReceiveHooksForRepoSortEnum = "updated"
	EnterpriseAdminListPreReceiveHooksForRepoSortEnumName    EnterpriseAdminListPreReceiveHooksForRepoSortEnum = "name"
)

func (e EnterpriseAdminListPreReceiveHooksForRepoSortEnum) ToPointer() *EnterpriseAdminListPreReceiveHooksForRepoSortEnum {
	return &e
}

func (e *EnterpriseAdminListPreReceiveHooksForRepoSortEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "created":
		fallthrough
	case "updated":
		fallthrough
	case "name":
		*e = EnterpriseAdminListPreReceiveHooksForRepoSortEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseAdminListPreReceiveHooksForRepoSortEnum: %v", v)
	}
}

type EnterpriseAdminListPreReceiveHooksForRepoRequest struct {
	// The direction to sort the results by.
	Direction *shared.DirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of results per page (max 100).
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// The name of the repository. The name is not case sensitive.
	Repo string                                             `pathParam:"style=simple,explode=false,name=repo"`
	Sort *EnterpriseAdminListPreReceiveHooksForRepoSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type EnterpriseAdminListPreReceiveHooksForRepoResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Response
	RepositoryPreReceiveHooks []shared.RepositoryPreReceiveHook
}
