// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ListCustomRoutingListenersQueryParams struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=NextToken"`
}

// ListCustomRoutingListenersXAmzTargetEnum
type ListCustomRoutingListenersXAmzTargetEnum string

const (
	ListCustomRoutingListenersXAmzTargetEnumGlobalAcceleratorV20180706ListCustomRoutingListeners ListCustomRoutingListenersXAmzTargetEnum = "GlobalAccelerator_V20180706.ListCustomRoutingListeners"
)

func (e *ListCustomRoutingListenersXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GlobalAccelerator_V20180706.ListCustomRoutingListeners":
		*e = ListCustomRoutingListenersXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListCustomRoutingListenersXAmzTargetEnum: %s", s)
	}
}

type ListCustomRoutingListenersHeaders struct {
	XAmzAlgorithm     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListCustomRoutingListenersXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListCustomRoutingListenersRequest struct {
	QueryParams ListCustomRoutingListenersQueryParams
	Headers     ListCustomRoutingListenersHeaders
	Request     shared.ListCustomRoutingListenersRequest `request:"mediaType=application/json"`
}

type ListCustomRoutingListenersResponse struct {
	// AcceleratorNotFoundException
	AcceleratorNotFoundException interface{}
	ContentType                  string
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// InvalidNextTokenException
	InvalidNextTokenException interface{}
	// Success
	ListCustomRoutingListenersResponse *shared.ListCustomRoutingListenersResponse
	StatusCode                         int
	RawResponse                        *http.Response
}
