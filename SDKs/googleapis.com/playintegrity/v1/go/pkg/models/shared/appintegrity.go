// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AppIntegrityAppRecognitionVerdictEnum - Required. Details about the app recognition verdict
type AppIntegrityAppRecognitionVerdictEnum string

const (
	AppIntegrityAppRecognitionVerdictEnumUnknown             AppIntegrityAppRecognitionVerdictEnum = "UNKNOWN"
	AppIntegrityAppRecognitionVerdictEnumPlayRecognized      AppIntegrityAppRecognitionVerdictEnum = "PLAY_RECOGNIZED"
	AppIntegrityAppRecognitionVerdictEnumUnrecognizedVersion AppIntegrityAppRecognitionVerdictEnum = "UNRECOGNIZED_VERSION"
	AppIntegrityAppRecognitionVerdictEnumUnevaluated         AppIntegrityAppRecognitionVerdictEnum = "UNEVALUATED"
)

func (e *AppIntegrityAppRecognitionVerdictEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNKNOWN":
		fallthrough
	case "PLAY_RECOGNIZED":
		fallthrough
	case "UNRECOGNIZED_VERSION":
		fallthrough
	case "UNEVALUATED":
		*e = AppIntegrityAppRecognitionVerdictEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppIntegrityAppRecognitionVerdictEnum: %s", s)
	}
}

// AppIntegrity - Contains the application integrity information.
type AppIntegrity struct {
	// Required. Details about the app recognition verdict
	AppRecognitionVerdict *AppIntegrityAppRecognitionVerdictEnum `json:"appRecognitionVerdict,omitempty"`
	// The SHA256 hash of the requesting app's signing certificates (base64 web-safe encoded). Set iff app_recognition_verdict != UNEVALUATED.
	CertificateSha256Digest []string `json:"certificateSha256Digest,omitempty"`
	// Package name of the application under attestation. Set iff app_recognition_verdict != UNEVALUATED.
	PackageName *string `json:"packageName,omitempty"`
	// Version code of the application. Set iff app_recognition_verdict != UNEVALUATED.
	VersionCode *string `json:"versionCode,omitempty"`
}
