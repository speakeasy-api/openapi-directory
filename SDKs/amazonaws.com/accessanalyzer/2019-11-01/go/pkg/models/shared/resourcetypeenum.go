// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ResourceTypeEnum string

const (
	ResourceTypeEnumAwsS3Bucket             ResourceTypeEnum = "AWS::S3::Bucket"
	ResourceTypeEnumAwsIamRole              ResourceTypeEnum = "AWS::IAM::Role"
	ResourceTypeEnumAwsSqsQueue             ResourceTypeEnum = "AWS::SQS::Queue"
	ResourceTypeEnumAwsLambdaFunction       ResourceTypeEnum = "AWS::Lambda::Function"
	ResourceTypeEnumAwsLambdaLayerVersion   ResourceTypeEnum = "AWS::Lambda::LayerVersion"
	ResourceTypeEnumAwsKmsKey               ResourceTypeEnum = "AWS::KMS::Key"
	ResourceTypeEnumAwsSecretsManagerSecret ResourceTypeEnum = "AWS::SecretsManager::Secret"
	ResourceTypeEnumAwsEfsFileSystem        ResourceTypeEnum = "AWS::EFS::FileSystem"
	ResourceTypeEnumAwsEc2Snapshot          ResourceTypeEnum = "AWS::EC2::Snapshot"
	ResourceTypeEnumAwsEcrRepository        ResourceTypeEnum = "AWS::ECR::Repository"
	ResourceTypeEnumAwsRdsDbSnapshot        ResourceTypeEnum = "AWS::RDS::DBSnapshot"
	ResourceTypeEnumAwsRdsDbClusterSnapshot ResourceTypeEnum = "AWS::RDS::DBClusterSnapshot"
	ResourceTypeEnumAwsSnsTopic             ResourceTypeEnum = "AWS::SNS::Topic"
)

func (e ResourceTypeEnum) ToPointer() *ResourceTypeEnum {
	return &e
}

func (e *ResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWS::S3::Bucket":
		fallthrough
	case "AWS::IAM::Role":
		fallthrough
	case "AWS::SQS::Queue":
		fallthrough
	case "AWS::Lambda::Function":
		fallthrough
	case "AWS::Lambda::LayerVersion":
		fallthrough
	case "AWS::KMS::Key":
		fallthrough
	case "AWS::SecretsManager::Secret":
		fallthrough
	case "AWS::EFS::FileSystem":
		fallthrough
	case "AWS::EC2::Snapshot":
		fallthrough
	case "AWS::ECR::Repository":
		fallthrough
	case "AWS::RDS::DBSnapshot":
		fallthrough
	case "AWS::RDS::DBClusterSnapshot":
		fallthrough
	case "AWS::SNS::Topic":
		*e = ResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceTypeEnum: %v", v)
	}
}
