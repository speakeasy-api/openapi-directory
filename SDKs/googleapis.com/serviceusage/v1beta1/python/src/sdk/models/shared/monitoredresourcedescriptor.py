"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import labeldescriptor as shared_labeldescriptor
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MonitoredResourceDescriptorLaunchStageEnum(str, Enum):
    r"""Optional. The launch stage of the monitored resource definition."""
    LAUNCH_STAGE_UNSPECIFIED = 'LAUNCH_STAGE_UNSPECIFIED'
    UNIMPLEMENTED = 'UNIMPLEMENTED'
    PRELAUNCH = 'PRELAUNCH'
    EARLY_ACCESS = 'EARLY_ACCESS'
    ALPHA = 'ALPHA'
    BETA = 'BETA'
    GA = 'GA'
    DEPRECATED = 'DEPRECATED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MonitoredResourceDescriptor:
    r"""An object that describes the schema of a MonitoredResource object using a type name and a set of labels. For example, the monitored resource descriptor for Google Compute Engine VM instances has a type of `\\"gce_instance\\"` and specifies the use of the labels `\\"instance_id\\"` and `\\"zone\\"` to identify particular VM instances. Different APIs can support different monitored resource types. APIs generally provide a `list` method that returns the monitored resource descriptors used by the API."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Optional. A detailed description of the monitored resource type that might be used in documentation."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Optional. A concise name for the monitored resource type that might be displayed in user interfaces. It should be a Title Cased Noun Phrase, without any article or other determiners. For example, `\\"Google Cloud SQL Database\\"`."""  
    labels: Optional[list[shared_labeldescriptor.LabelDescriptor]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Required. A set of labels used to describe instances of this monitored resource type. For example, an individual Google Cloud SQL database is identified by values for the labels `\\"database_id\\"` and `\\"zone\\"`."""  
    launch_stage: Optional[MonitoredResourceDescriptorLaunchStageEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('launchStage'), 'exclude': lambda f: f is None }})
    r"""Optional. The launch stage of the monitored resource definition."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Optional. The resource name of the monitored resource descriptor: `\\"projects/{project_id}/monitoredResourceDescriptors/{type}\\"` where {type} is the value of the `type` field in this object and {project_id} is a project ID that provides API-specific context for accessing the type. APIs that do not use project information can use the resource name format `\\"monitoredResourceDescriptors/{type}\\"`."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Required. The monitored resource type. For example, the type `\\"cloudsql_database\\"` represents databases in Google Cloud SQL. For a list of types, see [Monitoring resource types](https://cloud.google.com/monitoring/api/resources) and [Logging resource types](https://cloud.google.com/logging/docs/api/v2/resource-list)."""  
    