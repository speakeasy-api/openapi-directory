/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GetBatchByIdResponseBody - Batches are an advanced feature of ShipEngine designed for users who need to generate hundreds or
 * thousands of labels at a time.
 * 
 */
public class GetBatchByIdResponseBody {
    /**
     * Link to batch errors endpoint
     */
    @JsonProperty("batch_errors_url")
    public GetBatchByIdResponseBodyOptionalLink batchErrorsUrl;

    public GetBatchByIdResponseBody withBatchErrorsUrl(GetBatchByIdResponseBodyOptionalLink batchErrorsUrl) {
        this.batchErrorsUrl = batchErrorsUrl;
        return this;
    }
    
    /**
     * A string that uniquely identifies the batch
     */
    @JsonProperty("batch_id")
    public String batchId;

    public GetBatchByIdResponseBody withBatchId(String batchId) {
        this.batchId = batchId;
        return this;
    }
    
    /**
     * Link to batch labels query
     */
    @JsonProperty("batch_labels_url")
    public OptionalLink batchLabelsUrl;

    public GetBatchByIdResponseBody withBatchLabelsUrl(OptionalLink batchLabelsUrl) {
        this.batchLabelsUrl = batchLabelsUrl;
        return this;
    }
    
    /**
     * Custom notes you can add for each created batch
     */
    @JsonProperty("batch_notes")
    public String batchNotes;

    public GetBatchByIdResponseBody withBatchNotes(String batchNotes) {
        this.batchNotes = batchNotes;
        return this;
    }
    
    /**
     * The batch number.
     */
    @JsonProperty("batch_number")
    public String batchNumber;

    public GetBatchByIdResponseBody withBatchNumber(String batchNumber) {
        this.batchNumber = batchNumber;
        return this;
    }
    
    /**
     * The batch shipments endpoint
     */
    @JsonProperty("batch_shipments_url")
    public OptionalLink batchShipmentsUrl;

    public GetBatchByIdResponseBody withBatchShipmentsUrl(OptionalLink batchShipmentsUrl) {
        this.batchShipmentsUrl = batchShipmentsUrl;
        return this;
    }
    
    /**
     * The number of labels generated in the batch
     */
    @JsonProperty("completed")
    public Integer completed;

    public GetBatchByIdResponseBody withCompleted(Integer completed) {
        this.completed = completed;
        return this;
    }
    
    /**
     * The total of errors, warnings, and completed properties
     */
    @JsonProperty("count")
    public Integer count;

    public GetBatchByIdResponseBody withCount(Integer count) {
        this.count = count;
        return this;
    }
    
    /**
     * The date and time the batch was created in ShipEngine
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public GetBatchByIdResponseBody withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The number of errors that occurred while generating the batch
     */
    @JsonProperty("errors")
    public Integer errors;

    public GetBatchByIdResponseBody withErrors(Integer errors) {
        this.errors = errors;
        return this;
    }
    
    /**
     * A string that uniquely identifies the external batch
     */
    @JsonProperty("external_batch_id")
    public String externalBatchId;

    public GetBatchByIdResponseBody withExternalBatchId(String externalBatchId) {
        this.externalBatchId = externalBatchId;
        return this;
    }
    
    /**
     * The form download for any customs that are needed
     */
    @JsonProperty("form_download")
    public GetBatchByIdResponseBodyOptionalLink formDownload;

    public GetBatchByIdResponseBody withFormDownload(GetBatchByIdResponseBodyOptionalLink formDownload) {
        this.formDownload = formDownload;
        return this;
    }
    
    /**
     * The number of forms for customs that are available for download
     */
    @JsonProperty("forms")
    public Integer forms;

    public GetBatchByIdResponseBody withForms(Integer forms) {
        this.forms = forms;
        return this;
    }
    
    /**
     * The label download for the batch
     */
    @JsonProperty("label_download")
    public GetBatchByIdResponseBodyLabelDownload labelDownload;

    public GetBatchByIdResponseBody withLabelDownload(GetBatchByIdResponseBodyLabelDownload labelDownload) {
        this.labelDownload = labelDownload;
        return this;
    }
    
    @JsonProperty("label_format")
    public GetBatchByIdResponseBodyLabelFormatEnum labelFormat;

    public GetBatchByIdResponseBody withLabelFormat(GetBatchByIdResponseBodyLabelFormatEnum labelFormat) {
        this.labelFormat = labelFormat;
        return this;
    }
    
    /**
     * label layout
     */
    @JsonProperty("label_layout")
    public GetBatchByIdResponseBodyLabelLayoutEnum labelLayout;

    public GetBatchByIdResponseBody withLabelLayout(GetBatchByIdResponseBodyLabelLayoutEnum labelLayout) {
        this.labelLayout = labelLayout;
        return this;
    }
    
    /**
     * The date and time the batch was processed in ShipEngine
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("processed_at")
    public OffsetDateTime processedAt;

    public GetBatchByIdResponseBody withProcessedAt(OffsetDateTime processedAt) {
        this.processedAt = processedAt;
        return this;
    }
    
    @JsonProperty("status")
    public GetBatchByIdResponseBodyBatchStatusEnum status;

    public GetBatchByIdResponseBody withStatus(GetBatchByIdResponseBodyBatchStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * The number of warnings that occurred while generating the batch
     */
    @JsonProperty("warnings")
    public Integer warnings;

    public GetBatchByIdResponseBody withWarnings(Integer warnings) {
        this.warnings = warnings;
        return this;
    }
    
    public GetBatchByIdResponseBody(@JsonProperty("batch_errors_url") GetBatchByIdResponseBodyOptionalLink batchErrorsUrl, @JsonProperty("batch_id") String batchId, @JsonProperty("batch_labels_url") OptionalLink batchLabelsUrl, @JsonProperty("batch_notes") String batchNotes, @JsonProperty("batch_number") String batchNumber, @JsonProperty("batch_shipments_url") OptionalLink batchShipmentsUrl, @JsonProperty("completed") Integer completed, @JsonProperty("count") Integer count, @JsonProperty("created_at") OffsetDateTime createdAt, @JsonProperty("errors") Integer errors, @JsonProperty("external_batch_id") String externalBatchId, @JsonProperty("form_download") GetBatchByIdResponseBodyOptionalLink formDownload, @JsonProperty("forms") Integer forms, @JsonProperty("label_download") GetBatchByIdResponseBodyLabelDownload labelDownload, @JsonProperty("label_format") GetBatchByIdResponseBodyLabelFormatEnum labelFormat, @JsonProperty("label_layout") GetBatchByIdResponseBodyLabelLayoutEnum labelLayout, @JsonProperty("processed_at") OffsetDateTime processedAt, @JsonProperty("status") GetBatchByIdResponseBodyBatchStatusEnum status, @JsonProperty("warnings") Integer warnings) {
        this.batchErrorsUrl = batchErrorsUrl;
        this.batchId = batchId;
        this.batchLabelsUrl = batchLabelsUrl;
        this.batchNotes = batchNotes;
        this.batchNumber = batchNumber;
        this.batchShipmentsUrl = batchShipmentsUrl;
        this.completed = completed;
        this.count = count;
        this.createdAt = createdAt;
        this.errors = errors;
        this.externalBatchId = externalBatchId;
        this.formDownload = formDownload;
        this.forms = forms;
        this.labelDownload = labelDownload;
        this.labelFormat = labelFormat;
        this.labelLayout = labelLayout;
        this.processedAt = processedAt;
        this.status = status;
        this.warnings = warnings;
  }
}
