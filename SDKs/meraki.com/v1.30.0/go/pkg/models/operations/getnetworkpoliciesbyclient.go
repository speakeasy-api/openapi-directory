// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetNetworkPoliciesByClientPathParams struct {
	NetworkID string `pathParam:"style=simple,explode=false,name=networkId"`
}

type GetNetworkPoliciesByClientQueryParams struct {
	// A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `queryParam:"style=form,explode=true,name=endingBefore"`
	// The number of entries per page returned. Acceptable range is 3 - 1000. Default is 50.
	PerPage *int64 `queryParam:"style=form,explode=true,name=perPage"`
	// A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `queryParam:"style=form,explode=true,name=startingAfter"`
	// The beginning of the timespan for the data. The maximum lookback period is 31 days from today.
	T0 *string `queryParam:"style=form,explode=true,name=t0"`
	// The timespan for which the information will be fetched. If specifying timespan, do not specify parameter t0. The value must be in seconds and be less than or equal to 31 days. The default is 1 day.
	Timespan *float32 `queryParam:"style=form,explode=true,name=timespan"`
}

type GetNetworkPoliciesByClientRequest struct {
	PathParams  GetNetworkPoliciesByClientPathParams
	QueryParams GetNetworkPoliciesByClientQueryParams
}

type GetNetworkPoliciesByClient200ApplicationJSONAssignedSsid struct {
	// number of ssid
	SsidNumber *int64 `json:"ssidNumber,omitempty"`
}

type GetNetworkPoliciesByClient200ApplicationJSONAssigned struct {
	// id of policy
	GroupPolicyID *string `json:"groupPolicyId,omitempty"`
	// name of policy
	Name *string `json:"name,omitempty"`
	// ssid
	Ssid []GetNetworkPoliciesByClient200ApplicationJSONAssignedSsid `json:"ssid,omitempty"`
	// type of policy
	Type *string `json:"type,omitempty"`
}

type GetNetworkPoliciesByClient200ApplicationJSON struct {
	// Assigned policies
	Assigned []GetNetworkPoliciesByClient200ApplicationJSONAssigned `json:"assigned,omitempty"`
	// ID of client
	ClientID *string `json:"clientId,omitempty"`
	// Name of client
	Name *string `json:"name,omitempty"`
}

type GetNetworkPoliciesByClientResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetNetworkPoliciesByClient200ApplicationJSONObjects []GetNetworkPoliciesByClient200ApplicationJSON
}
