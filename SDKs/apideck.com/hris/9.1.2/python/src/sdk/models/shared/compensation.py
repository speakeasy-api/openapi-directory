"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import benefit as shared_benefit
from ..shared import deduction as shared_deduction
from ..shared import tax as shared_tax
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Compensation:
    
    employee_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employee_id') }})
    r"""A unique identifier for an object."""  
    benefits: Optional[list[shared_benefit.Benefit]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('benefits'), 'exclude': lambda f: f is None }})
    r"""An array of employee benefits for the pay period."""  
    deductions: Optional[list[shared_deduction.Deduction]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deductions'), 'exclude': lambda f: f is None }})
    r"""An array of employee deductions for the pay period."""  
    gross_pay: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gross_pay'), 'exclude': lambda f: f is None }})
    r"""The employee's gross pay. Only available when payroll has been processed"""  
    net_pay: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('net_pay'), 'exclude': lambda f: f is None }})
    r"""The employee's net pay. Only available when payroll has been processed"""  
    taxes: Optional[list[shared_tax.Tax]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxes'), 'exclude': lambda f: f is None }})
    r"""An array of employer and employee taxes for the pay period."""  
    