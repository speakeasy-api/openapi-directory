// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type TeamsUpdateSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

// TeamsUpdateRequestBody - The information used to update the team
type TeamsUpdateRequestBody struct {
	// The new display name of the team
	DisplayName string `json:"display_name"`
}

type TeamsUpdateRequest struct {
	// The information used to update the team
	RequestBody TeamsUpdateRequestBody `request:"mediaType=application/json"`
	// The organization's name
	OrgName string `pathParam:"style=simple,explode=false,name=org_name"`
	// The team's name
	TeamName string `pathParam:"style=simple,explode=false,name=team_name"`
}

type TeamsUpdateDefaultApplicationJSONErrorCodeEnum string

const (
	TeamsUpdateDefaultApplicationJSONErrorCodeEnumBadRequest          TeamsUpdateDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	TeamsUpdateDefaultApplicationJSONErrorCodeEnumConflict            TeamsUpdateDefaultApplicationJSONErrorCodeEnum = "Conflict"
	TeamsUpdateDefaultApplicationJSONErrorCodeEnumNotAcceptable       TeamsUpdateDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	TeamsUpdateDefaultApplicationJSONErrorCodeEnumNotFound            TeamsUpdateDefaultApplicationJSONErrorCodeEnum = "NotFound"
	TeamsUpdateDefaultApplicationJSONErrorCodeEnumInternalServerError TeamsUpdateDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	TeamsUpdateDefaultApplicationJSONErrorCodeEnumUnauthorized        TeamsUpdateDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	TeamsUpdateDefaultApplicationJSONErrorCodeEnumTooManyRequests     TeamsUpdateDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *TeamsUpdateDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = TeamsUpdateDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TeamsUpdateDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type TeamsUpdateDefaultApplicationJSONError struct {
	Code    TeamsUpdateDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                         `json:"message"`
}

// TeamsUpdateDefaultApplicationJSON - Error
type TeamsUpdateDefaultApplicationJSON struct {
	Error TeamsUpdateDefaultApplicationJSONError `json:"error"`
}

// TeamsUpdate200ApplicationJSON - Success
type TeamsUpdate200ApplicationJSON struct {
	// The description of the team
	Description *string `json:"description,omitempty"`
	// The display name of the team
	DisplayName string `json:"display_name"`
	// The internal unique id (UUID) of the team.
	ID string `json:"id"`
	// The name of the team
	Name string `json:"name"`
}

type TeamsUpdateResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	TeamsUpdate200ApplicationJSONObject *TeamsUpdate200ApplicationJSON
	// Error
	TeamsUpdateDefaultApplicationJSONObject *TeamsUpdateDefaultApplicationJSON
}
