// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type StartEdgeConfigurationUpdateHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// StartEdgeConfigurationUpdateRequestBodyEdgeConfig - A description of the stream's edge configuration that will be used to sync with the Edge Agent IoT Greengrass component. The Edge Agent component will run on an IoT Hub Device setup at your premise.
type StartEdgeConfigurationUpdateRequestBodyEdgeConfig struct {
	DeletionConfig *shared.DeletionConfig `json:"DeletionConfig,omitempty"`
	HubDeviceArn   *string                `json:"HubDeviceArn,omitempty"`
	RecorderConfig *shared.RecorderConfig `json:"RecorderConfig,omitempty"`
	UploaderConfig *shared.UploaderConfig `json:"UploaderConfig,omitempty"`
}

type StartEdgeConfigurationUpdateRequestBody struct {
	// A description of the stream's edge configuration that will be used to sync with the Edge Agent IoT Greengrass component. The Edge Agent component will run on an IoT Hub Device setup at your premise.
	EdgeConfig StartEdgeConfigurationUpdateRequestBodyEdgeConfig `json:"EdgeConfig"`
	//  The Amazon Resource Name (ARN) of the stream. Specify either the <code>StreamName</code> or the <code>StreamARN</code>.
	StreamARN *string `json:"StreamARN,omitempty"`
	// The name of the stream whose edge configuration you want to update. Specify either the <code>StreamName</code> or the <code>StreamARN</code>.
	StreamName *string `json:"StreamName,omitempty"`
}

type StartEdgeConfigurationUpdateRequest struct {
	Headers StartEdgeConfigurationUpdateHeaders
	Request StartEdgeConfigurationUpdateRequestBody `request:"mediaType=application/json"`
}

type StartEdgeConfigurationUpdateResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ClientLimitExceededException
	ClientLimitExceededException interface{}
	ContentType                  string
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// NoDataRetentionException
	NoDataRetentionException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	StartEdgeConfigurationUpdateOutput *shared.StartEdgeConfigurationUpdateOutput
	StatusCode                         int
	RawResponse                        *http.Response
}
