<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CreatePayeesCSVRequestV4
{
	#[\JMS\Serializer\Annotation\SerializedName('addressCity')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $addressCity;
    
    /**
     * Valid ISO 3166 2 character country code. See the <a href="https://www.iso.org/iso-3166-country-codes.html" target="_blank" a>ISO specification</a> for details.
     * 
     * @var string $addressCountry
     */
	#[\JMS\Serializer\Annotation\SerializedName('addressCountry')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $addressCountry;
    
	#[\JMS\Serializer\Annotation\SerializedName('addressCountyOrProvince')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressCountyOrProvince = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('addressLine1')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $addressLine1;
    
	#[\JMS\Serializer\Annotation\SerializedName('addressLine2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressLine2 = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('addressLine3')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressLine3 = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('addressLine4')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressLine4 = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('addressZipOrPostcode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $addressZipOrPostcode;
    
	#[\JMS\Serializer\Annotation\SerializedName('challengeDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $challengeDescription = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('challengeValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $challengeValue = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('companyEIN')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $companyEIN = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('companyName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $companyName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('companyOperatingName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $companyOperatingName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $email;
    
    /**
     * Must not be date in future. Example - 1970-05-20
     * 
     * @var ?\DateTime $individualDateOfBirth
     */
	#[\JMS\Serializer\Annotation\SerializedName('individualDateOfBirth')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $individualDateOfBirth = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('individualFirstName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $individualFirstName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('individualLastName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $individualLastName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('individualNationalIdentification')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $individualNationalIdentification = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('individualOtherNames')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $individualOtherNames = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('individualTitle')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $individualTitle = null;
    
    /**
     * An IETF BCP 47 language code which has been configured for use within this Velo environment.<BR>
     * 
     * See the /v1/supportedLanguages endpoint to list the available codes for an environment.
     * 
     * 
     * @var ?string $payeeLanguage
     */
	#[\JMS\Serializer\Annotation\SerializedName('payeeLanguage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payeeLanguage = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('paymentChannelAccountName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentChannelAccountName = null;
    
    /**
     * Either routing number and account number or only iban must be set
     * 
     * @var ?string $paymentChannelAccountNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentChannelAccountNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentChannelAccountNumber = null;
    
    /**
     * Valid ISO 3166 2 character country code. See the <a href="https://www.iso.org/iso-3166-country-codes.html" target="_blank" a>ISO specification</a> for details.
     * 
     * @var ?string $paymentChannelCountryCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentChannelCountryCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentChannelCountryCode = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('paymentChannelCurrency')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentChannelCurrency = null;
    
    /**
     * Must match the regular expression ```^[A-Za-z0-9]+$```.
     * 
     * @var ?string $paymentChannelIban
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentChannelIban')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentChannelIban = null;
    
    /**
     * Either routing number and account number or only iban must be set
     * 
     * @var ?string $paymentChannelRoutingNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentChannelRoutingNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentChannelRoutingNumber = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('remoteId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $remoteId;
    
    /**
     * The type of the payee
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PayeeTypeEnumEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PayeeTypeEnumEnum>')]
    public PayeeTypeEnumEnum $type;
    
	public function __construct()
	{
		$this->addressCity = "";
		$this->addressCountry = "";
		$this->addressCountyOrProvince = null;
		$this->addressLine1 = "";
		$this->addressLine2 = null;
		$this->addressLine3 = null;
		$this->addressLine4 = null;
		$this->addressZipOrPostcode = "";
		$this->challengeDescription = null;
		$this->challengeValue = null;
		$this->companyEIN = null;
		$this->companyName = null;
		$this->companyOperatingName = null;
		$this->email = "";
		$this->individualDateOfBirth = null;
		$this->individualFirstName = null;
		$this->individualLastName = null;
		$this->individualNationalIdentification = null;
		$this->individualOtherNames = null;
		$this->individualTitle = null;
		$this->payeeLanguage = null;
		$this->paymentChannelAccountName = null;
		$this->paymentChannelAccountNumber = null;
		$this->paymentChannelCountryCode = null;
		$this->paymentChannelCurrency = null;
		$this->paymentChannelIban = null;
		$this->paymentChannelRoutingNumber = null;
		$this->remoteId = "";
		$this->type = \OpenAPI\OpenAPI\Models\Shared\PayeeTypeEnumEnum::INDIVIDUAL;
	}
}
