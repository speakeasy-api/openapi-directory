// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AppliedLabelChangeDetailTypesEnum string

const (
	AppliedLabelChangeDetailTypesEnumTypeUnspecified          AppliedLabelChangeDetailTypesEnum = "TYPE_UNSPECIFIED"
	AppliedLabelChangeDetailTypesEnumLabelAdded               AppliedLabelChangeDetailTypesEnum = "LABEL_ADDED"
	AppliedLabelChangeDetailTypesEnumLabelRemoved             AppliedLabelChangeDetailTypesEnum = "LABEL_REMOVED"
	AppliedLabelChangeDetailTypesEnumLabelFieldValueChanged   AppliedLabelChangeDetailTypesEnum = "LABEL_FIELD_VALUE_CHANGED"
	AppliedLabelChangeDetailTypesEnumLabelAppliedByItemCreate AppliedLabelChangeDetailTypesEnum = "LABEL_APPLIED_BY_ITEM_CREATE"
)

func (e *AppliedLabelChangeDetailTypesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TYPE_UNSPECIFIED":
		fallthrough
	case "LABEL_ADDED":
		fallthrough
	case "LABEL_REMOVED":
		fallthrough
	case "LABEL_FIELD_VALUE_CHANGED":
		fallthrough
	case "LABEL_APPLIED_BY_ITEM_CREATE":
		*e = AppliedLabelChangeDetailTypesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppliedLabelChangeDetailTypesEnum: %s", s)
	}
}

// AppliedLabelChangeDetail - A change made to a Label on the Target.
type AppliedLabelChangeDetail struct {
	// Field Changes. Only present if `types` contains `LABEL_FIELD_VALUE_CHANGED`.
	FieldChanges []FieldValueChange `json:"fieldChanges,omitempty"`
	// The Label name representing the Label that changed. This name always contains the revision of the Label that was used when this Action occurred. The format is `labels/id@revision`.
	Label *string `json:"label,omitempty"`
	// The human-readable title of the label that changed.
	Title *string `json:"title,omitempty"`
	// The types of changes made to the Label on the Target.
	Types []AppliedLabelChangeDetailTypesEnum `json:"types,omitempty"`
}
