/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CostCategoryProcessingStatus } from "./costcategoryprocessingstatus";
import { Expose, Type } from "class-transformer";

/**
 * <p>A reference to a Cost Category containing only enough information to identify the Cost Category.</p> <p>You can use this information to retrieve the full Cost Category information using <code>DescribeCostCategory</code>.</p>
 */
export class CostCategoryReference extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CostCategoryArn" })
  costCategoryArn?: string;

  /**
   * The default value for the cost category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "DefaultValue" })
  defaultValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EffectiveEnd" })
  effectiveEnd?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EffectiveStart" })
  effectiveStart?: string;

  /**
   * The unique name of the Cost Category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NumberOfRules" })
  numberOfRules?: number;

  @SpeakeasyMetadata({ elemType: CostCategoryProcessingStatus })
  @Expose({ name: "ProcessingStatus" })
  @Type(() => CostCategoryProcessingStatus)
  processingStatus?: CostCategoryProcessingStatus[];

  @SpeakeasyMetadata()
  @Expose({ name: "Values" })
  values?: string[];
}
