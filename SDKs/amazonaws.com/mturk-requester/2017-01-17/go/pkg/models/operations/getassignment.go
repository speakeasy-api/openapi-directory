// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetAssignmentXAmzTargetEnum
type GetAssignmentXAmzTargetEnum string

const (
	GetAssignmentXAmzTargetEnumMTurkRequesterServiceV20170117GetAssignment GetAssignmentXAmzTargetEnum = "MTurkRequesterServiceV20170117.GetAssignment"
)

func (e *GetAssignmentXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MTurkRequesterServiceV20170117.GetAssignment":
		*e = GetAssignmentXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAssignmentXAmzTargetEnum: %s", s)
	}
}

type GetAssignmentRequest struct {
	GetAssignmentRequest shared.GetAssignmentRequest `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           GetAssignmentXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetAssignmentResponse struct {
	ContentType string
	// Success
	GetAssignmentResponse *shared.GetAssignmentResponse
	// RequestError
	RequestError interface{}
	// ServiceFault
	ServiceFault interface{}
	StatusCode   int
	RawResponse  *http.Response
}
