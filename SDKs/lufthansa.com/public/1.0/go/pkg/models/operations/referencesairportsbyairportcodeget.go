// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type ReferencesAirportsByAirportCodeGetSecurity struct {
	Auth string `security:"scheme,type=oauth2,name=Authorization"`
}

type ReferencesAirportsByAirportCodeGetRequest struct {
	// http header: application/json or application/xml (Acceptable values are: "application/json", "application/xml")
	Accept string `header:"style=simple,explode=false,name=Accept"`
	// Restrict the results to locations with flights operated by LH (false=0, true=1)
	LHoperated *bool `queryParam:"style=form,explode=true,name=LHoperated"`
	// 3-letter IATA airport code
	AirportCode string `pathParam:"style=simple,explode=false,name=airportCode"`
	// 2-letter ISO 3166-1 language code
	Lang *string `queryParam:"style=form,explode=true,name=lang"`
	// Number of records returned per request. Defaults to 20, maximum is 100 (if a value bigger than 100 is given, 100 will be taken)
	Limit *string `queryParam:"style=form,explode=true,name=limit"`
	// Number of records skipped. Defaults to 0
	Offset *string `queryParam:"style=form,explode=true,name=offset"`
}

type ReferencesAirportsByAirportCodeGetResponse struct {
	AirportResponse *shared.AirportResponse
	ContentType     string
	StatusCode      int
	RawResponse     *http.Response
}
