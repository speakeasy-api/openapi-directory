/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ReportTelephone200ApplicationJSONTelephonyUsage {
    /**
     * Caller's call-in number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("call_in_number")
    public String callInNumber;
    public ReportTelephone200ApplicationJSONTelephonyUsage withCallInNumber(String callInNumber) {
        this.callInNumber = callInNumber;
        return this;
    }
    
    /**
     * Country name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country_name")
    public String countryName;
    public ReportTelephone200ApplicationJSONTelephonyUsage withCountryName(String countryName) {
        this.countryName = countryName;
        return this;
    }
    
    /**
     * User department.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dept")
    public String dept;
    public ReportTelephone200ApplicationJSONTelephonyUsage withDept(String dept) {
        this.dept = dept;
        return this;
    }
    
    /**
     * Call leg duration
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Long duration;
    public ReportTelephone200ApplicationJSONTelephonyUsage withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * Call leg end time
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("end_time")
    public OffsetDateTime endTime;
    public ReportTelephone200ApplicationJSONTelephonyUsage withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * User email.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("host_email")
    public String hostEmail;
    public ReportTelephone200ApplicationJSONTelephonyUsage withHostEmail(String hostEmail) {
        this.hostEmail = hostEmail;
        return this;
    }
    
    /**
     * The user ID of the meeting host.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("host_id")
    public String hostId;
    public ReportTelephone200ApplicationJSONTelephonyUsage withHostId(String hostId) {
        this.hostId = hostId;
        return this;
    }
    
    /**
     * User display name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("host_name")
    public String hostName;
    public ReportTelephone200ApplicationJSONTelephonyUsage withHostName(String hostName) {
        this.hostName = hostName;
        return this;
    }
    
    /**
     * [Meeting ID](https://support.zoom.us/hc/en-us/articles/201362373-What-is-a-Meeting-ID-): Unique identifier of the meeting in "**long**" format(represented as int64 data type in JSON), also known as the meeting number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("meeting_id")
    public Long meetingId;
    public ReportTelephone200ApplicationJSONTelephonyUsage withMeetingId(Long meetingId) {
        this.meetingId = meetingId;
        return this;
    }
    
    /**
     * Meeting type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("meeting_type")
    public String meetingType;
    public ReportTelephone200ApplicationJSONTelephonyUsage withMeetingType(String meetingType) {
        this.meetingType = meetingType;
        return this;
    }
    
    /**
     * Toll-free telephone number. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone_number")
    public String phoneNumber;
    public ReportTelephone200ApplicationJSONTelephonyUsage withPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }
    
    /**
     * Calling rate for the telephone call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rate")
    public Double rate;
    public ReportTelephone200ApplicationJSONTelephonyUsage withRate(Double rate) {
        this.rate = rate;
        return this;
    }
    
    /**
     * The number that is signaled to Zoom. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("signaled_number")
    public String signaledNumber;
    public ReportTelephone200ApplicationJSONTelephonyUsage withSignaledNumber(String signaledNumber) {
        this.signaledNumber = signaledNumber;
        return this;
    }
    
    /**
     * Call leg start time
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("start_time")
    public OffsetDateTime startTime;
    public ReportTelephone200ApplicationJSONTelephonyUsage withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * Total cost (USD) for Call Out. Calculated as plan rate by duration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Double total;
    public ReportTelephone200ApplicationJSONTelephonyUsage withTotal(Double total) {
        this.total = total;
        return this;
    }
    
    /**
     * Call type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public ReportTelephone200ApplicationJSONTelephonyUsageTypeEnum type;
    public ReportTelephone200ApplicationJSONTelephonyUsage withType(ReportTelephone200ApplicationJSONTelephonyUsageTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Meeting UUID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uuid")
    public String uuid;
    public ReportTelephone200ApplicationJSONTelephonyUsage withUuid(String uuid) {
        this.uuid = uuid;
        return this;
    }
    
}
