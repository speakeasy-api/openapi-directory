/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class CreatePayeesCSVRequestV4 {
    @JsonProperty("addressCity")
    public String addressCity;

    public CreatePayeesCSVRequestV4 withAddressCity(String addressCity) {
        this.addressCity = addressCity;
        return this;
    }
    
    /**
     * Valid ISO 3166 2 character country code. See the &lt;a href="https://www.iso.org/iso-3166-country-codes.html" target="_blank" a&gt;ISO specification&lt;/a&gt; for details.
     */
    @JsonProperty("addressCountry")
    public String addressCountry;

    public CreatePayeesCSVRequestV4 withAddressCountry(String addressCountry) {
        this.addressCountry = addressCountry;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("addressCountyOrProvince")
    public String addressCountyOrProvince;

    public CreatePayeesCSVRequestV4 withAddressCountyOrProvince(String addressCountyOrProvince) {
        this.addressCountyOrProvince = addressCountyOrProvince;
        return this;
    }
    
    @JsonProperty("addressLine1")
    public String addressLine1;

    public CreatePayeesCSVRequestV4 withAddressLine1(String addressLine1) {
        this.addressLine1 = addressLine1;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("addressLine2")
    public String addressLine2;

    public CreatePayeesCSVRequestV4 withAddressLine2(String addressLine2) {
        this.addressLine2 = addressLine2;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("addressLine3")
    public String addressLine3;

    public CreatePayeesCSVRequestV4 withAddressLine3(String addressLine3) {
        this.addressLine3 = addressLine3;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("addressLine4")
    public String addressLine4;

    public CreatePayeesCSVRequestV4 withAddressLine4(String addressLine4) {
        this.addressLine4 = addressLine4;
        return this;
    }
    
    @JsonProperty("addressZipOrPostcode")
    public String addressZipOrPostcode;

    public CreatePayeesCSVRequestV4 withAddressZipOrPostcode(String addressZipOrPostcode) {
        this.addressZipOrPostcode = addressZipOrPostcode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("challengeDescription")
    public String challengeDescription;

    public CreatePayeesCSVRequestV4 withChallengeDescription(String challengeDescription) {
        this.challengeDescription = challengeDescription;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("challengeValue")
    public String challengeValue;

    public CreatePayeesCSVRequestV4 withChallengeValue(String challengeValue) {
        this.challengeValue = challengeValue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("companyEIN")
    public String companyEIN;

    public CreatePayeesCSVRequestV4 withCompanyEIN(String companyEIN) {
        this.companyEIN = companyEIN;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("companyName")
    public String companyName;

    public CreatePayeesCSVRequestV4 withCompanyName(String companyName) {
        this.companyName = companyName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("companyOperatingName")
    public String companyOperatingName;

    public CreatePayeesCSVRequestV4 withCompanyOperatingName(String companyOperatingName) {
        this.companyOperatingName = companyOperatingName;
        return this;
    }
    
    @JsonProperty("email")
    public String email;

    public CreatePayeesCSVRequestV4 withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Must not be date in future. Example - 1970-05-20
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("individualDateOfBirth")
    public LocalDate individualDateOfBirth;

    public CreatePayeesCSVRequestV4 withIndividualDateOfBirth(LocalDate individualDateOfBirth) {
        this.individualDateOfBirth = individualDateOfBirth;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("individualFirstName")
    public String individualFirstName;

    public CreatePayeesCSVRequestV4 withIndividualFirstName(String individualFirstName) {
        this.individualFirstName = individualFirstName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("individualLastName")
    public String individualLastName;

    public CreatePayeesCSVRequestV4 withIndividualLastName(String individualLastName) {
        this.individualLastName = individualLastName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("individualNationalIdentification")
    public String individualNationalIdentification;

    public CreatePayeesCSVRequestV4 withIndividualNationalIdentification(String individualNationalIdentification) {
        this.individualNationalIdentification = individualNationalIdentification;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("individualOtherNames")
    public String individualOtherNames;

    public CreatePayeesCSVRequestV4 withIndividualOtherNames(String individualOtherNames) {
        this.individualOtherNames = individualOtherNames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("individualTitle")
    public String individualTitle;

    public CreatePayeesCSVRequestV4 withIndividualTitle(String individualTitle) {
        this.individualTitle = individualTitle;
        return this;
    }
    
    /**
     * An IETF BCP 47 language code which has been configured for use within this Velo environment.&lt;BR&gt;
     * See the /v1/supportedLanguages endpoint to list the available codes for an environment.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("payeeLanguage")
    public String payeeLanguage;

    public CreatePayeesCSVRequestV4 withPayeeLanguage(String payeeLanguage) {
        this.payeeLanguage = payeeLanguage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentChannelAccountName")
    public String paymentChannelAccountName;

    public CreatePayeesCSVRequestV4 withPaymentChannelAccountName(String paymentChannelAccountName) {
        this.paymentChannelAccountName = paymentChannelAccountName;
        return this;
    }
    
    /**
     * Either routing number and account number or only iban must be set
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentChannelAccountNumber")
    public String paymentChannelAccountNumber;

    public CreatePayeesCSVRequestV4 withPaymentChannelAccountNumber(String paymentChannelAccountNumber) {
        this.paymentChannelAccountNumber = paymentChannelAccountNumber;
        return this;
    }
    
    /**
     * Valid ISO 3166 2 character country code. See the &lt;a href="https://www.iso.org/iso-3166-country-codes.html" target="_blank" a&gt;ISO specification&lt;/a&gt; for details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentChannelCountryCode")
    public String paymentChannelCountryCode;

    public CreatePayeesCSVRequestV4 withPaymentChannelCountryCode(String paymentChannelCountryCode) {
        this.paymentChannelCountryCode = paymentChannelCountryCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentChannelCurrency")
    public String paymentChannelCurrency;

    public CreatePayeesCSVRequestV4 withPaymentChannelCurrency(String paymentChannelCurrency) {
        this.paymentChannelCurrency = paymentChannelCurrency;
        return this;
    }
    
    /**
     * Must match the regular expression ```^[A-Za-z0-9]+$```.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentChannelIban")
    public String paymentChannelIban;

    public CreatePayeesCSVRequestV4 withPaymentChannelIban(String paymentChannelIban) {
        this.paymentChannelIban = paymentChannelIban;
        return this;
    }
    
    /**
     * Either routing number and account number or only iban must be set
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentChannelRoutingNumber")
    public String paymentChannelRoutingNumber;

    public CreatePayeesCSVRequestV4 withPaymentChannelRoutingNumber(String paymentChannelRoutingNumber) {
        this.paymentChannelRoutingNumber = paymentChannelRoutingNumber;
        return this;
    }
    
    @JsonProperty("remoteId")
    public String remoteId;

    public CreatePayeesCSVRequestV4 withRemoteId(String remoteId) {
        this.remoteId = remoteId;
        return this;
    }
    
    /**
     * The type of the payee
     */
    @JsonProperty("type")
    public PayeeTypeEnumEnum type;

    public CreatePayeesCSVRequestV4 withType(PayeeTypeEnumEnum type) {
        this.type = type;
        return this;
    }
    
    public CreatePayeesCSVRequestV4(@JsonProperty("addressCity") String addressCity, @JsonProperty("addressCountry") String addressCountry, @JsonProperty("addressLine1") String addressLine1, @JsonProperty("addressZipOrPostcode") String addressZipOrPostcode, @JsonProperty("email") String email, @JsonProperty("remoteId") String remoteId, @JsonProperty("type") PayeeTypeEnumEnum type) {
        this.addressCity = addressCity;
        this.addressCountry = addressCountry;
        this.addressLine1 = addressLine1;
        this.addressZipOrPostcode = addressZipOrPostcode;
        this.email = email;
        this.remoteId = remoteId;
        this.type = type;
  }
}
