/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetAllPayments200ApplicationJSONRootTypeForPayments {
    @JsonProperty("amount")
    public String amount;
    public GetAllPayments200ApplicationJSONRootTypeForPayments withAmount(String amount) {
        this.amount = amount;
        return this;
    }
    
    @JsonProperty("currency")
    public String currency;
    public GetAllPayments200ApplicationJSONRootTypeForPayments withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * mandatory only if purpose:"invest" and pot does not have a portfolio template attached (e.g. An execution-only or direct-to-consumer wealth manager)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("investment_instructions")
    public GetAllPayments200ApplicationJSONRootTypeForPaymentsInvestmentInstructions[] investmentInstructions;
    public GetAllPayments200ApplicationJSONRootTypeForPayments withInvestmentInstructions(GetAllPayments200ApplicationJSONRootTypeForPaymentsInvestmentInstructions[] investmentInstructions) {
        this.investmentInstructions = investmentInstructions;
        return this;
    }
    
    @JsonProperty("payment_type")
    public GetAllPayments200ApplicationJSONRootTypeForPaymentsPaymentTypeEnum paymentType;
    public GetAllPayments200ApplicationJSONRootTypeForPayments withPaymentType(GetAllPayments200ApplicationJSONRootTypeForPaymentsPaymentTypeEnum paymentType) {
        this.paymentType = paymentType;
        return this;
    }
    
    @JsonProperty("pot_id")
    public String potId;
    public GetAllPayments200ApplicationJSONRootTypeForPayments withPotId(String potId) {
        this.potId = potId;
        return this;
    }
    
    @JsonProperty("purpose")
    public GetAllPayments200ApplicationJSONRootTypeForPaymentsPurposeEnum purpose;
    public GetAllPayments200ApplicationJSONRootTypeForPayments withPurpose(GetAllPayments200ApplicationJSONRootTypeForPaymentsPurposeEnum purpose) {
        this.purpose = purpose;
        return this;
    }
    
    @JsonProperty("service_provider")
    public GetAllPayments200ApplicationJSONRootTypeForPaymentsServiceProviderEnum serviceProvider;
    public GetAllPayments200ApplicationJSONRootTypeForPayments withServiceProvider(GetAllPayments200ApplicationJSONRootTypeForPaymentsServiceProviderEnum serviceProvider) {
        this.serviceProvider = serviceProvider;
        return this;
    }
    
    /**
     * Custom parameters based on prerequisites of the selected provider
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service_provider_params")
    public GetAllPayments200ApplicationJSONRootTypeForPaymentsServiceProviderParams serviceProviderParams;
    public GetAllPayments200ApplicationJSONRootTypeForPayments withServiceProviderParams(GetAllPayments200ApplicationJSONRootTypeForPaymentsServiceProviderParams serviceProviderParams) {
        this.serviceProviderParams = serviceProviderParams;
        return this;
    }
    
    /**
     * Status of the payment
     * 
     * - `pending_confirmation`: Payment is pending approvals and confirmation
     * - `processing`: Payment is confirmed, and being processed. Depending on the payment method, this may be instantaneous (e.g. card) or take multiple days (e.g. cheque) 
     * - `succeeded`: Payment is successful. Cash is cleaned in account. 
     * - `cancelled`: Payment cancelled, and any held funds have been returned. 
     * - `failed`: Payment failed due to insufficient funds, invalid card details, network issues etc. 
     */
    @JsonProperty("status")
    public GetAllPayments200ApplicationJSONRootTypeForPaymentsStatusEnum status;
    public GetAllPayments200ApplicationJSONRootTypeForPayments withStatus(GetAllPayments200ApplicationJSONRootTypeForPaymentsStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonProperty("transaction_id")
    public String transactionId;
    public GetAllPayments200ApplicationJSONRootTypeForPayments withTransactionId(String transactionId) {
        this.transactionId = transactionId;
        return this;
    }
    
}
