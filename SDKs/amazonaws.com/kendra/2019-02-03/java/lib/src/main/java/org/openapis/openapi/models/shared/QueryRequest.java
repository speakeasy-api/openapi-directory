/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class QueryRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AttributeFilter")
    public AttributeFilter attributeFilter;

    public QueryRequest withAttributeFilter(AttributeFilter attributeFilter) {
        this.attributeFilter = attributeFilter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentRelevanceOverrideConfigurations")
    public DocumentRelevanceConfiguration[] documentRelevanceOverrideConfigurations;

    public QueryRequest withDocumentRelevanceOverrideConfigurations(DocumentRelevanceConfiguration[] documentRelevanceOverrideConfigurations) {
        this.documentRelevanceOverrideConfigurations = documentRelevanceOverrideConfigurations;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Facets")
    public Facet[] facets;

    public QueryRequest withFacets(Facet[] facets) {
        this.facets = facets;
        return this;
    }
    
    @JsonProperty("IndexId")
    public String indexId;

    public QueryRequest withIndexId(String indexId) {
        this.indexId = indexId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PageNumber")
    public Long pageNumber;

    public QueryRequest withPageNumber(Long pageNumber) {
        this.pageNumber = pageNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PageSize")
    public Long pageSize;

    public QueryRequest withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QueryResultTypeFilter")
    public QueryResultTypeEnum queryResultTypeFilter;

    public QueryRequest withQueryResultTypeFilter(QueryResultTypeEnum queryResultTypeFilter) {
        this.queryResultTypeFilter = queryResultTypeFilter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QueryText")
    public String queryText;

    public QueryRequest withQueryText(String queryText) {
        this.queryText = queryText;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RequestedDocumentAttributes")
    public String[] requestedDocumentAttributes;

    public QueryRequest withRequestedDocumentAttributes(String[] requestedDocumentAttributes) {
        this.requestedDocumentAttributes = requestedDocumentAttributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SortingConfiguration")
    public SortingConfiguration sortingConfiguration;

    public QueryRequest withSortingConfiguration(SortingConfiguration sortingConfiguration) {
        this.sortingConfiguration = sortingConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SpellCorrectionConfiguration")
    public SpellCorrectionConfiguration spellCorrectionConfiguration;

    public QueryRequest withSpellCorrectionConfiguration(SpellCorrectionConfiguration spellCorrectionConfiguration) {
        this.spellCorrectionConfiguration = spellCorrectionConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UserContext")
    public UserContext userContext;

    public QueryRequest withUserContext(UserContext userContext) {
        this.userContext = userContext;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VisitorId")
    public String visitorId;

    public QueryRequest withVisitorId(String visitorId) {
        this.visitorId = visitorId;
        return this;
    }
    
    public QueryRequest(@JsonProperty("IndexId") String indexId) {
        this.indexId = indexId;
  }
}
