"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import structuredmessage as shared_structuredmessage
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AutoscalingEventEventTypeEnum(str, Enum):
    r"""The type of autoscaling event to report."""
    TYPE_UNKNOWN = 'TYPE_UNKNOWN'
    TARGET_NUM_WORKERS_CHANGED = 'TARGET_NUM_WORKERS_CHANGED'
    CURRENT_NUM_WORKERS_CHANGED = 'CURRENT_NUM_WORKERS_CHANGED'
    ACTUATION_FAILURE = 'ACTUATION_FAILURE'
    NO_CHANGE = 'NO_CHANGE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AutoscalingEvent:
    r"""A structured message reporting an autoscaling decision made by the Dataflow service."""
    
    current_num_workers: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentNumWorkers'), 'exclude': lambda f: f is None }})
    r"""The current number of workers the job has."""  
    description: Optional[shared_structuredmessage.StructuredMessage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""A rich message format, including a human readable string, a key for identifying the message, and structured data associated with the message for programmatic consumption."""  
    event_type: Optional[AutoscalingEventEventTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventType'), 'exclude': lambda f: f is None }})
    r"""The type of autoscaling event to report."""  
    target_num_workers: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetNumWorkers'), 'exclude': lambda f: f is None }})
    r"""The target number of workers the worker pool wants to resize to use."""  
    time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('time'), 'exclude': lambda f: f is None }})
    r"""The time this event was emitted to indicate a new target or current num_workers value."""  
    worker_pool: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workerPool'), 'exclude': lambda f: f is None }})
    r"""A short and friendly name for the worker pool this event refers to."""  
    