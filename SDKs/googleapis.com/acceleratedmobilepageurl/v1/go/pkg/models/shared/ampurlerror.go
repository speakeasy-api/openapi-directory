// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AmpURLErrorErrorCodeEnum - The error code of an API call.
type AmpURLErrorErrorCodeEnum string

const (
	AmpURLErrorErrorCodeEnumErrorCodeUnspecified AmpURLErrorErrorCodeEnum = "ERROR_CODE_UNSPECIFIED"
	AmpURLErrorErrorCodeEnumInputURLNotFound     AmpURLErrorErrorCodeEnum = "INPUT_URL_NOT_FOUND"
	AmpURLErrorErrorCodeEnumNoAmpURL             AmpURLErrorErrorCodeEnum = "NO_AMP_URL"
	AmpURLErrorErrorCodeEnumApplicationError     AmpURLErrorErrorCodeEnum = "APPLICATION_ERROR"
	AmpURLErrorErrorCodeEnumURLIsValidAmp        AmpURLErrorErrorCodeEnum = "URL_IS_VALID_AMP"
	AmpURLErrorErrorCodeEnumURLIsInvalidAmp      AmpURLErrorErrorCodeEnum = "URL_IS_INVALID_AMP"
)

func (e AmpURLErrorErrorCodeEnum) ToPointer() *AmpURLErrorErrorCodeEnum {
	return &e
}

func (e *AmpURLErrorErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ERROR_CODE_UNSPECIFIED":
		fallthrough
	case "INPUT_URL_NOT_FOUND":
		fallthrough
	case "NO_AMP_URL":
		fallthrough
	case "APPLICATION_ERROR":
		fallthrough
	case "URL_IS_VALID_AMP":
		fallthrough
	case "URL_IS_INVALID_AMP":
		*e = AmpURLErrorErrorCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AmpURLErrorErrorCodeEnum: %v", v)
	}
}

// AmpURLError - AMP URL Error resource for a requested URL that couldn't be found.
type AmpURLError struct {
	// The error code of an API call.
	ErrorCode *AmpURLErrorErrorCodeEnum `json:"errorCode,omitempty"`
	// An optional descriptive error message.
	ErrorMessage *string `json:"errorMessage,omitempty"`
	// The original non-AMP URL.
	OriginalURL *string `json:"originalUrl,omitempty"`
}
