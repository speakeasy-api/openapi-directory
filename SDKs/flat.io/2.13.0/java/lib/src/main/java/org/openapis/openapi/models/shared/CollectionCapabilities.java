/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CollectionCapabilities - Capabilities the current user has on this collection. Each capability corresponds to a fine-grained action that a user may take.
 */
public class CollectionCapabilities {
    /**
     * Whether the current user can add scores to the collection
     * 
     * If this collection has the `type` `trash`, this property will be set to `false`. Use `DELETE /v2/scores/{score}` to trash a score.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canAddScores")
    public Boolean canAddScores;

    public CollectionCapabilities withCanAddScores(Boolean canAddScores) {
        this.canAddScores = canAddScores;
        return this;
    }
    
    /**
     * Whether the current user can delete the collection
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canDelete")
    public Boolean canDelete;

    public CollectionCapabilities withCanDelete(Boolean canDelete) {
        this.canDelete = canDelete;
        return this;
    }
    
    /**
     * Whether the current user can delete scores from the collection
     * 
     * If this collection has the `type` `trash`, this property will be set to `false`. Use `POST /v2/scores/{score}/untrash` to restore a score.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canDeleteScores")
    public Boolean canDeleteScores;

    public CollectionCapabilities withCanDeleteScores(Boolean canDeleteScores) {
        this.canDeleteScores = canDeleteScores;
        return this;
    }
    
    /**
     * Whether the current user can modify the metadata for the collection
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canEdit")
    public Boolean canEdit;

    public CollectionCapabilities withCanEdit(Boolean canEdit) {
        this.canEdit = canEdit;
        return this;
    }
    
    /**
     * Whether the current user can modify the sharing settings for the collection
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canShare")
    public Boolean canShare;

    public CollectionCapabilities withCanShare(Boolean canShare) {
        this.canShare = canShare;
        return this;
    }
    
    public CollectionCapabilities(){}
}
