// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetListSellersQueryParams struct {
	// Name of the VTEX account that belongs to the marketplace.
	AccountName string `queryParam:"style=form,explode=true,name=accountName"`
	// Environment to use. Used as part of the URL.
	Environment string `queryParam:"style=form,explode=true,name=environment"`
	// The start number of pagination, being `0` the default value.
	From *float64 `queryParam:"style=form,explode=true,name=from"`
	// Groups are defined by keywords that group sellers into categories defined by the marketplace.
	Group *string `queryParam:"style=form,explode=true,name=group "`
	// Filters sellers by the name of who made the integration, if VTEX or an external hub. The possible values for VTEX integrations are: `vtex-sellerportal`, `vtex-seller` and `vtex-franchise`.
	Integration *string `queryParam:"style=form,explode=true,name=integration"`
	// Enables to filter sellers that are active (`true`) or unactive (`false`) in the marketplace.
	IsActive *bool `queryParam:"style=form,explode=true,name=isActive"`
	// The flag `isBetterScope` is used by the VTEX Checkout to simulate shopping carts, products, and shipping only in sellers with the field set as `true`, avoiding performance issues. When used as a query param, `isBetterScope` filters sellers that have the flag set as `true` or `false`.
	IsBetterScope *bool `queryParam:"style=form,explode=true,name=isBetterScope"`
	// When set as `true`, the list returned will be of sellers who have a VTEX store configured. When set as `false`, the list will be of sellers who do not have a VTEX store configured.
	IsVtex *bool `queryParam:"style=form,explode=true,name=isVtex"`
	// Search sellers by a keyword in `sellerId` or `sellerName`.
	Keyword *string `queryParam:"style=form,explode=true,name=keyword"`
	// Filters sellers available for the marketplace's sales channel (or [trade policy](https://help.vtex.com/en/tutorial/how-trade-policies-work--6Xef8PZiFm40kg2STrMkMV)) indicated in this field.
	Sc *string `queryParam:"style=form,explode=true,name=sc"`
	// Filters sellers by their type, which can be regular seller (`1`) or whitelabel seller (`2`).
	SellerType *int64 `queryParam:"style=form,explode=true,name=sellerType"`
	// Narrow the search filtering by the fields: `id`, `name` or `pendingoffers`. The list retrieved can be organized in an ascending (`asc`) or descending (`desc`) order. The standardized format is `{field}:{order}`, and the default value is `id:asc`.
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// The end number of pagination, being `100` the default value.
	To *float64 `queryParam:"style=form,explode=true,name=to"`
}

type GetListSellersHeaders struct {
	// HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand.
	Accept string `header:"style=simple,explode=false,name=Accept"`
	// Type of the content being sent.
	ContentType string `header:"style=simple,explode=false,name=Content-Type"`
}

type GetListSellersRequest struct {
	QueryParams GetListSellersQueryParams
	Headers     GetListSellersHeaders
}

type GetListSellersResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
