"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import virtualnodeserviceprovider as shared_virtualnodeserviceprovider
from ..shared import virtualrouterserviceprovider as shared_virtualrouterserviceprovider
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VirtualServiceProvider:
    r"""An object that represents the provider for a virtual service."""
    
    virtual_node: Optional[shared_virtualnodeserviceprovider.VirtualNodeServiceProvider] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('virtualNode'), 'exclude': lambda f: f is None }})  
    virtual_router: Optional[shared_virtualrouterserviceprovider.VirtualRouterServiceProvider] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('virtualRouter'), 'exclude': lambda f: f is None }})  
    