/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AnswerSummary - An answer summary of a lens review in a workload.
 */
public class AnswerSummary {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ChoiceAnswerSummaries")
    public ChoiceAnswerSummary[] choiceAnswerSummaries;

    public AnswerSummary withChoiceAnswerSummaries(ChoiceAnswerSummary[] choiceAnswerSummaries) {
        this.choiceAnswerSummaries = choiceAnswerSummaries;
        return this;
    }
    
    /**
     * List of choices available for a question.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Choices")
    public Choice[] choices;

    public AnswerSummary withChoices(Choice[] choices) {
        this.choices = choices;
        return this;
    }
    
    /**
     * Defines whether this question is applicable to a lens review.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsApplicable")
    public Boolean isApplicable;

    public AnswerSummary withIsApplicable(Boolean isApplicable) {
        this.isApplicable = isApplicable;
        return this;
    }
    
    /**
     * &lt;p&gt;The ID used to identify a pillar, for example, &lt;code&gt;security&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;A pillar is identified by its &lt;a&gt;PillarReviewSummary$PillarId&lt;/a&gt;.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PillarId")
    public String pillarId;

    public AnswerSummary withPillarId(String pillarId) {
        this.pillarId = pillarId;
        return this;
    }
    
    /**
     * The ID of the question.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QuestionId")
    public String questionId;

    public AnswerSummary withQuestionId(String questionId) {
        this.questionId = questionId;
        return this;
    }
    
    /**
     * The title of the question.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QuestionTitle")
    public String questionTitle;

    public AnswerSummary withQuestionTitle(String questionTitle) {
        this.questionTitle = questionTitle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Reason")
    public AnswerReasonEnum reason;

    public AnswerSummary withReason(AnswerReasonEnum reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * The risk for a given workload, lens review, pillar, or question.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Risk")
    public RiskEnum risk;

    public AnswerSummary withRisk(RiskEnum risk) {
        this.risk = risk;
        return this;
    }
    
    /**
     * &lt;p&gt;List of selected choice IDs in a question answer.&lt;/p&gt; &lt;p&gt;The values entered replace the previously selected choices.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SelectedChoices")
    public String[] selectedChoices;

    public AnswerSummary withSelectedChoices(String[] selectedChoices) {
        this.selectedChoices = selectedChoices;
        return this;
    }
    
    public AnswerSummary(){}
}
