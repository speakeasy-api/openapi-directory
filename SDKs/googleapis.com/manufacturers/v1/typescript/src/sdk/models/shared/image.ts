/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The status of the image. @OutputOnly
 */
export enum ImageStatusEnum {
  StatusUnspecified = "STATUS_UNSPECIFIED",
  PendingProcessing = "PENDING_PROCESSING",
  PendingCrawl = "PENDING_CRAWL",
  Ok = "OK",
  Roboted = "ROBOTED",
  Xroboted = "XROBOTED",
  CrawlError = "CRAWL_ERROR",
  ProcessingError = "PROCESSING_ERROR",
  DecodingError = "DECODING_ERROR",
  TooBig = "TOO_BIG",
  CrawlSkipped = "CRAWL_SKIPPED",
  Hostloaded = "HOSTLOADED",
  Http404 = "HTTP_404",
}

/**
 * The type of the image, i.e., crawled or uploaded. @OutputOnly
 */
export enum ImageTypeEnum {
  TypeUnspecified = "TYPE_UNSPECIFIED",
  Crawled = "CRAWLED",
  Uploaded = "UPLOADED",
}

/**
 * An image.
 */
export class Image extends SpeakeasyBase {
  /**
   * The URL of the image. For crawled images, this is the provided URL. For uploaded images, this is a serving URL from Google if the image has been processed successfully.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "imageUrl" })
  imageUrl?: string;

  /**
   * The status of the image. @OutputOnly
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ImageStatusEnum;

  /**
   * The type of the image, i.e., crawled or uploaded. @OutputOnly
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ImageTypeEnum;
}
