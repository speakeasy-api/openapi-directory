/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class UpdateSecretResponse {
    
    public String contentType;

    public UpdateSecretResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * DecryptionFailure
     */
    
    public Object decryptionFailure;

    public UpdateSecretResponse withDecryptionFailure(Object decryptionFailure) {
        this.decryptionFailure = decryptionFailure;
        return this;
    }
    
    /**
     * EncryptionFailure
     */
    
    public Object encryptionFailure;

    public UpdateSecretResponse withEncryptionFailure(Object encryptionFailure) {
        this.encryptionFailure = encryptionFailure;
        return this;
    }
    
    /**
     * InternalServiceError
     */
    
    public Object internalServiceError;

    public UpdateSecretResponse withInternalServiceError(Object internalServiceError) {
        this.internalServiceError = internalServiceError;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public UpdateSecretResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * InvalidRequestException
     */
    
    public Object invalidRequestException;

    public UpdateSecretResponse withInvalidRequestException(Object invalidRequestException) {
        this.invalidRequestException = invalidRequestException;
        return this;
    }
    
    /**
     * LimitExceededException
     */
    
    public Object limitExceededException;

    public UpdateSecretResponse withLimitExceededException(Object limitExceededException) {
        this.limitExceededException = limitExceededException;
        return this;
    }
    
    /**
     * MalformedPolicyDocumentException
     */
    
    public Object malformedPolicyDocumentException;

    public UpdateSecretResponse withMalformedPolicyDocumentException(Object malformedPolicyDocumentException) {
        this.malformedPolicyDocumentException = malformedPolicyDocumentException;
        return this;
    }
    
    /**
     * PreconditionNotMetException
     */
    
    public Object preconditionNotMetException;

    public UpdateSecretResponse withPreconditionNotMetException(Object preconditionNotMetException) {
        this.preconditionNotMetException = preconditionNotMetException;
        return this;
    }
    
    
    public Integer statusCode;

    public UpdateSecretResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public UpdateSecretResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ResourceExistsException
     */
    
    public Object resourceExistsException;

    public UpdateSecretResponse withResourceExistsException(Object resourceExistsException) {
        this.resourceExistsException = resourceExistsException;
        return this;
    }
    
    /**
     * ResourceNotFoundException
     */
    
    public Object resourceNotFoundException;

    public UpdateSecretResponse withResourceNotFoundException(Object resourceNotFoundException) {
        this.resourceNotFoundException = resourceNotFoundException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.UpdateSecretResponse updateSecretResponse;

    public UpdateSecretResponse withUpdateSecretResponse(org.openapis.openapi.models.shared.UpdateSecretResponse updateSecretResponse) {
        this.updateSecretResponse = updateSecretResponse;
        return this;
    }
    
    public UpdateSecretResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
