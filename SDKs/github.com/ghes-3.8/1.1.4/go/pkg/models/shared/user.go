// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UserSchemasEnum string

const (
	UserSchemasEnumUrnIetfParamsScimSchemasCore20User UserSchemasEnum = "urn:ietf:params:scim:schemas:core:2.0:User"
)

func (e UserSchemasEnum) ToPointer() *UserSchemasEnum {
	return &e
}

func (e *UserSchemasEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "urn:ietf:params:scim:schemas:core:2.0:User":
		*e = UserSchemasEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UserSchemasEnum: %v", v)
	}
}

type User struct {
	// Whether the user active in the IdP.
	Active bool `json:"active"`
	// A human-readable name for the user.
	DisplayName string `json:"displayName"`
	// The emails for the user.
	Emails []UserEmails `json:"emails"`
	// A unique identifier for the resource as defined by the provisioning client.
	ExternalID string    `json:"externalId"`
	Name       *UserName `json:"name,omitempty"`
	// The roles assigned to the user.
	Roles []UserRole `json:"roles,omitempty"`
	// The URIs that are used to indicate the namespaces of the SCIM schemas.
	Schemas []UserSchemasEnum `json:"schemas"`
	// The username for the user.
	UserName string `json:"userName"`
}
