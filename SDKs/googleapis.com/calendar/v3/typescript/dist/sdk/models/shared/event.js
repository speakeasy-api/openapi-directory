"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Event = exports.EventSource = exports.EventReminders = exports.EventOrganizer = exports.EventGadget = exports.EventExtendedProperties = exports.EventCreator = void 0;
var utils_1 = require("../../../internal/utils");
var conferencedata_1 = require("./conferencedata");
var eventattachment_1 = require("./eventattachment");
var eventattendee_1 = require("./eventattendee");
var eventdatetime_1 = require("./eventdatetime");
var eventreminder_1 = require("./eventreminder");
var eventworkinglocationproperties_1 = require("./eventworkinglocationproperties");
var class_transformer_1 = require("class-transformer");
/**
 * The creator of the event. Read-only.
 */
var EventCreator = /** @class */ (function (_super) {
    __extends(EventCreator, _super);
    function EventCreator() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], EventCreator.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "email" }),
        __metadata("design:type", String)
    ], EventCreator.prototype, "email", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], EventCreator.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "self" }),
        __metadata("design:type", Boolean)
    ], EventCreator.prototype, "self", void 0);
    return EventCreator;
}(utils_1.SpeakeasyBase));
exports.EventCreator = EventCreator;
/**
 * Extended properties of the event.
 */
var EventExtendedProperties = /** @class */ (function (_super) {
    __extends(EventExtendedProperties, _super);
    function EventExtendedProperties() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "private" }),
        __metadata("design:type", Object)
    ], EventExtendedProperties.prototype, "private", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "shared" }),
        __metadata("design:type", Object)
    ], EventExtendedProperties.prototype, "shared", void 0);
    return EventExtendedProperties;
}(utils_1.SpeakeasyBase));
exports.EventExtendedProperties = EventExtendedProperties;
/**
 * A gadget that extends this event. Gadgets are deprecated; this structure is instead only used for returning birthday calendar metadata.
 */
var EventGadget = /** @class */ (function (_super) {
    __extends(EventGadget, _super);
    function EventGadget() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "display" }),
        __metadata("design:type", String)
    ], EventGadget.prototype, "display", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "height" }),
        __metadata("design:type", Number)
    ], EventGadget.prototype, "height", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "iconLink" }),
        __metadata("design:type", String)
    ], EventGadget.prototype, "iconLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "link" }),
        __metadata("design:type", String)
    ], EventGadget.prototype, "link", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "preferences" }),
        __metadata("design:type", Object)
    ], EventGadget.prototype, "preferences", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "title" }),
        __metadata("design:type", String)
    ], EventGadget.prototype, "title", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], EventGadget.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "width" }),
        __metadata("design:type", Number)
    ], EventGadget.prototype, "width", void 0);
    return EventGadget;
}(utils_1.SpeakeasyBase));
exports.EventGadget = EventGadget;
/**
 * The organizer of the event. If the organizer is also an attendee, this is indicated with a separate entry in attendees with the organizer field set to True. To change the organizer, use the move operation. Read-only, except when importing an event.
 */
var EventOrganizer = /** @class */ (function (_super) {
    __extends(EventOrganizer, _super);
    function EventOrganizer() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], EventOrganizer.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "email" }),
        __metadata("design:type", String)
    ], EventOrganizer.prototype, "email", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], EventOrganizer.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "self" }),
        __metadata("design:type", Boolean)
    ], EventOrganizer.prototype, "self", void 0);
    return EventOrganizer;
}(utils_1.SpeakeasyBase));
exports.EventOrganizer = EventOrganizer;
/**
 * Information about the event's reminders for the authenticated user.
 */
var EventReminders = /** @class */ (function (_super) {
    __extends(EventReminders, _super);
    function EventReminders() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: eventreminder_1.EventReminder }),
        (0, class_transformer_1.Expose)({ name: "overrides" }),
        (0, class_transformer_1.Type)(function () { return eventreminder_1.EventReminder; }),
        __metadata("design:type", Array)
    ], EventReminders.prototype, "overrides", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "useDefault" }),
        __metadata("design:type", Boolean)
    ], EventReminders.prototype, "useDefault", void 0);
    return EventReminders;
}(utils_1.SpeakeasyBase));
exports.EventReminders = EventReminders;
/**
 * Source from which the event was created. For example, a web page, an email message or any document identifiable by an URL with HTTP or HTTPS scheme. Can only be seen or modified by the creator of the event.
 */
var EventSource = /** @class */ (function (_super) {
    __extends(EventSource, _super);
    function EventSource() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "title" }),
        __metadata("design:type", String)
    ], EventSource.prototype, "title", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], EventSource.prototype, "url", void 0);
    return EventSource;
}(utils_1.SpeakeasyBase));
exports.EventSource = EventSource;
/**
 * Successful response
 */
var Event = /** @class */ (function (_super) {
    __extends(Event, _super);
    function Event() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "anyoneCanAddSelf" }),
        __metadata("design:type", Boolean)
    ], Event.prototype, "anyoneCanAddSelf", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: eventattachment_1.EventAttachment }),
        (0, class_transformer_1.Expose)({ name: "attachments" }),
        (0, class_transformer_1.Type)(function () { return eventattachment_1.EventAttachment; }),
        __metadata("design:type", Array)
    ], Event.prototype, "attachments", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: eventattendee_1.EventAttendee }),
        (0, class_transformer_1.Expose)({ name: "attendees" }),
        (0, class_transformer_1.Type)(function () { return eventattendee_1.EventAttendee; }),
        __metadata("design:type", Array)
    ], Event.prototype, "attendees", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "attendeesOmitted" }),
        __metadata("design:type", Boolean)
    ], Event.prototype, "attendeesOmitted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "colorId" }),
        __metadata("design:type", String)
    ], Event.prototype, "colorId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "conferenceData" }),
        (0, class_transformer_1.Type)(function () { return conferencedata_1.ConferenceData; }),
        __metadata("design:type", conferencedata_1.ConferenceData)
    ], Event.prototype, "conferenceData", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Event.prototype, "created", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creator" }),
        (0, class_transformer_1.Type)(function () { return EventCreator; }),
        __metadata("design:type", EventCreator)
    ], Event.prototype, "creator", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Event.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "end" }),
        (0, class_transformer_1.Type)(function () { return eventdatetime_1.EventDateTime; }),
        __metadata("design:type", eventdatetime_1.EventDateTime)
    ], Event.prototype, "end", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "endTimeUnspecified" }),
        __metadata("design:type", Boolean)
    ], Event.prototype, "endTimeUnspecified", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "etag" }),
        __metadata("design:type", String)
    ], Event.prototype, "etag", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "eventType" }),
        __metadata("design:type", String)
    ], Event.prototype, "eventType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "extendedProperties" }),
        (0, class_transformer_1.Type)(function () { return EventExtendedProperties; }),
        __metadata("design:type", EventExtendedProperties)
    ], Event.prototype, "extendedProperties", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gadget" }),
        (0, class_transformer_1.Type)(function () { return EventGadget; }),
        __metadata("design:type", EventGadget)
    ], Event.prototype, "gadget", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "guestsCanInviteOthers" }),
        __metadata("design:type", Boolean)
    ], Event.prototype, "guestsCanInviteOthers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "guestsCanModify" }),
        __metadata("design:type", Boolean)
    ], Event.prototype, "guestsCanModify", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "guestsCanSeeOtherGuests" }),
        __metadata("design:type", Boolean)
    ], Event.prototype, "guestsCanSeeOtherGuests", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hangoutLink" }),
        __metadata("design:type", String)
    ], Event.prototype, "hangoutLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "htmlLink" }),
        __metadata("design:type", String)
    ], Event.prototype, "htmlLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "iCalUID" }),
        __metadata("design:type", String)
    ], Event.prototype, "iCalUID", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Event.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], Event.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "location" }),
        __metadata("design:type", String)
    ], Event.prototype, "location", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "locked" }),
        __metadata("design:type", Boolean)
    ], Event.prototype, "locked", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "organizer" }),
        (0, class_transformer_1.Type)(function () { return EventOrganizer; }),
        __metadata("design:type", EventOrganizer)
    ], Event.prototype, "organizer", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "originalStartTime" }),
        (0, class_transformer_1.Type)(function () { return eventdatetime_1.EventDateTime; }),
        __metadata("design:type", eventdatetime_1.EventDateTime)
    ], Event.prototype, "originalStartTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "privateCopy" }),
        __metadata("design:type", Boolean)
    ], Event.prototype, "privateCopy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "recurrence" }),
        __metadata("design:type", Array)
    ], Event.prototype, "recurrence", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "recurringEventId" }),
        __metadata("design:type", String)
    ], Event.prototype, "recurringEventId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reminders" }),
        (0, class_transformer_1.Type)(function () { return EventReminders; }),
        __metadata("design:type", EventReminders)
    ], Event.prototype, "reminders", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sequence" }),
        __metadata("design:type", Number)
    ], Event.prototype, "sequence", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "source" }),
        (0, class_transformer_1.Type)(function () { return EventSource; }),
        __metadata("design:type", EventSource)
    ], Event.prototype, "source", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "start" }),
        (0, class_transformer_1.Type)(function () { return eventdatetime_1.EventDateTime; }),
        __metadata("design:type", eventdatetime_1.EventDateTime)
    ], Event.prototype, "start", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], Event.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "summary" }),
        __metadata("design:type", String)
    ], Event.prototype, "summary", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transparency" }),
        __metadata("design:type", String)
    ], Event.prototype, "transparency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updated" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Event.prototype, "updated", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "visibility" }),
        __metadata("design:type", String)
    ], Event.prototype, "visibility", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "workingLocationProperties" }),
        (0, class_transformer_1.Type)(function () { return eventworkinglocationproperties_1.EventWorkingLocationProperties; }),
        __metadata("design:type", eventworkinglocationproperties_1.EventWorkingLocationProperties)
    ], Event.prototype, "workingLocationProperties", void 0);
    return Event;
}(utils_1.SpeakeasyBase));
exports.Event = Event;
