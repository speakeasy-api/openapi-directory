"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import personvo as shared_personvo
from ..shared import producttypevo as shared_producttypevo
from ..shared import specsimplestvo as shared_specsimplestvo
from ..shared import specsimplevo as shared_specsimplevo
from ..shared import spectypevo as shared_spectypevo
from ..shared import uofmsimplevo as shared_uofmsimplevo
from ..shared import v1x1properyvo as shared_v1x1properyvo
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class V1x1SpecDetailVO:
    r"""Java type: com.noosh.nooshapi.vo.v1x1.V1x1SpecDetailVO"""
    
    client_status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_status'), 'exclude': lambda f: f is None }})  
    create_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('create_date'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    created_by: Optional[shared_personvo.PersonVO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_by'), 'exclude': lambda f: f is None }})
    r"""Java type: com.noosh.nooshapi.vo.PersonVO"""  
    first_level_custom_fields: Optional[shared_v1x1properyvo.V1x1ProperyVO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('first_level_custom_fields'), 'exclude': lambda f: f is None }})
    r"""Java type: com.noosh.nooshapi.vo.v1x1.V1x1ProperyVO"""  
    header_custom_fields: Optional[shared_v1x1properyvo.V1x1ProperyVO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('header_custom_fields'), 'exclude': lambda f: f is None }})
    r"""Java type: com.noosh.nooshapi.vo.v1x1.V1x1ProperyVO"""  
    job_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('job_id'), 'exclude': lambda f: f is None }})  
    last_updated: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_updated'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    product_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('product_type'), 'exclude': lambda f: f is None }})  
    product_type_info: Optional[shared_producttypevo.ProductTypeVO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('product_type_info'), 'exclude': lambda f: f is None }})
    r"""Java type: com.noosh.nooshapi.vo.ProductTypeVO"""  
    quantity_1: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity_1'), 'exclude': lambda f: f is None }})  
    quantity_2: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity_2'), 'exclude': lambda f: f is None }})  
    quantity_3: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity_3'), 'exclude': lambda f: f is None }})  
    quantity_4: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity_4'), 'exclude': lambda f: f is None }})  
    quantity_5: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity_5'), 'exclude': lambda f: f is None }})  
    reference_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reference_number'), 'exclude': lambda f: f is None }})  
    second_level_custom_fields: Optional[list[shared_v1x1properyvo.V1x1ProperyVO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('second_level_custom_fields'), 'exclude': lambda f: f is None }})  
    sku: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sku'), 'exclude': lambda f: f is None }})  
    spec_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spec_id'), 'exclude': lambda f: f is None }})  
    spec_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spec_name'), 'exclude': lambda f: f is None }})  
    spec_options: Optional[list[shared_specsimplestvo.SpecSimplestVO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spec_options'), 'exclude': lambda f: f is None }})  
    spec_options_complete: Optional[list[shared_specsimplevo.SpecSimpleVO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spec_options_complete'), 'exclude': lambda f: f is None }})  
    spec_original: Optional[shared_specsimplestvo.SpecSimplestVO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spec_original'), 'exclude': lambda f: f is None }})
    r"""Java type: com.noosh.nooshapi.vo.SpecSimplestVO"""  
    spec_type: Optional[shared_spectypevo.SpecTypeVO] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spec_type'), 'exclude': lambda f: f is None }})
    r"""Java type: com.noosh.nooshapi.vo.SpecTypeVO"""  
    supplier_status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supplier_status'), 'exclude': lambda f: f is None }})  
    uofms: Optional[list[shared_uofmsimplevo.UofmSimpleVO]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uofms'), 'exclude': lambda f: f is None }})  
    user_state: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user_state'), 'exclude': lambda f: f is None }})  
    