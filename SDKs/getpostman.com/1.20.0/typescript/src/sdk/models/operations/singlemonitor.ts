/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class SingleMonitorRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=monitor_uid",
  })
  monitorUid: string;
}

export class SingleMonitor404ApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * Monitor Not Found
 */
export class SingleMonitor404ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => SingleMonitor404ApplicationJSONError)
  error?: SingleMonitor404ApplicationJSONError;
}

export class SingleMonitor200ApplicationJSONMonitorLastRunStatsAssertions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "failed" })
  failed?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;
}

export class SingleMonitor200ApplicationJSONMonitorLastRunStatsRequests extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;
}

export class SingleMonitor200ApplicationJSONMonitorLastRunStats extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "assertions" })
  @Type(() => SingleMonitor200ApplicationJSONMonitorLastRunStatsAssertions)
  assertions?: SingleMonitor200ApplicationJSONMonitorLastRunStatsAssertions;

  @SpeakeasyMetadata()
  @Expose({ name: "requests" })
  @Type(() => SingleMonitor200ApplicationJSONMonitorLastRunStatsRequests)
  requests?: SingleMonitor200ApplicationJSONMonitorLastRunStatsRequests;
}

export class SingleMonitor200ApplicationJSONMonitorLastRun extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "finishedAt" })
  finishedAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "startedAt" })
  startedAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stats" })
  @Type(() => SingleMonitor200ApplicationJSONMonitorLastRunStats)
  stats?: SingleMonitor200ApplicationJSONMonitorLastRunStats;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}

export class SingleMonitor200ApplicationJSONMonitorNotificationsOnError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;
}

export class SingleMonitor200ApplicationJSONMonitorNotificationsOnFailure extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;
}

export class SingleMonitor200ApplicationJSONMonitorNotifications extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: SingleMonitor200ApplicationJSONMonitorNotificationsOnError,
  })
  @Expose({ name: "onError" })
  @Type(() => SingleMonitor200ApplicationJSONMonitorNotificationsOnError)
  onError?: SingleMonitor200ApplicationJSONMonitorNotificationsOnError[];

  @SpeakeasyMetadata({
    elemType: SingleMonitor200ApplicationJSONMonitorNotificationsOnFailure,
  })
  @Expose({ name: "onFailure" })
  @Type(() => SingleMonitor200ApplicationJSONMonitorNotificationsOnFailure)
  onFailure?: SingleMonitor200ApplicationJSONMonitorNotificationsOnFailure[];
}

export class SingleMonitor200ApplicationJSONMonitorOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "followRedirects" })
  followRedirects?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "requestDelay" })
  requestDelay?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "requestTimeout" })
  requestTimeout?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "strictSSL" })
  strictSSL?: boolean;
}

export class SingleMonitor200ApplicationJSONMonitorSchedule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cron" })
  cron?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "nextRun" })
  nextRun?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timezone" })
  timezone?: string;
}

export class SingleMonitor200ApplicationJSONMonitor extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "collectionUid" })
  collectionUid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "distribution" })
  distribution?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "environmentUid" })
  environmentUid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastRun" })
  @Type(() => SingleMonitor200ApplicationJSONMonitorLastRun)
  lastRun?: SingleMonitor200ApplicationJSONMonitorLastRun;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "notifications" })
  @Type(() => SingleMonitor200ApplicationJSONMonitorNotifications)
  notifications?: SingleMonitor200ApplicationJSONMonitorNotifications;

  @SpeakeasyMetadata()
  @Expose({ name: "options" })
  @Type(() => SingleMonitor200ApplicationJSONMonitorOptions)
  options?: SingleMonitor200ApplicationJSONMonitorOptions;

  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  owner?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "schedule" })
  @Type(() => SingleMonitor200ApplicationJSONMonitorSchedule)
  schedule?: SingleMonitor200ApplicationJSONMonitorSchedule;

  @SpeakeasyMetadata()
  @Expose({ name: "uid" })
  uid?: string;
}

/**
 * Successful Response
 */
export class SingleMonitor200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "monitor" })
  @Type(() => SingleMonitor200ApplicationJSONMonitor)
  monitor?: SingleMonitor200ApplicationJSONMonitor;
}

export class SingleMonitorResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful Response
   */
  @SpeakeasyMetadata()
  singleMonitor200ApplicationJSONObject?: SingleMonitor200ApplicationJSON;

  /**
   * Monitor Not Found
   */
  @SpeakeasyMetadata()
  singleMonitor404ApplicationJSONObject?: SingleMonitor404ApplicationJSON;
}
