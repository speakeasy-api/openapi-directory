// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PriceAccuracyRowDeviceTypeEnum - The user's device type.
type PriceAccuracyRowDeviceTypeEnum string

const (
	PriceAccuracyRowDeviceTypeEnumDeviceUnspecified PriceAccuracyRowDeviceTypeEnum = "DEVICE_UNSPECIFIED"
	PriceAccuracyRowDeviceTypeEnumDeviceUnknown     PriceAccuracyRowDeviceTypeEnum = "DEVICE_UNKNOWN"
	PriceAccuracyRowDeviceTypeEnumDesktop           PriceAccuracyRowDeviceTypeEnum = "DESKTOP"
	PriceAccuracyRowDeviceTypeEnumMobile            PriceAccuracyRowDeviceTypeEnum = "MOBILE"
	PriceAccuracyRowDeviceTypeEnumTablet            PriceAccuracyRowDeviceTypeEnum = "TABLET"
)

func (e *PriceAccuracyRowDeviceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DEVICE_UNSPECIFIED":
		fallthrough
	case "DEVICE_UNKNOWN":
		fallthrough
	case "DESKTOP":
		fallthrough
	case "MOBILE":
		fallthrough
	case "TABLET":
		*e = PriceAccuracyRowDeviceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PriceAccuracyRowDeviceTypeEnum: %s", s)
	}
}

// PriceAccuracyRowMismatchReasonEnum - The reason why the fetched price didn't match the cached price.
type PriceAccuracyRowMismatchReasonEnum string

const (
	PriceAccuracyRowMismatchReasonEnumMismatchReasonUnspecified PriceAccuracyRowMismatchReasonEnum = "MISMATCH_REASON_UNSPECIFIED"
	PriceAccuracyRowMismatchReasonEnumMismatchReasonUnknown     PriceAccuracyRowMismatchReasonEnum = "MISMATCH_REASON_UNKNOWN"
	PriceAccuracyRowMismatchReasonEnumTaxMismatch               PriceAccuracyRowMismatchReasonEnum = "TAX_MISMATCH"
	PriceAccuracyRowMismatchReasonEnumRoomUnavailable           PriceAccuracyRowMismatchReasonEnum = "ROOM_UNAVAILABLE"
	PriceAccuracyRowMismatchReasonEnumSiteError                 PriceAccuracyRowMismatchReasonEnum = "SITE_ERROR"
	PriceAccuracyRowMismatchReasonEnumPriceFeedDelayed          PriceAccuracyRowMismatchReasonEnum = "PRICE_FEED_DELAYED"
	PriceAccuracyRowMismatchReasonEnumDiscountMissing           PriceAccuracyRowMismatchReasonEnum = "DISCOUNT_MISSING"
	PriceAccuracyRowMismatchReasonEnumIncorrectDiscountValue    PriceAccuracyRowMismatchReasonEnum = "INCORRECT_DISCOUNT_VALUE"
	PriceAccuracyRowMismatchReasonEnumWrongItinerary            PriceAccuracyRowMismatchReasonEnum = "WRONG_ITINERARY"
)

func (e *PriceAccuracyRowMismatchReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MISMATCH_REASON_UNSPECIFIED":
		fallthrough
	case "MISMATCH_REASON_UNKNOWN":
		fallthrough
	case "TAX_MISMATCH":
		fallthrough
	case "ROOM_UNAVAILABLE":
		fallthrough
	case "SITE_ERROR":
		fallthrough
	case "PRICE_FEED_DELAYED":
		fallthrough
	case "DISCOUNT_MISSING":
		fallthrough
	case "INCORRECT_DISCOUNT_VALUE":
		fallthrough
	case "WRONG_ITINERARY":
		*e = PriceAccuracyRowMismatchReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PriceAccuracyRowMismatchReasonEnum: %s", s)
	}
}

// PriceAccuracyRowSignalSourceEnum - Source of the price accuracy signal.
type PriceAccuracyRowSignalSourceEnum string

const (
	PriceAccuracyRowSignalSourceEnumSignalSourceUnspecified PriceAccuracyRowSignalSourceEnum = "SIGNAL_SOURCE_UNSPECIFIED"
	PriceAccuracyRowSignalSourceEnumSignalSourceUnknown     PriceAccuracyRowSignalSourceEnum = "SIGNAL_SOURCE_UNKNOWN"
	PriceAccuracyRowSignalSourceEnumFetched                 PriceAccuracyRowSignalSourceEnum = "FETCHED"
	PriceAccuracyRowSignalSourceEnumPixel                   PriceAccuracyRowSignalSourceEnum = "PIXEL"
)

func (e *PriceAccuracyRowSignalSourceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SIGNAL_SOURCE_UNSPECIFIED":
		fallthrough
	case "SIGNAL_SOURCE_UNKNOWN":
		fallthrough
	case "FETCHED":
		fallthrough
	case "PIXEL":
		*e = PriceAccuracyRowSignalSourceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PriceAccuracyRowSignalSourceEnum: %s", s)
	}
}

// PriceAccuracyRow - A price accuracy row.
type PriceAccuracyRow struct {
	// The number of adults in the occupancy details of the validation query.
	AdultOccupancy *int `json:"adultOccupancy,omitempty"`
	// True if this row affects the placement of a price. This field has been renamed to “Affects placement” in Hotel Center.
	AffectsScore *bool `json:"affectsScore,omitempty"`
	// A price record.
	CachedPriceRecord *PriceRecord `json:"cachedPriceRecord,omitempty"`
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	CheckinDate *Date `json:"checkinDate,omitempty"`
	// The number of children in the occupancy details of the validation query.
	ChildOccupancy *int `json:"childOccupancy,omitempty"`
	// Time at which an incorrect price is updated to a correct price.
	CorrectionTime *string `json:"correctionTime,omitempty"`
	// The user's device type.
	DeviceType *PriceAccuracyRowDeviceTypeEnum `json:"deviceType,omitempty"`
	// A price record.
	FetchedPriceRecord *PriceRecord `json:"fetchedPriceRecord,omitempty"`
	// The domain of the final page from which prices are read.
	FinalDomain *string `json:"finalDomain,omitempty"`
	// Partner-defined hotel ID.
	Hotel *string `json:"hotel,omitempty"`
	// The country of the hotel (based on address).
	HotelCountryCode *string `json:"hotelCountryCode,omitempty"`
	// Length of stay.
	LengthOfStayDays *int `json:"lengthOfStayDays,omitempty"`
	// The reason why the fetched price didn't match the cached price.
	MismatchReason *PriceAccuracyRowMismatchReasonEnum `json:"mismatchReason,omitempty"`
	// The rate rule of the advertised price for non-public rates.
	RateRuleID *string `json:"rateRuleId,omitempty"`
	// Source of the price accuracy signal.
	SignalSource *PriceAccuracyRowSignalSourceEnum `json:"signalSource,omitempty"`
	// Initial URL visited on the partner website.
	URL *string `json:"url,omitempty"`
	// The user's region.
	UserRegionCode *string `json:"userRegionCode,omitempty"`
}
