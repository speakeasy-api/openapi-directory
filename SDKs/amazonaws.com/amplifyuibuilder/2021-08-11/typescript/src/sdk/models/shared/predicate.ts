/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Stores information for generating Amplify DataStore queries. Use a <code>Predicate</code> to retrieve a subset of the data in a collection.
 */
export class Predicate extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: Predicate })
  @Expose({ name: "and" })
  @Type(() => Predicate)
  and?: Predicate[];

  @SpeakeasyMetadata()
  @Expose({ name: "field" })
  field?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "operand" })
  operand?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "operator" })
  operator?: string;

  @SpeakeasyMetadata({ elemType: Predicate })
  @Expose({ name: "or" })
  @Type(() => Predicate)
  or?: Predicate[];
}
