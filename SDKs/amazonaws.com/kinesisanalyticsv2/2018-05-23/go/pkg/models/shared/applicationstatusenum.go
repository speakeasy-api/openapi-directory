// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ApplicationStatusEnum string

const (
	ApplicationStatusEnumDeleting      ApplicationStatusEnum = "DELETING"
	ApplicationStatusEnumStarting      ApplicationStatusEnum = "STARTING"
	ApplicationStatusEnumStopping      ApplicationStatusEnum = "STOPPING"
	ApplicationStatusEnumReady         ApplicationStatusEnum = "READY"
	ApplicationStatusEnumRunning       ApplicationStatusEnum = "RUNNING"
	ApplicationStatusEnumUpdating      ApplicationStatusEnum = "UPDATING"
	ApplicationStatusEnumAutoscaling   ApplicationStatusEnum = "AUTOSCALING"
	ApplicationStatusEnumForceStopping ApplicationStatusEnum = "FORCE_STOPPING"
	ApplicationStatusEnumRollingBack   ApplicationStatusEnum = "ROLLING_BACK"
	ApplicationStatusEnumMaintenance   ApplicationStatusEnum = "MAINTENANCE"
	ApplicationStatusEnumRolledBack    ApplicationStatusEnum = "ROLLED_BACK"
)

func (e *ApplicationStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DELETING":
		fallthrough
	case "STARTING":
		fallthrough
	case "STOPPING":
		fallthrough
	case "READY":
		fallthrough
	case "RUNNING":
		fallthrough
	case "UPDATING":
		fallthrough
	case "AUTOSCALING":
		fallthrough
	case "FORCE_STOPPING":
		fallthrough
	case "ROLLING_BACK":
		fallthrough
	case "MAINTENANCE":
		fallthrough
	case "ROLLED_BACK":
		*e = ApplicationStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApplicationStatusEnum: %s", s)
	}
}
