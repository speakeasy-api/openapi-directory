// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// AreGamesInProgressFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type AreGamesInProgressFormatEnum string

const (
	AreGamesInProgressFormatEnumXML  AreGamesInProgressFormatEnum = "XML"
	AreGamesInProgressFormatEnumJSON AreGamesInProgressFormatEnum = "JSON"
)

func (e *AreGamesInProgressFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "XML":
		fallthrough
	case "JSON":
		*e = AreGamesInProgressFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AreGamesInProgressFormatEnum: %s", s)
	}
}

type AreGamesInProgressPathParams struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format AreGamesInProgressFormatEnum `pathParam:"style=simple,explode=false,name=format"`
}

type AreGamesInProgressRequest struct {
	PathParams AreGamesInProgressPathParams
}

type AreGamesInProgressResponse struct {
	AreGamesInProgress200ApplicationJSONBoolean *bool
	ContentType                                 string
	StatusCode                                  int
	RawResponse                                 *http.Response
}
