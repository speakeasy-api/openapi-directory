<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * FolderMenuItem - A folder menu item
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class FolderMenuItem
{
    /**
     * Settings for the auto export functionality of a meter
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AutoExportSettings $autoExportSettings
     */
	#[\JMS\Serializer\Annotation\SerializedName('AutoExportSettings')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AutoExportSettings')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AutoExportSettings $autoExportSettings = null;
    
    /**
     * Children folder menu items (sub folder menu items)
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\FolderMenuItem> $children
     */
	#[\JMS\Serializer\Annotation\SerializedName('Children')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\FolderMenuItem>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $children = null;
    
    /**
     * The Description of the folder
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('Description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The folder type of the item
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FolderMenuItemFolderTypeEnum $folderType
     */
	#[\JMS\Serializer\Annotation\SerializedName('FolderType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\FolderMenuItemFolderTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?FolderMenuItemFolderTypeEnum $folderType = null;
    
    /**
     * The path to the Icon of this folder
     * 
     * @var ?string $icon
     */
	#[\JMS\Serializer\Annotation\SerializedName('Icon')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $icon = null;
    
    /**
     * The id of the folder menu item
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('Id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The serial number if the folder menu item is a meter. 
     * 
     *             Serial number is handled as a string, as javascript on client side cannot handle long integers properly.
     * 
     * @var ?string $meterSerialNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('MeterSerialNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $meterSerialNumber = null;
    
    /**
     * The Name of the item
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The ID of the user of this folder (only for foldertype user)
     * 
     * @var ?string $userId
     */
	#[\JMS\Serializer\Annotation\SerializedName('UserId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userId = null;
    
	public function __construct()
	{
		$this->autoExportSettings = null;
		$this->children = null;
		$this->description = null;
		$this->folderType = null;
		$this->icon = null;
		$this->id = null;
		$this->meterSerialNumber = null;
		$this->name = null;
		$this->userId = null;
	}
}
