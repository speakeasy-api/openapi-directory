/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AvailableProducts200ApplicationJSONDataPas - **object** detailing product availability
 * - `pas` stands for Product Availability Schema
 * 
 */
public class AvailableProducts200ApplicationJSONDataPas {
    /**
     * ignore (Viator only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("incompleteQuote")
    public Boolean incompleteQuote;

    public AvailableProducts200ApplicationJSONDataPas withIncompleteQuote(Boolean incompleteQuote) {
        this.incompleteQuote = incompleteQuote;
        return this;
    }
    
    /**
     * **unique alphanumeric identifier** of *this* product
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productCode")
    public String productCode;

    public AvailableProducts200ApplicationJSONDataPas withProductCode(String productCode) {
        this.productCode = productCode;
        return this;
    }
    
    /**
     * ignore (Viator only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("removedChildAges")
    public String[] removedChildAges;

    public AvailableProducts200ApplicationJSONDataPas withRemovedChildAges(String[] removedChildAges) {
        this.removedChildAges = removedChildAges;
        return this;
    }
    
    /**
     * **dictionary** of tour grade alphanumeric codes to tour grade objects
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tourGrades")
    public java.util.Map<String, AvailableProducts200ApplicationJSONDataPasTourGrades> tourGrades;

    public AvailableProducts200ApplicationJSONDataPas withTourGrades(java.util.Map<String, AvailableProducts200ApplicationJSONDataPasTourGrades> tourGrades) {
        this.tourGrades = tourGrades;
        return this;
    }
    
    /**
     * **alphanumeric code** indicating the combination of adults and children being enquired about
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("travellerMix")
    public String travellerMix;

    public AvailableProducts200ApplicationJSONDataPas withTravellerMix(String travellerMix) {
        this.travellerMix = travellerMix;
        return this;
    }
    
    public AvailableProducts200ApplicationJSONDataPas(){}
}
