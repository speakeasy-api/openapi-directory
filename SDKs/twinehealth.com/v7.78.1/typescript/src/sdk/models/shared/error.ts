/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export enum ErrorCodeEnum {
  Forbidden = "Forbidden",
  InvalidParameter = "InvalidParameter",
  InvalidBodyParameter = "InvalidBodyParameter",
  ResourceNotFound = "ResourceNotFound",
  Unauthorized = "Unauthorized",
  InvalidCredentials = "InvalidCredentials",
  InvalidGrantType = "InvalidGrantType",
}

export class ErrorSource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "parameter" })
  parameter?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pointer" })
  pointer?: string;
}

export class ErrorT extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: ErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "detail" })
  detail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  @Type(() => ErrorSource)
  source?: ErrorSource;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}
