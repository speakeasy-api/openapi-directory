/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountAccessTypeEnum } from "./accountaccesstypeenum";
import { AuthenticationSummary } from "./authenticationsummary";
import { DataSourceTypeEnum } from "./datasourcetypeenum";
import { LicenseTypeEnum } from "./licensetypeenum";
import { NetworkAccessConfiguration } from "./networkaccessconfiguration";
import { NotificationDestinationTypeEnum } from "./notificationdestinationtypeenum";
import { PermissionTypeEnum } from "./permissiontypeenum";
import { VpcConfiguration } from "./vpcconfiguration";
import { WorkspaceStatusEnum } from "./workspacestatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A structure containing information about an Amazon Managed Grafana workspace in your account.
 */
export class WorkspaceDescription extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "accountAccessType" })
  accountAccessType?: AccountAccessTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "authentication" })
  @Type(() => AuthenticationSummary)
  authentication: AuthenticationSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "dataSources" })
  dataSources: DataSourceTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "endpoint" })
  endpoint: string;

  @SpeakeasyMetadata()
  @Expose({ name: "freeTrialConsumed" })
  freeTrialConsumed?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "freeTrialExpiration" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  freeTrialExpiration?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "grafanaVersion" })
  grafanaVersion: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "licenseExpiration" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  licenseExpiration?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "licenseType" })
  licenseType?: LicenseTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "modified" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  modified: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "networkAccessControl" })
  @Type(() => NetworkAccessConfiguration)
  networkAccessControl?: NetworkAccessConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "notificationDestinations" })
  notificationDestinations?: NotificationDestinationTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "organizationRoleName" })
  organizationRoleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "organizationalUnits" })
  organizationalUnits?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "permissionType" })
  permissionType?: PermissionTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "stackSetName" })
  stackSetName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: WorkspaceStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "vpcConfiguration" })
  @Type(() => VpcConfiguration)
  vpcConfiguration?: VpcConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "workspaceRoleArn" })
  workspaceRoleArn?: string;
}
