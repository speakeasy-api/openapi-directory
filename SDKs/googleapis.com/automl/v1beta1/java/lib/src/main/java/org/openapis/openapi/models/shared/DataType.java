/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DataType - Indicated the type of data that can be stored in a structured data entity (e.g. a table).
 */
public class DataType {
    /**
     * Indicated the type of data that can be stored in a structured data entity (e.g. a table).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listElementType")
    public DataType listElementType;
    public DataType withListElementType(DataType listElementType) {
        this.listElementType = listElementType;
        return this;
    }
    
    /**
     * If true, this DataType can also be `NULL`. In .CSV files `NULL` value is expressed as an empty string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nullable")
    public Boolean nullable;
    public DataType withNullable(Boolean nullable) {
        this.nullable = nullable;
        return this;
    }
    
    /**
     * `StructType` defines the DataType-s of a STRUCT type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("structType")
    public StructType structType;
    public DataType withStructType(StructType structType) {
        this.structType = structType;
        return this;
    }
    
    /**
     * If type_code == TIMESTAMP then `time_format` provides the format in which that time field is expressed. The time_format must either be one of: * `UNIX_SECONDS` * `UNIX_MILLISECONDS` * `UNIX_MICROSECONDS` * `UNIX_NANOSECONDS` (for respectively number of seconds, milliseconds, microseconds and nanoseconds since start of the Unix epoch); or be written in `strftime` syntax. If time_format is not set, then the default format as described on the type_code is used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeFormat")
    public String timeFormat;
    public DataType withTimeFormat(String timeFormat) {
        this.timeFormat = timeFormat;
        return this;
    }
    
    /**
     * Required. The TypeCode for this type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("typeCode")
    public DataTypeTypeCodeEnum typeCode;
    public DataType withTypeCode(DataTypeTypeCodeEnum typeCode) {
        this.typeCode = typeCode;
        return this;
    }
    
}
