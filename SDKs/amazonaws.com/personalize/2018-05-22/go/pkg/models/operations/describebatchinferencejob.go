// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeBatchInferenceJobXAmzTargetEnum
type DescribeBatchInferenceJobXAmzTargetEnum string

const (
	DescribeBatchInferenceJobXAmzTargetEnumAmazonPersonalizeDescribeBatchInferenceJob DescribeBatchInferenceJobXAmzTargetEnum = "AmazonPersonalize.DescribeBatchInferenceJob"
)

func (e DescribeBatchInferenceJobXAmzTargetEnum) ToPointer() *DescribeBatchInferenceJobXAmzTargetEnum {
	return &e
}

func (e *DescribeBatchInferenceJobXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonPersonalize.DescribeBatchInferenceJob":
		*e = DescribeBatchInferenceJobXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeBatchInferenceJobXAmzTargetEnum: %v", v)
	}
}

type DescribeBatchInferenceJobRequest struct {
	DescribeBatchInferenceJobRequest shared.DescribeBatchInferenceJobRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                   *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                         *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                    *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                       DescribeBatchInferenceJobXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeBatchInferenceJobResponse struct {
	ContentType string
	// Success
	DescribeBatchInferenceJobResponse *shared.DescribeBatchInferenceJobResponse
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
