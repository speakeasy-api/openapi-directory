/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TflApiPresentationEntitiesIdentifier } from "./tflapipresentationentitiesidentifier";
import { Expose, Type } from "class-transformer";

export class TflApiPresentationEntitiesMatchedStop extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "accessibilitySummary" })
  accessibilitySummary?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hasDisruption" })
  hasDisruption?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "icsId" })
  icsId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lat" })
  lat?: number;

  @SpeakeasyMetadata({ elemType: TflApiPresentationEntitiesIdentifier })
  @Expose({ name: "lines" })
  @Type(() => TflApiPresentationEntitiesIdentifier)
  lines?: TflApiPresentationEntitiesIdentifier[];

  @SpeakeasyMetadata()
  @Expose({ name: "lon" })
  lon?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "modes" })
  modes?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "parentId" })
  parentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "routeId" })
  routeId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "stationId" })
  stationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "stopLetter" })
  stopLetter?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stopType" })
  stopType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "topMostParentId" })
  topMostParentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "towards" })
  towards?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "zone" })
  zone?: string;
}
