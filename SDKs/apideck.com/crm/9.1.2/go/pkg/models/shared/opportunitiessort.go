// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OpportunitiesSortByEnum - The field on which to sort the Opportunities
type OpportunitiesSortByEnum string

const (
	OpportunitiesSortByEnumCreatedAt      OpportunitiesSortByEnum = "created_at"
	OpportunitiesSortByEnumUpdatedAt      OpportunitiesSortByEnum = "updated_at"
	OpportunitiesSortByEnumTitle          OpportunitiesSortByEnum = "title"
	OpportunitiesSortByEnumWinProbability OpportunitiesSortByEnum = "win_probability"
	OpportunitiesSortByEnumMonetaryAmount OpportunitiesSortByEnum = "monetary_amount"
	OpportunitiesSortByEnumStatus         OpportunitiesSortByEnum = "status"
)

func (e *OpportunitiesSortByEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "created_at":
		fallthrough
	case "updated_at":
		fallthrough
	case "title":
		fallthrough
	case "win_probability":
		fallthrough
	case "monetary_amount":
		fallthrough
	case "status":
		*e = OpportunitiesSortByEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OpportunitiesSortByEnum: %s", s)
	}
}

// OpportunitiesSort - Apply sorting
type OpportunitiesSort struct {
	// The field on which to sort the Opportunities
	By *OpportunitiesSortByEnum `queryParam:"name=by"`
	// The direction in which to sort the results
	Direction *SortDirectionEnum `queryParam:"name=direction"`
}
