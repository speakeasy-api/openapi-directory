// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SearchLocalGatewayRoutesResultRoutesStateEnum - The state of the route.
type SearchLocalGatewayRoutesResultRoutesStateEnum string

const (
	SearchLocalGatewayRoutesResultRoutesStateEnumPending   SearchLocalGatewayRoutesResultRoutesStateEnum = "pending"
	SearchLocalGatewayRoutesResultRoutesStateEnumActive    SearchLocalGatewayRoutesResultRoutesStateEnum = "active"
	SearchLocalGatewayRoutesResultRoutesStateEnumBlackhole SearchLocalGatewayRoutesResultRoutesStateEnum = "blackhole"
	SearchLocalGatewayRoutesResultRoutesStateEnumDeleting  SearchLocalGatewayRoutesResultRoutesStateEnum = "deleting"
	SearchLocalGatewayRoutesResultRoutesStateEnumDeleted   SearchLocalGatewayRoutesResultRoutesStateEnum = "deleted"
)

func (e SearchLocalGatewayRoutesResultRoutesStateEnum) ToPointer() *SearchLocalGatewayRoutesResultRoutesStateEnum {
	return &e
}

func (e *SearchLocalGatewayRoutesResultRoutesStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "active":
		fallthrough
	case "blackhole":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = SearchLocalGatewayRoutesResultRoutesStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchLocalGatewayRoutesResultRoutesStateEnum: %v", v)
	}
}

// SearchLocalGatewayRoutesResultRoutesTypeEnum - The route type.
type SearchLocalGatewayRoutesResultRoutesTypeEnum string

const (
	SearchLocalGatewayRoutesResultRoutesTypeEnumStatic     SearchLocalGatewayRoutesResultRoutesTypeEnum = "static"
	SearchLocalGatewayRoutesResultRoutesTypeEnumPropagated SearchLocalGatewayRoutesResultRoutesTypeEnum = "propagated"
)

func (e SearchLocalGatewayRoutesResultRoutesTypeEnum) ToPointer() *SearchLocalGatewayRoutesResultRoutesTypeEnum {
	return &e
}

func (e *SearchLocalGatewayRoutesResultRoutesTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "static":
		fallthrough
	case "propagated":
		*e = SearchLocalGatewayRoutesResultRoutesTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchLocalGatewayRoutesResultRoutesTypeEnum: %v", v)
	}
}

// SearchLocalGatewayRoutesResultRoutes - Describes a route for a local gateway route table.
type SearchLocalGatewayRoutesResultRoutes struct {
	CoipPoolID                          *string
	DestinationCidrBlock                *string
	DestinationPrefixListID             *string
	LocalGatewayRouteTableArn           *string
	LocalGatewayRouteTableID            *string
	LocalGatewayVirtualInterfaceGroupID *string
	NetworkInterfaceID                  *string
	OwnerID                             *string
	State                               *SearchLocalGatewayRoutesResultRoutesStateEnum
	SubnetID                            *string
	Type                                *SearchLocalGatewayRoutesResultRoutesTypeEnum
}

// SearchLocalGatewayRoutesResult - Success
type SearchLocalGatewayRoutesResult struct {
	NextToken *string
	Routes    []SearchLocalGatewayRoutesResultRoutes
}
