"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import authenticationmessage as shared_authenticationmessage
from ..shared import heartbeatmessage as shared_heartbeatmessage
from ..shared import marketsubscriptionmessage as shared_marketsubscriptionmessage
from ..shared import ordersubscriptionmessage as shared_ordersubscriptionmessage
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AllRequestTypesExampleOpTypesEnum(str, Enum):
    HEARTBEAT = 'heartbeat'
    AUTHENTICATION = 'authentication'
    MARKET_SUBSCRIPTION = 'marketSubscription'
    ORDER_SUBSCRIPTION = 'orderSubscription'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AllRequestTypesExample:
    r"""Requests are sent to socket"""
    
    authentication: Optional[shared_authenticationmessage.AuthenticationMessage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authentication'), 'exclude': lambda f: f is None }})  
    heartbeat: Optional[shared_heartbeatmessage.HeartbeatMessage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('heartbeat'), 'exclude': lambda f: f is None }})  
    market_subscription: Optional[shared_marketsubscriptionmessage.MarketSubscriptionMessage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('marketSubscription'), 'exclude': lambda f: f is None }})  
    op_types: Optional[AllRequestTypesExampleOpTypesEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('opTypes'), 'exclude': lambda f: f is None }})  
    order_subscription_message: Optional[shared_ordersubscriptionmessage.OrderSubscriptionMessage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderSubscriptionMessage'), 'exclude': lambda f: f is None }})  
    