"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class WebhooksListSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    

@dataclasses.dataclass
class WebhooksListRequest:
    
    app_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_name', 'style': 'simple', 'explode': False }})
    r"""The name of the application"""  
    owner_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner_name', 'style': 'simple', 'explode': False }})
    r"""The name of the owner"""  
    
class WebhooksListDefaultApplicationJSONCodeEnum(str, Enum):
    r"""The status code return by the API. It can be 400 or 404 or 409 or 500."""
    FOUR_HUNDRED = '400'
    FOUR_HUNDRED_AND_FOUR = '404'
    FOUR_HUNDRED_AND_NINE = '409'
    FIVE_HUNDRED = '500'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WebhooksListDefaultApplicationJSON:
    r"""Generic result for any alerting API operation"""
    
    code: WebhooksListDefaultApplicationJSONCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})
    r"""The status code return by the API. It can be 400 or 404 or 409 or 500."""  
    request_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('request_id') }})
    r"""Unique request identifier for tracking"""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""The reason for the request failed"""  
    
class WebhooksList200ApplicationJSONValuesEventTypesEnum(str, Enum):
    r"""Alerting EventTypes enum"""
    NEW_CRASH_GROUP_CREATED = 'newCrashGroupCreated'
    NEW_APP_RELEASED = 'newAppReleased'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WebhooksList200ApplicationJSONValues:
    r"""Alerting webhook"""
    
    event_types: list[WebhooksList200ApplicationJSONValuesEventTypesEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event_types') }})
    r"""Event types enabled for webhook"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""display name of the webhook"""  
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url') }})
    r"""target url of the webhook"""  
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""Allows eanble/disable webhook"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The unique id (UUID) of the webhook"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WebhooksList200ApplicationJSON:
    r"""List of alerting webhooks wrapped as operation result"""
    
    values: list[WebhooksList200ApplicationJSONValues] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('values') }})  
    

@dataclasses.dataclass
class WebhooksListResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    webhooks_list_200_application_json_object: Optional[WebhooksList200ApplicationJSON] = dataclasses.field(default=None)
    r"""Success"""  
    webhooks_list_default_application_json_object: Optional[WebhooksListDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error code with reason"""  
    