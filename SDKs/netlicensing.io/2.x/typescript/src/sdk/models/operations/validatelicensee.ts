/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ValidateLicenseeSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

/**
 * 'Floating' licensing model: check-out or check-in session action, to allocate or return it from/to the pool of available sessions
 */
export enum ValidateLicenseeRequestBodyActionEnum {
  CheckOut = "checkOut",
  CheckIn = "checkIn",
}

export class ValidateLicenseeRequestBody extends SpeakeasyBase {
  /**
   * 'Floating' licensing model: check-out or check-in session action, to allocate or return it from/to the pool of available sessions
   */
  @SpeakeasyMetadata({ data: "form, name=action" })
  action?: ValidateLicenseeRequestBodyActionEnum;

  /**
   * Human-readable name for the auto-created Licensee (will be set as custom Licensee property)
   */
  @SpeakeasyMetadata({ data: "form, name=licenseeName" })
  licenseeName?: string;

  /**
   * 'Node-Locked' licensing model: specifies unique secret
   */
  @SpeakeasyMetadata({ data: "form, name=nodeSecret" })
  nodeSecret?: string;

  /**
   * 'Node-Locked' licensing model: product module number
   */
  @SpeakeasyMetadata({ data: "form, name=productModuleNumber" })
  productModuleNumber?: string;

  /**
   * Product number, must be provided when 'Licensee auto-create' is enabled (see also Product JavaDoc). Identifies the Product to which new Licensee should be added
   */
  @SpeakeasyMetadata({ data: "form, name=productNumber" })
  productNumber?: string;

  /**
   * 'Floating' licensing model: specifies unique session identifier
   */
  @SpeakeasyMetadata({ data: "form, name=sessionId" })
  sessionId?: string;
}

export class ValidateLicenseeRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: ValidateLicenseeRequestBody;

  /**
   * Licensee number with a maximum length of 1000 characters
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=licenseeNumber",
  })
  licenseeNumber: string;
}

export class ValidateLicenseeResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful request
   */
  @SpeakeasyMetadata()
  netlicensing?: shared.Netlicensing;
}
