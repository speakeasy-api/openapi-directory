// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// HoldCorpusEnum - The service to be searched.
type HoldCorpusEnum string

const (
	HoldCorpusEnumCorpusTypeUnspecified HoldCorpusEnum = "CORPUS_TYPE_UNSPECIFIED"
	HoldCorpusEnumDrive                 HoldCorpusEnum = "DRIVE"
	HoldCorpusEnumMail                  HoldCorpusEnum = "MAIL"
	HoldCorpusEnumGroups                HoldCorpusEnum = "GROUPS"
	HoldCorpusEnumHangoutsChat          HoldCorpusEnum = "HANGOUTS_CHAT"
	HoldCorpusEnumVoice                 HoldCorpusEnum = "VOICE"
)

func (e *HoldCorpusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CORPUS_TYPE_UNSPECIFIED":
		fallthrough
	case "DRIVE":
		fallthrough
	case "MAIL":
		fallthrough
	case "GROUPS":
		fallthrough
	case "HANGOUTS_CHAT":
		fallthrough
	case "VOICE":
		*e = HoldCorpusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for HoldCorpusEnum: %s", s)
	}
}

// Hold - A hold. A hold prevents the specified Google Workspace service from purging data for specific accounts or all members of an organizational unit. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.
type Hold struct {
	// If set, the hold applies to the specified accounts and **orgUnit** must be empty.
	Accounts []HeldAccount `json:"accounts,omitempty"`
	// The service to be searched.
	Corpus *HoldCorpusEnum `json:"corpus,omitempty"`
	// The unique immutable ID of the hold. Assigned during creation.
	HoldID *string `json:"holdId,omitempty"`
	// The name of the hold.
	Name *string `json:"name,omitempty"`
	// The organizational unit covered by a hold. This structure is immutable.
	OrgUnit *HeldOrgUnit `json:"orgUnit,omitempty"`
	// Service-specific options for holds.
	Query *CorpusQuery `json:"query,omitempty"`
	// The last time this hold was modified.
	UpdateTime *string `json:"updateTime,omitempty"`
}
