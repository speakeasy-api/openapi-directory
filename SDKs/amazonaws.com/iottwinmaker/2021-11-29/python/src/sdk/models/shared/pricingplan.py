"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import bundleinformation as shared_bundleinformation
from ..shared import pricingmode_enum as shared_pricingmode_enum
from ..shared import updatereason_enum as shared_updatereason_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PricingPlan:
    r"""The pricing plan."""
    
    effective_date_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('effectiveDateTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    pricing_mode: shared_pricingmode_enum.PricingModeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pricingMode') }})  
    update_date_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateDateTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    update_reason: shared_updatereason_enum.UpdateReasonEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateReason') }})  
    billable_entity_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('billableEntityCount'), 'exclude': lambda f: f is None }})  
    bundle_information: Optional[shared_bundleinformation.BundleInformation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bundleInformation'), 'exclude': lambda f: f is None }})  
    