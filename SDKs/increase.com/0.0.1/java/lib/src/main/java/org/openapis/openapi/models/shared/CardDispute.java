/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CardDispute - If unauthorized activity occurs on a card, you can create a Card Dispute and we'll return the funds if appropriate.
 */
public class CardDispute {
    /**
     * If the Card Dispute's status is `accepted`, this will contain details of the successful dispute.
     */
    @JsonProperty("acceptance")
    public CardDisputeCardDisputeAcceptance acceptance;
    public CardDispute withAcceptance(CardDisputeCardDisputeAcceptance acceptance) {
        this.acceptance = acceptance;
        return this;
    }
    
    /**
     * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the Card Dispute was created.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public CardDispute withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The identifier of the Transaction that was disputed.
     */
    @JsonProperty("disputed_transaction_id")
    public String disputedTransactionId;
    public CardDispute withDisputedTransactionId(String disputedTransactionId) {
        this.disputedTransactionId = disputedTransactionId;
        return this;
    }
    
    /**
     * Why you disputed the Transaction in question.
     */
    @JsonProperty("explanation")
    public String explanation;
    public CardDispute withExplanation(String explanation) {
        this.explanation = explanation;
        return this;
    }
    
    /**
     * The Card Dispute identifier.
     */
    @JsonProperty("id")
    public String id;
    public CardDispute withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * If the Card Dispute's status is `rejected`, this will contain details of the unsuccessful dispute.
     */
    @JsonProperty("rejection")
    public CardDisputeCardDisputeRejection rejection;
    public CardDispute withRejection(CardDisputeCardDisputeRejection rejection) {
        this.rejection = rejection;
        return this;
    }
    
    /**
     * The results of the Dispute investigation.
     */
    @JsonProperty("status")
    public CardDisputeStatusEnum status;
    public CardDispute withStatus(CardDisputeStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * A constant representing the object's type. For this resource it will always be `card_dispute`.
     */
    @JsonProperty("type")
    public CardDisputeTypeEnum type;
    public CardDispute withType(CardDisputeTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
