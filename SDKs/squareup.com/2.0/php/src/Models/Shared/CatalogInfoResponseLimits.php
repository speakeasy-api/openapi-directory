<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CatalogInfoResponseLimits
{
    /**
     * The maximum number of object IDs that may be included in a single
     * 
     * `/v2/catalog/batch-delete` request.
     * 
     * @var ?int $batchDeleteMaxObjectIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('batch_delete_max_object_ids')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $batchDeleteMaxObjectIds = null;
    
    /**
     * The maximum number of object IDs that may appear in a `/v2/catalog/batch-retrieve`
     * 
     * request.
     * 
     * @var ?int $batchRetrieveMaxObjectIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('batch_retrieve_max_object_ids')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $batchRetrieveMaxObjectIds = null;
    
    /**
     * The maximum number of objects that may appear within a single batch in a
     * 
     * `/v2/catalog/batch-upsert` request.
     * 
     * @var ?int $batchUpsertMaxObjectsPerBatch
     */
	#[\JMS\Serializer\Annotation\SerializedName('batch_upsert_max_objects_per_batch')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $batchUpsertMaxObjectsPerBatch = null;
    
    /**
     * The maximum number of objects that may appear across all batches in a
     * 
     * `/v2/catalog/batch-upsert` request.
     * 
     * @var ?int $batchUpsertMaxTotalObjects
     */
	#[\JMS\Serializer\Annotation\SerializedName('batch_upsert_max_total_objects')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $batchUpsertMaxTotalObjects = null;
    
    /**
     * The maximum number of results that may be returned in a page of a
     * 
     * `/v2/catalog/search` response.
     * 
     * @var ?int $searchMaxPageLimit
     */
	#[\JMS\Serializer\Annotation\SerializedName('search_max_page_limit')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $searchMaxPageLimit = null;
    
    /**
     * The maximum number of item IDs that may be included in a single
     * 
     * `/v2/catalog/update-item-modifier-lists` request.
     * 
     * @var ?int $updateItemModifierListsMaxItemIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('update_item_modifier_lists_max_item_ids')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $updateItemModifierListsMaxItemIds = null;
    
    /**
     * The maximum number of modifier list IDs to be disabled that may be included in
     * 
     * a single `/v2/catalog/update-item-modifier-lists` request.
     * 
     * @var ?int $updateItemModifierListsMaxModifierListsToDisable
     */
	#[\JMS\Serializer\Annotation\SerializedName('update_item_modifier_lists_max_modifier_lists_to_disable')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $updateItemModifierListsMaxModifierListsToDisable = null;
    
    /**
     * The maximum number of modifier list IDs to be enabled that may be included in
     * 
     * a single `/v2/catalog/update-item-modifier-lists` request.
     * 
     * @var ?int $updateItemModifierListsMaxModifierListsToEnable
     */
	#[\JMS\Serializer\Annotation\SerializedName('update_item_modifier_lists_max_modifier_lists_to_enable')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $updateItemModifierListsMaxModifierListsToEnable = null;
    
    /**
     * The maximum number of item IDs that may be included in a single
     * 
     * `/v2/catalog/update-item-taxes` request.
     * 
     * @var ?int $updateItemTaxesMaxItemIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('update_item_taxes_max_item_ids')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $updateItemTaxesMaxItemIds = null;
    
    /**
     * The maximum number of tax IDs to be disabled that may be included in a single
     * 
     * `/v2/catalog/update-item-taxes` request.
     * 
     * @var ?int $updateItemTaxesMaxTaxesToDisable
     */
	#[\JMS\Serializer\Annotation\SerializedName('update_item_taxes_max_taxes_to_disable')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $updateItemTaxesMaxTaxesToDisable = null;
    
    /**
     * The maximum number of tax IDs to be enabled that may be included in a single
     * 
     * `/v2/catalog/update-item-taxes` request.
     * 
     * @var ?int $updateItemTaxesMaxTaxesToEnable
     */
	#[\JMS\Serializer\Annotation\SerializedName('update_item_taxes_max_taxes_to_enable')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $updateItemTaxesMaxTaxesToEnable = null;
    
	public function __construct()
	{
		$this->batchDeleteMaxObjectIds = null;
		$this->batchRetrieveMaxObjectIds = null;
		$this->batchUpsertMaxObjectsPerBatch = null;
		$this->batchUpsertMaxTotalObjects = null;
		$this->searchMaxPageLimit = null;
		$this->updateItemModifierListsMaxItemIds = null;
		$this->updateItemModifierListsMaxModifierListsToDisable = null;
		$this->updateItemModifierListsMaxModifierListsToEnable = null;
		$this->updateItemTaxesMaxItemIds = null;
		$this->updateItemTaxesMaxTaxesToDisable = null;
		$this->updateItemTaxesMaxTaxesToEnable = null;
	}
}
