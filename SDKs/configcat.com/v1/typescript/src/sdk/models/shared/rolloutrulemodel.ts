/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RolloutRuleComparatorEnum } from "./rolloutrulecomparatorenum";
import { SegmentComparatorEnum } from "./segmentcomparatorenum";
import { Expose } from "class-transformer";

export class RolloutRuleModel extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "comparator" })
  comparator?: RolloutRuleComparatorEnum;

  /**
   * The user attribute to compare.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comparisonAttribute" })
  comparisonAttribute?: string;

  /**
   * The value to compare against.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comparisonValue" })
  comparisonValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "segmentComparator" })
  segmentComparator?: SegmentComparatorEnum;

  /**
   * The segment to compare against.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "segmentId" })
  segmentId?: string;

  /**
   * The value to serve when the comparison matches. It must respect the setting type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: any;
}
