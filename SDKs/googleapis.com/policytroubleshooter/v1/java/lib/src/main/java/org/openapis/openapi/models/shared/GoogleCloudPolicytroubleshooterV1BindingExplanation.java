/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudPolicytroubleshooterV1BindingExplanation - Details about how a binding in a policy affects a principal's ability to use a permission.
 */
public class GoogleCloudPolicytroubleshooterV1BindingExplanation {
    /**
     * Required. Indicates whether _this binding_ provides the specified permission to the specified principal for the specified resource. This field does _not_ indicate whether the principal actually has the permission for the resource. There might be another binding that overrides this binding. To determine whether the principal actually has the permission, use the `access` field in the TroubleshootIamPolicyResponse.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("access")
    public GoogleCloudPolicytroubleshooterV1BindingExplanationAccessEnum access;
    public GoogleCloudPolicytroubleshooterV1BindingExplanation withAccess(GoogleCloudPolicytroubleshooterV1BindingExplanationAccessEnum access) {
        this.access = access;
        return this;
    }
    
    /**
     * Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: "Summary size limit" description: "Determines if a summary is less than 100 chars" expression: "document.summary.size() &lt; 100" Example (Equality): title: "Requestor is owner" description: "Determines if requestor is the document owner" expression: "document.owner == request.auth.claims.email" Example (Logic): title: "Public documents" description: "Determine whether the document should be publicly visible" expression: "document.type != 'private' &amp;&amp; document.type != 'internal'" Example (Data Manipulation): title: "Notification string" description: "Create a notification string with a timestamp." expression: "'New message received at ' + string(document.create_time)" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("condition")
    public GoogleTypeExpr condition;
    public GoogleCloudPolicytroubleshooterV1BindingExplanation withCondition(GoogleTypeExpr condition) {
        this.condition = condition;
        return this;
    }
    
    /**
     * Indicates whether each principal in the binding includes the principal specified in the request, either directly or indirectly. Each key identifies a principal in the binding, and each value indicates whether the principal in the binding includes the principal in the request. For example, suppose that a binding includes the following principals: * `user:alice@example.com` * `group:product-eng@example.com` You want to troubleshoot access for `user:bob@example.com`. This user is a principal of the group `group:product-eng@example.com`. For the first principal in the binding, the key is `user:alice@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_NOT_INCLUDED`. For the second principal in the binding, the key is `group:product-eng@example.com`, and the `membership` field in the value is set to `MEMBERSHIP_INCLUDED`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("memberships")
    public java.util.Map<String, GoogleCloudPolicytroubleshooterV1BindingExplanationAnnotatedMembership> memberships;
    public GoogleCloudPolicytroubleshooterV1BindingExplanation withMemberships(java.util.Map<String, GoogleCloudPolicytroubleshooterV1BindingExplanationAnnotatedMembership> memberships) {
        this.memberships = memberships;
        return this;
    }
    
    /**
     * The relevance of this binding to the overall determination for the entire policy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relevance")
    public GoogleCloudPolicytroubleshooterV1BindingExplanationRelevanceEnum relevance;
    public GoogleCloudPolicytroubleshooterV1BindingExplanation withRelevance(GoogleCloudPolicytroubleshooterV1BindingExplanationRelevanceEnum relevance) {
        this.relevance = relevance;
        return this;
    }
    
    /**
     * The role that this binding grants. For example, `roles/compute.serviceAgent`. For a complete list of predefined IAM roles, as well as the permissions in each role, see https://cloud.google.com/iam/help/roles/reference.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("role")
    public String role;
    public GoogleCloudPolicytroubleshooterV1BindingExplanation withRole(String role) {
        this.role = role;
        return this;
    }
    
    /**
     * Indicates whether the role granted by this binding contains the specified permission.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rolePermission")
    public GoogleCloudPolicytroubleshooterV1BindingExplanationRolePermissionEnum rolePermission;
    public GoogleCloudPolicytroubleshooterV1BindingExplanation withRolePermission(GoogleCloudPolicytroubleshooterV1BindingExplanationRolePermissionEnum rolePermission) {
        this.rolePermission = rolePermission;
        return this;
    }
    
    /**
     * The relevance of the permission's existence, or nonexistence, in the role to the overall determination for the entire policy.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rolePermissionRelevance")
    public GoogleCloudPolicytroubleshooterV1BindingExplanationRolePermissionRelevanceEnum rolePermissionRelevance;
    public GoogleCloudPolicytroubleshooterV1BindingExplanation withRolePermissionRelevance(GoogleCloudPolicytroubleshooterV1BindingExplanationRolePermissionRelevanceEnum rolePermissionRelevance) {
        this.rolePermissionRelevance = rolePermissionRelevance;
        return this;
    }
    
}
