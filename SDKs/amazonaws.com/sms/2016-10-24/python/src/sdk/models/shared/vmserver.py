"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import vmmanagertype_enum as shared_vmmanagertype_enum
from ..shared import vmserveraddress as shared_vmserveraddress
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VMServer:
    r"""Represents a VM server."""
    
    vm_manager_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmManagerName'), 'exclude': lambda f: f is None }})  
    vm_manager_type: Optional[shared_vmmanagertype_enum.VMManagerTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmManagerType'), 'exclude': lambda f: f is None }})  
    vm_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmName'), 'exclude': lambda f: f is None }})  
    vm_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmPath'), 'exclude': lambda f: f is None }})  
    vm_server_address: Optional[shared_vmserveraddress.VMServerAddress] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vmServerAddress'), 'exclude': lambda f: f is None }})  
    