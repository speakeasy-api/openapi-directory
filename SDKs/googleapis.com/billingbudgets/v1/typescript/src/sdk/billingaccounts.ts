/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as utils from "../internal/utils";
import * as operations from "./models/operations";
import * as shared from "./models/shared";
import { AxiosInstance, AxiosRequestConfig, AxiosResponse } from "axios";

export class BillingAccounts {
  _defaultClient: AxiosInstance;
  _securityClient: AxiosInstance;
  _serverURL: string;
  _language: string;
  _sdkVersion: string;
  _genVersion: string;

  constructor(
    defaultClient: AxiosInstance,
    securityClient: AxiosInstance,
    serverURL: string,
    language: string,
    sdkVersion: string,
    genVersion: string
  ) {
    this._defaultClient = defaultClient;
    this._securityClient = securityClient;
    this._serverURL = serverURL;
    this._language = language;
    this._sdkVersion = sdkVersion;
    this._genVersion = genVersion;
  }

  /**
   * Creates a new budget. See [Quotas and limits](https://cloud.google.com/billing/quotas) for more information on the limits of the number of budgets you can create.
   */
  billingbudgetsBillingAccountsBudgetsCreate(
    req: operations.BillingbudgetsBillingAccountsBudgetsCreateRequest,
    security: operations.BillingbudgetsBillingAccountsBudgetsCreateSecurity,
    config?: AxiosRequestConfig
  ): Promise<operations.BillingbudgetsBillingAccountsBudgetsCreateResponse> {
    if (!(req instanceof utils.SpeakeasyBase)) {
      req = new operations.BillingbudgetsBillingAccountsBudgetsCreateRequest(
        req
      );
    }

    const baseURL: string = this._serverURL;
    const url: string = utils.generateURL(baseURL, "/v1/{parent}/budgets", req);

    let [reqBodyHeaders, reqBody]: [object, any] = [{}, {}];

    try {
      [reqBodyHeaders, reqBody] = utils.serializeRequestBody(
        req,
        "googleCloudBillingBudgetsV1BudgetInput",
        "json"
      );
    } catch (e: unknown) {
      if (e instanceof Error) {
        throw new Error(`Error serializing request body, cause: ${e.message}`);
      }
    }
    if (!(security instanceof utils.SpeakeasyBase)) {
      security =
        new operations.BillingbudgetsBillingAccountsBudgetsCreateSecurity(
          security
        );
    }
    const client: AxiosInstance = utils.createSecurityClient(
      this._defaultClient,
      security
    );

    const headers = { ...reqBodyHeaders, ...config?.headers };
    const queryParams: string = utils.serializeQueryParams(req);

    const r = client.request({
      url: url + queryParams,
      method: "post",
      headers: headers,
      data: reqBody,
      ...config,
    });

    return r.then((httpRes: AxiosResponse) => {
      const contentType: string = httpRes?.headers?.["content-type"] ?? "";

      if (httpRes?.status == null)
        throw new Error(`status code not found in response: ${httpRes}`);
      const res: operations.BillingbudgetsBillingAccountsBudgetsCreateResponse =
        new operations.BillingbudgetsBillingAccountsBudgetsCreateResponse({
          statusCode: httpRes.status,
          contentType: contentType,
          rawResponse: httpRes,
        });
      switch (true) {
        case httpRes?.status == 200:
          if (utils.matchContentType(contentType, `application/json`)) {
            res.googleCloudBillingBudgetsV1Budget = utils.objectToClass(
              httpRes?.data,
              shared.GoogleCloudBillingBudgetsV1Budget
            );
          }
          break;
      }

      return res;
    });
  }

  /**
   * Deletes a budget. Returns successfully if already deleted.
   */
  billingbudgetsBillingAccountsBudgetsDelete(
    req: operations.BillingbudgetsBillingAccountsBudgetsDeleteRequest,
    security: operations.BillingbudgetsBillingAccountsBudgetsDeleteSecurity,
    config?: AxiosRequestConfig
  ): Promise<operations.BillingbudgetsBillingAccountsBudgetsDeleteResponse> {
    if (!(req instanceof utils.SpeakeasyBase)) {
      req = new operations.BillingbudgetsBillingAccountsBudgetsDeleteRequest(
        req
      );
    }

    const baseURL: string = this._serverURL;
    const url: string = utils.generateURL(baseURL, "/v1/{name}", req);
    if (!(security instanceof utils.SpeakeasyBase)) {
      security =
        new operations.BillingbudgetsBillingAccountsBudgetsDeleteSecurity(
          security
        );
    }
    const client: AxiosInstance = utils.createSecurityClient(
      this._defaultClient,
      security
    );

    const queryParams: string = utils.serializeQueryParams(req);

    const r = client.request({
      url: url + queryParams,
      method: "delete",
      ...config,
    });

    return r.then((httpRes: AxiosResponse) => {
      const contentType: string = httpRes?.headers?.["content-type"] ?? "";

      if (httpRes?.status == null)
        throw new Error(`status code not found in response: ${httpRes}`);
      const res: operations.BillingbudgetsBillingAccountsBudgetsDeleteResponse =
        new operations.BillingbudgetsBillingAccountsBudgetsDeleteResponse({
          statusCode: httpRes.status,
          contentType: contentType,
          rawResponse: httpRes,
        });
      switch (true) {
        case httpRes?.status == 200:
          if (utils.matchContentType(contentType, `application/json`)) {
            res.googleProtobufEmpty = utils.objectToClass(httpRes?.data);
          }
          break;
      }

      return res;
    });
  }

  /**
   * Returns a budget. WARNING: There are some fields exposed on the Google Cloud Console that aren't available on this API. When reading from the API, you will not see these fields in the return value, though they may have been set in the Cloud Console.
   */
  billingbudgetsBillingAccountsBudgetsGet(
    req: operations.BillingbudgetsBillingAccountsBudgetsGetRequest,
    security: operations.BillingbudgetsBillingAccountsBudgetsGetSecurity,
    config?: AxiosRequestConfig
  ): Promise<operations.BillingbudgetsBillingAccountsBudgetsGetResponse> {
    if (!(req instanceof utils.SpeakeasyBase)) {
      req = new operations.BillingbudgetsBillingAccountsBudgetsGetRequest(req);
    }

    const baseURL: string = this._serverURL;
    const url: string = utils.generateURL(baseURL, "/v1/{name}", req);
    if (!(security instanceof utils.SpeakeasyBase)) {
      security = new operations.BillingbudgetsBillingAccountsBudgetsGetSecurity(
        security
      );
    }
    const client: AxiosInstance = utils.createSecurityClient(
      this._defaultClient,
      security
    );

    const queryParams: string = utils.serializeQueryParams(req);

    const r = client.request({
      url: url + queryParams,
      method: "get",
      ...config,
    });

    return r.then((httpRes: AxiosResponse) => {
      const contentType: string = httpRes?.headers?.["content-type"] ?? "";

      if (httpRes?.status == null)
        throw new Error(`status code not found in response: ${httpRes}`);
      const res: operations.BillingbudgetsBillingAccountsBudgetsGetResponse =
        new operations.BillingbudgetsBillingAccountsBudgetsGetResponse({
          statusCode: httpRes.status,
          contentType: contentType,
          rawResponse: httpRes,
        });
      switch (true) {
        case httpRes?.status == 200:
          if (utils.matchContentType(contentType, `application/json`)) {
            res.googleCloudBillingBudgetsV1Budget = utils.objectToClass(
              httpRes?.data,
              shared.GoogleCloudBillingBudgetsV1Budget
            );
          }
          break;
      }

      return res;
    });
  }

  /**
   * Returns a list of budgets for a billing account. WARNING: There are some fields exposed on the Google Cloud Console that aren't available on this API. When reading from the API, you will not see these fields in the return value, though they may have been set in the Cloud Console.
   */
  billingbudgetsBillingAccountsBudgetsList(
    req: operations.BillingbudgetsBillingAccountsBudgetsListRequest,
    security: operations.BillingbudgetsBillingAccountsBudgetsListSecurity,
    config?: AxiosRequestConfig
  ): Promise<operations.BillingbudgetsBillingAccountsBudgetsListResponse> {
    if (!(req instanceof utils.SpeakeasyBase)) {
      req = new operations.BillingbudgetsBillingAccountsBudgetsListRequest(req);
    }

    const baseURL: string = this._serverURL;
    const url: string = utils.generateURL(baseURL, "/v1/{parent}/budgets", req);
    if (!(security instanceof utils.SpeakeasyBase)) {
      security =
        new operations.BillingbudgetsBillingAccountsBudgetsListSecurity(
          security
        );
    }
    const client: AxiosInstance = utils.createSecurityClient(
      this._defaultClient,
      security
    );

    const queryParams: string = utils.serializeQueryParams(req);

    const r = client.request({
      url: url + queryParams,
      method: "get",
      ...config,
    });

    return r.then((httpRes: AxiosResponse) => {
      const contentType: string = httpRes?.headers?.["content-type"] ?? "";

      if (httpRes?.status == null)
        throw new Error(`status code not found in response: ${httpRes}`);
      const res: operations.BillingbudgetsBillingAccountsBudgetsListResponse =
        new operations.BillingbudgetsBillingAccountsBudgetsListResponse({
          statusCode: httpRes.status,
          contentType: contentType,
          rawResponse: httpRes,
        });
      switch (true) {
        case httpRes?.status == 200:
          if (utils.matchContentType(contentType, `application/json`)) {
            res.googleCloudBillingBudgetsV1ListBudgetsResponse =
              utils.objectToClass(
                httpRes?.data,
                shared.GoogleCloudBillingBudgetsV1ListBudgetsResponse
              );
          }
          break;
      }

      return res;
    });
  }

  /**
   * Updates a budget and returns the updated budget. WARNING: There are some fields exposed on the Google Cloud Console that aren't available on this API. Budget fields that are not exposed in this API will not be changed by this method.
   */
  billingbudgetsBillingAccountsBudgetsPatch(
    req: operations.BillingbudgetsBillingAccountsBudgetsPatchRequest,
    security: operations.BillingbudgetsBillingAccountsBudgetsPatchSecurity,
    config?: AxiosRequestConfig
  ): Promise<operations.BillingbudgetsBillingAccountsBudgetsPatchResponse> {
    if (!(req instanceof utils.SpeakeasyBase)) {
      req = new operations.BillingbudgetsBillingAccountsBudgetsPatchRequest(
        req
      );
    }

    const baseURL: string = this._serverURL;
    const url: string = utils.generateURL(baseURL, "/v1/{name}", req);

    let [reqBodyHeaders, reqBody]: [object, any] = [{}, {}];

    try {
      [reqBodyHeaders, reqBody] = utils.serializeRequestBody(
        req,
        "googleCloudBillingBudgetsV1BudgetInput",
        "json"
      );
    } catch (e: unknown) {
      if (e instanceof Error) {
        throw new Error(`Error serializing request body, cause: ${e.message}`);
      }
    }
    if (!(security instanceof utils.SpeakeasyBase)) {
      security =
        new operations.BillingbudgetsBillingAccountsBudgetsPatchSecurity(
          security
        );
    }
    const client: AxiosInstance = utils.createSecurityClient(
      this._defaultClient,
      security
    );

    const headers = { ...reqBodyHeaders, ...config?.headers };
    const queryParams: string = utils.serializeQueryParams(req);

    const r = client.request({
      url: url + queryParams,
      method: "patch",
      headers: headers,
      data: reqBody,
      ...config,
    });

    return r.then((httpRes: AxiosResponse) => {
      const contentType: string = httpRes?.headers?.["content-type"] ?? "";

      if (httpRes?.status == null)
        throw new Error(`status code not found in response: ${httpRes}`);
      const res: operations.BillingbudgetsBillingAccountsBudgetsPatchResponse =
        new operations.BillingbudgetsBillingAccountsBudgetsPatchResponse({
          statusCode: httpRes.status,
          contentType: contentType,
          rawResponse: httpRes,
        });
      switch (true) {
        case httpRes?.status == 200:
          if (utils.matchContentType(contentType, `application/json`)) {
            res.googleCloudBillingBudgetsV1Budget = utils.objectToClass(
              httpRes?.data,
              shared.GoogleCloudBillingBudgetsV1Budget
            );
          }
          break;
      }

      return res;
    });
  }
}
