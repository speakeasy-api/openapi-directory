// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ImageBuilderStateEnum string

const (
	ImageBuilderStateEnumPending              ImageBuilderStateEnum = "PENDING"
	ImageBuilderStateEnumUpdatingAgent        ImageBuilderStateEnum = "UPDATING_AGENT"
	ImageBuilderStateEnumRunning              ImageBuilderStateEnum = "RUNNING"
	ImageBuilderStateEnumStopping             ImageBuilderStateEnum = "STOPPING"
	ImageBuilderStateEnumStopped              ImageBuilderStateEnum = "STOPPED"
	ImageBuilderStateEnumRebooting            ImageBuilderStateEnum = "REBOOTING"
	ImageBuilderStateEnumSnapshotting         ImageBuilderStateEnum = "SNAPSHOTTING"
	ImageBuilderStateEnumDeleting             ImageBuilderStateEnum = "DELETING"
	ImageBuilderStateEnumFailed               ImageBuilderStateEnum = "FAILED"
	ImageBuilderStateEnumUpdating             ImageBuilderStateEnum = "UPDATING"
	ImageBuilderStateEnumPendingQualification ImageBuilderStateEnum = "PENDING_QUALIFICATION"
)

func (e ImageBuilderStateEnum) ToPointer() *ImageBuilderStateEnum {
	return &e
}

func (e *ImageBuilderStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "UPDATING_AGENT":
		fallthrough
	case "RUNNING":
		fallthrough
	case "STOPPING":
		fallthrough
	case "STOPPED":
		fallthrough
	case "REBOOTING":
		fallthrough
	case "SNAPSHOTTING":
		fallthrough
	case "DELETING":
		fallthrough
	case "FAILED":
		fallthrough
	case "UPDATING":
		fallthrough
	case "PENDING_QUALIFICATION":
		*e = ImageBuilderStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ImageBuilderStateEnum: %v", v)
	}
}
