<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class TypeInfoSchemaInfo
{
    /**
     * The properties that this composite type or base type collection accept as input, represented as a json blob, format is: JSON Schema Draft V4
     * 
     * @var ?string $input
     */
	#[\JMS\Serializer\Annotation\SerializedName('input')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $input = null;
    
    /**
     * The properties that this composite type or base type collection exposes as output, these properties can be used for references, represented as json blob, format is: JSON Schema Draft V4
     * 
     * @var ?string $output
     */
	#[\JMS\Serializer\Annotation\SerializedName('output')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $output = null;
    
	public function __construct()
	{
		$this->input = null;
		$this->output = null;
	}
}
