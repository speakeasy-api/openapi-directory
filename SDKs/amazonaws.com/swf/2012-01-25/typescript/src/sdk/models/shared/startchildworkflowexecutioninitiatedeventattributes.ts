/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChildPolicyEnum } from "./childpolicyenum";
import { TaskList } from "./tasklist";
import { WorkflowType } from "./workflowtype";
import { Expose, Type } from "class-transformer";

/**
 * Provides the details of the <code>StartChildWorkflowExecutionInitiated</code> event.
 */
export class StartChildWorkflowExecutionInitiatedEventAttributes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "childPolicy" })
  childPolicy: ChildPolicyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "control" })
  control?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "decisionTaskCompletedEventId" })
  decisionTaskCompletedEventId: number;

  @SpeakeasyMetadata()
  @Expose({ name: "executionStartToCloseTimeout" })
  executionStartToCloseTimeout?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "input" })
  input?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lambdaRole" })
  lambdaRole?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tagList" })
  tagList?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "taskList" })
  @Type(() => TaskList)
  taskList: TaskList;

  @SpeakeasyMetadata()
  @Expose({ name: "taskPriority" })
  taskPriority?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "taskStartToCloseTimeout" })
  taskStartToCloseTimeout?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "workflowId" })
  workflowId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "workflowType" })
  @Type(() => WorkflowType)
  workflowType: WorkflowType;
}
