/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ComparisonOperatorEnum } from "./comparisonoperatorenum";
import { MetricDimension } from "./metricdimension";
import { StatisticEnum } from "./statisticenum";
import { UnitEnum } from "./unitenum";
import { Expose, Type } from "class-transformer";

/**
 * The definition of a CloudWatch metric alarm, which determines when an automatic scaling activity is triggered. When the defined alarm conditions are satisfied, scaling activity begins.
 */
export class CloudWatchAlarmDefinition extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ComparisonOperator" })
  comparisonOperator: ComparisonOperatorEnum;

  @SpeakeasyMetadata({ elemType: MetricDimension })
  @Expose({ name: "Dimensions" })
  @Type(() => MetricDimension)
  dimensions?: MetricDimension[];

  @SpeakeasyMetadata()
  @Expose({ name: "EvaluationPeriods" })
  evaluationPeriods?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MetricName" })
  metricName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Namespace" })
  namespace?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Period" })
  period: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Statistic" })
  statistic?: StatisticEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Threshold" })
  threshold: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Unit" })
  unit?: UnitEnum;
}
