// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FieldDataTypeEnum - The data type of the Field.
type FieldDataTypeEnum string

const (
	FieldDataTypeEnumDataTypeUnspecified           FieldDataTypeEnum = "DATA_TYPE_UNSPECIFIED"
	FieldDataTypeEnumDataTypeInt                   FieldDataTypeEnum = "DATA_TYPE_INT"
	FieldDataTypeEnumDataTypeSmallint              FieldDataTypeEnum = "DATA_TYPE_SMALLINT"
	FieldDataTypeEnumDataTypeDouble                FieldDataTypeEnum = "DATA_TYPE_DOUBLE"
	FieldDataTypeEnumDataTypeDate                  FieldDataTypeEnum = "DATA_TYPE_DATE"
	FieldDataTypeEnumDataTypeDatetime              FieldDataTypeEnum = "DATA_TYPE_DATETIME"
	FieldDataTypeEnumDataTypeTime                  FieldDataTypeEnum = "DATA_TYPE_TIME"
	FieldDataTypeEnumDataTypeString                FieldDataTypeEnum = "DATA_TYPE_STRING"
	FieldDataTypeEnumDataTypeLong                  FieldDataTypeEnum = "DATA_TYPE_LONG"
	FieldDataTypeEnumDataTypeBoolean               FieldDataTypeEnum = "DATA_TYPE_BOOLEAN"
	FieldDataTypeEnumDataTypeDecimal               FieldDataTypeEnum = "DATA_TYPE_DECIMAL"
	FieldDataTypeEnumDataTypeUUID                  FieldDataTypeEnum = "DATA_TYPE_UUID"
	FieldDataTypeEnumDataTypeBlob                  FieldDataTypeEnum = "DATA_TYPE_BLOB"
	FieldDataTypeEnumDataTypeBit                   FieldDataTypeEnum = "DATA_TYPE_BIT"
	FieldDataTypeEnumDataTypeTinyint               FieldDataTypeEnum = "DATA_TYPE_TINYINT"
	FieldDataTypeEnumDataTypeInteger               FieldDataTypeEnum = "DATA_TYPE_INTEGER"
	FieldDataTypeEnumDataTypeBigint                FieldDataTypeEnum = "DATA_TYPE_BIGINT"
	FieldDataTypeEnumDataTypeFloat                 FieldDataTypeEnum = "DATA_TYPE_FLOAT"
	FieldDataTypeEnumDataTypeReal                  FieldDataTypeEnum = "DATA_TYPE_REAL"
	FieldDataTypeEnumDataTypeNumeric               FieldDataTypeEnum = "DATA_TYPE_NUMERIC"
	FieldDataTypeEnumDataTypeChar                  FieldDataTypeEnum = "DATA_TYPE_CHAR"
	FieldDataTypeEnumDataTypeVarchar               FieldDataTypeEnum = "DATA_TYPE_VARCHAR"
	FieldDataTypeEnumDataTypeLongvarchar           FieldDataTypeEnum = "DATA_TYPE_LONGVARCHAR"
	FieldDataTypeEnumDataTypeTimestamp             FieldDataTypeEnum = "DATA_TYPE_TIMESTAMP"
	FieldDataTypeEnumDataTypeNchar                 FieldDataTypeEnum = "DATA_TYPE_NCHAR"
	FieldDataTypeEnumDataTypeNvarchar              FieldDataTypeEnum = "DATA_TYPE_NVARCHAR"
	FieldDataTypeEnumDataTypeLongnvarchar          FieldDataTypeEnum = "DATA_TYPE_LONGNVARCHAR"
	FieldDataTypeEnumDataTypeNull                  FieldDataTypeEnum = "DATA_TYPE_NULL"
	FieldDataTypeEnumDataTypeOther                 FieldDataTypeEnum = "DATA_TYPE_OTHER"
	FieldDataTypeEnumDataTypeJavaObject            FieldDataTypeEnum = "DATA_TYPE_JAVA_OBJECT"
	FieldDataTypeEnumDataTypeDistinct              FieldDataTypeEnum = "DATA_TYPE_DISTINCT"
	FieldDataTypeEnumDataTypeStruct                FieldDataTypeEnum = "DATA_TYPE_STRUCT"
	FieldDataTypeEnumDataTypeArray                 FieldDataTypeEnum = "DATA_TYPE_ARRAY"
	FieldDataTypeEnumDataTypeClob                  FieldDataTypeEnum = "DATA_TYPE_CLOB"
	FieldDataTypeEnumDataTypeRef                   FieldDataTypeEnum = "DATA_TYPE_REF"
	FieldDataTypeEnumDataTypeDatalink              FieldDataTypeEnum = "DATA_TYPE_DATALINK"
	FieldDataTypeEnumDataTypeRowid                 FieldDataTypeEnum = "DATA_TYPE_ROWID"
	FieldDataTypeEnumDataTypeBinary                FieldDataTypeEnum = "DATA_TYPE_BINARY"
	FieldDataTypeEnumDataTypeVarbinary             FieldDataTypeEnum = "DATA_TYPE_VARBINARY"
	FieldDataTypeEnumDataTypeLongvarbinary         FieldDataTypeEnum = "DATA_TYPE_LONGVARBINARY"
	FieldDataTypeEnumDataTypeNclob                 FieldDataTypeEnum = "DATA_TYPE_NCLOB"
	FieldDataTypeEnumDataTypeSqlxml                FieldDataTypeEnum = "DATA_TYPE_SQLXML"
	FieldDataTypeEnumDataTypeRefCursor             FieldDataTypeEnum = "DATA_TYPE_REF_CURSOR"
	FieldDataTypeEnumDataTypeTimeWithTimezone      FieldDataTypeEnum = "DATA_TYPE_TIME_WITH_TIMEZONE"
	FieldDataTypeEnumDataTypeTimestampWithTimezone FieldDataTypeEnum = "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE"
)

func (e FieldDataTypeEnum) ToPointer() *FieldDataTypeEnum {
	return &e
}

func (e *FieldDataTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DATA_TYPE_UNSPECIFIED":
		fallthrough
	case "DATA_TYPE_INT":
		fallthrough
	case "DATA_TYPE_SMALLINT":
		fallthrough
	case "DATA_TYPE_DOUBLE":
		fallthrough
	case "DATA_TYPE_DATE":
		fallthrough
	case "DATA_TYPE_DATETIME":
		fallthrough
	case "DATA_TYPE_TIME":
		fallthrough
	case "DATA_TYPE_STRING":
		fallthrough
	case "DATA_TYPE_LONG":
		fallthrough
	case "DATA_TYPE_BOOLEAN":
		fallthrough
	case "DATA_TYPE_DECIMAL":
		fallthrough
	case "DATA_TYPE_UUID":
		fallthrough
	case "DATA_TYPE_BLOB":
		fallthrough
	case "DATA_TYPE_BIT":
		fallthrough
	case "DATA_TYPE_TINYINT":
		fallthrough
	case "DATA_TYPE_INTEGER":
		fallthrough
	case "DATA_TYPE_BIGINT":
		fallthrough
	case "DATA_TYPE_FLOAT":
		fallthrough
	case "DATA_TYPE_REAL":
		fallthrough
	case "DATA_TYPE_NUMERIC":
		fallthrough
	case "DATA_TYPE_CHAR":
		fallthrough
	case "DATA_TYPE_VARCHAR":
		fallthrough
	case "DATA_TYPE_LONGVARCHAR":
		fallthrough
	case "DATA_TYPE_TIMESTAMP":
		fallthrough
	case "DATA_TYPE_NCHAR":
		fallthrough
	case "DATA_TYPE_NVARCHAR":
		fallthrough
	case "DATA_TYPE_LONGNVARCHAR":
		fallthrough
	case "DATA_TYPE_NULL":
		fallthrough
	case "DATA_TYPE_OTHER":
		fallthrough
	case "DATA_TYPE_JAVA_OBJECT":
		fallthrough
	case "DATA_TYPE_DISTINCT":
		fallthrough
	case "DATA_TYPE_STRUCT":
		fallthrough
	case "DATA_TYPE_ARRAY":
		fallthrough
	case "DATA_TYPE_CLOB":
		fallthrough
	case "DATA_TYPE_REF":
		fallthrough
	case "DATA_TYPE_DATALINK":
		fallthrough
	case "DATA_TYPE_ROWID":
		fallthrough
	case "DATA_TYPE_BINARY":
		fallthrough
	case "DATA_TYPE_VARBINARY":
		fallthrough
	case "DATA_TYPE_LONGVARBINARY":
		fallthrough
	case "DATA_TYPE_NCLOB":
		fallthrough
	case "DATA_TYPE_SQLXML":
		fallthrough
	case "DATA_TYPE_REF_CURSOR":
		fallthrough
	case "DATA_TYPE_TIME_WITH_TIMEZONE":
		fallthrough
	case "DATA_TYPE_TIMESTAMP_WITH_TIMEZONE":
		*e = FieldDataTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FieldDataTypeEnum: %v", v)
	}
}

// Field - Metadata of an entity field.
type Field struct {
	// The following map contains fields that are not explicitly mentioned above,this give connectors the flexibility to add new metadata fields.
	AdditionalDetails map[string]interface{} `json:"additionalDetails,omitempty"`
	// The data type of the Field.
	DataType *FieldDataTypeEnum `json:"dataType,omitempty"`
	// The following field specifies the default value of the Field provided by the external system if a value is not provided.
	DefaultValue interface{} `json:"defaultValue,omitempty"`
	// A brief description of the Field.
	Description *string `json:"description,omitempty"`
	// Name of the Field.
	Field *string `json:"field,omitempty"`
	// The following boolean field specifies if the current Field acts as a primary key or id if the parent is of type entity.
	Key *bool `json:"key,omitempty"`
	// Specifies whether a null value is allowed.
	Nullable *bool `json:"nullable,omitempty"`
	// Specifies if the Field is readonly.
	Readonly *bool `json:"readonly,omitempty"`
}
