/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListDisputesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

export class ListDisputesRequest extends SpeakeasyBase {
  /**
   * A pagination cursor returned by a previous call to this endpoint.
   *
   * @remarks
   * Provide this cursor to retrieve the next set of results for the original query.
   * For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=cursor",
  })
  cursor?: string;

  /**
   * The ID of the location for which to return a list of disputes. If not specified, the endpoint returns
   *
   * @remarks
   * all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`, or `LOST`) associated with all locations.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=location_id",
  })
  locationId?: string;

  /**
   * The dispute states to filter the result.
   *
   * @remarks
   * If not specified, the endpoint returns all open disputes (the dispute status is not `INQUIRY_CLOSED`, `WON`,
   * or `LOST`).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=states",
  })
  states?: string;
}

export class ListDisputesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listDisputesResponse?: shared.ListDisputesResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
