// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type SetTextUsingPOSTQueryParams struct {
	PadID *string `queryParam:"style=form,explode=true,name=padID"`
	Text  *string `queryParam:"style=form,explode=true,name=text"`
}

type SetTextUsingPOSTRequest struct {
	QueryParams SetTextUsingPOSTQueryParams
}

// SetTextUsingPOST500ApplicationJSON - internal api error (code 2)
type SetTextUsingPOST500ApplicationJSON struct {
	Code    *int64                 `json:"code,omitempty"`
	Data    map[string]interface{} `json:"data,omitempty"`
	Message *string                `json:"message,omitempty"`
}

// SetTextUsingPOST401ApplicationJSON - no or wrong API key (code 4)
type SetTextUsingPOST401ApplicationJSON struct {
	Code    *int64                 `json:"code,omitempty"`
	Data    map[string]interface{} `json:"data,omitempty"`
	Message *string                `json:"message,omitempty"`
}

// SetTextUsingPOST400ApplicationJSON - generic api error (code 1)
type SetTextUsingPOST400ApplicationJSON struct {
	Code    *int64                 `json:"code,omitempty"`
	Data    map[string]interface{} `json:"data,omitempty"`
	Message *string                `json:"message,omitempty"`
}

// SetTextUsingPOST200ApplicationJSON - ok (code 0)
type SetTextUsingPOST200ApplicationJSON struct {
	Code    *int64                 `json:"code,omitempty"`
	Data    map[string]interface{} `json:"data,omitempty"`
	Message *string                `json:"message,omitempty"`
}

type SetTextUsingPOSTResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// ok (code 0)
	SetTextUsingPOST200ApplicationJSONObject *SetTextUsingPOST200ApplicationJSON
	// generic api error (code 1)
	SetTextUsingPOST400ApplicationJSONObject *SetTextUsingPOST400ApplicationJSON
	// no or wrong API key (code 4)
	SetTextUsingPOST401ApplicationJSONObject *SetTextUsingPOST401ApplicationJSON
	// internal api error (code 2)
	SetTextUsingPOST500ApplicationJSONObject *SetTextUsingPOST500ApplicationJSON
}
