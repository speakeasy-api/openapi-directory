// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteServiceXAmzTargetEnum
type DeleteServiceXAmzTargetEnum string

const (
	DeleteServiceXAmzTargetEnumAmazonEc2ContainerServiceV20141113DeleteService DeleteServiceXAmzTargetEnum = "AmazonEC2ContainerServiceV20141113.DeleteService"
)

func (e DeleteServiceXAmzTargetEnum) ToPointer() *DeleteServiceXAmzTargetEnum {
	return &e
}

func (e *DeleteServiceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonEC2ContainerServiceV20141113.DeleteService":
		*e = DeleteServiceXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteServiceXAmzTargetEnum: %v", v)
	}
}

type DeleteServiceRequest struct {
	DeleteServiceRequest shared.DeleteServiceRequest `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           DeleteServiceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteServiceResponse struct {
	// ClientException
	ClientException interface{}
	// ClusterNotFoundException
	ClusterNotFoundException interface{}
	ContentType              string
	// Success
	DeleteServiceResponse *shared.DeleteServiceResponse
	// InvalidParameterException
	InvalidParameterException interface{}
	// ServerException
	ServerException interface{}
	// ServiceNotFoundException
	ServiceNotFoundException interface{}
	StatusCode               int
	RawResponse              *http.Response
}
