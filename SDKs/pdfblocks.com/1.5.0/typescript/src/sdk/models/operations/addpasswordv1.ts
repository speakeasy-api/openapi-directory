/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The algorithm used to encrypt the PDF document.
 */
export enum AddPasswordV1RequestBodyEncryptionAlgorithmEnum {
  Aes128 = "AES-128",
  Aes256 = "AES-256",
}

export class AddPasswordV1RequestBodyFile extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, content=true" })
  content: Uint8Array;

  @SpeakeasyMetadata({ data: "multipart_form, name=file" })
  file: string;
}

export class AddPasswordV1RequestBody extends SpeakeasyBase {
  /**
   * The algorithm used to encrypt the PDF document.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=encryption_algorithm" })
  encryptionAlgorithm?: AddPasswordV1RequestBodyEncryptionAlgorithmEnum;

  /**
   * The input PDF document
   */
  @SpeakeasyMetadata({ data: "multipart_form, file=true" })
  file: AddPasswordV1RequestBodyFile;

  /**
   * The password required to open the file.
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=password" })
  password: string;
}

/**
 * Error
 */
export class AddPasswordV14XXApplicationProblemPlusJson extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "errors" })
  errors?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class AddPasswordV1Response extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The document was processed succesfully.
   */
  @SpeakeasyMetadata()
  addPasswordV1200ApplicationPdfBinaryString?: Uint8Array;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  addPasswordV14XXApplicationProblemPlusJsonObject?: AddPasswordV14XXApplicationProblemPlusJson;
}
