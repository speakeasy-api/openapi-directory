// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum - The type of the scope.
type DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum string

const (
	DescribeIpamScopesResultIpamScopesIpamScopeTypeEnumPublic  DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum = "public"
	DescribeIpamScopesResultIpamScopesIpamScopeTypeEnumPrivate DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum = "private"
)

func (e DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum) ToPointer() *DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum {
	return &e
}

func (e *DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "public":
		fallthrough
	case "private":
		*e = DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum: %v", v)
	}
}

// DescribeIpamScopesResultIpamScopesStateEnum - The state of the IPAM scope.
type DescribeIpamScopesResultIpamScopesStateEnum string

const (
	DescribeIpamScopesResultIpamScopesStateEnumCreateInProgress  DescribeIpamScopesResultIpamScopesStateEnum = "create-in-progress"
	DescribeIpamScopesResultIpamScopesStateEnumCreateComplete    DescribeIpamScopesResultIpamScopesStateEnum = "create-complete"
	DescribeIpamScopesResultIpamScopesStateEnumCreateFailed      DescribeIpamScopesResultIpamScopesStateEnum = "create-failed"
	DescribeIpamScopesResultIpamScopesStateEnumModifyInProgress  DescribeIpamScopesResultIpamScopesStateEnum = "modify-in-progress"
	DescribeIpamScopesResultIpamScopesStateEnumModifyComplete    DescribeIpamScopesResultIpamScopesStateEnum = "modify-complete"
	DescribeIpamScopesResultIpamScopesStateEnumModifyFailed      DescribeIpamScopesResultIpamScopesStateEnum = "modify-failed"
	DescribeIpamScopesResultIpamScopesStateEnumDeleteInProgress  DescribeIpamScopesResultIpamScopesStateEnum = "delete-in-progress"
	DescribeIpamScopesResultIpamScopesStateEnumDeleteComplete    DescribeIpamScopesResultIpamScopesStateEnum = "delete-complete"
	DescribeIpamScopesResultIpamScopesStateEnumDeleteFailed      DescribeIpamScopesResultIpamScopesStateEnum = "delete-failed"
	DescribeIpamScopesResultIpamScopesStateEnumIsolateInProgress DescribeIpamScopesResultIpamScopesStateEnum = "isolate-in-progress"
	DescribeIpamScopesResultIpamScopesStateEnumIsolateComplete   DescribeIpamScopesResultIpamScopesStateEnum = "isolate-complete"
	DescribeIpamScopesResultIpamScopesStateEnumRestoreInProgress DescribeIpamScopesResultIpamScopesStateEnum = "restore-in-progress"
)

func (e DescribeIpamScopesResultIpamScopesStateEnum) ToPointer() *DescribeIpamScopesResultIpamScopesStateEnum {
	return &e
}

func (e *DescribeIpamScopesResultIpamScopesStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "create-in-progress":
		fallthrough
	case "create-complete":
		fallthrough
	case "create-failed":
		fallthrough
	case "modify-in-progress":
		fallthrough
	case "modify-complete":
		fallthrough
	case "modify-failed":
		fallthrough
	case "delete-in-progress":
		fallthrough
	case "delete-complete":
		fallthrough
	case "delete-failed":
		fallthrough
	case "isolate-in-progress":
		fallthrough
	case "isolate-complete":
		fallthrough
	case "restore-in-progress":
		*e = DescribeIpamScopesResultIpamScopesStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeIpamScopesResultIpamScopesStateEnum: %v", v)
	}
}

// DescribeIpamScopesResultIpamScopesTags - Describes a tag.
type DescribeIpamScopesResultIpamScopesTags struct {
	Key   *string
	Value *string
}

// DescribeIpamScopesResultIpamScopes - <p>In IPAM, a scope is the highest-level container within IPAM. An IPAM contains two default scopes. Each scope represents the IP space for a single network. The private scope is intended for all private IP address space. The public scope is intended for all public IP address space. Scopes enable you to reuse IP addresses across multiple unconnected networks without causing IP address overlap or conflict.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/vpc/latest/ipam/how-it-works-ipam.html">How IPAM works</a> in the <i>Amazon VPC IPAM User Guide</i>.</p>
type DescribeIpamScopesResultIpamScopes struct {
	Description   *string
	IpamArn       *string
	IpamRegion    *string
	IpamScopeArn  *string
	IpamScopeID   *string
	IpamScopeType *DescribeIpamScopesResultIpamScopesIpamScopeTypeEnum
	IsDefault     *bool
	OwnerID       *string
	PoolCount     *int64
	State         *DescribeIpamScopesResultIpamScopesStateEnum
	Tags          []DescribeIpamScopesResultIpamScopesTags
}

// DescribeIpamScopesResult - Success
type DescribeIpamScopesResult struct {
	IpamScopes []DescribeIpamScopesResultIpamScopes
	NextToken  *string
}
