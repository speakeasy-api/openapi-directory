/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Type of this contact.
 */
export enum OrderContactContactTypeEnum {
  PlanningOrderContactBuyerContact = "PLANNING_ORDER_CONTACT_BUYER_CONTACT",
  PlanningOrderContactBuyerBillingContact = "PLANNING_ORDER_CONTACT_BUYER_BILLING_CONTACT",
  PlanningOrderContactSellerContact = "PLANNING_ORDER_CONTACT_SELLER_CONTACT",
}

/**
 * Contact of an order.
 */
export class OrderContact extends SpeakeasyBase {
  /**
   * Free-form information about this contact. It could be any information related to this contact in addition to type, title, name, and signature user profile ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contactInfo" })
  contactInfo?: string;

  /**
   * Name of this contact.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contactName" })
  contactName?: string;

  /**
   * Title of this contact.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contactTitle" })
  contactTitle?: string;

  /**
   * Type of this contact.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contactType" })
  contactType?: OrderContactContactTypeEnum;

  /**
   * ID of the user profile containing the signature that will be embedded into order documents.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "signatureUserProfileId" })
  signatureUserProfileId?: string;
}
