/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProvisionedProductStatusEnum } from "./provisionedproductstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Information about a provisioned product.
 */
export class ProvisionedProductDetail extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IdempotencyToken" })
  idempotencyToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastProvisioningRecordId" })
  lastProvisioningRecordId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastRecordId" })
  lastRecordId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastSuccessfulProvisioningRecordId" })
  lastSuccessfulProvisioningRecordId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LaunchRoleArn" })
  launchRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProductId" })
  productId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProvisioningArtifactId" })
  provisioningArtifactId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: ProvisionedProductStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusMessage" })
  statusMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: string;
}
