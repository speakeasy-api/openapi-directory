"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudchannelv1repricingadjustment as shared_googlecloudchannelv1repricingadjustment
from ..shared import googlecloudchannelv1repricingcondition as shared_googlecloudchannelv1repricingcondition
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudChannelV1ConditionalOverrideRebillingBasisEnum(str, Enum):
    r"""Required. The RebillingBasis to use for the applied override. Shows the relative cost based on your repricing costs."""
    REBILLING_BASIS_UNSPECIFIED = 'REBILLING_BASIS_UNSPECIFIED'
    COST_AT_LIST = 'COST_AT_LIST'
    DIRECT_CUSTOMER_COST = 'DIRECT_CUSTOMER_COST'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudChannelV1ConditionalOverride:
    r"""Specifies the override to conditionally apply."""
    
    adjustment: Optional[shared_googlecloudchannelv1repricingadjustment.GoogleCloudChannelV1RepricingAdjustment] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('adjustment'), 'exclude': lambda f: f is None }})
    r"""A type that represents the various adjustments you can apply to a bill."""  
    rebilling_basis: Optional[GoogleCloudChannelV1ConditionalOverrideRebillingBasisEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rebillingBasis'), 'exclude': lambda f: f is None }})
    r"""Required. The RebillingBasis to use for the applied override. Shows the relative cost based on your repricing costs."""  
    repricing_condition: Optional[shared_googlecloudchannelv1repricingcondition.GoogleCloudChannelV1RepricingCondition] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repricingCondition'), 'exclude': lambda f: f is None }})
    r"""Represents the various repricing conditions you can use for a conditional override."""  
    