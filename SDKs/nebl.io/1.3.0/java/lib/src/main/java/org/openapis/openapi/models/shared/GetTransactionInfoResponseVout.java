/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetTransactionInfoResponseVout {
    /**
     * Blockheight of this transaction
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blockheight")
    public Double blockheight;
    public GetTransactionInfoResponseVout withBlockheight(Double blockheight) {
        this.blockheight = blockheight;
        return this;
    }
    
    /**
     * Output index
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("n")
    public Double n;
    public GetTransactionInfoResponseVout withN(Double n) {
        this.n = n;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scriptPubKey")
    public GetTransactionInfoResponseVoutScriptPubKey scriptPubKey;
    public GetTransactionInfoResponseVout withScriptPubKey(GetTransactionInfoResponseVoutScriptPubKey scriptPubKey) {
        this.scriptPubKey = scriptPubKey;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tokens")
    public GetTransactionInfoResponseVoutTokens[] tokens;
    public GetTransactionInfoResponseVout withTokens(GetTransactionInfoResponseVoutTokens[] tokens) {
        this.tokens = tokens;
        return this;
    }
    
    /**
     * Whether this output has now been used
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("used")
    public Boolean used;
    public GetTransactionInfoResponseVout withUsed(Boolean used) {
        this.used = used;
        return this;
    }
    
    /**
     * Blockheight this output was used in
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usedBlockheight")
    public Double usedBlockheight;
    public GetTransactionInfoResponseVout withUsedBlockheight(Double usedBlockheight) {
        this.usedBlockheight = usedBlockheight;
        return this;
    }
    
    /**
     * TXID this output was used in
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usedTxid")
    public String usedTxid;
    public GetTransactionInfoResponseVout withUsedTxid(String usedTxid) {
        this.usedTxid = usedTxid;
        return this;
    }
    
    /**
     * Value of the output in NEBL satoshi
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public Double value;
    public GetTransactionInfoResponseVout withValue(Double value) {
        this.value = value;
        return this;
    }
    
}
