/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetZRLocationProfileSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class GetZRLocationProfileRequest extends SpeakeasyBase {
  /**
   * Unique identifier of the location type. This can be retrieved using the [List Zoom Room Location API](https://marketplace.zoom.us/docs/api-reference/zoom-api/rooms-location/listzrlocations) (Id property in the response).
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=locationId",
  })
  locationId: string;
}

export class GetZRLocationProfile200ApplicationXMLBasic extends SpeakeasyBase {
  /**
   * Address
   */
  @SpeakeasyMetadata()
  address?: string;

  /**
   * Description about the location.
   */
  @SpeakeasyMetadata()
  description?: string;

  /**
   * Name of the location type.
   */
  @SpeakeasyMetadata()
  name?: string;

  /**
   * Require code to exit out of your Zoom Rooms application to switch between other apps.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  requiredCodeToExt?: boolean;

  /**
   * 1-16 digit number or characters that is used to secure your Zoom Rooms application.
   */
  @SpeakeasyMetadata()
  roomPasscode?: string;

  /**
   * The email address to be used for reporting Zoom Room issues.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  supportEmail?: string;

  /**
   * The phone number to be used for reporting Zoom Room issues.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  supportPhone?: string;

  /**
   * Timezone (only returned for location type - city).
   */
  @SpeakeasyMetadata()
  timezone?: string;
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Zoom Rooms Location Profile returned successfully.
 */
export class GetZRLocationProfile200ApplicationXML extends SpeakeasyBase {
  @SpeakeasyMetadata()
  basic?: GetZRLocationProfile200ApplicationXMLBasic;
}

export class GetZRLocationProfile200ApplicationJSONBasic extends SpeakeasyBase {
  /**
   * Address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  address?: string;

  /**
   * Description about the location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description " })
  description?: string;

  /**
   * Name of the location type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Require code to exit out of your Zoom Rooms application to switch between other apps.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "required_code_to_ext" })
  requiredCodeToExt?: boolean;

  /**
   * 1-16 digit number or characters that is used to secure your Zoom Rooms application.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "room_passcode" })
  roomPasscode?: string;

  /**
   * The email address to be used for reporting Zoom Room issues.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "support_email" })
  supportEmail?: string;

  /**
   * The phone number to be used for reporting Zoom Room issues.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "support_phone" })
  supportPhone?: string;

  /**
   * Timezone (only returned for location type - city).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timezone" })
  timezone?: string;
}

/**
 * **HTTP Status Code:** `200` **OK**<br>
 *
 * @remarks
 * Zoom Rooms Location Profile returned successfully.
 */
export class GetZRLocationProfile200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "basic" })
  @Type(() => GetZRLocationProfile200ApplicationJSONBasic)
  basic?: GetZRLocationProfile200ApplicationJSONBasic;
}

export class GetZRLocationProfileResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200` **OK**<br>
   *
   * @remarks
   * Zoom Rooms Location Profile returned successfully.
   */
  @SpeakeasyMetadata()
  getZRLocationProfile200ApplicationJSONObject?: GetZRLocationProfile200ApplicationJSON;
}
