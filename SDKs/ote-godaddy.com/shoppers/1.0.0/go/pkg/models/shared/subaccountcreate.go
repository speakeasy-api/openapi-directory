// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SubaccountCreateMarketIDEnum string

const (
	SubaccountCreateMarketIDEnumDaDk SubaccountCreateMarketIDEnum = "da-DK"
	SubaccountCreateMarketIDEnumDeAt SubaccountCreateMarketIDEnum = "de-AT"
	SubaccountCreateMarketIDEnumDeCh SubaccountCreateMarketIDEnum = "de-CH"
	SubaccountCreateMarketIDEnumDeDe SubaccountCreateMarketIDEnum = "de-DE"
	SubaccountCreateMarketIDEnumElGr SubaccountCreateMarketIDEnum = "el-GR"
	SubaccountCreateMarketIDEnumEnAe SubaccountCreateMarketIDEnum = "en-AE"
	SubaccountCreateMarketIDEnumEnAu SubaccountCreateMarketIDEnum = "en-AU"
	SubaccountCreateMarketIDEnumEnCa SubaccountCreateMarketIDEnum = "en-CA"
	SubaccountCreateMarketIDEnumEnGb SubaccountCreateMarketIDEnum = "en-GB"
	SubaccountCreateMarketIDEnumEnHk SubaccountCreateMarketIDEnum = "en-HK"
	SubaccountCreateMarketIDEnumEnIe SubaccountCreateMarketIDEnum = "en-IE"
	SubaccountCreateMarketIDEnumEnIl SubaccountCreateMarketIDEnum = "en-IL"
	SubaccountCreateMarketIDEnumEnIn SubaccountCreateMarketIDEnum = "en-IN"
	SubaccountCreateMarketIDEnumEnMy SubaccountCreateMarketIDEnum = "en-MY"
	SubaccountCreateMarketIDEnumEnNz SubaccountCreateMarketIDEnum = "en-NZ"
	SubaccountCreateMarketIDEnumEnPh SubaccountCreateMarketIDEnum = "en-PH"
	SubaccountCreateMarketIDEnumEnPk SubaccountCreateMarketIDEnum = "en-PK"
	SubaccountCreateMarketIDEnumEnSg SubaccountCreateMarketIDEnum = "en-SG"
	SubaccountCreateMarketIDEnumEnUs SubaccountCreateMarketIDEnum = "en-US"
	SubaccountCreateMarketIDEnumEnZa SubaccountCreateMarketIDEnum = "en-ZA"
	SubaccountCreateMarketIDEnumEsAr SubaccountCreateMarketIDEnum = "es-AR"
	SubaccountCreateMarketIDEnumEsCl SubaccountCreateMarketIDEnum = "es-CL"
	SubaccountCreateMarketIDEnumEsCo SubaccountCreateMarketIDEnum = "es-CO"
	SubaccountCreateMarketIDEnumEsEs SubaccountCreateMarketIDEnum = "es-ES"
	SubaccountCreateMarketIDEnumEsMx SubaccountCreateMarketIDEnum = "es-MX"
	SubaccountCreateMarketIDEnumEsPe SubaccountCreateMarketIDEnum = "es-PE"
	SubaccountCreateMarketIDEnumEsUs SubaccountCreateMarketIDEnum = "es-US"
	SubaccountCreateMarketIDEnumEsVe SubaccountCreateMarketIDEnum = "es-VE"
	SubaccountCreateMarketIDEnumFiFi SubaccountCreateMarketIDEnum = "fi-FI"
	SubaccountCreateMarketIDEnumFrBe SubaccountCreateMarketIDEnum = "fr-BE"
	SubaccountCreateMarketIDEnumFrCa SubaccountCreateMarketIDEnum = "fr-CA"
	SubaccountCreateMarketIDEnumFrCh SubaccountCreateMarketIDEnum = "fr-CH"
	SubaccountCreateMarketIDEnumFrFr SubaccountCreateMarketIDEnum = "fr-FR"
	SubaccountCreateMarketIDEnumHiIn SubaccountCreateMarketIDEnum = "hi-IN"
	SubaccountCreateMarketIDEnumIDID SubaccountCreateMarketIDEnum = "id-ID"
	SubaccountCreateMarketIDEnumItCh SubaccountCreateMarketIDEnum = "it-CH"
	SubaccountCreateMarketIDEnumItIt SubaccountCreateMarketIDEnum = "it-IT"
	SubaccountCreateMarketIDEnumJaJp SubaccountCreateMarketIDEnum = "ja-JP"
	SubaccountCreateMarketIDEnumKoKr SubaccountCreateMarketIDEnum = "ko-KR"
	SubaccountCreateMarketIDEnumMrIn SubaccountCreateMarketIDEnum = "mr-IN"
	SubaccountCreateMarketIDEnumNbNo SubaccountCreateMarketIDEnum = "nb-NO"
	SubaccountCreateMarketIDEnumNlBe SubaccountCreateMarketIDEnum = "nl-BE"
	SubaccountCreateMarketIDEnumNlNl SubaccountCreateMarketIDEnum = "nl-NL"
	SubaccountCreateMarketIDEnumPlPl SubaccountCreateMarketIDEnum = "pl-PL"
	SubaccountCreateMarketIDEnumPtBr SubaccountCreateMarketIDEnum = "pt-BR"
	SubaccountCreateMarketIDEnumPtPt SubaccountCreateMarketIDEnum = "pt-PT"
	SubaccountCreateMarketIDEnumRuRu SubaccountCreateMarketIDEnum = "ru-RU"
	SubaccountCreateMarketIDEnumSvSe SubaccountCreateMarketIDEnum = "sv-SE"
	SubaccountCreateMarketIDEnumTaIn SubaccountCreateMarketIDEnum = "ta-IN"
	SubaccountCreateMarketIDEnumThTh SubaccountCreateMarketIDEnum = "th-TH"
	SubaccountCreateMarketIDEnumTrTr SubaccountCreateMarketIDEnum = "tr-TR"
	SubaccountCreateMarketIDEnumUkUa SubaccountCreateMarketIDEnum = "uk-UA"
	SubaccountCreateMarketIDEnumViVn SubaccountCreateMarketIDEnum = "vi-VN"
	SubaccountCreateMarketIDEnumZhHk SubaccountCreateMarketIDEnum = "zh-HK"
	SubaccountCreateMarketIDEnumZhSg SubaccountCreateMarketIDEnum = "zh-SG"
	SubaccountCreateMarketIDEnumZhTw SubaccountCreateMarketIDEnum = "zh-TW"
)

func (e SubaccountCreateMarketIDEnum) ToPointer() *SubaccountCreateMarketIDEnum {
	return &e
}

func (e *SubaccountCreateMarketIDEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "da-DK":
		fallthrough
	case "de-AT":
		fallthrough
	case "de-CH":
		fallthrough
	case "de-DE":
		fallthrough
	case "el-GR":
		fallthrough
	case "en-AE":
		fallthrough
	case "en-AU":
		fallthrough
	case "en-CA":
		fallthrough
	case "en-GB":
		fallthrough
	case "en-HK":
		fallthrough
	case "en-IE":
		fallthrough
	case "en-IL":
		fallthrough
	case "en-IN":
		fallthrough
	case "en-MY":
		fallthrough
	case "en-NZ":
		fallthrough
	case "en-PH":
		fallthrough
	case "en-PK":
		fallthrough
	case "en-SG":
		fallthrough
	case "en-US":
		fallthrough
	case "en-ZA":
		fallthrough
	case "es-AR":
		fallthrough
	case "es-CL":
		fallthrough
	case "es-CO":
		fallthrough
	case "es-ES":
		fallthrough
	case "es-MX":
		fallthrough
	case "es-PE":
		fallthrough
	case "es-US":
		fallthrough
	case "es-VE":
		fallthrough
	case "fi-FI":
		fallthrough
	case "fr-BE":
		fallthrough
	case "fr-CA":
		fallthrough
	case "fr-CH":
		fallthrough
	case "fr-FR":
		fallthrough
	case "hi-IN":
		fallthrough
	case "id-ID":
		fallthrough
	case "it-CH":
		fallthrough
	case "it-IT":
		fallthrough
	case "ja-JP":
		fallthrough
	case "ko-KR":
		fallthrough
	case "mr-IN":
		fallthrough
	case "nb-NO":
		fallthrough
	case "nl-BE":
		fallthrough
	case "nl-NL":
		fallthrough
	case "pl-PL":
		fallthrough
	case "pt-BR":
		fallthrough
	case "pt-PT":
		fallthrough
	case "ru-RU":
		fallthrough
	case "sv-SE":
		fallthrough
	case "ta-IN":
		fallthrough
	case "th-TH":
		fallthrough
	case "tr-TR":
		fallthrough
	case "uk-UA":
		fallthrough
	case "vi-VN":
		fallthrough
	case "zh-HK":
		fallthrough
	case "zh-SG":
		fallthrough
	case "zh-TW":
		*e = SubaccountCreateMarketIDEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SubaccountCreateMarketIDEnum: %v", v)
	}
}

// SubaccountCreate - The subaccount to create
type SubaccountCreate struct {
	Email      string                        `json:"email"`
	ExternalID *int64                        `json:"externalId,omitempty"`
	MarketID   *SubaccountCreateMarketIDEnum `json:"marketId,omitempty"`
	NameFirst  string                        `json:"nameFirst"`
	NameLast   string                        `json:"nameLast"`
	Password   string                        `json:"password"`
}
