// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type TargetInput struct {
	// Id of the connected target in a multi-environment targets.
	//
	ConnectedTarget *string `json:"connected_target,omitempty"`
	// Multi-environment targets can identify environments using this property.
	//
	Environment *EnvironmentEnum `json:"environment,omitempty"`
	// User labels for the scope. (This feature is currently only available for certain accounts,
	// please contact our support if you are interested in using it)
	//
	Labels []string `json:"labels,omitempty"`
	// Custom name for the resource
	Name *string `json:"name,omitempty"`
	// * default - default report, no extra information added
	// * owasp - adds table on OWASP Top 10 most critical web application risks
	// * pci - adds table on PCI requirements
	//
	ReportType *ReportTypeEnum `json:"report_type,omitempty"`
	// * lightning - fast simple scan
	// * normal - default profile
	// * full - does everything the default profile does and adds boolean based
	// SQL injection tests
	// * safe - doesn't use any content changing methods (no POST, DELETE, etc)
	// and tries fewer payloads for SQL injection tests
	//
	ScanProfile *ScanProfileEnum `json:"scan_profile,omitempty"`
	// Main resource associated with a target
	Site *SiteInput `json:"site,omitempty"`
	// The type of a target determines what the limitations imposed on a
	// target.
	// * free - Every account is allowed to have 5 free targets, these targets
	// do not need to be verified but can only perform lightning
	// scans.
	// * single - Single environment targets need to be verified but are
	// allowed to run any type of scan allowed by the plan.
	// * multi - Multi environment targets are used when you want
	// to scan the same application in different environments.
	//
	Type *TargetTypeEnum `json:"type,omitempty"`
}

type TargetAllowedScanProfiles struct {
	// * lightning - fast simple scan
	// * normal - default profile
	// * full - does everything the default profile does and adds boolean based
	// SQL injection tests
	// * safe - doesn't use any content changing methods (no POST, DELETE, etc)
	// and tries fewer payloads for SQL injection tests
	//
	ID *ScanProfileEnum `json:"id,omitempty"`
	// Name of the scan profile.
	Name *string `json:"name,omitempty"`
}

// Target - Event object.
type Target struct {
	// Valid scan profiles for the target.
	AllowedScanProfiles []TargetAllowedScanProfiles `json:"allowed_scan_profiles,omitempty"`
	// Secondary domains that should be scanned
	Assets []Asset `json:"assets,omitempty"`
	// Date time of the last change
	Changed *time.Time `json:"changed,omitempty"`
	// User that last modified the object
	ChangedBy *ChangedBy `json:"changed_by,omitempty"`
	// Id of the connected target in a multi-environment targets.
	//
	ConnectedTarget *string `json:"connected_target,omitempty"`
	// Certain operations (e.g. changing a target's `type`) may require going through billing. Until the change is reverted or the billing is settled.
	//
	Enabled *bool `json:"enabled,omitempty"`
	// Multi-environment targets can identify environments using this property.
	//
	Environment *EnvironmentEnum `json:"environment,omitempty"`
	// Object id.
	ID *string `json:"id,omitempty"`
	// User labels for the scope. (This feature is currently only available for certain accounts,
	// please contact our support if you are interested in using it)
	//
	Labels []string `json:"labels,omitempty"`
	// Custom name for the resource
	Name *string `json:"name,omitempty"`
	// * default - default report, no extra information added
	// * owasp - adds table on OWASP Top 10 most critical web application risks
	// * pci - adds table on PCI requirements
	//
	ReportType *ReportTypeEnum `json:"report_type,omitempty"`
	// * lightning - fast simple scan
	// * normal - default profile
	// * full - does everything the default profile does and adds boolean based
	// SQL injection tests
	// * safe - doesn't use any content changing methods (no POST, DELETE, etc)
	// and tries fewer payloads for SQL injection tests
	//
	ScanProfile *ScanProfileEnum `json:"scan_profile,omitempty"`
	// Main resource associated with a target
	Site *Site `json:"site,omitempty"`
	// The type of a target determines what the limitations imposed on a
	// target.
	// * free - Every account is allowed to have 5 free targets, these targets
	// do not need to be verified but can only perform lightning
	// scans.
	// * single - Single environment targets need to be verified but are
	// allowed to run any type of scan allowed by the plan.
	// * multi - Multi environment targets are used when you want
	// to scan the same application in different environments.
	//
	Type *TargetTypeEnum `json:"type,omitempty"`
}
