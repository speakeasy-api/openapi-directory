// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UpdateLoggerDefinitionPathParams struct {
	// The ID of the logger definition.
	LoggerDefinitionID string `pathParam:"style=simple,explode=false,name=LoggerDefinitionId"`
}

type UpdateLoggerDefinitionHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateLoggerDefinitionRequestBody struct {
	// The name of the definition.
	Name *string `json:"Name,omitempty"`
}

type UpdateLoggerDefinitionRequest struct {
	PathParams UpdateLoggerDefinitionPathParams
	Headers    UpdateLoggerDefinitionHeaders
	Request    UpdateLoggerDefinitionRequestBody `request:"mediaType=application/json"`
}

type UpdateLoggerDefinitionResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	StatusCode          int
	RawResponse         *http.Response
	// Success
	UpdateLoggerDefinitionResponse map[string]interface{}
}
