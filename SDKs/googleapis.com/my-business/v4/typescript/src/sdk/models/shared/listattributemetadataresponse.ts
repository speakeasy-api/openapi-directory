/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AttributeMetadata } from "./attributemetadata";
import { Expose, Type } from "class-transformer";

/**
 * Response message for Locations.ListAttributeMetadata.
 */
export class ListAttributeMetadataResponse extends SpeakeasyBase {
  /**
   * A collection of attribute metadata for the available attributes.
   */
  @SpeakeasyMetadata({ elemType: AttributeMetadata })
  @Expose({ name: "attributes" })
  @Type(() => AttributeMetadata)
  attributes?: AttributeMetadata[];

  /**
   * If the number of attributes exceeded the requested page size, this field will be populated with a token to fetch the next page of attributes on a subsequent call to `attributes.list`. If there are no more attributes, this field will not be present in the response.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;
}
