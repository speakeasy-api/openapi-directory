// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ExternalTransactionTransactionStateEnum - Output only. The current state of the transaction.
type ExternalTransactionTransactionStateEnum string

const (
	ExternalTransactionTransactionStateEnumTransactionStateUnspecified ExternalTransactionTransactionStateEnum = "TRANSACTION_STATE_UNSPECIFIED"
	ExternalTransactionTransactionStateEnumTransactionReported         ExternalTransactionTransactionStateEnum = "TRANSACTION_REPORTED"
	ExternalTransactionTransactionStateEnumTransactionCanceled         ExternalTransactionTransactionStateEnum = "TRANSACTION_CANCELED"
)

func (e ExternalTransactionTransactionStateEnum) ToPointer() *ExternalTransactionTransactionStateEnum {
	return &e
}

func (e *ExternalTransactionTransactionStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TRANSACTION_STATE_UNSPECIFIED":
		fallthrough
	case "TRANSACTION_REPORTED":
		fallthrough
	case "TRANSACTION_CANCELED":
		*e = ExternalTransactionTransactionStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExternalTransactionTransactionStateEnum: %v", v)
	}
}

// ExternalTransaction - The details of an external transaction.
type ExternalTransaction struct {
	// Output only. The time when this transaction was created. This is the time when Google was notified of the transaction.
	CreateTime *string `json:"createTime,omitempty"`
	// Definition of a price, i.e. currency and units.
	CurrentPreTaxAmount *Price `json:"currentPreTaxAmount,omitempty"`
	// Definition of a price, i.e. currency and units.
	CurrentTaxAmount *Price `json:"currentTaxAmount,omitempty"`
	// Output only. The id of this transaction. All transaction ids under the same package name must be unique. Set when creating the external transaction.
	ExternalTransactionID *string `json:"externalTransactionId,omitempty"`
	// Represents a one-time transaction.
	OneTimeTransaction *OneTimeExternalTransaction `json:"oneTimeTransaction,omitempty"`
	// Definition of a price, i.e. currency and units.
	OriginalPreTaxAmount *Price `json:"originalPreTaxAmount,omitempty"`
	// Definition of a price, i.e. currency and units.
	OriginalTaxAmount *Price `json:"originalTaxAmount,omitempty"`
	// Output only. The resource name of the external transaction. The package name of the application the inapp products were sold (for example, 'com.some.app').
	PackageName *string `json:"packageName,omitempty"`
	// Represents a transaction that is part of a recurring series of payments. This can be a subscription or a one-time product with multiple payments (such as preorder).
	RecurringTransaction *RecurringExternalTransaction `json:"recurringTransaction,omitempty"`
	// Represents a transaction performed using a test account. These transactions will not be charged by Google.
	TestPurchase map[string]interface{} `json:"testPurchase,omitempty"`
	// Output only. The current state of the transaction.
	TransactionState *ExternalTransactionTransactionStateEnum `json:"transactionState,omitempty"`
	// Required. The time when the transaction was completed.
	TransactionTime *string `json:"transactionTime,omitempty"`
	// User's address for the external transaction.
	UserTaxAddress *ExternalTransactionAddress `json:"userTaxAddress,omitempty"`
}

// ExternalTransactionInput - The details of an external transaction.
type ExternalTransactionInput struct {
	// Definition of a price, i.e. currency and units.
	CurrentPreTaxAmount *Price `json:"currentPreTaxAmount,omitempty"`
	// Definition of a price, i.e. currency and units.
	CurrentTaxAmount *Price `json:"currentTaxAmount,omitempty"`
	// Represents a one-time transaction.
	OneTimeTransaction *OneTimeExternalTransaction `json:"oneTimeTransaction,omitempty"`
	// Definition of a price, i.e. currency and units.
	OriginalPreTaxAmount *Price `json:"originalPreTaxAmount,omitempty"`
	// Definition of a price, i.e. currency and units.
	OriginalTaxAmount *Price `json:"originalTaxAmount,omitempty"`
	// Represents a transaction that is part of a recurring series of payments. This can be a subscription or a one-time product with multiple payments (such as preorder).
	RecurringTransaction *RecurringExternalTransaction `json:"recurringTransaction,omitempty"`
	// Represents a transaction performed using a test account. These transactions will not be charged by Google.
	TestPurchase map[string]interface{} `json:"testPurchase,omitempty"`
	// Required. The time when the transaction was completed.
	TransactionTime *string `json:"transactionTime,omitempty"`
	// User's address for the external transaction.
	UserTaxAddress *ExternalTransactionAddress `json:"userTaxAddress,omitempty"`
}
