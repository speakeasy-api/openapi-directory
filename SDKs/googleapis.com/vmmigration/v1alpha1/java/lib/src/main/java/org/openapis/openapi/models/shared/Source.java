/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Source - Source message describes a specific vm migration Source resource. It contains the source environment information.
 */
public class Source {
    /**
     * AwsSourceDetails message describes a specific source details for the AWS source type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aws")
    public AwsSourceDetails aws;

    public Source withAws(AwsSourceDetails aws) {
        this.aws = aws;
        return this;
    }
    
    /**
     * Output only. The create time timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Source withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * User-provided description of the source.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Source withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public Status error;

    public Source withError(Status error) {
        this.error = error;
        return this;
    }
    
    /**
     * The labels of the source.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public Source withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Output only. The Source name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Source withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The update time timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public Source withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * VmwareSourceDetails message describes a specific source details for the vmware source type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vmware")
    public VmwareSourceDetails vmware;

    public Source withVmware(VmwareSourceDetails vmware) {
        this.vmware = vmware;
        return this;
    }
    
    public Source(){}
}
