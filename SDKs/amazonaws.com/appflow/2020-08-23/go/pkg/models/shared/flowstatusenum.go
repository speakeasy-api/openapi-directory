// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FlowStatusEnum string

const (
	FlowStatusEnumActive     FlowStatusEnum = "Active"
	FlowStatusEnumDeprecated FlowStatusEnum = "Deprecated"
	FlowStatusEnumDeleted    FlowStatusEnum = "Deleted"
	FlowStatusEnumDraft      FlowStatusEnum = "Draft"
	FlowStatusEnumErrored    FlowStatusEnum = "Errored"
	FlowStatusEnumSuspended  FlowStatusEnum = "Suspended"
)

func (e *FlowStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Active":
		fallthrough
	case "Deprecated":
		fallthrough
	case "Deleted":
		fallthrough
	case "Draft":
		fallthrough
	case "Errored":
		fallthrough
	case "Suspended":
		*e = FlowStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for FlowStatusEnum: %s", s)
	}
}
