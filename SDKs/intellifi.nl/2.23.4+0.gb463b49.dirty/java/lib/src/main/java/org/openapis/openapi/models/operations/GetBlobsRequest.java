/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetBlobsRequest {
    /**
     * Limits on `time_created`, Marks the start of a range, optionally use `before` to set the end. Result output excludes the given timestamp.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=after")
    public OffsetDateTime after;

    public GetBlobsRequest withAfter(OffsetDateTime after) {
        this.after = after;
        return this;
    }
    
    /**
     * Limits directly on `id`. Marks the start of a range, optionally use `before_id` to set the end. Result output excludes the given `id` value. Please note that `id` is in chronological order.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=after_id")
    public String afterId;

    public GetBlobsRequest withAfterId(String afterId) {
        this.afterId = afterId;
        return this;
    }
    
    /**
     * Limits on `time_created`. Marks the end of a range, optionally use `after` to set the start. Result output excludes the given timestamp.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=before")
    public String before;

    public GetBlobsRequest withBefore(String before) {
        this.before = before;
        return this;
    }
    
    /**
     * Limits directly on `id`. Marks the end of a range, optionally use `after_id` to set the start. Result output excludes the given `id` value. Please note that `id` is in chronological order.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=before_id")
    public String beforeId;

    public GetBlobsRequest withBeforeId(String beforeId) {
        this.beforeId = beforeId;
        return this;
    }
    
    /**
     * Filter based on the unique blob_key
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=blob_key")
    public String blobKey;

    public GetBlobsRequest withBlobKey(String blobKey) {
        this.blobKey = blobKey;
        return this;
    }
    
    /**
     * Filter based on the content type of the blob.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=content_type")
    public String contentType;

    public GetBlobsRequest withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Filter based on the filename of the blob.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=filename")
    public String filename;

    public GetBlobsRequest withFilename(String filename) {
        this.filename = filename;
        return this;
    }
    
    /**
     * Limits on `time_created`. Marks the start of a range, optionally use `until` to set the end. Result output includes the given timestamp.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=from")
    public String from;

    public GetBlobsRequest withFrom(String from) {
        this.from = from;
        return this;
    }
    
    /**
     * Limits on `id`. Marks the start of a range, optionally use `until_id` to set the end. Result output includes the given `id` value. Please note that `id` is in chronological order.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=from_id")
    public String fromId;

    public GetBlobsRequest withFromId(String fromId) {
        this.fromId = fromId;
        return this;
    }
    
    /**
     * Filter based on the hash of the blob.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=hash")
    public String hash;

    public GetBlobsRequest withHash(String hash) {
        this.hash = hash;
        return this;
    }
    
    /**
     * Unique identifier
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=id")
    public String id;

    public GetBlobsRequest withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Removes `url` fields from output and shows `_id` instead of `_url` in references.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=id_only")
    public Boolean idOnly;

    public GetBlobsRequest withIdOnly(Boolean idOnly) {
        this.idOnly = idOnly;
        return this;
    }
    
    /**
     * Sets the maximum number of returned resources. You may increase this number to large values, keep in mind that query times could become large. We advise you to use the pagination feature whenever you can.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;

    public GetBlobsRequest withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Expand a reference into the actual resource (lookup). You may add multiple fields by giving a comma separated value.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=populate")
    public String populate;

    public GetBlobsRequest withPopulate(String populate) {
        this.populate = populate;
        return this;
    }
    
    /**
     * Removes response envelope with information about query, only sends back a JSON array with the applicable resources.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=results_only")
    public Boolean resultsOnly;

    public GetBlobsRequest withResultsOnly(Boolean resultsOnly) {
        this.resultsOnly = resultsOnly;
        return this;
    }
    
    /**
     * Select which properties should be returned. You may add multiple fields by giving a comma separated value. Select can also be used together with populate: Specify the resource first, then a period(.) followed by the field.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=select")
    public String select;

    public GetBlobsRequest withSelect(String select) {
        this.select = select;
        return this;
    }
    
    /**
     * Allows you to sort on on or more fields in the resource. You may append a minus sign (`-`) to request reverse order (new to old).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public String sort;

    public GetBlobsRequest withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * Filter on the time the resource was created.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=time_created")
    public String timeCreated;

    public GetBlobsRequest withTimeCreated(String timeCreated) {
        this.timeCreated = timeCreated;
        return this;
    }
    
    /**
     * Filter based on the last time the blob was accessed
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=time_last_accessed")
    public String timeLastAccessed;

    public GetBlobsRequest withTimeLastAccessed(String timeLastAccessed) {
        this.timeLastAccessed = timeLastAccessed;
        return this;
    }
    
    /**
     * Filter on the time the resource was last updated
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=time_updated")
    public String timeUpdated;

    public GetBlobsRequest withTimeUpdated(String timeUpdated) {
        this.timeUpdated = timeUpdated;
        return this;
    }
    
    /**
     * Overrides the default query timeout (in seconds). A value of 0 means unlimited. IMPORTANT: using high timeouts in production code is strongly discouraged as it may lead to stability issues.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=timeout_s")
    public Double timeoutS;

    public GetBlobsRequest withTimeoutS(Double timeoutS) {
        this.timeoutS = timeoutS;
        return this;
    }
    
    /**
     * Limits on `time_created`. Marks the end of a range, optionally use `from` to set the start. Result output includes the given timestamp.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=until")
    public String until;

    public GetBlobsRequest withUntil(String until) {
        this.until = until;
        return this;
    }
    
    /**
     * Limits on `id`. Marks the end of a range, optionally use `from_id` to set the start. Result output includes the given `id` value. Please note that `id` is in chronological order.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=until_id")
    public String untilId;

    public GetBlobsRequest withUntilId(String untilId) {
        this.untilId = untilId;
        return this;
    }
    
    public GetBlobsRequest(){}
}
