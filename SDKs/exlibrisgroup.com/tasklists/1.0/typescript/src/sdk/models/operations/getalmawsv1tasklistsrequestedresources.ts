/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetAlmawsV1TaskListsRequestedResourcesRequest extends SpeakeasyBase {
  /**
   * The circulation desk where the action is being performed. Mandatory.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=circ_desk",
  })
  circDesk: string;

  /**
   * The order direction in which to retrieve the results. Optional.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=direction",
  })
  direction?: string;

  /**
   * The library of the given circulation desk or department where the resources are located. Mandatory.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=library",
  })
  library: string;

  /**
   * Limits the number of results. Optional. Valid values are 0-100. Default value: 10.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * The location code. Optional.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=location",
  })
  location?: string;

  /**
   * Offset of the results returned. Optional. Default value: 0, which means that the first results will be returned.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * The order in which to retrieve the results: location/call_number (default).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=order_by",
  })
  orderBy?: string;

  /**
   * The pickup institution. Optional.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pickup_inst",
  })
  pickupInst?: string;

  /**
   * Show printed results: Y/N. Optional.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=printed",
  })
  printed?: string;

  /**
   * Show reported results: Y/N. Optional.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=reported",
  })
  reported?: string;
}

export class GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceLocationCopyBaseStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "desc" })
  desc?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * Specific copy of resource in a specific location.
 */
export class GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceLocationCopy extends SpeakeasyBase {
  /**
   * Alternative call number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alternative_call_number" })
  alternativeCallNumber?: string;

  /**
   * The item's barcode.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "barcode" })
  barcode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "base_status" })
  @Type(
    () =>
      GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceLocationCopyBaseStatus
  )
  baseStatus?: GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceLocationCopyBaseStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link?: string;

  /**
   * The resource's pid.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pid" })
  pid?: string;

  /**
   * The item's storage location id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storage_location_id" })
  storageLocationId?: string;
}

/**
 * Holding pid, a unique holding id that the resource is associated with.
 */
export class GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceLocationHoldingId extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * Library of the requested resource. See [Get libraries API](https://developers.exlibrisgroup.com/alma/apis/conf/GET/gwPcGly021p29HpB7XTI4Dp4I8TKv6CAxBlD4LyRaVE=/37088dc9-c685-4641-bc7f-60b5ca7cabed).
 */
export class GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceLocationLibrary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "desc" })
  desc?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * Location of the requested resource.
 */
export class GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceLocation extends SpeakeasyBase {
  /**
   * Call number of the item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "call_number" })
  callNumber?: string;

  /**
   * Copies of resource in a specific location.
   */
  @SpeakeasyMetadata({
    elemType:
      GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceLocationCopy,
  })
  @Expose({ name: "copy" })
  @Type(
    () =>
      GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceLocationCopy
  )
  copy?: GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceLocationCopy[];

  /**
   * Holding pid, a unique holding id that the resource is associated with.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "holding_id" })
  @Type(
    () =>
      GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceLocationHoldingId
  )
  holdingId?: GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceLocationHoldingId;

  /**
   * Library of the requested resource. See [Get libraries API](https://developers.exlibrisgroup.com/alma/apis/conf/GET/gwPcGly021p29HpB7XTI4Dp4I8TKv6CAxBlD4LyRaVE=/37088dc9-c685-4641-bc7f-60b5ca7cabed).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "library" })
  @Type(
    () =>
      GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceLocationLibrary
  )
  library?: GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceLocationLibrary;

  /**
   * The location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shelving_location" })
  shelvingLocation?: string;
}

/**
 * The destination will be a library in most cases. However, it may at times be: A circulation desk (when the pickup location is a reading room) A Home/Office code, where the request is for personal delivery A Work Order department
 */
export class GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceRequestDestination extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "desc" })
  desc?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * The sub type of the request.
 */
export class GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceRequestRequestSubType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "desc" })
  desc?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

export enum GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceRequestRequestTypeEnum {
  Booking = "BOOKING",
  Digitization = "DIGITIZATION",
  Hold = "HOLD",
  Move = "MOVE",
  WorkOrder = "WORK_ORDER",
}

/**
 * A description of the requester.
 */
export class GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceRequestRequester extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "desc" })
  desc?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * Request object.
 */
export class GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceRequest extends SpeakeasyBase {
  /**
   * The related note of the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  /**
   * The destination will be a library in most cases. However, it may at times be: A circulation desk (when the pickup location is a reading room) A Home/Office code, where the request is for personal delivery A Work Order department
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destination" })
  @Type(
    () =>
      GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceRequestDestination
  )
  destination?: GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceRequestDestination;

  /**
   * The identifier of the request in Alma.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link?: string;

  /**
   * Indication whether the request is printed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "printed" })
  printed?: boolean;

  /**
   * Indication whether the request is reported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reported" })
  reported?: boolean;

  /**
   * Deprecated - use request_time instead. The request date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "request_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  requestDate?: Date;

  /**
   * The sub type of the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "request_sub_type" })
  @Type(
    () =>
      GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceRequestRequestSubType
  )
  requestSubType?: GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceRequestRequestSubType;

  /**
   * The creation date and exact time of the request. Output parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "request_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  requestTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "request_type" })
  requestType: GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceRequestRequestTypeEnum;

  /**
   * A description of the requester.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requester" })
  @Type(
    () =>
      GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceRequestRequester
  )
  requester?: GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceRequestRequester;
}

/**
 * The MMS id of the resource. See [GET BIB API](https://developers.exlibrisgroup.com/alma/apis/bibs/GET/gwPcGly021om4RTvtjbPleCklCGxeYAf3JPdiJpJhUA=/af2fb69d-64f4-42bc-bb05-d8a0ae56936e).
 */
export class GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceResourceMetadataMmsId extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * Metadata about the requested resource.
 */
export class GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceResourceMetadata extends SpeakeasyBase {
  /**
   * An entity primarily responsible for making the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "author" })
  author?: string;

  /**
   * ISBN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isbn" })
  isbn?: string;

  /**
   * ISSN
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issn" })
  issn?: string;

  /**
   * The MMS id of the resource. See [GET BIB API](https://developers.exlibrisgroup.com/alma/apis/bibs/GET/gwPcGly021om4RTvtjbPleCklCGxeYAf3JPdiJpJhUA=/af2fb69d-64f4-42bc-bb05-d8a0ae56936e).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mms_id" })
  @Type(
    () =>
      GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceResourceMetadataMmsId
  )
  mmsId?: GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceResourceMetadataMmsId;

  /**
   * Place of publication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publication_place" })
  publicationPlace?: string;

  /**
   * The year associated with the publication of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publication_year" })
  publicationYear?: string;

  /**
   * An entity responsible for making the resource available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "publisher" })
  publisher?: string;

  /**
   * The resource title.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}

/**
 * Requested resource to be picked from the shelf.
 */
export class GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResource extends SpeakeasyBase {
  /**
   * Location of the requested resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(
    () =>
      GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceLocation
  )
  location?: GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceLocation;

  /**
   * Requests for resource.
   */
  @SpeakeasyMetadata({
    elemType:
      GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceRequest,
  })
  @Expose({ name: "request" })
  @Type(
    () =>
      GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceRequest
  )
  request?: GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceRequest[];

  /**
   * Metadata about the requested resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource_metadata" })
  @Type(
    () =>
      GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceResourceMetadata
  )
  resourceMetadata?: GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResourceResourceMetadata;
}

/**
 * A list of requested resources.
 */
export class GetAlmawsV1TaskListsRequestedResources200ApplicationJSON extends SpeakeasyBase {
  /**
   * Requested resource object.
   */
  @SpeakeasyMetadata({
    elemType:
      GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResource,
  })
  @Expose({ name: "requested_resource" })
  @Type(
    () =>
      GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResource
  )
  requestedResource?: GetAlmawsV1TaskListsRequestedResources200ApplicationJSONRequestedResource[];

  /**
   * The total number of requested resources.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_record_count" })
  totalRecordCount?: number;
}

export class GetAlmawsV1TaskListsRequestedResourcesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK - This method returns an object based on rest_requested_resources.xsd. See [here](/alma/apis/docs/xsd/rest_requested_resources.xsd)
   */
  @SpeakeasyMetadata()
  getAlmawsV1TaskListsRequestedResources200ApplicationJSONObject?: GetAlmawsV1TaskListsRequestedResources200ApplicationJSON;
}
