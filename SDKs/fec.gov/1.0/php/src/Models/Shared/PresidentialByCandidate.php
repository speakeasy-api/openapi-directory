<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class PresidentialByCandidate
{
    /**
     * 
     * A unique identifier assigned to each candidate registered with the FEC.
     * If a person runs for several offices, that person will have separate candidate IDs for each office.
     * First character indicates office - [P]residential, [H]ouse, [S]enate].
     * Second character is the last digit of the two-year period the ID was created.
     * Third and fourth is the candidate state. Presidential IDs don't have state.
     * Fifth and sixth is the district when the candidate first ran. This does not change if the
     * candidate/member's district changes during re-districting. Presidential IDs don't have districts.
     * The rest is sequence.
     *   -P00000001    All candidates
     *   -P00000002    Democrasts
     *   -P00000003    Republicans
     * 
     * 
     * @var ?string $candidateId
     */
	#[\JMS\Serializer\Annotation\SerializedName('candidate_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $candidateId = null;
    
    /**
     * 
     * Candidate last name
     * 
     * 
     * @var ?string $candidateLastName
     */
	#[\JMS\Serializer\Annotation\SerializedName('candidate_last_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $candidateLastName = null;
    
    /**
     * Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
     * 
     * @var ?string $candidatePartyAffiliation
     */
	#[\JMS\Serializer\Annotation\SerializedName('candidate_party_affiliation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $candidatePartyAffiliation = null;
    
    /**
     * State of contributor
     * 
     * @var ?string $contributorState
     */
	#[\JMS\Serializer\Annotation\SerializedName('contributor_state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $contributorState = null;
    
    /**
     * Year of election
     * 
     * @var ?int $electionYear
     */
	#[\JMS\Serializer\Annotation\SerializedName('election_year')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $electionYear = null;
    
    /**
     * Net contributions
     * 
     * @var ?float $netReceipts
     */
	#[\JMS\Serializer\Annotation\SerializedName('net_receipts')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $netReceipts = null;
    
    /**
     * 
     * Net receipts, in millions
     * 
     * 
     * @var ?float $roundedNetReceipts
     */
	#[\JMS\Serializer\Annotation\SerializedName('rounded_net_receipts')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $roundedNetReceipts = null;
    
	public function __construct()
	{
		$this->candidateId = null;
		$this->candidateLastName = null;
		$this->candidatePartyAffiliation = null;
		$this->contributorState = null;
		$this->electionYear = null;
		$this->netReceipts = null;
		$this->roundedNetReceipts = null;
	}
}
