"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dateinterval as shared_dateinterval
from ..shared import savingsplanscoveragedata as shared_savingsplanscoveragedata
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SavingsPlansCoverage:
    r"""The amount of Savings Plans eligible usage that's covered by Savings Plans. All calculations consider the On-Demand equivalent of your Savings Plans usage."""
    
    attributes: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Attributes'), 'exclude': lambda f: f is None }})  
    coverage: Optional[shared_savingsplanscoveragedata.SavingsPlansCoverageData] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Coverage'), 'exclude': lambda f: f is None }})  
    time_period: Optional[shared_dateinterval.DateInterval] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TimePeriod'), 'exclude': lambda f: f is None }})
    r"""The time period of the request."""  
    