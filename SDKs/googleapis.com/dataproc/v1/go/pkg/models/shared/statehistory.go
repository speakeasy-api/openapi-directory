// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// StateHistoryStateEnum - Output only. The state of the batch at this point in history.
type StateHistoryStateEnum string

const (
	StateHistoryStateEnumStateUnspecified StateHistoryStateEnum = "STATE_UNSPECIFIED"
	StateHistoryStateEnumPending          StateHistoryStateEnum = "PENDING"
	StateHistoryStateEnumRunning          StateHistoryStateEnum = "RUNNING"
	StateHistoryStateEnumCancelling       StateHistoryStateEnum = "CANCELLING"
	StateHistoryStateEnumCancelled        StateHistoryStateEnum = "CANCELLED"
	StateHistoryStateEnumSucceeded        StateHistoryStateEnum = "SUCCEEDED"
	StateHistoryStateEnumFailed           StateHistoryStateEnum = "FAILED"
)

func (e *StateHistoryStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "PENDING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "CANCELLING":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		*e = StateHistoryStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StateHistoryStateEnum: %s", s)
	}
}

// StateHistory - Historical state information.
type StateHistory struct {
	// Output only. The state of the batch at this point in history.
	State *StateHistoryStateEnum `json:"state,omitempty"`
	// Output only. Details about the state at this point in history.
	StateMessage *string `json:"stateMessage,omitempty"`
	// Output only. The time when the batch entered the historical state.
	StateStartTime *string `json:"stateStartTime,omitempty"`
}
