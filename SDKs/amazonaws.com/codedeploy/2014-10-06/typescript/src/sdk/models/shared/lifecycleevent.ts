/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Diagnostics } from "./diagnostics";
import { LifecycleEventStatusEnum } from "./lifecycleeventstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about a deployment lifecycle event.
 */
export class LifecycleEvent extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "diagnostics" })
  @Type(() => Diagnostics)
  diagnostics?: Diagnostics;

  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lifecycleEventName" })
  lifecycleEventName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: LifecycleEventStatusEnum;
}
