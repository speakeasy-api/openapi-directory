/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class GetRandomPasswordRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ExcludeCharacters" })
  excludeCharacters?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExcludeLowercase" })
  excludeLowercase?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ExcludeNumbers" })
  excludeNumbers?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ExcludePunctuation" })
  excludePunctuation?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ExcludeUppercase" })
  excludeUppercase?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "IncludeSpace" })
  includeSpace?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "PasswordLength" })
  passwordLength?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "RequireEachIncludedType" })
  requireEachIncludedType?: boolean;
}
