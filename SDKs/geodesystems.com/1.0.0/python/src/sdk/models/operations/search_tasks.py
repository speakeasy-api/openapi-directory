"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class SearchTasksRequest:
    
    changedate_from: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'changedate.from', 'style': 'form', 'explode': True }})
    r"""Archive change date from"""  
    changedate_to: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'changedate.to', 'style': 'form', 'explode': True }})
    r"""Archive change date to"""  
    createdate_from: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'createdate.from', 'style': 'form', 'explode': True }})
    r"""Archive create date from"""  
    createdate_to: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'createdate.to', 'style': 'form', 'explode': True }})
    r"""Archive create date to"""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'description', 'style': 'form', 'explode': True }})
    r"""Search description"""  
    filesuffix: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filesuffix', 'style': 'form', 'explode': True }})
    r"""File suffix"""  
    fromdate: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fromdate', 'style': 'form', 'explode': True }})
    r"""From date"""  
    group: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'group', 'style': 'form', 'explode': True }})
    r"""Parent entry"""  
    max: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'max', 'style': 'form', 'explode': True }})
    r"""Max number of results"""  
    maxlatitude: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'maxlatitude', 'style': 'form', 'explode': True }})
    r"""Northern bounds of search"""  
    maxlongitude: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'maxlongitude', 'style': 'form', 'explode': True }})
    r"""Eastern bounds of search"""  
    minlatitude: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'minlatitude', 'style': 'form', 'explode': True }})
    r"""Southern bounds of search"""  
    minlongitude: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'minlongitude', 'style': 'form', 'explode': True }})
    r"""Western bounds of search"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'name', 'style': 'form', 'explode': True }})
    r"""Search name"""  
    search_db_tasks_assignedto: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_tasks.assignedto', 'style': 'form', 'explode': True }})
    r"""Assigned To"""  
    search_db_tasks_complete: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_tasks.complete', 'style': 'form', 'explode': True }})
    r"""% Complete"""  
    search_db_tasks_enddate: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_tasks.enddate', 'style': 'form', 'explode': True }})
    r"""End Date"""  
    search_db_tasks_priority: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_tasks.priority', 'style': 'form', 'explode': True }})
    r"""Priority"""  
    search_db_tasks_startdate: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_tasks.startdate', 'style': 'form', 'explode': True }})
    r"""Start Date"""  
    search_db_tasks_status: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_tasks.status', 'style': 'form', 'explode': True }})
    r"""Status"""  
    search_db_tasks_title: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search.db_tasks.title', 'style': 'form', 'explode': True }})
    r"""Title"""  
    skip: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'skip', 'style': 'form', 'explode': True }})
    r"""Number to skip"""  
    text: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'text', 'style': 'form', 'explode': True }})
    r"""Search text"""  
    todate: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'todate', 'style': 'form', 'explode': True }})
    r"""To date"""  
    

@dataclasses.dataclass
class SearchTasksResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    