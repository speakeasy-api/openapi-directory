// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTEnableVgwRoutePropagationActionEnum
type POSTEnableVgwRoutePropagationActionEnum string

const (
	POSTEnableVgwRoutePropagationActionEnumEnableVgwRoutePropagation POSTEnableVgwRoutePropagationActionEnum = "EnableVgwRoutePropagation"
)

func (e *POSTEnableVgwRoutePropagationActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EnableVgwRoutePropagation":
		*e = POSTEnableVgwRoutePropagationActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTEnableVgwRoutePropagationActionEnum: %s", s)
	}
}

// POSTEnableVgwRoutePropagationVersionEnum
type POSTEnableVgwRoutePropagationVersionEnum string

const (
	POSTEnableVgwRoutePropagationVersionEnumTwoThousandAndSixteen1115 POSTEnableVgwRoutePropagationVersionEnum = "2016-11-15"
)

func (e *POSTEnableVgwRoutePropagationVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = POSTEnableVgwRoutePropagationVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTEnableVgwRoutePropagationVersionEnum: %s", s)
	}
}

type POSTEnableVgwRoutePropagationRequest struct {
	Action            POSTEnableVgwRoutePropagationActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                                   `request:"mediaType=text/xml"`
	Version           POSTEnableVgwRoutePropagationVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTEnableVgwRoutePropagationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
