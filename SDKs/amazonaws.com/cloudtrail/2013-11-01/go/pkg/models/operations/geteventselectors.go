// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetEventSelectorsXAmzTargetEnum
type GetEventSelectorsXAmzTargetEnum string

const (
	GetEventSelectorsXAmzTargetEnumComAmazonawsCloudtrailV20131101CloudTrail20131101GetEventSelectors GetEventSelectorsXAmzTargetEnum = "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetEventSelectors"
)

func (e GetEventSelectorsXAmzTargetEnum) ToPointer() *GetEventSelectorsXAmzTargetEnum {
	return &e
}

func (e *GetEventSelectorsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "com.amazonaws.cloudtrail.v20131101.CloudTrail_20131101.GetEventSelectors":
		*e = GetEventSelectorsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetEventSelectorsXAmzTargetEnum: %v", v)
	}
}

type GetEventSelectorsRequest struct {
	GetEventSelectorsRequest shared.GetEventSelectorsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               GetEventSelectorsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetEventSelectorsResponse struct {
	// CloudTrailARNInvalidException
	CloudTrailARNInvalidException interface{}
	ContentType                   string
	// Success
	GetEventSelectorsResponse *shared.GetEventSelectorsResponse
	// InvalidTrailNameException
	InvalidTrailNameException interface{}
	// NoManagementAccountSLRExistsException
	NoManagementAccountSLRExistsException interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// TrailNotFoundException
	TrailNotFoundException interface{}
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
