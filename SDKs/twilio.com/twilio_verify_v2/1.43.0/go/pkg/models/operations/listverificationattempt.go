// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

var ListVerificationAttemptServerList = []string{
	"https://verify.twilio.com",
}

type ListVerificationAttemptSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type ListVerificationAttemptRequest struct {
	// Filter used to query Verification Attempts by communication channel. Valid values are `SMS` and `CALL`
	Channel *shared.VerificationAttemptEnumChannelsEnum `queryParam:"style=form,explode=true,name=Channel"`
	// Destination of a verification. It is phone number in E.164 format.
	ChannelDataTo *string `queryParam:"style=form,explode=true,name=ChannelData.To"`
	// Filter used to query Verification Attempts sent to the specified destination country.
	Country *string `queryParam:"style=form,explode=true,name=Country"`
	// Datetime filter used to query Verification Attempts created after this datetime. Given as GMT in RFC 2822 format.
	DateCreatedAfter *time.Time `queryParam:"style=form,explode=true,name=DateCreatedAfter"`
	// Datetime filter used to query Verification Attempts created before this datetime. Given as GMT in RFC 2822 format.
	DateCreatedBefore *time.Time `queryParam:"style=form,explode=true,name=DateCreatedBefore"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
	// Filter used to query Verification Attempts by conversion status. Valid values are `UNCONVERTED`, for attempts that were not converted, and `CONVERTED`, for attempts that were confirmed.
	Status *shared.VerificationAttemptEnumConversionStatusEnum `queryParam:"style=form,explode=true,name=Status"`
	// Filter used to return all the Verification Attempts of a single verification. Only attempts of the provided verification SID will be returned.
	VerificationSid *string `queryParam:"style=form,explode=true,name=VerificationSid"`
	// Filter used to query Verification Attempts by verify service. Only attempts of the provided SID will be returned.
	VerifyServiceSid *string `queryParam:"style=form,explode=true,name=VerifyServiceSid"`
}

type ListVerificationAttemptListVerificationAttemptResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListVerificationAttemptListVerificationAttemptResponse - OK
type ListVerificationAttemptListVerificationAttemptResponse struct {
	Attempts []shared.VerifyV2VerificationAttempt                        `json:"attempts,omitempty"`
	Meta     *ListVerificationAttemptListVerificationAttemptResponseMeta `json:"meta,omitempty"`
}

type ListVerificationAttemptResponse struct {
	ContentType string
	// OK
	ListVerificationAttemptResponse *ListVerificationAttemptListVerificationAttemptResponse
	StatusCode                      int
	RawResponse                     *http.Response
}
