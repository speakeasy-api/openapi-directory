// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateProductSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

// CreateProductRequestBodyVatModeEnum - Vat mode for Product. Supported types: GROSS, NET
type CreateProductRequestBodyVatModeEnum string

const (
	CreateProductRequestBodyVatModeEnumGross CreateProductRequestBodyVatModeEnum = "GROSS"
	CreateProductRequestBodyVatModeEnumNet   CreateProductRequestBodyVatModeEnum = "NET"
)

func (e CreateProductRequestBodyVatModeEnum) ToPointer() *CreateProductRequestBodyVatModeEnum {
	return &e
}

func (e *CreateProductRequestBodyVatModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GROSS":
		fallthrough
	case "NET":
		*e = CreateProductRequestBodyVatModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateProductRequestBodyVatModeEnum: %v", v)
	}
}

type CreateProductRequestBody struct {
	// If set to 'false', the Product is disabled. No new Licensees can be registered for the Product, existing Licensees can not obtain new Licenses.
	Active bool `form:"name=active"`
	// Product description.
	Description *string `form:"name=description"`
	// If set to 'true', non-existing Licensees will be created at first validation attempt.
	LicenseeAutoCreate *bool `form:"name=licenseeAutoCreate"`
	// Licensing information.
	LicensingInfo *string `form:"name=licensingInfo"`
	// Product name. Together with the version identifies the Product for the end customer.
	Name string `form:"name=name"`
	// Unique number that identifies the Product. Vendor can assign this number when creating a Product or let NetLicensing generate one.
	Number *string `form:"name=number"`
	// Vat mode for Product. Supported types: GROSS, NET
	VatMode *CreateProductRequestBodyVatModeEnum `form:"name=vatMode"`
	// Product version. Convenience parameter, additional to the Product name.
	Version string `form:"name=version"`
}

type CreateProductResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful request
	Netlicensing *shared.Netlicensing
}
