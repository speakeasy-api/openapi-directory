// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FleetAttributeEnum - The fleet attribute.
type FleetAttributeEnum string

const (
	FleetAttributeEnumVpcConfiguration                 FleetAttributeEnum = "VPC_CONFIGURATION"
	FleetAttributeEnumVpcConfigurationSecurityGroupIds FleetAttributeEnum = "VPC_CONFIGURATION_SECURITY_GROUP_IDS"
	FleetAttributeEnumDomainJoinInfo                   FleetAttributeEnum = "DOMAIN_JOIN_INFO"
	FleetAttributeEnumIamRoleArn                       FleetAttributeEnum = "IAM_ROLE_ARN"
	FleetAttributeEnumUsbDeviceFilterStrings           FleetAttributeEnum = "USB_DEVICE_FILTER_STRINGS"
	FleetAttributeEnumSessionScriptS3Location          FleetAttributeEnum = "SESSION_SCRIPT_S3_LOCATION"
)

func (e FleetAttributeEnum) ToPointer() *FleetAttributeEnum {
	return &e
}

func (e *FleetAttributeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VPC_CONFIGURATION":
		fallthrough
	case "VPC_CONFIGURATION_SECURITY_GROUP_IDS":
		fallthrough
	case "DOMAIN_JOIN_INFO":
		fallthrough
	case "IAM_ROLE_ARN":
		fallthrough
	case "USB_DEVICE_FILTER_STRINGS":
		fallthrough
	case "SESSION_SCRIPT_S3_LOCATION":
		*e = FleetAttributeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FleetAttributeEnum: %v", v)
	}
}
