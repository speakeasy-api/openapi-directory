/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 *  The billing period range in which the custom line item request will be applied.
 */
export class CreateCustomLineItemRequestBodyBillingPeriodRange extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ExclusiveEndBillingPeriod" })
  exclusiveEndBillingPeriod?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InclusiveStartBillingPeriod" })
  inclusiveStartBillingPeriod?: string;
}

/**
 *  The charge details of a custom line item. It should contain only one of <code>Flat</code> or <code>Percentage</code>.
 */
export class CreateCustomLineItemRequestBodyChargeDetails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Flat" })
  @Type(() => shared.CustomLineItemFlatChargeDetails)
  flat?: shared.CustomLineItemFlatChargeDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "Percentage" })
  @Type(() => shared.CustomLineItemPercentageChargeDetails)
  percentage?: shared.CustomLineItemPercentageChargeDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: shared.CustomLineItemTypeEnum;
}

export class CreateCustomLineItemRequestBody extends SpeakeasyBase {
  /**
   *  The Amazon Resource Name (ARN) that references the billing group where the custom line item applies to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BillingGroupArn" })
  billingGroupArn: string;

  /**
   *  The billing period range in which the custom line item request will be applied.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "BillingPeriodRange" })
  @Type(() => CreateCustomLineItemRequestBodyBillingPeriodRange)
  billingPeriodRange?: CreateCustomLineItemRequestBodyBillingPeriodRange;

  /**
   *  The charge details of a custom line item. It should contain only one of <code>Flat</code> or <code>Percentage</code>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ChargeDetails" })
  @Type(() => CreateCustomLineItemRequestBodyChargeDetails)
  chargeDetails: CreateCustomLineItemRequestBodyChargeDetails;

  /**
   *  The description of the custom line item. This is shown on the Bills page in association with the charge value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description: string;

  /**
   *  The name of the custom line item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  /**
   *  A map that contains tag keys and tag values that are attached to a custom line item.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;
}

export class CreateCustomLineItemRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateCustomLineItemRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   *  The token that is needed to support idempotency. Idempotency isn't currently supported, but will be implemented in a future update.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amzn-Client-Token",
  })
  xAmznClientToken?: string;
}

export class CreateCustomLineItemResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * ConflictException
   */
  @SpeakeasyMetadata()
  conflictException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createCustomLineItemOutput?: shared.CreateCustomLineItemOutput;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * ServiceLimitExceededException
   */
  @SpeakeasyMetadata()
  serviceLimitExceededException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
