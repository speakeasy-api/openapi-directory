/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RawEmail } from "./rawemail";
import { SimpleEmail } from "./simpleemail";
import { Expose, Type } from "class-transformer";

/**
 * Specifies the default settings and content for a one-time email message that's sent directly to an endpoint.
 */
export class EmailMessage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Body" })
  body?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FeedbackForwardingAddress" })
  feedbackForwardingAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FromAddress" })
  fromAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RawEmail" })
  @Type(() => RawEmail)
  rawEmail?: RawEmail;

  @SpeakeasyMetadata()
  @Expose({ name: "ReplyToAddresses" })
  replyToAddresses?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SimpleEmail" })
  @Type(() => SimpleEmail)
  simpleEmail?: SimpleEmail;

  @SpeakeasyMetadata()
  @Expose({ name: "Substitutions" })
  substitutions?: Record<string, string[]>;
}
