// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type WebfontsWebfontsListCapabilityEnum string

const (
	WebfontsWebfontsListCapabilityEnumCapabilityUnspecified WebfontsWebfontsListCapabilityEnum = "CAPABILITY_UNSPECIFIED"
	WebfontsWebfontsListCapabilityEnumWoff2                 WebfontsWebfontsListCapabilityEnum = "WOFF2"
	WebfontsWebfontsListCapabilityEnumVf                    WebfontsWebfontsListCapabilityEnum = "VF"
)

func (e WebfontsWebfontsListCapabilityEnum) ToPointer() *WebfontsWebfontsListCapabilityEnum {
	return &e
}

func (e *WebfontsWebfontsListCapabilityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAPABILITY_UNSPECIFIED":
		fallthrough
	case "WOFF2":
		fallthrough
	case "VF":
		*e = WebfontsWebfontsListCapabilityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WebfontsWebfontsListCapabilityEnum: %v", v)
	}
}

// WebfontsWebfontsListSortEnum - Enables sorting of the list.
type WebfontsWebfontsListSortEnum string

const (
	WebfontsWebfontsListSortEnumSortUndefined WebfontsWebfontsListSortEnum = "SORT_UNDEFINED"
	WebfontsWebfontsListSortEnumAlpha         WebfontsWebfontsListSortEnum = "ALPHA"
	WebfontsWebfontsListSortEnumDate          WebfontsWebfontsListSortEnum = "DATE"
	WebfontsWebfontsListSortEnumPopularity    WebfontsWebfontsListSortEnum = "POPULARITY"
	WebfontsWebfontsListSortEnumStyle         WebfontsWebfontsListSortEnum = "STYLE"
	WebfontsWebfontsListSortEnumTrending      WebfontsWebfontsListSortEnum = "TRENDING"
)

func (e WebfontsWebfontsListSortEnum) ToPointer() *WebfontsWebfontsListSortEnum {
	return &e
}

func (e *WebfontsWebfontsListSortEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SORT_UNDEFINED":
		fallthrough
	case "ALPHA":
		fallthrough
	case "DATE":
		fallthrough
	case "POPULARITY":
		fallthrough
	case "STYLE":
		fallthrough
	case "TRENDING":
		*e = WebfontsWebfontsListSortEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WebfontsWebfontsListSortEnum: %v", v)
	}
}

type WebfontsWebfontsListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Controls the font urls in `Webfont.files`, by default, static ttf fonts are sent.
	Capability []WebfontsWebfontsListCapabilityEnum `queryParam:"style=form,explode=true,name=capability"`
	// Filters by Webfont.family, using literal match. If not set, returns all families
	Family []string `queryParam:"style=form,explode=true,name=family"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Enables sorting of the list.
	Sort *WebfontsWebfontsListSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// Filters by Webfont.subset, if subset is found in Webfont.subsets. If not set, returns all families.
	Subset *string `queryParam:"style=form,explode=true,name=subset"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type WebfontsWebfontsListResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful response
	WebfontList *shared.WebfontList
}
