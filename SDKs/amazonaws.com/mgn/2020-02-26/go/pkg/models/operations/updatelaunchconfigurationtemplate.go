// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateLaunchConfigurationTemplateRequestBodyBootModeEnum - Launch configuration template boot mode.
type UpdateLaunchConfigurationTemplateRequestBodyBootModeEnum string

const (
	UpdateLaunchConfigurationTemplateRequestBodyBootModeEnumLegacyBios UpdateLaunchConfigurationTemplateRequestBodyBootModeEnum = "LEGACY_BIOS"
	UpdateLaunchConfigurationTemplateRequestBodyBootModeEnumUefi       UpdateLaunchConfigurationTemplateRequestBodyBootModeEnum = "UEFI"
)

func (e UpdateLaunchConfigurationTemplateRequestBodyBootModeEnum) ToPointer() *UpdateLaunchConfigurationTemplateRequestBodyBootModeEnum {
	return &e
}

func (e *UpdateLaunchConfigurationTemplateRequestBodyBootModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LEGACY_BIOS":
		fallthrough
	case "UEFI":
		*e = UpdateLaunchConfigurationTemplateRequestBodyBootModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateLaunchConfigurationTemplateRequestBodyBootModeEnum: %v", v)
	}
}

// UpdateLaunchConfigurationTemplateRequestBodyLargeVolumeConf - Launch template disk configuration.
type UpdateLaunchConfigurationTemplateRequestBodyLargeVolumeConf struct {
	Iops       *int64                 `json:"iops,omitempty"`
	Throughput *int64                 `json:"throughput,omitempty"`
	VolumeType *shared.VolumeTypeEnum `json:"volumeType,omitempty"`
}

// UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum - Launch disposition.
type UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum string

const (
	UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnumStopped UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum = "STOPPED"
	UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnumStarted UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum = "STARTED"
)

func (e UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum) ToPointer() *UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum {
	return &e
}

func (e *UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STOPPED":
		fallthrough
	case "STARTED":
		*e = UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum: %v", v)
	}
}

// UpdateLaunchConfigurationTemplateRequestBodyLicensing - Configure Licensing.
type UpdateLaunchConfigurationTemplateRequestBodyLicensing struct {
	OsByol *bool `json:"osByol,omitempty"`
}

// UpdateLaunchConfigurationTemplateRequestBodyPostLaunchActions - Post Launch Actions to executed on the Test or Cutover instance.
type UpdateLaunchConfigurationTemplateRequestBodyPostLaunchActions struct {
	CloudWatchLogGroupName *string                                     `json:"cloudWatchLogGroupName,omitempty"`
	Deployment             *shared.PostLaunchActionsDeploymentTypeEnum `json:"deployment,omitempty"`
	S3LogBucket            *string                                     `json:"s3LogBucket,omitempty"`
	S3OutputKeyPrefix      *string                                     `json:"s3OutputKeyPrefix,omitempty"`
	SsmDocuments           []shared.SsmDocument                        `json:"ssmDocuments,omitempty"`
}

// UpdateLaunchConfigurationTemplateRequestBodySmallVolumeConf - Launch template disk configuration.
type UpdateLaunchConfigurationTemplateRequestBodySmallVolumeConf struct {
	Iops       *int64                 `json:"iops,omitempty"`
	Throughput *int64                 `json:"throughput,omitempty"`
	VolumeType *shared.VolumeTypeEnum `json:"volumeType,omitempty"`
}

// UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum - Target instance type right-sizing method.
type UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum string

const (
	UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnumNone  UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum = "NONE"
	UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnumBasic UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum = "BASIC"
)

func (e UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum) ToPointer() *UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum {
	return &e
}

func (e *UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NONE":
		fallthrough
	case "BASIC":
		*e = UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum: %v", v)
	}
}

type UpdateLaunchConfigurationTemplateRequestBody struct {
	// Associate public Ip address.
	AssociatePublicIPAddress *bool `json:"associatePublicIpAddress,omitempty"`
	// Launch configuration template boot mode.
	BootMode *UpdateLaunchConfigurationTemplateRequestBodyBootModeEnum `json:"bootMode,omitempty"`
	// Copy private Ip.
	CopyPrivateIP *bool `json:"copyPrivateIp,omitempty"`
	// Copy tags.
	CopyTags *bool `json:"copyTags,omitempty"`
	// Enable map auto tagging.
	EnableMapAutoTagging *bool `json:"enableMapAutoTagging,omitempty"`
	// Launch template disk configuration.
	LargeVolumeConf *UpdateLaunchConfigurationTemplateRequestBodyLargeVolumeConf `json:"largeVolumeConf,omitempty"`
	// Launch Configuration Template ID.
	LaunchConfigurationTemplateID string `json:"launchConfigurationTemplateID"`
	// Launch disposition.
	LaunchDisposition *UpdateLaunchConfigurationTemplateRequestBodyLaunchDispositionEnum `json:"launchDisposition,omitempty"`
	// Configure Licensing.
	Licensing *UpdateLaunchConfigurationTemplateRequestBodyLicensing `json:"licensing,omitempty"`
	// Launch configuration template map auto tagging MPE ID.
	MapAutoTaggingMpeID *string `json:"mapAutoTaggingMpeID,omitempty"`
	// Post Launch Actions to executed on the Test or Cutover instance.
	PostLaunchActions *UpdateLaunchConfigurationTemplateRequestBodyPostLaunchActions `json:"postLaunchActions,omitempty"`
	// Launch template disk configuration.
	SmallVolumeConf *UpdateLaunchConfigurationTemplateRequestBodySmallVolumeConf `json:"smallVolumeConf,omitempty"`
	// Small volume maximum size.
	SmallVolumeMaxSize *int64 `json:"smallVolumeMaxSize,omitempty"`
	// Target instance type right-sizing method.
	TargetInstanceTypeRightSizingMethod *UpdateLaunchConfigurationTemplateRequestBodyTargetInstanceTypeRightSizingMethodEnum `json:"targetInstanceTypeRightSizingMethod,omitempty"`
}

type UpdateLaunchConfigurationTemplateRequest struct {
	RequestBody       UpdateLaunchConfigurationTemplateRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateLaunchConfigurationTemplateResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	LaunchConfigurationTemplate *shared.LaunchConfigurationTemplate
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// UninitializedAccountException
	UninitializedAccountException interface{}
	// ValidationException
	ValidationException interface{}
}
