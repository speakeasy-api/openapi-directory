/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MinimalRepository } from "./minimalrepository";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Scope of the required workflow
 */
export enum RequiredWorkflowScopeEnum {
  All = "all",
  Selected = "selected",
}

/**
 * State of the required workflow
 */
export enum RequiredWorkflowStateEnum {
  Active = "active",
  Deleted = "deleted",
}

/**
 * Response
 */
export class RequiredWorkflow extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * Unique identifier for a required workflow
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Name present in the workflow file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Path of the workflow file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path: string;

  /**
   * Ref at which the workflow file will be selected
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ref" })
  ref: string;

  /**
   * Minimal Repository
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repository" })
  @Type(() => MinimalRepository)
  repository: MinimalRepository;

  /**
   * Scope of the required workflow
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope: RequiredWorkflowScopeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "selected_repositories_url" })
  selectedRepositoriesUrl?: string;

  /**
   * State of the required workflow
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: RequiredWorkflowStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;
}
