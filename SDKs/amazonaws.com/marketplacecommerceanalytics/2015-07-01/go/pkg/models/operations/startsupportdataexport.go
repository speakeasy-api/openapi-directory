// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartSupportDataExportXAmzTargetEnum
type StartSupportDataExportXAmzTargetEnum string

const (
	StartSupportDataExportXAmzTargetEnumMarketplaceCommerceAnalytics20150701StartSupportDataExport StartSupportDataExportXAmzTargetEnum = "MarketplaceCommerceAnalytics20150701.StartSupportDataExport"
)

func (e *StartSupportDataExportXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MarketplaceCommerceAnalytics20150701.StartSupportDataExport":
		*e = StartSupportDataExportXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StartSupportDataExportXAmzTargetEnum: %s", s)
	}
}

type StartSupportDataExportHeaders struct {
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        StartSupportDataExportXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartSupportDataExportRequest struct {
	Headers StartSupportDataExportHeaders
	Request shared.StartSupportDataExportRequest `request:"mediaType=application/json"`
}

type StartSupportDataExportResponse struct {
	ContentType string
	// MarketplaceCommerceAnalyticsException
	MarketplaceCommerceAnalyticsException interface{}
	// Success
	StartSupportDataExportResult *shared.StartSupportDataExportResult
	StatusCode                   int
	RawResponse                  *http.Response
}
