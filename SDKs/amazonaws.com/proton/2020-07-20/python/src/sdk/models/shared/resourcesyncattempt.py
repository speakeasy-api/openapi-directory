"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import resourcesyncevent as shared_resourcesyncevent
from ..shared import resourcesyncstatus_enum as shared_resourcesyncstatus_enum
from ..shared import revision as shared_revision
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ResourceSyncAttempt:
    r"""Detail data for a resource sync attempt activated by a push to a repository."""
    
    events: list[shared_resourcesyncevent.ResourceSyncEvent] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('events') }})  
    initial_revision: shared_revision.Revision = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('initialRevision') }})  
    started_at: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startedAt'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    status: shared_resourcesyncstatus_enum.ResourceSyncStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    target: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('target') }})  
    target_revision: shared_revision.Revision = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetRevision') }})  
    