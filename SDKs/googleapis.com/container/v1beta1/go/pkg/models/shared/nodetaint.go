// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NodeTaintEffectEnum - Effect for taint.
type NodeTaintEffectEnum string

const (
	NodeTaintEffectEnumEffectUnspecified NodeTaintEffectEnum = "EFFECT_UNSPECIFIED"
	NodeTaintEffectEnumNoSchedule        NodeTaintEffectEnum = "NO_SCHEDULE"
	NodeTaintEffectEnumPreferNoSchedule  NodeTaintEffectEnum = "PREFER_NO_SCHEDULE"
	NodeTaintEffectEnumNoExecute         NodeTaintEffectEnum = "NO_EXECUTE"
)

func (e *NodeTaintEffectEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EFFECT_UNSPECIFIED":
		fallthrough
	case "NO_SCHEDULE":
		fallthrough
	case "PREFER_NO_SCHEDULE":
		fallthrough
	case "NO_EXECUTE":
		*e = NodeTaintEffectEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NodeTaintEffectEnum: %s", s)
	}
}

// NodeTaint - Kubernetes taint is composed of three fields: key, value, and effect. Effect can only be one of three types: NoSchedule, PreferNoSchedule or NoExecute. See [here](https://kubernetes.io/docs/concepts/configuration/taint-and-toleration) for more information, including usage and the valid values.
type NodeTaint struct {
	// Effect for taint.
	Effect *NodeTaintEffectEnum `json:"effect,omitempty"`
	// Key for taint.
	Key *string `json:"key,omitempty"`
	// Value for taint.
	Value *string `json:"value,omitempty"`
}
