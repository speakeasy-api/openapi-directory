/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Either `EUR` or `GBP`, and must correspond to the currency of the account the funds are being lodged into in the `icanTo`.
 */
export enum NewPaymentRequestNewPaymentRequestCurrencyEnum {
  Eur = "EUR",
  Gbp = "GBP",
}

export class NewPaymentRequestNewPaymentRequestOrderDetails extends SpeakeasyBase {
  /**
   * This is your own comment for the transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment1" })
  comment1?: string;

  /**
   * This is your own comment for the transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment2" })
  comment2?: string;

  /**
   * Use this field to store a customer number for the transaction (for example).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customerNumber" })
  customerNumber?: string;

  /**
   * The first line of the delivery address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryAddressLine1" })
  deliveryAddressLine1?: string;

  /**
   * The second line of the delivery address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryAddressLine2" })
  deliveryAddressLine2?: string;

  /**
   * Delivery address city
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryCity" })
  deliveryCity?: string;

  /**
   * 2-digit code for the country
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryCountry" })
  deliveryCountry?: string;

  /**
   * Delivery address post code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "deliveryPostCode" })
  deliveryPostCode?: string;

  /**
   * This is a reference you use to uniquely identify each of your customers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantCustomerIdentification" })
  merchantCustomerIdentification?: string;

  /**
   * Your Merchant Number (if applicable).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "merchantNumber" })
  merchantNumber?: string;

  /**
   * Use this field to store the order id for the transaction. The Order Id cannot be set unless the `maxNumberPayments` is 1.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orderId" })
  orderId?: string;

  /**
   * Use this field to store a product id for the transaction (for example).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productId" })
  productId?: string;

  /**
   * Use this field to store any other reference for the transaction (for example, a phone number).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "variableReference" })
  variableReference?: string;
}

/**
 * The type of Fire Open Payment that was created
 */
export enum NewPaymentRequestNewPaymentRequestTypeEnum {
  Other = "OTHER",
}

/**
 * Details of the new payment request
 */
export class NewPaymentRequestNewPaymentRequest extends SpeakeasyBase {
  /**
   * These fields will be dispalyed to the payer when using the hosted option. You can choose to display any of `ORDER_ID`, `PRODUCT_ID`, `CUSTOMER_ID`, `CUSTOMER_NUMBER` and `COMMENT2` to the payer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "additionalFields" })
  additionalFields?: string;

  /**
   * The requested amount to pay. Note the last two digits represent pennies/cents, (e.g., £1.00 = 100).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: number;

  /**
   * For the hosted option, the payer will be asked to fill in these fields but they will not be mandatory. You can choose to collect any of the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "collectFields" })
  collectFields?: string;

  /**
   * Either `EUR` or `GBP`, and must correspond to the currency of the account the funds are being lodged into in the `icanTo`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: NewPaymentRequestNewPaymentRequestCurrencyEnum;

  /**
   * A public facing description of the request. This will be shown to the user when they tap or scan the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * This is the expiry of the payment request. After this time, the payment cannot be paid.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expiry" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiry?: Date;

  /**
   * The ican of the account to collect the funds into. Must be one of your fire.com Accounts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "icanTo" })
  icanTo: number;

  /**
   * For the hosted option, these fields will be madatory for the payer to fill in on the hosted payment page. You can choose to collect any the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mandatoryFields" })
  mandatoryFields?: string;

  /**
   * The max number of people who can pay this request. Must be set to 1 for the ECOMMERCE_GOODS and ECOMMERCE_SERVICES types.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxNumberPayments" })
  maxNumberPayments?: number;

  /**
   * An internal description of the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "myRef" })
  myRef: string;

  @SpeakeasyMetadata()
  @Expose({ name: "orderDetails" })
  @Type(() => NewPaymentRequestNewPaymentRequestOrderDetails)
  orderDetails?: NewPaymentRequestNewPaymentRequestOrderDetails;

  /**
   * The merchant return URL where the customer will be re-directed to with the result of the transaction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "returnUrl" })
  returnUrl?: string;

  /**
   * The type of Fire Open Payment that was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: NewPaymentRequestNewPaymentRequestTypeEnum;
}

/**
 * The type of Fire Open Payment that was created.
 */
export enum NewPaymentRequestNewPaymentRequestResponseTypeEnum {
  Other = "OTHER",
}

/**
 * Payment Request created successfully
 */
export class NewPaymentRequestNewPaymentRequestResponse extends SpeakeasyBase {
  /**
   * The code for this request. Create a URL in this format: `https://payments.fire.com/{code}` and share to your customers.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * The type of Fire Open Payment that was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: NewPaymentRequestNewPaymentRequestResponseTypeEnum;
}

export class NewPaymentRequestResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Payment Request created successfully
   */
  @SpeakeasyMetadata()
  newPaymentRequestResponse?: NewPaymentRequestNewPaymentRequestResponse;
}
