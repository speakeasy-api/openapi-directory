"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import proxy_v1_service_short_code as shared_proxy_v1_service_short_code
from typing import Optional

FETCH_SHORT_CODE_SERVERS = [
	"https://proxy.twilio.com",
]


@dataclasses.dataclass
class FetchShortCodeSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class FetchShortCodeRequest:
    
    service_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'ServiceSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the parent [Service](https://www.twilio.com/docs/proxy/api/service) to fetch the resource from."""  
    sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'Sid', 'style': 'simple', 'explode': False }})
    r"""The Twilio-provided string that uniquely identifies the ShortCode resource to fetch."""  
    

@dataclasses.dataclass
class FetchShortCodeResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    proxy_v1_service_short_code: Optional[shared_proxy_v1_service_short_code.ProxyV1ServiceShortCode] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    