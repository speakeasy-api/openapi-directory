// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type PostSearchVersionNumberGeometrySearchQueryExtPathParams struct {
	// Expected response format.
	Ext shared.ExtEnum `pathParam:"style=simple,explode=false,name=ext"`
	// Query string. Must be properly URL encoded.
	Query string `pathParam:"style=simple,explode=false,name=query"`
	// Service version number. The current value is 2.
	VersionNumber shared.VersionNumberEnum `pathParam:"style=simple,explode=false,name=versionNumber"`
}

type PostSearchVersionNumberGeometrySearchQueryExtQueryParams struct {
	// Indexes for which extended postal codes should be included in the results. Available indexes are:
	//   - <b>Addr</b> = Address ranges
	//   - <b>Geo</b> = Geographies
	//   - <b>PAD</b> = Point Addresses
	//   - <b>POI</b> = Points of Interest
	//   - <b>Str</b> = Streets
	//   - <b>XStr</b> = Cross Streets (intersections)
	ExtendedPostalCodesFor *string `queryParam:"style=form,explode=true,name=extendedPostalCodesFor"`
	// A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:
	//   - <b>Addr</b> = Address range interpolation (when there is no PAD)
	//   - <b>Geo</b> = Geographies
	//   - <b>PAD</b> = Point Addresses
	//   - <b>POI</b> = Points of interest
	//   - <b>Str</b> = Streets
	//   - <b>Xstr</b> = Cross Streets (intersections)
	IdxSet *string `queryParam:"style=form,explode=true,name=idxSet"`
	// Language in which search results should be returned. Should be one of <a href="/search-api/search-api-documentation/supported-languages">supported IETF language tags</a>, case insensitive.
	Language *string `queryParam:"style=form,explode=true,name=language"`
	// Maximum number of search results that will be returned.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
}

type PostSearchVersionNumberGeometrySearchQueryExtRequestBodyGeometryList struct {
	Position *string  `json:"position,omitempty"`
	Radius   *int64   `json:"radius,omitempty"`
	Type     *string  `json:"type,omitempty"`
	Vertices []string `json:"vertices,omitempty"`
}

type PostSearchVersionNumberGeometrySearchQueryExtRequestBody struct {
	GeometryList []PostSearchVersionNumberGeometrySearchQueryExtRequestBodyGeometryList `json:"geometryList,omitempty"`
}

type PostSearchVersionNumberGeometrySearchQueryExtRequest struct {
	PathParams  PostSearchVersionNumberGeometrySearchQueryExtPathParams
	QueryParams PostSearchVersionNumberGeometrySearchQueryExtQueryParams
	Request     *PostSearchVersionNumberGeometrySearchQueryExtRequestBody `request:"mediaType=application/json"`
}

type PostSearchVersionNumberGeometrySearchQueryExtResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
