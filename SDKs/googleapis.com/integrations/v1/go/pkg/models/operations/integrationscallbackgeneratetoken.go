// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type IntegrationsCallbackGenerateTokenSecurity struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

// IntegrationsCallbackGenerateTokenProductEnum - Which product sends the request
type IntegrationsCallbackGenerateTokenProductEnum string

const (
	IntegrationsCallbackGenerateTokenProductEnumUnspecifiedProduct IntegrationsCallbackGenerateTokenProductEnum = "UNSPECIFIED_PRODUCT"
	IntegrationsCallbackGenerateTokenProductEnumIP                 IntegrationsCallbackGenerateTokenProductEnum = "IP"
	IntegrationsCallbackGenerateTokenProductEnumApigee             IntegrationsCallbackGenerateTokenProductEnum = "APIGEE"
	IntegrationsCallbackGenerateTokenProductEnumSecurity           IntegrationsCallbackGenerateTokenProductEnum = "SECURITY"
)

func (e IntegrationsCallbackGenerateTokenProductEnum) ToPointer() *IntegrationsCallbackGenerateTokenProductEnum {
	return &e
}

func (e *IntegrationsCallbackGenerateTokenProductEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNSPECIFIED_PRODUCT":
		fallthrough
	case "IP":
		fallthrough
	case "APIGEE":
		fallthrough
	case "SECURITY":
		*e = IntegrationsCallbackGenerateTokenProductEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IntegrationsCallbackGenerateTokenProductEnum: %v", v)
	}
}

type IntegrationsCallbackGenerateTokenRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// The auth code for the given request
	Code *string `queryParam:"style=form,explode=true,name=code"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// The gcp project id of the request
	GcpProjectID *string `queryParam:"style=form,explode=true,name=gcpProjectId"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Which product sends the request
	Product *IntegrationsCallbackGenerateTokenProductEnum `queryParam:"style=form,explode=true,name=product"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Redirect uri of the auth code request
	RedirectURI *string `queryParam:"style=form,explode=true,name=redirectUri"`
	// The auth config id for the given request
	State *string `queryParam:"style=form,explode=true,name=state"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type IntegrationsCallbackGenerateTokenResponse struct {
	ContentType string
	// Successful response
	GoogleCloudIntegrationsV1alphaGenerateTokenResponse *shared.GoogleCloudIntegrationsV1alphaGenerateTokenResponse
	StatusCode                                          int
	RawResponse                                         *http.Response
}
