<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETPutLifecycleHookRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETPutLifecycleHookActionEnum $action;
    
    /**
     * The name of the Auto Scaling group.
     * 
     * @var string $autoScalingGroupName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=AutoScalingGroupName')]
    public string $autoScalingGroupName;
    
    /**
     * <p>The action the Auto Scaling group takes when the lifecycle hook timeout elapses or if an unexpected failure occurs. The default value is <code>ABANDON</code>.</p> <p>Valid values: <code>CONTINUE</code> | <code>ABANDON</code> </p>
     * 
     * @var ?string $defaultResult
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DefaultResult')]
    public ?string $defaultResult = null;
    
    /**
     * The maximum time, in seconds, that can elapse before the lifecycle hook times out. The range is from <code>30</code> to <code>7200</code> seconds. The default value is <code>3600</code> seconds (1 hour).
     * 
     * @var ?int $heartbeatTimeout
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=HeartbeatTimeout')]
    public ?int $heartbeatTimeout = null;
    
    /**
     * The name of the lifecycle hook.
     * 
     * @var string $lifecycleHookName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=LifecycleHookName')]
    public string $lifecycleHookName;
    
    /**
     * <p>The lifecycle transition. For Auto Scaling groups, there are two major lifecycle transitions.</p> <ul> <li> <p>To create a lifecycle hook for scale-out events, specify <code>autoscaling:EC2_INSTANCE_LAUNCHING</code>.</p> </li> <li> <p>To create a lifecycle hook for scale-in events, specify <code>autoscaling:EC2_INSTANCE_TERMINATING</code>.</p> </li> </ul> <p>Required for new lifecycle hooks, but optional when updating existing hooks.</p>
     * 
     * @var ?string $lifecycleTransition
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=LifecycleTransition')]
    public ?string $lifecycleTransition = null;
    
    /**
     * Additional information that you want to include any time Amazon EC2 Auto Scaling sends a message to the notification target.
     * 
     * @var ?string $notificationMetadata
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=NotificationMetadata')]
    public ?string $notificationMetadata = null;
    
    /**
     * <p>The Amazon Resource Name (ARN) of the notification target that Amazon EC2 Auto Scaling uses to notify you when an instance is in a wait state for the lifecycle hook. You can specify either an Amazon SNS topic or an Amazon SQS queue.</p> <p>If you specify an empty string, this overrides the current ARN.</p> <p>This operation uses the JSON format when sending notifications to an Amazon SQS queue, and an email key-value pair format when sending notifications to an Amazon SNS topic.</p> <p>When you specify a notification target, Amazon EC2 Auto Scaling sends it a test message. Test messages contain the following additional key-value pair: <code>"Event": "autoscaling:TEST_NOTIFICATION"</code>.</p>
     * 
     * @var ?string $notificationTargetARN
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=NotificationTargetARN')]
    public ?string $notificationTargetARN = null;
    
    /**
     * <p>The ARN of the IAM role that allows the Auto Scaling group to publish to the specified notification target.</p> <p>Valid only if the notification target is an Amazon SNS topic or an Amazon SQS queue. Required for new lifecycle hooks, but optional when updating existing hooks.</p>
     * 
     * @var ?string $roleARN
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=RoleARN')]
    public ?string $roleARN = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETPutLifecycleHookVersionEnum $version;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETPutLifecycleHookActionEnum::PUT_LIFECYCLE_HOOK;
		$this->autoScalingGroupName = "";
		$this->defaultResult = null;
		$this->heartbeatTimeout = null;
		$this->lifecycleHookName = "";
		$this->lifecycleTransition = null;
		$this->notificationMetadata = null;
		$this->notificationTargetARN = null;
		$this->roleARN = null;
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETPutLifecycleHookVersionEnum::TWO_THOUSAND_AND_ELEVEN0101;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
