// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type EditEmbedPresetPathParams struct {
	// The ID of the preset.
	PresetID float64 `pathParam:"style=simple,explode=false,name=preset_id"`
	// The ID of the user.
	UserID float64 `pathParam:"style=simple,explode=false,name=user_id"`
}

// EditEmbedPresetRequestBodyOutroEnum - Disable the outro.
type EditEmbedPresetRequestBodyOutroEnum string

const (
	EditEmbedPresetRequestBodyOutroEnumNothing EditEmbedPresetRequestBodyOutroEnum = "nothing"
)

func (e *EditEmbedPresetRequestBodyOutroEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "nothing":
		*e = EditEmbedPresetRequestBodyOutroEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EditEmbedPresetRequestBodyOutroEnum: %s", s)
	}
}

type EditEmbedPresetRequestBody struct {
	// Disable the outro.
	Outro *EditEmbedPresetRequestBodyOutroEnum `json:"outro,omitempty"`
}

type EditEmbedPresetRequest struct {
	PathParams EditEmbedPresetPathParams
	Request    *EditEmbedPresetRequestBody `request:"mediaType=application/vnd.vimeo.preset+json"`
}

type EditEmbedPresetResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The outro type is invalid.
	LegacyError *shared.LegacyError
	// The embed preset was edited.
	Presets *shared.Presets
}
