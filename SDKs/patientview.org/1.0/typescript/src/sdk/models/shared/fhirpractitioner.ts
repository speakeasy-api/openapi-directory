/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FhirContact } from "./fhircontact";
import { Expose, Transform, Type } from "class-transformer";

export class FhirPractitioner extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address1" })
  address1?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "address2" })
  address2?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "address3" })
  address3?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "address4" })
  address4?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "allowInviteGp" })
  allowInviteGp?: boolean;

  @SpeakeasyMetadata({ elemType: FhirContact })
  @Expose({ name: "contacts" })
  @Type(() => FhirContact)
  contacts?: FhirContact[];

  @SpeakeasyMetadata()
  @Expose({ name: "gender" })
  gender?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "groupCode" })
  groupCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "identifier" })
  identifier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "inviteDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  inviteDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "postcode" })
  postcode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: string;
}
