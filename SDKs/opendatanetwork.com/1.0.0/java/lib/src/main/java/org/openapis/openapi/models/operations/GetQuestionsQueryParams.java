/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetQuestionsQueryParams {
    /**
     * The [Socrata App Token](https://dev.socrata.com/docs/app-tokens.html) to be
     * used with your request. The `app_token` parameter is required if an app token is not passed via the `X-App-Token` HTTP header. Clients must [register for their own app tokens](https://dev.socrata.com/docs/app-tokens.html).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=app_token")
    public String appToken;
    public GetQuestionsQueryParams withAppToken(String appToken) {
        this.appToken = appToken;
        return this;
    }
    
    /**
     * Maximum number of results to return.
     * Must be an integer from 0 to 50000.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Double limit;
    public GetQuestionsQueryParams withLimit(Double limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Number of results to skip.
     * Used for pagination.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Double offset;
    public GetQuestionsQueryParams withOffset(Double offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * String to search against.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=query")
    public String query;
    public GetQuestionsQueryParams withQuery(String query) {
        this.query = query;
        return this;
    }
    
}
