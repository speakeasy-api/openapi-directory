/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * The status of the batch job executions.
 */
export enum ListBatchJobExecutionsStatusEnum {
  Submitting = "Submitting",
  Holding = "Holding",
  Dispatching = "Dispatching",
  Running = "Running",
  Cancelling = "Cancelling",
  Cancelled = "Cancelled",
  Succeeded = "Succeeded",
  Failed = "Failed",
  SucceededWithWarning = "Succeeded With Warning",
}

export class ListBatchJobExecutionsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The unique identifier of the application.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=applicationId",
  })
  applicationId: string;

  /**
   * The unique identifier of each batch job execution.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=executionIds",
  })
  executionIds?: string[];

  /**
   * The name of each batch job execution.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=jobName",
  })
  jobName?: string;

  /**
   * The maximum number of batch job executions to return.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=maxResults",
  })
  maxResults?: number;

  /**
   * A pagination token to control the number of batch job executions displayed in the list.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=nextToken",
  })
  nextToken?: string;

  /**
   * The time after which the batch job executions started.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=startedAfter;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  startedAfter?: Date;

  /**
   * The time before the batch job executions started.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=startedBefore;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  startedBefore?: Date;

  /**
   * The status of the batch job executions.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=status",
  })
  status?: ListBatchJobExecutionsStatusEnum;
}

export class ListBatchJobExecutionsResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listBatchJobExecutionsResponse?: shared.ListBatchJobExecutionsResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
