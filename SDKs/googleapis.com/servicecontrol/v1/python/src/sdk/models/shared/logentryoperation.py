"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LogEntryOperation:
    r"""Additional information about a potentially long-running operation with which a log entry is associated."""
    
    first: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('first'), 'exclude': lambda f: f is None }})
    r"""Optional. Set this to True if this is the first log entry in the operation."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Optional. An arbitrary operation identifier. Log entries with the same identifier are assumed to be part of the same operation."""  
    last: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last'), 'exclude': lambda f: f is None }})
    r"""Optional. Set this to True if this is the last log entry in the operation."""  
    producer: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('producer'), 'exclude': lambda f: f is None }})
    r"""Optional. An arbitrary producer identifier. The combination of `id` and `producer` must be globally unique. Examples for `producer`: `\\"MyDivision.MyBigCompany.com\\"`, `\\"github.com/MyProject/MyApplication\\"`."""  
    