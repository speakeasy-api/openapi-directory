/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PatchSlaDomainRequest {
    /**
     * Object containing the fields to be edited for SLA Domain. The SLA Domain accepts two backup windows, one for a regular backup or snapshot and one for the first full backup or snapshot. Specify times using the Rubrik cluster timezone. Remote SLA Domain only supports edit to the archival specification.
     */
    @SpeakeasyMetadata("request:mediaType=application/json")
    public org.openapis.openapi.models.shared.SlaDomainPatchDefinition slaDomainPatchDefinition;

    public PatchSlaDomainRequest withSlaDomainPatchDefinition(org.openapis.openapi.models.shared.SlaDomainPatchDefinition slaDomainPatchDefinition) {
        this.slaDomainPatchDefinition = slaDomainPatchDefinition;
        return this;
    }
    
    /**
     * ID of the SLA Domain.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=id")
    public String id;

    public PatchSlaDomainRequest withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * A Boolean that determines whether the new configuration retains existing snapshots of data sources that are currently retained by this SLA Domain. The value is 'true' by default.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=should_apply_to_existing_snapshots")
    public Boolean shouldApplyToExistingSnapshots;

    public PatchSlaDomainRequest withShouldApplyToExistingSnapshots(Boolean shouldApplyToExistingSnapshots) {
        this.shouldApplyToExistingSnapshots = shouldApplyToExistingSnapshots;
        return this;
    }
    
    public PatchSlaDomainRequest(@JsonProperty("SlaDomainPatchDefinition") org.openapis.openapi.models.shared.SlaDomainPatchDefinition slaDomainPatchDefinition, @JsonProperty("id") String id) {
        this.slaDomainPatchDefinition = slaDomainPatchDefinition;
        this.id = id;
  }
}
