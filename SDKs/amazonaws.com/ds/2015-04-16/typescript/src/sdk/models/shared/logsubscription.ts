/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Represents a log subscription, which tracks real-time data from a chosen log group to a specified destination.
 */
export class LogSubscription extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DirectoryId" })
  directoryId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LogGroupName" })
  logGroupName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubscriptionCreatedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  subscriptionCreatedDateTime?: Date;
}
