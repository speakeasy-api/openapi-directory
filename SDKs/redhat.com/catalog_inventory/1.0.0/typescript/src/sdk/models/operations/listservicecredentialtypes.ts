/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListServiceCredentialTypesRequest extends SpeakeasyBase {
  /**
   * Filter for querying collections.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=deepObject;explode=true;name=filter",
  })
  filter?: Record<string, any>;

  /**
   * The numbers of items to return per page.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * The number of items to skip before starting to collect the result set.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * The list of attribute and order to sort the result set by.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=deepObject;explode=true;name=sort_by",
  })
  sortBy?: Record<string, any>;
}

export class ListServiceCredentialTypesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * ServiceCredentialTypes collection
   */
  @SpeakeasyMetadata()
  serviceCredentialTypesCollection?: shared.ServiceCredentialTypesCollection;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
