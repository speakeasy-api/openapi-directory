/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { Deprecated } from "./deprecated";
import { Healthyhomecoach } from "./healthyhomecoach";
import { Partner } from "./partner";
import { Public } from "./public";
import { Station } from "./station";
import { Thermostat } from "./thermostat";
import { Welcome } from "./welcome";
import axios from "axios";
import { AxiosInstance } from "axios";

/**
 * Contains the list of servers available to the SDK
 */
export const ServerList = ["https://api.netatmo.net/api"] as const;

/**
 * The available configuration options for the SDK
 */
export type SDKProps = {
  /**
   * Allows overriding the default axios client used by the SDK
   */
  defaultClient?: AxiosInstance;
  /**
   * Allows overriding the default server URL used by the SDK
   */
  serverURL?: string;
};

/**
 * <h3>Welcome to the Netatmo swagger on-line documentation !</h3>
 *
 * @remarks
 * This site is a complement to the official <a href="https://dev.netatmo.com/">Netatmo developper documentation</a> using swagger to bring interactivity and easy testing of requests with the "try it" button (authenticate with the authorization code OAuth2 flow by clicking the authenticate button in the methods). You can find the source code for this site can be found in the project <a href="https://github.com/cbornet/netatmo-swagger-ui">netatmo-swagger-ui</a>. You can also use the online <a href="./swagger.json">swagger declaration</a> file to generate code or static documentation (see <a href="https://github.com/cbornet/netatmo-swagger-api">netatmo-swagger-api</a>).
 *
 *
 * @see {@link https://dev.netatmo.com/dev/resources/technical/reference} - Netatmo reference API documentation
 */
export class SDK {
  /**
   * These methods are no longer maintained nor supported
   */
  public deprecated: Deprecated;
  /**
   * Healthy Home Coach specific methods
   */
  public healthyhomecoach: Healthyhomecoach;
  /**
   * Partner API specific methods
   */
  public partner: Partner;
  /**
   * Public stations specific methods
   */
  public public: Public;
  /**
   * Weather station specific methods
   */
  public station: Station;
  /**
   * Thermostat specific methods
   */
  public thermostat: Thermostat;
  /**
   * Welcome specific methods
   */
  public welcome: Welcome;

  public _defaultClient: AxiosInstance;
  public _securityClient: AxiosInstance;
  public _serverURL: string;
  private _language = "typescript";
  private _sdkVersion = "0.0.1";
  private _genVersion = "internal";
  private _globals: any;

  constructor(props?: SDKProps) {
    this._serverURL = props?.serverURL ?? ServerList[0];

    this._defaultClient =
      props?.defaultClient ?? axios.create({ baseURL: this._serverURL });
    this._securityClient = this._defaultClient;

    this.deprecated = new Deprecated(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.healthyhomecoach = new Healthyhomecoach(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.partner = new Partner(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.public = new Public(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.station = new Station(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.thermostat = new Thermostat(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.welcome = new Welcome(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );
  }
}
