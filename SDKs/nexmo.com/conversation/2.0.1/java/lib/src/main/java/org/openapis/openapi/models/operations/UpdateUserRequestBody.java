/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateUserRequestBody {
    /**
     * A user who joins a conversation as a member can have one channel per membership type. Channels can be `app`, `phone`, `sip`, `websocket`, or `vbc`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channels")
    public org.openapis.openapi.models.shared.Channel channels;
    public UpdateUserRequestBody withChannels(org.openapis.openapi.models.shared.Channel channels) {
        this.channels = channels;
        return this;
    }
    
    /**
     * A string to be displayed as user name. It does not need to be unique
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("display_name")
    public String displayName;
    public UpdateUserRequestBody withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * A link to an image for conversations' and users' avatars
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image_url")
    public String imageUrl;
    public UpdateUserRequestBody withImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
        return this;
    }
    
    /**
     * Unique name for a user
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public UpdateUserRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
}
