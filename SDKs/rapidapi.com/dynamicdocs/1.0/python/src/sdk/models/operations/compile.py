"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Any, Optional

class CompileLatexCompilerEnum(str, Enum):
    r"""The latex-compiler parameter can take the following values:  pdflatex lualatex"""
    PDFLATEX = 'pdflatex'
    LUALATEX = 'lualatex'


@dataclasses.dataclass
class CompileRequest:
    
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Should be set to \\"application/json\\" """  
    template_token: str = dataclasses.field(metadata={'path_param': { 'field_name': 'template-token', 'style': 'simple', 'explode': False }})
    r"""The template-token is available in your template settings after publishing your template."""  
    doc_file_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'doc-file-name', 'style': 'form', 'explode': True }})
    r"""The doc-file-name is a string parameter which determines the name of the file. Note that the extension of the file is not required."""  
    doc_url_expires_in: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'doc-url-expires-in', 'style': 'form', 'explode': True }})
    r"""The doc-url-expires-in is a numerical parameter which takes integers and describes after how many seconds the provided URL is available to download the document."""  
    latex_compiler: Optional[CompileLatexCompilerEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'latex-compiler', 'style': 'form', 'explode': True }})
    r"""The latex-compiler parameter can take the following values:  pdflatex lualatex"""  
    latex_runs: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'latex-runs ', 'style': 'form', 'explode': True }})
    r"""The latex-runs is a numerical parameter and can take values of 1, 2 and 3."""  
    main_file_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'main-file-name', 'style': 'form', 'explode': True }})
    r"""The main-file-name is a string parameter which identifies the main file to compile."""  
    request_body: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    r"""Post the dynamic data for the template to compile the document PDF."""  
    

@dataclasses.dataclass
class CompileResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    compile_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Document Status URL Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    