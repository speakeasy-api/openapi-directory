/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Representation of a license assignment.
 */
export class LicenseAssignment extends SpeakeasyBase {
  /**
   * ETag of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etags" })
  etags?: string;

  /**
   * Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productId" })
  productId?: string;

  /**
   * Display Name of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "productName" })
  productName?: string;

  /**
   * Link to this page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skuId" })
  skuId?: string;

  /**
   * Display Name of the sku of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skuName" })
  skuName?: string;

  /**
   * The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId?: string;
}
