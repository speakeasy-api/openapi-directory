// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type ConcurrentAccessRestriction struct {
	// Whether access is granted for this (user, device, volume).
	DeviceAllowed *bool `json:"deviceAllowed,omitempty"`
	// Resource type.
	Kind *string `json:"kind,omitempty"`
	// The maximum number of concurrent access licenses for this volume.
	MaxConcurrentDevices *int `json:"maxConcurrentDevices,omitempty"`
	// Error/warning message.
	Message *string `json:"message,omitempty"`
	// Client nonce for verification. Download access and client-validation only.
	Nonce *string `json:"nonce,omitempty"`
	// Error/warning reason code.
	ReasonCode *string `json:"reasonCode,omitempty"`
	// Whether this volume has any concurrent access restrictions.
	Restricted *bool `json:"restricted,omitempty"`
	// Response signature.
	Signature *string `json:"signature,omitempty"`
	// Client app identifier for verification. Download access and client-validation only.
	Source *string `json:"source,omitempty"`
	// Time in seconds for license auto-expiration.
	TimeWindowSeconds *int `json:"timeWindowSeconds,omitempty"`
	// Identifies the volume for which this entry applies.
	VolumeID *string `json:"volumeId,omitempty"`
}
