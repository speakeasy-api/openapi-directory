/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LoyaltyEventQuery } from "./loyaltyeventquery";
import { Expose, Type } from "class-transformer";

/**
 * A request to search for loyalty events.
 */
export class SearchLoyaltyEventsRequest extends SpeakeasyBase {
  /**
   * A pagination cursor returned by a previous call to this endpoint.
   *
   * @remarks
   * Provide this to retrieve the next set of results for your original query.
   * For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cursor" })
  cursor?: string;

  /**
   * The maximum number of results to include in the response.
   *
   * @remarks
   * The last page might contain fewer events.
   * The default is 30 events.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;

  /**
   * Represents a query used to search for loyalty events.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "query" })
  @Type(() => LoyaltyEventQuery)
  query?: LoyaltyEventQuery;
}
