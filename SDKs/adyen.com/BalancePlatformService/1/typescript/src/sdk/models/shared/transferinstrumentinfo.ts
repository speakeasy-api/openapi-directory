/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BankAccountInfo } from "./bankaccountinfo";
import { Expose, Type } from "class-transformer";

/**
 * The type of transfer instrument.
 *
 * @remarks
 *
 * Possible value: **bankAccount**.
 */
export enum TransferInstrumentInfoTypeEnum {
  BankAccount = "bankAccount",
  RecurringDetail = "recurringDetail",
}

export class TransferInstrumentInfo extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "bankAccount" })
  @Type(() => BankAccountInfo)
  bankAccount: BankAccountInfo;

  /**
   * The unique identifier of the [legal entity](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/legalEntities__resParam_id) that owns the transfer instrument.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "legalEntityId" })
  legalEntityId: string;

  /**
   * The type of transfer instrument.
   *
   * @remarks
   *
   * Possible value: **bankAccount**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: TransferInstrumentInfoTypeEnum;
}
