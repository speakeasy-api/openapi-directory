/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class CreateOrUpdateAnnotationRequest extends SpeakeasyBase {
  /**
   * The annotation to create or update
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: Record<string, any>;

  /**
   * Either the uuid or external-id of the annotation.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=annotationId",
  })
  annotationId: string;

  /**
   * The commit the report belongs to.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=commit",
  })
  commit: string;

  /**
   * The repository.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo_slug",
  })
  repoSlug: string;

  /**
   * Either the uuid or external-id of the report.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=reportId",
  })
  reportId: string;

  /**
   * This can either be the workspace ID (slug) or the workspace UUID surrounded by curly-braces, for example `{workspace UUID}`.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=workspace",
  })
  workspace: string;
}

export class CreateOrUpdateAnnotationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The provided Annotation object is malformed or incomplete.
   */
  @SpeakeasyMetadata()
  error?: Record<string, any>;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  reportAnnotation?: Record<string, any>;
}
