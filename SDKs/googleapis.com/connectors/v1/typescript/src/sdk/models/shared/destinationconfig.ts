/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Destination } from "./destination";
import { Expose, Type } from "class-transformer";

/**
 * Define the Connectors target endpoint.
 */
export class DestinationConfig extends SpeakeasyBase {
  /**
   * The destinations for the key.
   */
  @SpeakeasyMetadata({ elemType: Destination })
  @Expose({ name: "destinations" })
  @Type(() => Destination)
  destinations?: Destination[];

  /**
   * The key is the destination identifier that is supported by the Connector.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;
}
