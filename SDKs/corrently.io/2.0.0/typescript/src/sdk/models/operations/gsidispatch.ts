/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GsiDispatchRequest extends SpeakeasyBase {
  /**
   * Any valid Stromkonto account (address).
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=key" })
  key?: string;

  /**
   * Zipcode (Postleitzahl) of a city in Germany.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=zip" })
  zip?: string;
}

/**
 * Evaluated timeframe for this request
 */
export class GsiDispatch200ApplicationJSONTimeframe extends SpeakeasyBase {
  /**
   * Ending time of window evaluated for this request/dispatches.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end" })
  end?: number;

  /**
   * Starting time of window evaluated in order to get dispatches
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start" })
  start?: number;
}

/**
 * Success
 */
export class GsiDispatch200ApplicationJSON extends SpeakeasyBase {
  /**
   * Averaged geospatial distance in kilometers between energy generation and usage at requested location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avg_distance_km" })
  avgDistanceKm?: number;

  /**
   * List of current sources of green energy (into requested location)
   */
  @SpeakeasyMetadata({ elemType: shared.DispatchLocation })
  @Expose({ name: "dispatch_from" })
  @Type(() => shared.DispatchLocation)
  dispatchFrom?: shared.DispatchLocation[];

  /**
   * List of current targets of green energy (out of requested location)
   */
  @SpeakeasyMetadata({ elemType: shared.DispatchLocation })
  @Expose({ name: "dispatch_target" })
  @Type(() => shared.DispatchLocation)
  dispatchTarget?: shared.DispatchLocation[];

  /**
   * Green Energy Mix after dispatch of given city
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postmix" })
  postmix?: Record<string, any>;

  /**
   * Green Energy Mix prior to dispatch of given city
   */
  @SpeakeasyMetadata()
  @Expose({ name: "premix" })
  premix?: Record<string, any>;

  /**
   * Evaluated timeframe for this request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeframe" })
  @Type(() => GsiDispatch200ApplicationJSONTimeframe)
  timeframe?: GsiDispatch200ApplicationJSONTimeframe;
}

export class GsiDispatchResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  gsiDispatch200ApplicationJSONObject?: GsiDispatch200ApplicationJSON;
}
