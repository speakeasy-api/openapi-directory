// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DescribeMetricFiltersQueryParams struct {
	// Pagination limit
	Limit *string `queryParam:"style=form,explode=true,name=limit"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

// DescribeMetricFiltersXAmzTargetEnum
type DescribeMetricFiltersXAmzTargetEnum string

const (
	DescribeMetricFiltersXAmzTargetEnumLogs20140328DescribeMetricFilters DescribeMetricFiltersXAmzTargetEnum = "Logs_20140328.DescribeMetricFilters"
)

func (e *DescribeMetricFiltersXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Logs_20140328.DescribeMetricFilters":
		*e = DescribeMetricFiltersXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeMetricFiltersXAmzTargetEnum: %s", s)
	}
}

type DescribeMetricFiltersHeaders struct {
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeMetricFiltersXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeMetricFiltersRequest struct {
	QueryParams DescribeMetricFiltersQueryParams
	Headers     DescribeMetricFiltersHeaders
	Request     shared.DescribeMetricFiltersRequest `request:"mediaType=application/json"`
}

type DescribeMetricFiltersResponse struct {
	ContentType string
	// Success
	DescribeMetricFiltersResponse *shared.DescribeMetricFiltersResponse
	// InvalidParameterException
	InvalidParameterException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
