/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ActionExecutionStatusEnum } from "./actionexecutionstatusenum";
import { ErrorDetails } from "./errordetails";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents information about the run of an action.
 */
export class ActionExecution extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "actionExecutionId" })
  actionExecutionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "errorDetails" })
  @Type(() => ErrorDetails)
  errorDetails?: ErrorDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "externalExecutionId" })
  externalExecutionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "externalExecutionUrl" })
  externalExecutionUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastStatusChange" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastStatusChange?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedBy" })
  lastUpdatedBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "percentComplete" })
  percentComplete?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ActionExecutionStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "summary" })
  summary?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "token" })
  token?: string;
}
