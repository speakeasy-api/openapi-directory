// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateResourcePolicyStatementRequestBodyEffectEnum - Determines whether the statement allows or denies access to the resource.
type CreateResourcePolicyStatementRequestBodyEffectEnum string

const (
	CreateResourcePolicyStatementRequestBodyEffectEnumAllow CreateResourcePolicyStatementRequestBodyEffectEnum = "Allow"
	CreateResourcePolicyStatementRequestBodyEffectEnumDeny  CreateResourcePolicyStatementRequestBodyEffectEnum = "Deny"
)

func (e *CreateResourcePolicyStatementRequestBodyEffectEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Allow":
		fallthrough
	case "Deny":
		*e = CreateResourcePolicyStatementRequestBodyEffectEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateResourcePolicyStatementRequestBodyEffectEnum: %s", s)
	}
}

type CreateResourcePolicyStatementRequestBody struct {
	// The Amazon Lex action that this policy either allows or denies. The action must apply to the resource type of the specified ARN. For more information, see <a href="https://docs.aws.amazon.com/service-authorization/latest/reference/list_amazonlexv2.html"> Actions, resources, and condition keys for Amazon Lex V2</a>.
	Action []string `json:"action"`
	// <p>Specifies a condition when the policy is in effect. If the principal of the policy is a service principal, you must provide two condition blocks, one with a SourceAccount global condition key and one with a SourceArn global condition key.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_condition.html">IAM JSON policy elements: Condition </a>.</p>
	Condition map[string]map[string]string `json:"condition,omitempty"`
	// Determines whether the statement allows or denies access to the resource.
	Effect CreateResourcePolicyStatementRequestBodyEffectEnum `json:"effect"`
	// An IAM principal, such as an IAM users, IAM roles, or AWS services that is allowed or denied access to a resource. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html">AWS JSON policy elements: Principal</a>.
	Principal []shared.Principal `json:"principal"`
	// The name of the statement. The ID is the same as the <code>Sid</code> IAM property. The statement name must be unique within the policy. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_sid.html">IAM JSON policy elements: Sid</a>.
	StatementID string `json:"statementId"`
}

type CreateResourcePolicyStatementRequest struct {
	RequestBody       CreateResourcePolicyStatementRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// <p>The identifier of the revision of the policy to edit. If this revision ID doesn't match the current revision ID, Amazon Lex throws an exception.</p> <p>If you don't specify a revision, Amazon Lex overwrites the contents of the policy with the new values.</p>
	ExpectedRevisionID *string `queryParam:"style=form,explode=true,name=expectedRevisionId"`
	// The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to.
	ResourceArn string `pathParam:"style=simple,explode=false,name=resourceArn"`
}

type CreateResourcePolicyStatementResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateResourcePolicyStatementResponse *shared.CreateResourcePolicyStatementResponse
	// InternalServerException
	InternalServerException interface{}
	// PreconditionFailedException
	PreconditionFailedException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
