/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class CreateEmbeddingRequest extends SpeakeasyBase {
  /**
   * Input text to get embeddings for, encoded as a string or array of tokens. To get embeddings for multiple inputs in a single request, pass an array of strings or array of token arrays. Each input must not exceed 8192 tokens in length.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "input" })
  input: any;

  /**
   * ID of the model to use. You can use the [List models](/docs/api-reference/models/list) API to see all of your available models, or see our [Model overview](/docs/models/overview) for descriptions of them.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "model" })
  model: string;

  /**
   * A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user?: string;
}
