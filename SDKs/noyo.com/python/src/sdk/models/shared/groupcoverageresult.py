"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class GroupCoverageResultLineOfCoverageEnum(str, Enum):
    r"""The line of coverage requested with the carrier application"""
    ACCIDENT = 'accident'
    ADD = 'add'
    CANCER = 'cancer'
    CRITICAL_ILLNESS = 'critical_illness'
    DENTAL = 'dental'
    HOSPITAL_INDEMNITY = 'hospital_indemnity'
    LIFE = 'life'
    LTD = 'ltd'
    MEDICAL = 'medical'
    STD = 'std'
    VISION = 'vision'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GroupCoverageResult:
    r"""Successful Response - Returns the new Group Coverage"""
    
    application_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('application_id') }})
    r"""Unique identifier of the application in Noyo"""  
    created: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created') }})
    r"""The date the record was created"""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Unique identifier of the record in Noyo"""  
    line_of_coverage: GroupCoverageResultLineOfCoverageEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('line_of_coverage') }})
    r"""The line of coverage requested with the carrier application"""  
    modified: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modified') }})
    r"""The date the record was last updated"""  
    requested_effective_date: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requested_effective_date'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso') }})
    r"""Requested effective date for start of coverage"""  
    version: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version') }})
    r"""Current version of the record"""  
    existing_coverage: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('existing_coverage'), 'exclude': lambda f: f is None }})
    r"""True if this line of coverage is currently active with the carrier"""  
    notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})
    r"""General platform notes about the group coverage"""  
    