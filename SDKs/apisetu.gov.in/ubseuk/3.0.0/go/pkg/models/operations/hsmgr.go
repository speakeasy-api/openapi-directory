// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type HsmgrSecurity struct {
	APIKey   string `security:"scheme,type=apiKey,subtype=header,name=X-APISETU-APIKEY"`
	ClientID string `security:"scheme,type=apiKey,subtype=header,name=X-APISETU-CLIENTID"`
}

type HsmgrRequestBodyCertificateParameters struct {
	// Date of birth in DD-MM-YYYY format
	Dob string `json:"DOB"`
	// Full name
	FullName string `json:"FullName"`
	// Roll No
	Rroll string `json:"RROLL"`
	// Aadhaar number
	UID string `json:"UID"`
	// Year
	Year string `json:"YEAR"`
}

// HsmgrRequestBodyFormatEnum - The format of the certificate in response.
type HsmgrRequestBodyFormatEnum string

const (
	HsmgrRequestBodyFormatEnumPdf HsmgrRequestBodyFormatEnum = "pdf"
)

func (e HsmgrRequestBodyFormatEnum) ToPointer() *HsmgrRequestBodyFormatEnum {
	return &e
}

func (e *HsmgrRequestBodyFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pdf":
		*e = HsmgrRequestBodyFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HsmgrRequestBodyFormatEnum: %v", v)
	}
}

// HsmgrRequestBody - Request format
type HsmgrRequestBody struct {
	CertificateParameters *HsmgrRequestBodyCertificateParameters `json:"certificateParameters,omitempty"`
	ConsentArtifact       *shared.ConsentArtifactSchema          `json:"consentArtifact,omitempty"`
	// The format of the certificate in response.
	Format HsmgrRequestBodyFormatEnum `json:"format"`
	// A unique transaction id for this request in UUID format. It is used for tracking the request.
	TxnID string `json:"txnId"`
}

type Hsmgr504ApplicationJSONErrorEnum string

const (
	Hsmgr504ApplicationJSONErrorEnumGatewayTimeout Hsmgr504ApplicationJSONErrorEnum = "gateway_timeout"
)

func (e Hsmgr504ApplicationJSONErrorEnum) ToPointer() *Hsmgr504ApplicationJSONErrorEnum {
	return &e
}

func (e *Hsmgr504ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "gateway_timeout":
		*e = Hsmgr504ApplicationJSONErrorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Hsmgr504ApplicationJSONErrorEnum: %v", v)
	}
}

type Hsmgr504ApplicationJSONErrorDescriptionEnum string

const (
	Hsmgr504ApplicationJSONErrorDescriptionEnumPublisherServiceDidNotRespondInTime Hsmgr504ApplicationJSONErrorDescriptionEnum = "Publisher service did not respond in time"
)

func (e Hsmgr504ApplicationJSONErrorDescriptionEnum) ToPointer() *Hsmgr504ApplicationJSONErrorDescriptionEnum {
	return &e
}

func (e *Hsmgr504ApplicationJSONErrorDescriptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Publisher service did not respond in time":
		*e = Hsmgr504ApplicationJSONErrorDescriptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Hsmgr504ApplicationJSONErrorDescriptionEnum: %v", v)
	}
}

// Hsmgr504ApplicationJSON - Gateway timeout
type Hsmgr504ApplicationJSON struct {
	Error            *Hsmgr504ApplicationJSONErrorEnum            `json:"error,omitempty"`
	ErrorDescription *Hsmgr504ApplicationJSONErrorDescriptionEnum `json:"errorDescription,omitempty"`
}

type Hsmgr503ApplicationJSONErrorEnum string

const (
	Hsmgr503ApplicationJSONErrorEnumServiceUnavailable Hsmgr503ApplicationJSONErrorEnum = "service_unavailable"
)

func (e Hsmgr503ApplicationJSONErrorEnum) ToPointer() *Hsmgr503ApplicationJSONErrorEnum {
	return &e
}

func (e *Hsmgr503ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "service_unavailable":
		*e = Hsmgr503ApplicationJSONErrorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Hsmgr503ApplicationJSONErrorEnum: %v", v)
	}
}

type Hsmgr503ApplicationJSONErrorDescriptionEnum string

const (
	Hsmgr503ApplicationJSONErrorDescriptionEnumPublisherServiceIsTemporarilyUnavailable Hsmgr503ApplicationJSONErrorDescriptionEnum = "Publisher service is temporarily unavailable"
)

func (e Hsmgr503ApplicationJSONErrorDescriptionEnum) ToPointer() *Hsmgr503ApplicationJSONErrorDescriptionEnum {
	return &e
}

func (e *Hsmgr503ApplicationJSONErrorDescriptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Publisher service is temporarily unavailable":
		*e = Hsmgr503ApplicationJSONErrorDescriptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Hsmgr503ApplicationJSONErrorDescriptionEnum: %v", v)
	}
}

// Hsmgr503ApplicationJSON - Service unavailable
type Hsmgr503ApplicationJSON struct {
	Error            *Hsmgr503ApplicationJSONErrorEnum            `json:"error,omitempty"`
	ErrorDescription *Hsmgr503ApplicationJSONErrorDescriptionEnum `json:"errorDescription,omitempty"`
}

type Hsmgr502ApplicationJSONErrorEnum string

const (
	Hsmgr502ApplicationJSONErrorEnumBadGatewy Hsmgr502ApplicationJSONErrorEnum = "bad_gatewy"
)

func (e Hsmgr502ApplicationJSONErrorEnum) ToPointer() *Hsmgr502ApplicationJSONErrorEnum {
	return &e
}

func (e *Hsmgr502ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "bad_gatewy":
		*e = Hsmgr502ApplicationJSONErrorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Hsmgr502ApplicationJSONErrorEnum: %v", v)
	}
}

type Hsmgr502ApplicationJSONErrorDescriptionEnum string

const (
	Hsmgr502ApplicationJSONErrorDescriptionEnumPublisherServiceReturnedAnInvalidResponse Hsmgr502ApplicationJSONErrorDescriptionEnum = "Publisher service returned an invalid response"
)

func (e Hsmgr502ApplicationJSONErrorDescriptionEnum) ToPointer() *Hsmgr502ApplicationJSONErrorDescriptionEnum {
	return &e
}

func (e *Hsmgr502ApplicationJSONErrorDescriptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Publisher service returned an invalid response":
		*e = Hsmgr502ApplicationJSONErrorDescriptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Hsmgr502ApplicationJSONErrorDescriptionEnum: %v", v)
	}
}

// Hsmgr502ApplicationJSON - Bad gateway
type Hsmgr502ApplicationJSON struct {
	Error            *Hsmgr502ApplicationJSONErrorEnum            `json:"error,omitempty"`
	ErrorDescription *Hsmgr502ApplicationJSONErrorDescriptionEnum `json:"errorDescription,omitempty"`
}

type Hsmgr500ApplicationJSONErrorEnum string

const (
	Hsmgr500ApplicationJSONErrorEnumInternalServerError Hsmgr500ApplicationJSONErrorEnum = "internal_server_error"
)

func (e Hsmgr500ApplicationJSONErrorEnum) ToPointer() *Hsmgr500ApplicationJSONErrorEnum {
	return &e
}

func (e *Hsmgr500ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = Hsmgr500ApplicationJSONErrorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Hsmgr500ApplicationJSONErrorEnum: %v", v)
	}
}

type Hsmgr500ApplicationJSONErrorDescriptionEnum string

const (
	Hsmgr500ApplicationJSONErrorDescriptionEnumInternalServerError Hsmgr500ApplicationJSONErrorDescriptionEnum = "Internal server error"
)

func (e Hsmgr500ApplicationJSONErrorDescriptionEnum) ToPointer() *Hsmgr500ApplicationJSONErrorDescriptionEnum {
	return &e
}

func (e *Hsmgr500ApplicationJSONErrorDescriptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Internal server error":
		*e = Hsmgr500ApplicationJSONErrorDescriptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Hsmgr500ApplicationJSONErrorDescriptionEnum: %v", v)
	}
}

// Hsmgr500ApplicationJSON - Internal server error
type Hsmgr500ApplicationJSON struct {
	Error            *Hsmgr500ApplicationJSONErrorEnum            `json:"error,omitempty"`
	ErrorDescription *Hsmgr500ApplicationJSONErrorDescriptionEnum `json:"errorDescription,omitempty"`
}

type Hsmgr404ApplicationJSONErrorEnum string

const (
	Hsmgr404ApplicationJSONErrorEnumRecordNotFound Hsmgr404ApplicationJSONErrorEnum = "record_not_found"
	Hsmgr404ApplicationJSONErrorEnumURLNotFound    Hsmgr404ApplicationJSONErrorEnum = "url_not_found"
)

func (e Hsmgr404ApplicationJSONErrorEnum) ToPointer() *Hsmgr404ApplicationJSONErrorEnum {
	return &e
}

func (e *Hsmgr404ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "record_not_found":
		fallthrough
	case "url_not_found":
		*e = Hsmgr404ApplicationJSONErrorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Hsmgr404ApplicationJSONErrorEnum: %v", v)
	}
}

type Hsmgr404ApplicationJSONErrorDescriptionEnum string

const (
	Hsmgr404ApplicationJSONErrorDescriptionEnumNoRecordFound               Hsmgr404ApplicationJSONErrorDescriptionEnum = "No record found"
	Hsmgr404ApplicationJSONErrorDescriptionEnumYourAPIURLOrPathIsIncorrect Hsmgr404ApplicationJSONErrorDescriptionEnum = "Your API url or path is incorrect"
)

func (e Hsmgr404ApplicationJSONErrorDescriptionEnum) ToPointer() *Hsmgr404ApplicationJSONErrorDescriptionEnum {
	return &e
}

func (e *Hsmgr404ApplicationJSONErrorDescriptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "No record found":
		fallthrough
	case "Your API url or path is incorrect":
		*e = Hsmgr404ApplicationJSONErrorDescriptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Hsmgr404ApplicationJSONErrorDescriptionEnum: %v", v)
	}
}

// Hsmgr404ApplicationJSON - No record found
type Hsmgr404ApplicationJSON struct {
	Error            *Hsmgr404ApplicationJSONErrorEnum            `json:"error,omitempty"`
	ErrorDescription *Hsmgr404ApplicationJSONErrorDescriptionEnum `json:"errorDescription,omitempty"`
}

type Hsmgr401ApplicationJSONErrorEnum string

const (
	Hsmgr401ApplicationJSONErrorEnumInvalidAuthentication Hsmgr401ApplicationJSONErrorEnum = "invalid_authentication"
	Hsmgr401ApplicationJSONErrorEnumInvalidAuthorization  Hsmgr401ApplicationJSONErrorEnum = "invalid_authorization"
)

func (e Hsmgr401ApplicationJSONErrorEnum) ToPointer() *Hsmgr401ApplicationJSONErrorEnum {
	return &e
}

func (e *Hsmgr401ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_authentication":
		fallthrough
	case "invalid_authorization":
		*e = Hsmgr401ApplicationJSONErrorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Hsmgr401ApplicationJSONErrorEnum: %v", v)
	}
}

type Hsmgr401ApplicationJSONErrorDescriptionEnum string

const (
	Hsmgr401ApplicationJSONErrorDescriptionEnumAuthenticationFailed            Hsmgr401ApplicationJSONErrorDescriptionEnum = "Authentication failed"
	Hsmgr401ApplicationJSONErrorDescriptionEnumYouAreNotAuthorizedToUseThisAPI Hsmgr401ApplicationJSONErrorDescriptionEnum = "You are not authorized to use this API"
)

func (e Hsmgr401ApplicationJSONErrorDescriptionEnum) ToPointer() *Hsmgr401ApplicationJSONErrorDescriptionEnum {
	return &e
}

func (e *Hsmgr401ApplicationJSONErrorDescriptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Authentication failed":
		fallthrough
	case "You are not authorized to use this API":
		*e = Hsmgr401ApplicationJSONErrorDescriptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Hsmgr401ApplicationJSONErrorDescriptionEnum: %v", v)
	}
}

// Hsmgr401ApplicationJSON - Unauthorized access
type Hsmgr401ApplicationJSON struct {
	Error            *Hsmgr401ApplicationJSONErrorEnum            `json:"error,omitempty"`
	ErrorDescription *Hsmgr401ApplicationJSONErrorDescriptionEnum `json:"errorDescription,omitempty"`
}

type Hsmgr400ApplicationJSONErrorEnum string

const (
	Hsmgr400ApplicationJSONErrorEnumMissingParameter Hsmgr400ApplicationJSONErrorEnum = "missing_parameter"
	Hsmgr400ApplicationJSONErrorEnumInvalidParameter Hsmgr400ApplicationJSONErrorEnum = "invalid_parameter"
	Hsmgr400ApplicationJSONErrorEnumInvalidFormat    Hsmgr400ApplicationJSONErrorEnum = "invalid_format"
	Hsmgr400ApplicationJSONErrorEnumInvalidTxnid     Hsmgr400ApplicationJSONErrorEnum = "invalid_txnid"
	Hsmgr400ApplicationJSONErrorEnumInvalidConsentid Hsmgr400ApplicationJSONErrorEnum = "invalid_consentid"
)

func (e Hsmgr400ApplicationJSONErrorEnum) ToPointer() *Hsmgr400ApplicationJSONErrorEnum {
	return &e
}

func (e *Hsmgr400ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "missing_parameter":
		fallthrough
	case "invalid_parameter":
		fallthrough
	case "invalid_format":
		fallthrough
	case "invalid_txnid":
		fallthrough
	case "invalid_consentid":
		*e = Hsmgr400ApplicationJSONErrorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Hsmgr400ApplicationJSONErrorEnum: %v", v)
	}
}

type Hsmgr400ApplicationJSONErrorDescriptionEnum string

const (
	Hsmgr400ApplicationJSONErrorDescriptionEnumPleaseProvideAllMandatoryParameters     Hsmgr400ApplicationJSONErrorDescriptionEnum = "Please provide all mandatory parameters"
	Hsmgr400ApplicationJSONErrorDescriptionEnumBadRequest                              Hsmgr400ApplicationJSONErrorDescriptionEnum = "Bad request"
	Hsmgr400ApplicationJSONErrorDescriptionEnumTheFormatParameterIsInvalid             Hsmgr400ApplicationJSONErrorDescriptionEnum = "The format parameter is invalid"
	Hsmgr400ApplicationJSONErrorDescriptionEnumTheTxnIDParameterMustBeInUUIDFormat     Hsmgr400ApplicationJSONErrorDescriptionEnum = "The txnId parameter must be in UUID format"
	Hsmgr400ApplicationJSONErrorDescriptionEnumTheConsentIDParameterMustBeInUUIDFormat Hsmgr400ApplicationJSONErrorDescriptionEnum = "The consentId parameter must be in UUID format"
)

func (e Hsmgr400ApplicationJSONErrorDescriptionEnum) ToPointer() *Hsmgr400ApplicationJSONErrorDescriptionEnum {
	return &e
}

func (e *Hsmgr400ApplicationJSONErrorDescriptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Please provide all mandatory parameters":
		fallthrough
	case "Bad request":
		fallthrough
	case "The format parameter is invalid":
		fallthrough
	case "The txnId parameter must be in UUID format":
		fallthrough
	case "The consentId parameter must be in UUID format":
		*e = Hsmgr400ApplicationJSONErrorDescriptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Hsmgr400ApplicationJSONErrorDescriptionEnum: %v", v)
	}
}

// Hsmgr400ApplicationJSON - Bad request
type Hsmgr400ApplicationJSON struct {
	Error            *Hsmgr400ApplicationJSONErrorEnum            `json:"error,omitempty"`
	ErrorDescription *Hsmgr400ApplicationJSONErrorDescriptionEnum `json:"errorDescription,omitempty"`
}

type HsmgrResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Bad request
	Hsmgr400ApplicationJSONObject *Hsmgr400ApplicationJSON
	// Unauthorized access
	Hsmgr401ApplicationJSONObject *Hsmgr401ApplicationJSON
	// No record found
	Hsmgr404ApplicationJSONObject *Hsmgr404ApplicationJSON
	// Internal server error
	Hsmgr500ApplicationJSONObject *Hsmgr500ApplicationJSON
	// Bad gateway
	Hsmgr502ApplicationJSONObject *Hsmgr502ApplicationJSON
	// Service unavailable
	Hsmgr503ApplicationJSONObject *Hsmgr503ApplicationJSON
	// Gateway timeout
	Hsmgr504ApplicationJSONObject *Hsmgr504ApplicationJSON
}
