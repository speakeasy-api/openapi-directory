// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// ListVirtualClustersContainerProviderTypeEnum - The container provider type of the virtual cluster. Amazon EKS is the only supported type as of now.
type ListVirtualClustersContainerProviderTypeEnum string

const (
	ListVirtualClustersContainerProviderTypeEnumEks ListVirtualClustersContainerProviderTypeEnum = "EKS"
)

func (e ListVirtualClustersContainerProviderTypeEnum) ToPointer() *ListVirtualClustersContainerProviderTypeEnum {
	return &e
}

func (e *ListVirtualClustersContainerProviderTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EKS":
		*e = ListVirtualClustersContainerProviderTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListVirtualClustersContainerProviderTypeEnum: %v", v)
	}
}

type ListVirtualClustersRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The container provider ID of the virtual cluster.
	ContainerProviderID *string `queryParam:"style=form,explode=true,name=containerProviderId"`
	// The container provider type of the virtual cluster. Amazon EKS is the only supported type as of now.
	ContainerProviderType *ListVirtualClustersContainerProviderTypeEnum `queryParam:"style=form,explode=true,name=containerProviderType"`
	// The date and time after which the virtual clusters are created.
	CreatedAfter *time.Time `queryParam:"style=form,explode=true,name=createdAfter"`
	// The date and time before which the virtual clusters are created.
	CreatedBefore *time.Time `queryParam:"style=form,explode=true,name=createdBefore"`
	// The maximum number of virtual clusters that can be listed.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// The token for the next set of virtual clusters to return.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	// The states of the requested virtual clusters.
	States []shared.VirtualClusterStateEnum `queryParam:"style=form,explode=true,name=states"`
}

type ListVirtualClustersResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListVirtualClustersResponse *shared.ListVirtualClustersResponse
	StatusCode                  int
	RawResponse                 *http.Response
	// ValidationException
	ValidationException interface{}
}
