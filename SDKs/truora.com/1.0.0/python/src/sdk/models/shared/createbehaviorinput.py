"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from datetime import datetime
from enum import Enum
from typing import Optional

class CreateBehaviorInputCountryEnum(str, Enum):
    r"""Document country"""
    CO = 'co'
    VE = 've'
    CL = 'cl'
    MX = 'mx'
    PE = 'pe'
    DO = 'do'
    SV = 'sv'
    GT = 'gt'
    BO = 'bo'
    CR = 'cr'
    EC = 'ec'
    PA = 'pa'
    BR = 'br'

class CreateBehaviorInputDocumentTypeEnum(str, Enum):
    r"""Document type associated with the background check"""
    NATIONAL_ID = 'national-id'
    PASSPORT = 'passport'
    FOREIGN_ID = 'foreign-id'
    NIT = 'nit'
    DIPLOMATIC_ID = 'diplomatic-id'
    CIVIL_REGISTRATION = 'civil-registration'
    IDENTITY_CARD = 'identity-card'
    FOREIGNER_CARD = 'foreigner-card'
    PROFESSIONAL_CARD = 'professional-card'
    MILITARY_CARD = 'military-card'
    PEP = 'pep'
    NIS = 'nis'
    DNI = 'dni'
    RUI = 'rui'
    LICENSE_PLATE = 'license-plate'
    QUERY = 'query'
    NAME = 'name'
    RUT = 'rut'
    NUIP = 'nuip'
    FOREIGN_SOCIETIES = 'foreign-societies'
    ESCROW = 'escrow'
    INDIVIDUAL_REGISTRATION = 'individual-registration'
    GENERAL_REGISTRATION = 'general-registration'
    CURP = 'curp'
    DUI = 'dui'
    DRIVER_LICENSE = 'driver-license'
    RUC = 'ruc'

class CreateBehaviorInputReasonEnum(str, Enum):
    r"""Report reason"""
    RAPE = 'rape'
    DRUG_DEALER = 'drug-dealer'
    SEXUAL_HARASSMENT = 'sexual-harassment'
    THEFT = 'theft'
    FIGHTS = 'fights'
    AGGRESSIVE_BEHAVIOUR = 'aggressive-behaviour'
    IDENTITY_FRAUD = 'identity-fraud'
    DRUNK = 'drunk'
    DRUG_POSSESSION = 'drug-possession'
    ABSENCES = 'absences'
    TARDINESS = 'tardiness'
    CONFIDENTIALITY_BREACH = 'confidentiality-breach'
    GOOD_REPUTATION = 'good-reputation'


@dataclasses.dataclass
class CreateBehaviorInput:
    r"""Represents paramaters required to give behavior feedback"""
    
    birth_date: datetime = dataclasses.field(metadata={'form': { 'field_name': 'birth_date' }})
    r"""Birth date of reported person"""  
    country: CreateBehaviorInputCountryEnum = dataclasses.field(metadata={'form': { 'field_name': 'country' }})
    r"""Document country"""  
    document_id: str = dataclasses.field(metadata={'form': { 'field_name': 'document_id' }})
    r"""Person document ID"""  
    document_type: CreateBehaviorInputDocumentTypeEnum = dataclasses.field(metadata={'form': { 'field_name': 'document_type' }})
    r"""Document type associated with the background check"""  
    email: str = dataclasses.field(metadata={'form': { 'field_name': 'email' }})
    r"""Reported person e-mail"""  
    feedback_date: datetime = dataclasses.field(metadata={'form': { 'field_name': 'feedback_date' }})
    r"""Behavior report date"""  
    first_name: str = dataclasses.field(metadata={'form': { 'field_name': 'first_name' }})
    r"""Person first name"""  
    last_name: str = dataclasses.field(metadata={'form': { 'field_name': 'last_name' }})
    r"""Person last name"""  
    reason: CreateBehaviorInputReasonEnum = dataclasses.field(metadata={'form': { 'field_name': 'reason' }})
    r"""Report reason"""  
    phone_number: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'phone_number' }})
    r"""Phone number of the reported person"""  
    