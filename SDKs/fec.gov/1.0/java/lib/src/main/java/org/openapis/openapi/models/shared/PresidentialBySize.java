/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PresidentialBySize {
    /**
     * A unique identifier assigned to each candidate registered with the FEC.
     * If a person runs for several offices, that person will have separate candidate IDs for each office.
     * First character indicates office - [P]residential, [H]ouse, [S]enate].
     * Second character is the last digit of the two-year period the ID was created.
     * Third and fourth is the candidate state. Presidential IDs don't have state.
     * Fifth and sixth is the district when the candidate first ran. This does not change if the
     * candidate/member's district changes during re-districting. Presidential IDs don't have districts.
     * The rest is sequence.
     *   -P00000001    All candidates
     *   -P00000002    Democrasts
     *   -P00000003    Republicans
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("candidate_id")
    public String candidateId;

    public PresidentialBySize withCandidateId(String candidateId) {
        this.candidateId = candidateId;
        return this;
    }
    
    /**
     * Contributions received
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contribution_receipt_amount")
    public Double contributionReceiptAmount;

    public PresidentialBySize withContributionReceiptAmount(Double contributionReceiptAmount) {
        this.contributionReceiptAmount = contributionReceiptAmount;
        return this;
    }
    
    /**
     * Year of election
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("election_year")
    public Integer electionYear;

    public PresidentialBySize withElectionYear(Integer electionYear) {
        this.electionYear = electionYear;
        return this;
    }
    
    /**
     * The total all contributions in the following ranges:
     * ```
     *   -0    $200 and under
     *   -200  $200.01 - $499.99
     *   -500  $500 - $999.99
     *   -1000 $1000 - $1999.99
     *   -2000 $2000 +
     * ```
     * Unitemized contributions are included in the `0` category.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Integer size;

    public PresidentialBySize withSize(Integer size) {
        this.size = size;
        return this;
    }
    
    /**
     * The total all contributions range id.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size_range_id")
    public Integer sizeRangeId;

    public PresidentialBySize withSizeRangeId(Integer sizeRangeId) {
        this.sizeRangeId = sizeRangeId;
        return this;
    }
    
    public PresidentialBySize(){}
}
