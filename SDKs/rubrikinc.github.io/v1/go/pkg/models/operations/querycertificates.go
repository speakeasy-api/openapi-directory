// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// QueryCertificatesSortByEnum - Attribute by which the list of certificates is sorted.
type QueryCertificatesSortByEnum string

const (
	QueryCertificatesSortByEnumName        QueryCertificatesSortByEnum = "name"
	QueryCertificatesSortByEnumDescription QueryCertificatesSortByEnum = "description"
	QueryCertificatesSortByEnumHasKey      QueryCertificatesSortByEnum = "hasKey"
	QueryCertificatesSortByEnumExpiration  QueryCertificatesSortByEnum = "expiration"
)

func (e QueryCertificatesSortByEnum) ToPointer() *QueryCertificatesSortByEnum {
	return &e
}

func (e *QueryCertificatesSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "name":
		fallthrough
	case "description":
		fallthrough
	case "hasKey":
		fallthrough
	case "expiration":
		*e = QueryCertificatesSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryCertificatesSortByEnum: %v", v)
	}
}

// QueryCertificatesSortOrderEnum - Sort order, either ascending or descending.
type QueryCertificatesSortOrderEnum string

const (
	QueryCertificatesSortOrderEnumAsc  QueryCertificatesSortOrderEnum = "asc"
	QueryCertificatesSortOrderEnumDesc QueryCertificatesSortOrderEnum = "desc"
)

func (e QueryCertificatesSortOrderEnum) ToPointer() *QueryCertificatesSortOrderEnum {
	return &e
}

func (e *QueryCertificatesSortOrderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = QueryCertificatesSortOrderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryCertificatesSortOrderEnum: %v", v)
	}
}

type QueryCertificatesRequest struct {
	// Search certificates by description.
	Description *string `queryParam:"style=form,explode=true,name=description"`
	// Search certificates by expiration.
	Expiration *string `queryParam:"style=form,explode=true,name=expiration"`
	// Search certificates by whether or not they contain a private key.
	//
	HasKey *bool `queryParam:"style=form,explode=true,name=has_key"`
	// Specifies whether to include expired certificates. The default is false.
	IncludeExpired *bool `queryParam:"style=form,explode=true,name=include_expired"`
	// Search by certificate name.
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// Attribute by which the list of certificates is sorted.
	SortBy *QueryCertificatesSortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// Sort order, either ascending or descending.
	SortOrder *QueryCertificatesSortOrderEnum `queryParam:"style=form,explode=true,name=sort_order"`
}

type QueryCertificatesResponse struct {
	// List of certificates.
	CertificateSummaryListResponse *shared.CertificateSummaryListResponse
	ContentType                    string
	StatusCode                     int
	RawResponse                    *http.Response
}
