"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import availabilityresults as shared_availabilityresults
from ..shared import closest_enum as shared_closest_enum
from ..shared import error as shared_error
from ..shared import status_code_enum as shared_status_code_enum
from typing import Optional


@dataclasses.dataclass
class GetWaybackV1AvailableRequest:
    
    url: str = dataclasses.field(metadata={'query_param': { 'field_name': 'url', 'style': 'form', 'explode': True }})
    r"""A single URL to query."""  
    callback: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'callback', 'style': 'form', 'explode': True }})
    r"""Specifies a JavaScript function func, for a JSON-P response. When provided, results are wrapped as `callback(data)`, and the returned MIME type is application/javascript. This causes the caller to automatically run the func with the JSON results as its argument."""  
    closest: Optional[shared_closest_enum.ClosestEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'closest', 'style': 'form', 'explode': True }})
    r"""The direction specifies whether to match archived timestamps that are before the provided one, after, or the default either (closest in either direction). Must be before, after, or either. May be overidden by individual requests."""  
    status_code: Optional[shared_status_code_enum.StatusCodeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status_code', 'style': 'form', 'explode': True }})
    r"""HTTP status codes to filter by. Only results with these codes will be returned"""  
    tag: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tag', 'style': 'form', 'explode': True }})
    r"""The optional tag can have any value, and is returned with the results; it can be used to help collate input and output values."""  
    timeout: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'timeout', 'style': 'form', 'explode': True }})
    r"""Timeout is the maximum number of seconds to wait for the availability API to get its underlying results from the CDX server. The default value is 5.0."""  
    timestamp: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'timestamp', 'style': 'form', 'explode': True }})
    r"""Timestamp requested in ISO 8601 format. The following formats are acceptable:
     - YYYY
     - YYYY-MM
     - YYYY-MM-DD
     - YYYY-MM-DDTHH:mm:SSz
     - YYYY-MM-DD:HH:mm+00:00
    """  
    

@dataclasses.dataclass
class GetWaybackV1AvailableResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    availability_results: Optional[shared_availabilityresults.AvailabilityResults] = dataclasses.field(default=None)
    r"""Nominal Availability results"""  
    body: Optional[bytes] = dataclasses.field(default=None)  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Unexpected error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    