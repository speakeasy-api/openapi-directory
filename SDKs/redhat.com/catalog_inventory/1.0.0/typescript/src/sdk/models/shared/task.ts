/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export enum TaskStateEnum {
  Pending = "pending",
  Queued = "queued",
  Running = "running",
  Timedout = "timedout",
  Completed = "completed",
}

export enum TaskStatusEnum {
  Ok = "ok",
  Warn = "warn",
  Unchanged = "unchanged",
  Error = "error",
}

/**
 * Task attributes to update
 */
export class TaskInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "completed_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  completedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "output" })
  output?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: TaskStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: TaskStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "target_source_ref" })
  targetSourceRef?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "target_type" })
  targetType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

/**
 * Task info
 */
export class Task extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "archived_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  archivedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "child_task_id" })
  childTaskId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "completed_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  completedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "controller_message_id" })
  controllerMessageId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * UUID of task
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "input" })
  input?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "output" })
  output?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  owner?: string;

  /**
   * ID of the resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "source_id" })
  sourceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: TaskStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: TaskStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "target_source_ref" })
  targetSourceRef?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "target_type" })
  targetType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}
