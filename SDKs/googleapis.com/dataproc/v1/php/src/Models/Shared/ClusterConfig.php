<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ClusterConfig - The cluster config.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ClusterConfig
{
    /**
     * Autoscaling Policy config associated with the cluster.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AutoscalingConfig $autoscalingConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('autoscalingConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AutoscalingConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AutoscalingConfig $autoscalingConfig = null;
    
    /**
     * Optional. The node group settings.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AuxiliaryNodeGroup> $auxiliaryNodeGroups
     */
	#[\JMS\Serializer\Annotation\SerializedName('auxiliaryNodeGroups')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\AuxiliaryNodeGroup>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $auxiliaryNodeGroups = null;
    
    /**
     * Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
     * 
     * @var ?string $configBucket
     */
	#[\JMS\Serializer\Annotation\SerializedName('configBucket')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $configBucket = null;
    
    /**
     * Dataproc metric config.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DataprocMetricConfig $dataprocMetricConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('dataprocMetricConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DataprocMetricConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DataprocMetricConfig $dataprocMetricConfig = null;
    
    /**
     * Encryption settings for the cluster.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EncryptionConfig $encryptionConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('encryptionConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EncryptionConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EncryptionConfig $encryptionConfig = null;
    
    /**
     * Endpoint config for this cluster
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EndpointConfig $endpointConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('endpointConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EndpointConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EndpointConfig $endpointConfig = null;
    
    /**
     * Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GceClusterConfig $gceClusterConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('gceClusterConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GceClusterConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GceClusterConfig $gceClusterConfig = null;
    
    /**
     * The cluster's GKE config.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GkeClusterConfig $gkeClusterConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('gkeClusterConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GkeClusterConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GkeClusterConfig $gkeClusterConfig = null;
    
    /**
     * Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\NodeInitializationAction> $initializationActions
     */
	#[\JMS\Serializer\Annotation\SerializedName('initializationActions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\NodeInitializationAction>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $initializationActions = null;
    
    /**
     * Specifies the cluster auto-delete schedule configuration.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LifecycleConfig $lifecycleConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('lifecycleConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LifecycleConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LifecycleConfig $lifecycleConfig = null;
    
    /**
     * The config settings for Compute Engine resources in an instance group, such as a master or worker group.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InstanceGroupConfig $masterConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('masterConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InstanceGroupConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InstanceGroupConfig $masterConfig = null;
    
    /**
     * Specifies a Metastore configuration.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MetastoreConfig $metastoreConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('metastoreConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MetastoreConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MetastoreConfig $metastoreConfig = null;
    
    /**
     * The config settings for Compute Engine resources in an instance group, such as a master or worker group.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InstanceGroupConfig $secondaryWorkerConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('secondaryWorkerConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InstanceGroupConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InstanceGroupConfig $secondaryWorkerConfig = null;
    
    /**
     * Security related configuration, including encryption, Kerberos, etc.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SecurityConfig $securityConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('securityConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SecurityConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SecurityConfig $securityConfig = null;
    
    /**
     * Specifies the selection and config of software inside the cluster.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SoftwareConfig $softwareConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('softwareConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SoftwareConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SoftwareConfig $softwareConfig = null;
    
    /**
     * Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
     * 
     * @var ?string $tempBucket
     */
	#[\JMS\Serializer\Annotation\SerializedName('tempBucket')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tempBucket = null;
    
    /**
     * The config settings for Compute Engine resources in an instance group, such as a master or worker group.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InstanceGroupConfig $workerConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('workerConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InstanceGroupConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InstanceGroupConfig $workerConfig = null;
    
	public function __construct()
	{
		$this->autoscalingConfig = null;
		$this->auxiliaryNodeGroups = null;
		$this->configBucket = null;
		$this->dataprocMetricConfig = null;
		$this->encryptionConfig = null;
		$this->endpointConfig = null;
		$this->gceClusterConfig = null;
		$this->gkeClusterConfig = null;
		$this->initializationActions = null;
		$this->lifecycleConfig = null;
		$this->masterConfig = null;
		$this->metastoreConfig = null;
		$this->secondaryWorkerConfig = null;
		$this->securityConfig = null;
		$this->softwareConfig = null;
		$this->tempBucket = null;
		$this->workerConfig = null;
	}
}
