<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PrivateAuthorsSearch - Search Parameters
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PrivateAuthorsSearch
{
    /**
     * Return only authors in this group or subgroups of the group
     * 
     * @var ?int $groupId
     */
	#[\JMS\Serializer\Annotation\SerializedName('group_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $groupId = null;
    
    /**
     * Return only authors associated to this institution
     * 
     * @var ?int $institutionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('institution_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $institutionId = null;
    
    /**
     * Return only active authors if True
     * 
     * @var ?bool $isActive
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_active')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isActive = null;
    
    /**
     * Return only authors that have published items if True
     * 
     * @var ?bool $isPublic
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_public')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isPublic = null;
    
    /**
     * Number of results included on a page. Used for pagination with query
     * 
     * @var ?int $limit
     */
	#[\JMS\Serializer\Annotation\SerializedName('limit')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $limit = null;
    
    /**
     * Where to start the listing(the offset of the first result). Used for pagination with limit
     * 
     * @var ?int $offset
     */
	#[\JMS\Serializer\Annotation\SerializedName('offset')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $offset = null;
    
    /**
     * Orcid of author
     * 
     * @var ?string $orcid
     */
	#[\JMS\Serializer\Annotation\SerializedName('orcid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $orcid = null;
    
    /**
     * The field by which to order. Default varies by endpoint/resource.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PrivateAuthorsSearchOrderEnum $order
     */
	#[\JMS\Serializer\Annotation\SerializedName('order')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PrivateAuthorsSearchOrderEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PrivateAuthorsSearchOrderEnum $order = null;
    
    /**
     * Direction of ordering
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PrivateAuthorsSearchOrderDirectionEnum $orderDirection
     */
	#[\JMS\Serializer\Annotation\SerializedName('order_direction')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PrivateAuthorsSearchOrderDirectionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PrivateAuthorsSearchOrderDirectionEnum $orderDirection = null;
    
    /**
     * Page number. Used for pagination with page_size
     * 
     * @var ?int $page
     */
	#[\JMS\Serializer\Annotation\SerializedName('page')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $page = null;
    
    /**
     * The number of results included on a page. Used for pagination with page
     * 
     * @var ?int $pageSize
     */
	#[\JMS\Serializer\Annotation\SerializedName('page_size')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $pageSize = null;
    
    /**
     * Search term
     * 
     * @var ?string $searchFor
     */
	#[\JMS\Serializer\Annotation\SerializedName('search_for')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $searchFor = null;
    
	public function __construct()
	{
		$this->groupId = null;
		$this->institutionId = null;
		$this->isActive = null;
		$this->isPublic = null;
		$this->limit = null;
		$this->offset = null;
		$this->orcid = null;
		$this->order = null;
		$this->orderDirection = null;
		$this->page = null;
		$this->pageSize = null;
		$this->searchFor = null;
	}
}
