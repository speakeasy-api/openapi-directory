<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class RotatePagesV1RequestBody
{
    /**
     * The angle of rotation of the pages. Positive angles rotate the pages clockwise. Negative angles rotate the pages counter-clockwise.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\RotatePagesV1RequestBodyAngleEnum $angle
     */
	#[SpeakeasyMetadata('multipartForm:name=angle')]
    public RotatePagesV1RequestBodyAngleEnum $angle;
    
    /**
     * The input PDF document
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\RotatePagesV1RequestBodyFile $file
     */
	#[SpeakeasyMetadata('multipartForm:file=true')]
    public RotatePagesV1RequestBodyFile $file;
    
    /**
     * The first page of the range to rotate in the PDF document. If empty, it defaults to the first page of the document.
     * 
     * @var ?int $firstPage
     */
	#[SpeakeasyMetadata('multipartForm:name=first_page')]
    public ?int $firstPage = null;
    
    /**
     * The last page of the range to rotate in the PDF document. If empty, it defaults to the last page of the document.
     * 
     * @var ?int $lastPage
     */
	#[SpeakeasyMetadata('multipartForm:name=last_page')]
    public ?int $lastPage = null;
    
	public function __construct()
	{
		$this->angle = \OpenAPI\OpenAPI\Models\Operations\RotatePagesV1RequestBodyAngleEnum::ZERO;
		$this->file = new \OpenAPI\OpenAPI\Models\Operations\RotatePagesV1RequestBodyFile();
		$this->firstPage = null;
		$this->lastPage = null;
	}
}
