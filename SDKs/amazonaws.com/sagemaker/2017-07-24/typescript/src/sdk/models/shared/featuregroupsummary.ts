/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FeatureGroupStatusEnum } from "./featuregroupstatusenum";
import { OfflineStoreStatus } from "./offlinestorestatus";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The name, Arn, <code>CreationTime</code>, <code>FeatureGroup</code> values, <code>LastUpdatedTime</code> and <code>EnableOnlineStorage</code> status of a <code>FeatureGroup</code>.
 */
export class FeatureGroupSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "FeatureGroupArn" })
  featureGroupArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FeatureGroupName" })
  featureGroupName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FeatureGroupStatus" })
  featureGroupStatus?: FeatureGroupStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "OfflineStoreStatus" })
  @Type(() => OfflineStoreStatus)
  offlineStoreStatus?: OfflineStoreStatus;
}
