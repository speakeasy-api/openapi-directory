/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * An object that contains details about the data source of the import job.
 */
export class CreateImportJobRequestBodyImportDataSource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DataFormat" })
  dataFormat?: shared.DataFormatEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "S3Url" })
  s3Url?: string;
}

/**
 * An object that contains details about the resource destination the import job is going to target.
 */
export class CreateImportJobRequestBodyImportDestination extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ContactListDestination" })
  @Type(() => shared.ContactListDestination)
  contactListDestination?: shared.ContactListDestination;

  @SpeakeasyMetadata()
  @Expose({ name: "SuppressionListDestination" })
  @Type(() => shared.SuppressionListDestination)
  suppressionListDestination?: shared.SuppressionListDestination;
}

export class CreateImportJobRequestBody extends SpeakeasyBase {
  /**
   * An object that contains details about the data source of the import job.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ImportDataSource" })
  @Type(() => CreateImportJobRequestBodyImportDataSource)
  importDataSource: CreateImportJobRequestBodyImportDataSource;

  /**
   * An object that contains details about the resource destination the import job is going to target.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ImportDestination" })
  @Type(() => CreateImportJobRequestBodyImportDestination)
  importDestination: CreateImportJobRequestBodyImportDestination;
}

export class CreateImportJobRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateImportJobRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class CreateImportJobResponse extends SpeakeasyBase {
  /**
   * BadRequestException
   */
  @SpeakeasyMetadata()
  badRequestException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createImportJobResponse?: shared.CreateImportJobResponse;

  /**
   * LimitExceededException
   */
  @SpeakeasyMetadata()
  limitExceededException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * TooManyRequestsException
   */
  @SpeakeasyMetadata()
  tooManyRequestsException?: any;
}
