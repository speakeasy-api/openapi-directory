<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * AccountPlanAddonCancelApplicationJSON - Account plan object
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class AccountPlanAddonCancelApplicationJSON
{
    /**
     * The action that needs to be taken for this sub account. Value must be set to "cancel".
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\AccountPlanAddonCancelApplicationJSONActionEnum $action
     */
	#[\JMS\Serializer\Annotation\SerializedName('action')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\AccountPlanAddonCancelApplicationJSONActionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AccountPlanAddonCancelApplicationJSONActionEnum $action = null;
    
    /**
     * Additional comments about the cancellation decision.
     * 
     * @var ?string $comment
     */
	#[\JMS\Serializer\Annotation\SerializedName('comment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comment = null;
    
    /**
     * The reason for the cancellation of plan. Reason options:<br>`1` - I am no longer working remote.<br>`2` - I had challenges getting the support I needed.<br>`3` - Features in the Basic Free Plan are sufficient.<br>`4` - The expense is too high.<br>`5` - I purchased the wrong product.<br> `6` - Paid purchase not needed right now, will repurchase in the future.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\AccountPlanAddonCancelApplicationJSONReasonEnum $reason
     */
	#[\JMS\Serializer\Annotation\SerializedName('reason')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\AccountPlanAddonCancelApplicationJSONReasonEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AccountPlanAddonCancelApplicationJSONReasonEnum $reason = null;
    
    /**
     * Plan [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans).
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->action = null;
		$this->comment = null;
		$this->reason = null;
		$this->type = null;
	}
}
