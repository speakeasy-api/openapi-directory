/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries } from "./googlecloudcontactcenterinsightsv1calculatestatsresponsetimeseries";
import { GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats } from "./googlecloudcontactcenterinsightsv1issuemodellabelstatsissuestats";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The response for calculating conversation statistics.
 */
export class GoogleCloudContactcenterinsightsV1CalculateStatsResponse extends SpeakeasyBase {
  /**
   * The average duration of all conversations. The average is calculated using only conversations that have a time duration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "averageDuration" })
  averageDuration?: string;

  /**
   * The average number of turns per conversation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "averageTurnCount" })
  averageTurnCount?: number;

  /**
   * The total number of conversations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "conversationCount" })
  conversationCount?: number;

  /**
   * A time series representing conversations over time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "conversationCountTimeSeries" })
  @Type(
    () => GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries
  )
  conversationCountTimeSeries?: GoogleCloudContactcenterinsightsV1CalculateStatsResponseTimeSeries;

  /**
   * A map associating each custom highlighter resource name with its respective number of matches in the set of conversations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customHighlighterMatches" })
  customHighlighterMatches?: Record<string, number>;

  /**
   * A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/` Deprecated, use `issue_matches_stats` field instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issueMatches" })
  issueMatches?: Record<string, number>;

  /**
   * A map associating each issue resource name with its respective number of matches in the set of conversations. Key has the format: `projects//locations//issueModels//issues/`
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats,
  })
  @Expose({ name: "issueMatchesStats" })
  @Transform(
    ({ value }) => {
      const obj: Record<
        string,
        GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
      > = {};
      for (const key in value) {
        obj[key] = objectToClass(
          value[key],
          GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
        );
      }
      return obj;
    },
    { toClassOnly: true }
  )
  issueMatchesStats?: Record<
    string,
    GoogleCloudContactcenterinsightsV1IssueModelLabelStatsIssueStats
  >;

  /**
   * A map associating each smart highlighter display name with its respective number of matches in the set of conversations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "smartHighlighterMatches" })
  smartHighlighterMatches?: Record<string, number>;
}
