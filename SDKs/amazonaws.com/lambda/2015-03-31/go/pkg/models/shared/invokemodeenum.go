// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InvokeModeEnum string

const (
	InvokeModeEnumBuffered       InvokeModeEnum = "BUFFERED"
	InvokeModeEnumResponseStream InvokeModeEnum = "RESPONSE_STREAM"
)

func (e InvokeModeEnum) ToPointer() *InvokeModeEnum {
	return &e
}

func (e *InvokeModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BUFFERED":
		fallthrough
	case "RESPONSE_STREAM":
		*e = InvokeModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InvokeModeEnum: %v", v)
	}
}
