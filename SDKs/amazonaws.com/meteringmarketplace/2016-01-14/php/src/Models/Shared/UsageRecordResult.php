<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * UsageRecordResult - A <code>UsageRecordResult</code> indicates the status of a given <code>UsageRecord</code> processed by <code>BatchMeterUsage</code>.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class UsageRecordResult
{
	#[\JMS\Serializer\Annotation\SerializedName('MeteringRecordId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $meteringRecordId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UsageRecordResultStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsageRecordResultStatusEnum $status = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('UsageRecord')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UsageRecord')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsageRecord $usageRecord = null;
    
	public function __construct()
	{
		$this->meteringRecordId = null;
		$this->status = null;
		$this->usageRecord = null;
	}
}
