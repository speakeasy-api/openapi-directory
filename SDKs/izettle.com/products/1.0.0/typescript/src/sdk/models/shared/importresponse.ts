/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export enum ImportResponseStateEnum {
  Importing = "IMPORTING",
  FinishedSuccess = "FINISHED_SUCCESS",
  FinishedFailed = "FINISHED_FAILED",
}

/**
 * Import status
 */
export class ImportResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "errorMessage" })
  errorMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "finished" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  finished?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "items" })
  items?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ImportResponseStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "uuid" })
  uuid?: string;
}
