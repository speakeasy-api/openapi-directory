/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Determines how the 'value' field is matched when filtering. If not specified, defaults to EXACT. If set to WILDCARD_EXPRESSION, '*' is allowed as a placeholder for variable length character sequences, and it can be escaped with a backslash. Note, only paid search dimensions ('dfa:paidSearch*') allow a matchType other than EXACT.
 */
export enum PathReportDimensionValueMatchTypeEnum {
  Exact = "EXACT",
  BeginsWith = "BEGINS_WITH",
  Contains = "CONTAINS",
  WildcardExpression = "WILDCARD_EXPRESSION",
}

/**
 * Represents a PathReportDimensionValue resource.
 */
export class PathReportDimensionValue extends SpeakeasyBase {
  /**
   * The name of the dimension.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dimensionName" })
  dimensionName?: string;

  /**
   * The possible ID's associated with the value if available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ids" })
  ids?: string[];

  /**
   * The kind of resource this is, in this case dfareporting#pathReportDimensionValue.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Determines how the 'value' field is matched when filtering. If not specified, defaults to EXACT. If set to WILDCARD_EXPRESSION, '*' is allowed as a placeholder for variable length character sequences, and it can be escaped with a backslash. Note, only paid search dimensions ('dfa:paidSearch*') allow a matchType other than EXACT.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "matchType" })
  matchType?: PathReportDimensionValueMatchTypeEnum;

  /**
   * The possible values of the dimension.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "values" })
  values?: string[];
}
