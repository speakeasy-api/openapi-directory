// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type AndroidpublisherOrdersRefundSecurity struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type AndroidpublisherOrdersRefundPathParams struct {
	// The order ID provided to the user when the subscription or in-app order was purchased.
	OrderID string `pathParam:"style=simple,explode=false,name=orderId"`
	// The package name of the application for which this subscription or in-app item was purchased (for example, 'com.some.thing').
	PackageName string `pathParam:"style=simple,explode=false,name=packageName"`
}

type AndroidpublisherOrdersRefundQueryParams struct {
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Whether to revoke the purchased item. If set to true, access to the subscription or in-app item will be terminated immediately. If the item is a recurring subscription, all future payments will also be terminated. Consumed in-app items need to be handled by developer's app. (optional)
	Revoke *bool `queryParam:"style=form,explode=true,name=revoke"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
}

type AndroidpublisherOrdersRefundRequest struct {
	PathParams  AndroidpublisherOrdersRefundPathParams
	QueryParams AndroidpublisherOrdersRefundQueryParams
	Security    AndroidpublisherOrdersRefundSecurity
}

type AndroidpublisherOrdersRefundResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
