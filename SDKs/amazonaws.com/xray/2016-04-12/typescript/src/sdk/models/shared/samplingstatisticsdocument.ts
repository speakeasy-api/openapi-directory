/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Request sampling results for a single rule from a service. Results are for the last 10 seconds unless the service has been assigned a longer reporting interval after a previous call to <a href="https://docs.aws.amazon.com/xray/latest/api/API_GetSamplingTargets.html">GetSamplingTargets</a>.
 */
export class SamplingStatisticsDocument extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BorrowCount" })
  borrowCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ClientID" })
  clientID: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RequestCount" })
  requestCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "RuleName" })
  ruleName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SampledCount" })
  sampledCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp: Date;
}
