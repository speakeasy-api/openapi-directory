// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// JobMonitoringStateEnum - Monitoring state of the job used for monitoring tabs.
type JobMonitoringStateEnum string

const (
	JobMonitoringStateEnumFailure   JobMonitoringStateEnum = "Failure"
	JobMonitoringStateEnumScheduled JobMonitoringStateEnum = "Scheduled"
	JobMonitoringStateEnumSuccess   JobMonitoringStateEnum = "Success"
	JobMonitoringStateEnumActive    JobMonitoringStateEnum = "Active"
	JobMonitoringStateEnumCanceled  JobMonitoringStateEnum = "Canceled"
)

func (e JobMonitoringStateEnum) ToPointer() *JobMonitoringStateEnum {
	return &e
}

func (e *JobMonitoringStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Failure":
		fallthrough
	case "Scheduled":
		fallthrough
	case "Success":
		fallthrough
	case "Active":
		fallthrough
	case "Canceled":
		*e = JobMonitoringStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JobMonitoringStateEnum: %v", v)
	}
}
