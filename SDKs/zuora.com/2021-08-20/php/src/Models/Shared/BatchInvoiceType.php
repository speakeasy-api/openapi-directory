<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BatchInvoiceType - Container for custom fields of an Invoice object.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BatchInvoiceType
{
    /**
     * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     * 
     * 
     * @var ?string $integrationIdNS
     */
	#[\JMS\Serializer\Annotation\SerializedName('IntegrationId__NS')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $integrationIdNS = null;
    
    /**
     * Status of the invoice's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     * 
     * 
     * @var ?string $integrationStatusNS
     */
	#[\JMS\Serializer\Annotation\SerializedName('IntegrationStatus__NS')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $integrationStatusNS = null;
    
    /**
     * Date when the invoice was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     * 
     * 
     * @var ?string $syncDateNS
     */
	#[\JMS\Serializer\Annotation\SerializedName('SyncDate__NS')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $syncDateNS = null;
    
    /**
     * Whether invoices are automatically picked up for processing in the corresponding payment run.
     * 
     * 
     * By default, invoices are automatically picked up for processing in the corresponding payment run.
     * 
     * 
     * @var ?bool $autoPay
     */
	#[\JMS\Serializer\Annotation\SerializedName('autoPay')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $autoPay = null;
    
    /**
     * Additional information related to the invoice that a Zuora user added to the invoice.
     * 
     * 
     * 
     * @var ?string $comments
     */
	#[\JMS\Serializer\Annotation\SerializedName('comments')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $comments = null;
    
    /**
     * The date by which the payment for this invoice is due.
     * 
     * 
     * 
     * @var ?\DateTime $dueDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('dueDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $dueDate = null;
    
    /**
     * The ID of the invoice to be updated.
     * 
     * 
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The new invoice date of the invoice. The new invoice date cannot fall in a closed accounting period.
     * 
     * 
     * You can only specify `invoiceDate` or `dueDate` in one request. Otherwise, an error occurs.
     * 
     * 
     * @var ?\DateTime $invoiceDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('invoiceDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $invoiceDate = null;
    
    /**
     * Container for invoice items. The maximum number of items is 1,000.
     * 
     * 
     * **Note:** Invoice items can only be updated if you have Unified Invoicing is enabled and the invoice is a standalone invoice.
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PutInvoiceItemType> $invoiceItems
     */
	#[\JMS\Serializer\Annotation\SerializedName('invoiceItems')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PutInvoiceItemType>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $invoiceItems = null;
    
    /**
     * Whether the invoice was transferred to an external accounting system.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BatchInvoiceTypeTransferredToAccountingEnum $transferredToAccounting
     */
	#[\JMS\Serializer\Annotation\SerializedName('transferredToAccounting')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\BatchInvoiceTypeTransferredToAccountingEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BatchInvoiceTypeTransferredToAccountingEnum $transferredToAccounting = null;
    
	public function __construct()
	{
		$this->integrationIdNS = null;
		$this->integrationStatusNS = null;
		$this->syncDateNS = null;
		$this->autoPay = null;
		$this->comments = null;
		$this->dueDate = null;
		$this->id = null;
		$this->invoiceDate = null;
		$this->invoiceItems = null;
		$this->transferredToAccounting = null;
	}
}
