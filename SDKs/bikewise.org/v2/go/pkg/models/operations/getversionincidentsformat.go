// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETVersionIncidentsFormatIncidentTypeEnum - <p>Only incidents of specific type</p>
type GETVersionIncidentsFormatIncidentTypeEnum string

const (
	GETVersionIncidentsFormatIncidentTypeEnumCrash               GETVersionIncidentsFormatIncidentTypeEnum = "crash"
	GETVersionIncidentsFormatIncidentTypeEnumHazard              GETVersionIncidentsFormatIncidentTypeEnum = "hazard"
	GETVersionIncidentsFormatIncidentTypeEnumTheft               GETVersionIncidentsFormatIncidentTypeEnum = "theft"
	GETVersionIncidentsFormatIncidentTypeEnumUnconfirmed         GETVersionIncidentsFormatIncidentTypeEnum = "unconfirmed"
	GETVersionIncidentsFormatIncidentTypeEnumInfrastructureIssue GETVersionIncidentsFormatIncidentTypeEnum = "infrastructure_issue"
	GETVersionIncidentsFormatIncidentTypeEnumChopShop            GETVersionIncidentsFormatIncidentTypeEnum = "chop_shop"
)

func (e *GETVersionIncidentsFormatIncidentTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "crash":
		fallthrough
	case "hazard":
		fallthrough
	case "theft":
		fallthrough
	case "unconfirmed":
		fallthrough
	case "infrastructure_issue":
		fallthrough
	case "chop_shop":
		*e = GETVersionIncidentsFormatIncidentTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETVersionIncidentsFormatIncidentTypeEnum: %s", s)
	}
}

type GETVersionIncidentsFormatRequest struct {
	// <p>Only incidents of specific type</p>
	//
	IncidentType *GETVersionIncidentsFormatIncidentTypeEnum `queryParam:"style=form,explode=true,name=incident_type"`
	// <p>Start of period</p>
	//
	OccurredAfter *int `queryParam:"style=form,explode=true,name=occurred_after"`
	// <p>End of period</p>
	//
	OccurredBefore *int `queryParam:"style=form,explode=true,name=occurred_before"`
	// <p>Page of results to fetch.</p>
	//
	Page *int `queryParam:"style=form,explode=true,name=page"`
	// <p>Number of results to return per page.</p>
	//
	PerPage *int `queryParam:"style=form,explode=true,name=per_page"`
	// <p>Center of location for proximity search</p>
	//
	Proximity *string `queryParam:"style=form,explode=true,name=proximity"`
	// <p>Size of the proximity search</p>
	//
	ProximitySquare *int `queryParam:"style=form,explode=true,name=proximity_square"`
	// <p>Full text search of incidents</p>
	//
	Query *string `queryParam:"style=form,explode=true,name=query"`
}

type GETVersionIncidentsFormatResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
