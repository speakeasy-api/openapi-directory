/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Allow or deny type.
 */
export enum GoogleCloudOrgpolicyV2CustomConstraintActionTypeEnum {
  ActionTypeUnspecified = "ACTION_TYPE_UNSPECIFIED",
  Allow = "ALLOW",
  Deny = "DENY",
}

export enum GoogleCloudOrgpolicyV2CustomConstraintMethodTypesEnum {
  MethodTypeUnspecified = "METHOD_TYPE_UNSPECIFIED",
  Create = "CREATE",
  Update = "UPDATE",
  Delete = "DELETE",
}

/**
 * A custom constraint defined by customers which can *only* be applied to the given resource types and organization. By creating a custom constraint, customers can apply policies of this custom constraint. *Creating a custom constraint itself does NOT apply any policy enforcement*.
 */
export class GoogleCloudOrgpolicyV2CustomConstraint extends SpeakeasyBase {
  /**
   * Allow or deny type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actionType" })
  actionType?: GoogleCloudOrgpolicyV2CustomConstraintActionTypeEnum;

  /**
   * Org policy condition/expression. For example: `resource.instanceName.matches("[production|test]_.*_(\d)+")'` or, `resource.management.auto_upgrade == true` The max length of the condition is 1000 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "condition" })
  condition?: string;

  /**
   * Detailed information about this custom policy constraint. The max length of the description is 2000 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * One line display name for the UI. The max length of the display_name is 200 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * All the operations being applied for this constraint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "methodTypes" })
  methodTypes?: GoogleCloudOrgpolicyV2CustomConstraintMethodTypesEnum[];

  /**
   * Immutable. Name of the constraint. This is unique within the organization. Format of the name should be * `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example: `organizations/123/customConstraints/custom.createOnlyE2TypeVms` The max length is 70 characters and the minimum length is 1. Note that the prefix `organizations/{organization_id}/customConstraints/` is not counted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Immutable. The resource instance type on which this policy applies. Format will be of the form : "/" Example: * `compute.googleapis.com/Instance`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resourceTypes" })
  resourceTypes?: string[];

  /**
   * Output only. The last time this custom constraint was updated. This represents the last time that the `CreateCustomConstraint` or `UpdateCustomConstraint` RPC was called
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;
}

/**
 * A custom constraint defined by customers which can *only* be applied to the given resource types and organization. By creating a custom constraint, customers can apply policies of this custom constraint. *Creating a custom constraint itself does NOT apply any policy enforcement*.
 */
export class GoogleCloudOrgpolicyV2CustomConstraintInput extends SpeakeasyBase {
  /**
   * Allow or deny type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actionType" })
  actionType?: GoogleCloudOrgpolicyV2CustomConstraintActionTypeEnum;

  /**
   * Org policy condition/expression. For example: `resource.instanceName.matches("[production|test]_.*_(\d)+")'` or, `resource.management.auto_upgrade == true` The max length of the condition is 1000 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "condition" })
  condition?: string;

  /**
   * Detailed information about this custom policy constraint. The max length of the description is 2000 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * One line display name for the UI. The max length of the display_name is 200 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * All the operations being applied for this constraint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "methodTypes" })
  methodTypes?: GoogleCloudOrgpolicyV2CustomConstraintMethodTypesEnum[];

  /**
   * Immutable. Name of the constraint. This is unique within the organization. Format of the name should be * `organizations/{organization_id}/customConstraints/{custom_constraint_id}` Example: `organizations/123/customConstraints/custom.createOnlyE2TypeVms` The max length is 70 characters and the minimum length is 1. Note that the prefix `organizations/{organization_id}/customConstraints/` is not counted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Immutable. The resource instance type on which this policy applies. Format will be of the form : "/" Example: * `compute.googleapis.com/Instance`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resourceTypes" })
  resourceTypes?: string[];
}
