/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ClientDetailsApiModel - OK
 */
public class ClientDetailsApiModel {
    /**
     * Client additional emails contact for CC
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AdditionalEmails")
    public AdditionalClientEmailApiModel[] additionalEmails;
    public ClientDetailsApiModel withAdditionalEmails(AdditionalClientEmailApiModel[] additionalEmails) {
        this.additionalEmails = additionalEmails;
        return this;
    }
    
    /**
     * Client business address
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Address")
    public String address;
    public ClientDetailsApiModel withAddress(String address) {
        this.address = address;
        return this;
    }
    
    /**
     * Indicates the country where the clients is from
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ClientCountryId")
    public Integer clientCountryId;
    public ClientDetailsApiModel withClientCountryId(Integer clientCountryId) {
        this.clientCountryId = clientCountryId;
        return this;
    }
    
    /**
     * Indicates the default system currency used by the user for the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ClientCurrencyId")
    public Integer clientCurrencyId;
    public ClientDetailsApiModel withClientCurrencyId(Integer clientCurrencyId) {
        this.clientCurrencyId = clientCurrencyId;
        return this;
    }
    
    /**
     * Client's Company Registration Number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CompanyRegistrationNumber")
    public String companyRegistrationNumber;
    public ClientDetailsApiModel withCompanyRegistrationNumber(String companyRegistrationNumber) {
        this.companyRegistrationNumber = companyRegistrationNumber;
        return this;
    }
    
    /**
     * Date of creation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedOn")
    public OffsetDateTime createdOn;
    public ClientDetailsApiModel withCreatedOn(OffsetDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }
    
    /**
     * Client custom payment terms
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefaultDueDateInDays")
    public Integer defaultDueDateInDays;
    public ClientDetailsApiModel withDefaultDueDateInDays(Integer defaultDueDateInDays) {
        this.defaultDueDateInDays = defaultDueDateInDays;
        return this;
    }
    
    /**
     * Client email
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Email")
    public String email;
    public ClientDetailsApiModel withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Entity id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public Integer id;
    public ClientDetailsApiModel withId(Integer id) {
        this.id = id;
        return this;
    }
    
    /**
     * Name of the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public ClientDetailsApiModel withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Client phone numer
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PhoneNumber")
    public String phoneNumber;
    public ClientDetailsApiModel withPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }
    
    /**
     * Hold a value of the language in which the invoice will be sent
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UiLanguageId")
    public Integer uiLanguageId;
    public ClientDetailsApiModel withUiLanguageId(Integer uiLanguageId) {
        this.uiLanguageId = uiLanguageId;
        return this;
    }
    
    /**
     * Client's VAT number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Vat")
    public String vat;
    public ClientDetailsApiModel withVat(String vat) {
        this.vat = vat;
        return this;
    }
    
}
