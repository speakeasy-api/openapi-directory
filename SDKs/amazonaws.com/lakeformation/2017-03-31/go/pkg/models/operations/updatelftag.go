// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type UpdateLFTagRequestBody struct {
	// The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
	CatalogID *string `json:"CatalogId,omitempty"`
	// The key-name for the LF-tag for which to add or delete values.
	TagKey string `json:"TagKey"`
	// A list of LF-tag values to add from the LF-tag.
	TagValuesToAdd []string `json:"TagValuesToAdd,omitempty"`
	// A list of LF-tag values to delete from the LF-tag.
	TagValuesToDelete []string `json:"TagValuesToDelete,omitempty"`
}

type UpdateLFTagRequest struct {
	RequestBody       UpdateLFTagRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateLFTagResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// EntityNotFoundException
	EntityNotFoundException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdateLFTagResponse map[string]interface{}
}
