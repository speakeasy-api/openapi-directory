/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Table - A StructuralElement representing a table.
 */
public class Table {
    /**
     * Number of columns in the table. It's possible for a table to be non-rectangular, so some rows may have a different number of cells.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("columns")
    public Integer columns;

    public Table withColumns(Integer columns) {
        this.columns = columns;
        return this;
    }
    
    /**
     * Number of rows in the table.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rows")
    public Integer rows;

    public Table withRows(Integer rows) {
        this.rows = rows;
        return this;
    }
    
    /**
     * The suggested deletion IDs. If empty, then there are no suggested deletions of this content.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suggestedDeletionIds")
    public String[] suggestedDeletionIds;

    public Table withSuggestedDeletionIds(String[] suggestedDeletionIds) {
        this.suggestedDeletionIds = suggestedDeletionIds;
        return this;
    }
    
    /**
     * The suggested insertion IDs. A Table may have multiple insertion IDs if it's a nested suggested change. If empty, then this is not a suggested insertion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suggestedInsertionIds")
    public String[] suggestedInsertionIds;

    public Table withSuggestedInsertionIds(String[] suggestedInsertionIds) {
        this.suggestedInsertionIds = suggestedInsertionIds;
        return this;
    }
    
    /**
     * The contents and style of each row.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tableRows")
    public TableRow[] tableRows;

    public Table withTableRows(TableRow[] tableRows) {
        this.tableRows = tableRows;
        return this;
    }
    
    /**
     * Styles that apply to a table.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tableStyle")
    public TableStyle tableStyle;

    public Table withTableStyle(TableStyle tableStyle) {
        this.tableStyle = tableStyle;
        return this;
    }
    
    public Table(){}
}
