// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type SendOTPMessagePathParams struct {
	// The unique ID of your Amazon Pinpoint application.
	ApplicationID string `pathParam:"style=simple,explode=false,name=application-id"`
}

type SendOTPMessageHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// SendOTPMessageRequestBodySendOTPMessageRequestParameters - Send OTP message request parameters.
type SendOTPMessageRequestBodySendOTPMessageRequestParameters struct {
	AllowedAttempts     *int64  `json:"AllowedAttempts,omitempty"`
	BrandName           *string `json:"BrandName,omitempty"`
	Channel             *string `json:"Channel,omitempty"`
	CodeLength          *int64  `json:"CodeLength,omitempty"`
	DestinationIdentity *string `json:"DestinationIdentity,omitempty"`
	EntityID            *string `json:"EntityId,omitempty"`
	Language            *string `json:"Language,omitempty"`
	OriginationIdentity *string `json:"OriginationIdentity,omitempty"`
	ReferenceID         *string `json:"ReferenceId,omitempty"`
	TemplateID          *string `json:"TemplateId,omitempty"`
	ValidityPeriod      *int64  `json:"ValidityPeriod,omitempty"`
}

type SendOTPMessageRequestBody struct {
	// Send OTP message request parameters.
	SendOTPMessageRequestParameters SendOTPMessageRequestBodySendOTPMessageRequestParameters `json:"SendOTPMessageRequestParameters"`
}

type SendOTPMessageRequest struct {
	PathParams SendOTPMessagePathParams
	Headers    SendOTPMessageHeaders
	Request    SendOTPMessageRequestBody `request:"mediaType=application/json"`
}

type SendOTPMessageResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// ForbiddenException
	ForbiddenException interface{}
	// InternalServerErrorException
	InternalServerErrorException interface{}
	// MethodNotAllowedException
	MethodNotAllowedException interface{}
	// NotFoundException
	NotFoundException interface{}
	// PayloadTooLargeException
	PayloadTooLargeException interface{}
	// Success
	SendOTPMessageResponse *shared.SendOTPMessageResponse
	StatusCode             int
	RawResponse            *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
