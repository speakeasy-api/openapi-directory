"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import thumbnaildetails as shared_thumbnaildetails
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class SearchResultSnippetLiveBroadcastContentEnum(str, Enum):
    r"""It indicates if the resource (video or channel) has upcoming/active live broadcast content. Or it's \\"none\\" if there is not any upcoming/active live broadcasts."""
    NONE = 'none'
    UPCOMING = 'upcoming'
    LIVE = 'live'
    COMPLETED = 'completed'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SearchResultSnippet:
    r"""Basic details about a search result, including title, description and thumbnails of the item referenced by the search result."""
    
    channel_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channelId'), 'exclude': lambda f: f is None }})
    r"""The value that YouTube uses to uniquely identify the channel that published the resource that the search result identifies."""  
    channel_title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channelTitle'), 'exclude': lambda f: f is None }})
    r"""The title of the channel that published the resource that the search result identifies."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""A description of the search result."""  
    live_broadcast_content: Optional[SearchResultSnippetLiveBroadcastContentEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('liveBroadcastContent'), 'exclude': lambda f: f is None }})
    r"""It indicates if the resource (video or channel) has upcoming/active live broadcast content. Or it's \\"none\\" if there is not any upcoming/active live broadcasts."""  
    published_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('publishedAt'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The creation date and time of the resource that the search result identifies."""  
    thumbnails: Optional[shared_thumbnaildetails.ThumbnailDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('thumbnails'), 'exclude': lambda f: f is None }})
    r"""Internal representation of thumbnails for a YouTube resource."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""The title of the search result."""  
    