"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SearchFreetextResponseSearchTypeEnum(str, Enum):
    r"""**indicator** of the entity type for *this* result that is *one of*:
      - `\"PRODUCT\"`: a tour / activity
      - `\"DESTINATION\"`: continent, country, city, region
      - `\"ATTRACTION\"`: an attraction within a destination (only available to partners with SEO access)
      - `\"RECOMMENDATION\"`: an attraction within a destination (only available to partners with SEO access)
    """
    PRODUCT = 'PRODUCT'
    DESTINATION = 'DESTINATION'
    ATTRACTION = 'ATTRACTION'
    RECOMMENDATION = 'RECOMMENDATION'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SearchFreetextResponse:
    
    search_type: Optional[SearchFreetextResponseSearchTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('searchType'), 'exclude': lambda f: f is None }})
    r"""**indicator** of the entity type for *this* result that is *one of*:
      - `\"PRODUCT\"`: a tour / activity
      - `\"DESTINATION\"`: continent, country, city, region
      - `\"ATTRACTION\"`: an attraction within a destination (only available to partners with SEO access)
      - `\"RECOMMENDATION\"`: an attraction within a destination (only available to partners with SEO access)
    """  
    sort_order: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sortOrder'), 'exclude': lambda f: f is None }})
    r"""**sort order** for *this* data object"""  
    