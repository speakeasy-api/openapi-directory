"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import phaseartifact as shared_phaseartifact
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TargetArtifact:
    r"""The artifacts produced by a target render operation."""
    
    artifact_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('artifactUri'), 'exclude': lambda f: f is None }})
    r"""Output only. URI of a directory containing the artifacts. This contains deployment configuration used by Skaffold during a rollout, and all paths are relative to this location."""  
    manifest_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('manifestPath'), 'exclude': lambda f: f is None }})
    r"""Output only. File path of the rendered manifest relative to the URI."""  
    phase_artifacts: Optional[dict[str, shared_phaseartifact.PhaseArtifact]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phaseArtifacts'), 'exclude': lambda f: f is None }})
    r"""Output only. Map from the phase ID to the phase artifacts for the `Target`."""  
    skaffold_config_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('skaffoldConfigPath'), 'exclude': lambda f: f is None }})
    r"""Output only. File path of the resolved Skaffold configuration relative to the URI."""  
    