/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ImportTask - An array of information related to the import task request that includes status information, times, IDs, the Amazon S3 Object URL for the import file, and more.
 */
public class ImportTask {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applicationImportFailure")
    public Long applicationImportFailure;

    public ImportTask withApplicationImportFailure(Long applicationImportFailure) {
        this.applicationImportFailure = applicationImportFailure;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applicationImportSuccess")
    public Long applicationImportSuccess;

    public ImportTask withApplicationImportSuccess(Long applicationImportSuccess) {
        this.applicationImportSuccess = applicationImportSuccess;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientRequestToken")
    public String clientRequestToken;

    public ImportTask withClientRequestToken(String clientRequestToken) {
        this.clientRequestToken = clientRequestToken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorsAndFailedEntriesZip")
    public String errorsAndFailedEntriesZip;

    public ImportTask withErrorsAndFailedEntriesZip(String errorsAndFailedEntriesZip) {
        this.errorsAndFailedEntriesZip = errorsAndFailedEntriesZip;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("importCompletionTime")
    public OffsetDateTime importCompletionTime;

    public ImportTask withImportCompletionTime(OffsetDateTime importCompletionTime) {
        this.importCompletionTime = importCompletionTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("importDeletedTime")
    public OffsetDateTime importDeletedTime;

    public ImportTask withImportDeletedTime(OffsetDateTime importDeletedTime) {
        this.importDeletedTime = importDeletedTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("importRequestTime")
    public OffsetDateTime importRequestTime;

    public ImportTask withImportRequestTime(OffsetDateTime importRequestTime) {
        this.importRequestTime = importRequestTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("importTaskId")
    public String importTaskId;

    public ImportTask withImportTaskId(String importTaskId) {
        this.importTaskId = importTaskId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("importUrl")
    public String importUrl;

    public ImportTask withImportUrl(String importUrl) {
        this.importUrl = importUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public ImportTask withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serverImportFailure")
    public Long serverImportFailure;

    public ImportTask withServerImportFailure(Long serverImportFailure) {
        this.serverImportFailure = serverImportFailure;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serverImportSuccess")
    public Long serverImportSuccess;

    public ImportTask withServerImportSuccess(Long serverImportSuccess) {
        this.serverImportSuccess = serverImportSuccess;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ImportStatusEnum status;

    public ImportTask withStatus(ImportStatusEnum status) {
        this.status = status;
        return this;
    }
    
    public ImportTask(){}
}
