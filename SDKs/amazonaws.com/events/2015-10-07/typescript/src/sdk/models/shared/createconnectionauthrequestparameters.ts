/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConnectionHttpParameters } from "./connectionhttpparameters";
import { CreateConnectionApiKeyAuthRequestParameters } from "./createconnectionapikeyauthrequestparameters";
import { CreateConnectionBasicAuthRequestParameters } from "./createconnectionbasicauthrequestparameters";
import { CreateConnectionOAuthRequestParameters } from "./createconnectionoauthrequestparameters";
import { Expose, Type } from "class-transformer";

/**
 * Contains the authorization parameters for the connection.
 */
export class CreateConnectionAuthRequestParameters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ApiKeyAuthParameters" })
  @Type(() => CreateConnectionApiKeyAuthRequestParameters)
  apiKeyAuthParameters?: CreateConnectionApiKeyAuthRequestParameters;

  @SpeakeasyMetadata()
  @Expose({ name: "BasicAuthParameters" })
  @Type(() => CreateConnectionBasicAuthRequestParameters)
  basicAuthParameters?: CreateConnectionBasicAuthRequestParameters;

  @SpeakeasyMetadata()
  @Expose({ name: "InvocationHttpParameters" })
  @Type(() => ConnectionHttpParameters)
  invocationHttpParameters?: ConnectionHttpParameters;

  @SpeakeasyMetadata()
  @Expose({ name: "OAuthParameters" })
  @Type(() => CreateConnectionOAuthRequestParameters)
  oAuthParameters?: CreateConnectionOAuthRequestParameters;
}
