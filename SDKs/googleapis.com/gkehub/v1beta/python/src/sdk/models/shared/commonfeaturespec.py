"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import anthosobservabilityfeaturespec as shared_anthosobservabilityfeaturespec
from ..shared import multiclusteringressfeaturespec as shared_multiclusteringressfeaturespec
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CommonFeatureSpec:
    r"""CommonFeatureSpec contains Hub-wide configuration information"""
    
    anthosobservability: Optional[shared_anthosobservabilityfeaturespec.AnthosObservabilityFeatureSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('anthosobservability'), 'exclude': lambda f: f is None }})
    r"""**Anthos Observability**: Spec"""  
    appdevexperience: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appdevexperience'), 'exclude': lambda f: f is None }})
    r"""Spec for App Dev Experience Feature."""  
    fleetobservability: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fleetobservability'), 'exclude': lambda f: f is None }})
    r"""**Fleet Observability**: The Hub-wide input for the FleetObservability feature."""  
    multiclusteringress: Optional[shared_multiclusteringressfeaturespec.MultiClusterIngressFeatureSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('multiclusteringress'), 'exclude': lambda f: f is None }})
    r"""**Multi-cluster Ingress**: The configuration for the MultiClusterIngress feature."""  
    