// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// NumberConfigConfigTypeEnum - A type of config. Available values: TRACKING, IVR
type NumberConfigConfigTypeEnum string

const (
	NumberConfigConfigTypeEnumIvr      NumberConfigConfigTypeEnum = "IVR"
	NumberConfigConfigTypeEnumTracking NumberConfigConfigTypeEnum = "TRACKING"
)

func (e NumberConfigConfigTypeEnum) ToPointer() *NumberConfigConfigTypeEnum {
	return &e
}

func (e *NumberConfigConfigTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IVR":
		fallthrough
	case "TRACKING":
		*e = NumberConfigConfigTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NumberConfigConfigTypeEnum: %v", v)
	}
}

// NumberConfig - Represents the configuration of a phone number purchased by user. You can configure number to accept inbound calls, play sounds to customer, make a transfer or setup an IVR script to interact with customer. See [CallFire IVR](https://www.callfire.com/products/ivr) for more info
type NumberConfig struct {
	// Call tracking configuration allows you track incoming calls, analyze, respond to customers using sms or voice replies. For more information see [call tracking page](https://www.callfire.com/products/call-tracking)
	CallTrackingConfig *CallTrackingConfig `json:"callTrackingConfig,omitempty"`
	// A type of config. Available values: TRACKING, IVR
	ConfigType *NumberConfigConfigTypeEnum `json:"configType,omitempty"`
	// ~
	IvrInboundConfig *IvrInboundConfig `json:"ivrInboundConfig,omitempty"`
	// Phone number in E.164 format (11-digit). Example: 12132000384
	Number *string `json:"number,omitempty"`
	// ~
	TextInboundConfig *TextInboundConfig `json:"textInboundConfig,omitempty"`
}
