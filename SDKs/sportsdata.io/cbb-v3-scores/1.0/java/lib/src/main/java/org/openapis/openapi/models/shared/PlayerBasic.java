/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PlayerBasic {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BirthCity")
    public String birthCity;

    public PlayerBasic withBirthCity(String birthCity) {
        this.birthCity = birthCity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BirthState")
    public String birthState;

    public PlayerBasic withBirthState(String birthState) {
        this.birthState = birthState;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Class")
    public String class_;

    public PlayerBasic withClass(String class_) {
        this.class_ = class_;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FirstName")
    public String firstName;

    public PlayerBasic withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalTeamID")
    public Long globalTeamID;

    public PlayerBasic withGlobalTeamID(Long globalTeamID) {
        this.globalTeamID = globalTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Height")
    public Long height;

    public PlayerBasic withHeight(Long height) {
        this.height = height;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Jersey")
    public Long jersey;

    public PlayerBasic withJersey(Long jersey) {
        this.jersey = jersey;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LastName")
    public String lastName;

    public PlayerBasic withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayerID")
    public Long playerID;

    public PlayerBasic withPlayerID(Long playerID) {
        this.playerID = playerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Position")
    public String position;

    public PlayerBasic withPosition(String position) {
        this.position = position;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Team")
    public String team;

    public PlayerBasic withTeam(String team) {
        this.team = team;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TeamID")
    public Long teamID;

    public PlayerBasic withTeamID(Long teamID) {
        this.teamID = teamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Weight")
    public Long weight;

    public PlayerBasic withWeight(Long weight) {
        this.weight = weight;
        return this;
    }
    
    public PlayerBasic(){}
}
