// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// CurrenciesSupportedCurrenciesHistoryGETFormatEnum - to override content negotiation specify a value of json or xml
type CurrenciesSupportedCurrenciesHistoryGETFormatEnum string

const (
	CurrenciesSupportedCurrenciesHistoryGETFormatEnumJSON CurrenciesSupportedCurrenciesHistoryGETFormatEnum = "json"
	CurrenciesSupportedCurrenciesHistoryGETFormatEnumXML  CurrenciesSupportedCurrenciesHistoryGETFormatEnum = "xml"
)

func (e *CurrenciesSupportedCurrenciesHistoryGETFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "xml":
		*e = CurrenciesSupportedCurrenciesHistoryGETFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CurrenciesSupportedCurrenciesHistoryGETFormatEnum: %s", s)
	}
}

type CurrenciesSupportedCurrenciesHistoryGETRequest struct {
	// to override content negotiation specify a value of json or xml
	Format *CurrenciesSupportedCurrenciesHistoryGETFormatEnum `queryParam:"style=form,explode=true,name=format"`
}

type CurrenciesSupportedCurrenciesHistoryGETResponse struct {
	Body        []byte
	ContentType string
	// Success
	CurrenciesSupportedCurrenciesHistoryGET200ApplicationJSONStrings []string
	StatusCode                                                       int
	RawResponse                                                      *http.Response
}
