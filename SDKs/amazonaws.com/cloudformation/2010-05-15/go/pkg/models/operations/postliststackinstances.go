// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTListStackInstancesActionEnum
type POSTListStackInstancesActionEnum string

const (
	POSTListStackInstancesActionEnumListStackInstances POSTListStackInstancesActionEnum = "ListStackInstances"
)

func (e POSTListStackInstancesActionEnum) ToPointer() *POSTListStackInstancesActionEnum {
	return &e
}

func (e *POSTListStackInstancesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ListStackInstances":
		*e = POSTListStackInstancesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListStackInstancesActionEnum: %v", v)
	}
}

// POSTListStackInstancesVersionEnum
type POSTListStackInstancesVersionEnum string

const (
	POSTListStackInstancesVersionEnumTwoThousandAndTen0515 POSTListStackInstancesVersionEnum = "2010-05-15"
)

func (e POSTListStackInstancesVersionEnum) ToPointer() *POSTListStackInstancesVersionEnum {
	return &e
}

func (e *POSTListStackInstancesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-15":
		*e = POSTListStackInstancesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListStackInstancesVersionEnum: %v", v)
	}
}

type POSTListStackInstancesRequest struct {
	Action POSTListStackInstancesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                           `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       []byte                            `request:"mediaType=text/xml"`
	Version           POSTListStackInstancesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTListStackInstancesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
