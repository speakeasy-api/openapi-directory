// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type APNConfigRequestAuthTypeEnum string

const (
	APNConfigRequestAuthTypeEnumCertificate APNConfigRequestAuthTypeEnum = "certificate"
	APNConfigRequestAuthTypeEnumToken       APNConfigRequestAuthTypeEnum = "token"
)

func (e *APNConfigRequestAuthTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "certificate":
		fallthrough
	case "token":
		*e = APNConfigRequestAuthTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for APNConfigRequestAuthTypeEnum: %s", s)
	}
}

type APNConfigRequest struct {
	Disabled             *bool                         `json:"Disabled,omitempty"`
	AuthKey              *string                       `json:"auth_key,omitempty"`
	AuthType             *APNConfigRequestAuthTypeEnum `json:"auth_type,omitempty"`
	BundleID             *string                       `json:"bundle_id,omitempty"`
	Development          *bool                         `json:"development,omitempty"`
	Host                 *string                       `json:"host,omitempty"`
	KeyID                *string                       `json:"key_id,omitempty"`
	NotificationTemplate *string                       `json:"notification_template,omitempty"`
	P12Cert              *string                       `json:"p12_cert,omitempty"`
	TeamID               *string                       `json:"team_id,omitempty"`
}
