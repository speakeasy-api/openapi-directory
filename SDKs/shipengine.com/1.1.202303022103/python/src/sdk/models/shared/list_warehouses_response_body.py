"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import address as shared_address
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListWarehousesResponseBodyWarehouse:
    r"""A warehouse"""
    
    created_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Timestamp that indicates when the warehouse was created"""  
    is_default: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_default'), 'exclude': lambda f: f is None }})
    r"""Designates which single warehouse is the default on the account"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the warehouse"""  
    origin_address: Optional[shared_address.Address] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('origin_address'), 'exclude': lambda f: f is None }})
    r"""The origin address of the warehouse"""  
    return_address: Optional[shared_address.Address] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('return_address'), 'exclude': lambda f: f is None }})
    r"""The return address associated with the warehouse"""  
    warehouse_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('warehouse_id'), 'exclude': lambda f: f is None }})
    r"""A string that uniquely identifies the warehouse"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListWarehousesResponseBody:
    r"""A warehouse list response body"""
    
    warehouses: list[ListWarehousesResponseBodyWarehouse] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('warehouses') }})
    r"""The array of warehouses returned by the API call"""  
    