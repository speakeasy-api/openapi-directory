// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NotificationMessageTypeEnum string

const (
	NotificationMessageTypeEnumNewInsight        NotificationMessageTypeEnum = "NEW_INSIGHT"
	NotificationMessageTypeEnumClosedInsight     NotificationMessageTypeEnum = "CLOSED_INSIGHT"
	NotificationMessageTypeEnumNewAssociation    NotificationMessageTypeEnum = "NEW_ASSOCIATION"
	NotificationMessageTypeEnumSeverityUpgraded  NotificationMessageTypeEnum = "SEVERITY_UPGRADED"
	NotificationMessageTypeEnumNewRecommendation NotificationMessageTypeEnum = "NEW_RECOMMENDATION"
)

func (e *NotificationMessageTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NEW_INSIGHT":
		fallthrough
	case "CLOSED_INSIGHT":
		fallthrough
	case "NEW_ASSOCIATION":
		fallthrough
	case "SEVERITY_UPGRADED":
		fallthrough
	case "NEW_RECOMMENDATION":
		*e = NotificationMessageTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for NotificationMessageTypeEnum: %s", s)
	}
}
