// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// JobComparatorEnum - The operator to use in a condition. Depending on the type of condition, possible values are:
type JobComparatorEnum string

const (
	JobComparatorEnumEq         JobComparatorEnum = "EQ"
	JobComparatorEnumGt         JobComparatorEnum = "GT"
	JobComparatorEnumGte        JobComparatorEnum = "GTE"
	JobComparatorEnumLt         JobComparatorEnum = "LT"
	JobComparatorEnumLte        JobComparatorEnum = "LTE"
	JobComparatorEnumNe         JobComparatorEnum = "NE"
	JobComparatorEnumContains   JobComparatorEnum = "CONTAINS"
	JobComparatorEnumStartsWith JobComparatorEnum = "STARTS_WITH"
)

func (e JobComparatorEnum) ToPointer() *JobComparatorEnum {
	return &e
}

func (e *JobComparatorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EQ":
		fallthrough
	case "GT":
		fallthrough
	case "GTE":
		fallthrough
	case "LT":
		fallthrough
	case "LTE":
		fallthrough
	case "NE":
		fallthrough
	case "CONTAINS":
		fallthrough
	case "STARTS_WITH":
		*e = JobComparatorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for JobComparatorEnum: %v", v)
	}
}
