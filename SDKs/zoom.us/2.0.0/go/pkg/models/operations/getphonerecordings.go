// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

type GetPhoneRecordingsSecurity struct {
	OAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type GetPhoneRecordingsRequest struct {
	// Start date and time in **yyyy-mm-dd** format or **yyyy-MM-dd’T’HH:mm:ss’Z’** format. The date range defined by the from and to parameters should only be one month as the report includes only one month worth of data at once.
	//
	From *string `queryParam:"style=form,explode=true,name=from"`
	// The current page number of returned records.
	NextPageToken *string `queryParam:"style=form,explode=true,name=next_page_token"`
	// The owner type. The allowed values are null, `user`, or `callQueue`. The default is null. If null, returns all owner types.
	//
	OwnerType *string `queryParam:"style=form,explode=true,name=owner_type"`
	// The number of records returned within a single API call. The default is **30**, and the maximum is **100**.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// The recording type. The allowed values are null, `OnDemand`, or `Automatic`. The default is null. If null, returns all recording types.
	//
	RecordingType *string `queryParam:"style=form,explode=true,name=recording_type"`
	// The site ID. The default is `All sites`.
	SiteID *string `queryParam:"style=form,explode=true,name=site_id"`
	// End date and time in **yyyy-mm-dd** format or **yyyy-MM-dd’T’HH:mm:ss’Z’** format, the same formats supported by the `from` parameter.
	//
	//
	To *string `queryParam:"style=form,explode=true,name=to"`
}

// GetPhoneRecordings200ApplicationXMLRecordingsCalleeNumberTypeEnum - Specifies the callee' number type.<br>
// `1` - internal<br>
// `2` - external<br>
type GetPhoneRecordings200ApplicationXMLRecordingsCalleeNumberTypeEnum string

const (
	GetPhoneRecordings200ApplicationXMLRecordingsCalleeNumberTypeEnumOne GetPhoneRecordings200ApplicationXMLRecordingsCalleeNumberTypeEnum = "1"
	GetPhoneRecordings200ApplicationXMLRecordingsCalleeNumberTypeEnumTwo GetPhoneRecordings200ApplicationXMLRecordingsCalleeNumberTypeEnum = "2"
)

func (e *GetPhoneRecordings200ApplicationXMLRecordingsCalleeNumberTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "2":
		*e = GetPhoneRecordings200ApplicationXMLRecordingsCalleeNumberTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPhoneRecordings200ApplicationXMLRecordingsCalleeNumberTypeEnum: %s", s)
	}
}

// GetPhoneRecordings200ApplicationXMLRecordingsCallerNumberTypeEnum - Specifies the type of the caller number.<br>
//
// `1` - internal<br>
// `2` - external<br>
type GetPhoneRecordings200ApplicationXMLRecordingsCallerNumberTypeEnum string

const (
	GetPhoneRecordings200ApplicationXMLRecordingsCallerNumberTypeEnumOne GetPhoneRecordings200ApplicationXMLRecordingsCallerNumberTypeEnum = "1"
	GetPhoneRecordings200ApplicationXMLRecordingsCallerNumberTypeEnumTwo GetPhoneRecordings200ApplicationXMLRecordingsCallerNumberTypeEnum = "2"
)

func (e *GetPhoneRecordings200ApplicationXMLRecordingsCallerNumberTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "2":
		*e = GetPhoneRecordings200ApplicationXMLRecordingsCallerNumberTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPhoneRecordings200ApplicationXMLRecordingsCallerNumberTypeEnum: %s", s)
	}
}

// GetPhoneRecordings200ApplicationXMLRecordingsDirectionEnum - The direction of the call. Values: `inbound` or `outbound`.
type GetPhoneRecordings200ApplicationXMLRecordingsDirectionEnum string

const (
	GetPhoneRecordings200ApplicationXMLRecordingsDirectionEnumInbound  GetPhoneRecordings200ApplicationXMLRecordingsDirectionEnum = "inbound"
	GetPhoneRecordings200ApplicationXMLRecordingsDirectionEnumOutbound GetPhoneRecordings200ApplicationXMLRecordingsDirectionEnum = "outbound"
)

func (e *GetPhoneRecordings200ApplicationXMLRecordingsDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "inbound":
		fallthrough
	case "outbound":
		*e = GetPhoneRecordings200ApplicationXMLRecordingsDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPhoneRecordings200ApplicationXMLRecordingsDirectionEnum: %s", s)
	}
}

// GetPhoneRecordings200ApplicationXMLRecordingsOwnerTypeEnum - The owner type: `user` or `call queue`.
type GetPhoneRecordings200ApplicationXMLRecordingsOwnerTypeEnum string

const (
	GetPhoneRecordings200ApplicationXMLRecordingsOwnerTypeEnumUser      GetPhoneRecordings200ApplicationXMLRecordingsOwnerTypeEnum = "user"
	GetPhoneRecordings200ApplicationXMLRecordingsOwnerTypeEnumCallQueue GetPhoneRecordings200ApplicationXMLRecordingsOwnerTypeEnum = "call queue"
)

func (e *GetPhoneRecordings200ApplicationXMLRecordingsOwnerTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "user":
		fallthrough
	case "call queue":
		*e = GetPhoneRecordings200ApplicationXMLRecordingsOwnerTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPhoneRecordings200ApplicationXMLRecordingsOwnerTypeEnum: %s", s)
	}
}

// GetPhoneRecordings200ApplicationXMLRecordingsOwner - The owner of the recording.
type GetPhoneRecordings200ApplicationXMLRecordingsOwner struct {
	// The extension number associated to the call number.
	ExtensionNumber *string
	// The owner's ID.
	ID *string
	// Name of the owner.
	Name *string
	// The owner type: `user` or `call queue`.
	Type *GetPhoneRecordings200ApplicationXMLRecordingsOwnerTypeEnum
}

type GetPhoneRecordings200ApplicationXMLRecordingsSite struct {
	// The site ID.
	ID *string
	// The site name.
	Name *string
}

type GetPhoneRecordings200ApplicationXMLRecordings struct {
	// The contact name of the callee.
	CalleeName *string
	// The phone number of the callee.
	CalleeNumber *string
	// Specifies the callee' number type.<br>
	// `1` - internal<br>
	// `2` - external<br>
	CalleeNumberType *GetPhoneRecordings200ApplicationXMLRecordingsCalleeNumberTypeEnum
	// The contact name of the caller.
	CallerName *string
	// The phone number associated to the caller.
	CallerNumber *string
	// Specifies the type of the caller number.<br>
	//
	// `1` - internal<br>
	// `2` - external<br>
	CallerNumberType *GetPhoneRecordings200ApplicationXMLRecordingsCallerNumberTypeEnum
	// The date and time when the recording was received.
	DateTime *time.Time
	// The direction of the call. Values: `inbound` or `outbound`.
	Direction *GetPhoneRecordings200ApplicationXMLRecordingsDirectionEnum
	// The download URL for the recording.
	DownloadURL *string
	// The duration of the recording.
	Duration *int64
	// Unique identifier of the recording.
	ID *string
	// The owner of the recording.
	Owner *GetPhoneRecordings200ApplicationXMLRecordingsOwner
	// The recording type. The allowed values are `OnDemand` or `Automatic`.
	RecordingType *string
	Site          *GetPhoneRecordings200ApplicationXMLRecordingsSite
}

// GetPhoneRecordings200ApplicationXML - **HTTP Status Code** `200`<br>
// OK.
type GetPhoneRecordings200ApplicationXML struct {
	// The current page number of returned records.
	NextPageToken *string
	// The number of records returned within a single API call. The default is **30**, and the maximum is **100**.
	PageSize   *int64
	Recordings []GetPhoneRecordings200ApplicationXMLRecordings
	// Total number of records returned.
	TotalRecords *int64
}

// GetPhoneRecordings200ApplicationJSONRecordingsCalleeNumberTypeEnum - Specifies the callee' number type.<br>
// `1` - internal<br>
// `2` - external<br>
type GetPhoneRecordings200ApplicationJSONRecordingsCalleeNumberTypeEnum string

const (
	GetPhoneRecordings200ApplicationJSONRecordingsCalleeNumberTypeEnumOne GetPhoneRecordings200ApplicationJSONRecordingsCalleeNumberTypeEnum = "1"
	GetPhoneRecordings200ApplicationJSONRecordingsCalleeNumberTypeEnumTwo GetPhoneRecordings200ApplicationJSONRecordingsCalleeNumberTypeEnum = "2"
)

func (e *GetPhoneRecordings200ApplicationJSONRecordingsCalleeNumberTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "2":
		*e = GetPhoneRecordings200ApplicationJSONRecordingsCalleeNumberTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPhoneRecordings200ApplicationJSONRecordingsCalleeNumberTypeEnum: %s", s)
	}
}

// GetPhoneRecordings200ApplicationJSONRecordingsCallerNumberTypeEnum - Specifies the type of the caller number.<br>
//
// `1` - internal<br>
// `2` - external<br>
type GetPhoneRecordings200ApplicationJSONRecordingsCallerNumberTypeEnum string

const (
	GetPhoneRecordings200ApplicationJSONRecordingsCallerNumberTypeEnumOne GetPhoneRecordings200ApplicationJSONRecordingsCallerNumberTypeEnum = "1"
	GetPhoneRecordings200ApplicationJSONRecordingsCallerNumberTypeEnumTwo GetPhoneRecordings200ApplicationJSONRecordingsCallerNumberTypeEnum = "2"
)

func (e *GetPhoneRecordings200ApplicationJSONRecordingsCallerNumberTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "2":
		*e = GetPhoneRecordings200ApplicationJSONRecordingsCallerNumberTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPhoneRecordings200ApplicationJSONRecordingsCallerNumberTypeEnum: %s", s)
	}
}

// GetPhoneRecordings200ApplicationJSONRecordingsDirectionEnum - The direction of the call. Values: `inbound` or `outbound`.
type GetPhoneRecordings200ApplicationJSONRecordingsDirectionEnum string

const (
	GetPhoneRecordings200ApplicationJSONRecordingsDirectionEnumInbound  GetPhoneRecordings200ApplicationJSONRecordingsDirectionEnum = "inbound"
	GetPhoneRecordings200ApplicationJSONRecordingsDirectionEnumOutbound GetPhoneRecordings200ApplicationJSONRecordingsDirectionEnum = "outbound"
)

func (e *GetPhoneRecordings200ApplicationJSONRecordingsDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "inbound":
		fallthrough
	case "outbound":
		*e = GetPhoneRecordings200ApplicationJSONRecordingsDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPhoneRecordings200ApplicationJSONRecordingsDirectionEnum: %s", s)
	}
}

// GetPhoneRecordings200ApplicationJSONRecordingsOwnerTypeEnum - The owner type: `user` or `call queue`.
type GetPhoneRecordings200ApplicationJSONRecordingsOwnerTypeEnum string

const (
	GetPhoneRecordings200ApplicationJSONRecordingsOwnerTypeEnumUser      GetPhoneRecordings200ApplicationJSONRecordingsOwnerTypeEnum = "user"
	GetPhoneRecordings200ApplicationJSONRecordingsOwnerTypeEnumCallQueue GetPhoneRecordings200ApplicationJSONRecordingsOwnerTypeEnum = "call queue"
)

func (e *GetPhoneRecordings200ApplicationJSONRecordingsOwnerTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "user":
		fallthrough
	case "call queue":
		*e = GetPhoneRecordings200ApplicationJSONRecordingsOwnerTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPhoneRecordings200ApplicationJSONRecordingsOwnerTypeEnum: %s", s)
	}
}

// GetPhoneRecordings200ApplicationJSONRecordingsOwner - The owner of the recording.
type GetPhoneRecordings200ApplicationJSONRecordingsOwner struct {
	// The extension number associated to the call number.
	ExtensionNumber *string `json:"extension_number,omitempty"`
	// The owner's ID.
	ID *string `json:"id,omitempty"`
	// Name of the owner.
	Name *string `json:"name,omitempty"`
	// The owner type: `user` or `call queue`.
	Type *GetPhoneRecordings200ApplicationJSONRecordingsOwnerTypeEnum `json:"type,omitempty"`
}

type GetPhoneRecordings200ApplicationJSONRecordingsSite struct {
	// The site ID.
	ID *string `json:"id,omitempty"`
	// The site name.
	Name *string `json:"name,omitempty"`
}

type GetPhoneRecordings200ApplicationJSONRecordings struct {
	// The contact name of the callee.
	CalleeName *string `json:"callee_name,omitempty"`
	// The phone number of the callee.
	CalleeNumber *string `json:"callee_number,omitempty"`
	// Specifies the callee' number type.<br>
	// `1` - internal<br>
	// `2` - external<br>
	CalleeNumberType *GetPhoneRecordings200ApplicationJSONRecordingsCalleeNumberTypeEnum `json:"callee_number_type,omitempty"`
	// The contact name of the caller.
	CallerName *string `json:"caller_name,omitempty"`
	// The phone number associated to the caller.
	CallerNumber *string `json:"caller_number,omitempty"`
	// Specifies the type of the caller number.<br>
	//
	// `1` - internal<br>
	// `2` - external<br>
	CallerNumberType *GetPhoneRecordings200ApplicationJSONRecordingsCallerNumberTypeEnum `json:"caller_number_type,omitempty"`
	// The date and time when the recording was received.
	DateTime *time.Time `json:"date_time,omitempty"`
	// The direction of the call. Values: `inbound` or `outbound`.
	Direction *GetPhoneRecordings200ApplicationJSONRecordingsDirectionEnum `json:"direction,omitempty"`
	// The download URL for the recording.
	DownloadURL *string `json:"download_url,omitempty"`
	// The duration of the recording.
	Duration *int64 `json:"duration,omitempty"`
	// Unique identifier of the recording.
	ID *string `json:"id,omitempty"`
	// The owner of the recording.
	Owner *GetPhoneRecordings200ApplicationJSONRecordingsOwner `json:"owner,omitempty"`
	// The recording type. The allowed values are `OnDemand` or `Automatic`.
	RecordingType *string                                             `json:"recording_type,omitempty"`
	Site          *GetPhoneRecordings200ApplicationJSONRecordingsSite `json:"site,omitempty"`
}

// GetPhoneRecordings200ApplicationJSON - **HTTP Status Code** `200`<br>
// OK.
type GetPhoneRecordings200ApplicationJSON struct {
	// The current page number of returned records.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// The number of records returned within a single API call. The default is **30**, and the maximum is **100**.
	PageSize   *int64                                           `json:"page_size,omitempty"`
	Recordings []GetPhoneRecordings200ApplicationJSONRecordings `json:"recordings,omitempty"`
	// Total number of records returned.
	TotalRecords *int64 `json:"total_records,omitempty"`
}

type GetPhoneRecordingsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status Code** `200`<br>
	// OK.
	GetPhoneRecordings200ApplicationJSONObject *GetPhoneRecordings200ApplicationJSON
	// **HTTP Response Code:** `400`<br>
	// The template name you entered already exists. Provide a new name for the template and try again.<br>
	//
	// **Error Code:** `300`<br>
	// Validation failed. You provided an incorrect value for the template type. Provide a valid value and try again.
	GetPhoneRecordings400ApplicationJSONAny interface{}
}
