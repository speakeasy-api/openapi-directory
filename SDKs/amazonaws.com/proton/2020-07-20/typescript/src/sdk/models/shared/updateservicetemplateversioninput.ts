/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CompatibleEnvironmentTemplateInput } from "./compatibleenvironmenttemplateinput";
import { ServiceTemplateSupportedComponentSourceTypeEnum } from "./servicetemplatesupportedcomponentsourcetypeenum";
import { TemplateVersionStatusEnum } from "./templateversionstatusenum";
import { Expose, Type } from "class-transformer";

export class UpdateServiceTemplateVersionInput extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: CompatibleEnvironmentTemplateInput })
  @Expose({ name: "compatibleEnvironmentTemplates" })
  @Type(() => CompatibleEnvironmentTemplateInput)
  compatibleEnvironmentTemplates?: CompatibleEnvironmentTemplateInput[];

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "majorVersion" })
  majorVersion: string;

  @SpeakeasyMetadata()
  @Expose({ name: "minorVersion" })
  minorVersion: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: TemplateVersionStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "supportedComponentSources" })
  supportedComponentSources?: ServiceTemplateSupportedComponentSourceTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "templateName" })
  templateName: string;
}
