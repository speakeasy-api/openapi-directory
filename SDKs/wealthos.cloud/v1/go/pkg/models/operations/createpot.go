// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type CreatePotSecurity struct {
	APISecretKey shared.SchemeAPISecretKey `security:"scheme,type=apiKey,subtype=header"`
}

type CreatePotHeaders struct {
	// ApiSecretKey
	XAPIKey string `header:"style=simple,explode=false,name=x-api-key"`
}

// CreatePotRequestBodyPotCurrencyEnum - If not populated, will be defaulted to tenancy currency
type CreatePotRequestBodyPotCurrencyEnum string

const (
	CreatePotRequestBodyPotCurrencyEnumGbp CreatePotRequestBodyPotCurrencyEnum = "GBP"
	CreatePotRequestBodyPotCurrencyEnumCad CreatePotRequestBodyPotCurrencyEnum = "CAD"
	CreatePotRequestBodyPotCurrencyEnumUsd CreatePotRequestBodyPotCurrencyEnum = "USD"
)

func (e *CreatePotRequestBodyPotCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GBP":
		fallthrough
	case "CAD":
		fallthrough
	case "USD":
		*e = CreatePotRequestBodyPotCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreatePotRequestBodyPotCurrencyEnum: %s", s)
	}
}

type CreatePotRequestBodyStatusEnum string

const (
	CreatePotRequestBodyStatusEnumActive   CreatePotRequestBodyStatusEnum = "active"
	CreatePotRequestBodyStatusEnumInactive CreatePotRequestBodyStatusEnum = "inactive"
)

func (e *CreatePotRequestBodyStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		*e = CreatePotRequestBodyStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreatePotRequestBodyStatusEnum: %s", s)
	}
}

type CreatePotRequestBodyInput struct {
	CustodianAccountReference *string  `json:"custodian_account_reference,omitempty"`
	CustodianClientRef        *string  `json:"custodian_client_ref,omitempty"`
	CustodianID               *string  `json:"custodian_id,omitempty"`
	FinancialProductID        string   `json:"financial_product_id"`
	InvestorID                []string `json:"investor_id"`
	PortfolioTemplateID       *string  `json:"portfolio_template_id,omitempty"`
	// If not populated, will be defaulted to tenancy currency
	PotCurrency        *CreatePotRequestBodyPotCurrencyEnum `json:"pot_currency,omitempty"`
	PotName            string                               `json:"pot_name"`
	RegulatorAdvisorID *string                              `json:"regulator_advisor_id,omitempty"`
	// Unique request id to ensure idempotency. (ex: UUID)
	RequestID string                         `json:"request_id"`
	Status    CreatePotRequestBodyStatusEnum `json:"status"`
}

type CreatePotRequest struct {
	Headers  CreatePotHeaders
	Request  *CreatePotRequestBodyInput `request:"mediaType=application/json"`
	Security CreatePotSecurity
}

// CreatePot500ApplicationJSON - System error. Retry later. If the error persist, contact WOS support
type CreatePot500ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreatePot429ApplicationJSON - You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
type CreatePot429ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreatePot409ApplicationJSONStatusEnum - Current status of the original request
type CreatePot409ApplicationJSONStatusEnum string

const (
	CreatePot409ApplicationJSONStatusEnumProcessing CreatePot409ApplicationJSONStatusEnum = "PROCESSING"
	CreatePot409ApplicationJSONStatusEnumComplete   CreatePot409ApplicationJSONStatusEnum = "COMPLETE"
)

func (e *CreatePot409ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PROCESSING":
		fallthrough
	case "COMPLETE":
		*e = CreatePot409ApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreatePot409ApplicationJSONStatusEnum: %s", s)
	}
}

// CreatePot409ApplicationJSON - Duplicate request
type CreatePot409ApplicationJSON struct {
	// Human readable description of the error
	Message string `json:"message"`
	// Stringified original response body if status is `COMPLETE`
	Response map[string]interface{} `json:"response,omitempty"`
	// Current status of the original request
	Status CreatePot409ApplicationJSONStatusEnum `json:"status"`
}

// CreatePot403ApplicationJSON - Your authentication information is missing or invalid. Please check the keys are properly set and its correct
type CreatePot403ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreatePot401ApplicationJSON - You do not have permissions to access this resource.
type CreatePot401ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreatePot400ApplicationJSON - Request is not complete and may have one or more validations errors. Please check the error message and the code
type CreatePot400ApplicationJSON struct {
	// Optional error code
	ErrorCode *string `json:"error_code,omitempty"`
	// Human readable description of the error
	Message string `json:"message"`
}

// CreatePot201ApplicationJSONPotCurrencyEnum - If not populated, will be defaulted to tenancy currency
type CreatePot201ApplicationJSONPotCurrencyEnum string

const (
	CreatePot201ApplicationJSONPotCurrencyEnumGbp CreatePot201ApplicationJSONPotCurrencyEnum = "GBP"
	CreatePot201ApplicationJSONPotCurrencyEnumCad CreatePot201ApplicationJSONPotCurrencyEnum = "CAD"
	CreatePot201ApplicationJSONPotCurrencyEnumUsd CreatePot201ApplicationJSONPotCurrencyEnum = "USD"
)

func (e *CreatePot201ApplicationJSONPotCurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GBP":
		fallthrough
	case "CAD":
		fallthrough
	case "USD":
		*e = CreatePot201ApplicationJSONPotCurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreatePot201ApplicationJSONPotCurrencyEnum: %s", s)
	}
}

type CreatePot201ApplicationJSONStatusEnum string

const (
	CreatePot201ApplicationJSONStatusEnumActive   CreatePot201ApplicationJSONStatusEnum = "active"
	CreatePot201ApplicationJSONStatusEnumInactive CreatePot201ApplicationJSONStatusEnum = "inactive"
)

func (e *CreatePot201ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		*e = CreatePot201ApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreatePot201ApplicationJSONStatusEnum: %s", s)
	}
}

// CreatePot201ApplicationJSON - success
type CreatePot201ApplicationJSON struct {
	AccountID                 *string    `json:"account_id,omitempty"`
	CreatedAt                 *time.Time `json:"created_at,omitempty"`
	CustodianAccountReference *string    `json:"custodian_account_reference,omitempty"`
	CustodianClientRef        *string    `json:"custodian_client_ref,omitempty"`
	CustodianID               *string    `json:"custodian_id,omitempty"`
	FinancialProductID        string     `json:"financial_product_id"`
	InvestorID                []string   `json:"investor_id"`
	PortfolioTemplateID       *string    `json:"portfolio_template_id,omitempty"`
	// If not populated, will be defaulted to tenancy currency
	PotCurrency *CreatePot201ApplicationJSONPotCurrencyEnum `json:"pot_currency,omitempty"`
	// system generated id
	PotID              *string                               `json:"pot_id,omitempty"`
	PotName            string                                `json:"pot_name"`
	ReferenceVersion   *int64                                `json:"reference_version,omitempty"`
	RegulatorAdvisorID *string                               `json:"regulator_advisor_id,omitempty"`
	Status             CreatePot201ApplicationJSONStatusEnum `json:"status"`
	UpdatedAt          *time.Time                            `json:"updated_at,omitempty"`
}

type CreatePotResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// success
	CreatePot201ApplicationJSONObject *CreatePot201ApplicationJSON
	// Request is not complete and may have one or more validations errors. Please check the error message and the code
	CreatePot400ApplicationJSONObject *CreatePot400ApplicationJSON
	// You do not have permissions to access this resource.
	CreatePot401ApplicationJSONObject *CreatePot401ApplicationJSON
	// Your authentication information is missing or invalid. Please check the keys are properly set and its correct
	CreatePot403ApplicationJSONObject *CreatePot403ApplicationJSON
	// Duplicate request
	CreatePot409ApplicationJSONObject *CreatePot409ApplicationJSON
	// You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
	CreatePot429ApplicationJSONObject *CreatePot429ApplicationJSON
	// System error. Retry later. If the error persist, contact WOS support
	CreatePot500ApplicationJSONObject *CreatePot500ApplicationJSON
}
