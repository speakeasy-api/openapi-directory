"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class AnalyticsCrashGroupCountsSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    

@dataclasses.dataclass
class AnalyticsCrashGroupCountsRequest:
    
    app_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_name', 'style': 'simple', 'explode': False }})
    r"""The name of the application"""  
    crash_group_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'crash_group_id', 'style': 'simple', 'explode': False }})
    r"""The id of the crash group."""  
    owner_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner_name', 'style': 'simple', 'explode': False }})
    r"""The name of the owner"""  
    start: datetime = dataclasses.field(metadata={'query_param': { 'field_name': 'start', 'style': 'form', 'explode': True }})
    r"""Start date time in data in ISO 8601 date time format."""  
    version: str = dataclasses.field(metadata={'query_param': { 'field_name': 'version', 'style': 'form', 'explode': True }})  
    end: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'end', 'style': 'form', 'explode': True }})
    r"""Last date time in data in ISO 8601 date time format."""  
    
class AnalyticsCrashGroupCountsDefaultApplicationJSONErrorCodeEnum(str, Enum):
    r"""The status code return by the API. It can be 400 or 403 or 500."""
    FOUR_HUNDRED = '400'
    FOUR_HUNDRED_AND_THREE = '403'
    FIVE_HUNDRED = '500'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnalyticsCrashGroupCountsDefaultApplicationJSONError:
    
    code: Optional[AnalyticsCrashGroupCountsDefaultApplicationJSONErrorCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""The status code return by the API. It can be 400 or 403 or 500."""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""The reason for the request failed."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnalyticsCrashGroupCountsDefaultApplicationJSON:
    r"""Error"""
    
    error: Optional[AnalyticsCrashGroupCountsDefaultApplicationJSONError] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnalyticsCrashGroupCounts200ApplicationJSONCrashes:
    
    count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count'), 'exclude': lambda f: f is None }})
    r"""Count of the object."""  
    datetime_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('datetime'), 'exclude': lambda f: f is None }})
    r"""The ISO 8601 datetime."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnalyticsCrashGroupCounts200ApplicationJSON:
    r"""Count of crashes by day in the time range and total crashes over the time range."""
    
    count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count'), 'exclude': lambda f: f is None }})
    r"""Total crash count."""  
    crashes: Optional[list[AnalyticsCrashGroupCounts200ApplicationJSONCrashes]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('crashes'), 'exclude': lambda f: f is None }})
    r"""The total crash count for day."""  
    

@dataclasses.dataclass
class AnalyticsCrashGroupCountsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    analytics_crash_group_counts_200_application_json_object: Optional[AnalyticsCrashGroupCounts200ApplicationJSON] = dataclasses.field(default=None)
    r"""Count of crashes by day in the time range and total crashes over the time range."""  
    analytics_crash_group_counts_default_application_json_object: Optional[AnalyticsCrashGroupCountsDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error code with reason."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    