"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import inferenceexperimentstopdesiredstate_enum as shared_inferenceexperimentstopdesiredstate_enum
from ..shared import modelvariantaction_enum as shared_modelvariantaction_enum
from ..shared import modelvariantconfig as shared_modelvariantconfig
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StopInferenceExperimentRequest:
    
    model_variant_actions: dict[str, shared_modelvariantaction_enum.ModelVariantActionEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelVariantActions') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    desired_model_variants: Optional[list[shared_modelvariantconfig.ModelVariantConfig]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DesiredModelVariants'), 'exclude': lambda f: f is None }})  
    desired_state: Optional[shared_inferenceexperimentstopdesiredstate_enum.InferenceExperimentStopDesiredStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DesiredState'), 'exclude': lambda f: f is None }})  
    reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Reason'), 'exclude': lambda f: f is None }})  
    