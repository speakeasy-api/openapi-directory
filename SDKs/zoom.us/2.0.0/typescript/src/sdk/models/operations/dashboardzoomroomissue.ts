/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class DashboardZoomRoomIssueSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class DashboardZoomRoomIssueRequest extends SpeakeasyBase {
  /**
   * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=from;dateTimeFormat=YYYY-MM-DD",
  })
  from: Date;

  /**
   * End date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=to;dateTimeFormat=YYYY-MM-DD",
  })
  to: Date;
}

export class DashboardZoomRoomIssue200ApplicationXMLIssues extends SpeakeasyBase {
  /**
   * Issue Name.<br> The value of the this field could be one of the following:<br>
   *
   * @remarks
   * * `Room Controller disconnected`<br>
   * * `Room Controller connected`
   * * `Selected camera has disconnected`
   * * `Selected camera is reconnected`
   * * `Selected microphone has disconnected`
   * * `Selected microphone is reconnected`
   * * `Selected speaker has disconnected`
   * * `Selected speaker is reconnected`
   * * `Zoom room is offline`
   * * `Zoom room is online`
   * * `High CPU usage is detected`
   * * `Low bandwidth network is detected`
   * * `{name} battery is low`
   * * `{name} battery is normal`
   * * `{name} disconnected`
   * * `{name} connected`
   * * `{name} is not charging`
   *
   * Possible values for {name}: <br>
   * * Zoom Rooms Computer
   * * Controller
   * * Scheduling Display
   */
  @SpeakeasyMetadata()
  issueName?: string;

  /**
   * Zoom Room Count of Issue
   */
  @SpeakeasyMetadata()
  zoomRoomsCount?: number;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * Zoom Room Issue details returned
 */
export class DashboardZoomRoomIssue200ApplicationXML extends SpeakeasyBase {
  /**
   * Start date for this report
   */
  @SpeakeasyMetadata()
  from?: Date;

  @SpeakeasyMetadata({
    elemType: DashboardZoomRoomIssue200ApplicationXMLIssues,
  })
  issues?: DashboardZoomRoomIssue200ApplicationXMLIssues[];

  /**
   * End date for this report
   */
  @SpeakeasyMetadata()
  to?: Date;

  /**
   * The number of all records available across pages
   */
  @SpeakeasyMetadata()
  totalRecords?: number;
}

export class DashboardZoomRoomIssue200ApplicationJSONIssues extends SpeakeasyBase {
  /**
   * Issue Name.<br> The value of the this field could be one of the following:<br>
   *
   * @remarks
   * * `Room Controller disconnected`<br>
   * * `Room Controller connected`
   * * `Selected camera has disconnected`
   * * `Selected camera is reconnected`
   * * `Selected microphone has disconnected`
   * * `Selected microphone is reconnected`
   * * `Selected speaker has disconnected`
   * * `Selected speaker is reconnected`
   * * `Zoom room is offline`
   * * `Zoom room is online`
   * * `High CPU usage is detected`
   * * `Low bandwidth network is detected`
   * * `{name} battery is low`
   * * `{name} battery is normal`
   * * `{name} disconnected`
   * * `{name} connected`
   * * `{name} is not charging`
   *
   * Possible values for {name}: <br>
   * * Zoom Rooms Computer
   * * Controller
   * * Scheduling Display
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issue_name" })
  issueName?: string;

  /**
   * Zoom Room Count of Issue
   */
  @SpeakeasyMetadata()
  @Expose({ name: "zoom_rooms_count" })
  zoomRoomsCount?: number;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * Zoom Room Issue details returned
 */
export class DashboardZoomRoomIssue200ApplicationJSON extends SpeakeasyBase {
  /**
   * Start date for this report
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  from?: Date;

  @SpeakeasyMetadata({
    elemType: DashboardZoomRoomIssue200ApplicationJSONIssues,
  })
  @Expose({ name: "issues" })
  @Type(() => DashboardZoomRoomIssue200ApplicationJSONIssues)
  issues?: DashboardZoomRoomIssue200ApplicationJSONIssues[];

  /**
   * End date for this report
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  to?: Date;

  /**
   * The number of all records available across pages
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;
}

export class DashboardZoomRoomIssueResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * Zoom Room Issue details returned
   */
  @SpeakeasyMetadata()
  dashboardZoomRoomIssue200ApplicationJSONObject?: DashboardZoomRoomIssue200ApplicationJSON;
}
