/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataPreProcessingConfiguration } from "./datapreprocessingconfiguration";
import { DatasetSchema } from "./datasetschema";
import { LabelsInputConfiguration } from "./labelsinputconfiguration";
import { Tag } from "./tag";
import { Expose, Transform, Type } from "class-transformer";

export class CreateModelRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ClientToken" })
  clientToken: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DataPreProcessingConfiguration" })
  @Type(() => DataPreProcessingConfiguration)
  dataPreProcessingConfiguration?: DataPreProcessingConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "DatasetName" })
  datasetName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DatasetSchema" })
  @Type(() => DatasetSchema)
  datasetSchema?: DatasetSchema;

  @SpeakeasyMetadata()
  @Expose({ name: "EvaluationDataEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  evaluationDataEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "EvaluationDataStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  evaluationDataStartTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LabelsInputConfiguration" })
  @Type(() => LabelsInputConfiguration)
  labelsInputConfiguration?: LabelsInputConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelName" })
  modelName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OffCondition" })
  offCondition?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ServerSideKmsKeyId" })
  serverSideKmsKeyId?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingDataEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  trainingDataEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "TrainingDataStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  trainingDataStartTime?: Date;
}
