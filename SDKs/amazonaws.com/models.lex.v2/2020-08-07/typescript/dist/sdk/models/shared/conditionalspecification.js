"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConditionalSpecification = void 0;
var utils_1 = require("../../../internal/utils");
var conditionalbranch_1 = require("./conditionalbranch");
var defaultconditionalbranch_1 = require("./defaultconditionalbranch");
var class_transformer_1 = require("class-transformer");
/**
 * Provides a list of conditional branches. Branches are evaluated in the order that they are entered in the list. The first branch with a condition that evaluates to true is executed. The last branch in the list is the default branch. The default branch should not have any condition expression. The default branch is executed if no other branch has a matching condition.
 */
var ConditionalSpecification = /** @class */ (function (_super) {
    __extends(ConditionalSpecification, _super);
    function ConditionalSpecification() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "active" }),
        __metadata("design:type", Boolean)
    ], ConditionalSpecification.prototype, "active", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: conditionalbranch_1.ConditionalBranch }),
        (0, class_transformer_1.Expose)({ name: "conditionalBranches" }),
        (0, class_transformer_1.Type)(function () { return conditionalbranch_1.ConditionalBranch; }),
        __metadata("design:type", Array)
    ], ConditionalSpecification.prototype, "conditionalBranches", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "defaultBranch" }),
        (0, class_transformer_1.Type)(function () { return defaultconditionalbranch_1.DefaultConditionalBranch; }),
        __metadata("design:type", defaultconditionalbranch_1.DefaultConditionalBranch)
    ], ConditionalSpecification.prototype, "defaultBranch", void 0);
    return ConditionalSpecification;
}(utils_1.SpeakeasyBase));
exports.ConditionalSpecification = ConditionalSpecification;
