/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { DirectoryAPI } from "./directoryapi";
import { InsightsAPI } from "./insightsapi";
import { PlaylistAPI } from "./playlistapi";
import { PodcasterAPI } from "./podcasterapi";
import { SearchAPI } from "./searchapi";
import axios, { AxiosInstance } from "axios";

/**
 * Contains the list of servers available to the SDK
 */
export const ServerList = [
  /**
   * API Production Server
   */
  "https://listen-api.listennotes.com/api/v2",
] as const;

/**
 * The available configuration options for the SDK
 */
export type SDKProps = {
  /**
   * Allows overriding the default axios client used by the SDK
   */
  defaultClient?: AxiosInstance;
  /**
   * Allows overriding the default server URL used by the SDK
   */
  serverURL?: string;
};

/**
 * Simple & no-nonsense podcast search & directory API. Search all podcasts and episodes by people, places, or topics.
 *
 * @remarks
 *
 */
export class SDK {
  /**
   * Endpoints to fetch podcasts data
   */
  public directoryAPI: DirectoryAPI;
  /**
   * Endpoints to get insights of podcasts, e.g., audience demographics
   */
  public insightsAPI: InsightsAPI;
  /**
   * Endpoints to fetch Listen Later playlists data
   */
  public playlistAPI: PlaylistAPI;
  /**
   * Endpoints to improve the podcast database
   */
  public podcasterAPI: PodcasterAPI;
  /**
   * Endpoints to search podcasts
   */
  public searchAPI: SearchAPI;

  public _defaultClient: AxiosInstance;
  public _securityClient: AxiosInstance;
  public _serverURL: string;
  private _language = "typescript";
  private _sdkVersion = "0.0.1";
  private _genVersion = "internal";
  private _globals: any;

  constructor(props?: SDKProps) {
    this._serverURL = props?.serverURL ?? ServerList[0];

    this._defaultClient =
      props?.defaultClient ?? axios.create({ baseURL: this._serverURL });
    this._securityClient = this._defaultClient;

    this.directoryAPI = new DirectoryAPI(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.insightsAPI = new InsightsAPI(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.playlistAPI = new PlaylistAPI(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.podcasterAPI = new PodcasterAPI(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.searchAPI = new SearchAPI(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );
  }
}
