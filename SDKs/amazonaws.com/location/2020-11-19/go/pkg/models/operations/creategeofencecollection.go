// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateGeofenceCollectionHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateGeofenceCollectionRequestBodyPricingPlanEnum - No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.
type CreateGeofenceCollectionRequestBodyPricingPlanEnum string

const (
	CreateGeofenceCollectionRequestBodyPricingPlanEnumRequestBasedUsage     CreateGeofenceCollectionRequestBodyPricingPlanEnum = "RequestBasedUsage"
	CreateGeofenceCollectionRequestBodyPricingPlanEnumMobileAssetTracking   CreateGeofenceCollectionRequestBodyPricingPlanEnum = "MobileAssetTracking"
	CreateGeofenceCollectionRequestBodyPricingPlanEnumMobileAssetManagement CreateGeofenceCollectionRequestBodyPricingPlanEnum = "MobileAssetManagement"
)

func (e *CreateGeofenceCollectionRequestBodyPricingPlanEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RequestBasedUsage":
		fallthrough
	case "MobileAssetTracking":
		fallthrough
	case "MobileAssetManagement":
		*e = CreateGeofenceCollectionRequestBodyPricingPlanEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateGeofenceCollectionRequestBodyPricingPlanEnum: %s", s)
	}
}

type CreateGeofenceCollectionRequestBody struct {
	// <p>A custom name for the geofence collection.</p> <p>Requirements:</p> <ul> <li> <p>Contain only alphanumeric characters (A–Z, a–z, 0–9), hyphens (-), periods (.), and underscores (_). </p> </li> <li> <p>Must be a unique geofence collection name.</p> </li> <li> <p>No spaces allowed. For example, <code>ExampleGeofenceCollection</code>.</p> </li> </ul>
	CollectionName string `json:"CollectionName"`
	// An optional description for the geofence collection.
	Description *string `json:"Description,omitempty"`
	// A key identifier for an <a href="https://docs.aws.amazon.com/kms/latest/developerguide/create-keys.html">Amazon Web Services KMS customer managed key</a>. Enter a key ID, key ARN, alias name, or alias ARN.
	KmsKeyID *string `json:"KmsKeyId,omitempty"`
	// No longer used. If included, the only allowed value is <code>RequestBasedUsage</code>.
	PricingPlan *CreateGeofenceCollectionRequestBodyPricingPlanEnum `json:"PricingPlan,omitempty"`
	// This parameter is no longer used.
	PricingPlanDataSource *string `json:"PricingPlanDataSource,omitempty"`
	// <p>Applies one or more tags to the geofence collection. A tag is a key-value pair helps manage, identify, search, and filter your resources by labelling them.</p> <p>Format: <code>"key" : "value"</code> </p> <p>Restrictions:</p> <ul> <li> <p>Maximum 50 tags per resource</p> </li> <li> <p>Each resource tag must be unique with a maximum of one value.</p> </li> <li> <p>Maximum key length: 128 Unicode characters in UTF-8</p> </li> <li> <p>Maximum value length: 256 Unicode characters in UTF-8</p> </li> <li> <p>Can use alphanumeric characters (A–Z, a–z, 0–9), and the following characters: + - = . _ : / @. </p> </li> <li> <p>Cannot use "aws:" as a prefix for a key.</p> </li> </ul>
	Tags map[string]string `json:"Tags,omitempty"`
}

type CreateGeofenceCollectionRequest struct {
	Headers CreateGeofenceCollectionHeaders
	Request CreateGeofenceCollectionRequestBody `request:"mediaType=application/json"`
}

type CreateGeofenceCollectionResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateGeofenceCollectionResponse *shared.CreateGeofenceCollectionResponse
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
