<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Comment - Successful response
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Comment
{
    /**
     * The author of this Comment.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CommentAuthor $author
     */
	#[\JMS\Serializer\Annotation\SerializedName('author')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentAuthor')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CommentAuthor $author = null;
    
    /**
     * Data about the blog containing this comment.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CommentBlog $blog
     */
	#[\JMS\Serializer\Annotation\SerializedName('blog')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentBlog')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CommentBlog $blog = null;
    
    /**
     * The actual content of the comment. May include HTML markup.
     * 
     * @var ?string $content
     */
	#[\JMS\Serializer\Annotation\SerializedName('content')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $content = null;
    
    /**
     * The identifier for this resource.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Data about the comment this is in reply to.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CommentInReplyTo $inReplyTo
     */
	#[\JMS\Serializer\Annotation\SerializedName('inReplyTo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentInReplyTo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CommentInReplyTo $inReplyTo = null;
    
    /**
     * The kind of this entry. Always blogger#comment.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * Data about the post containing this comment.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CommentPost $post
     */
	#[\JMS\Serializer\Annotation\SerializedName('post')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CommentPost')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CommentPost $post = null;
    
    /**
     * RFC 3339 date-time when this comment was published.
     * 
     * @var ?string $published
     */
	#[\JMS\Serializer\Annotation\SerializedName('published')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $published = null;
    
    /**
     * The API REST URL to fetch this resource from.
     * 
     * @var ?string $selfLink
     */
	#[\JMS\Serializer\Annotation\SerializedName('selfLink')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $selfLink = null;
    
    /**
     * The status of the comment (only populated for admin users).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CommentStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CommentStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CommentStatusEnum $status = null;
    
    /**
     * RFC 3339 date-time when this comment was last updated.
     * 
     * @var ?string $updated
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updated = null;
    
	public function __construct()
	{
		$this->author = null;
		$this->blog = null;
		$this->content = null;
		$this->id = null;
		$this->inReplyTo = null;
		$this->kind = null;
		$this->post = null;
		$this->published = null;
		$this->selfLink = null;
		$this->status = null;
		$this->updated = null;
	}
}
