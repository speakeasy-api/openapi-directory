// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetVodVideosPathParams struct {
	// The ID of the On Demand.
	OndemandID float64 `pathParam:"style=simple,explode=false,name=ondemand_id"`
}

// GetVodVideosDirectionEnum - The sort direction of the results.
type GetVodVideosDirectionEnum string

const (
	GetVodVideosDirectionEnumAsc  GetVodVideosDirectionEnum = "asc"
	GetVodVideosDirectionEnumDesc GetVodVideosDirectionEnum = "desc"
)

func (e *GetVodVideosDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetVodVideosDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetVodVideosDirectionEnum: %s", s)
	}
}

// GetVodVideosFilterEnum - The attribute by which to filter the results.
type GetVodVideosFilterEnum string

const (
	GetVodVideosFilterEnumAll          GetVodVideosFilterEnum = "all"
	GetVodVideosFilterEnumBuy          GetVodVideosFilterEnum = "buy"
	GetVodVideosFilterEnumExpiringSoon GetVodVideosFilterEnum = "expiring_soon"
	GetVodVideosFilterEnumExtra        GetVodVideosFilterEnum = "extra"
	GetVodVideosFilterEnumMain         GetVodVideosFilterEnum = "main"
	GetVodVideosFilterEnumMainViewable GetVodVideosFilterEnum = "main.viewable"
	GetVodVideosFilterEnumRent         GetVodVideosFilterEnum = "rent"
	GetVodVideosFilterEnumTrailer      GetVodVideosFilterEnum = "trailer"
	GetVodVideosFilterEnumUnwatched    GetVodVideosFilterEnum = "unwatched"
	GetVodVideosFilterEnumViewable     GetVodVideosFilterEnum = "viewable"
	GetVodVideosFilterEnumWatched      GetVodVideosFilterEnum = "watched"
)

func (e *GetVodVideosFilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "buy":
		fallthrough
	case "expiring_soon":
		fallthrough
	case "extra":
		fallthrough
	case "main":
		fallthrough
	case "main.viewable":
		fallthrough
	case "rent":
		fallthrough
	case "trailer":
		fallthrough
	case "unwatched":
		fallthrough
	case "viewable":
		fallthrough
	case "watched":
		*e = GetVodVideosFilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetVodVideosFilterEnum: %s", s)
	}
}

// GetVodVideosSortEnum - The way to sort the results.
type GetVodVideosSortEnum string

const (
	GetVodVideosSortEnumDate         GetVodVideosSortEnum = "date"
	GetVodVideosSortEnumDefault      GetVodVideosSortEnum = "default"
	GetVodVideosSortEnumEpisode      GetVodVideosSortEnum = "episode"
	GetVodVideosSortEnumManual       GetVodVideosSortEnum = "manual"
	GetVodVideosSortEnumName         GetVodVideosSortEnum = "name"
	GetVodVideosSortEnumPurchaseTime GetVodVideosSortEnum = "purchase_time"
	GetVodVideosSortEnumReleaseDate  GetVodVideosSortEnum = "release_date"
)

func (e *GetVodVideosSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "date":
		fallthrough
	case "default":
		fallthrough
	case "episode":
		fallthrough
	case "manual":
		fallthrough
	case "name":
		fallthrough
	case "purchase_time":
		fallthrough
	case "release_date":
		*e = GetVodVideosSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetVodVideosSortEnum: %s", s)
	}
}

type GetVodVideosQueryParams struct {
	// The sort direction of the results.
	Direction *GetVodVideosDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The attribute by which to filter the results.
	Filter *GetVodVideosFilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The way to sort the results.
	Sort *GetVodVideosSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetVodVideosRequest struct {
	PathParams  GetVodVideosPathParams
	QueryParams GetVodVideosQueryParams
}

type GetVodVideosResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// * The videos were returned.
	// * The videos were returned.
	Videos []shared.Video
}
