/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AggregationType } from "./aggregationtype";
import { FleetMetricUnitEnum } from "./fleetmetricunitenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeFleetMetricResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "aggregationField" })
  aggregationField?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "aggregationType" })
  @Type(() => AggregationType)
  aggregationType?: AggregationType;

  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "indexName" })
  indexName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastModifiedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "metricArn" })
  metricArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "metricName" })
  metricName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "period" })
  period?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "queryString" })
  queryString?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "queryVersion" })
  queryVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "unit" })
  unit?: FleetMetricUnitEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: number;
}
