<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Query - A query for entities.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Query
{
    /**
     * The properties to make distinct. The query results will contain the first result for each distinct combination of values for the given properties (if empty, all results are returned). Requires: * If `order` is specified, the set of distinct on properties must appear before the non-distinct on properties in `order`.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PropertyReference> $distinctOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('distinctOn')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PropertyReference>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $distinctOn = null;
    
    /**
     * An ending point for the query results. Query cursors are returned in query result batches and [can only be used to limit the same query](https://cloud.google.com/datastore/docs/concepts/queries#cursors_limits_and_offsets).
     * 
     * @var ?string $endCursor
     */
	#[\JMS\Serializer\Annotation\SerializedName('endCursor')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $endCursor = null;
    
    /**
     * A holder for any type of filter.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Filter $filter
     */
	#[\JMS\Serializer\Annotation\SerializedName('filter')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Filter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Filter $filter = null;
    
    /**
     * The kinds to query (if empty, returns entities of all kinds). Currently at most 1 kind may be specified.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\KindExpression> $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\KindExpression>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $kind = null;
    
    /**
     * The maximum number of results to return. Applies after all other constraints. Optional. Unspecified is interpreted as no limit. Must be >= 0 if specified.
     * 
     * @var ?int $limit
     */
	#[\JMS\Serializer\Annotation\SerializedName('limit')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $limit = null;
    
    /**
     * The number of results to skip. Applies before limit, but after all other constraints. Optional. Must be >= 0 if specified.
     * 
     * @var ?int $offset
     */
	#[\JMS\Serializer\Annotation\SerializedName('offset')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $offset = null;
    
    /**
     * The order to apply to the query results (if empty, order is unspecified).
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PropertyOrder> $order
     */
	#[\JMS\Serializer\Annotation\SerializedName('order')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PropertyOrder>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $order = null;
    
    /**
     * The projection to return. Defaults to returning all properties.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Projection> $projection
     */
	#[\JMS\Serializer\Annotation\SerializedName('projection')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Projection>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $projection = null;
    
    /**
     * A starting point for the query results. Query cursors are returned in query result batches and [can only be used to continue the same query](https://cloud.google.com/datastore/docs/concepts/queries#cursors_limits_and_offsets).
     * 
     * @var ?string $startCursor
     */
	#[\JMS\Serializer\Annotation\SerializedName('startCursor')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startCursor = null;
    
	public function __construct()
	{
		$this->distinctOn = null;
		$this->endCursor = null;
		$this->filter = null;
		$this->kind = null;
		$this->limit = null;
		$this->offset = null;
		$this->order = null;
		$this->projection = null;
		$this->startCursor = null;
	}
}
