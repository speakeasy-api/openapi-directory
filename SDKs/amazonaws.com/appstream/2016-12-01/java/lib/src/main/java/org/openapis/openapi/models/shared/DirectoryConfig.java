/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DirectoryConfig - Describes the configuration information required to join fleets and image builders to Microsoft Active Directory domains.
 */
public class DirectoryConfig {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CertificateBasedAuthProperties")
    public CertificateBasedAuthProperties certificateBasedAuthProperties;

    public DirectoryConfig withCertificateBasedAuthProperties(CertificateBasedAuthProperties certificateBasedAuthProperties) {
        this.certificateBasedAuthProperties = certificateBasedAuthProperties;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedTime")
    public OffsetDateTime createdTime;

    public DirectoryConfig withCreatedTime(OffsetDateTime createdTime) {
        this.createdTime = createdTime;
        return this;
    }
    
    @JsonProperty("DirectoryName")
    public String directoryName;

    public DirectoryConfig withDirectoryName(String directoryName) {
        this.directoryName = directoryName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OrganizationalUnitDistinguishedNames")
    public String[] organizationalUnitDistinguishedNames;

    public DirectoryConfig withOrganizationalUnitDistinguishedNames(String[] organizationalUnitDistinguishedNames) {
        this.organizationalUnitDistinguishedNames = organizationalUnitDistinguishedNames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ServiceAccountCredentials")
    public ServiceAccountCredentials serviceAccountCredentials;

    public DirectoryConfig withServiceAccountCredentials(ServiceAccountCredentials serviceAccountCredentials) {
        this.serviceAccountCredentials = serviceAccountCredentials;
        return this;
    }
    
    public DirectoryConfig(@JsonProperty("DirectoryName") String directoryName) {
        this.directoryName = directoryName;
  }
}
