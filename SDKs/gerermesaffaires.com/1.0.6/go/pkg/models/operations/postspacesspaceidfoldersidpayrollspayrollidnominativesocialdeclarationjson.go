// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationJSONSecurity struct {
	GmaAuth shared.SchemeGmaAuth `security:"scheme,type=oauth2"`
}

type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationJSONPathParams struct {
	// Id of the folder social
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the payroll
	PayrollID string `pathParam:"style=simple,explode=false,name=payrollId"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnum string

const (
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnumCustomer    PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnum = "customer"
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnumProvider    PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnum = "provider"
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnumBank        PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnum = "bank"
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnumCashWoucher PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnum = "cashWoucher"
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnumFiscal      PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnum = "fiscal"
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnumInsurance   PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnum = "insurance"
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnumSocial      PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnum = "social"
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnumOther       PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnum = "other"
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnumPermanent   PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnum = "permanent"
)

func (e *PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "customer":
		fallthrough
	case "provider":
		fallthrough
	case "bank":
		fallthrough
	case "cashWoucher":
		fallthrough
	case "fiscal":
		fallthrough
	case "insurance":
		fallthrough
	case "social":
		fallthrough
	case "other":
		fallthrough
	case "permanent":
		*e = PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnum: %s", s)
	}
}

type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2Accounting struct {
	AccountedOn *string                                                                                                       `json:"AccountedOn,omitempty"`
	Workbook    *PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2AccountingWorkbookEnum `json:"Workbook,omitempty"`
	YearMonth   *string                                                                                                       `json:"YearMonth,omitempty"`
}

type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2File struct {
	Content64Encoded *string `json:"Content64Encoded,omitempty"`
	Name             *string `json:"Name,omitempty"`
}

type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2 struct {
	Accounting *PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2Accounting `json:"Accounting,omitempty"`
	Author     *string                                                                                           `json:"Author,omitempty"`
	Code       *string                                                                                           `json:"Code,omitempty"`
	Comment    *string                                                                                           `json:"Comment,omitempty"`
	Date       *string                                                                                           `json:"Date,omitempty"`
	File       PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2File        `json:"File"`
	Title      string                                                                                            `json:"Title"`
}

type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON1 struct {
	DocumentID *string `json:"DocumentId,omitempty"`
}

type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSONType string

const (
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSONTypePostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON1 PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSONType = "post_/spaces/{spaceId}/folders/{id}/payrolls/{payrollId}/nominative-social-declaration_ApplicationJSON_1"
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSONTypePostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2 PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSONType = "post_/spaces/{spaceId}/folders/{id}/payrolls/{payrollId}/nominative-social-declaration_ApplicationJSON_2"
)

type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON struct {
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON1 *PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON1
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2 *PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2

	Type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSONType
}

func CreatePostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSONPostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON1(postSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON1 PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON1) PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON {
	typ := PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSONTypePostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON1

	return PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON{
		PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON1: &postSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON1,
		Type: typ,
	}
}

func CreatePostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSONPostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2(postSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2 PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2) PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON {
	typ := PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSONTypePostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2

	return PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON{
		PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2: &postSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2,
		Type: typ,
	}
}

func (u *PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	postSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON1 := new(PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON1)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&postSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON1); err == nil {
		u.PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON1 = postSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON1
		u.Type = PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSONTypePostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON1
		return nil
	}

	postSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2 := new(PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&postSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2); err == nil {
		u.PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2 = postSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2
		u.Type = PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSONTypePostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON) MarshalJSON() ([]byte, error) {
	if u.PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON1 != nil {
		return json.Marshal(u.PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON1)
	}

	if u.PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2 != nil {
		return json.Marshal(u.PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON2)
	}

	return nil, nil
}

type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationJSONRequest struct {
	PathParams PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationJSONPathParams
	// Document to add (either DocumentId either (File,Name,Content64Encoded,Title) is mandatory)
	Request  PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationApplicationJSON `request:"mediaType=application/json"`
	Security PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationJSONSecurity
}

// PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationJSON201ApplicationJSON - Id of document created
type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationJSON201ApplicationJSON struct {
	ID *string `json:"Id,omitempty"`
}

type PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationJSONResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Id of document created
	PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationJSON201ApplicationJSONObject *PostSpacesSpaceIDFoldersIDPayrollsPayrollIDNominativeSocialDeclarationJSON201ApplicationJSON
}
