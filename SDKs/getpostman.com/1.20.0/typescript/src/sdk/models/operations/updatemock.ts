/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class UpdateMockRequestBodyMock extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "environment" })
  environment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "private" })
  private?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "versionTag" })
  versionTag?: string;
}

export class UpdateMockRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "mock" })
  @Type(() => UpdateMockRequestBodyMock)
  mock?: UpdateMockRequestBodyMock;
}

export class UpdateMockRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: UpdateMockRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=mock_uid",
  })
  mockUid: string;
}

export class UpdateMock200ApplicationJSONMockConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "headers" })
  headers?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "matchBody" })
  matchBody?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "matchQueryParams" })
  matchQueryParams?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "matchWildcards" })
  matchWildcards?: boolean;
}

export class UpdateMock200ApplicationJSONMock extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "collection" })
  collection?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "config" })
  @Type(() => UpdateMock200ApplicationJSONMockConfig)
  config?: UpdateMock200ApplicationJSONMockConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "environment" })
  environment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "mockUrl" })
  mockUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  owner?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "uid" })
  uid?: string;
}

/**
 * success Response
 */
export class UpdateMock200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "mock" })
  @Type(() => UpdateMock200ApplicationJSONMock)
  mock?: UpdateMock200ApplicationJSONMock;
}

export class UpdateMockResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * success Response
   */
  @SpeakeasyMetadata()
  updateMock200ApplicationJSONObject?: UpdateMock200ApplicationJSON;
}
