"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import compatibleenvironmenttemplateinput as shared_compatibleenvironmenttemplateinput
from ..shared import servicetemplatesupportedcomponentsourcetype_enum as shared_servicetemplatesupportedcomponentsourcetype_enum
from ..shared import templateversionstatus_enum as shared_templateversionstatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateServiceTemplateVersionInput:
    
    major_version: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('majorVersion') }})  
    minor_version: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minorVersion') }})  
    template_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('templateName') }})  
    compatible_environment_templates: Optional[list[shared_compatibleenvironmenttemplateinput.CompatibleEnvironmentTemplateInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('compatibleEnvironmentTemplates'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_templateversionstatus_enum.TemplateVersionStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    supported_component_sources: Optional[list[shared_servicetemplatesupportedcomponentsourcetype_enum.ServiceTemplateSupportedComponentSourceTypeEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supportedComponentSources'), 'exclude': lambda f: f is None }})  
    