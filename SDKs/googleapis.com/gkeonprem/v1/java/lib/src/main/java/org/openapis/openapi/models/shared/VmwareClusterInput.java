/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VmwareClusterInput - Resource that represents a VMware user cluster. ##
 */
public class VmwareClusterInput {
    /**
     * Required. The admin cluster this VMware user cluster belongs to. This is the full resource name of the admin cluster's fleet membership. In the future, references to other resource types might be allowed if admin clusters are modeled as their own resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adminClusterMembership")
    public String adminClusterMembership;

    public VmwareClusterInput withAdminClusterMembership(String adminClusterMembership) {
        this.adminClusterMembership = adminClusterMembership;
        return this;
    }
    
    /**
     * Annotations on the VMware user cluster. This field has the same restrictions as Kubernetes annotations. The total size of all keys and values combined is limited to 256k. Key can have 2 segments: prefix (optional) and name (required), separated by a slash (/). Prefix must be a DNS subdomain. Name must be 63 characters or less, begin and end with alphanumerics, with dashes (-), underscores (_), dots (.), and alphanumerics between.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotations")
    public java.util.Map<String, String> annotations;

    public VmwareClusterInput withAnnotations(java.util.Map<String, String> annotations) {
        this.annotations = annotations;
        return this;
    }
    
    /**
     * Specifies anti affinity group config for the VMware user cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("antiAffinityGroups")
    public VmwareAAGConfig antiAffinityGroups;

    public VmwareClusterInput withAntiAffinityGroups(VmwareAAGConfig antiAffinityGroups) {
        this.antiAffinityGroups = antiAffinityGroups;
        return this;
    }
    
    /**
     * Authorization defines the On-Prem cluster authorization configuration to bootstrap onto the admin cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorization")
    public Authorization authorization;

    public VmwareClusterInput withAuthorization(Authorization authorization) {
        this.authorization = authorization;
        return this;
    }
    
    /**
     * Specifies config to enable/disable auto repair. The cluster-health-controller is deployed only if Enabled is true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoRepairConfig")
    public VmwareAutoRepairConfig autoRepairConfig;

    public VmwareClusterInput withAutoRepairConfig(VmwareAutoRepairConfig autoRepairConfig) {
        this.autoRepairConfig = autoRepairConfig;
        return this;
    }
    
    /**
     * Specifies control plane node config for the VMware user cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("controlPlaneNode")
    public VmwareControlPlaneNodeConfig controlPlaneNode;

    public VmwareClusterInput withControlPlaneNode(VmwareControlPlaneNodeConfig controlPlaneNode) {
        this.controlPlaneNode = controlPlaneNode;
        return this;
    }
    
    /**
     * Contains configurations for Dataplane V2, which is optimized dataplane for Kubernetes networking. For more information, see: https://cloud.google.com/kubernetes-engine/docs/concepts/dataplane-v2
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataplaneV2")
    public VmwareDataplaneV2Config dataplaneV2;

    public VmwareClusterInput withDataplaneV2(VmwareDataplaneV2Config dataplaneV2) {
        this.dataplaneV2 = dataplaneV2;
        return this;
    }
    
    /**
     * A human readable description of this VMware user cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public VmwareClusterInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Enable control plane V2. Default to false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableControlPlaneV2")
    public Boolean enableControlPlaneV2;

    public VmwareClusterInput withEnableControlPlaneV2(Boolean enableControlPlaneV2) {
        this.enableControlPlaneV2 = enableControlPlaneV2;
        return this;
    }
    
    /**
     * This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding. Allows clients to perform consistent read-modify-writes through optimistic concurrency control.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public VmwareClusterInput withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Specifies the locad balancer config for the VMware user cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loadBalancer")
    public VmwareLoadBalancerConfig loadBalancer;

    public VmwareClusterInput withLoadBalancer(VmwareLoadBalancerConfig loadBalancer) {
        this.loadBalancer = loadBalancer;
        return this;
    }
    
    /**
     * Immutable. The VMware user cluster resource name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public VmwareClusterInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Specifies network config for the VMware user cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkConfig")
    public VmwareNetworkConfigInput networkConfig;

    public VmwareClusterInput withNetworkConfig(VmwareNetworkConfigInput networkConfig) {
        this.networkConfig = networkConfig;
        return this;
    }
    
    /**
     * The Anthos clusters on the VMware version for your user cluster. Defaults to the admin cluster version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onPremVersion")
    public String onPremVersion;

    public VmwareClusterInput withOnPremVersion(String onPremVersion) {
        this.onPremVersion = onPremVersion;
        return this;
    }
    
    /**
     * ResourceStatus describes why a cluster or node pool has a certain status. (e.g., ERROR or DEGRADED).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ResourceStatus status;

    public VmwareClusterInput withStatus(ResourceStatus status) {
        this.status = status;
        return this;
    }
    
    /**
     * Specifies vSphere CSI components deployment config in the VMware user cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storage")
    public VmwareStorageConfig storage;

    public VmwareClusterInput withStorage(VmwareStorageConfig storage) {
        this.storage = storage;
        return this;
    }
    
    /**
     * ValidationCheck represents the result of preflight check.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("validationCheck")
    public ValidationCheckInput validationCheck;

    public VmwareClusterInput withValidationCheck(ValidationCheckInput validationCheck) {
        this.validationCheck = validationCheck;
        return this;
    }
    
    /**
     * Represents configuration for the VMware VCenter for the user cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vcenter")
    public VmwareVCenterConfig vcenter;

    public VmwareClusterInput withVcenter(VmwareVCenterConfig vcenter) {
        this.vcenter = vcenter;
        return this;
    }
    
    /**
     * Enable VM tracking.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vmTrackingEnabled")
    public Boolean vmTrackingEnabled;

    public VmwareClusterInput withVmTrackingEnabled(Boolean vmTrackingEnabled) {
        this.vmTrackingEnabled = vmTrackingEnabled;
        return this;
    }
    
    public VmwareClusterInput(){}
}
