// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeEventSourceXAmzTargetEnum
type DescribeEventSourceXAmzTargetEnum string

const (
	DescribeEventSourceXAmzTargetEnumAwsEventsDescribeEventSource DescribeEventSourceXAmzTargetEnum = "AWSEvents.DescribeEventSource"
)

func (e *DescribeEventSourceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSEvents.DescribeEventSource":
		*e = DescribeEventSourceXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeEventSourceXAmzTargetEnum: %s", s)
	}
}

type DescribeEventSourceRequest struct {
	DescribeEventSourceRequest shared.DescribeEventSourceRequest `request:"mediaType=application/json"`
	XAmzAlgorithm              *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                 DescribeEventSourceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeEventSourceResponse struct {
	ContentType string
	// Success
	DescribeEventSourceResponse *shared.DescribeEventSourceResponse
	// InternalException
	InternalException interface{}
	// OperationDisabledException
	OperationDisabledException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
