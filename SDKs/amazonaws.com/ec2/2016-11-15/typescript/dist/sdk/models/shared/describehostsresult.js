"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DescribeHostsResult = exports.DescribeHostsResultHosts = exports.DescribeHostsResultHostsTags = exports.DescribeHostsResultHostsStateEnum = exports.DescribeHostsResultHostsInstances = exports.DescribeHostsResultHostsHostRecoveryEnum = exports.DescribeHostsResultHostsHostProperties = exports.DescribeHostsResultHostsHostMaintenanceEnum = exports.DescribeHostsResultHostsAvailableCapacity = exports.DescribeHostsResultHostsAvailableCapacityAvailableInstanceCapacity = exports.DescribeHostsResultHostsAutoPlacementEnum = exports.DescribeHostsResultHostsAllowsMultipleInstanceTypesEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * Indicates whether the Dedicated Host supports multiple instance types of the same instance family. If the value is <code>on</code>, the Dedicated Host supports multiple instance types in the instance family. If the value is <code>off</code>, the Dedicated Host supports a single instance type only.
 */
var DescribeHostsResultHostsAllowsMultipleInstanceTypesEnum;
(function (DescribeHostsResultHostsAllowsMultipleInstanceTypesEnum) {
    DescribeHostsResultHostsAllowsMultipleInstanceTypesEnum["On"] = "on";
    DescribeHostsResultHostsAllowsMultipleInstanceTypesEnum["Off"] = "off";
})(DescribeHostsResultHostsAllowsMultipleInstanceTypesEnum = exports.DescribeHostsResultHostsAllowsMultipleInstanceTypesEnum || (exports.DescribeHostsResultHostsAllowsMultipleInstanceTypesEnum = {}));
/**
 * Whether auto-placement is on or off.
 */
var DescribeHostsResultHostsAutoPlacementEnum;
(function (DescribeHostsResultHostsAutoPlacementEnum) {
    DescribeHostsResultHostsAutoPlacementEnum["On"] = "on";
    DescribeHostsResultHostsAutoPlacementEnum["Off"] = "off";
})(DescribeHostsResultHostsAutoPlacementEnum = exports.DescribeHostsResultHostsAutoPlacementEnum || (exports.DescribeHostsResultHostsAutoPlacementEnum = {}));
/**
 * Information about the number of instances that can be launched onto the Dedicated Host.
 */
var DescribeHostsResultHostsAvailableCapacityAvailableInstanceCapacity = /** @class */ (function (_super) {
    __extends(DescribeHostsResultHostsAvailableCapacityAvailableInstanceCapacity, _super);
    function DescribeHostsResultHostsAvailableCapacityAvailableInstanceCapacity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeHostsResultHostsAvailableCapacityAvailableInstanceCapacity.prototype, "availableCapacity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHostsAvailableCapacityAvailableInstanceCapacity.prototype, "instanceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeHostsResultHostsAvailableCapacityAvailableInstanceCapacity.prototype, "totalCapacity", void 0);
    return DescribeHostsResultHostsAvailableCapacityAvailableInstanceCapacity;
}(utils_1.SpeakeasyBase));
exports.DescribeHostsResultHostsAvailableCapacityAvailableInstanceCapacity = DescribeHostsResultHostsAvailableCapacityAvailableInstanceCapacity;
/**
 * Information about the instances running on the Dedicated Host.
 */
var DescribeHostsResultHostsAvailableCapacity = /** @class */ (function (_super) {
    __extends(DescribeHostsResultHostsAvailableCapacity, _super);
    function DescribeHostsResultHostsAvailableCapacity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeHostsResultHostsAvailableCapacityAvailableInstanceCapacity,
        }),
        __metadata("design:type", Array)
    ], DescribeHostsResultHostsAvailableCapacity.prototype, "availableInstanceCapacity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeHostsResultHostsAvailableCapacity.prototype, "availableVCpus", void 0);
    return DescribeHostsResultHostsAvailableCapacity;
}(utils_1.SpeakeasyBase));
exports.DescribeHostsResultHostsAvailableCapacity = DescribeHostsResultHostsAvailableCapacity;
/**
 * Indicates whether host maintenance is enabled or disabled for the Dedicated Host.
 */
var DescribeHostsResultHostsHostMaintenanceEnum;
(function (DescribeHostsResultHostsHostMaintenanceEnum) {
    DescribeHostsResultHostsHostMaintenanceEnum["On"] = "on";
    DescribeHostsResultHostsHostMaintenanceEnum["Off"] = "off";
})(DescribeHostsResultHostsHostMaintenanceEnum = exports.DescribeHostsResultHostsHostMaintenanceEnum || (exports.DescribeHostsResultHostsHostMaintenanceEnum = {}));
/**
 * The hardware specifications of the Dedicated Host.
 */
var DescribeHostsResultHostsHostProperties = /** @class */ (function (_super) {
    __extends(DescribeHostsResultHostsHostProperties, _super);
    function DescribeHostsResultHostsHostProperties() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeHostsResultHostsHostProperties.prototype, "cores", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHostsHostProperties.prototype, "instanceFamily", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHostsHostProperties.prototype, "instanceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeHostsResultHostsHostProperties.prototype, "sockets", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeHostsResultHostsHostProperties.prototype, "totalVCpus", void 0);
    return DescribeHostsResultHostsHostProperties;
}(utils_1.SpeakeasyBase));
exports.DescribeHostsResultHostsHostProperties = DescribeHostsResultHostsHostProperties;
/**
 * Indicates whether host recovery is enabled or disabled for the Dedicated Host.
 */
var DescribeHostsResultHostsHostRecoveryEnum;
(function (DescribeHostsResultHostsHostRecoveryEnum) {
    DescribeHostsResultHostsHostRecoveryEnum["On"] = "on";
    DescribeHostsResultHostsHostRecoveryEnum["Off"] = "off";
})(DescribeHostsResultHostsHostRecoveryEnum = exports.DescribeHostsResultHostsHostRecoveryEnum || (exports.DescribeHostsResultHostsHostRecoveryEnum = {}));
/**
 * Describes an instance running on a Dedicated Host.
 */
var DescribeHostsResultHostsInstances = /** @class */ (function (_super) {
    __extends(DescribeHostsResultHostsInstances, _super);
    function DescribeHostsResultHostsInstances() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHostsInstances.prototype, "instanceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHostsInstances.prototype, "instanceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHostsInstances.prototype, "ownerId", void 0);
    return DescribeHostsResultHostsInstances;
}(utils_1.SpeakeasyBase));
exports.DescribeHostsResultHostsInstances = DescribeHostsResultHostsInstances;
/**
 * The Dedicated Host's state.
 */
var DescribeHostsResultHostsStateEnum;
(function (DescribeHostsResultHostsStateEnum) {
    DescribeHostsResultHostsStateEnum["Available"] = "available";
    DescribeHostsResultHostsStateEnum["UnderAssessment"] = "under-assessment";
    DescribeHostsResultHostsStateEnum["PermanentFailure"] = "permanent-failure";
    DescribeHostsResultHostsStateEnum["Released"] = "released";
    DescribeHostsResultHostsStateEnum["ReleasedPermanentFailure"] = "released-permanent-failure";
    DescribeHostsResultHostsStateEnum["Pending"] = "pending";
})(DescribeHostsResultHostsStateEnum = exports.DescribeHostsResultHostsStateEnum || (exports.DescribeHostsResultHostsStateEnum = {}));
/**
 * Describes a tag.
 */
var DescribeHostsResultHostsTags = /** @class */ (function (_super) {
    __extends(DescribeHostsResultHostsTags, _super);
    function DescribeHostsResultHostsTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHostsTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHostsTags.prototype, "value", void 0);
    return DescribeHostsResultHostsTags;
}(utils_1.SpeakeasyBase));
exports.DescribeHostsResultHostsTags = DescribeHostsResultHostsTags;
/**
 * Describes the properties of the Dedicated Host.
 */
var DescribeHostsResultHosts = /** @class */ (function (_super) {
    __extends(DescribeHostsResultHosts, _super);
    function DescribeHostsResultHosts() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], DescribeHostsResultHosts.prototype, "allocationTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHosts.prototype, "allowsMultipleInstanceTypes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHosts.prototype, "autoPlacement", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHosts.prototype, "availabilityZone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHosts.prototype, "availabilityZoneId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DescribeHostsResultHostsAvailableCapacity)
    ], DescribeHostsResultHosts.prototype, "availableCapacity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHosts.prototype, "clientToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHosts.prototype, "hostId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHosts.prototype, "hostMaintenance", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DescribeHostsResultHostsHostProperties)
    ], DescribeHostsResultHosts.prototype, "hostProperties", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHosts.prototype, "hostRecovery", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHosts.prototype, "hostReservationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DescribeHostsResultHostsInstances }),
        __metadata("design:type", Array)
    ], DescribeHostsResultHosts.prototype, "instances", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], DescribeHostsResultHosts.prototype, "memberOfServiceLinkedResourceGroup", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHosts.prototype, "outpostArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHosts.prototype, "ownerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], DescribeHostsResultHosts.prototype, "releaseTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResultHosts.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DescribeHostsResultHostsTags }),
        __metadata("design:type", Array)
    ], DescribeHostsResultHosts.prototype, "tags", void 0);
    return DescribeHostsResultHosts;
}(utils_1.SpeakeasyBase));
exports.DescribeHostsResultHosts = DescribeHostsResultHosts;
/**
 * Success
 */
var DescribeHostsResult = /** @class */ (function (_super) {
    __extends(DescribeHostsResult, _super);
    function DescribeHostsResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DescribeHostsResultHosts }),
        __metadata("design:type", Array)
    ], DescribeHostsResult.prototype, "hosts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeHostsResult.prototype, "nextToken", void 0);
    return DescribeHostsResult;
}(utils_1.SpeakeasyBase));
exports.DescribeHostsResult = DescribeHostsResult;
