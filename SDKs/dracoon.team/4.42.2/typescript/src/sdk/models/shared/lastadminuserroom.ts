/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Room information
 */
export class LastAdminUserRoom extends SpeakeasyBase {
  /**
   * Room ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Determines whether user is last admin of a room due to being the last member of last admin group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastAdminInGroup" })
  lastAdminInGroup: boolean;

  /**
   * ID of the last admin group where the user is the only remaining member
   *
   * @remarks
   *
   * (returned only if `lastAdminInGroup` is `true`)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastAdminInGroupId" })
  lastAdminInGroupId?: number;

  /**
   * Room name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Parent room ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentId" })
  parentId?: number;

  /**
   * Parent node path
   *
   * @remarks
   *
   * `/` if node is a root node (room)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parentPath" })
  parentPath: string;
}
