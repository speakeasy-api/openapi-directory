<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetDefinitionsRequest
{
    /**
     * Return related words with definitions
     * 
     * @var ?string $includeRelated
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=includeRelated')]
    public ?string $includeRelated = null;
    
    /**
     * Return a closed set of XML tags in response
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetDefinitionsIncludeTagsEnum $includeTags
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=includeTags')]
    public ?GetDefinitionsIncludeTagsEnum $includeTags = null;
    
    /**
     * Maximum number of results to return
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * CSV list of part-of-speech types
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetDefinitionsPartOfSpeechEnum $partOfSpeech
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=partOfSpeech')]
    public ?GetDefinitionsPartOfSpeechEnum $partOfSpeech = null;
    
    /**
     * Source dictionary to return definitions from.  If 'all' is received, results are returned from all sources. If multiple values are received (e.g. 'century,wiktionary'), results are returned from the first specified dictionary that has definitions. If left blank, results are returned from the first dictionary that has definitions. By default, dictionaries are searched in this order: ahd-5, wiktionary, webster, century, wordnet
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetDefinitionsSourceDictionariesEnum $sourceDictionaries
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=false,name=sourceDictionaries')]
    public ?GetDefinitionsSourceDictionariesEnum $sourceDictionaries = null;
    
    /**
     * If true will try to return the correct word root ('cats' -> 'cat'). If false returns exactly what was requested.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetDefinitionsUseCanonicalEnum $useCanonical
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=useCanonical')]
    public ?GetDefinitionsUseCanonicalEnum $useCanonical = null;
    
    /**
     * Word to return definitions for
     * 
     * @var string $word
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=word')]
    public string $word;
    
	public function __construct()
	{
		$this->includeRelated = null;
		$this->includeTags = null;
		$this->limit = null;
		$this->partOfSpeech = null;
		$this->sourceDictionaries = null;
		$this->useCanonical = null;
		$this->word = "";
	}
}
