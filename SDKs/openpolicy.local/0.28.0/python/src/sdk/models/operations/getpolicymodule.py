"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import four_hundred as shared_four_hundred
from ..shared import four_hundred_and_four as shared_four_hundred_and_four
from ..shared import two_hundredresult as shared_two_hundredresult
from typing import Optional


@dataclasses.dataclass
class GetPolicyModuleRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""The name of a policy module"""  
    pretty: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pretty', 'style': 'form', 'explode': True }})
    r"""If true, response will be in a human-readable format."""  
    

@dataclasses.dataclass
class GetPolicyModuleResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    two_hundred_result: Optional[shared_two_hundredresult.TwoHundredResult] = dataclasses.field(default=None)
    r"""Success"""  
    four_hundred: Optional[shared_four_hundred.FourHundred] = dataclasses.field(default=None)
    r"""Server error"""  
    four_hundred_and_four: Optional[shared_four_hundred_and_four.FourHundredAndFour] = dataclasses.field(default=None)
    r"""Not found (for example, a requested policy module or document does not exist)"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    