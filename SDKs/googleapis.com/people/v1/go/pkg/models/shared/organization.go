// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Organization - A person's past or current organization. Overlapping date ranges are permitted.
type Organization struct {
	// The person's cost center at the organization.
	CostCenter *string `json:"costCenter,omitempty"`
	// True if the organization is the person's current organization; false if the organization is a past organization.
	Current *bool `json:"current,omitempty"`
	// The person's department at the organization.
	Department *string `json:"department,omitempty"`
	// The domain name associated with the organization; for example, `google.com`.
	Domain *string `json:"domain,omitempty"`
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	EndDate *Date `json:"endDate,omitempty"`
	// Output only. The type of the organization translated and formatted in the viewer's account locale or the `Accept-Language` HTTP header locale.
	FormattedType *string `json:"formattedType,omitempty"`
	// The person's full-time equivalent millipercent within the organization (100000 = 100%).
	FullTimeEquivalentMillipercent *int `json:"fullTimeEquivalentMillipercent,omitempty"`
	// The person's job description at the organization.
	JobDescription *string `json:"jobDescription,omitempty"`
	// The location of the organization office the person works at.
	Location *string `json:"location,omitempty"`
	// Metadata about a field.
	Metadata *FieldMetadata `json:"metadata,omitempty"`
	// The name of the organization.
	Name *string `json:"name,omitempty"`
	// The phonetic name of the organization.
	PhoneticName *string `json:"phoneticName,omitempty"`
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	StartDate *Date `json:"startDate,omitempty"`
	// The symbol associated with the organization; for example, a stock ticker symbol, abbreviation, or acronym.
	Symbol *string `json:"symbol,omitempty"`
	// The person's job title at the organization.
	Title *string `json:"title,omitempty"`
	// The type of the organization. The type can be custom or one of these predefined values: * `work` * `school`
	Type *string `json:"type,omitempty"`
}

// OrganizationInput - A person's past or current organization. Overlapping date ranges are permitted.
type OrganizationInput struct {
	// The person's cost center at the organization.
	CostCenter *string `json:"costCenter,omitempty"`
	// True if the organization is the person's current organization; false if the organization is a past organization.
	Current *bool `json:"current,omitempty"`
	// The person's department at the organization.
	Department *string `json:"department,omitempty"`
	// The domain name associated with the organization; for example, `google.com`.
	Domain *string `json:"domain,omitempty"`
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	EndDate *Date `json:"endDate,omitempty"`
	// The person's full-time equivalent millipercent within the organization (100000 = 100%).
	FullTimeEquivalentMillipercent *int `json:"fullTimeEquivalentMillipercent,omitempty"`
	// The person's job description at the organization.
	JobDescription *string `json:"jobDescription,omitempty"`
	// The location of the organization office the person works at.
	Location *string `json:"location,omitempty"`
	// Metadata about a field.
	Metadata *FieldMetadataInput `json:"metadata,omitempty"`
	// The name of the organization.
	Name *string `json:"name,omitempty"`
	// The phonetic name of the organization.
	PhoneticName *string `json:"phoneticName,omitempty"`
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	StartDate *Date `json:"startDate,omitempty"`
	// The symbol associated with the organization; for example, a stock ticker symbol, abbreviation, or acronym.
	Symbol *string `json:"symbol,omitempty"`
	// The person's job title at the organization.
	Title *string `json:"title,omitempty"`
	// The type of the organization. The type can be custom or one of these predefined values: * `work` * `school`
	Type *string `json:"type,omitempty"`
}
