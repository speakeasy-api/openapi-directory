/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class SearchPrincipalsV1Request {
    /**
     * ID of the authentication domain that contains the principal.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=auth_domain_id")
    public String authDomainId;

    public SearchPrincipalsV1Request withAuthDomainId(String authDomainId) {
        this.authDomainId = authDomainId;
        return this;
    }
    
    /**
     * A Boolean that specifies whether the principal has any roles assigned or is a local user. When a principal is a local user, or when the principal has any roles assigned, this value is 'true'.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=is_assigned_roles_or_is_local")
    public Boolean isAssignedRolesOrIsLocal;

    public SearchPrincipalsV1Request withIsAssignedRolesOrIsLocal(Boolean isAssignedRolesOrIsLocal) {
        this.isAssignedRolesOrIsLocal = isAssignedRolesOrIsLocal;
        return this;
    }
    
    /**
     * Indicates if the principal has TOTP authentication enabled. Returns the users with TOTP authentication enabled when the value is true.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=is_totp_enabled")
    public Boolean isTotpEnabled;

    public SearchPrincipalsV1Request withIsTotpEnabled(Boolean isTotpEnabled) {
        this.isTotpEnabled = isTotpEnabled;
        return this;
    }
    
    /**
     * Maximum number of results to return.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Integer limit;

    public SearchPrincipalsV1Request withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * The name of the principal.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=name")
    public String name;

    public SearchPrincipalsV1Request withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Starting offset of the results to return.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Integer offset;

    public SearchPrincipalsV1Request withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * ID of the organization of which the principal is a member.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=organization_id")
    public String organizationId;

    public SearchPrincipalsV1Request withOrganizationId(String organizationId) {
        this.organizationId = organizationId;
        return this;
    }
    
    /**
     * The type of principal.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=principal_type")
    public SearchPrincipalsV1PrincipalTypeEnum principalType;

    public SearchPrincipalsV1Request withPrincipalType(SearchPrincipalsV1PrincipalTypeEnum principalType) {
        this.principalType = principalType;
        return this;
    }
    
    /**
     * ID of a role assigned to the principal.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=role_id")
    public String roleId;

    public SearchPrincipalsV1Request withRoleId(String roleId) {
        this.roleId = roleId;
        return this;
    }
    
    /**
     * Attribute by which to sort. Default is "name".
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_by")
    public SearchPrincipalsV1SortByEnum sortBy;

    public SearchPrincipalsV1Request withSortBy(SearchPrincipalsV1SortByEnum sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    /**
     * Sort order. Default order is ascending.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_order")
    public SearchPrincipalsV1SortOrderEnum sortOrder;

    public SearchPrincipalsV1Request withSortOrder(SearchPrincipalsV1SortOrderEnum sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    public SearchPrincipalsV1Request(){}
}
