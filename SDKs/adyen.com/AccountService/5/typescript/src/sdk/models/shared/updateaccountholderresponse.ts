/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountHolderDetails } from "./accountholderdetails";
import { AccountHolderStatus } from "./accountholderstatus";
import { ErrorFieldType } from "./errorfieldtype";
import { KYCVerificationResult } from "./kycverificationresult";
import { Expose, Type } from "class-transformer";

/**
 * The legal entity of the account holder.
 */
export enum UpdateAccountHolderResponseLegalEntityEnum {
  Business = "Business",
  Individual = "Individual",
  NonProfit = "NonProfit",
}

/**
 * OK - the request has succeeded.
 */
export class UpdateAccountHolderResponse extends SpeakeasyBase {
  /**
   * The code of the account holder.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountHolderCode" })
  accountHolderCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "accountHolderDetails" })
  @Type(() => AccountHolderDetails)
  accountHolderDetails?: AccountHolderDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "accountHolderStatus" })
  @Type(() => AccountHolderStatus)
  accountHolderStatus?: AccountHolderStatus;

  /**
   * The description of the account holder.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * in case the account holder has not been updated, contains account holder fields, that did not pass the validation.
   */
  @SpeakeasyMetadata({ elemType: ErrorFieldType })
  @Expose({ name: "invalidFields" })
  @Type(() => ErrorFieldType)
  invalidFields?: ErrorFieldType[];

  /**
   * The legal entity of the account holder.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "legalEntity" })
  legalEntity?: UpdateAccountHolderResponseLegalEntityEnum;

  /**
   * The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes), with which the prospective account holder primarily deals.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "primaryCurrency" })
  primaryCurrency?: string;

  /**
   * The reference of a request. Can be used to uniquely identify the request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pspReference" })
  pspReference?: string;

  /**
   * The result code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resultCode" })
  resultCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "verification" })
  @Type(() => KYCVerificationResult)
  verification?: KYCVerificationResult;
}
