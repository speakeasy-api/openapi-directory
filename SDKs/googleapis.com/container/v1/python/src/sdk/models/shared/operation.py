"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import operationprogress as shared_operationprogress
from ..shared import status as shared_status
from ..shared import statuscondition as shared_statuscondition
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class OperationOperationTypeEnum(str, Enum):
    r"""The operation type."""
    TYPE_UNSPECIFIED = 'TYPE_UNSPECIFIED'
    CREATE_CLUSTER = 'CREATE_CLUSTER'
    DELETE_CLUSTER = 'DELETE_CLUSTER'
    UPGRADE_MASTER = 'UPGRADE_MASTER'
    UPGRADE_NODES = 'UPGRADE_NODES'
    REPAIR_CLUSTER = 'REPAIR_CLUSTER'
    UPDATE_CLUSTER = 'UPDATE_CLUSTER'
    CREATE_NODE_POOL = 'CREATE_NODE_POOL'
    DELETE_NODE_POOL = 'DELETE_NODE_POOL'
    SET_NODE_POOL_MANAGEMENT = 'SET_NODE_POOL_MANAGEMENT'
    AUTO_REPAIR_NODES = 'AUTO_REPAIR_NODES'
    AUTO_UPGRADE_NODES = 'AUTO_UPGRADE_NODES'
    SET_LABELS = 'SET_LABELS'
    SET_MASTER_AUTH = 'SET_MASTER_AUTH'
    SET_NODE_POOL_SIZE = 'SET_NODE_POOL_SIZE'
    SET_NETWORK_POLICY = 'SET_NETWORK_POLICY'
    SET_MAINTENANCE_POLICY = 'SET_MAINTENANCE_POLICY'

class OperationStatusEnum(str, Enum):
    r"""The current status of the operation."""
    STATUS_UNSPECIFIED = 'STATUS_UNSPECIFIED'
    PENDING = 'PENDING'
    RUNNING = 'RUNNING'
    DONE = 'DONE'
    ABORTING = 'ABORTING'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Operation:
    r"""This operation resource represents operations that may have happened or are happening on the cluster. All fields are output only."""
    
    cluster_conditions: Optional[list[shared_statuscondition.StatusCondition]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('clusterConditions'), 'exclude': lambda f: f is None }})
    r"""Which conditions caused the current cluster state. Deprecated. Use field error instead."""  
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""Detailed operation progress, if available."""  
    end_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime'), 'exclude': lambda f: f is None }})
    r"""[Output only] The time the operation completed, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."""  
    error: Optional[shared_status.Status] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})
    r"""The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."""  
    location: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location'), 'exclude': lambda f: f is None }})
    r"""[Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The server-assigned ID for the operation."""  
    nodepool_conditions: Optional[list[shared_statuscondition.StatusCondition]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nodepoolConditions'), 'exclude': lambda f: f is None }})
    r"""Which conditions caused the current node pool state. Deprecated. Use field error instead."""  
    operation_type: Optional[OperationOperationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operationType'), 'exclude': lambda f: f is None }})
    r"""The operation type."""  
    progress: Optional[shared_operationprogress.OperationProgress] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('progress'), 'exclude': lambda f: f is None }})
    r"""Information about operation (or operation stage) progress."""  
    self_link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selfLink'), 'exclude': lambda f: f is None }})
    r"""Server-defined URL for the resource."""  
    start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'exclude': lambda f: f is None }})
    r"""[Output only] The time the operation started, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format."""  
    status: Optional[OperationStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The current status of the operation."""  
    status_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statusMessage'), 'exclude': lambda f: f is None }})
    r"""Output only. If an error has occurred, a textual description of the error. Deprecated. Use the field error instead."""  
    target_link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetLink'), 'exclude': lambda f: f is None }})
    r"""Server-defined URL for the target of the operation."""  
    zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zone'), 'exclude': lambda f: f is None }})
    r"""The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/zones#available) in which the operation is taking place. This field is deprecated, use location instead."""  
    