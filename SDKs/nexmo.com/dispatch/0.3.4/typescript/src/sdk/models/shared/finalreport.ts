/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export enum FinalReportLinksMessagesChannelEnum {
  Messenger = "messenger",
  ViberSeviceMsg = "viber_sevice_msg",
  Sms = "sms",
  Whatsapp = "whatsapp",
  Mms = "mms",
}

export enum FinalReportLinksMessagesStatusEnum {
  Submitted = "submitted",
  Delivered = "delivered",
  Read = "read",
  Rejected = "rejected",
  Undeliverable = "undeliverable",
}

/**
 * The charge currency in ISO 4217 format.
 */
export enum FinalReportLinksMessagesUsageCurrencyEnum {
  Eur = "EUR",
}

export class FinalReportLinksMessagesUsage extends SpeakeasyBase {
  /**
   * The charge currency in ISO 4217 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: FinalReportLinksMessagesUsageCurrencyEnum;

  /**
   * The charge amount as a stringified number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: string;
}

export class FinalReportLinksMessages extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "channel" })
  channel?: FinalReportLinksMessagesChannelEnum;

  /**
   * Please note GET is not currently supported
   */
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message_uuid" })
  messageUuid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: FinalReportLinksMessagesStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "usage" })
  @Type(() => FinalReportLinksMessagesUsage)
  usage?: FinalReportLinksMessagesUsage;
}

export class FinalReportLinks extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: FinalReportLinksMessages })
  @Expose({ name: "messages" })
  @Type(() => FinalReportLinksMessages)
  messages?: FinalReportLinksMessages[];
}

export enum FinalReportStatusEnum {
  Completed = "completed",
  Error = "error",
}

export enum FinalReportTemplateEnum {
  Failover = "failover",
}

/**
 * The charge currency in ISO 4217 format.
 */
export enum FinalReportUsageCurrencyEnum {
  Eur = "EUR",
}

/**
 * This is the total cost of your Workflow request. Please note if a preceding message in the workflow request is delivered after the final message in the workflow is delivered it may not reflect the true total cost of the workflow.
 */
export class FinalReportUsage extends SpeakeasyBase {
  /**
   * The charge currency in ISO 4217 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: FinalReportUsageCurrencyEnum;

  /**
   * The charge amount as a stringified number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: string;
}

export class FinalReport extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => FinalReportLinks)
  links?: FinalReportLinks;

  @SpeakeasyMetadata()
  @Expose({ name: "dispatch_uuid" })
  dispatchUuid?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: FinalReportStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "template" })
  template?: FinalReportTemplateEnum;

  /**
   * The datetime of when the event occurred.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp?: string;

  /**
   * This is the total cost of your Workflow request. Please note if a preceding message in the workflow request is delivered after the final message in the workflow is delivered it may not reflect the true total cost of the workflow.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usage" })
  @Type(() => FinalReportUsage)
  usage?: FinalReportUsage;
}
