// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTSetDesiredCapacityActionEnum
type POSTSetDesiredCapacityActionEnum string

const (
	POSTSetDesiredCapacityActionEnumSetDesiredCapacity POSTSetDesiredCapacityActionEnum = "SetDesiredCapacity"
)

func (e POSTSetDesiredCapacityActionEnum) ToPointer() *POSTSetDesiredCapacityActionEnum {
	return &e
}

func (e *POSTSetDesiredCapacityActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SetDesiredCapacity":
		*e = POSTSetDesiredCapacityActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTSetDesiredCapacityActionEnum: %v", v)
	}
}

// POSTSetDesiredCapacityVersionEnum
type POSTSetDesiredCapacityVersionEnum string

const (
	POSTSetDesiredCapacityVersionEnumTwoThousandAndEleven0101 POSTSetDesiredCapacityVersionEnum = "2011-01-01"
)

func (e POSTSetDesiredCapacityVersionEnum) ToPointer() *POSTSetDesiredCapacityVersionEnum {
	return &e
}

func (e *POSTSetDesiredCapacityVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2011-01-01":
		*e = POSTSetDesiredCapacityVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTSetDesiredCapacityVersionEnum: %v", v)
	}
}

type POSTSetDesiredCapacityRequest struct {
	Action            POSTSetDesiredCapacityActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                            `request:"mediaType=text/xml"`
	Version           POSTSetDesiredCapacityVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTSetDesiredCapacityResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
