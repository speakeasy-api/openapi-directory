/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SourceTypeEnum } from "./sourcetypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Represents a single occurrence of something interesting within the system. Some examples of events are creating a cluster or adding or removing a node.
 */
export class Event extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  date?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceName" })
  sourceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceType" })
  sourceType?: SourceTypeEnum;
}
