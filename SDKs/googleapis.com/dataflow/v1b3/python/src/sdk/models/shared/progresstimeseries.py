"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import point as shared_point
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProgressTimeseries:
    r"""Information about the progress of some component of job execution."""
    
    current_progress: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentProgress'), 'exclude': lambda f: f is None }})
    r"""The current progress of the component, in the range [0,1]."""  
    data_points: Optional[list[shared_point.Point]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataPoints'), 'exclude': lambda f: f is None }})
    r"""History of progress for the component. Points are sorted by time."""  
    