<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateConnectorRequestBody
{
    /**
     * Information about the capacity of the connector, whether it is auto scaled or provisioned.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateConnectorRequestBodyCapacity $capacity
     */
	#[\JMS\Serializer\Annotation\SerializedName('capacity')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateConnectorRequestBodyCapacity')]
    public CreateConnectorRequestBodyCapacity $capacity;
    
    /**
     * A map of keys to values that represent the configuration for the connector.
     * 
     * @var array<string, string> $connectorConfiguration
     */
	#[\JMS\Serializer\Annotation\SerializedName('connectorConfiguration')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    public array $connectorConfiguration;
    
    /**
     * A summary description of the connector.
     * 
     * @var ?string $connectorDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('connectorDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $connectorDescription = null;
    
    /**
     * The name of the connector.
     * 
     * @var string $connectorName
     */
	#[\JMS\Serializer\Annotation\SerializedName('connectorName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $connectorName;
    
    /**
     * The details of the Apache Kafka cluster to which the connector is connected.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateConnectorRequestBodyKafkaCluster $kafkaCluster
     */
	#[\JMS\Serializer\Annotation\SerializedName('kafkaCluster')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateConnectorRequestBodyKafkaCluster')]
    public CreateConnectorRequestBodyKafkaCluster $kafkaCluster;
    
    /**
     * The client authentication information used in order to authenticate with the Apache Kafka cluster.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateConnectorRequestBodyKafkaClusterClientAuthentication $kafkaClusterClientAuthentication
     */
	#[\JMS\Serializer\Annotation\SerializedName('kafkaClusterClientAuthentication')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateConnectorRequestBodyKafkaClusterClientAuthentication')]
    public CreateConnectorRequestBodyKafkaClusterClientAuthentication $kafkaClusterClientAuthentication;
    
    /**
     * Details of encryption in transit to the Apache Kafka cluster.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\CreateConnectorRequestBodyKafkaClusterEncryptionInTransit $kafkaClusterEncryptionInTransit
     */
	#[\JMS\Serializer\Annotation\SerializedName('kafkaClusterEncryptionInTransit')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateConnectorRequestBodyKafkaClusterEncryptionInTransit')]
    public CreateConnectorRequestBodyKafkaClusterEncryptionInTransit $kafkaClusterEncryptionInTransit;
    
    /**
     * The version of Kafka Connect. It has to be compatible with both the Apache Kafka cluster's version and the plugins.
     * 
     * @var string $kafkaConnectVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('kafkaConnectVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $kafkaConnectVersion;
    
    /**
     * Details about log delivery.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateConnectorRequestBodyLogDelivery $logDelivery
     */
	#[\JMS\Serializer\Annotation\SerializedName('logDelivery')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateConnectorRequestBodyLogDelivery')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateConnectorRequestBodyLogDelivery $logDelivery = null;
    
    /**
     * Specifies which plugins to use for the connector.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\Plugin> $plugins
     */
	#[\JMS\Serializer\Annotation\SerializedName('plugins')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Plugin>')]
    public array $plugins;
    
    /**
     * The Amazon Resource Name (ARN) of the IAM role used by the connector to access the Amazon Web Services resources that it needs. The types of resources depends on the logic of the connector. For example, a connector that has Amazon S3 as a destination must have permissions that allow it to write to the S3 destination bucket.
     * 
     * @var string $serviceExecutionRoleArn
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceExecutionRoleArn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serviceExecutionRoleArn;
    
    /**
     * The configuration of the workers, which are the processes that run the connector logic.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateConnectorRequestBodyWorkerConfiguration $workerConfiguration
     */
	#[\JMS\Serializer\Annotation\SerializedName('workerConfiguration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateConnectorRequestBodyWorkerConfiguration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateConnectorRequestBodyWorkerConfiguration $workerConfiguration = null;
    
	public function __construct()
	{
		$this->capacity = new \OpenAPI\OpenAPI\Models\Operations\CreateConnectorRequestBodyCapacity();
		$this->connectorConfiguration = [];
		$this->connectorDescription = null;
		$this->connectorName = "";
		$this->kafkaCluster = new \OpenAPI\OpenAPI\Models\Operations\CreateConnectorRequestBodyKafkaCluster();
		$this->kafkaClusterClientAuthentication = new \OpenAPI\OpenAPI\Models\Operations\CreateConnectorRequestBodyKafkaClusterClientAuthentication();
		$this->kafkaClusterEncryptionInTransit = new \OpenAPI\OpenAPI\Models\Operations\CreateConnectorRequestBodyKafkaClusterEncryptionInTransit();
		$this->kafkaConnectVersion = "";
		$this->logDelivery = null;
		$this->plugins = [];
		$this->serviceExecutionRoleArn = "";
		$this->workerConfiguration = null;
	}
}
