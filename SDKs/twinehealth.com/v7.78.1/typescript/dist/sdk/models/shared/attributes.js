"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Attributes = exports.AttributesTypeEnum = exports.AttributesAttendees = exports.AttributesAttendeesResponseStatusEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Status of responses from attendees
 */
var AttributesAttendeesResponseStatusEnum;
(function (AttributesAttendeesResponseStatusEnum) {
    AttributesAttendeesResponseStatusEnum["NeedsAction"] = "needsAction";
    AttributesAttendeesResponseStatusEnum["Declined"] = "declined";
    AttributesAttendeesResponseStatusEnum["Tentative"] = "tentative";
    AttributesAttendeesResponseStatusEnum["Accepted"] = "accepted";
})(AttributesAttendeesResponseStatusEnum = exports.AttributesAttendeesResponseStatusEnum || (exports.AttributesAttendeesResponseStatusEnum = {}));
var AttributesAttendees = /** @class */ (function (_super) {
    __extends(AttributesAttendees, _super);
    function AttributesAttendees() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "response_status" }),
        __metadata("design:type", String)
    ], AttributesAttendees.prototype, "responseStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "user" }),
        __metadata("design:type", String)
    ], AttributesAttendees.prototype, "user", void 0);
    return AttributesAttendees;
}(utils_1.SpeakeasyBase));
exports.AttributesAttendees = AttributesAttendees;
/**
 * The type of calendar event. Immutable after event creation.
 */
var AttributesTypeEnum;
(function (AttributesTypeEnum) {
    AttributesTypeEnum["PlanCheckIn"] = "plan-check-in";
    AttributesTypeEnum["Reminder"] = "reminder";
    AttributesTypeEnum["TelephoneCall"] = "telephone-call";
    AttributesTypeEnum["OfficeVisit"] = "office-visit";
    AttributesTypeEnum["VideoCall"] = "video-call";
})(AttributesTypeEnum = exports.AttributesTypeEnum || (exports.AttributesTypeEnum = {}));
var Attributes = /** @class */ (function (_super) {
    __extends(Attributes, _super);
    function Attributes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "all_day" }),
        __metadata("design:type", Boolean)
    ], Attributes.prototype, "allDay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: AttributesAttendees }),
        (0, class_transformer_1.Expose)({ name: "attendees" }),
        (0, class_transformer_1.Type)(function () { return AttributesAttendees; }),
        __metadata("design:type", Array)
    ], Attributes.prototype, "attendees", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "completed_at" }),
        __metadata("design:type", String)
    ], Attributes.prototype, "completedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "completed_by" }),
        __metadata("design:type", Object)
    ], Attributes.prototype, "completedBy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Attributes.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "end_at" }),
        __metadata("design:type", String)
    ], Attributes.prototype, "endAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "location" }),
        __metadata("design:type", String)
    ], Attributes.prototype, "location", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "start_at" }),
        __metadata("design:type", String)
    ], Attributes.prototype, "startAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "time_zone" }),
        __metadata("design:type", String)
    ], Attributes.prototype, "timeZone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "title" }),
        __metadata("design:type", String)
    ], Attributes.prototype, "title", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], Attributes.prototype, "type", void 0);
    return Attributes;
}(utils_1.SpeakeasyBase));
exports.Attributes = Attributes;
