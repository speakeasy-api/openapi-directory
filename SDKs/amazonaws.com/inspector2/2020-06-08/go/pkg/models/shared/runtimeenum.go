// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RuntimeEnum string

const (
	RuntimeEnumNodejs      RuntimeEnum = "NODEJS"
	RuntimeEnumNodejs12X   RuntimeEnum = "NODEJS_12_X"
	RuntimeEnumNodejs14X   RuntimeEnum = "NODEJS_14_X"
	RuntimeEnumNodejs16X   RuntimeEnum = "NODEJS_16_X"
	RuntimeEnumJava8       RuntimeEnum = "JAVA_8"
	RuntimeEnumJava8Al2    RuntimeEnum = "JAVA_8_AL2"
	RuntimeEnumJava11      RuntimeEnum = "JAVA_11"
	RuntimeEnumPython37    RuntimeEnum = "PYTHON_3_7"
	RuntimeEnumPython38    RuntimeEnum = "PYTHON_3_8"
	RuntimeEnumPython39    RuntimeEnum = "PYTHON_3_9"
	RuntimeEnumUnsupported RuntimeEnum = "UNSUPPORTED"
	RuntimeEnumNodejs18X   RuntimeEnum = "NODEJS_18_X"
	RuntimeEnumGo1X        RuntimeEnum = "GO_1_X"
)

func (e RuntimeEnum) ToPointer() *RuntimeEnum {
	return &e
}

func (e *RuntimeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NODEJS":
		fallthrough
	case "NODEJS_12_X":
		fallthrough
	case "NODEJS_14_X":
		fallthrough
	case "NODEJS_16_X":
		fallthrough
	case "JAVA_8":
		fallthrough
	case "JAVA_8_AL2":
		fallthrough
	case "JAVA_11":
		fallthrough
	case "PYTHON_3_7":
		fallthrough
	case "PYTHON_3_8":
		fallthrough
	case "PYTHON_3_9":
		fallthrough
	case "UNSUPPORTED":
		fallthrough
	case "NODEJS_18_X":
		fallthrough
	case "GO_1_X":
		*e = RuntimeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RuntimeEnum: %v", v)
	}
}
