// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PatchRolloutModeEnum - Mode of the patch rollout.
type PatchRolloutModeEnum string

const (
	PatchRolloutModeEnumModeUnspecified PatchRolloutModeEnum = "MODE_UNSPECIFIED"
	PatchRolloutModeEnumZoneByZone      PatchRolloutModeEnum = "ZONE_BY_ZONE"
	PatchRolloutModeEnumConcurrentZones PatchRolloutModeEnum = "CONCURRENT_ZONES"
)

func (e *PatchRolloutModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "MODE_UNSPECIFIED":
		fallthrough
	case "ZONE_BY_ZONE":
		fallthrough
	case "CONCURRENT_ZONES":
		*e = PatchRolloutModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchRolloutModeEnum: %s", s)
	}
}

// PatchRollout - Patch rollout configuration specifications. Contains details on the concurrency control when applying patch(es) to all targeted VMs.
type PatchRollout struct {
	// Message encapsulating a value that can be either absolute ("fixed") or relative ("percent") to a value.
	DisruptionBudget *FixedOrPercent `json:"disruptionBudget,omitempty"`
	// Mode of the patch rollout.
	Mode *PatchRolloutModeEnum `json:"mode,omitempty"`
}
