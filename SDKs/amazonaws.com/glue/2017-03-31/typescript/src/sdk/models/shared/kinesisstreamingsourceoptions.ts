/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StartingPositionEnum } from "./startingpositionenum";
import { Expose } from "class-transformer";

/**
 * Additional options for the Amazon Kinesis streaming data source.
 */
export class KinesisStreamingSourceOptions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AddIdleTimeBetweenReads" })
  addIdleTimeBetweenReads?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "AddRecordTimestamp" })
  addRecordTimestamp?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AvoidEmptyBatches" })
  avoidEmptyBatches?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Classification" })
  classification?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Delimiter" })
  delimiter?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DescribeShardInterval" })
  describeShardInterval?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "EmitConsumerLagMetrics" })
  emitConsumerLagMetrics?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndpointUrl" })
  endpointUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IdleTimeBetweenReadsInMs" })
  idleTimeBetweenReadsInMs?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxFetchRecordsPerShard" })
  maxFetchRecordsPerShard?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxFetchTimeInMs" })
  maxFetchTimeInMs?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxRecordPerRead" })
  maxRecordPerRead?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxRetryIntervalMs" })
  maxRetryIntervalMs?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NumRetries" })
  numRetries?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "RetryIntervalMs" })
  retryIntervalMs?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleSessionName" })
  roleSessionName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartingPosition" })
  startingPosition?: StartingPositionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StreamArn" })
  streamArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StreamName" })
  streamName?: string;
}
