/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class SingleMonitor200ApplicationJSONMonitor {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("collectionUid")
    public String collectionUid;

    public SingleMonitor200ApplicationJSONMonitor withCollectionUid(String collectionUid) {
        this.collectionUid = collectionUid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("distribution")
    public Object[] distribution;

    public SingleMonitor200ApplicationJSONMonitor withDistribution(Object[] distribution) {
        this.distribution = distribution;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environmentUid")
    public String environmentUid;

    public SingleMonitor200ApplicationJSONMonitor withEnvironmentUid(String environmentUid) {
        this.environmentUid = environmentUid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public SingleMonitor200ApplicationJSONMonitor withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastRun")
    public SingleMonitor200ApplicationJSONMonitorLastRun lastRun;

    public SingleMonitor200ApplicationJSONMonitor withLastRun(SingleMonitor200ApplicationJSONMonitorLastRun lastRun) {
        this.lastRun = lastRun;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public SingleMonitor200ApplicationJSONMonitor withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notifications")
    public SingleMonitor200ApplicationJSONMonitorNotifications notifications;

    public SingleMonitor200ApplicationJSONMonitor withNotifications(SingleMonitor200ApplicationJSONMonitorNotifications notifications) {
        this.notifications = notifications;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("options")
    public SingleMonitor200ApplicationJSONMonitorOptions options;

    public SingleMonitor200ApplicationJSONMonitor withOptions(SingleMonitor200ApplicationJSONMonitorOptions options) {
        this.options = options;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner")
    public String owner;

    public SingleMonitor200ApplicationJSONMonitor withOwner(String owner) {
        this.owner = owner;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schedule")
    public SingleMonitor200ApplicationJSONMonitorSchedule schedule;

    public SingleMonitor200ApplicationJSONMonitor withSchedule(SingleMonitor200ApplicationJSONMonitorSchedule schedule) {
        this.schedule = schedule;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uid")
    public String uid;

    public SingleMonitor200ApplicationJSONMonitor withUid(String uid) {
        this.uid = uid;
        return this;
    }
    
    public SingleMonitor200ApplicationJSONMonitor(){}
}
