/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Optional. Specifies how to match against the name. If not specified, a default value of "EXACT" is used.
 */
export enum GrpcRouteMethodMatchTypeEnum {
  TypeUnspecified = "TYPE_UNSPECIFIED",
  Exact = "EXACT",
  RegularExpression = "REGULAR_EXPRESSION",
}

/**
 * Specifies a match against a method.
 */
export class GrpcRouteMethodMatch extends SpeakeasyBase {
  /**
   * Optional. Specifies that matches are case sensitive. The default value is true. case_sensitive must not be used with a type of REGULAR_EXPRESSION.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caseSensitive" })
  caseSensitive?: boolean;

  /**
   * Required. Name of the method to match against. If unspecified, will match all methods.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "grpcMethod" })
  grpcMethod?: string;

  /**
   * Required. Name of the service to match against. If unspecified, will match all services.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "grpcService" })
  grpcService?: string;

  /**
   * Optional. Specifies how to match against the name. If not specified, a default value of "EXACT" is used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: GrpcRouteMethodMatchTypeEnum;
}
