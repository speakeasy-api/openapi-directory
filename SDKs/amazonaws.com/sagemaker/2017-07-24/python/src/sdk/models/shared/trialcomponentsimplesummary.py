"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import trialcomponentsource as shared_trialcomponentsource
from ..shared import usercontext as shared_usercontext
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TrialComponentSimpleSummary:
    r"""A short summary of a trial component."""
    
    created_by: Optional[shared_usercontext.UserContext] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreatedBy'), 'exclude': lambda f: f is None }})
    r"""Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card."""  
    creation_time: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreationTime'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    trial_component_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TrialComponentArn'), 'exclude': lambda f: f is None }})  
    trial_component_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TrialComponentName'), 'exclude': lambda f: f is None }})  
    trial_component_source: Optional[shared_trialcomponentsource.TrialComponentSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TrialComponentSource'), 'exclude': lambda f: f is None }})
    r"""The Amazon Resource Name (ARN) and job type of the source of a trial component."""  
    