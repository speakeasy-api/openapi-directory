/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ShardingOption - Options for enabling sharding.
 */
public class ShardingOption {
    /**
     * Shards test cases into the specified groups of packages, classes, and/or methods. With manual sharding enabled, specifying test targets via environment_variables or in InstrumentationTest is invalid.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("manualSharding")
    public ManualSharding manualSharding;

    public ShardingOption withManualSharding(ManualSharding manualSharding) {
        this.manualSharding = manualSharding;
        return this;
    }
    
    /**
     * Shards test based on previous test case timing records.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("smartSharding")
    public SmartSharding smartSharding;

    public ShardingOption withSmartSharding(SmartSharding smartSharding) {
        this.smartSharding = smartSharding;
        return this;
    }
    
    /**
     * Uniformly shards test cases given a total number of shards. For instrumentation tests, it will be translated to "-e numShard" and "-e shardIndex" AndroidJUnitRunner arguments. With uniform sharding enabled, specifying either of these sharding arguments via `environment_variables` is invalid. Based on the sharding mechanism AndroidJUnitRunner uses, there is no guarantee that test cases will be distributed uniformly across all shards.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uniformSharding")
    public UniformSharding uniformSharding;

    public ShardingOption withUniformSharding(UniformSharding uniformSharding) {
        this.uniformSharding = uniformSharding;
        return this;
    }
    
    public ShardingOption(){}
}
