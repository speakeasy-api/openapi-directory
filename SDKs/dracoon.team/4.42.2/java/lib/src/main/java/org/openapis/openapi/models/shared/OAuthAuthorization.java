/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * OAuthAuthorization - OAuth authorization
 */
public class OAuthAuthorization {
    /**
     * ID of the OAuth client
     */
    @JsonProperty("clientId")
    public String clientId;
    public OAuthAuthorization withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * Name, which is shown at the client configuration and authorization.
     */
    @JsonProperty("clientName")
    public String clientName;
    public OAuthAuthorization withClientName(String clientName) {
        this.clientName = clientName;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.13.0
     * 
     * Creation date of the authorization
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;
    public OAuthAuthorization withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Expiration date of the authorization
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("expiresAt")
    public OffsetDateTime expiresAt;
    public OAuthAuthorization withExpiresAt(OffsetDateTime expiresAt) {
        this.expiresAt = expiresAt;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.12.0
     * 
     * ID of the OAuth authorization
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public OAuthAuthorization withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.25.0
     * 
     * Determines whether authorization matches the one from Authorization Header
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isCurrentAuthorization")
    public Boolean isCurrentAuthorization;
    public OAuthAuthorization withIsCurrentAuthorization(Boolean isCurrentAuthorization) {
        this.isCurrentAuthorization = isCurrentAuthorization;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.12.0
     * 
     * Determines whether client is a standard client.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isStandard")
    public Boolean isStandard;
    public OAuthAuthorization withIsStandard(Boolean isStandard) {
        this.isStandard = isStandard;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.13.0
     * 
     * Usage date of the authorization
     * 
     * (Time of last usage.)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("usedAt")
    public OffsetDateTime usedAt;
    public OAuthAuthorization withUsedAt(OffsetDateTime usedAt) {
        this.usedAt = usedAt;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.12.0
     * 
     * User agent category.
     */
    @JsonProperty("userAgentCategory")
    public OAuthAuthorizationUserAgentCategoryEnum userAgentCategory;
    public OAuthAuthorization withUserAgentCategory(OAuthAuthorizationUserAgentCategoryEnum userAgentCategory) {
        this.userAgentCategory = userAgentCategory;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.12.0
     * 
     * User agent info.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userAgentInfo")
    public String userAgentInfo;
    public OAuthAuthorization withUserAgentInfo(String userAgentInfo) {
        this.userAgentInfo = userAgentInfo;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.12.0
     * 
     * User agent OS.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userAgentOs")
    public String userAgentOs;
    public OAuthAuthorization withUserAgentOs(String userAgentOs) {
        this.userAgentOs = userAgentOs;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.12.0
     * 
     * User agent type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userAgentType")
    public String userAgentType;
    public OAuthAuthorization withUserAgentType(String userAgentType) {
        this.userAgentType = userAgentType;
        return this;
    }
    
}
