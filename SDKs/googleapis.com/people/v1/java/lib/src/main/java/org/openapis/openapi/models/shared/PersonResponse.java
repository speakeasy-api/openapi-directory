/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PersonResponse - The response for a single person
 */
public class PersonResponse {
    /**
     * **DEPRECATED** (Please use status instead) [HTTP 1.1 status code] (http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("httpStatusCode")
    public Integer httpStatusCode;
    public PersonResponse withHttpStatusCode(Integer httpStatusCode) {
        this.httpStatusCode = httpStatusCode;
        return this;
    }
    
    /**
     * Information about a person merged from various data sources such as the authenticated user's contacts and profile data. Most fields can have multiple items. The items in a field have no guaranteed order, but each non-empty field is guaranteed to have exactly one field with `metadata.primary` set to true.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("person")
    public Person person;
    public PersonResponse withPerson(Person person) {
        this.person = person;
        return this;
    }
    
    /**
     * The original requested resource name. May be different than the resource name on the returned person. The resource name can change when adding or removing fields that link a contact and profile such as a verified email, verified phone number, or a profile URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestedResourceName")
    public String requestedResourceName;
    public PersonResponse withRequestedResourceName(String requestedResourceName) {
        this.requestedResourceName = requestedResourceName;
        return this;
    }
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public Status status;
    public PersonResponse withStatus(Status status) {
        this.status = status;
        return this;
    }
    
}
