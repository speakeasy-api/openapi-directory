/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * GdataContentTypeInfo - Detailed Content-Type information from Scotty. The Content-Type of the media will typically be filled in by the header or Scotty's best_guess, but this extended information provides the backend with more information so that it can make a better decision if needed. This is only used on media upload requests from Scotty.
 */
public class GdataContentTypeInfo {
    /**
     * Scotty's best guess of what the content type of the file is.
     */
    
    public String bestGuess;
    public GdataContentTypeInfo withBestGuess(String bestGuess) {
        this.bestGuess = bestGuess;
        return this;
    }
    
    /**
     * The content type of the file derived by looking at specific bytes (i.e. "magic bytes") of the actual file.
     */
    
    public String fromBytes;
    public GdataContentTypeInfo withFromBytes(String fromBytes) {
        this.fromBytes = fromBytes;
        return this;
    }
    
    /**
     * The content type of the file derived from the file extension of the original file name used by the client.
     */
    
    public String fromFileName;
    public GdataContentTypeInfo withFromFileName(String fromFileName) {
        this.fromFileName = fromFileName;
        return this;
    }
    
    /**
     * The content type of the file as specified in the request headers, multipart headers, or RUPIO start request.
     */
    
    public String fromHeader;
    public GdataContentTypeInfo withFromHeader(String fromHeader) {
        this.fromHeader = fromHeader;
        return this;
    }
    
    /**
     * The content type of the file derived from the file extension of the URL path. The URL path is assumed to represent a file name (which is typically only true for agents that are providing a REST API).
     */
    
    public String fromUrlPath;
    public GdataContentTypeInfo withFromUrlPath(String fromUrlPath) {
        this.fromUrlPath = fromUrlPath;
        return this;
    }
    
}
