/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DevEnvironmentRepositorySummary } from "./devenvironmentrepositorysummary";
import { DevEnvironmentStatusEnum } from "./devenvironmentstatusenum";
import { Ide } from "./ide";
import { InstanceTypeEnum } from "./instancetypeenum";
import { PersistentStorage } from "./persistentstorage";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetDevEnvironmentResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "alias" })
  alias?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creatorId" })
  creatorId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata({ elemType: Ide })
  @Expose({ name: "ides" })
  @Type(() => Ide)
  ides?: Ide[];

  @SpeakeasyMetadata()
  @Expose({ name: "inactivityTimeoutMinutes" })
  inactivityTimeoutMinutes: number;

  @SpeakeasyMetadata()
  @Expose({ name: "instanceType" })
  instanceType: InstanceTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "persistentStorage" })
  @Type(() => PersistentStorage)
  persistentStorage: PersistentStorage;

  @SpeakeasyMetadata()
  @Expose({ name: "projectName" })
  projectName: string;

  @SpeakeasyMetadata({ elemType: DevEnvironmentRepositorySummary })
  @Expose({ name: "repositories" })
  @Type(() => DevEnvironmentRepositorySummary)
  repositories: DevEnvironmentRepositorySummary[];

  @SpeakeasyMetadata()
  @Expose({ name: "spaceName" })
  spaceName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: DevEnvironmentStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusReason" })
  statusReason?: string;
}
