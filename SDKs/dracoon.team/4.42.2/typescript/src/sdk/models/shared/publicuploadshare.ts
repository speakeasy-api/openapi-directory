/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PublicUploadedFileData } from "./publicuploadedfiledata";
import { UserUserPublicKeyList } from "./useruserpublickeylist";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Upload Share information
 */
export class PublicUploadShare extends SpeakeasyBase {
  /**
   * Creation date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * &#128640; Since v4.11.0
   *
   * @remarks
   *
   * Creator name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creatorName" })
  creatorName: string;

  /**
   * &#128640; Since v4.11.0
   *
   * @remarks
   *
   * Creator username
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creatorUsername" })
  creatorUsername?: string;

  /**
   * Expiration date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expireAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expireAt?: Date;

  /**
   * Encryption state
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isEncrypted" })
  isEncrypted?: boolean;

  /**
   * Is share protected by password
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isProtected" })
  isProtected: boolean;

  /**
   * Share display name (alias name)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * User notes
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  /**
   * Remaining size
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remainingSize" })
  remainingSize?: number;

  /**
   * Remaining slots
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remainingSlots" })
  remainingSlots?: number;

  /**
   * Allow display of already uploaded files
   */
  @SpeakeasyMetadata()
  @Expose({ name: "showUploadedFiles" })
  showUploadedFiles?: boolean;

  /**
   * List of (public) uploaded files
   */
  @SpeakeasyMetadata({ elemType: PublicUploadedFileData })
  @Expose({ name: "uploadedFiles" })
  @Type(() => PublicUploadedFileData)
  uploadedFiles?: PublicUploadedFileData[];

  /**
   * List of user public keys
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userUserPublicKeyList" })
  @Type(() => UserUserPublicKeyList)
  userUserPublicKeyList?: UserUserPublicKeyList;
}
