"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LanguagesSpokenArabicSpokenExceptionEnum(str, Enum):
    r"""Arabic exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LanguagesSpokenCantoneseSpokenExceptionEnum(str, Enum):
    r"""Cantonese exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LanguagesSpokenDutchSpokenExceptionEnum(str, Enum):
    r"""Dutch exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LanguagesSpokenEnglishSpokenExceptionEnum(str, Enum):
    r"""English exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LanguagesSpokenFilipinoSpokenExceptionEnum(str, Enum):
    r"""Filipino exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LanguagesSpokenFrenchSpokenExceptionEnum(str, Enum):
    r"""French exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LanguagesSpokenGermanSpokenExceptionEnum(str, Enum):
    r"""German exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LanguagesSpokenHindiSpokenExceptionEnum(str, Enum):
    r"""Hindi exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LanguagesSpokenIndonesianSpokenExceptionEnum(str, Enum):
    r"""Indonesian exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LanguagesSpokenItalianSpokenExceptionEnum(str, Enum):
    r"""Italian exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LanguagesSpokenJapaneseSpokenExceptionEnum(str, Enum):
    r"""Japanese exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LanguagesSpokenKoreanSpokenExceptionEnum(str, Enum):
    r"""Korean exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LanguagesSpokenMandarinSpokenExceptionEnum(str, Enum):
    r"""Mandarin exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LanguagesSpokenPortugueseSpokenExceptionEnum(str, Enum):
    r"""Portuguese exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LanguagesSpokenRussianSpokenExceptionEnum(str, Enum):
    r"""Russian exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LanguagesSpokenSpanishSpokenExceptionEnum(str, Enum):
    r"""Spanish exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'

class LanguagesSpokenVietnameseSpokenExceptionEnum(str, Enum):
    r"""Vietnamese exception."""
    EXCEPTION_UNSPECIFIED = 'EXCEPTION_UNSPECIFIED'
    UNDER_CONSTRUCTION = 'UNDER_CONSTRUCTION'
    DEPENDENT_ON_SEASON = 'DEPENDENT_ON_SEASON'
    DEPENDENT_ON_DAY_OF_WEEK = 'DEPENDENT_ON_DAY_OF_WEEK'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LanguagesSpoken:
    r"""Languages spoken by at least one staff member."""
    
    arabic_spoken: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('arabicSpoken'), 'exclude': lambda f: f is None }})
    r"""Arabic. At least one staff member speaks Arabic."""  
    arabic_spoken_exception: Optional[LanguagesSpokenArabicSpokenExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('arabicSpokenException'), 'exclude': lambda f: f is None }})
    r"""Arabic exception."""  
    cantonese_spoken: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cantoneseSpoken'), 'exclude': lambda f: f is None }})
    r"""Cantonese. At least one staff member speaks Cantonese."""  
    cantonese_spoken_exception: Optional[LanguagesSpokenCantoneseSpokenExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cantoneseSpokenException'), 'exclude': lambda f: f is None }})
    r"""Cantonese exception."""  
    dutch_spoken: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dutchSpoken'), 'exclude': lambda f: f is None }})
    r"""Dutch. At least one staff member speaks Dutch."""  
    dutch_spoken_exception: Optional[LanguagesSpokenDutchSpokenExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dutchSpokenException'), 'exclude': lambda f: f is None }})
    r"""Dutch exception."""  
    english_spoken: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('englishSpoken'), 'exclude': lambda f: f is None }})
    r"""English. At least one staff member speaks English."""  
    english_spoken_exception: Optional[LanguagesSpokenEnglishSpokenExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('englishSpokenException'), 'exclude': lambda f: f is None }})
    r"""English exception."""  
    filipino_spoken: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filipinoSpoken'), 'exclude': lambda f: f is None }})
    r"""Filipino. At least one staff member speaks Filipino."""  
    filipino_spoken_exception: Optional[LanguagesSpokenFilipinoSpokenExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filipinoSpokenException'), 'exclude': lambda f: f is None }})
    r"""Filipino exception."""  
    french_spoken: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('frenchSpoken'), 'exclude': lambda f: f is None }})
    r"""French. At least one staff member speaks French."""  
    french_spoken_exception: Optional[LanguagesSpokenFrenchSpokenExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('frenchSpokenException'), 'exclude': lambda f: f is None }})
    r"""French exception."""  
    german_spoken: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('germanSpoken'), 'exclude': lambda f: f is None }})
    r"""German. At least one staff member speaks German."""  
    german_spoken_exception: Optional[LanguagesSpokenGermanSpokenExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('germanSpokenException'), 'exclude': lambda f: f is None }})
    r"""German exception."""  
    hindi_spoken: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hindiSpoken'), 'exclude': lambda f: f is None }})
    r"""Hindi. At least one staff member speaks Hindi."""  
    hindi_spoken_exception: Optional[LanguagesSpokenHindiSpokenExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hindiSpokenException'), 'exclude': lambda f: f is None }})
    r"""Hindi exception."""  
    indonesian_spoken: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('indonesianSpoken'), 'exclude': lambda f: f is None }})
    r"""Indonesian. At least one staff member speaks Indonesian."""  
    indonesian_spoken_exception: Optional[LanguagesSpokenIndonesianSpokenExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('indonesianSpokenException'), 'exclude': lambda f: f is None }})
    r"""Indonesian exception."""  
    italian_spoken: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('italianSpoken'), 'exclude': lambda f: f is None }})
    r"""Italian. At least one staff member speaks Italian."""  
    italian_spoken_exception: Optional[LanguagesSpokenItalianSpokenExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('italianSpokenException'), 'exclude': lambda f: f is None }})
    r"""Italian exception."""  
    japanese_spoken: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('japaneseSpoken'), 'exclude': lambda f: f is None }})
    r"""Japanese. At least one staff member speaks Japanese."""  
    japanese_spoken_exception: Optional[LanguagesSpokenJapaneseSpokenExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('japaneseSpokenException'), 'exclude': lambda f: f is None }})
    r"""Japanese exception."""  
    korean_spoken: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('koreanSpoken'), 'exclude': lambda f: f is None }})
    r"""Korean. At least one staff member speaks Korean."""  
    korean_spoken_exception: Optional[LanguagesSpokenKoreanSpokenExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('koreanSpokenException'), 'exclude': lambda f: f is None }})
    r"""Korean exception."""  
    mandarin_spoken: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mandarinSpoken'), 'exclude': lambda f: f is None }})
    r"""Mandarin. At least one staff member speaks Mandarin."""  
    mandarin_spoken_exception: Optional[LanguagesSpokenMandarinSpokenExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mandarinSpokenException'), 'exclude': lambda f: f is None }})
    r"""Mandarin exception."""  
    portuguese_spoken: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('portugueseSpoken'), 'exclude': lambda f: f is None }})
    r"""Portuguese. At least one staff member speaks Portuguese."""  
    portuguese_spoken_exception: Optional[LanguagesSpokenPortugueseSpokenExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('portugueseSpokenException'), 'exclude': lambda f: f is None }})
    r"""Portuguese exception."""  
    russian_spoken: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('russianSpoken'), 'exclude': lambda f: f is None }})
    r"""Russian. At least one staff member speaks Russian."""  
    russian_spoken_exception: Optional[LanguagesSpokenRussianSpokenExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('russianSpokenException'), 'exclude': lambda f: f is None }})
    r"""Russian exception."""  
    spanish_spoken: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spanishSpoken'), 'exclude': lambda f: f is None }})
    r"""Spanish. At least one staff member speaks Spanish."""  
    spanish_spoken_exception: Optional[LanguagesSpokenSpanishSpokenExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spanishSpokenException'), 'exclude': lambda f: f is None }})
    r"""Spanish exception."""  
    vietnamese_spoken: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vietnameseSpoken'), 'exclude': lambda f: f is None }})
    r"""Vietnamese. At least one staff member speaks Vietnamese."""  
    vietnamese_spoken_exception: Optional[LanguagesSpokenVietnameseSpokenExceptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vietnameseSpokenException'), 'exclude': lambda f: f is None }})
    r"""Vietnamese exception."""  
    