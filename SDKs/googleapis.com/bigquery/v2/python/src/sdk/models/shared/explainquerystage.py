"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import explainquerystep as shared_explainquerystep
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ExplainQueryStage:
    
    completed_parallel_inputs: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('completedParallelInputs'), 'exclude': lambda f: f is None }})
    r"""Number of parallel input segments completed."""  
    compute_ms_avg: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('computeMsAvg'), 'exclude': lambda f: f is None }})
    r"""Milliseconds the average shard spent on CPU-bound tasks."""  
    compute_ms_max: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('computeMsMax'), 'exclude': lambda f: f is None }})
    r"""Milliseconds the slowest shard spent on CPU-bound tasks."""  
    compute_ratio_avg: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('computeRatioAvg'), 'exclude': lambda f: f is None }})
    r"""Relative amount of time the average shard spent on CPU-bound tasks."""  
    compute_ratio_max: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('computeRatioMax'), 'exclude': lambda f: f is None }})
    r"""Relative amount of time the slowest shard spent on CPU-bound tasks."""  
    end_ms: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endMs'), 'exclude': lambda f: f is None }})
    r"""Stage end time represented as milliseconds since epoch."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique ID for stage within plan."""  
    input_stages: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inputStages'), 'exclude': lambda f: f is None }})
    r"""IDs for stages that are inputs to this stage."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Human-readable name for stage."""  
    parallel_inputs: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parallelInputs'), 'exclude': lambda f: f is None }})
    r"""Number of parallel input segments to be processed."""  
    read_ms_avg: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('readMsAvg'), 'exclude': lambda f: f is None }})
    r"""Milliseconds the average shard spent reading input."""  
    read_ms_max: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('readMsMax'), 'exclude': lambda f: f is None }})
    r"""Milliseconds the slowest shard spent reading input."""  
    read_ratio_avg: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('readRatioAvg'), 'exclude': lambda f: f is None }})
    r"""Relative amount of time the average shard spent reading input."""  
    read_ratio_max: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('readRatioMax'), 'exclude': lambda f: f is None }})
    r"""Relative amount of time the slowest shard spent reading input."""  
    records_read: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recordsRead'), 'exclude': lambda f: f is None }})
    r"""Number of records read into the stage."""  
    records_written: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recordsWritten'), 'exclude': lambda f: f is None }})
    r"""Number of records written by the stage."""  
    shuffle_output_bytes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shuffleOutputBytes'), 'exclude': lambda f: f is None }})
    r"""Total number of bytes written to shuffle."""  
    shuffle_output_bytes_spilled: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shuffleOutputBytesSpilled'), 'exclude': lambda f: f is None }})
    r"""Total number of bytes written to shuffle and spilled to disk."""  
    slot_ms: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slotMs'), 'exclude': lambda f: f is None }})
    r"""Slot-milliseconds used by the stage."""  
    start_ms: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startMs'), 'exclude': lambda f: f is None }})
    r"""Stage start time represented as milliseconds since epoch."""  
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Current status for the stage."""  
    steps: Optional[list[shared_explainquerystep.ExplainQueryStep]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('steps'), 'exclude': lambda f: f is None }})
    r"""List of operations within the stage in dependency order (approximately chronological)."""  
    wait_ms_avg: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('waitMsAvg'), 'exclude': lambda f: f is None }})
    r"""Milliseconds the average shard spent waiting to be scheduled."""  
    wait_ms_max: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('waitMsMax'), 'exclude': lambda f: f is None }})
    r"""Milliseconds the slowest shard spent waiting to be scheduled."""  
    wait_ratio_avg: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('waitRatioAvg'), 'exclude': lambda f: f is None }})
    r"""Relative amount of time the average shard spent waiting to be scheduled."""  
    wait_ratio_max: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('waitRatioMax'), 'exclude': lambda f: f is None }})
    r"""Relative amount of time the slowest shard spent waiting to be scheduled."""  
    write_ms_avg: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('writeMsAvg'), 'exclude': lambda f: f is None }})
    r"""Milliseconds the average shard spent on writing output."""  
    write_ms_max: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('writeMsMax'), 'exclude': lambda f: f is None }})
    r"""Milliseconds the slowest shard spent on writing output."""  
    write_ratio_avg: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('writeRatioAvg'), 'exclude': lambda f: f is None }})
    r"""Relative amount of time the average shard spent on writing output."""  
    write_ratio_max: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('writeRatioMax'), 'exclude': lambda f: f is None }})
    r"""Relative amount of time the slowest shard spent on writing output."""  
    