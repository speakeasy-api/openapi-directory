/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class ReportCloudRecordingSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class ReportCloudRecordingRequest extends SpeakeasyBase {
  /**
   * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=from;dateTimeFormat=YYYY-MM-DD",
  })
  from: Date;

  /**
   * End date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=to;dateTimeFormat=YYYY-MM-DD",
  })
  to: Date;
}

export class ReportCloudRecording200ApplicationXMLCloudRecordingStorage extends SpeakeasyBase {
  /**
   * Date of the usage
   */
  @SpeakeasyMetadata()
  date?: Date;

  /**
   * Free storage
   */
  @SpeakeasyMetadata()
  freeUsage?: string;

  /**
   * Paid storage
   */
  @SpeakeasyMetadata()
  planUsage?: string;

  /**
   * Storage used on the date
   */
  @SpeakeasyMetadata()
  usage?: string;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * Cloud Recording Report Returned
 */
export class ReportCloudRecording200ApplicationXML extends SpeakeasyBase {
  /**
   * Array of cloud usage objects
   */
  @SpeakeasyMetadata({
    elemType: ReportCloudRecording200ApplicationXMLCloudRecordingStorage,
  })
  cloudRecordingStorage?: ReportCloudRecording200ApplicationXMLCloudRecordingStorage[];

  /**
   * Start date for this report
   */
  @SpeakeasyMetadata()
  from?: Date;

  /**
   * End date for this report
   */
  @SpeakeasyMetadata()
  to?: Date;
}

export class ReportCloudRecording200ApplicationJSONCloudRecordingStorage extends SpeakeasyBase {
  /**
   * Date of the usage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  date?: Date;

  /**
   * Free storage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "free_usage" })
  freeUsage?: string;

  /**
   * Paid storage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "plan_usage" })
  planUsage?: string;

  /**
   * Storage used on the date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "usage" })
  usage?: string;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * Cloud Recording Report Returned
 */
export class ReportCloudRecording200ApplicationJSON extends SpeakeasyBase {
  /**
   * Array of cloud usage objects
   */
  @SpeakeasyMetadata({
    elemType: ReportCloudRecording200ApplicationJSONCloudRecordingStorage,
  })
  @Expose({ name: "cloud_recording_storage" })
  @Type(() => ReportCloudRecording200ApplicationJSONCloudRecordingStorage)
  cloudRecordingStorage?: ReportCloudRecording200ApplicationJSONCloudRecordingStorage[];

  /**
   * Start date for this report
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  from?: Date;

  /**
   * End date for this report
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  to?: Date;
}

export class ReportCloudRecordingResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * Cloud Recording Report Returned
   */
  @SpeakeasyMetadata()
  reportCloudRecording200ApplicationJSONObject?: ReportCloudRecording200ApplicationJSON;
}
