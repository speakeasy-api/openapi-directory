/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ProductView - Product fields. Values are only set for fields requested explicitly in the request's search query.
 */
public class ProductView {
    /**
     * Aggregated destination status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aggregatedDestinationStatus")
    public ProductViewAggregatedDestinationStatusEnum aggregatedDestinationStatus;

    public ProductView withAggregatedDestinationStatus(ProductViewAggregatedDestinationStatusEnum aggregatedDestinationStatus) {
        this.aggregatedDestinationStatus = aggregatedDestinationStatus;
        return this;
    }
    
    /**
     * Availability of the product.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availability")
    public String availability;

    public ProductView withAvailability(String availability) {
        this.availability = availability;
        return this;
    }
    
    /**
     * Brand of the product.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("brand")
    public String brand;

    public ProductView withBrand(String brand) {
        this.brand = brand;
        return this;
    }
    
    /**
     * First level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categoryL1")
    public String categoryL1;

    public ProductView withCategoryL1(String categoryL1) {
        this.categoryL1 = categoryL1;
        return this;
    }
    
    /**
     * Second level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categoryL2")
    public String categoryL2;

    public ProductView withCategoryL2(String categoryL2) {
        this.categoryL2 = categoryL2;
        return this;
    }
    
    /**
     * Third level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categoryL3")
    public String categoryL3;

    public ProductView withCategoryL3(String categoryL3) {
        this.categoryL3 = categoryL3;
        return this;
    }
    
    /**
     * Fourth level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categoryL4")
    public String categoryL4;

    public ProductView withCategoryL4(String categoryL4) {
        this.categoryL4 = categoryL4;
        return this;
    }
    
    /**
     * Fifth level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categoryL5")
    public String categoryL5;

    public ProductView withCategoryL5(String categoryL5) {
        this.categoryL5 = categoryL5;
        return this;
    }
    
    /**
     * Channel of the product (online versus local).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("channel")
    public ProductViewChannelEnum channel;

    public ProductView withChannel(ProductViewChannelEnum channel) {
        this.channel = channel;
        return this;
    }
    
    /**
     * Condition of the product.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("condition")
    public String condition;

    public ProductView withCondition(String condition) {
        this.condition = condition;
        return this;
    }
    
    /**
     * The time the merchant created the product in timestamp seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTime")
    public String creationTime;

    public ProductView withCreationTime(String creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    /**
     * Product price currency code (for example, ISO 4217). Absent if product price is not available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currencyCode")
    public String currencyCode;

    public ProductView withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }
    
    /**
     * Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expirationDate")
    public Date expirationDate;

    public ProductView withExpirationDate(Date expirationDate) {
        this.expirationDate = expirationDate;
        return this;
    }
    
    /**
     * GTIN of the product.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gtin")
    public String[] gtin;

    public ProductView withGtin(String[] gtin) {
        this.gtin = gtin;
        return this;
    }
    
    /**
     * The REST ID of the product, in the form of channel:contentLanguage:targetCountry:offerId. Content API methods that operate on products take this as their productId parameter. Should always be included in the SELECT clause.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public ProductView withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Item group ID provided by the merchant for grouping variants together.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemGroupId")
    public String itemGroupId;

    public ProductView withItemGroupId(String itemGroupId) {
        this.itemGroupId = itemGroupId;
        return this;
    }
    
    /**
     * List of item issues for the product.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("itemIssues")
    public ProductViewItemIssue[] itemIssues;

    public ProductView withItemIssues(ProductViewItemIssue[] itemIssues) {
        this.itemIssues = itemIssues;
        return this;
    }
    
    /**
     * Language code of the product in BCP 47 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("languageCode")
    public String languageCode;

    public ProductView withLanguageCode(String languageCode) {
        this.languageCode = languageCode;
        return this;
    }
    
    /**
     * Merchant-provided id of the product.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offerId")
    public String offerId;

    public ProductView withOfferId(String offerId) {
        this.offerId = offerId;
        return this;
    }
    
    /**
     * Product price specified as micros (1 millionth of a standard unit, 1 USD = 1000000 micros) in the product currency. Absent in case the information about the price of the product is not available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priceMicros")
    public String priceMicros;

    public ProductView withPriceMicros(String priceMicros) {
        this.priceMicros = priceMicros;
        return this;
    }
    
    /**
     * First level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productTypeL1")
    public String productTypeL1;

    public ProductView withProductTypeL1(String productTypeL1) {
        this.productTypeL1 = productTypeL1;
        return this;
    }
    
    /**
     * Second level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productTypeL2")
    public String productTypeL2;

    public ProductView withProductTypeL2(String productTypeL2) {
        this.productTypeL2 = productTypeL2;
        return this;
    }
    
    /**
     * Third level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productTypeL3")
    public String productTypeL3;

    public ProductView withProductTypeL3(String productTypeL3) {
        this.productTypeL3 = productTypeL3;
        return this;
    }
    
    /**
     * Fourth level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productTypeL4")
    public String productTypeL4;

    public ProductView withProductTypeL4(String productTypeL4) {
        this.productTypeL4 = productTypeL4;
        return this;
    }
    
    /**
     * Fifth level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productTypeL5")
    public String productTypeL5;

    public ProductView withProductTypeL5(String productTypeL5) {
        this.productTypeL5 = productTypeL5;
        return this;
    }
    
    /**
     * The normalized shipping label specified in the feed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shippingLabel")
    public String shippingLabel;

    public ProductView withShippingLabel(String shippingLabel) {
        this.shippingLabel = shippingLabel;
        return this;
    }
    
    /**
     * Title of the product.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public ProductView withTitle(String title) {
        this.title = title;
        return this;
    }
    
    public ProductView(){}
}
