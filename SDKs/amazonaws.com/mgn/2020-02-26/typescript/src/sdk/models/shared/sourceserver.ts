/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataReplicationInfo } from "./datareplicationinfo";
import { LaunchedInstance } from "./launchedinstance";
import { LifeCycle } from "./lifecycle";
import { ReplicationTypeEnum } from "./replicationtypeenum";
import { SourceProperties } from "./sourceproperties";
import { Expose, Type } from "class-transformer";

/**
 * Success
 */
export class SourceServer extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "applicationID" })
  applicationID?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dataReplicationInfo" })
  @Type(() => DataReplicationInfo)
  dataReplicationInfo?: DataReplicationInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "fqdnForActionFramework" })
  fqdnForActionFramework?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isArchived" })
  isArchived?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "launchedInstance" })
  @Type(() => LaunchedInstance)
  launchedInstance?: LaunchedInstance;

  @SpeakeasyMetadata()
  @Expose({ name: "lifeCycle" })
  @Type(() => LifeCycle)
  lifeCycle?: LifeCycle;

  @SpeakeasyMetadata()
  @Expose({ name: "replicationType" })
  replicationType?: ReplicationTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceProperties" })
  @Type(() => SourceProperties)
  sourceProperties?: SourceProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceServerID" })
  sourceServerID?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "userProvidedID" })
  userProvidedID?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "vcenterClientID" })
  vcenterClientID?: string;
}
