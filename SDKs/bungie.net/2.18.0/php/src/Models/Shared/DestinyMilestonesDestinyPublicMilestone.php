<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DestinyMilestonesDestinyPublicMilestone - Information about milestones, presented in a character state-agnostic manner. Combine this data with DestinyMilestoneDefinition to get a full picture of the milestone, which is basically a checklist of things to do in the game. Think of this as GetPublicAdvisors 3.0, for those who used the Destiny 1 API.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DestinyMilestonesDestinyPublicMilestone
{
    /**
     * $activities
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DestinyMilestonesDestinyPublicMilestoneChallengeActivity> $activities
     */
	
    public ?array $activities = null;
    
    /**
     * A milestone not need have even a single quest, but if there are active quests they will be returned here.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DestinyMilestonesDestinyPublicMilestoneQuest> $availableQuests
     */
	
    public ?array $availableQuests = null;
    
    /**
     * If known, this is the date when the Milestone will expire/recycle/end.
     * 
     * @var ?\DateTime $endDate
     */
	
    public ?\DateTime $endDate = null;
    
    /**
     * The hash identifier for the milestone. Use it to look up the DestinyMilestoneDefinition for static data about the Milestone.
     * 
     * @var ?int $milestoneHash
     */
	
    public ?int $milestoneHash = null;
    
    /**
     * Used for ordering milestones in a display to match how we order them in BNet. May pull from static data, or possibly in the future from dynamic information.
     * 
     * @var ?int $order
     */
	
    public ?int $order = null;
    
    /**
     * If known, this is the date when the Milestone started/became active.
     * 
     * @var ?\DateTime $startDate
     */
	
    public ?\DateTime $startDate = null;
    
    /**
     * Sometimes milestones - or activities active in milestones - will have relevant vendors. These are the vendors that are currently relevant.
     * 
     * Deprecated, already, for the sake of the new "vendors" property that has more data. What was I thinking.
     * 
     * @var ?array<int> $vendorHashes
     */
	
    public ?array $vendorHashes = null;
    
    /**
     * This is why we can't have nice things. This is the ordered list of vendors to be shown that relate to this milestone, potentially along with other interesting data.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DestinyMilestonesDestinyPublicMilestoneVendor> $vendors
     */
	
    public ?array $vendors = null;
    
	public function __construct()
	{
		$this->activities = null;
		$this->availableQuests = null;
		$this->endDate = null;
		$this->milestoneHash = null;
		$this->order = null;
		$this->startDate = null;
		$this->vendorHashes = null;
		$this->vendors = null;
	}
}
