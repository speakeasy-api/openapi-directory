/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IamPolicyAnalysis - An analysis message to group the query and results.
 */
public class IamPolicyAnalysis {
    /**
     * IAM policy analysis query message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("analysisQuery")
    public IamPolicyAnalysisQuery analysisQuery;

    public IamPolicyAnalysis withAnalysisQuery(IamPolicyAnalysisQuery analysisQuery) {
        this.analysisQuery = analysisQuery;
        return this;
    }
    
    /**
     * A list of IamPolicyAnalysisResult that matches the analysis query, or empty if no result is found.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("analysisResults")
    public IamPolicyAnalysisResult[] analysisResults;

    public IamPolicyAnalysis withAnalysisResults(IamPolicyAnalysisResult[] analysisResults) {
        this.analysisResults = analysisResults;
        return this;
    }
    
    /**
     * Represents whether all entries in the analysis_results have been fully explored to answer the query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullyExplored")
    public Boolean fullyExplored;

    public IamPolicyAnalysis withFullyExplored(Boolean fullyExplored) {
        this.fullyExplored = fullyExplored;
        return this;
    }
    
    public IamPolicyAnalysis(){}
}
