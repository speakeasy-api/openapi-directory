// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SpotInstanceInterruptionBehaviorEnum string

const (
	SpotInstanceInterruptionBehaviorEnumHibernate SpotInstanceInterruptionBehaviorEnum = "hibernate"
	SpotInstanceInterruptionBehaviorEnumStop      SpotInstanceInterruptionBehaviorEnum = "stop"
	SpotInstanceInterruptionBehaviorEnumTerminate SpotInstanceInterruptionBehaviorEnum = "terminate"
)

func (e SpotInstanceInterruptionBehaviorEnum) ToPointer() *SpotInstanceInterruptionBehaviorEnum {
	return &e
}

func (e *SpotInstanceInterruptionBehaviorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "hibernate":
		fallthrough
	case "stop":
		fallthrough
	case "terminate":
		*e = SpotInstanceInterruptionBehaviorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SpotInstanceInterruptionBehaviorEnum: %v", v)
	}
}
