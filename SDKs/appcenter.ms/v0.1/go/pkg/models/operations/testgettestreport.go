// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type TestGetTestReportSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type TestGetTestReportRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
	// The ID of the test run
	TestRunID string `pathParam:"style=simple,explode=false,name=test_run_id"`
}

type TestGetTestReport200ApplicationJSONDeviceLogs struct {
	AppiumLog        *string `json:"appium_log,omitempty"`
	DeviceLog        *string `json:"device_log,omitempty"`
	DeviceSnapshotID *string `json:"device_snapshot_id,omitempty"`
	TestLog          *string `json:"test_log,omitempty"`
}

type TestGetTestReport200ApplicationJSONFeaturesTestsRunsStepsStepExecutions struct {
	DeviceSnapshotID *string  `json:"device_snapshot_id,omitempty"`
	Status           *string  `json:"status,omitempty"`
	Timestamp        *float64 `json:"timestamp,omitempty"`
}

type TestGetTestReport200ApplicationJSONFeaturesTestsRunsSteps struct {
	Failed         *float64                                                                  `json:"failed,omitempty"`
	ID             *string                                                                   `json:"id,omitempty"`
	Skipped        *float64                                                                  `json:"skipped,omitempty"`
	StepExecutions []TestGetTestReport200ApplicationJSONFeaturesTestsRunsStepsStepExecutions `json:"stepExecutions,omitempty"`
	StepName       *string                                                                   `json:"stepName,omitempty"`
	StepReportURL  *string                                                                   `json:"step_report_url,omitempty"`
}

type TestGetTestReport200ApplicationJSONFeaturesTestsRuns struct {
	Failed    *float64                                                    `json:"failed,omitempty"`
	ID        *string                                                     `json:"id,omitempty"`
	Number    *float64                                                    `json:"number,omitempty"`
	ReportURL *string                                                     `json:"report_url,omitempty"`
	Skipped   *float64                                                    `json:"skipped,omitempty"`
	Steps     []TestGetTestReport200ApplicationJSONFeaturesTestsRunsSteps `json:"steps,omitempty"`
}

type TestGetTestReport200ApplicationJSONFeaturesTests struct {
	PeakDuration *float64                                               `json:"peakDuration,omitempty"`
	PeakMemory   *float64                                               `json:"peakMemory,omitempty"`
	Runs         []TestGetTestReport200ApplicationJSONFeaturesTestsRuns `json:"runs,omitempty"`
	TestName     *string                                                `json:"testName,omitempty"`
}

type TestGetTestReport200ApplicationJSONFeatures struct {
	Failed       *float64                                           `json:"failed,omitempty"`
	Name         *string                                            `json:"name,omitempty"`
	PeakDuration *float64                                           `json:"peakDuration,omitempty"`
	PeakMemory   *float64                                           `json:"peakMemory,omitempty"`
	Skipped      *float64                                           `json:"skipped,omitempty"`
	Tests        []TestGetTestReport200ApplicationJSONFeaturesTests `json:"tests,omitempty"`
}

type TestGetTestReport200ApplicationJSONSnapshotFatalErrors struct {
	DeviceSnapshotID *string `json:"device_snapshot_id,omitempty"`
	ErrorMessage     *string `json:"error_message,omitempty"`
	ErrorTitle       *string `json:"error_title,omitempty"`
}

type TestGetTestReport200ApplicationJSONStats struct {
	Artifacts          map[string]string `json:"artifacts,omitempty"`
	Devices            float64           `json:"devices"`
	DevicesFailed      float64           `json:"devices_failed"`
	DevicesFinished    float64           `json:"devices_finished"`
	DevicesNotRunned   float64           `json:"devices_not_runned"`
	DevicesSkipped     float64           `json:"devices_skipped"`
	Failed             float64           `json:"failed"`
	Filesize           float64           `json:"filesize"`
	Os                 float64           `json:"os"`
	Passed             float64           `json:"passed"`
	Skipped            float64           `json:"skipped"`
	StepCount          float64           `json:"step_count"`
	Total              float64           `json:"total"`
	TotalDeviceMinutes float64           `json:"totalDeviceMinutes"`
}

// TestGetTestReport200ApplicationJSON - OK
type TestGetTestReport200ApplicationJSON struct {
	AppUploadID             string                                                   `json:"app_upload_id"`
	Date                    string                                                   `json:"date"`
	DateFinished            string                                                   `json:"date_finished"`
	DeviceLogs              []TestGetTestReport200ApplicationJSONDeviceLogs          `json:"device_logs"`
	ErrorMessage            *string                                                  `json:"errorMessage,omitempty"`
	Features                []TestGetTestReport200ApplicationJSONFeatures            `json:"features"`
	FinishedDeviceSnapshots []string                                                 `json:"finished_device_snapshots"`
	ID                      string                                                   `json:"id"`
	Platform                string                                                   `json:"platform"`
	Revision                float64                                                  `json:"revision"`
	SchemaVersion           float64                                                  `json:"schema_version"`
	SnapshotFatalErrors     []TestGetTestReport200ApplicationJSONSnapshotFatalErrors `json:"snapshot_fatal_errors,omitempty"`
	Stats                   TestGetTestReport200ApplicationJSONStats                 `json:"stats"`
	TestType                string                                                   `json:"testType"`
}

type TestGetTestReportResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	TestGetTestReport200ApplicationJSONObject *TestGetTestReport200ApplicationJSON
}
