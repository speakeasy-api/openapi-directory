/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DatastorePartitions } from "./datastorepartitions";
import { DatastoreStatusEnum } from "./datastorestatusenum";
import { DatastoreStorageSummary } from "./datastorestoragesummary";
import { FileFormatTypeEnum } from "./fileformattypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A summary of information about a data store.
 */
export class DatastoreSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "datastoreName" })
  datastoreName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "datastorePartitions" })
  @Type(() => DatastorePartitions)
  datastorePartitions?: DatastorePartitions;

  @SpeakeasyMetadata()
  @Expose({ name: "datastoreStorage" })
  @Type(() => DatastoreStorageSummary)
  datastoreStorage?: DatastoreStorageSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "fileFormatType" })
  fileFormatType?: FileFormatTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "lastMessageArrivalTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastMessageArrivalTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: DatastoreStatusEnum;
}
