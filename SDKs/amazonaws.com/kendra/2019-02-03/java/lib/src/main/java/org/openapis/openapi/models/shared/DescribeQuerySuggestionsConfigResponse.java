/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DescribeQuerySuggestionsConfigResponse - Success
 */
public class DescribeQuerySuggestionsConfigResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IncludeQueriesWithoutUserInformation")
    public Boolean includeQueriesWithoutUserInformation;

    public DescribeQuerySuggestionsConfigResponse withIncludeQueriesWithoutUserInformation(Boolean includeQueriesWithoutUserInformation) {
        this.includeQueriesWithoutUserInformation = includeQueriesWithoutUserInformation;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastClearTime")
    public OffsetDateTime lastClearTime;

    public DescribeQuerySuggestionsConfigResponse withLastClearTime(OffsetDateTime lastClearTime) {
        this.lastClearTime = lastClearTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastSuggestionsBuildTime")
    public OffsetDateTime lastSuggestionsBuildTime;

    public DescribeQuerySuggestionsConfigResponse withLastSuggestionsBuildTime(OffsetDateTime lastSuggestionsBuildTime) {
        this.lastSuggestionsBuildTime = lastSuggestionsBuildTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MinimumNumberOfQueryingUsers")
    public Long minimumNumberOfQueryingUsers;

    public DescribeQuerySuggestionsConfigResponse withMinimumNumberOfQueryingUsers(Long minimumNumberOfQueryingUsers) {
        this.minimumNumberOfQueryingUsers = minimumNumberOfQueryingUsers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MinimumQueryCount")
    public Long minimumQueryCount;

    public DescribeQuerySuggestionsConfigResponse withMinimumQueryCount(Long minimumQueryCount) {
        this.minimumQueryCount = minimumQueryCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Mode")
    public ModeEnum mode;

    public DescribeQuerySuggestionsConfigResponse withMode(ModeEnum mode) {
        this.mode = mode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QueryLogLookBackWindowInDays")
    public Long queryLogLookBackWindowInDays;

    public DescribeQuerySuggestionsConfigResponse withQueryLogLookBackWindowInDays(Long queryLogLookBackWindowInDays) {
        this.queryLogLookBackWindowInDays = queryLogLookBackWindowInDays;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public QuerySuggestionsStatusEnum status;

    public DescribeQuerySuggestionsConfigResponse withStatus(QuerySuggestionsStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalSuggestionsCount")
    public Long totalSuggestionsCount;

    public DescribeQuerySuggestionsConfigResponse withTotalSuggestionsCount(Long totalSuggestionsCount) {
        this.totalSuggestionsCount = totalSuggestionsCount;
        return this;
    }
    
    public DescribeQuerySuggestionsConfigResponse(){}
}
