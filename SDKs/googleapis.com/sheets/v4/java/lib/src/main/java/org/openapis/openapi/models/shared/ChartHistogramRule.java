/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ChartHistogramRule - Allows you to organize numeric values in a source data column into buckets of constant size.
 */
public class ChartHistogramRule {
    /**
     * The size of the buckets that are created. Must be positive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("intervalSize")
    public Double intervalSize;
    public ChartHistogramRule withIntervalSize(Double intervalSize) {
        this.intervalSize = intervalSize;
        return this;
    }
    
    /**
     * The maximum value at which items are placed into buckets. Values greater than the maximum are grouped into a single bucket. If omitted, it is determined by the maximum item value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxValue")
    public Double maxValue;
    public ChartHistogramRule withMaxValue(Double maxValue) {
        this.maxValue = maxValue;
        return this;
    }
    
    /**
     * The minimum value at which items are placed into buckets. Values that are less than the minimum are grouped into a single bucket. If omitted, it is determined by the minimum item value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minValue")
    public Double minValue;
    public ChartHistogramRule withMinValue(Double minValue) {
        this.minValue = minValue;
        return this;
    }
    
}
