<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Transaction - Success
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Transaction
{
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $amount = null;
    
    /**
     * The amount of the transaction in the user's base currency.
     * 
     * @var ?float $amountInBaseCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount_in_base_currency')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $amountInBaseCurrency = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('category')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Category')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Category $category = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('cheque_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $chequeNumber = null;
    
    /**
     * The closing balance of the account at the transaction.
     * 
     * @var ?float $closingBalance
     */
	#[\JMS\Serializer\Annotation\SerializedName('closing_balance')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $closingBalance = null;
    
    /**
     * When the transaction was created.
     * 
     * @var ?string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * The date the transaction took place.
     * 
     * @var ?string $date
     */
	#[\JMS\Serializer\Annotation\SerializedName('date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $date = null;
    
    /**
     * The unique identifier of the transaction.
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * Whether the transaction is a transfer.
     * 
     * @var ?bool $isTransfer
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_transfer')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isTransfer = null;
    
    /**
     * $labels
     * 
     * @var ?array<string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('memo')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $memo = null;
    
    /**
     * Whether the transaction needs to be reviewed.
     * 
     * @var ?bool $needsReview
     */
	#[\JMS\Serializer\Annotation\SerializedName('needs_review')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $needsReview = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('note')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $note = null;
    
    /**
     * The payee the transaction was created with.
     * 
     * @var ?string $originalPayee
     */
	#[\JMS\Serializer\Annotation\SerializedName('original_payee')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $originalPayee = null;
    
    /**
     * The payee/merchant of the transaction.
     * 
     * @var ?string $payee
     */
	#[\JMS\Serializer\Annotation\SerializedName('payee')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payee = null;
    
    /**
     * The status of the transaction. Pending transactions are temporary and may be superseded later by their posted counterparts, which are permanent.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TransactionStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TransactionStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TransactionStatusEnum $status = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('transaction_account')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TransactionAccount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TransactionAccount $transactionAccount = null;
    
    /**
     * Whether the transaction is a debit or a credit
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TransactionTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TransactionTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TransactionTypeEnum $type = null;
    
    /**
     * When the transaction was last updated.
     * 
     * @var ?string $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedAt = null;
    
    /**
     * Where the transaction came from.
     * 
     * @var ?string $uploadSource
     */
	#[\JMS\Serializer\Annotation\SerializedName('upload_source')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uploadSource = null;
    
	public function __construct()
	{
		$this->amount = null;
		$this->amountInBaseCurrency = null;
		$this->category = null;
		$this->chequeNumber = null;
		$this->closingBalance = null;
		$this->createdAt = null;
		$this->date = null;
		$this->id = null;
		$this->isTransfer = null;
		$this->labels = null;
		$this->memo = null;
		$this->needsReview = null;
		$this->note = null;
		$this->originalPayee = null;
		$this->payee = null;
		$this->status = null;
		$this->transactionAccount = null;
		$this->type = null;
		$this->updatedAt = null;
		$this->uploadSource = null;
	}
}
