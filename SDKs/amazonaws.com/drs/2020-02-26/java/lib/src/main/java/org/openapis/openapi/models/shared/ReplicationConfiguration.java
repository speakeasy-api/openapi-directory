/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ReplicationConfiguration - Success
 */
public class ReplicationConfiguration {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("associateDefaultSecurityGroup")
    public Boolean associateDefaultSecurityGroup;

    public ReplicationConfiguration withAssociateDefaultSecurityGroup(Boolean associateDefaultSecurityGroup) {
        this.associateDefaultSecurityGroup = associateDefaultSecurityGroup;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoReplicateNewDisks")
    public Boolean autoReplicateNewDisks;

    public ReplicationConfiguration withAutoReplicateNewDisks(Boolean autoReplicateNewDisks) {
        this.autoReplicateNewDisks = autoReplicateNewDisks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bandwidthThrottling")
    public Long bandwidthThrottling;

    public ReplicationConfiguration withBandwidthThrottling(Long bandwidthThrottling) {
        this.bandwidthThrottling = bandwidthThrottling;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createPublicIP")
    public Boolean createPublicIP;

    public ReplicationConfiguration withCreatePublicIP(Boolean createPublicIP) {
        this.createPublicIP = createPublicIP;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataPlaneRouting")
    public ReplicationConfigurationDataPlaneRoutingEnum dataPlaneRouting;

    public ReplicationConfiguration withDataPlaneRouting(ReplicationConfigurationDataPlaneRoutingEnum dataPlaneRouting) {
        this.dataPlaneRouting = dataPlaneRouting;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultLargeStagingDiskType")
    public ReplicationConfigurationDefaultLargeStagingDiskTypeEnum defaultLargeStagingDiskType;

    public ReplicationConfiguration withDefaultLargeStagingDiskType(ReplicationConfigurationDefaultLargeStagingDiskTypeEnum defaultLargeStagingDiskType) {
        this.defaultLargeStagingDiskType = defaultLargeStagingDiskType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ebsEncryption")
    public ReplicationConfigurationEbsEncryptionEnum ebsEncryption;

    public ReplicationConfiguration withEbsEncryption(ReplicationConfigurationEbsEncryptionEnum ebsEncryption) {
        this.ebsEncryption = ebsEncryption;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ebsEncryptionKeyArn")
    public String ebsEncryptionKeyArn;

    public ReplicationConfiguration withEbsEncryptionKeyArn(String ebsEncryptionKeyArn) {
        this.ebsEncryptionKeyArn = ebsEncryptionKeyArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public ReplicationConfiguration withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pitPolicy")
    public PITPolicyRule[] pitPolicy;

    public ReplicationConfiguration withPitPolicy(PITPolicyRule[] pitPolicy) {
        this.pitPolicy = pitPolicy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replicatedDisks")
    public ReplicationConfigurationReplicatedDisk[] replicatedDisks;

    public ReplicationConfiguration withReplicatedDisks(ReplicationConfigurationReplicatedDisk[] replicatedDisks) {
        this.replicatedDisks = replicatedDisks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replicationServerInstanceType")
    public String replicationServerInstanceType;

    public ReplicationConfiguration withReplicationServerInstanceType(String replicationServerInstanceType) {
        this.replicationServerInstanceType = replicationServerInstanceType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("replicationServersSecurityGroupsIDs")
    public String[] replicationServersSecurityGroupsIDs;

    public ReplicationConfiguration withReplicationServersSecurityGroupsIDs(String[] replicationServersSecurityGroupsIDs) {
        this.replicationServersSecurityGroupsIDs = replicationServersSecurityGroupsIDs;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceServerID")
    public String sourceServerID;

    public ReplicationConfiguration withSourceServerID(String sourceServerID) {
        this.sourceServerID = sourceServerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stagingAreaSubnetId")
    public String stagingAreaSubnetId;

    public ReplicationConfiguration withStagingAreaSubnetId(String stagingAreaSubnetId) {
        this.stagingAreaSubnetId = stagingAreaSubnetId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stagingAreaTags")
    public java.util.Map<String, String> stagingAreaTags;

    public ReplicationConfiguration withStagingAreaTags(java.util.Map<String, String> stagingAreaTags) {
        this.stagingAreaTags = stagingAreaTags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("useDedicatedReplicationServer")
    public Boolean useDedicatedReplicationServer;

    public ReplicationConfiguration withUseDedicatedReplicationServer(Boolean useDedicatedReplicationServer) {
        this.useDedicatedReplicationServer = useDedicatedReplicationServer;
        return this;
    }
    
    public ReplicationConfiguration(){}
}
