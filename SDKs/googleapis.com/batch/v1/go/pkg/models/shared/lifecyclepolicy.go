// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LifecyclePolicyActionEnum - Action to execute when ActionCondition is true. When RETRY_TASK is specified, we will retry failed tasks if we notice any exit code match and fail tasks if no match is found. Likewise, when FAIL_TASK is specified, we will fail tasks if we notice any exit code match and retry tasks if no match is found.
type LifecyclePolicyActionEnum string

const (
	LifecyclePolicyActionEnumActionUnspecified LifecyclePolicyActionEnum = "ACTION_UNSPECIFIED"
	LifecyclePolicyActionEnumRetryTask         LifecyclePolicyActionEnum = "RETRY_TASK"
	LifecyclePolicyActionEnumFailTask          LifecyclePolicyActionEnum = "FAIL_TASK"
)

func (e LifecyclePolicyActionEnum) ToPointer() *LifecyclePolicyActionEnum {
	return &e
}

func (e *LifecyclePolicyActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTION_UNSPECIFIED":
		fallthrough
	case "RETRY_TASK":
		fallthrough
	case "FAIL_TASK":
		*e = LifecyclePolicyActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LifecyclePolicyActionEnum: %v", v)
	}
}

// LifecyclePolicy - LifecyclePolicy describes how to deal with task failures based on different conditions.
type LifecyclePolicy struct {
	// Action to execute when ActionCondition is true. When RETRY_TASK is specified, we will retry failed tasks if we notice any exit code match and fail tasks if no match is found. Likewise, when FAIL_TASK is specified, we will fail tasks if we notice any exit code match and retry tasks if no match is found.
	Action *LifecyclePolicyActionEnum `json:"action,omitempty"`
	// Conditions for actions to deal with task failures.
	ActionCondition *ActionCondition `json:"actionCondition,omitempty"`
}
