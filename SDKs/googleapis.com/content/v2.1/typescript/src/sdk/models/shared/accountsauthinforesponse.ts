/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountIdentifier } from "./accountidentifier";
import { Expose, Type } from "class-transformer";

/**
 * Successful response
 */
export class AccountsAuthInfoResponse extends SpeakeasyBase {
  /**
   * The account identifiers corresponding to the authenticated user. - For an individual account: only the merchant ID is defined - For an aggregator: only the aggregator ID is defined - For a subaccount of an MCA: both the merchant ID and the aggregator ID are defined.
   */
  @SpeakeasyMetadata({ elemType: AccountIdentifier })
  @Expose({ name: "accountIdentifiers" })
  @Type(() => AccountIdentifier)
  accountIdentifiers?: AccountIdentifier[];

  /**
   * Identifies what kind of resource this is. Value: the fixed string "`content#accountsAuthInfoResponse`".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;
}
