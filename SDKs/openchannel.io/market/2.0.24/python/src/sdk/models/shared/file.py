"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import hash as shared_hash
from ..shared import virusscan as shared_virusscan
from enum import Enum
from typing import Optional

class FileMimeCheckEnum(str, Enum):
    r"""The mime type validation check to see if the extension of this file matches it's content. Can be PASSED or FAILED"""
    PASSED = 'PASSED'
    FAILED = 'FAILED'


@dataclasses.dataclass
class File:
    r"""The file ids of the uploaded file"""
    
    file_id: str = dataclasses.field()
    r"""The id of the uploaded file"""  
    name: str = dataclasses.field()
    r"""The name of the uploaded file"""  
    size: int = dataclasses.field()
    r"""The number of bytes in the uploaded file"""  
    upload_date: int = dataclasses.field()
    r"""The time in milliseconds when the file was uploaded"""  
    content_type: Optional[str] = dataclasses.field(default=None)
    r"""The internet media type of the file"""  
    file_url: Optional[str] = dataclasses.field(default=None)
    r"""The path where the file can be located."""  
    hash: Optional[shared_hash.Hash] = dataclasses.field(default=None)
    r"""The hashes requested for the file."""  
    mime_check: Optional[FileMimeCheckEnum] = dataclasses.field(default=None)
    r"""The mime type validation check to see if the extension of this file matches it's content. Can be PASSED or FAILED"""  
    virus_scan: Optional[shared_virusscan.VirusScan] = dataclasses.field(default=None)
    r"""The virus scan results for this file"""  
    