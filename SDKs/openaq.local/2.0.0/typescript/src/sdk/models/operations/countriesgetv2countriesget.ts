/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * An enumeration.
 */
export enum CountriesGetV2CountriesGetOrderByCountriesOrderEnum {
  Country = "country",
  FirstUpdated = "firstUpdated",
  LastUpdated = "lastUpdated",
  Locations = "locations",
  Count = "count",
}

/**
 * An enumeration.
 */
export enum CountriesGetV2CountriesGetSortSortEnum {
  Asc = "asc",
  Desc = "desc",
}

export class CountriesGetV2CountriesGetRequest extends SpeakeasyBase {
  /**
   *
   * @remarks
   *         Limit results by a certain country using two letter country code.
   *         (ex. ?country=US or ?country=US&country=MX)
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=country",
  })
  country?: string[];

  /**
   *
   * @remarks
   *         Limit results by a certain country using two letter country code.
   *         (ex. /US)
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=country_id",
  })
  countryId?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: number;

  /**
   * An enumeration.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=order_by",
  })
  orderBy?: CountriesGetV2CountriesGetOrderByCountriesOrderEnum;

  /**
   * Paginate through results.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Define sort order.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: CountriesGetV2CountriesGetSortSortEnum;
}

export class CountriesGetV2CountriesGetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Validation Error
   */
  @SpeakeasyMetadata()
  httpValidationError?: shared.HTTPValidationError;

  /**
   * Successful Response
   */
  @SpeakeasyMetadata()
  openAQCountriesResult?: shared.OpenAQCountriesResult;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
