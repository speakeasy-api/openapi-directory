/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateMapRequestBody {
    /**
     * Specifies the map tile style selected from an available provider.
     */
    @JsonProperty("Configuration")
    public CreateMapRequestBodyConfiguration configuration;

    public CreateMapRequestBody withConfiguration(CreateMapRequestBodyConfiguration configuration) {
        this.configuration = configuration;
        return this;
    }
    
    /**
     * An optional description for the map resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;

    public CreateMapRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * &lt;p&gt;The name for the map resource.&lt;/p&gt; &lt;p&gt;Requirements:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Must contain only alphanumeric characters (A\u2013Z, a\u2013z, 0\u20139), hyphens (-), periods (.), and underscores (_). &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Must be a unique map resource name. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;No spaces allowed. For example, &lt;code&gt;ExampleMap&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonProperty("MapName")
    public String mapName;

    public CreateMapRequestBody withMapName(String mapName) {
        this.mapName = mapName;
        return this;
    }
    
    /**
     * No longer used. If included, the only allowed value is &lt;code&gt;RequestBasedUsage&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PricingPlan")
    public CreateMapRequestBodyPricingPlanEnum pricingPlan;

    public CreateMapRequestBody withPricingPlan(CreateMapRequestBodyPricingPlanEnum pricingPlan) {
        this.pricingPlan = pricingPlan;
        return this;
    }
    
    /**
     * &lt;p&gt;Applies one or more tags to the map resource. A tag is a key-value pair helps manage, identify, search, and filter your resources by labelling them.&lt;/p&gt; &lt;p&gt;Format: &lt;code&gt;"key" : "value"&lt;/code&gt; &lt;/p&gt; &lt;p&gt;Restrictions:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Maximum 50 tags per resource&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Each resource tag must be unique with a maximum of one value.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Maximum key length: 128 Unicode characters in UTF-8&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Maximum value length: 256 Unicode characters in UTF-8&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Can use alphanumeric characters (A\u2013Z, a\u2013z, 0\u20139), and the following characters: + - = . _ : / @. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;Cannot use "aws:" as a prefix for a key.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public java.util.Map<String, String> tags;

    public CreateMapRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    public CreateMapRequestBody(@JsonProperty("Configuration") CreateMapRequestBodyConfiguration configuration, @JsonProperty("MapName") String mapName) {
        this.configuration = configuration;
        this.mapName = mapName;
  }
}
