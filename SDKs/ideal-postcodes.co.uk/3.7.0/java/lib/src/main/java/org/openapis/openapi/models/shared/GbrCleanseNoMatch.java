/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

public class GbrCleanseNoMatch {
    @JsonProperty("confidence")
    public GbrCleanseNoMatchConfidenceEnum confidence;
    public GbrCleanseNoMatch withConfidence(GbrCleanseNoMatchConfidenceEnum confidence) {
        this.confidence = confidence;
        return this;
    }
    
    @JsonProperty("count")
    public GbrCleanseNoMatchCountEnum count;
    public GbrCleanseNoMatch withCount(GbrCleanseNoMatchCountEnum count) {
        this.count = count;
        return this;
    }
    
    @JsonProperty("fit")
    public GbrCleanseNoMatchFitEnum fit;
    public GbrCleanseNoMatch withFit(GbrCleanseNoMatchFitEnum fit) {
        this.fit = fit;
        return this;
    }
    
    @JsonProperty("locality_match")
    public GbrCleanseNoMatchLocalityMatchEnum localityMatch;
    public GbrCleanseNoMatch withLocalityMatch(GbrCleanseNoMatchLocalityMatchEnum localityMatch) {
        this.localityMatch = localityMatch;
        return this;
    }
    
    /**
     * Nearest matching address
     */
    @JsonProperty("match")
    public GbrCleanseNoMatchMatchEnum match;
    public GbrCleanseNoMatch withMatch(GbrCleanseNoMatchMatchEnum match) {
        this.match = match;
        return this;
    }
    
    @JsonProperty("organisation_match")
    public GbrCleanseNoMatchOrganisationMatchEnum organisationMatch;
    public GbrCleanseNoMatch withOrganisationMatch(GbrCleanseNoMatchOrganisationMatchEnum organisationMatch) {
        this.organisationMatch = organisationMatch;
        return this;
    }
    
    @JsonProperty("post_town_match")
    public GbrCleanseNoMatchPostTownMatchEnum postTownMatch;
    public GbrCleanseNoMatch withPostTownMatch(GbrCleanseNoMatchPostTownMatchEnum postTownMatch) {
        this.postTownMatch = postTownMatch;
        return this;
    }
    
    @JsonProperty("postcode_match")
    public GbrCleanseNoMatchPostcodeMatchEnum postcodeMatch;
    public GbrCleanseNoMatch withPostcodeMatch(GbrCleanseNoMatchPostcodeMatchEnum postcodeMatch) {
        this.postcodeMatch = postcodeMatch;
        return this;
    }
    
    @JsonProperty("premise_match")
    public GbrCleanseNoMatchPremiseMatchEnum premiseMatch;
    public GbrCleanseNoMatch withPremiseMatch(GbrCleanseNoMatchPremiseMatchEnum premiseMatch) {
        this.premiseMatch = premiseMatch;
        return this;
    }
    
    /**
     * Originally submitted query
     */
    @JsonProperty("query")
    public String query;
    public GbrCleanseNoMatch withQuery(String query) {
        this.query = query;
        return this;
    }
    
    @JsonProperty("thoroughfare_match")
    public GbrCleanseNoMatchThoroughfareMatchEnum thoroughfareMatch;
    public GbrCleanseNoMatch withThoroughfareMatch(GbrCleanseNoMatchThoroughfareMatchEnum thoroughfareMatch) {
        this.thoroughfareMatch = thoroughfareMatch;
        return this;
    }
    
}
