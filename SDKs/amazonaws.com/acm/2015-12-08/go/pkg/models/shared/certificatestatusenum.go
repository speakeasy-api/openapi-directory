// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CertificateStatusEnum string

const (
	CertificateStatusEnumPendingValidation  CertificateStatusEnum = "PENDING_VALIDATION"
	CertificateStatusEnumIssued             CertificateStatusEnum = "ISSUED"
	CertificateStatusEnumInactive           CertificateStatusEnum = "INACTIVE"
	CertificateStatusEnumExpired            CertificateStatusEnum = "EXPIRED"
	CertificateStatusEnumValidationTimedOut CertificateStatusEnum = "VALIDATION_TIMED_OUT"
	CertificateStatusEnumRevoked            CertificateStatusEnum = "REVOKED"
	CertificateStatusEnumFailed             CertificateStatusEnum = "FAILED"
)

func (e CertificateStatusEnum) ToPointer() *CertificateStatusEnum {
	return &e
}

func (e *CertificateStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING_VALIDATION":
		fallthrough
	case "ISSUED":
		fallthrough
	case "INACTIVE":
		fallthrough
	case "EXPIRED":
		fallthrough
	case "VALIDATION_TIMED_OUT":
		fallthrough
	case "REVOKED":
		fallthrough
	case "FAILED":
		*e = CertificateStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CertificateStatusEnum: %v", v)
	}
}
