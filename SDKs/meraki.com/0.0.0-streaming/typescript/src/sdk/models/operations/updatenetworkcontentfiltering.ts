/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * URL category list size which is either 'topSites' or 'fullList'
 */
export enum UpdateNetworkContentFilteringRequestBodyUrlCategoryListSizeEnum {
  FullList = "fullList",
  TopSites = "topSites",
}

export class UpdateNetworkContentFilteringRequestBody extends SpeakeasyBase {
  /**
   * A list of URL patterns that are allowed
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allowedUrlPatterns" })
  allowedUrlPatterns?: string[];

  /**
   * A list of URL categories to block
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blockedUrlCategories" })
  blockedUrlCategories?: string[];

  /**
   * A list of URL patterns that are blocked
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blockedUrlPatterns" })
  blockedUrlPatterns?: string[];

  /**
   * URL category list size which is either 'topSites' or 'fullList'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "urlCategoryListSize" })
  urlCategoryListSize?: UpdateNetworkContentFilteringRequestBodyUrlCategoryListSizeEnum;
}

export class UpdateNetworkContentFilteringRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: UpdateNetworkContentFilteringRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

export class UpdateNetworkContentFilteringResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  updateNetworkContentFiltering200ApplicationJSONObject?: Record<string, any>;
}
