/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * FeatureGroup - Amazon SageMaker Feature Store stores features in a collection called Feature Group. A Feature Group can be visualized as a table which has rows, with a unique identifier for each row where each column in the table is a feature. In principle, a Feature Group is composed of features and values per features.
 */
public class FeatureGroup {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;
    public FeatureGroup withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public FeatureGroup withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EventTimeFeatureName")
    public String eventTimeFeatureName;
    public FeatureGroup withEventTimeFeatureName(String eventTimeFeatureName) {
        this.eventTimeFeatureName = eventTimeFeatureName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailureReason")
    public String failureReason;
    public FeatureGroup withFailureReason(String failureReason) {
        this.failureReason = failureReason;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FeatureDefinitions")
    public FeatureDefinition[] featureDefinitions;
    public FeatureGroup withFeatureDefinitions(FeatureDefinition[] featureDefinitions) {
        this.featureDefinitions = featureDefinitions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FeatureGroupArn")
    public String featureGroupArn;
    public FeatureGroup withFeatureGroupArn(String featureGroupArn) {
        this.featureGroupArn = featureGroupArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FeatureGroupName")
    public String featureGroupName;
    public FeatureGroup withFeatureGroupName(String featureGroupName) {
        this.featureGroupName = featureGroupName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FeatureGroupStatus")
    public FeatureGroupStatusEnum featureGroupStatus;
    public FeatureGroup withFeatureGroupStatus(FeatureGroupStatusEnum featureGroupStatus) {
        this.featureGroupStatus = featureGroupStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastModifiedTime")
    public OffsetDateTime lastModifiedTime;
    public FeatureGroup withLastModifiedTime(OffsetDateTime lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LastUpdateStatus")
    public LastUpdateStatus lastUpdateStatus;
    public FeatureGroup withLastUpdateStatus(LastUpdateStatus lastUpdateStatus) {
        this.lastUpdateStatus = lastUpdateStatus;
        return this;
    }
    
    /**
     * &lt;p&gt;The configuration of an &lt;code&gt;OfflineStore&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;Provide an &lt;code&gt;OfflineStoreConfig&lt;/code&gt; in a request to &lt;code&gt;CreateFeatureGroup&lt;/code&gt; to create an &lt;code&gt;OfflineStore&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;To encrypt an &lt;code&gt;OfflineStore&lt;/code&gt; using at rest data encryption, specify Amazon Web Services Key Management Service (KMS) key ID, or &lt;code&gt;KMSKeyId&lt;/code&gt;, in &lt;code&gt;S3StorageConfig&lt;/code&gt;.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OfflineStoreConfig")
    public OfflineStoreConfig offlineStoreConfig;
    public FeatureGroup withOfflineStoreConfig(OfflineStoreConfig offlineStoreConfig) {
        this.offlineStoreConfig = offlineStoreConfig;
        return this;
    }
    
    /**
     * The status of &lt;code&gt;OfflineStore&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OfflineStoreStatus")
    public OfflineStoreStatus offlineStoreStatus;
    public FeatureGroup withOfflineStoreStatus(OfflineStoreStatus offlineStoreStatus) {
        this.offlineStoreStatus = offlineStoreStatus;
        return this;
    }
    
    /**
     * Use this to specify the Amazon Web Services Key Management Service (KMS) Key ID, or &lt;code&gt;KMSKeyId&lt;/code&gt;, for at rest data encryption. You can turn &lt;code&gt;OnlineStore&lt;/code&gt; on or off by specifying the &lt;code&gt;EnableOnlineStore&lt;/code&gt; flag at General Assembly; the default value is &lt;code&gt;False&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OnlineStoreConfig")
    public OnlineStoreConfig onlineStoreConfig;
    public FeatureGroup withOnlineStoreConfig(OnlineStoreConfig onlineStoreConfig) {
        this.onlineStoreConfig = onlineStoreConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecordIdentifierFeatureName")
    public String recordIdentifierFeatureName;
    public FeatureGroup withRecordIdentifierFeatureName(String recordIdentifierFeatureName) {
        this.recordIdentifierFeatureName = recordIdentifierFeatureName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RoleArn")
    public String roleArn;
    public FeatureGroup withRoleArn(String roleArn) {
        this.roleArn = roleArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public Tag[] tags;
    public FeatureGroup withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
}
