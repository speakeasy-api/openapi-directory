// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type AdminListBadges200ApplicationJSONAdminBadgesTriggers struct {
	None             int64 `json:"none"`
	PostAction       int64 `json:"post_action"`
	PostRevision     int64 `json:"post_revision"`
	TrustLevelChange int64 `json:"trust_level_change"`
	UserChange       int64 `json:"user_change"`
}

type AdminListBadges200ApplicationJSONAdminBadges struct {
	BadgeGroupingIds      []interface{}                                        `json:"badge_grouping_ids"`
	BadgeIds              []interface{}                                        `json:"badge_ids"`
	BadgeTypeIds          []interface{}                                        `json:"badge_type_ids"`
	ProtectedSystemFields []interface{}                                        `json:"protected_system_fields"`
	Triggers              AdminListBadges200ApplicationJSONAdminBadgesTriggers `json:"triggers"`
}

type AdminListBadges200ApplicationJSONBadgeGroupings struct {
	Description string `json:"description"`
	ID          int64  `json:"id"`
	Name        string `json:"name"`
	Position    int64  `json:"position"`
	System      bool   `json:"system"`
}

type AdminListBadges200ApplicationJSONBadgeTypes struct {
	ID        int64  `json:"id"`
	Name      string `json:"name"`
	SortOrder int64  `json:"sort_order"`
}

type AdminListBadges200ApplicationJSONBadges struct {
	AllowTitle        bool    `json:"allow_title"`
	AutoRevoke        bool    `json:"auto_revoke"`
	BadgeGroupingID   int64   `json:"badge_grouping_id"`
	BadgeTypeID       int64   `json:"badge_type_id"`
	Description       string  `json:"description"`
	Enabled           bool    `json:"enabled"`
	GrantCount        int64   `json:"grant_count"`
	I18nName          *string `json:"i18n_name,omitempty"`
	Icon              string  `json:"icon"`
	ID                int64   `json:"id"`
	ImageURL          string  `json:"image_url"`
	Listable          bool    `json:"listable"`
	LongDescription   string  `json:"long_description"`
	ManuallyGrantable bool    `json:"manually_grantable"`
	MultipleGrant     bool    `json:"multiple_grant"`
	Name              string  `json:"name"`
	Query             string  `json:"query"`
	ShowPosts         bool    `json:"show_posts"`
	Slug              string  `json:"slug"`
	System            bool    `json:"system"`
	TargetPosts       bool    `json:"target_posts"`
	Trigger           int64   `json:"trigger"`
}

// AdminListBadges200ApplicationJSON - success response
type AdminListBadges200ApplicationJSON struct {
	AdminBadges    AdminListBadges200ApplicationJSONAdminBadges      `json:"admin_badges"`
	BadgeGroupings []AdminListBadges200ApplicationJSONBadgeGroupings `json:"badge_groupings"`
	BadgeTypes     []AdminListBadges200ApplicationJSONBadgeTypes     `json:"badge_types"`
	Badges         []AdminListBadges200ApplicationJSONBadges         `json:"badges"`
}

type AdminListBadgesResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// success response
	AdminListBadges200ApplicationJSONObject *AdminListBadges200ApplicationJSON
}
