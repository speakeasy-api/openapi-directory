Metadata-Version: 2.1
Name: openapi
Version: 0.0.1
Summary: Python Client SDK Generated by Speakeasy
Author: Speakeasy
Requires-Python: >=3.9
Description-Content-Type: text/markdown

# openapi

<!-- Start SDK Installation -->
## SDK Installation

```bash
pip install git+https://github.com/speakeasy-api/openapi-directory.git#subdirectory=SDKs/googleapis.com/androiddeviceprovisioning/v1/python
```
<!-- End SDK Installation -->

## SDK Example Usage
<!-- Start SDK Example Usage -->
```python
import sdk
from sdk.models import operations, shared

s = sdk.SDK()


req = operations.AndroiddeviceprovisioningCustomersConfigurationsCreateRequest(
    dollar_xgafv="2",
    configuration_input=shared.ConfigurationInput(
        company_name="provident",
        configuration_name="distinctio",
        contact_email="quibusdam",
        contact_phone="unde",
        custom_message="nulla",
        dpc_extras="corrupti",
        dpc_resource_path="illum",
        is_default=False,
    ),
    access_token="vel",
    alt="media",
    callback="deserunt",
    fields_="suscipit",
    key="iure",
    oauth_token="magnam",
    parent="debitis",
    pretty_print=False,
    quota_user="ipsa",
    upload_type="delectus",
    upload_protocol="tempora",
)
    
res = s.customers.androiddeviceprovisioning_customers_configurations_create(req)

if res.configuration is not None:
    # handle response
```
<!-- End SDK Example Usage -->

<!-- Start SDK Available Operations -->
## Available Resources and Operations


### customers

* `androiddeviceprovisioning_customers_configurations_create` - Creates a new configuration. Once created, a customer can apply the configuration to devices.
* `androiddeviceprovisioning_customers_configurations_delete` - Deletes an unused configuration. The API call fails if the customer has devices with the configuration applied.
* `androiddeviceprovisioning_customers_configurations_list` - Lists a customer's configurations.
* `androiddeviceprovisioning_customers_configurations_patch` - Updates a configuration's field values.
* `androiddeviceprovisioning_customers_devices_apply_configuration` - Applies a Configuration to the device to register the device for zero-touch enrollment. After applying a configuration to a device, the device automatically provisions itself on first boot, or next factory reset.
* `androiddeviceprovisioning_customers_devices_list` - Lists a customer's devices.
* `androiddeviceprovisioning_customers_devices_remove_configuration` - Removes a configuration from device.
* `androiddeviceprovisioning_customers_devices_unclaim` - Unclaims a device from a customer and removes it from zero-touch enrollment. After removing a device, a customer must contact their reseller to register the device into zero-touch enrollment again.
* `androiddeviceprovisioning_customers_dpcs_list` - Lists the DPCs (device policy controllers) that support zero-touch enrollment.
* `androiddeviceprovisioning_customers_list` - Lists the user's customer accounts.

### partners

* `androiddeviceprovisioning_partners_customers_create` - Creates a customer for zero-touch enrollment. After the method returns successfully, admin and owner roles can manage devices and EMM configs by calling API methods or using their zero-touch enrollment portal. The customer receives an email that welcomes them to zero-touch enrollment and explains how to sign into the portal.
* `androiddeviceprovisioning_partners_customers_list` - Lists the customers that are enrolled to the reseller identified by the `partnerId` argument. This list includes customers that the reseller created and customers that enrolled themselves using the portal.
* `androiddeviceprovisioning_partners_devices_claim` - Claims a device for a customer and adds it to zero-touch enrollment. If the device is already claimed by another customer, the call returns an error.
* `androiddeviceprovisioning_partners_devices_claim_async` - Claims a batch of devices for a customer asynchronously. Adds the devices to zero-touch enrollment. To learn more, read [Long‑running batch operations](/zero-touch/guides/how-it-works#operations).
* `androiddeviceprovisioning_partners_devices_find_by_identifier` - Finds devices by hardware identifiers, such as IMEI.
* `androiddeviceprovisioning_partners_devices_find_by_owner` - Finds devices claimed for customers. The results only contain devices registered to the reseller that's identified by the `partnerId` argument. The customer's devices purchased from other resellers don't appear in the results.
* `androiddeviceprovisioning_partners_devices_get` - Gets a device.
* `androiddeviceprovisioning_partners_devices_metadata` - Updates reseller metadata associated with the device. Android devices only.
* `androiddeviceprovisioning_partners_devices_unclaim` - Unclaims a device from a customer and removes it from zero-touch enrollment.
* `androiddeviceprovisioning_partners_devices_unclaim_async` - Unclaims a batch of devices for a customer asynchronously. Removes the devices from zero-touch enrollment. To learn more, read [Long‑running batch operations](/zero-touch/guides/how-it-works#operations).
* `androiddeviceprovisioning_partners_devices_update_metadata_async` - Updates the reseller metadata attached to a batch of devices. This method updates devices asynchronously and returns an `Operation` that can be used to track progress. Read [Long‑running batch operations](/zero-touch/guides/how-it-works#operations). Android Devices only.
* `androiddeviceprovisioning_partners_vendors_customers_list` - Lists the customers of the vendor.
* `androiddeviceprovisioning_partners_vendors_list` - Lists the vendors of the partner.
<!-- End SDK Available Operations -->

### Maturity

This SDK is in beta, and there may be breaking changes between versions without a major version update. Therefore, we recommend pinning usage
to a specific package version. This way, you can install the same version each time without breaking changes unless you are intentionally
looking for the latest version.

### Contributions

While we value open-source contributions to this SDK, this library is generated programmatically.
Feel free to open a PR or a Github issue as a proof of concept and we'll do our best to include it in a future release !

### SDK Created by [Speakeasy](https://docs.speakeasyapi.dev/docs/using-speakeasy/client-sdks)
