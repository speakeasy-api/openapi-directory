/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class CopyDistribution20200531Request {
    /**
     * The version identifier of the primary distribution whose configuration you are copying. This is the &lt;code&gt;ETag&lt;/code&gt; value returned in the response to &lt;code&gt;GetDistribution&lt;/code&gt; and &lt;code&gt;GetDistributionConfig&lt;/code&gt;.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=If-Match")
    public String ifMatch;
    public CopyDistribution20200531Request withIfMatch(String ifMatch) {
        this.ifMatch = ifMatch;
        return this;
    }
    
    /**
     * The identifier of the primary distribution whose configuration you are copying. To get a distribution ID, use &lt;code&gt;ListDistributions&lt;/code&gt;.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=PrimaryDistributionId")
    public String primaryDistributionId;
    public CopyDistribution20200531Request withPrimaryDistributionId(String primaryDistributionId) {
        this.primaryDistributionId = primaryDistributionId;
        return this;
    }
    
    @SpeakeasyMetadata("request:mediaType=text/xml")
    public byte[] requestBody;
    public CopyDistribution20200531Request withRequestBody(byte[] requestBody) {
        this.requestBody = requestBody;
        return this;
    }
    
    /**
     * The type of distribution that your primary distribution will be copied to. The only valid value is &lt;code&gt;True&lt;/code&gt;, indicating that you are copying to a staging distribution.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=Staging")
    public Boolean staging;
    public CopyDistribution20200531Request withStaging(Boolean staging) {
        this.staging = staging;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Algorithm")
    public String xAmzAlgorithm;
    public CopyDistribution20200531Request withXAmzAlgorithm(String xAmzAlgorithm) {
        this.xAmzAlgorithm = xAmzAlgorithm;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Content-Sha256")
    public String xAmzContentSha256;
    public CopyDistribution20200531Request withXAmzContentSha256(String xAmzContentSha256) {
        this.xAmzContentSha256 = xAmzContentSha256;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Credential")
    public String xAmzCredential;
    public CopyDistribution20200531Request withXAmzCredential(String xAmzCredential) {
        this.xAmzCredential = xAmzCredential;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Date")
    public String xAmzDate;
    public CopyDistribution20200531Request withXAmzDate(String xAmzDate) {
        this.xAmzDate = xAmzDate;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Security-Token")
    public String xAmzSecurityToken;
    public CopyDistribution20200531Request withXAmzSecurityToken(String xAmzSecurityToken) {
        this.xAmzSecurityToken = xAmzSecurityToken;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Signature")
    public String xAmzSignature;
    public CopyDistribution20200531Request withXAmzSignature(String xAmzSignature) {
        this.xAmzSignature = xAmzSignature;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-SignedHeaders")
    public String xAmzSignedHeaders;
    public CopyDistribution20200531Request withXAmzSignedHeaders(String xAmzSignedHeaders) {
        this.xAmzSignedHeaders = xAmzSignedHeaders;
        return this;
    }
    
}
