/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateIdentityProviderRequestBody {
    /**
     * &lt;p&gt;A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request.&lt;/p&gt; &lt;p&gt;If you do not specify a client token, one is automatically generated by the AWS SDK.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientToken")
    public String clientToken;
    public CreateIdentityProviderRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * &lt;p&gt;The identity provider details. The following list describes the provider detail keys for each identity provider type. &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;For Google and Login with Amazon:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;client_id&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;client_secret&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;authorize_scopes&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For Facebook:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;client_id&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;client_secret&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;authorize_scopes&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;api_version&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For Sign in with Apple:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;client_id&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;team_id&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;key_id&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;private_key&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;authorize_scopes&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For OIDC providers:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;client_id&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;client_secret&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;attributes_request_method&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;oidc_issuer&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;authorize_scopes&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;authorize_url&lt;/code&gt; &lt;i&gt;if not available from discovery URL specified by &lt;code&gt;oidc_issuer&lt;/code&gt; key&lt;/i&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;token_url&lt;/code&gt; &lt;i&gt;if not available from discovery URL specified by &lt;code&gt;oidc_issuer&lt;/code&gt; key&lt;/i&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;attributes_url&lt;/code&gt; &lt;i&gt;if not available from discovery URL specified by &lt;code&gt;oidc_issuer&lt;/code&gt; key&lt;/i&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;jwks_uri&lt;/code&gt; &lt;i&gt;if not available from discovery URL specified by &lt;code&gt;oidc_issuer&lt;/code&gt; key&lt;/i&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For SAML providers:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;MetadataFile&lt;/code&gt; OR &lt;code&gt;MetadataURL&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;IDPSignout&lt;/code&gt; (boolean) &lt;i&gt;optional&lt;/i&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonProperty("identityProviderDetails")
    public java.util.Map<String, String> identityProviderDetails;
    public CreateIdentityProviderRequestBody withIdentityProviderDetails(java.util.Map<String, String> identityProviderDetails) {
        this.identityProviderDetails = identityProviderDetails;
        return this;
    }
    
    /**
     * The identity provider name.
     */
    @JsonProperty("identityProviderName")
    public String identityProviderName;
    public CreateIdentityProviderRequestBody withIdentityProviderName(String identityProviderName) {
        this.identityProviderName = identityProviderName;
        return this;
    }
    
    /**
     * The identity provider type.
     */
    @JsonProperty("identityProviderType")
    public CreateIdentityProviderRequestBodyIdentityProviderTypeEnum identityProviderType;
    public CreateIdentityProviderRequestBody withIdentityProviderType(CreateIdentityProviderRequestBodyIdentityProviderTypeEnum identityProviderType) {
        this.identityProviderType = identityProviderType;
        return this;
    }
    
    /**
     * The ARN of the web portal.
     */
    @JsonProperty("portalArn")
    public String portalArn;
    public CreateIdentityProviderRequestBody withPortalArn(String portalArn) {
        this.portalArn = portalArn;
        return this;
    }
    
}
