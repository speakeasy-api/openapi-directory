// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETUpdateAccountPasswordPolicyActionEnum
type GETUpdateAccountPasswordPolicyActionEnum string

const (
	GETUpdateAccountPasswordPolicyActionEnumUpdateAccountPasswordPolicy GETUpdateAccountPasswordPolicyActionEnum = "UpdateAccountPasswordPolicy"
)

func (e *GETUpdateAccountPasswordPolicyActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UpdateAccountPasswordPolicy":
		*e = GETUpdateAccountPasswordPolicyActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateAccountPasswordPolicyActionEnum: %s", s)
	}
}

// GETUpdateAccountPasswordPolicyVersionEnum
type GETUpdateAccountPasswordPolicyVersionEnum string

const (
	GETUpdateAccountPasswordPolicyVersionEnumTwoThousandAndTen0508 GETUpdateAccountPasswordPolicyVersionEnum = "2010-05-08"
)

func (e *GETUpdateAccountPasswordPolicyVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-08":
		*e = GETUpdateAccountPasswordPolicyVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETUpdateAccountPasswordPolicyVersionEnum: %s", s)
	}
}

type GETUpdateAccountPasswordPolicyRequest struct {
	Action GETUpdateAccountPasswordPolicyActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p> Allows all IAM users in your account to use the Amazon Web Services Management Console to change their own passwords. For more information, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_enable-user-change.html">Permitting IAM users to change their own passwords</a> in the <i>IAM User Guide</i>.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that IAM users in the account do not automatically have permissions to change their own password.</p>
	AllowUsersToChangePassword *bool `queryParam:"style=form,explode=true,name=AllowUsersToChangePassword"`
	// <p> Prevents IAM users who are accessing the account via the Amazon Web Services Management Console from setting a new console password after their password has expired. The IAM user cannot access the console until an administrator resets the password.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that IAM users can change their passwords after they expire and continue to sign in as the user.</p> <note> <p> In the Amazon Web Services Management Console, the custom password policy option <b>Allow users to change their own password</b> gives IAM users permissions to <code>iam:ChangePassword</code> for only their user and to the <code>iam:GetAccountPasswordPolicy</code> action. This option does not attach a permissions policy to each user, rather the permissions are applied at the account-level for all users by IAM. IAM users with <code>iam:ChangePassword</code> permission and active access keys can reset their own expired console password using the CLI or API.</p> </note>
	HardExpiry *bool `queryParam:"style=form,explode=true,name=HardExpiry"`
	// <p>The number of days that an IAM user password is valid.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>0</code>. The result is that IAM user passwords never expire.</p>
	MaxPasswordAge *int64 `queryParam:"style=form,explode=true,name=MaxPasswordAge"`
	// <p>The minimum number of characters allowed in an IAM user password.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>6</code>.</p>
	MinimumPasswordLength *int64 `queryParam:"style=form,explode=true,name=MinimumPasswordLength"`
	// <p>Specifies the number of previous passwords that IAM users are prevented from reusing.</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>0</code>. The result is that IAM users are not prevented from reusing previous passwords.</p>
	PasswordReusePrevention *int64 `queryParam:"style=form,explode=true,name=PasswordReusePrevention"`
	// <p>Specifies whether IAM user passwords must contain at least one lowercase character from the ISO basic Latin alphabet (a to z).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one lowercase character.</p>
	RequireLowercaseCharacters *bool `queryParam:"style=form,explode=true,name=RequireLowercaseCharacters"`
	// <p>Specifies whether IAM user passwords must contain at least one numeric character (0 to 9).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one numeric character.</p>
	RequireNumbers *bool `queryParam:"style=form,explode=true,name=RequireNumbers"`
	// <p>Specifies whether IAM user passwords must contain at least one of the following non-alphanumeric characters:</p> <p>! @ # $ % ^ &amp; * ( ) _ + - = [ ] { } | '</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one symbol character.</p>
	RequireSymbols *bool `queryParam:"style=form,explode=true,name=RequireSymbols"`
	// <p>Specifies whether IAM user passwords must contain at least one uppercase character from the ISO basic Latin alphabet (A to Z).</p> <p>If you do not specify a value for this parameter, then the operation uses the default value of <code>false</code>. The result is that passwords do not require at least one uppercase character.</p>
	RequireUppercaseCharacters *bool                                     `queryParam:"style=form,explode=true,name=RequireUppercaseCharacters"`
	Version                    GETUpdateAccountPasswordPolicyVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm              *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256          *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential             *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                   *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken          *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature              *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders          *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETUpdateAccountPasswordPolicyResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
