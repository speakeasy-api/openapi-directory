// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CommandStatusEnum string

const (
	CommandStatusEnumPending    CommandStatusEnum = "Pending"
	CommandStatusEnumInProgress CommandStatusEnum = "InProgress"
	CommandStatusEnumSuccess    CommandStatusEnum = "Success"
	CommandStatusEnumCancelled  CommandStatusEnum = "Cancelled"
	CommandStatusEnumFailed     CommandStatusEnum = "Failed"
	CommandStatusEnumTimedOut   CommandStatusEnum = "TimedOut"
	CommandStatusEnumCancelling CommandStatusEnum = "Cancelling"
)

func (e CommandStatusEnum) ToPointer() *CommandStatusEnum {
	return &e
}

func (e *CommandStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Pending":
		fallthrough
	case "InProgress":
		fallthrough
	case "Success":
		fallthrough
	case "Cancelled":
		fallthrough
	case "Failed":
		fallthrough
	case "TimedOut":
		fallthrough
	case "Cancelling":
		*e = CommandStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CommandStatusEnum: %v", v)
	}
}
