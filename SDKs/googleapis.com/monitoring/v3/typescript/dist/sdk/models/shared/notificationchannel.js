"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NotificationChannel = exports.NotificationChannelVerificationStatusEnum = void 0;
var utils_1 = require("../../../internal/utils");
var mutationrecord_1 = require("./mutationrecord");
var class_transformer_1 = require("class-transformer");
/**
 * Indicates whether this channel has been verified or not. On a ListNotificationChannels or GetNotificationChannel operation, this field is expected to be populated.If the value is UNVERIFIED, then it indicates that the channel is non-functioning (it both requires verification and lacks verification); otherwise, it is assumed that the channel works.If the channel is neither VERIFIED nor UNVERIFIED, it implies that the channel is of a type that does not require verification or that this specific channel has been exempted from verification because it was created prior to verification being required for channels of this type.This field cannot be modified using a standard UpdateNotificationChannel operation. To change the value of this field, you must call VerifyNotificationChannel.
 */
var NotificationChannelVerificationStatusEnum;
(function (NotificationChannelVerificationStatusEnum) {
    NotificationChannelVerificationStatusEnum["VerificationStatusUnspecified"] = "VERIFICATION_STATUS_UNSPECIFIED";
    NotificationChannelVerificationStatusEnum["Unverified"] = "UNVERIFIED";
    NotificationChannelVerificationStatusEnum["Verified"] = "VERIFIED";
})(NotificationChannelVerificationStatusEnum = exports.NotificationChannelVerificationStatusEnum || (exports.NotificationChannelVerificationStatusEnum = {}));
/**
 * A NotificationChannel is a medium through which an alert is delivered when a policy violation is detected. Examples of channels include email, SMS, and third-party messaging applications. Fields containing sensitive information like authentication tokens or contact info are only partially populated on retrieval.
 */
var NotificationChannel = /** @class */ (function (_super) {
    __extends(NotificationChannel, _super);
    function NotificationChannel() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationRecord" }),
        (0, class_transformer_1.Type)(function () { return mutationrecord_1.MutationRecord; }),
        __metadata("design:type", mutationrecord_1.MutationRecord)
    ], NotificationChannel.prototype, "creationRecord", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], NotificationChannel.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayName" }),
        __metadata("design:type", String)
    ], NotificationChannel.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], NotificationChannel.prototype, "enabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "labels" }),
        __metadata("design:type", Object)
    ], NotificationChannel.prototype, "labels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: mutationrecord_1.MutationRecord }),
        (0, class_transformer_1.Expose)({ name: "mutationRecords" }),
        (0, class_transformer_1.Type)(function () { return mutationrecord_1.MutationRecord; }),
        __metadata("design:type", Array)
    ], NotificationChannel.prototype, "mutationRecords", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], NotificationChannel.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], NotificationChannel.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "userLabels" }),
        __metadata("design:type", Object)
    ], NotificationChannel.prototype, "userLabels", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "verificationStatus" }),
        __metadata("design:type", String)
    ], NotificationChannel.prototype, "verificationStatus", void 0);
    return NotificationChannel;
}(utils_1.SpeakeasyBase));
exports.NotificationChannel = NotificationChannel;
