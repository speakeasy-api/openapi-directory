"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddialogflowv2context as shared_googleclouddialogflowv2context
from ..shared import googleclouddialogflowv2sentimentanalysisrequestconfig as shared_googleclouddialogflowv2sentimentanalysisrequestconfig
from ..shared import googleclouddialogflowv2sessionentitytype as shared_googleclouddialogflowv2sessionentitytype
from ..shared import googletypelatlng as shared_googletypelatlng
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowV2QueryParameters:
    r"""Represents the parameters of the conversational query."""
    
    contexts: Optional[list[shared_googleclouddialogflowv2context.GoogleCloudDialogflowV2Context]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contexts'), 'exclude': lambda f: f is None }})
    r"""The collection of contexts to be activated before this query is executed."""  
    geo_location: Optional[shared_googletypelatlng.GoogleTypeLatLng] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('geoLocation'), 'exclude': lambda f: f is None }})
    r"""An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges."""  
    payload: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payload'), 'exclude': lambda f: f is None }})
    r"""This field can be used to pass custom data to your webhook. Arbitrary JSON objects are supported. If supplied, the value is used to populate the `WebhookRequest.original_detect_intent_request.payload` field sent to your webhook."""  
    reset_contexts: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resetContexts'), 'exclude': lambda f: f is None }})
    r"""Specifies whether to delete all contexts in the current session before the new ones are activated."""  
    sentiment_analysis_request_config: Optional[shared_googleclouddialogflowv2sentimentanalysisrequestconfig.GoogleCloudDialogflowV2SentimentAnalysisRequestConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sentimentAnalysisRequestConfig'), 'exclude': lambda f: f is None }})
    r"""Configures the types of sentiment analysis to perform."""  
    session_entity_types: Optional[list[shared_googleclouddialogflowv2sessionentitytype.GoogleCloudDialogflowV2SessionEntityType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sessionEntityTypes'), 'exclude': lambda f: f is None }})
    r"""Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session of this query."""  
    time_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timeZone'), 'exclude': lambda f: f is None }})
    r"""The time zone of this conversational query from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. If not provided, the time zone specified in agent settings is used."""  
    webhook_headers: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webhookHeaders'), 'exclude': lambda f: f is None }})
    r"""This field can be used to pass HTTP headers for a webhook call. These headers will be sent to webhook along with the headers that have been configured through the Dialogflow web console. The headers defined within this field will overwrite the headers configured through the Dialogflow console if there is a conflict. Header names are case-insensitive. Google's specified headers are not allowed. Including: \\"Host\\", \\"Content-Length\\", \\"Connection\\", \\"From\\", \\"User-Agent\\", \\"Accept-Encoding\\", \\"If-Modified-Since\\", \\"If-None-Match\\", \\"X-Forwarded-For\\", etc."""  
    