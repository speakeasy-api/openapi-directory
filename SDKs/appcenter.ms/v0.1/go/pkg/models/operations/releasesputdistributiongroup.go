// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ReleasesPutDistributionGroupSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type ReleasesPutDistributionGroupPathParams struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// The id of the releases destination
	GroupID string `pathParam:"style=simple,explode=false,name=group_id"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
	// The ID of the release
	ReleaseID int64 `pathParam:"style=simple,explode=false,name=release_id"`
}

type ReleasesPutDistributionGroupRequestBody struct {
	// Whether a release is mandatory for the given destination
	MandatoryUpdate bool `json:"mandatory_update"`
}

type ReleasesPutDistributionGroupRequest struct {
	PathParams ReleasesPutDistributionGroupPathParams
	Request    *ReleasesPutDistributionGroupRequestBody `request:"mediaType=application/json"`
	Security   ReleasesPutDistributionGroupSecurity
}

type ReleasesPutDistributionGroup404ApplicationJSONCodeEnum string

const (
	ReleasesPutDistributionGroup404ApplicationJSONCodeEnumBadRequest          ReleasesPutDistributionGroup404ApplicationJSONCodeEnum = "BadRequest"
	ReleasesPutDistributionGroup404ApplicationJSONCodeEnumConflict            ReleasesPutDistributionGroup404ApplicationJSONCodeEnum = "Conflict"
	ReleasesPutDistributionGroup404ApplicationJSONCodeEnumNotAcceptable       ReleasesPutDistributionGroup404ApplicationJSONCodeEnum = "NotAcceptable"
	ReleasesPutDistributionGroup404ApplicationJSONCodeEnumNotFound            ReleasesPutDistributionGroup404ApplicationJSONCodeEnum = "NotFound"
	ReleasesPutDistributionGroup404ApplicationJSONCodeEnumInternalServerError ReleasesPutDistributionGroup404ApplicationJSONCodeEnum = "InternalServerError"
	ReleasesPutDistributionGroup404ApplicationJSONCodeEnumUnauthorized        ReleasesPutDistributionGroup404ApplicationJSONCodeEnum = "Unauthorized"
	ReleasesPutDistributionGroup404ApplicationJSONCodeEnumTooManyRequests     ReleasesPutDistributionGroup404ApplicationJSONCodeEnum = "TooManyRequests"
)

func (e *ReleasesPutDistributionGroup404ApplicationJSONCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = ReleasesPutDistributionGroup404ApplicationJSONCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReleasesPutDistributionGroup404ApplicationJSONCodeEnum: %s", s)
	}
}

// ReleasesPutDistributionGroup404ApplicationJSON - A destination can't be found.
type ReleasesPutDistributionGroup404ApplicationJSON struct {
	Code    ReleasesPutDistributionGroup404ApplicationJSONCodeEnum `json:"code"`
	Message string                                                 `json:"message"`
}

type ReleasesPutDistributionGroupResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// A destination can't be found.
	//
	ReleasesPutDistributionGroup404ApplicationJSONObject *ReleasesPutDistributionGroup404ApplicationJSON
}
