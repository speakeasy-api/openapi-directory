"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import response_type_enum as shared_response_type_enum
from typing import Optional


@dataclasses.dataclass
class GetConnectSecurity:
    
    auth_header: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'Authorization' }})  
    client_id: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'query', 'field_name': 'client_id' }})  
    

@dataclasses.dataclass
class GetConnectRequest:
    
    client_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'client_id', 'style': 'form', 'explode': True }})
    r"""The client id belonging to your application"""  
    redirect_uri: str = dataclasses.field(metadata={'query_param': { 'field_name': 'redirect_uri', 'style': 'form', 'explode': True }})
    r"""The redirect uri you have configured for your application"""  
    response_type: shared_response_type_enum.ResponseTypeEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'response_type', 'style': 'form', 'explode': True }})
    r"""It's recommended to use \\"code\\" here"""  
    scope: str = dataclasses.field(metadata={'query_param': { 'field_name': 'scope', 'style': 'form', 'explode': True }})
    r"""Scope"""  
    state: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'state', 'style': 'form', 'explode': True }})
    r"""Any value included here will be appended to the redirect URI. Use this for CSRF protection."""  
    

@dataclasses.dataclass
class GetConnectResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Unauthorized"""  
    get_connect_302_application_json_string: Optional[str] = dataclasses.field(default=None)
    r"""Found"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    