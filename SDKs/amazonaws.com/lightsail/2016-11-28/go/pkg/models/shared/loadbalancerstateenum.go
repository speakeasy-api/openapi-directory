// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LoadBalancerStateEnum string

const (
	LoadBalancerStateEnumActive         LoadBalancerStateEnum = "active"
	LoadBalancerStateEnumProvisioning   LoadBalancerStateEnum = "provisioning"
	LoadBalancerStateEnumActiveImpaired LoadBalancerStateEnum = "active_impaired"
	LoadBalancerStateEnumFailed         LoadBalancerStateEnum = "failed"
	LoadBalancerStateEnumUnknown        LoadBalancerStateEnum = "unknown"
)

func (e LoadBalancerStateEnum) ToPointer() *LoadBalancerStateEnum {
	return &e
}

func (e *LoadBalancerStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "provisioning":
		fallthrough
	case "active_impaired":
		fallthrough
	case "failed":
		fallthrough
	case "unknown":
		*e = LoadBalancerStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LoadBalancerStateEnum: %v", v)
	}
}
