"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import playerseasonprojection as shared_playerseasonprojection
from enum import Enum
from typing import Optional

class ProjectedPlayerSeasonStatsByTeamFormatEnum(str, Enum):
    r"""Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>."""
    XML = 'XML'
    JSON = 'JSON'


@dataclasses.dataclass
class ProjectedPlayerSeasonStatsByTeamRequest:
    
    format: ProjectedPlayerSeasonStatsByTeamFormatEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'format', 'style': 'simple', 'explode': False }})
    r"""Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>."""  
    season: str = dataclasses.field(metadata={'path_param': { 'field_name': 'season', 'style': 'simple', 'explode': False }})
    r"""Year of the season (with optional season type).<br>Examples: <code>2018</code>, <code>2019</code>, etc."""  
    team: str = dataclasses.field(metadata={'path_param': { 'field_name': 'team', 'style': 'simple', 'explode': False }})
    r"""The abbreviation of the requested team.
    <br>Examples: <code>MIA</code>, <code>PHI</code>.
    """  
    

@dataclasses.dataclass
class ProjectedPlayerSeasonStatsByTeamResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    player_season_projections: Optional[list[shared_playerseasonprojection.PlayerSeasonProjection]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    