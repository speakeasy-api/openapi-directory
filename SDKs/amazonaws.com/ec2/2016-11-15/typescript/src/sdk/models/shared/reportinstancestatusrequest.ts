/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

export enum ReportInstanceStatusRequestReasonCodesEnum {
  InstanceStuckInState = "instance-stuck-in-state",
  Unresponsive = "unresponsive",
  NotAcceptingCredentials = "not-accepting-credentials",
  PasswordNotAvailable = "password-not-available",
  PerformanceNetwork = "performance-network",
  PerformanceInstanceStore = "performance-instance-store",
  PerformanceEbsVolume = "performance-ebs-volume",
  PerformanceOther = "performance-other",
  Other = "other",
}

/**
 * The status of all instances listed.
 */
export enum ReportInstanceStatusRequestStatusEnum {
  Ok = "ok",
  Impaired = "impaired",
}

export class ReportInstanceStatusRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  dryRun?: boolean;

  @SpeakeasyMetadata()
  endTime?: Date;

  @SpeakeasyMetadata()
  instances: string[];

  @SpeakeasyMetadata()
  reasonCodes: ReportInstanceStatusRequestReasonCodesEnum[];

  @SpeakeasyMetadata()
  startTime?: Date;

  @SpeakeasyMetadata()
  status: ReportInstanceStatusRequestStatusEnum;
}
