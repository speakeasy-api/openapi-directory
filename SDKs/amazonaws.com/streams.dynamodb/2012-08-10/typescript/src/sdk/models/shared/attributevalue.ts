/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * <p>Represents the data for an attribute.</p> <p>Each attribute value is described as a name-value pair. The name is the data type, and the value is the data itself.</p> <p>For more information, see <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.NamingRulesDataTypes.html#HowItWorks.DataTypes">Data Types</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p>
 */
export class AttributeValue extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "B" })
  b?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "BOOL" })
  bool?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "BS" })
  bs?: string[];

  @SpeakeasyMetadata({ elemType: AttributeValue })
  @Expose({ name: "L" })
  @Type(() => AttributeValue)
  l?: AttributeValue[];

  @SpeakeasyMetadata({ elemType: AttributeValue })
  @Expose({ name: "M" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, AttributeValue> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], AttributeValue);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  m?: Record<string, AttributeValue>;

  @SpeakeasyMetadata()
  @Expose({ name: "N" })
  n?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NS" })
  ns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "NULL" })
  null?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "S" })
  s?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SS" })
  ss?: string[];
}
