<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ConfigurationUpdateSummary
{
    /**
     * The username of the account that changed the value.
     * 
     * @var ?string $apiUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('apiUser')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $apiUser = null;
    
    /**
     * JSON-serialized blob of metadata used to fetch information about the configuration update. For example, the upgrade version, previous state, etc.
     * 
     * 
     * 
     * @var ?string $configChangeMetadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('configChangeMetadata')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $configChangeMetadata = null;
    
    /**
     * The timestamp of the change.
     * 
     * @var ?\DateTime $modifiedDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('modifiedDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $modifiedDateTime = null;
    
    /**
     * The name of the updated configuration option.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The namespace of the updated configuration. Changes that do not begin with the string `local_` are cluster-wide changes.
     * 
     * @var ?string $namespace
     */
	#[\JMS\Serializer\Annotation\SerializedName('namespace')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $namespace = null;
    
    /**
     * The value of the configuration option after the update.
     * 
     * @var ?string $newValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('newValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $newValue = null;
    
    /**
     * The updated node. For cluster-wide configuration changes, this value is `all`.
     * 
     * @var ?string $nodeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nodeId = null;
    
    /**
     * The original value of the configuration option.
     * 
     * @var ?string $oldValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('oldValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $oldValue = null;
    
    /**
     * The source of the change.
     * 
     * @var ?string $source
     */
	#[\JMS\Serializer\Annotation\SerializedName('source')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $source = null;
    
	public function __construct()
	{
		$this->apiUser = null;
		$this->configChangeMetadata = null;
		$this->modifiedDateTime = null;
		$this->name = null;
		$this->namespace = null;
		$this->newValue = null;
		$this->nodeId = null;
		$this->oldValue = null;
		$this->source = null;
	}
}
