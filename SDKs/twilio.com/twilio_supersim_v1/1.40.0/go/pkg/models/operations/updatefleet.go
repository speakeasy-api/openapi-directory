// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

var UpdateFleetServerList = []string{
	"https://supersim.twilio.com",
}

type UpdateFleetSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type UpdateFleetPathParams struct {
	// The SID of the Fleet resource to update.
	Sid string `pathParam:"style=simple,explode=false,name=Sid"`
}

// UpdateFleetUpdateFleetRequestIPCommandsMethodEnum - A string representing the HTTP method to use when making a request to `ip_commands_url`. Can be one of `POST` or `GET`. Defaults to `POST`.
type UpdateFleetUpdateFleetRequestIPCommandsMethodEnum string

const (
	UpdateFleetUpdateFleetRequestIPCommandsMethodEnumHead   UpdateFleetUpdateFleetRequestIPCommandsMethodEnum = "HEAD"
	UpdateFleetUpdateFleetRequestIPCommandsMethodEnumGet    UpdateFleetUpdateFleetRequestIPCommandsMethodEnum = "GET"
	UpdateFleetUpdateFleetRequestIPCommandsMethodEnumPost   UpdateFleetUpdateFleetRequestIPCommandsMethodEnum = "POST"
	UpdateFleetUpdateFleetRequestIPCommandsMethodEnumPatch  UpdateFleetUpdateFleetRequestIPCommandsMethodEnum = "PATCH"
	UpdateFleetUpdateFleetRequestIPCommandsMethodEnumPut    UpdateFleetUpdateFleetRequestIPCommandsMethodEnum = "PUT"
	UpdateFleetUpdateFleetRequestIPCommandsMethodEnumDelete UpdateFleetUpdateFleetRequestIPCommandsMethodEnum = "DELETE"
)

func (e *UpdateFleetUpdateFleetRequestIPCommandsMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateFleetUpdateFleetRequestIPCommandsMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateFleetUpdateFleetRequestIPCommandsMethodEnum: %s", s)
	}
}

// UpdateFleetUpdateFleetRequestSmsCommandsMethodEnum - A string representing the HTTP method to use when making a request to `sms_commands_url`. Can be one of `POST` or `GET`. Defaults to `POST`.
type UpdateFleetUpdateFleetRequestSmsCommandsMethodEnum string

const (
	UpdateFleetUpdateFleetRequestSmsCommandsMethodEnumHead   UpdateFleetUpdateFleetRequestSmsCommandsMethodEnum = "HEAD"
	UpdateFleetUpdateFleetRequestSmsCommandsMethodEnumGet    UpdateFleetUpdateFleetRequestSmsCommandsMethodEnum = "GET"
	UpdateFleetUpdateFleetRequestSmsCommandsMethodEnumPost   UpdateFleetUpdateFleetRequestSmsCommandsMethodEnum = "POST"
	UpdateFleetUpdateFleetRequestSmsCommandsMethodEnumPatch  UpdateFleetUpdateFleetRequestSmsCommandsMethodEnum = "PATCH"
	UpdateFleetUpdateFleetRequestSmsCommandsMethodEnumPut    UpdateFleetUpdateFleetRequestSmsCommandsMethodEnum = "PUT"
	UpdateFleetUpdateFleetRequestSmsCommandsMethodEnumDelete UpdateFleetUpdateFleetRequestSmsCommandsMethodEnum = "DELETE"
)

func (e *UpdateFleetUpdateFleetRequestSmsCommandsMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = UpdateFleetUpdateFleetRequestSmsCommandsMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateFleetUpdateFleetRequestSmsCommandsMethodEnum: %s", s)
	}
}

type UpdateFleetUpdateFleetRequest struct {
	// The total data usage (download and upload combined) in Megabytes that each Super SIM assigned to the Fleet can consume during a billing period (normally one month). Value must be between 1MB (1) and 2TB (2,000,000). Defaults to 1GB (1,000).
	DataLimit *int64 `form:"name=DataLimit"`
	// A string representing the HTTP method to use when making a request to `ip_commands_url`. Can be one of `POST` or `GET`. Defaults to `POST`.
	IPCommandsMethod *UpdateFleetUpdateFleetRequestIPCommandsMethodEnum `form:"name=IpCommandsMethod"`
	// The URL that will receive a webhook when a Super SIM in the Fleet is used to send an IP Command from your device to a special IP address. Your server should respond with an HTTP status code in the 200 range; any response body will be ignored.
	IPCommandsURL *string `form:"name=IpCommandsUrl"`
	// The SID or unique name of the Network Access Profile that will control which cellular networks the Fleet's SIMs can connect to.
	NetworkAccessProfile *string `form:"name=NetworkAccessProfile"`
	// A string representing the HTTP method to use when making a request to `sms_commands_url`. Can be one of `POST` or `GET`. Defaults to `POST`.
	SmsCommandsMethod *UpdateFleetUpdateFleetRequestSmsCommandsMethodEnum `form:"name=SmsCommandsMethod"`
	// The URL that will receive a webhook when a Super SIM in the Fleet is used to send an SMS from your device to the SMS Commands number. Your server should respond with an HTTP status code in the 200 range; any response body will be ignored.
	SmsCommandsURL *string `form:"name=SmsCommandsUrl"`
	// An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource.
	UniqueName *string `form:"name=UniqueName"`
}

type UpdateFleetRequest struct {
	PathParams UpdateFleetPathParams
	Request    *UpdateFleetUpdateFleetRequest `request:"mediaType=application/x-www-form-urlencoded"`
	Security   UpdateFleetSecurity
	ServerURL  *string
}

type UpdateFleetResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	SupersimV1Fleet *shared.SupersimV1Fleet
}
