// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BuildStatusEnumStatusEnum string

const (
	BuildStatusEnumStatusEnumBuilding  BuildStatusEnumStatusEnum = "building"
	BuildStatusEnumStatusEnumCompleted BuildStatusEnumStatusEnum = "completed"
	BuildStatusEnumStatusEnumFailed    BuildStatusEnumStatusEnum = "failed"
)

func (e BuildStatusEnumStatusEnum) ToPointer() *BuildStatusEnumStatusEnum {
	return &e
}

func (e *BuildStatusEnumStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "building":
		fallthrough
	case "completed":
		fallthrough
	case "failed":
		*e = BuildStatusEnumStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BuildStatusEnumStatusEnum: %v", v)
	}
}
