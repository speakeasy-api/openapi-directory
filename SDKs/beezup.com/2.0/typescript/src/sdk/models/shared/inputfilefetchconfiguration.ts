/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CompressionFormatStrategyEnum } from "./compressionformatstrategyenum";
import { Credential } from "./credential";
import { DownloadCatalogStrategyEnum } from "./downloadcatalogstrategyenum";
import { Expose, Type } from "class-transformer";

/**
 * Describe the way to download the file
 */
export class InputFileFetchConfiguration extends SpeakeasyBase {
  /**
   * Indicate the relative path in the compressed file
   */
  @SpeakeasyMetadata()
  @Expose({ name: "compressedRelativePath" })
  compressedRelativePath?: string;

  /**
   * Indicate the compression type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "compressionFormatStrategy" })
  compressionFormatStrategy?: CompressionFormatStrategyEnum;

  /**
   * Provides the credentials
   */
  @SpeakeasyMetadata()
  @Expose({ name: "credential" })
  @Type(() => Credential)
  credential?: Credential;

  /**
   * Indicate the download strategy (simple uri, ftps, ftplatest file, etc...)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "downloadCatalogStrategy" })
  downloadCatalogStrategy: DownloadCatalogStrategyEnum;

  /**
   * Indicate the download time out in second
   */
  @SpeakeasyMetadata()
  @Expose({ name: "downloadTimeout" })
  downloadTimeout?: number;

  /**
   * Indicate the Uri of the file. (http, https, ftp, ftps, sftp are allowed)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri: string;
}
