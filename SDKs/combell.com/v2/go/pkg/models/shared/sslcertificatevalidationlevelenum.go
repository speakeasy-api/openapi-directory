// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SslCertificateValidationLevelEnum - The validation level of the certificate:
// <ul><li>Domain validated: Basic check of the identity of the owner of the domain name.</li><li>Organization validated: Company details are verified and integrated in the certificate.</li><li>Extended validated: A thorough verification of your domain name and company details.</li></ul>
type SslCertificateValidationLevelEnum string

const (
	SslCertificateValidationLevelEnumDomainValidated       SslCertificateValidationLevelEnum = "domain_validated"
	SslCertificateValidationLevelEnumOrganizationValidated SslCertificateValidationLevelEnum = "organization_validated"
	SslCertificateValidationLevelEnumExtendedValidated     SslCertificateValidationLevelEnum = "extended_validated"
)

func (e *SslCertificateValidationLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "domain_validated":
		fallthrough
	case "organization_validated":
		fallthrough
	case "extended_validated":
		*e = SslCertificateValidationLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SslCertificateValidationLevelEnum: %s", s)
	}
}
