// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DerivedSourceDerivationModeEnum - What source to base the produced source on (if any).
type DerivedSourceDerivationModeEnum string

const (
	DerivedSourceDerivationModeEnumSourceDerivationModeUnknown          DerivedSourceDerivationModeEnum = "SOURCE_DERIVATION_MODE_UNKNOWN"
	DerivedSourceDerivationModeEnumSourceDerivationModeIndependent      DerivedSourceDerivationModeEnum = "SOURCE_DERIVATION_MODE_INDEPENDENT"
	DerivedSourceDerivationModeEnumSourceDerivationModeChildOfCurrent   DerivedSourceDerivationModeEnum = "SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT"
	DerivedSourceDerivationModeEnumSourceDerivationModeSiblingOfCurrent DerivedSourceDerivationModeEnum = "SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT"
)

func (e DerivedSourceDerivationModeEnum) ToPointer() *DerivedSourceDerivationModeEnum {
	return &e
}

func (e *DerivedSourceDerivationModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SOURCE_DERIVATION_MODE_UNKNOWN":
		fallthrough
	case "SOURCE_DERIVATION_MODE_INDEPENDENT":
		fallthrough
	case "SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT":
		fallthrough
	case "SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT":
		*e = DerivedSourceDerivationModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DerivedSourceDerivationModeEnum: %v", v)
	}
}

// DerivedSource - Specification of one of the bundles produced as a result of splitting a Source (e.g. when executing a SourceSplitRequest, or when splitting an active task using WorkItemStatus.dynamic_source_split), relative to the source being split.
type DerivedSource struct {
	// What source to base the produced source on (if any).
	DerivationMode *DerivedSourceDerivationModeEnum `json:"derivationMode,omitempty"`
	// A source that records can be read and decoded from.
	Source *Source `json:"source,omitempty"`
}
