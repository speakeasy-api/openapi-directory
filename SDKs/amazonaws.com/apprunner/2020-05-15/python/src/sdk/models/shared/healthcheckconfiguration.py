"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import healthcheckprotocol_enum as shared_healthcheckprotocol_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class HealthCheckConfiguration:
    r"""Describes the settings for the health check that App Runner performs to monitor the health of a service."""
    
    healthy_threshold: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HealthyThreshold'), 'exclude': lambda f: f is None }})  
    interval: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Interval'), 'exclude': lambda f: f is None }})  
    path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Path'), 'exclude': lambda f: f is None }})  
    protocol: Optional[shared_healthcheckprotocol_enum.HealthCheckProtocolEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Protocol'), 'exclude': lambda f: f is None }})  
    timeout: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Timeout'), 'exclude': lambda f: f is None }})  
    unhealthy_threshold: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UnhealthyThreshold'), 'exclude': lambda f: f is None }})  
    