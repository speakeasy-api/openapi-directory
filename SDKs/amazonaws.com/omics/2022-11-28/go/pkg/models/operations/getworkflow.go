// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetWorkflowTypeEnum - The workflow's type.
type GetWorkflowTypeEnum string

const (
	GetWorkflowTypeEnumPrivate GetWorkflowTypeEnum = "PRIVATE"
	GetWorkflowTypeEnumService GetWorkflowTypeEnum = "SERVICE"
)

func (e *GetWorkflowTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PRIVATE":
		fallthrough
	case "SERVICE":
		*e = GetWorkflowTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetWorkflowTypeEnum: %s", s)
	}
}

type GetWorkflowRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The export format for the workflow.
	Export []shared.WorkflowExportEnum `queryParam:"style=form,explode=true,name=export"`
	// The workflow's ID.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// The workflow's type.
	Type *GetWorkflowTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

type GetWorkflowResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	GetWorkflowResponse *shared.GetWorkflowResponse
	// InternalServerException
	InternalServerException interface{}
	// RequestTimeoutException
	RequestTimeoutException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
