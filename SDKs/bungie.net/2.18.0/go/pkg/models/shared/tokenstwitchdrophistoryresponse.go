// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type TokensTwitchDropHistoryResponseClaimStateEnum string

const (
	TokensTwitchDropHistoryResponseClaimStateEnumZero TokensTwitchDropHistoryResponseClaimStateEnum = "0"
	TokensTwitchDropHistoryResponseClaimStateEnumOne  TokensTwitchDropHistoryResponseClaimStateEnum = "1"
	TokensTwitchDropHistoryResponseClaimStateEnumTwo  TokensTwitchDropHistoryResponseClaimStateEnum = "2"
)

func (e *TokensTwitchDropHistoryResponseClaimStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "0":
		fallthrough
	case "1":
		fallthrough
	case "2":
		*e = TokensTwitchDropHistoryResponseClaimStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TokensTwitchDropHistoryResponseClaimStateEnum: %s", s)
	}
}

type TokensTwitchDropHistoryResponse struct {
	ClaimState  *TokensTwitchDropHistoryResponseClaimStateEnum
	CreatedAt   *time.Time
	Description *string
	Title       *string
}
