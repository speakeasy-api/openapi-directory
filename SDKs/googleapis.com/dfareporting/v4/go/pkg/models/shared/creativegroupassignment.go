// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreativeGroupAssignmentCreativeGroupNumberEnum - Creative group number of the creative group assignment.
type CreativeGroupAssignmentCreativeGroupNumberEnum string

const (
	CreativeGroupAssignmentCreativeGroupNumberEnumCreativeGroupOne CreativeGroupAssignmentCreativeGroupNumberEnum = "CREATIVE_GROUP_ONE"
	CreativeGroupAssignmentCreativeGroupNumberEnumCreativeGroupTwo CreativeGroupAssignmentCreativeGroupNumberEnum = "CREATIVE_GROUP_TWO"
)

func (e CreativeGroupAssignmentCreativeGroupNumberEnum) ToPointer() *CreativeGroupAssignmentCreativeGroupNumberEnum {
	return &e
}

func (e *CreativeGroupAssignmentCreativeGroupNumberEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CREATIVE_GROUP_ONE":
		fallthrough
	case "CREATIVE_GROUP_TWO":
		*e = CreativeGroupAssignmentCreativeGroupNumberEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreativeGroupAssignmentCreativeGroupNumberEnum: %v", v)
	}
}

// CreativeGroupAssignment - Creative Group Assignment.
type CreativeGroupAssignment struct {
	// ID of the creative group to be assigned.
	CreativeGroupID *string `json:"creativeGroupId,omitempty"`
	// Creative group number of the creative group assignment.
	CreativeGroupNumber *CreativeGroupAssignmentCreativeGroupNumberEnum `json:"creativeGroupNumber,omitempty"`
}
