/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudVisionV1p2beta1AnnotateImageResponse - Response to an image annotation request.
 */
public class GoogleCloudVisionV1p2beta1AnnotateImageResponse {
    /**
     * If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("context")
    public GoogleCloudVisionV1p2beta1ImageAnnotationContext context;

    public GoogleCloudVisionV1p2beta1AnnotateImageResponse withContext(GoogleCloudVisionV1p2beta1ImageAnnotationContext context) {
        this.context = context;
        return this;
    }
    
    /**
     * Set of crop hints that are used to generate new crops when serving images.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cropHintsAnnotation")
    public GoogleCloudVisionV1p2beta1CropHintsAnnotation cropHintsAnnotation;

    public GoogleCloudVisionV1p2beta1AnnotateImageResponse withCropHintsAnnotation(GoogleCloudVisionV1p2beta1CropHintsAnnotation cropHintsAnnotation) {
        this.cropHintsAnnotation = cropHintsAnnotation;
        return this;
    }
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public Status error;

    public GoogleCloudVisionV1p2beta1AnnotateImageResponse withError(Status error) {
        this.error = error;
        return this;
    }
    
    /**
     * If present, face detection has completed successfully.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("faceAnnotations")
    public GoogleCloudVisionV1p2beta1FaceAnnotation[] faceAnnotations;

    public GoogleCloudVisionV1p2beta1AnnotateImageResponse withFaceAnnotations(GoogleCloudVisionV1p2beta1FaceAnnotation[] faceAnnotations) {
        this.faceAnnotations = faceAnnotations;
        return this;
    }
    
    /**
     * TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -&gt; Page -&gt; Block -&gt; Paragraph -&gt; Word -&gt; Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullTextAnnotation")
    public GoogleCloudVisionV1p2beta1TextAnnotation fullTextAnnotation;

    public GoogleCloudVisionV1p2beta1AnnotateImageResponse withFullTextAnnotation(GoogleCloudVisionV1p2beta1TextAnnotation fullTextAnnotation) {
        this.fullTextAnnotation = fullTextAnnotation;
        return this;
    }
    
    /**
     * Stores image properties, such as dominant colors.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imagePropertiesAnnotation")
    public GoogleCloudVisionV1p2beta1ImageProperties imagePropertiesAnnotation;

    public GoogleCloudVisionV1p2beta1AnnotateImageResponse withImagePropertiesAnnotation(GoogleCloudVisionV1p2beta1ImageProperties imagePropertiesAnnotation) {
        this.imagePropertiesAnnotation = imagePropertiesAnnotation;
        return this;
    }
    
    /**
     * If present, label detection has completed successfully.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labelAnnotations")
    public GoogleCloudVisionV1p2beta1EntityAnnotation[] labelAnnotations;

    public GoogleCloudVisionV1p2beta1AnnotateImageResponse withLabelAnnotations(GoogleCloudVisionV1p2beta1EntityAnnotation[] labelAnnotations) {
        this.labelAnnotations = labelAnnotations;
        return this;
    }
    
    /**
     * If present, landmark detection has completed successfully.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("landmarkAnnotations")
    public GoogleCloudVisionV1p2beta1EntityAnnotation[] landmarkAnnotations;

    public GoogleCloudVisionV1p2beta1AnnotateImageResponse withLandmarkAnnotations(GoogleCloudVisionV1p2beta1EntityAnnotation[] landmarkAnnotations) {
        this.landmarkAnnotations = landmarkAnnotations;
        return this;
    }
    
    /**
     * If present, localized object detection has completed successfully. This will be sorted descending by confidence score.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localizedObjectAnnotations")
    public GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation[] localizedObjectAnnotations;

    public GoogleCloudVisionV1p2beta1AnnotateImageResponse withLocalizedObjectAnnotations(GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation[] localizedObjectAnnotations) {
        this.localizedObjectAnnotations = localizedObjectAnnotations;
        return this;
    }
    
    /**
     * If present, logo detection has completed successfully.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logoAnnotations")
    public GoogleCloudVisionV1p2beta1EntityAnnotation[] logoAnnotations;

    public GoogleCloudVisionV1p2beta1AnnotateImageResponse withLogoAnnotations(GoogleCloudVisionV1p2beta1EntityAnnotation[] logoAnnotations) {
        this.logoAnnotations = logoAnnotations;
        return this;
    }
    
    /**
     * Results for a product search request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productSearchResults")
    public GoogleCloudVisionV1p2beta1ProductSearchResults productSearchResults;

    public GoogleCloudVisionV1p2beta1AnnotateImageResponse withProductSearchResults(GoogleCloudVisionV1p2beta1ProductSearchResults productSearchResults) {
        this.productSearchResults = productSearchResults;
        return this;
    }
    
    /**
     * Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("safeSearchAnnotation")
    public GoogleCloudVisionV1p2beta1SafeSearchAnnotation safeSearchAnnotation;

    public GoogleCloudVisionV1p2beta1AnnotateImageResponse withSafeSearchAnnotation(GoogleCloudVisionV1p2beta1SafeSearchAnnotation safeSearchAnnotation) {
        this.safeSearchAnnotation = safeSearchAnnotation;
        return this;
    }
    
    /**
     * If present, text (OCR) detection has completed successfully.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textAnnotations")
    public GoogleCloudVisionV1p2beta1EntityAnnotation[] textAnnotations;

    public GoogleCloudVisionV1p2beta1AnnotateImageResponse withTextAnnotations(GoogleCloudVisionV1p2beta1EntityAnnotation[] textAnnotations) {
        this.textAnnotations = textAnnotations;
        return this;
    }
    
    /**
     * Relevant information for the image from the Internet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webDetection")
    public GoogleCloudVisionV1p2beta1WebDetection webDetection;

    public GoogleCloudVisionV1p2beta1AnnotateImageResponse withWebDetection(GoogleCloudVisionV1p2beta1WebDetection webDetection) {
        this.webDetection = webDetection;
        return this;
    }
    
    public GoogleCloudVisionV1p2beta1AnnotateImageResponse(){}
}
