"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ShippingQuote = void 0;
var utils_1 = require("../../../internal/utils");
var contact_1 = require("./contact");
var error_1 = require("./error");
var order_1 = require("./order");
var packagespecification_1 = require("./packagespecification");
var rate_1 = require("./rate");
var class_transformer_1 = require("class-transformer");
/**
 * This complex type describes a "shipping quote," which contains the parameters for a package shipment. The shipping quote contains a list of "live quotes" or <i>rates</i> for the shipment. Rates are offerd by a carrier for a particular service, of set of services, for shipping the package. Included in the shipping quote are the package specifications, the shipment's origin and destination addresses, and the shipping parameters specified by the seller.  <br><br>Use the <b>rateId</b> value to select the specific service you want when you create a shipment by calling <b>createFromShippingQuote</b>.
 */
var ShippingQuote = /** @class */ (function (_super) {
    __extends(ShippingQuote, _super);
    function ShippingQuote() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationDate" }),
        __metadata("design:type", String)
    ], ShippingQuote.prototype, "creationDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "expirationDate" }),
        __metadata("design:type", String)
    ], ShippingQuote.prototype, "expirationDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: order_1.Order }),
        (0, class_transformer_1.Expose)({ name: "orders" }),
        (0, class_transformer_1.Type)(function () { return order_1.Order; }),
        __metadata("design:type", Array)
    ], ShippingQuote.prototype, "orders", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "packageSpecification" }),
        (0, class_transformer_1.Type)(function () { return packagespecification_1.PackageSpecification; }),
        __metadata("design:type", packagespecification_1.PackageSpecification)
    ], ShippingQuote.prototype, "packageSpecification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: rate_1.Rate }),
        (0, class_transformer_1.Expose)({ name: "rates" }),
        (0, class_transformer_1.Type)(function () { return rate_1.Rate; }),
        __metadata("design:type", Array)
    ], ShippingQuote.prototype, "rates", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "shipFrom" }),
        (0, class_transformer_1.Type)(function () { return contact_1.Contact; }),
        __metadata("design:type", contact_1.Contact)
    ], ShippingQuote.prototype, "shipFrom", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "shipTo" }),
        (0, class_transformer_1.Type)(function () { return contact_1.Contact; }),
        __metadata("design:type", contact_1.Contact)
    ], ShippingQuote.prototype, "shipTo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "shippingQuoteId" }),
        __metadata("design:type", String)
    ], ShippingQuote.prototype, "shippingQuoteId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: error_1.ErrorT }),
        (0, class_transformer_1.Expose)({ name: "warnings" }),
        (0, class_transformer_1.Type)(function () { return error_1.ErrorT; }),
        __metadata("design:type", Array)
    ], ShippingQuote.prototype, "warnings", void 0);
    return ShippingQuote;
}(utils_1.SpeakeasyBase));
exports.ShippingQuote = ShippingQuote;
