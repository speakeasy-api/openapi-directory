/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateInfrastructureConfigurationRequestBody {
    /**
     * The idempotency token used to make this request idempotent.
     */
    @JsonProperty("clientToken")
    public String clientToken;
    public CreateInfrastructureConfigurationRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * The description of the infrastructure configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public CreateInfrastructureConfigurationRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The instance metadata options that apply to the HTTP requests that pipeline builds use to launch EC2 build and test instances. For more information about instance metadata options, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-options.html"&gt;Configure the instance metadata options&lt;/a&gt; in the &lt;i&gt; &lt;i&gt;Amazon EC2 User Guide&lt;/i&gt; &lt;/i&gt; for Linux instances, or &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/configuring-instance-metadata-options.html"&gt;Configure the instance metadata options&lt;/a&gt; in the &lt;i&gt; &lt;i&gt;Amazon EC2 Windows Guide&lt;/i&gt; &lt;/i&gt; for Windows instances.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceMetadataOptions")
    public CreateInfrastructureConfigurationRequestBodyInstanceMetadataOptions instanceMetadataOptions;
    public CreateInfrastructureConfigurationRequestBody withInstanceMetadataOptions(CreateInfrastructureConfigurationRequestBodyInstanceMetadataOptions instanceMetadataOptions) {
        this.instanceMetadataOptions = instanceMetadataOptions;
        return this;
    }
    
    /**
     * The instance profile to associate with the instance used to customize your Amazon EC2 AMI.
     */
    @JsonProperty("instanceProfileName")
    public String instanceProfileName;
    public CreateInfrastructureConfigurationRequestBody withInstanceProfileName(String instanceProfileName) {
        this.instanceProfileName = instanceProfileName;
        return this;
    }
    
    /**
     * The instance types of the infrastructure configuration. You can specify one or more instance types to use for this build. The service will pick one of these instance types based on availability.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceTypes")
    public String[] instanceTypes;
    public CreateInfrastructureConfigurationRequestBody withInstanceTypes(String[] instanceTypes) {
        this.instanceTypes = instanceTypes;
        return this;
    }
    
    /**
     * The key pair of the infrastructure configuration. You can use this to log on to and debug the instance used to create your image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keyPair")
    public String keyPair;
    public CreateInfrastructureConfigurationRequestBody withKeyPair(String keyPair) {
        this.keyPair = keyPair;
        return this;
    }
    
    /**
     * Logging configuration defines where Image Builder uploads your logs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logging")
    public CreateInfrastructureConfigurationRequestBodyLogging logging;
    public CreateInfrastructureConfigurationRequestBody withLogging(CreateInfrastructureConfigurationRequestBodyLogging logging) {
        this.logging = logging;
        return this;
    }
    
    /**
     * The name of the infrastructure configuration.
     */
    @JsonProperty("name")
    public String name;
    public CreateInfrastructureConfigurationRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The tags attached to the resource created by Image Builder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceTags")
    public java.util.Map<String, String> resourceTags;
    public CreateInfrastructureConfigurationRequestBody withResourceTags(java.util.Map<String, String> resourceTags) {
        this.resourceTags = resourceTags;
        return this;
    }
    
    /**
     * The security group IDs to associate with the instance used to customize your Amazon EC2 AMI.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("securityGroupIds")
    public String[] securityGroupIds;
    public CreateInfrastructureConfigurationRequestBody withSecurityGroupIds(String[] securityGroupIds) {
        this.securityGroupIds = securityGroupIds;
        return this;
    }
    
    /**
     * &lt;p&gt;The Amazon Resource Name (ARN) for the SNS topic to which we send image build event notifications.&lt;/p&gt; &lt;note&gt; &lt;p&gt;EC2 Image Builder is unable to send notifications to SNS topics that are encrypted using keys from other accounts. The key that is used to encrypt the SNS topic must reside in the account that the Image Builder service runs under.&lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("snsTopicArn")
    public String snsTopicArn;
    public CreateInfrastructureConfigurationRequestBody withSnsTopicArn(String snsTopicArn) {
        this.snsTopicArn = snsTopicArn;
        return this;
    }
    
    /**
     * The subnet ID in which to place the instance used to customize your Amazon EC2 AMI.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnetId")
    public String subnetId;
    public CreateInfrastructureConfigurationRequestBody withSubnetId(String subnetId) {
        this.subnetId = subnetId;
        return this;
    }
    
    /**
     * The tags of the infrastructure configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;
    public CreateInfrastructureConfigurationRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * The terminate instance on failure setting of the infrastructure configuration. Set to false if you want Image Builder to retain the instance used to configure your AMI if the build or test phase of your workflow fails.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("terminateInstanceOnFailure")
    public Boolean terminateInstanceOnFailure;
    public CreateInfrastructureConfigurationRequestBody withTerminateInstanceOnFailure(Boolean terminateInstanceOnFailure) {
        this.terminateInstanceOnFailure = terminateInstanceOnFailure;
        return this;
    }
    
}
