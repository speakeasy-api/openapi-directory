"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleTypeExpr:
    r"""Represents an expression text. Example:
    
        title: \"User account presence\"
        description: \"Determines whether the request has a user account\"
        expression: \"size(request.user) > 0\" 
    """
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""An optional description of the expression. This is a longer text which
    describes the expression, e.g. when hovered over it in a UI.
    """  
    expression: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expression'), 'exclude': lambda f: f is None }})
    r"""Textual representation of an expression in
    Common Expression Language syntax.
    
    The application context of the containing message determines which
    well-known feature set of CEL is supported.
    """  
    location: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location'), 'exclude': lambda f: f is None }})
    r"""An optional string indicating the location of the expression for error
    reporting, e.g. a file name and a position in the file.
    """  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""An optional title for the expression, i.e. a short string describing
    its purpose. This can be used e.g. in UIs which allow to enter the
    expression.
    """  
    