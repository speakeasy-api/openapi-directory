"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AddClientPreferencesRequestBody:
    
    locale: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locale'), 'exclude': lambda f: f is None }})
    r"""Locale chosen by the shopper. Determines website language."""  
    optin_news_letter: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('optinNewsLetter'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the shopper opted in to receive the store's news letter."""  
    

@dataclasses.dataclass
class AddClientPreferencesRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Type of the content being sent."""  
    order_form_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'orderFormId', 'style': 'simple', 'explode': False }})
    r"""ID of the orderForm that will receive client profile information."""  
    request_body: AddClientPreferencesRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class AddClientPreferencesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    add_client_preferences_200_application_json_any: Optional[Any] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    