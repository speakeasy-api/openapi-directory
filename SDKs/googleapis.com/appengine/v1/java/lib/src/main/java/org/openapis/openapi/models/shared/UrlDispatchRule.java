/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UrlDispatchRule - Rules to match an HTTP request and dispatch that request to a service.
 */
public class UrlDispatchRule {
    /**
     * Domain name to match against. The wildcard "*" is supported if specified before a period: "*.".Defaults to matching all domains: "*".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domain")
    public String domain;
    public UrlDispatchRule withDomain(String domain) {
        this.domain = domain;
        return this;
    }
    
    /**
     * Pathname within the host. Must start with a "/". A single "*" can be included at the end of the path.The sum of the lengths of the domain and path may not exceed 100 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public String path;
    public UrlDispatchRule withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * Resource ID of a service in this application that should serve the matched request. The service must already exist. Example: default.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service")
    public String service;
    public UrlDispatchRule withService(String service) {
        this.service = service;
        return this;
    }
    
}
