// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetGetPathwayAsFormatEnum
type GetGetPathwayAsFormatEnum string

const (
	GetGetPathwayAsFormatEnumJSON GetGetPathwayAsFormatEnum = "json"
	GetGetPathwayAsFormatEnumXML  GetGetPathwayAsFormatEnum = "xml"
	GetGetPathwayAsFormatEnumHTML GetGetPathwayAsFormatEnum = "html"
	GetGetPathwayAsFormatEnumDump GetGetPathwayAsFormatEnum = "dump"
	GetGetPathwayAsFormatEnumJpg  GetGetPathwayAsFormatEnum = "jpg"
	GetGetPathwayAsFormatEnumPdf  GetGetPathwayAsFormatEnum = "pdf"
)

func (e *GetGetPathwayAsFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "xml":
		fallthrough
	case "html":
		fallthrough
	case "dump":
		fallthrough
	case "jpg":
		fallthrough
	case "pdf":
		*e = GetGetPathwayAsFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGetPathwayAsFormatEnum: %s", s)
	}
}

type GetGetPathwayAsQueryParams struct {
	// The file type to convert to, e.g.
	FileType string                     `queryParam:"style=form,explode=true,name=fileType"`
	Format   *GetGetPathwayAsFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// The pathway identifier
	PwID string `queryParam:"style=form,explode=true,name=pwId"`
	// The revision number of the pathway (use 0 for most recent)
	Revision *int64 `queryParam:"style=form,explode=true,name=revision"`
}

type GetGetPathwayAsRequest struct {
	QueryParams GetGetPathwayAsQueryParams
}

type GetGetPathwayAsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
