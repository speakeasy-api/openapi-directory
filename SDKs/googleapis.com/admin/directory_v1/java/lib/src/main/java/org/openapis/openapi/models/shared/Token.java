/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Token - JSON template for token resource in Directory API.
 */
public class Token {
    /**
     * Whether the application is registered with Google. The value is `true` if the application has an anonymous Client ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("anonymous")
    public Boolean anonymous;
    public Token withAnonymous(Boolean anonymous) {
        this.anonymous = anonymous;
        return this;
    }
    
    /**
     * The Client ID of the application the token is issued to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientId")
    public String clientId;
    public Token withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * The displayable name of the application the token is issued to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayText")
    public String displayText;
    public Token withDisplayText(String displayText) {
        this.displayText = displayText;
        return this;
    }
    
    /**
     * ETag of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;
    public Token withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * The type of the API resource. This is always `admin#directory#token`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public Token withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Whether the token is issued to an installed application. The value is `true` if the application is installed to a desktop or mobile device.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nativeApp")
    public Boolean nativeApp;
    public Token withNativeApp(Boolean nativeApp) {
        this.nativeApp = nativeApp;
        return this;
    }
    
    /**
     * A list of authorization scopes the application is granted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scopes")
    public String[] scopes;
    public Token withScopes(String[] scopes) {
        this.scopes = scopes;
        return this;
    }
    
    /**
     * The unique ID of the user that issued the token.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userKey")
    public String userKey;
    public Token withUserKey(String userKey) {
        this.userKey = userKey;
        return this;
    }
    
}
