<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class FailoverShardResponse
{
    /**
     * APICallRateForCustomerExceededFault
     * 
     * @var mixed $apiCallRateForCustomerExceededFault
     */
	
    public mixed $apiCallRateForCustomerExceededFault = null;
    
    /**
     * ClusterNotFoundFault
     * 
     * @var mixed $clusterNotFoundFault
     */
	
    public mixed $clusterNotFoundFault = null;
    
	
    public string $contentType;
    
    /**
     * Success
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\FailoverShardResponse $failoverShardResponse
     */
	
    public ?\OpenAPI\OpenAPI\Models\Shared\FailoverShardResponse $failoverShardResponse = null;
    
    /**
     * InvalidClusterStateFault
     * 
     * @var mixed $invalidClusterStateFault
     */
	
    public mixed $invalidClusterStateFault = null;
    
    /**
     * InvalidKMSKeyFault
     * 
     * @var mixed $invalidKMSKeyFault
     */
	
    public mixed $invalidKMSKeyFault = null;
    
    /**
     * InvalidParameterCombinationException
     * 
     * @var mixed $invalidParameterCombinationException
     */
	
    public mixed $invalidParameterCombinationException = null;
    
    /**
     * InvalidParameterValueException
     * 
     * @var mixed $invalidParameterValueException
     */
	
    public mixed $invalidParameterValueException = null;
    
	
    public int $statusCode;
    
	
    public ?\Psr\Http\Message\ResponseInterface $rawResponse = null;
    
    /**
     * ShardNotFoundFault
     * 
     * @var mixed $shardNotFoundFault
     */
	
    public mixed $shardNotFoundFault = null;
    
    /**
     * TestFailoverNotAvailableFault
     * 
     * @var mixed $testFailoverNotAvailableFault
     */
	
    public mixed $testFailoverNotAvailableFault = null;
    
	public function __construct()
	{
		$this->apiCallRateForCustomerExceededFault = null;
		$this->clusterNotFoundFault = null;
		$this->contentType = "";
		$this->failoverShardResponse = null;
		$this->invalidClusterStateFault = null;
		$this->invalidKMSKeyFault = null;
		$this->invalidParameterCombinationException = null;
		$this->invalidParameterValueException = null;
		$this->statusCode = 0;
		$this->rawResponse = null;
		$this->shardNotFoundFault = null;
		$this->testFailoverNotAvailableFault = null;
	}
}
