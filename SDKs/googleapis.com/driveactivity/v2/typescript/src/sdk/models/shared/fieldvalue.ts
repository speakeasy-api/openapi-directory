/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Date } from "./date";
import { Integer } from "./integer";
import { Selection } from "./selection";
import { SelectionList } from "./selectionlist";
import { SingleUser } from "./singleuser";
import { Text } from "./text";
import { TextList } from "./textlist";
import { UserList } from "./userlist";
import { Expose, Type } from "class-transformer";

/**
 * Contains a value of a Field.
 */
export class FieldValue extends SpeakeasyBase {
  /**
   * Wrapper for Date Field value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  @Type(() => Date)
  date?: Date;

  /**
   * Wrapper for Integer Field value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "integer" })
  @Type(() => Integer)
  integer?: Integer;

  /**
   * Wrapper for Selection Field value as combined value/display_name pair for selected choice.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selection" })
  @Type(() => Selection)
  selection?: Selection;

  /**
   * Wrapper for SelectionList Field value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selectionList" })
  @Type(() => SelectionList)
  selectionList?: SelectionList;

  /**
   * Wrapper for Text Field value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  @Type(() => Text)
  text?: Text;

  /**
   * Wrapper for Text List Field value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "textList" })
  @Type(() => TextList)
  textList?: TextList;

  /**
   * Wrapper for User Field value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => SingleUser)
  user?: SingleUser;

  /**
   * Wrapper for UserList Field value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userList" })
  @Type(() => UserList)
  userList?: UserList;
}
