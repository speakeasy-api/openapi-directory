/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * The type of key to create. Can be 'deploy-key' or 'github-user-key'.
 *
 * @remarks
 *
 */
export enum PostProjectUsernameProjectCheckoutKeyRequestBodyEnum {
  DeployKey = "deploy-key",
  GithubUserKey = "github-user-key",
}

export class PostProjectUsernameProjectCheckoutKeyRequest extends SpeakeasyBase {
  /**
   * The type of key to create. Can be 'deploy-key' or 'github-user-key'.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: PostProjectUsernameProjectCheckoutKeyRequestBodyEnum;

  /**
   * XXXXXXXXX
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=project",
  })
  project: string;

  /**
   * XXXXXXXXX
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=username",
  })
  username: string;
}

export class PostProjectUsernameProjectCheckoutKeyResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * checkout key
   */
  @SpeakeasyMetadata()
  key?: shared.Key;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
