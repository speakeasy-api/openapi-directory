// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type PostCheckCodeRequestBody struct {
	Code  *string `json:"code,omitempty"`
	Email *string `json:"email,omitempty"`
}

// PostCheckCode403ApplicationJSON - #### Tries for this email exceeded.
// To prevent abuse and brute forcing, we limit the number of checkCode requests for each email address to 20. \
// This means if more than 20 requests are made you will have to send another code to your user, this will reset the limit.
type PostCheckCode403ApplicationJSON struct {
	Message *string `json:"message,omitempty"`
	Success *bool   `json:"success,omitempty"`
}

// PostCheckCode401ApplicationJSON - #### Invalid API key
type PostCheckCode401ApplicationJSON struct {
	Message *string `json:"message,omitempty"`
	Success *bool   `json:"success,omitempty"`
}

// PostCheckCode200ApplicationJSON - If success is true, the user has given the correct code. If not the code is incorrect. \
// Check the message for more information
type PostCheckCode200ApplicationJSON struct {
	Message *string `json:"message,omitempty"`
	Success *bool   `json:"success,omitempty"`
}

type PostCheckCodeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// If success is true, the user has given the correct code. If not the code is incorrect. \
	// Check the message for more information
	//
	PostCheckCode200ApplicationJSONObject *PostCheckCode200ApplicationJSON
	// #### Invalid API key
	//
	PostCheckCode401ApplicationJSONObject *PostCheckCode401ApplicationJSON
	// #### Tries for this email exceeded.
	// To prevent abuse and brute forcing, we limit the number of checkCode requests for each email address to 20. \
	// This means if more than 20 requests are made you will have to send another code to your user, this will reset the limit.
	//
	PostCheckCode403ApplicationJSONObject *PostCheckCode403ApplicationJSON
}
