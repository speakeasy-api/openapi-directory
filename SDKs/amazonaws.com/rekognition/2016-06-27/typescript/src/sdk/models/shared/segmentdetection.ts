/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SegmentTypeEnum } from "./segmenttypeenum";
import { ShotSegment } from "./shotsegment";
import { TechnicalCueSegment } from "./technicalcuesegment";
import { Expose, Type } from "class-transformer";

/**
 * A technical cue or shot detection segment detected in a video. An array of <code>SegmentDetection</code> objects containing all segments detected in a stored video is returned by <a>GetSegmentDetection</a>.
 */
export class SegmentDetection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DurationFrames" })
  durationFrames?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "DurationMillis" })
  durationMillis?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "DurationSMPTE" })
  durationSMPTE?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndFrameNumber" })
  endFrameNumber?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "EndTimecodeSMPTE" })
  endTimecodeSMPTE?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EndTimestampMillis" })
  endTimestampMillis?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ShotSegment" })
  @Type(() => ShotSegment)
  shotSegment?: ShotSegment;

  @SpeakeasyMetadata()
  @Expose({ name: "StartFrameNumber" })
  startFrameNumber?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTimecodeSMPTE" })
  startTimecodeSMPTE?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTimestampMillis" })
  startTimestampMillis?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TechnicalCueSegment" })
  @Type(() => TechnicalCueSegment)
  technicalCueSegment?: TechnicalCueSegment;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: SegmentTypeEnum;
}
