/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ImageVersion - A version of a SageMaker &lt;code&gt;Image&lt;/code&gt;. A version represents an existing container image.
 */
public class ImageVersion {
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;
    public ImageVersion withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailureReason")
    public String failureReason;
    public ImageVersion withFailureReason(String failureReason) {
        this.failureReason = failureReason;
        return this;
    }
    
    @JsonProperty("ImageArn")
    public String imageArn;
    public ImageVersion withImageArn(String imageArn) {
        this.imageArn = imageArn;
        return this;
    }
    
    @JsonProperty("ImageVersionArn")
    public String imageVersionArn;
    public ImageVersion withImageVersionArn(String imageVersionArn) {
        this.imageVersionArn = imageVersionArn;
        return this;
    }
    
    @JsonProperty("ImageVersionStatus")
    public ImageVersionStatusEnum imageVersionStatus;
    public ImageVersion withImageVersionStatus(ImageVersionStatusEnum imageVersionStatus) {
        this.imageVersionStatus = imageVersionStatus;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastModifiedTime")
    public OffsetDateTime lastModifiedTime;
    public ImageVersion withLastModifiedTime(OffsetDateTime lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }
    
    @JsonProperty("Version")
    public Long version;
    public ImageVersion withVersion(Long version) {
        this.version = version;
        return this;
    }
    
}
