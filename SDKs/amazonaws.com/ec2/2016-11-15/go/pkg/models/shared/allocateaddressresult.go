// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AllocateAddressResultDomainEnum - Indicates whether the Elastic IP address is for use with instances in a VPC (<code>vpc</code>) or instances in EC2-Classic (<code>standard</code>).
type AllocateAddressResultDomainEnum string

const (
	AllocateAddressResultDomainEnumVpc      AllocateAddressResultDomainEnum = "vpc"
	AllocateAddressResultDomainEnumStandard AllocateAddressResultDomainEnum = "standard"
)

func (e AllocateAddressResultDomainEnum) ToPointer() *AllocateAddressResultDomainEnum {
	return &e
}

func (e *AllocateAddressResultDomainEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "vpc":
		fallthrough
	case "standard":
		*e = AllocateAddressResultDomainEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AllocateAddressResultDomainEnum: %v", v)
	}
}

// AllocateAddressResult - Success
type AllocateAddressResult struct {
	AllocationID          *string
	CarrierIP             *string
	CustomerOwnedIP       *string
	CustomerOwnedIpv4Pool *string
	Domain                *AllocateAddressResultDomainEnum
	NetworkBorderGroup    *string
	PublicIP              *string
	PublicIpv4Pool        *string
}
