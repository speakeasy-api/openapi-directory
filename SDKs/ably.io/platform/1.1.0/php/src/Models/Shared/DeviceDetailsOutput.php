<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DeviceDetailsOutput - OK
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DeviceDetailsOutput
{
    /**
     * Optional trusted client identifier for the device.
     * 
     * @var ?string $clientId
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientId = null;
    
    /**
     * Secret value for the device.
     * 
     * @var ?string $deviceSecret
     */
	#[\JMS\Serializer\Annotation\SerializedName('deviceSecret')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $deviceSecret = null;
    
    /**
     * Form factor of the push device.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DeviceDetailsFormFactorEnum $formFactor
     */
	#[\JMS\Serializer\Annotation\SerializedName('formFactor')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DeviceDetailsFormFactorEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DeviceDetailsFormFactorEnum $formFactor = null;
    
    /**
     * Unique identifier for the device generated by the device itself.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Optional metadata object for this device. The metadata for a device may only be set by clients with push-admin privileges and will be used more extensively in the future with smart notifications.
     * 
     * @var ?array<string, mixed> $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $metadata = null;
    
    /**
     * Platform of the push device.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DeviceDetailsPlatformEnum $platform
     */
	#[\JMS\Serializer\Annotation\SerializedName('platform')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DeviceDetailsPlatformEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DeviceDetailsPlatformEnum $platform = null;
    
    /**
     * Push recipient details for a device.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RecipientOutput $pushRecipient
     */
	#[\JMS\Serializer\Annotation\SerializedName('push.recipient')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RecipientOutput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RecipientOutput $pushRecipient = null;
    
    /**
     * the current state of the push device.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DeviceDetailsPushStateEnum $pushState
     */
	#[\JMS\Serializer\Annotation\SerializedName('push.state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DeviceDetailsPushStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DeviceDetailsPushStateEnum $pushState = null;
    
	public function __construct()
	{
		$this->clientId = null;
		$this->deviceSecret = null;
		$this->formFactor = null;
		$this->id = null;
		$this->metadata = null;
		$this->platform = null;
		$this->pushRecipient = null;
		$this->pushState = null;
	}
}
