// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SapHanaSslInfoEncryptionProviderEnum - The encryption provider for the SAPA HANA system. Possible values are OPENSSL, COMMON_CRYPTO, SAP_CRYPTO.
type SapHanaSslInfoEncryptionProviderEnum string

const (
	SapHanaSslInfoEncryptionProviderEnumOpenssl      SapHanaSslInfoEncryptionProviderEnum = "OPENSSL"
	SapHanaSslInfoEncryptionProviderEnumCommonCrypto SapHanaSslInfoEncryptionProviderEnum = "COMMON_CRYPTO"
	SapHanaSslInfoEncryptionProviderEnumSapCrypto    SapHanaSslInfoEncryptionProviderEnum = "SAP_CRYPTO"
)

func (e SapHanaSslInfoEncryptionProviderEnum) ToPointer() *SapHanaSslInfoEncryptionProviderEnum {
	return &e
}

func (e *SapHanaSslInfoEncryptionProviderEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPENSSL":
		fallthrough
	case "COMMON_CRYPTO":
		fallthrough
	case "SAP_CRYPTO":
		*e = SapHanaSslInfoEncryptionProviderEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SapHanaSslInfoEncryptionProviderEnum: %v", v)
	}
}

type SapHanaSslInfo struct {
	// The encryption provider for the SAPA HANA system. Possible values are OPENSSL, COMMON_CRYPTO, SAP_CRYPTO.
	EncryptionProvider SapHanaSslInfoEncryptionProviderEnum `json:"encryptionProvider"`
	// The path where the encryption key for the SAP HANA system is stored.
	KeyStorePath string `json:"keyStorePath"`
}
