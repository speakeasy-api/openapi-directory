// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TableCellStyleContentAlignmentEnum - The alignment of the content in the table cell. The default alignment matches the alignment for newly created table cells in the Docs editor.
type TableCellStyleContentAlignmentEnum string

const (
	TableCellStyleContentAlignmentEnumContentAlignmentUnspecified TableCellStyleContentAlignmentEnum = "CONTENT_ALIGNMENT_UNSPECIFIED"
	TableCellStyleContentAlignmentEnumContentAlignmentUnsupported TableCellStyleContentAlignmentEnum = "CONTENT_ALIGNMENT_UNSUPPORTED"
	TableCellStyleContentAlignmentEnumTop                         TableCellStyleContentAlignmentEnum = "TOP"
	TableCellStyleContentAlignmentEnumMiddle                      TableCellStyleContentAlignmentEnum = "MIDDLE"
	TableCellStyleContentAlignmentEnumBottom                      TableCellStyleContentAlignmentEnum = "BOTTOM"
)

func (e TableCellStyleContentAlignmentEnum) ToPointer() *TableCellStyleContentAlignmentEnum {
	return &e
}

func (e *TableCellStyleContentAlignmentEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CONTENT_ALIGNMENT_UNSPECIFIED":
		fallthrough
	case "CONTENT_ALIGNMENT_UNSUPPORTED":
		fallthrough
	case "TOP":
		fallthrough
	case "MIDDLE":
		fallthrough
	case "BOTTOM":
		*e = TableCellStyleContentAlignmentEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TableCellStyleContentAlignmentEnum: %v", v)
	}
}

// TableCellStyle - The style of a TableCell. Inherited table cell styles are represented as unset fields in this message. A table cell style can inherit from the table's style.
type TableCellStyle struct {
	// A color that can either be fully opaque or fully transparent.
	BackgroundColor *OptionalColor `json:"backgroundColor,omitempty"`
	// A border around a table cell. Table cell borders cannot be transparent. To hide a table cell border, make its width 0.
	BorderBottom *TableCellBorder `json:"borderBottom,omitempty"`
	// A border around a table cell. Table cell borders cannot be transparent. To hide a table cell border, make its width 0.
	BorderLeft *TableCellBorder `json:"borderLeft,omitempty"`
	// A border around a table cell. Table cell borders cannot be transparent. To hide a table cell border, make its width 0.
	BorderRight *TableCellBorder `json:"borderRight,omitempty"`
	// A border around a table cell. Table cell borders cannot be transparent. To hide a table cell border, make its width 0.
	BorderTop *TableCellBorder `json:"borderTop,omitempty"`
	// The column span of the cell. This property is read-only.
	ColumnSpan *int `json:"columnSpan,omitempty"`
	// The alignment of the content in the table cell. The default alignment matches the alignment for newly created table cells in the Docs editor.
	ContentAlignment *TableCellStyleContentAlignmentEnum `json:"contentAlignment,omitempty"`
	// A magnitude in a single direction in the specified units.
	PaddingBottom *Dimension `json:"paddingBottom,omitempty"`
	// A magnitude in a single direction in the specified units.
	PaddingLeft *Dimension `json:"paddingLeft,omitempty"`
	// A magnitude in a single direction in the specified units.
	PaddingRight *Dimension `json:"paddingRight,omitempty"`
	// A magnitude in a single direction in the specified units.
	PaddingTop *Dimension `json:"paddingTop,omitempty"`
	// The row span of the cell. This property is read-only.
	RowSpan *int `json:"rowSpan,omitempty"`
}
