"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import connection as shared_connection
from typing import Optional


@dataclasses.dataclass
class PostUsersIDUserConnectionsRequestBody:
    
    connector_uuid: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'connector_uuid' }})
    r"""optional uuid of the connector (replaces id_connector)"""  
    id_connector: Optional[int] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'id_connector' }})
    r"""ID of the connector"""  
    

@dataclasses.dataclass
class PostUsersIDUserConnectionsRequest:
    
    id_user: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id_user', 'style': 'simple', 'explode': False }})
    r"""Hint: you can use 'me' or 'all'"""  
    expand: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'expand', 'style': 'form', 'explode': True }})  
    request_body: Optional[PostUsersIDUserConnectionsRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'multipart/form-data' }})  
    source: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'source', 'style': 'form', 'explode': True }})
    r"""optional comma-separated list of sources to use for the connection synchronization"""  
    

@dataclasses.dataclass
class PostUsersIDUserConnectionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    connection: Optional[shared_connection.Connection] = dataclasses.field(default=None)
    r"""Successful POST on Connection resource"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    