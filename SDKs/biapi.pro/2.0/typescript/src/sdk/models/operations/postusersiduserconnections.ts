/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PostUsersIdUserConnectionsRequestBody extends SpeakeasyBase {
  /**
   * optional uuid of the connector (replaces id_connector)
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=connector_uuid" })
  connectorUuid?: string;

  /**
   * ID of the connector
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=id_connector" })
  idConnector?: number;
}

export class PostUsersIdUserConnectionsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody?: PostUsersIdUserConnectionsRequestBody;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expand",
  })
  expand?: string;

  /**
   * Hint: you can use 'me' or 'all'
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_user",
  })
  idUser: string;

  /**
   * optional comma-separated list of sources to use for the connection synchronization
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=source",
  })
  source?: string;
}

export class PostUsersIdUserConnectionsResponse extends SpeakeasyBase {
  /**
   * Successful POST on Connection resource
   */
  @SpeakeasyMetadata()
  connection?: shared.Connection;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
