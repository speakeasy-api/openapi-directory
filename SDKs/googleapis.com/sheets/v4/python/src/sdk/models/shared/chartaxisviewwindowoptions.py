"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ChartAxisViewWindowOptionsViewWindowModeEnum(str, Enum):
    r"""The view window's mode."""
    DEFAULT_VIEW_WINDOW_MODE = 'DEFAULT_VIEW_WINDOW_MODE'
    VIEW_WINDOW_MODE_UNSUPPORTED = 'VIEW_WINDOW_MODE_UNSUPPORTED'
    EXPLICIT = 'EXPLICIT'
    PRETTY = 'PRETTY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ChartAxisViewWindowOptions:
    r"""The options that define a \\"view window\\" for a chart (such as the visible values in an axis)."""
    
    view_window_max: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('viewWindowMax'), 'exclude': lambda f: f is None }})
    r"""The maximum numeric value to be shown in this view window. If unset, will automatically determine a maximum value that looks good for the data."""  
    view_window_min: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('viewWindowMin'), 'exclude': lambda f: f is None }})
    r"""The minimum numeric value to be shown in this view window. If unset, will automatically determine a minimum value that looks good for the data."""  
    view_window_mode: Optional[ChartAxisViewWindowOptionsViewWindowModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('viewWindowMode'), 'exclude': lambda f: f is None }})
    r"""The view window's mode."""  
    