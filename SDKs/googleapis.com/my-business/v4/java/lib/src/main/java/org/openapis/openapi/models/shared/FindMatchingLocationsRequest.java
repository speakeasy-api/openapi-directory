/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FindMatchingLocationsRequest - Request message for Locations.FindMatchingLocations.
 */
public class FindMatchingLocationsRequest {
    /**
     * The preferred language for the matching location (in BCP-47 format).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("languageCode")
    public String languageCode;
    public FindMatchingLocationsRequest withLanguageCode(String languageCode) {
        this.languageCode = languageCode;
        return this;
    }
    
    /**
     * Deprecated. This field is ignored for all requests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxCacheDuration")
    public String maxCacheDuration;
    public FindMatchingLocationsRequest withMaxCacheDuration(String maxCacheDuration) {
        this.maxCacheDuration = maxCacheDuration;
        return this;
    }
    
    /**
     * The number of matches to return. The default value is 3, with a maximum of 10. Note that latency may increase if more are requested. There is no pagination.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numResults")
    public Integer numResults;
    public FindMatchingLocationsRequest withNumResults(Integer numResults) {
        this.numResults = numResults;
        return this;
    }
    
}
