/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The type of abuse being reported
 */
export enum AbuseTicketTypeEnum {
  ARecord = "A_RECORD",
  ChildAbuse = "CHILD_ABUSE",
  Content = "CONTENT",
  FraudWire = "FRAUD_WIRE",
  IpBlock = "IP_BLOCK",
  Malware = "MALWARE",
  NetworkAbuse = "NETWORK_ABUSE",
  Phishing = "PHISHING",
  Spam = "SPAM",
}

/**
 * The associated fields returned, given a unique abuse ticket id
 */
export class AbuseTicket extends SpeakeasyBase {
  /**
   * Is this abuse ticket closed?
   */
  @SpeakeasyMetadata()
  closed: boolean;

  /**
   * The date the abuse ticket was closed
   */
  @SpeakeasyMetadata()
  closedAt: string;

  /**
   * The date the abuse ticket was created
   */
  @SpeakeasyMetadata()
  createdAt: string;

  /**
   * The domain or IP the suspected abuse was reported against
   */
  @SpeakeasyMetadata()
  domainIp: string;

  /**
   * The shopper id of the person who reported the suspected abuse
   */
  @SpeakeasyMetadata()
  reporter: string;

  /**
   * The single URL or IP the suspected abuse was reported against
   */
  @SpeakeasyMetadata()
  source: string;

  /**
   * The company the suspected abuse is targeting
   */
  @SpeakeasyMetadata()
  target: string;

  /**
   * Abuse ticket ID
   */
  @SpeakeasyMetadata()
  ticketId: string;

  /**
   * The type of abuse being reported
   */
  @SpeakeasyMetadata()
  type: AbuseTicketTypeEnum;
}
