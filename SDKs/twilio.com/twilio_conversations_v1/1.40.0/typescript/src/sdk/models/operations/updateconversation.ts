/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateConversationServerList = [
  "https://conversations.twilio.com",
] as const;

export class UpdateConversationSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class UpdateConversationUpdateConversationRequest extends SpeakeasyBase {
  /**
   * An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set "{}" will be returned.
   */
  @SpeakeasyMetadata({ data: "form, name=Attributes" })
  attributes?: string;

  /**
   * The date that this resource was created.
   */
  @SpeakeasyMetadata({
    data: "form, name=DateCreated;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateCreated?: Date;

  /**
   * The date that this resource was last updated.
   */
  @SpeakeasyMetadata({
    data: "form, name=DateUpdated;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateUpdated?: Date;

  /**
   * The human-readable name of this conversation, limited to 256 characters. Optional.
   */
  @SpeakeasyMetadata({ data: "form, name=FriendlyName" })
  friendlyName?: string;

  /**
   * The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.
   */
  @SpeakeasyMetadata({ data: "form, name=MessagingServiceSid" })
  messagingServiceSid?: string;

  @SpeakeasyMetadata({ data: "form, name=State" })
  state?: shared.ConversationEnumStateEnum;

  /**
   * ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.
   */
  @SpeakeasyMetadata({ data: "form, name=Timers.Closed" })
  timersClosed?: string;

  /**
   * ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.
   */
  @SpeakeasyMetadata({ data: "form, name=Timers.Inactive" })
  timersInactive?: string;

  /**
   * An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.
   */
  @SpeakeasyMetadata({ data: "form, name=UniqueName" })
  uniqueName?: string;
}

export class UpdateConversationRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateConversationUpdateConversationRequest;

  /**
   * A 34 character string that uniquely identifies this resource. Can also be the `unique_name` of the Conversation.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Sid" })
  sid: string;

  /**
   * The X-Twilio-Webhook-Enabled HTTP request header
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Twilio-Webhook-Enabled",
  })
  xTwilioWebhookEnabled?: shared.ConversationEnumWebhookEnabledTypeEnum;
}

export class UpdateConversationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  conversationsV1Conversation?: shared.ConversationsV1Conversation;
}
