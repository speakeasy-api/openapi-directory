"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import release_asset as shared_release_asset
from typing import Optional

REPOS_UPLOAD_RELEASE_ASSET_SERVERS = [
	"https://uploads.github.com",
    r"""The URL origin (protocol + host name + port) is included in `upload_url` returned in the response of the \\"Create a release\\" endpoint"""
]


@dataclasses.dataclass
class ReposUploadReleaseAssetRequest:
    
    name: str = dataclasses.field(metadata={'query_param': { 'field_name': 'name', 'style': 'form', 'explode': True }})  
    owner: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner', 'style': 'simple', 'explode': False }})
    r"""The account owner of the repository. The name is not case sensitive."""  
    release_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'release_id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the release."""  
    repo: str = dataclasses.field(metadata={'path_param': { 'field_name': 'repo', 'style': 'simple', 'explode': False }})
    r"""The name of the repository. The name is not case sensitive."""  
    label: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'label', 'style': 'form', 'explode': True }})  
    request_body: Optional[bytes] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/octet-stream' }})  
    

@dataclasses.dataclass
class ReposUploadReleaseAssetResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    release_asset: Optional[shared_release_asset.ReleaseAsset] = dataclasses.field(default=None)
    r"""Response for successful upload"""  
    