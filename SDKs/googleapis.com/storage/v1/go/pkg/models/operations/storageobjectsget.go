// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type StorageObjectsGetSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type StorageObjectsGetSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type StorageObjectsGetSecurityOption3 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type StorageObjectsGetSecurityOption4 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type StorageObjectsGetSecurityOption5 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type StorageObjectsGetSecurity struct {
	Option1 *StorageObjectsGetSecurityOption1 `security:"option"`
	Option2 *StorageObjectsGetSecurityOption2 `security:"option"`
	Option3 *StorageObjectsGetSecurityOption3 `security:"option"`
	Option4 *StorageObjectsGetSecurityOption4 `security:"option"`
	Option5 *StorageObjectsGetSecurityOption5 `security:"option"`
}

// StorageObjectsGetProjectionEnum - Set of properties to return. Defaults to noAcl.
type StorageObjectsGetProjectionEnum string

const (
	StorageObjectsGetProjectionEnumFull  StorageObjectsGetProjectionEnum = "full"
	StorageObjectsGetProjectionEnumNoACL StorageObjectsGetProjectionEnum = "noAcl"
)

func (e *StorageObjectsGetProjectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "full":
		fallthrough
	case "noAcl":
		*e = StorageObjectsGetProjectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StorageObjectsGetProjectionEnum: %s", s)
	}
}

type StorageObjectsGetRequest struct {
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Name of the bucket in which the object resides.
	Bucket string `pathParam:"style=simple,explode=false,name=bucket"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// If present, selects a specific revision of this object (as opposed to the latest version, the default).
	Generation *string `queryParam:"style=form,explode=true,name=generation"`
	// Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
	IfGenerationMatch *string `queryParam:"style=form,explode=true,name=ifGenerationMatch"`
	// Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
	IfGenerationNotMatch *string `queryParam:"style=form,explode=true,name=ifGenerationNotMatch"`
	// Makes the operation conditional on whether the object's current metageneration matches the given value.
	IfMetagenerationMatch *string `queryParam:"style=form,explode=true,name=ifMetagenerationMatch"`
	// Makes the operation conditional on whether the object's current metageneration does not match the given value.
	IfMetagenerationNotMatch *string `queryParam:"style=form,explode=true,name=ifMetagenerationNotMatch"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
	Object string `pathParam:"style=simple,explode=false,name=object"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Set of properties to return. Defaults to noAcl.
	Projection *StorageObjectsGetProjectionEnum `queryParam:"style=form,explode=true,name=projection"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Upload protocol for media (e.g. "media", "multipart", "resumable").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
	// The project to be billed for this request. Required for Requester Pays buckets.
	UserProject *string `queryParam:"style=form,explode=true,name=userProject"`
}

type StorageObjectsGetResponse struct {
	ContentType string
	// Successful response
	Object      *shared.Object
	StatusCode  int
	RawResponse *http.Response
}
