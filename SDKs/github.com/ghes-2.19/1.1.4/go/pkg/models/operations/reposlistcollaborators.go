// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ReposListCollaboratorsAffiliationEnum - Filter collaborators returned by their affiliation. Can be one of:
// \* `outside`: All outside collaborators of an organization-owned repository.
// \* `direct`: All collaborators with permissions to an organization-owned repository, regardless of organization membership status.
// \* `all`: All collaborators the authenticated user can see.
type ReposListCollaboratorsAffiliationEnum string

const (
	ReposListCollaboratorsAffiliationEnumOutside ReposListCollaboratorsAffiliationEnum = "outside"
	ReposListCollaboratorsAffiliationEnumDirect  ReposListCollaboratorsAffiliationEnum = "direct"
	ReposListCollaboratorsAffiliationEnumAll     ReposListCollaboratorsAffiliationEnum = "all"
)

func (e ReposListCollaboratorsAffiliationEnum) ToPointer() *ReposListCollaboratorsAffiliationEnum {
	return &e
}

func (e *ReposListCollaboratorsAffiliationEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "outside":
		fallthrough
	case "direct":
		fallthrough
	case "all":
		*e = ReposListCollaboratorsAffiliationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReposListCollaboratorsAffiliationEnum: %v", v)
	}
}

type ReposListCollaboratorsRequest struct {
	// Filter collaborators returned by their affiliation. Can be one of:
	// \* `outside`: All outside collaborators of an organization-owned repository.
	// \* `direct`: All collaborators with permissions to an organization-owned repository, regardless of organization membership status.
	// \* `all`: All collaborators the authenticated user can see.
	Affiliation *ReposListCollaboratorsAffiliationEnum `queryParam:"style=form,explode=true,name=affiliation"`
	Owner       string                                 `pathParam:"style=simple,explode=false,name=owner"`
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Results per page (max 100)
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	Repo    string `pathParam:"style=simple,explode=false,name=repo"`
}

type ReposListCollaboratorsResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Resource not found
	BasicError *shared.BasicError
	// Response
	Collaborators []shared.Collaborator
}
