/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConflictMetadata } from "./conflictmetadata";
import { MergeHunk } from "./mergehunk";
import { Expose, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeMergeConflictsOutput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "baseCommitId" })
  baseCommitId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "conflictMetadata" })
  @Type(() => ConflictMetadata)
  conflictMetadata: ConflictMetadata;

  @SpeakeasyMetadata()
  @Expose({ name: "destinationCommitId" })
  destinationCommitId: string;

  @SpeakeasyMetadata({ elemType: MergeHunk })
  @Expose({ name: "mergeHunks" })
  @Type(() => MergeHunk)
  mergeHunks: MergeHunk[];

  @SpeakeasyMetadata()
  @Expose({ name: "nextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceCommitId" })
  sourceCommitId: string;
}
