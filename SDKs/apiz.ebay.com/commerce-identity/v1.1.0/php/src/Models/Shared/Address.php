<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Address - The type that defines the fields for an address.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Address
{
    /**
     * The first line of the street address.
     * 
     * @var ?string $addressLine1
     */
	#[\JMS\Serializer\Annotation\SerializedName('addressLine1')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressLine1 = null;
    
    /**
     * The second line of the street address. This field is not always used, but can be used for 'Suite Number' or 'Apt Number'.
     * 
     * @var ?string $addressLine2
     */
	#[\JMS\Serializer\Annotation\SerializedName('addressLine2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addressLine2 = null;
    
    /**
     * The city of the address.
     * 
     * @var ?string $city
     */
	#[\JMS\Serializer\Annotation\SerializedName('city')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $city = null;
    
    /**
     * The two-letter ISO 3166 standard of the country of the address. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/bas:CountryCodeEnum'>eBay API documentation</a>
     * 
     * @var ?string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $country = null;
    
    /**
     * The county of the address.
     * 
     * @var ?string $county
     */
	#[\JMS\Serializer\Annotation\SerializedName('county')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $county = null;
    
    /**
     * The postal code of the address.
     * 
     * @var ?string $postalCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('postalCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postalCode = null;
    
    /**
     * The state or province of the address.
     * 
     * @var ?string $stateOrProvince
     */
	#[\JMS\Serializer\Annotation\SerializedName('stateOrProvince')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stateOrProvince = null;
    
	public function __construct()
	{
		$this->addressLine1 = null;
		$this->addressLine2 = null;
		$this->city = null;
		$this->country = null;
		$this->county = null;
		$this->postalCode = null;
		$this->stateOrProvince = null;
	}
}
