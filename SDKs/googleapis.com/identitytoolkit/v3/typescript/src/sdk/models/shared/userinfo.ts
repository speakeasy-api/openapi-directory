/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class UserInfoProviderUserInfo extends SpeakeasyBase {
  /**
   * The user's display name at the IDP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * User's email at IDP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * User's identifier at IDP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "federatedId" })
  federatedId?: string;

  /**
   * User's phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phoneNumber" })
  phoneNumber?: string;

  /**
   * The user's photo url at the IDP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "photoUrl" })
  photoUrl?: string;

  /**
   * The IdP ID. For white listed IdPs it's a short domain name, e.g., google.com, aol.com, live.net and yahoo.com. For other OpenID IdPs it's the OP identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "providerId" })
  providerId?: string;

  /**
   * User's raw identifier directly returned from IDP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rawId" })
  rawId?: string;

  /**
   * User's screen name at Twitter or login name at Github.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "screenName" })
  screenName?: string;
}

/**
 * Template for an individual account info.
 */
export class UserInfo extends SpeakeasyBase {
  /**
   * User creation timestamp.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  createdAt?: string;

  /**
   * The custom attributes to be set in the user's id token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customAttributes" })
  customAttributes?: string;

  /**
   * Whether the user is authenticated by the developer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customAuth" })
  customAuth?: boolean;

  /**
   * Whether the user is disabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "disabled" })
  disabled?: boolean;

  /**
   * The name of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * The email of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Whether the email has been verified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emailVerified" })
  emailVerified?: boolean;

  /**
   * last login timestamp.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastLoginAt" })
  lastLoginAt?: string;

  /**
   * The local ID of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "localId" })
  localId?: string;

  /**
   * The user's hashed password.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "passwordHash" })
  passwordHash?: string;

  /**
   * The timestamp when the password was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "passwordUpdatedAt" })
  passwordUpdatedAt?: number;

  /**
   * User's phone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phoneNumber" })
  phoneNumber?: string;

  /**
   * The URL of the user profile photo.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "photoUrl" })
  photoUrl?: string;

  /**
   * The IDP of the user.
   */
  @SpeakeasyMetadata({ elemType: UserInfoProviderUserInfo })
  @Expose({ name: "providerUserInfo" })
  @Type(() => UserInfoProviderUserInfo)
  providerUserInfo?: UserInfoProviderUserInfo[];

  /**
   * The user's plain text password.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rawPassword" })
  rawPassword?: string;

  /**
   * The user's password salt.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "salt" })
  salt?: string;

  /**
   * User's screen name at Twitter or login name at Github.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "screenName" })
  screenName?: string;

  /**
   * Timestamp in seconds for valid login token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validSince" })
  validSince?: string;

  /**
   * Version of the user's password.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: number;
}
