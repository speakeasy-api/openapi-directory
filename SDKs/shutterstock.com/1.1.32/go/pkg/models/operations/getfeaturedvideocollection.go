// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetFeaturedVideoCollectionSecurity struct {
	Basic              *shared.SchemeBasic `security:"scheme,type=http,subtype=basic"`
	CustomerAccessCode *string             `security:"scheme,type=oauth2,name=Authorization"`
}

// GetFeaturedVideoCollectionEmbedEnum - What information to include in the response, such as a URL to the collection
type GetFeaturedVideoCollectionEmbedEnum string

const (
	GetFeaturedVideoCollectionEmbedEnumShareURL GetFeaturedVideoCollectionEmbedEnum = "share_url"
)

func (e *GetFeaturedVideoCollectionEmbedEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "share_url":
		*e = GetFeaturedVideoCollectionEmbedEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFeaturedVideoCollectionEmbedEnum: %s", s)
	}
}

type GetFeaturedVideoCollectionRequest struct {
	// What information to include in the response, such as a URL to the collection
	Embed *GetFeaturedVideoCollectionEmbedEnum `queryParam:"style=form,explode=true,name=embed"`
	// Collection ID
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

type GetFeaturedVideoCollectionResponse struct {
	ContentType string
	// OK
	FeaturedCollection *shared.FeaturedCollection
	StatusCode         int
	RawResponse        *http.Response
}
