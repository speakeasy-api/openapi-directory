"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class GETModifyClusterIamRolesActionEnum(str, Enum):
    MODIFY_CLUSTER_IAM_ROLES = 'ModifyClusterIamRoles'

class GETModifyClusterIamRolesVersionEnum(str, Enum):
    TWO_THOUSAND_AND_TWELVE_12_01 = '2012-12-01'


@dataclasses.dataclass
class GETModifyClusterIamRolesRequest:
    
    action: GETModifyClusterIamRolesActionEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'Action', 'style': 'form', 'explode': True }})  
    cluster_identifier: str = dataclasses.field(metadata={'query_param': { 'field_name': 'ClusterIdentifier', 'style': 'form', 'explode': True }})
    r"""The unique identifier of the cluster for which you want to associate or disassociate IAM roles."""  
    version: GETModifyClusterIamRolesVersionEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'Version', 'style': 'form', 'explode': True }})  
    add_iam_roles: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'AddIamRoles', 'style': 'form', 'explode': True }})
    r"""Zero or more IAM roles to associate with the cluster. The roles must be in their Amazon Resource Name (ARN) format."""  
    default_iam_role_arn: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'DefaultIamRoleArn', 'style': 'form', 'explode': True }})
    r"""The Amazon Resource Name (ARN) for the IAM role that was set as default for the cluster when the cluster was last modified."""  
    remove_iam_roles: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'RemoveIamRoles', 'style': 'form', 'explode': True }})
    r"""Zero or more IAM roles in ARN format to disassociate from the cluster."""  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class GETModifyClusterIamRolesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    