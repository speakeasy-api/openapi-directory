// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"openapi/pkg/types"
	"time"
)

type PrefixStatus struct {
	Label string `json:"label"`
	Value int64  `json:"value"`
}

type Prefix struct {
	Created      *types.Date            `json:"created,omitempty"`
	CustomFields map[string]interface{} `json:"custom_fields,omitempty"`
	Description  *string                `json:"description,omitempty"`
	Family       *int64                 `json:"family,omitempty"`
	ID           *int64                 `json:"id,omitempty"`
	// All IP addresses within this prefix are considered usable
	IsPool      *bool      `json:"is_pool,omitempty"`
	LastUpdated *time.Time `json:"last_updated,omitempty"`
	// IPv4 or IPv6 network with mask
	Prefix string        `json:"prefix"`
	Role   *NestedRole   `json:"role,omitempty"`
	Site   *NestedSite   `json:"site,omitempty"`
	Status *PrefixStatus `json:"status,omitempty"`
	Tags   []string      `json:"tags,omitempty"`
	Tenant *NestedTenant `json:"tenant,omitempty"`
	Vlan   *NestedVLAN   `json:"vlan,omitempty"`
	Vrf    *NestedVRF    `json:"vrf,omitempty"`
}
