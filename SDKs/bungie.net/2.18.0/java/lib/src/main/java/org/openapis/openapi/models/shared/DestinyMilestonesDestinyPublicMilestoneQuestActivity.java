/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * DestinyMilestonesDestinyPublicMilestoneQuestActivity - A milestone may have one or more conceptual Activities associated with it, and each of those conceptual activities could have a variety of variants, modes, tiers, what-have-you. Our attempts to determine what qualifies as a conceptual activity are, unfortunately, janky. So if you see missing modes or modes that don't seem appropriate to you, let us know and I'll buy you a beer if we ever meet up in person.
 */
public class DestinyMilestonesDestinyPublicMilestoneQuestActivity {
    /**
     * The hash identifier of the activity that's been chosen to be considered the canonical "conceptual" activity definition. This may have many variants, defined herein.
     */
    
    public Long activityHash;
    public DestinyMilestonesDestinyPublicMilestoneQuestActivity withActivityHash(Long activityHash) {
        this.activityHash = activityHash;
        return this;
    }
    
    /**
     * The hash identifier of the most specific Activity Mode under which this activity is played. This is useful for situations where the activity in question is - for instance - a PVP map, but it's not clear what mode the PVP map is being played under. If it's a playlist, this will be less specific: but hopefully useful in some way.
     */
    
    public Long activityModeHash;
    public DestinyMilestonesDestinyPublicMilestoneQuestActivity withActivityModeHash(Long activityModeHash) {
        this.activityModeHash = activityModeHash;
        return this;
    }
    
    /**
     * The enumeration equivalent of the most specific Activity Mode under which this activity is played.
     */
    
    public DestinyMilestonesDestinyPublicMilestoneQuestActivityActivityModeTypeEnum activityModeType;
    public DestinyMilestonesDestinyPublicMilestoneQuestActivity withActivityModeType(DestinyMilestonesDestinyPublicMilestoneQuestActivityActivityModeTypeEnum activityModeType) {
        this.activityModeType = activityModeType;
        return this;
    }
    
    /**
     * The activity may have 0-to-many modifiers: if it does, this will contain the hashes to the DestinyActivityModifierDefinition that defines the modifier being applied.
     */
    
    public Long[] modifierHashes;
    public DestinyMilestonesDestinyPublicMilestoneQuestActivity withModifierHashes(Long[] modifierHashes) {
        this.modifierHashes = modifierHashes;
        return this;
    }
    
    /**
     * Every relevant variation of this conceptual activity, including the conceptual activity itself, have variants defined here.
     */
    
    public DestinyMilestonesDestinyPublicMilestoneActivityVariant[] variants;
    public DestinyMilestonesDestinyPublicMilestoneQuestActivity withVariants(DestinyMilestonesDestinyPublicMilestoneActivityVariant[] variants) {
        this.variants = variants;
        return this;
    }
    
}
