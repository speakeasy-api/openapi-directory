/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataClassificationDetails } from "./dataclassificationdetails";
import { PartitionEnum } from "./partitionenum";
import { ResourceDetails } from "./resourcedetails";
import { Expose, Type } from "class-transformer";

/**
 * A resource related to a finding.
 */
export class Resource extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DataClassification" })
  @Type(() => DataClassificationDetails)
  dataClassification?: DataClassificationDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "Details" })
  @Type(() => ResourceDetails)
  details?: ResourceDetails;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Partition" })
  partition?: PartitionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Region" })
  region?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceRole" })
  resourceRole?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type: string;
}
