<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * FacetOptions - Specifies operators to return facet results for. There will be one FacetResult for every source_name/object_type/operator_name combination.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class FacetOptions
{
    /**
     * Used to specify integer faceting options.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\IntegerFacetingOptions $integerFacetingOptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('integerFacetingOptions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\IntegerFacetingOptions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IntegerFacetingOptions $integerFacetingOptions = null;
    
    /**
     * Maximum number of facet buckets that should be returned for this facet. Defaults to 10. Maximum value is 100.
     * 
     * @var ?int $numFacetBuckets
     */
	#[\JMS\Serializer\Annotation\SerializedName('numFacetBuckets')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $numFacetBuckets = null;
    
    /**
     * If object_type is set, only those objects of that type will be used to compute facets. If empty, then all objects will be used to compute facets.
     * 
     * @var ?string $objectType
     */
	#[\JMS\Serializer\Annotation\SerializedName('objectType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $objectType = null;
    
    /**
     * The name of the operator chosen for faceting. @see cloudsearch.SchemaPropertyOptions
     * 
     * @var ?string $operatorName
     */
	#[\JMS\Serializer\Annotation\SerializedName('operatorName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $operatorName = null;
    
    /**
     * Source name to facet on. Format: datasources/{source_id} If empty, all data sources will be used.
     * 
     * @var ?string $sourceName
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceName = null;
    
	public function __construct()
	{
		$this->integerFacetingOptions = null;
		$this->numFacetBuckets = null;
		$this->objectType = null;
		$this->operatorName = null;
		$this->sourceName = null;
	}
}
