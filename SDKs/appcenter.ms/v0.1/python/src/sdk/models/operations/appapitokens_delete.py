"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class AppAPITokensDeleteSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class AppAPITokensDeleteRequest:
    
    api_token_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'api_token_id', 'style': 'simple', 'explode': False }})
    r"""The unique ID (UUID) of the api token"""  
    app_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_name', 'style': 'simple', 'explode': False }})
    r"""The name of the application"""  
    owner_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner_name', 'style': 'simple', 'explode': False }})
    r"""The name of the owner"""  
    
class AppAPITokensDelete404ApplicationJSONErrorCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppAPITokensDelete404ApplicationJSONError:
    
    code: AppAPITokensDelete404ApplicationJSONErrorCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppAPITokensDelete404ApplicationJSON:
    r"""NotFound"""
    
    error: AppAPITokensDelete404ApplicationJSONError = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error') }})  
    
class AppAPITokensDelete401ApplicationJSONErrorCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppAPITokensDelete401ApplicationJSONError:
    
    code: AppAPITokensDelete401ApplicationJSONErrorCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppAPITokensDelete401ApplicationJSON:
    r"""Unauthorized"""
    
    error: AppAPITokensDelete401ApplicationJSONError = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error') }})  
    
class AppAPITokensDelete400ApplicationJSONErrorCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppAPITokensDelete400ApplicationJSONError:
    
    code: AppAPITokensDelete400ApplicationJSONErrorCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppAPITokensDelete400ApplicationJSON:
    r"""Error"""
    
    error: AppAPITokensDelete400ApplicationJSONError = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error') }})  
    

@dataclasses.dataclass
class AppAPITokensDeleteResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    app_api_tokens_delete_400_application_json_object: Optional[AppAPITokensDelete400ApplicationJSON] = dataclasses.field(default=None)
    r"""Error"""  
    app_api_tokens_delete_401_application_json_object: Optional[AppAPITokensDelete401ApplicationJSON] = dataclasses.field(default=None)
    r"""Unauthorized"""  
    app_api_tokens_delete_404_application_json_object: Optional[AppAPITokensDelete404ApplicationJSON] = dataclasses.field(default=None)
    r"""NotFound"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    