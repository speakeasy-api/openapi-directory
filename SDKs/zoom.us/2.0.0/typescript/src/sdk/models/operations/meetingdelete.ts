/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class MeetingDeleteSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class MeetingDeleteRequest extends SpeakeasyBase {
  /**
   * `true`: Notify registrants about the meeting cancellation via email.
   *
   * @remarks
   *
   * `false`: Do not send any email notification to meeting registrants.
   *
   * The default value of this field is `false`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=cancel_meeting_reminder",
  })
  cancelMeetingReminder?: string;

  /**
   * The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
   *
   * @remarks
   *
   * While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=meetingId",
  })
  meetingId: number;

  /**
   * The meeting occurrence ID.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=occurrence_id",
  })
  occurrenceId?: string;

  /**
   * `true`: Notify host and alternative host about the meeting cancellation via email.
   *
   * @remarks
   * `false`: Do not send any email notification.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=schedule_for_reminder",
  })
  scheduleForReminder?: boolean;
}

export class MeetingDeleteResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
