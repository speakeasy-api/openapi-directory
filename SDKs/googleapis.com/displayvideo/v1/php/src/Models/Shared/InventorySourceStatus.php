<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InventorySourceStatus - The status related settings of the inventory source.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InventorySourceStatus
{
    /**
     * Output only. The configuration status of the inventory source. Only applicable for guaranteed inventory sources. Acceptable values are `INVENTORY_SOURCE_CONFIG_STATUS_PENDING` and `INVENTORY_SOURCE_CONFIG_STATUS_COMPLETED`. An inventory source must be configured (fill in the required fields, choose creatives, and select a default campaign) before it can serve.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InventorySourceStatusConfigStatusEnum $configStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('configStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InventorySourceStatusConfigStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InventorySourceStatusConfigStatusEnum $configStatus = null;
    
    /**
     * The user-provided reason for pausing this inventory source. Must not exceed 100 characters. Only applicable when entity_status is set to `ENTITY_STATUS_PAUSED`.
     * 
     * @var ?string $entityPauseReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('entityPauseReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $entityPauseReason = null;
    
    /**
     * Whether or not the inventory source is servable. Acceptable values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. Default value is `ENTITY_STATUS_ACTIVE`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InventorySourceStatusEntityStatusEnum $entityStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('entityStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InventorySourceStatusEntityStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InventorySourceStatusEntityStatusEnum $entityStatus = null;
    
    /**
     * Output only. The seller-provided reason for pausing this inventory source. Only applicable for inventory sources synced directly from the publishers and when seller_status is set to `ENTITY_STATUS_PAUSED`.
     * 
     * @var ?string $sellerPauseReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('sellerPauseReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sellerPauseReason = null;
    
    /**
     * Output only. The status set by the seller for the inventory source. Only applicable for inventory sources synced directly from the publishers. Acceptable values are `ENTITY_STATUS_ACTIVE` and `ENTITY_STATUS_PAUSED`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InventorySourceStatusSellerStatusEnum $sellerStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('sellerStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InventorySourceStatusSellerStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InventorySourceStatusSellerStatusEnum $sellerStatus = null;
    
	public function __construct()
	{
		$this->configStatus = null;
		$this->entityPauseReason = null;
		$this->entityStatus = null;
		$this->sellerPauseReason = null;
		$this->sellerStatus = null;
	}
}
