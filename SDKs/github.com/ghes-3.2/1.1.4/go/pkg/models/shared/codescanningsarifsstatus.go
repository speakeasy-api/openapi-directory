// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CodeScanningSarifsStatusProcessingStatusEnum - `pending` files have not yet been processed, while `complete` means all results in the SARIF have been stored.
type CodeScanningSarifsStatusProcessingStatusEnum string

const (
	CodeScanningSarifsStatusProcessingStatusEnumPending  CodeScanningSarifsStatusProcessingStatusEnum = "pending"
	CodeScanningSarifsStatusProcessingStatusEnumComplete CodeScanningSarifsStatusProcessingStatusEnum = "complete"
)

func (e *CodeScanningSarifsStatusProcessingStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "complete":
		*e = CodeScanningSarifsStatusProcessingStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CodeScanningSarifsStatusProcessingStatusEnum: %s", s)
	}
}

// CodeScanningSarifsStatus - Response
type CodeScanningSarifsStatus struct {
	// The REST API URL for getting the analyses associated with the upload.
	AnalysesURL *string `json:"analyses_url,omitempty"`
	// `pending` files have not yet been processed, while `complete` means all results in the SARIF have been stored.
	ProcessingStatus *CodeScanningSarifsStatusProcessingStatusEnum `json:"processing_status,omitempty"`
}
