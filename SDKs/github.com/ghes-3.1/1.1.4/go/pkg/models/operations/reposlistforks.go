// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ReposListForksSortEnum - The sort order. Can be either `newest`, `oldest`, or `stargazers`.
type ReposListForksSortEnum string

const (
	ReposListForksSortEnumNewest     ReposListForksSortEnum = "newest"
	ReposListForksSortEnumOldest     ReposListForksSortEnum = "oldest"
	ReposListForksSortEnumStargazers ReposListForksSortEnum = "stargazers"
	ReposListForksSortEnumWatchers   ReposListForksSortEnum = "watchers"
)

func (e ReposListForksSortEnum) ToPointer() *ReposListForksSortEnum {
	return &e
}

func (e *ReposListForksSortEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "newest":
		fallthrough
	case "oldest":
		fallthrough
	case "stargazers":
		fallthrough
	case "watchers":
		*e = ReposListForksSortEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReposListForksSortEnum: %v", v)
	}
}

type ReposListForksRequest struct {
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// The number of results per page (max 100).
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
	// The sort order. Can be either `newest`, `oldest`, or `stargazers`.
	Sort *ReposListForksSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type ReposListForksResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Bad Request
	BasicError *shared.BasicError
	// Response
	MinimalRepositories []shared.MinimalRepository
	// Bad Request
	ScimError *shared.ScimError
}
