/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * LiveBroadcast - A *liveBroadcast* resource represents an event that will be streamed, via live video, on YouTube.
 */
public class LiveBroadcast {
    /**
     * Detailed settings of a broadcast.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentDetails")
    public LiveBroadcastContentDetails contentDetails;

    public LiveBroadcast withContentDetails(LiveBroadcastContentDetails contentDetails) {
        this.contentDetails = contentDetails;
        return this;
    }
    
    /**
     * Etag of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public LiveBroadcast withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * The ID that YouTube assigns to uniquely identify the broadcast.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public LiveBroadcast withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "youtube#liveBroadcast".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public LiveBroadcast withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Basic broadcast information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("snippet")
    public LiveBroadcastSnippet snippet;

    public LiveBroadcast withSnippet(LiveBroadcastSnippet snippet) {
        this.snippet = snippet;
        return this;
    }
    
    /**
     * Statistics about the live broadcast. These represent a snapshot of the values at the time of the request. Statistics are only returned for live broadcasts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statistics")
    public LiveBroadcastStatistics statistics;

    public LiveBroadcast withStatistics(LiveBroadcastStatistics statistics) {
        this.statistics = statistics;
        return this;
    }
    
    /**
     * Live broadcast state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public LiveBroadcastStatus status;

    public LiveBroadcast withStatus(LiveBroadcastStatus status) {
        this.status = status;
        return this;
    }
    
    public LiveBroadcast(){}
}
