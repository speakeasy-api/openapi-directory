/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The state of the Client VPN endpoint route.
 */
export enum DescribeClientVpnRoutesResultRoutesStatusCodeEnum {
  Creating = "creating",
  Active = "active",
  Failed = "failed",
  Deleting = "deleting",
}

/**
 * The current state of the route.
 */
export class DescribeClientVpnRoutesResultRoutesStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  code?: DescribeClientVpnRoutesResultRoutesStatusCodeEnum;

  @SpeakeasyMetadata()
  message?: string;
}

/**
 * Information about a Client VPN endpoint route.
 */
export class DescribeClientVpnRoutesResultRoutes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  clientVpnEndpointId?: string;

  @SpeakeasyMetadata()
  description?: string;

  @SpeakeasyMetadata()
  destinationCidr?: string;

  @SpeakeasyMetadata()
  origin?: string;

  @SpeakeasyMetadata()
  status?: DescribeClientVpnRoutesResultRoutesStatus;

  @SpeakeasyMetadata()
  targetSubnet?: string;

  @SpeakeasyMetadata()
  type?: string;
}

/**
 * Success
 */
export class DescribeClientVpnRoutesResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  nextToken?: string;

  @SpeakeasyMetadata({ elemType: DescribeClientVpnRoutesResultRoutes })
  routes?: DescribeClientVpnRoutesResultRoutes[];
}
