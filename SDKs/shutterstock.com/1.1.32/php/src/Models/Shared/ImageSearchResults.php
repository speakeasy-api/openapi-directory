<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ImageSearchResults - Image search results
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ImageSearchResults
{
    /**
     * List of images
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\Image> $data
     */
	#[\JMS\Serializer\Annotation\SerializedName('data')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Image>')]
    public array $data;
    
    /**
     * AI-powered insights about an asset, based on the specified audience and objective
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Insights $insights
     */
	#[\JMS\Serializer\Annotation\SerializedName('insights')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Insights')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Insights $insights = null;
    
    /**
     * Server-generated message, if any
     * 
     * @var ?string $message
     */
	#[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $message = null;
    
    /**
     * Current page that is returned
     * 
     * @var ?int $page
     */
	#[\JMS\Serializer\Annotation\SerializedName('page')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $page = null;
    
    /**
     * Number of results per page
     * 
     * @var ?int $perPage
     */
	#[\JMS\Serializer\Annotation\SerializedName('per_page')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $perPage = null;
    
    /**
     * Unique identifier for the search request
     * 
     * @var string $searchId
     */
	#[\JMS\Serializer\Annotation\SerializedName('search_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $searchId;
    
    /**
     * Returns information if search phrase has potentially been mistyped or another query would lead to better search results
     * 
     * @var ?array<string, mixed> $spellcheckInfo
     */
	#[\JMS\Serializer\Annotation\SerializedName('spellcheck_info')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $spellcheckInfo = null;
    
    /**
     * Total count of all results across all pages
     * 
     * @var int $totalCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('total_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $totalCount;
    
	public function __construct()
	{
		$this->data = [];
		$this->insights = null;
		$this->message = null;
		$this->page = null;
		$this->perPage = null;
		$this->searchId = "";
		$this->spellcheckInfo = null;
		$this->totalCount = 0;
	}
}
