// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// SongAPIGetTopSongsFieldsEnum - Optional song fields to load.
type SongAPIGetTopSongsFieldsEnum string

const (
	SongAPIGetTopSongsFieldsEnumNone            SongAPIGetTopSongsFieldsEnum = "None"
	SongAPIGetTopSongsFieldsEnumAdditionalNames SongAPIGetTopSongsFieldsEnum = "AdditionalNames"
	SongAPIGetTopSongsFieldsEnumAlbums          SongAPIGetTopSongsFieldsEnum = "Albums"
	SongAPIGetTopSongsFieldsEnumArtists         SongAPIGetTopSongsFieldsEnum = "Artists"
	SongAPIGetTopSongsFieldsEnumLyrics          SongAPIGetTopSongsFieldsEnum = "Lyrics"
	SongAPIGetTopSongsFieldsEnumMainPicture     SongAPIGetTopSongsFieldsEnum = "MainPicture"
	SongAPIGetTopSongsFieldsEnumNames           SongAPIGetTopSongsFieldsEnum = "Names"
	SongAPIGetTopSongsFieldsEnumPVs             SongAPIGetTopSongsFieldsEnum = "PVs"
	SongAPIGetTopSongsFieldsEnumReleaseEvent    SongAPIGetTopSongsFieldsEnum = "ReleaseEvent"
	SongAPIGetTopSongsFieldsEnumTags            SongAPIGetTopSongsFieldsEnum = "Tags"
	SongAPIGetTopSongsFieldsEnumThumbURL        SongAPIGetTopSongsFieldsEnum = "ThumbUrl"
	SongAPIGetTopSongsFieldsEnumWebLinks        SongAPIGetTopSongsFieldsEnum = "WebLinks"
)

func (e *SongAPIGetTopSongsFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AdditionalNames":
		fallthrough
	case "Albums":
		fallthrough
	case "Artists":
		fallthrough
	case "Lyrics":
		fallthrough
	case "MainPicture":
		fallthrough
	case "Names":
		fallthrough
	case "PVs":
		fallthrough
	case "ReleaseEvent":
		fallthrough
	case "Tags":
		fallthrough
	case "ThumbUrl":
		fallthrough
	case "WebLinks":
		*e = SongAPIGetTopSongsFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongAPIGetTopSongsFieldsEnum: %s", s)
	}
}

// SongAPIGetTopSongsFilterByEnum - Filtering mode.
type SongAPIGetTopSongsFilterByEnum string

const (
	SongAPIGetTopSongsFilterByEnumCreateDate  SongAPIGetTopSongsFilterByEnum = "CreateDate"
	SongAPIGetTopSongsFilterByEnumPublishDate SongAPIGetTopSongsFilterByEnum = "PublishDate"
	SongAPIGetTopSongsFilterByEnumPopularity  SongAPIGetTopSongsFilterByEnum = "Popularity"
)

func (e *SongAPIGetTopSongsFilterByEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CreateDate":
		fallthrough
	case "PublishDate":
		fallthrough
	case "Popularity":
		*e = SongAPIGetTopSongsFilterByEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongAPIGetTopSongsFilterByEnum: %s", s)
	}
}

// SongAPIGetTopSongsLanguagePreferenceEnum - Language preference.
type SongAPIGetTopSongsLanguagePreferenceEnum string

const (
	SongAPIGetTopSongsLanguagePreferenceEnumDefault  SongAPIGetTopSongsLanguagePreferenceEnum = "Default"
	SongAPIGetTopSongsLanguagePreferenceEnumJapanese SongAPIGetTopSongsLanguagePreferenceEnum = "Japanese"
	SongAPIGetTopSongsLanguagePreferenceEnumRomaji   SongAPIGetTopSongsLanguagePreferenceEnum = "Romaji"
	SongAPIGetTopSongsLanguagePreferenceEnumEnglish  SongAPIGetTopSongsLanguagePreferenceEnum = "English"
)

func (e *SongAPIGetTopSongsLanguagePreferenceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = SongAPIGetTopSongsLanguagePreferenceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongAPIGetTopSongsLanguagePreferenceEnum: %s", s)
	}
}

// SongAPIGetTopSongsVocalistEnum - Vocalist selection.
type SongAPIGetTopSongsVocalistEnum string

const (
	SongAPIGetTopSongsVocalistEnumNothing  SongAPIGetTopSongsVocalistEnum = "Nothing"
	SongAPIGetTopSongsVocalistEnumVocaloid SongAPIGetTopSongsVocalistEnum = "Vocaloid"
	SongAPIGetTopSongsVocalistEnumUtau     SongAPIGetTopSongsVocalistEnum = "UTAU"
	SongAPIGetTopSongsVocalistEnumOther    SongAPIGetTopSongsVocalistEnum = "Other"
)

func (e *SongAPIGetTopSongsVocalistEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Nothing":
		fallthrough
	case "Vocaloid":
		fallthrough
	case "UTAU":
		fallthrough
	case "Other":
		*e = SongAPIGetTopSongsVocalistEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongAPIGetTopSongsVocalistEnum: %s", s)
	}
}

type SongAPIGetTopSongsQueryParams struct {
	// Duration in hours from which to get songs.
	DurationHours *int `queryParam:"style=form,explode=true,name=durationHours"`
	// Optional song fields to load.
	Fields *SongAPIGetTopSongsFieldsEnum `queryParam:"style=form,explode=true,name=fields"`
	// Filtering mode.
	FilterBy *SongAPIGetTopSongsFilterByEnum `queryParam:"style=form,explode=true,name=filterBy"`
	// Language preference.
	LanguagePreference *SongAPIGetTopSongsLanguagePreferenceEnum `queryParam:"style=form,explode=true,name=languagePreference"`
	// Maximum number of results to be loaded (optional).
	MaxResults *int `queryParam:"style=form,explode=true,name=maxResults"`
	// Lower bound of the date. Optional.
	StartDate *time.Time `queryParam:"style=form,explode=true,name=startDate"`
	// Vocalist selection.
	Vocalist *SongAPIGetTopSongsVocalistEnum `queryParam:"style=form,explode=true,name=vocalist"`
}

type SongAPIGetTopSongsRequest struct {
	QueryParams SongAPIGetTopSongsQueryParams
}

type SongAPIGetTopSongsResponse struct {
	Body        []byte
	ContentType string
	// OK
	SongForAPIContracts []shared.SongForAPIContract
	StatusCode          int
	RawResponse         *http.Response
}
