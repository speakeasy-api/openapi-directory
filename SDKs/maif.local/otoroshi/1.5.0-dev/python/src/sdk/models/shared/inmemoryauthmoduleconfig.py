"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import inmemoryuser as shared_inmemoryuser
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InMemoryAuthModuleConfig:
    r"""Settings to authenticate users using the in memory user store"""
    
    desc: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('desc') }})
    r"""Description of the config"""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Unique id of the config"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Name of the config"""  
    session_max_age: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sessionMaxAge') }})
    r"""Max age of the session"""  
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Type of settings. value is basic"""  
    users: list[shared_inmemoryuser.InMemoryUser] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('users') }})
    r"""List of users"""  
    