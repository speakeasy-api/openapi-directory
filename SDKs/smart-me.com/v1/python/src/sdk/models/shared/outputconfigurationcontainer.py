"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class OutputConfigurationContainerDigitalOutputNoConnectionActionEnum(str, Enum):
    r"""The Action when the device has lost the connection"""
    NOTHING = 'Nothing'
    TURN_OFF = 'TurnOff'
    TURN_ON = 'TurnOn'
    SET_PWM_VALUE = 'SetPwmValue'

class OutputConfigurationContainerS0PulseValueEnum(str, Enum):
    r"""The S0 Pulse Value"""
    PULSE_VALUE1000_KWH = 'PulseValue1000Kwh'
    PULSE_VALUE10000_KWH = 'PulseValue10000Kwh'

class OutputConfigurationContainerTypeEnum(str, Enum):
    r"""The Type of the output"""
    IMPULSE_OUTPUT_ACTIVE_ENERGY = 'ImpulseOutputActiveEnergy'
    IMPULSE_OUTPUT_ACTIVE_ENERGY_IMPORT = 'ImpulseOutputActiveEnergyImport'
    IMPULSE_OUTPUT_ACTIVE_ENERGY_EXPORT = 'ImpulseOutputActiveEnergyExport'
    IMPULSE_OUTPUT_REACTIVE_ENERGY = 'ImpulseOutputReactiveEnergy'
    DIGITAL_OUTPUT = 'DigitalOutput'
    ANALOG_PWM_SIGNAL_OUTPUT = 'AnalogPwmSignalOutput'
    DISABLED = 'Disabled'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OutputConfigurationContainer:
    r"""Configuration for the outputs of a meter (analog/digital outputs)"""
    
    digital_output_no_connection_action: Optional[OutputConfigurationContainerDigitalOutputNoConnectionActionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DigitalOutputNoConnectionAction'), 'exclude': lambda f: f is None }})
    r"""The Action when the device has lost the connection"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})
    r"""The Name of the Output"""  
    number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Number'), 'exclude': lambda f: f is None }})
    r"""The number of the Output. (1 for Output 1, 2 for Output 2)"""  
    s0_pulse_value: Optional[OutputConfigurationContainerS0PulseValueEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('S0PulseValue'), 'exclude': lambda f: f is None }})
    r"""The S0 Pulse Value"""  
    type: Optional[OutputConfigurationContainerTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type'), 'exclude': lambda f: f is None }})
    r"""The Type of the output"""  
    