"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import filereference as shared_filereference
from ..shared import toolexitcode as shared_toolexitcode
from ..shared import tooloutputreference as shared_tooloutputreference
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ToolExecution:
    r"""An execution of an arbitrary tool. It could be a test runner or a tool copying artifacts or deploying code."""
    
    command_line_arguments: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commandLineArguments'), 'exclude': lambda f: f is None }})
    r"""The full tokenized command line including the program name (equivalent to argv in a C program). - In response: present if set by create request - In create request: optional - In update request: never set"""  
    exit_code: Optional[shared_toolexitcode.ToolExitCode] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exitCode'), 'exclude': lambda f: f is None }})
    r"""Exit code from a tool execution."""  
    tool_logs: Optional[list[shared_filereference.FileReference]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('toolLogs'), 'exclude': lambda f: f is None }})
    r"""References to any plain text logs output the tool execution. This field can be set before the tool has exited in order to be able to have access to a live view of the logs while the tool is running. The maximum allowed number of tool logs per step is 1000. - In response: present if set by create/update request - In create request: optional - In update request: optional, any value provided will be appended to the existing list"""  
    tool_outputs: Optional[list[shared_tooloutputreference.ToolOutputReference]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('toolOutputs'), 'exclude': lambda f: f is None }})
    r"""References to opaque files of any format output by the tool execution. The maximum allowed number of tool outputs per step is 1000. - In response: present if set by create/update request - In create request: optional - In update request: optional, any value provided will be appended to the existing list"""  
    