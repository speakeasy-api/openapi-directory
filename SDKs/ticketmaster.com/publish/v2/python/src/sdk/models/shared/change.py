"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class ChangeOpEnum(str, Enum):
    r"""Operation to apply on the entity."""
    ADD = 'add'
    REMOVE = 'remove'
    REPLACE = 'replace'
    MOVE = 'move'
    COPY = 'copy'
    TEST = 'test'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Change:
    r"""This class defines the Changes on the Publish API"""
    
    op: ChangeOpEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('op') }})
    r"""Operation to apply on the entity."""  
    path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('path') }})
    r"""Json path from the root of the document to the place where the change should be applied."""  
    from_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('from'), 'exclude': lambda f: f is None }})
    r"""Json path of the source entity when using the move operation."""  
    value: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""Data to change. MUST be a valid json object."""  
    