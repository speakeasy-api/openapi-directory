/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ManagedInstance - A Managed Instance resource.
 */
public class ManagedInstance {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allInstancesConfig")
    public ManagedInstanceAllInstancesConfig allInstancesConfig;
    public ManagedInstance withAllInstancesConfig(ManagedInstanceAllInstancesConfig allInstancesConfig) {
        this.allInstancesConfig = allInstancesConfig;
        return this;
    }
    
    /**
     * [Output Only] The current action that the managed instance group has scheduled for the instance. Possible values: - NONE The instance is running, and the managed instance group does not have any scheduled actions for this instance. - CREATING The managed instance group is creating this instance. If the group fails to create this instance, it will try again until it is successful. - CREATING_WITHOUT_RETRIES The managed instance group is attempting to create this instance only once. If the group fails to create this instance, it does not try again and the group's targetSize value is decreased instead. - RECREATING The managed instance group is recreating this instance. - DELETING The managed instance group is permanently deleting this instance. - ABANDONING The managed instance group is abandoning this instance. The instance will be removed from the instance group and from any target pools that are associated with this group. - RESTARTING The managed instance group is restarting the instance. - REFRESHING The managed instance group is applying configuration changes to the instance without stopping it. For example, the group can update the target pool list for an instance without stopping that instance. - VERIFYING The managed instance group has created the instance and it is in the process of being verified. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentAction")
    public ManagedInstanceCurrentActionEnum currentAction;
    public ManagedInstance withCurrentAction(ManagedInstanceCurrentActionEnum currentAction) {
        this.currentAction = currentAction;
        return this;
    }
    
    /**
     * [Output only] The unique identifier for this resource. This field is empty when instance does not exist.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public ManagedInstance withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * [Output Only] The URL of the instance. The URL can exist even if the instance has not yet been created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instance")
    public String instance;
    public ManagedInstance withInstance(String instance) {
        this.instance = instance;
        return this;
    }
    
    /**
     * [Output Only] Health state of the instance per health-check.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceHealth")
    public ManagedInstanceInstanceHealth[] instanceHealth;
    public ManagedInstance withInstanceHealth(ManagedInstanceInstanceHealth[] instanceHealth) {
        this.instanceHealth = instanceHealth;
        return this;
    }
    
    /**
     * [Output Only] The status of the instance. This field is empty when the instance does not exist.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceStatus")
    public ManagedInstanceInstanceStatusEnum instanceStatus;
    public ManagedInstance withInstanceStatus(ManagedInstanceInstanceStatusEnum instanceStatus) {
        this.instanceStatus = instanceStatus;
        return this;
    }
    
    /**
     * [Output Only] The intended template of the instance. This field is empty when current_action is one of { DELETING, ABANDONING }.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceTemplate")
    public String instanceTemplate;
    public ManagedInstance withInstanceTemplate(String instanceTemplate) {
        this.instanceTemplate = instanceTemplate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastAttempt")
    public ManagedInstanceLastAttempt lastAttempt;
    public ManagedInstance withLastAttempt(ManagedInstanceLastAttempt lastAttempt) {
        this.lastAttempt = lastAttempt;
        return this;
    }
    
    /**
     * [Output Only] The name of the instance. The name will always exist even if the instance has not yet been created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ManagedInstance withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Preserved state for a given instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preservedStateFromConfig")
    public PreservedState preservedStateFromConfig;
    public ManagedInstance withPreservedStateFromConfig(PreservedState preservedStateFromConfig) {
        this.preservedStateFromConfig = preservedStateFromConfig;
        return this;
    }
    
    /**
     * Preserved state for a given instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preservedStateFromPolicy")
    public PreservedState preservedStateFromPolicy;
    public ManagedInstance withPreservedStateFromPolicy(PreservedState preservedStateFromPolicy) {
        this.preservedStateFromPolicy = preservedStateFromPolicy;
        return this;
    }
    
    /**
     * [Output Only] Tag describing the version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tag")
    public String tag;
    public ManagedInstance withTag(String tag) {
        this.tag = tag;
        return this;
    }
    
    /**
     * [Output Only] The eventual status of the instance. The instance group manager will not be identified as stable till each managed instance reaches its targetStatus.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetStatus")
    public ManagedInstanceTargetStatusEnum targetStatus;
    public ManagedInstance withTargetStatus(ManagedInstanceTargetStatusEnum targetStatus) {
        this.targetStatus = targetStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public ManagedInstanceVersion version;
    public ManagedInstance withVersion(ManagedInstanceVersion version) {
        this.version = version;
        return this;
    }
    
}
