<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoalResponseMetric - A generic Asana Resource, containing a globally unique identifier.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoalResponseMetric
{
    /**
     * *Conditional*. Only relevant for `progress_source` of type `external`. This boolean indicates whether the requester has the ability to update the current value of this metric. This returns `true` if the external metric was created by the requester, `false` otherwise.
     * 
     * @var ?bool $canManage
     */
	#[\JMS\Serializer\Annotation\SerializedName('can_manage')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canManage = null;
    
    /**
     * ISO 4217 currency code to format this custom field. This will be null if the `unit` is not `currency`.
     * 
     * @var ?string $currencyCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currencyCode = null;
    
    /**
     * This string is the current value of a goal metric of type string.
     * 
     * @var ?string $currentDisplayValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('current_display_value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currentDisplayValue = null;
    
    /**
     * This number is the current value of a goal metric of type number.
     * 
     * @var ?float $currentNumberValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('current_number_value')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $currentNumberValue = null;
    
    /**
     * Globally unique identifier of the resource, as a string.
     * 
     * @var ?string $gid
     */
	#[\JMS\Serializer\Annotation\SerializedName('gid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $gid = null;
    
    /**
     * This number is the start value of a goal metric of type number.
     * 
     * @var ?float $initialNumberValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('initial_number_value')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $initialNumberValue = null;
    
    /**
     * *Conditional*. Only relevant for goal metrics of type ‘Number’. This field dictates the number of places after the decimal to round to, i.e. 0 is integer values, 1 rounds to the nearest tenth, and so on. Must be between 0 and 6, inclusive.
     * 
     * For percentage format, this may be unintuitive, as a value of 0.25 has a precision of 0, while a value of 0.251 has a precision of 1. This is due to 0.25 being displayed as 25%.
     * 
     * @var ?int $precision
     */
	#[\JMS\Serializer\Annotation\SerializedName('precision')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $precision = null;
    
    /**
     * This field defines how the progress value of a goal metric is being calculated. A goal's progress can be provided manually by the user, calculated automatically from contributing subgoals or projects, or managed by an integration with an external data source, such as Salesforce.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoalResponseMetricProgressSourceEnum $progressSource
     */
	#[\JMS\Serializer\Annotation\SerializedName('progress_source')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoalResponseMetricProgressSourceEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoalResponseMetricProgressSourceEnum $progressSource = null;
    
    /**
     * The subtype of this resource. Different subtypes retain many of the same fields and behavior, but may render differently in Asana or represent resources with different semantic meaning.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoalResponseMetricResourceSubtypeEnum $resourceSubtype
     */
	#[\JMS\Serializer\Annotation\SerializedName('resource_subtype')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoalResponseMetricResourceSubtypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoalResponseMetricResourceSubtypeEnum $resourceSubtype = null;
    
    /**
     * The base type of this resource.
     * 
     * @var ?string $resourceType
     */
	#[\JMS\Serializer\Annotation\SerializedName('resource_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $resourceType = null;
    
    /**
     * This number is the end value of a goal metric of type number. This number cannot equal `initial_number_value`.
     * 
     * @var ?float $targetNumberValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('target_number_value')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $targetNumberValue = null;
    
    /**
     * A supported unit of measure for the goal metric, or none.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoalResponseMetricUnitEnum $unit
     */
	#[\JMS\Serializer\Annotation\SerializedName('unit')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoalResponseMetricUnitEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoalResponseMetricUnitEnum $unit = null;
    
	public function __construct()
	{
		$this->canManage = null;
		$this->currencyCode = null;
		$this->currentDisplayValue = null;
		$this->currentNumberValue = null;
		$this->gid = null;
		$this->initialNumberValue = null;
		$this->precision = null;
		$this->progressSource = null;
		$this->resourceSubtype = null;
		$this->resourceType = null;
		$this->targetNumberValue = null;
		$this->unit = null;
	}
}
