"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import autoscalinggroupprovider as shared_autoscalinggroupprovider
from ..shared import capacityproviderstatus_enum as shared_capacityproviderstatus_enum
from ..shared import capacityproviderupdatestatus_enum as shared_capacityproviderupdatestatus_enum
from ..shared import tag as shared_tag
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CapacityProvider:
    r"""The details for a capacity provider."""
    
    auto_scaling_group_provider: Optional[shared_autoscalinggroupprovider.AutoScalingGroupProvider] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('autoScalingGroupProvider'), 'exclude': lambda f: f is None }})  
    capacity_provider_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('capacityProviderArn'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_capacityproviderstatus_enum.CapacityProviderStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tags'), 'exclude': lambda f: f is None }})  
    update_status: Optional[shared_capacityproviderupdatestatus_enum.CapacityProviderUpdateStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateStatus'), 'exclude': lambda f: f is None }})  
    update_status_reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateStatusReason'), 'exclude': lambda f: f is None }})  
    