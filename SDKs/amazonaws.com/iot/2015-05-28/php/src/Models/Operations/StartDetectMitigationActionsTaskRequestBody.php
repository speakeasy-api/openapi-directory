<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class StartDetectMitigationActionsTaskRequestBody
{
    /**
     *  The actions to be performed when a device has unexpected behavior. 
     * 
     * @var array<string> $actions
     */
	#[\JMS\Serializer\Annotation\SerializedName('actions')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $actions;
    
    /**
     *  Each mitigation action task must have a unique client request token. If you try to create a new task with the same token as a task that already exists, an exception occurs. If you omit this value, Amazon Web Services SDKs will automatically generate a unique client request. 
     * 
     * @var string $clientRequestToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientRequestToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $clientRequestToken;
    
    /**
     *  Specifies to list only active violations. 
     * 
     * @var ?bool $includeOnlyActiveViolations
     */
	#[\JMS\Serializer\Annotation\SerializedName('includeOnlyActiveViolations')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $includeOnlyActiveViolations = null;
    
    /**
     *  Specifies to include suppressed alerts. 
     * 
     * @var ?bool $includeSuppressedAlerts
     */
	#[\JMS\Serializer\Annotation\SerializedName('includeSuppressedAlerts')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $includeSuppressedAlerts = null;
    
    /**
     *  The target of a mitigation action task. 
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\StartDetectMitigationActionsTaskRequestBodyTarget $target
     */
	#[\JMS\Serializer\Annotation\SerializedName('target')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\StartDetectMitigationActionsTaskRequestBodyTarget')]
    public StartDetectMitigationActionsTaskRequestBodyTarget $target;
    
    /**
     *  Specifies the time period of which violation events occurred between. 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\StartDetectMitigationActionsTaskRequestBodyViolationEventOccurrenceRange $violationEventOccurrenceRange
     */
	#[\JMS\Serializer\Annotation\SerializedName('violationEventOccurrenceRange')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\StartDetectMitigationActionsTaskRequestBodyViolationEventOccurrenceRange')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StartDetectMitigationActionsTaskRequestBodyViolationEventOccurrenceRange $violationEventOccurrenceRange = null;
    
	public function __construct()
	{
		$this->actions = [];
		$this->clientRequestToken = "";
		$this->includeOnlyActiveViolations = null;
		$this->includeSuppressedAlerts = null;
		$this->target = new \OpenAPI\OpenAPI\Models\Operations\StartDetectMitigationActionsTaskRequestBodyTarget();
		$this->violationEventOccurrenceRange = null;
	}
}
