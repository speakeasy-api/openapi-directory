/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UpdateError } from "./updateerror";
import { UpdateStatusEnum } from "./updatestatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes the status of the last update on the environment, and any errors that were encountered.
 */
export class LastUpdate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Error" })
  @Type(() => UpdateError)
  error?: UpdateError;

  @SpeakeasyMetadata()
  @Expose({ name: "Source" })
  source?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: UpdateStatusEnum;
}
