// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TimePeriodCloseDayEnum - Indicates the day of the week this period ends on.
type TimePeriodCloseDayEnum string

const (
	TimePeriodCloseDayEnumDayOfWeekUnspecified TimePeriodCloseDayEnum = "DAY_OF_WEEK_UNSPECIFIED"
	TimePeriodCloseDayEnumMonday               TimePeriodCloseDayEnum = "MONDAY"
	TimePeriodCloseDayEnumTuesday              TimePeriodCloseDayEnum = "TUESDAY"
	TimePeriodCloseDayEnumWednesday            TimePeriodCloseDayEnum = "WEDNESDAY"
	TimePeriodCloseDayEnumThursday             TimePeriodCloseDayEnum = "THURSDAY"
	TimePeriodCloseDayEnumFriday               TimePeriodCloseDayEnum = "FRIDAY"
	TimePeriodCloseDayEnumSaturday             TimePeriodCloseDayEnum = "SATURDAY"
	TimePeriodCloseDayEnumSunday               TimePeriodCloseDayEnum = "SUNDAY"
)

func (e *TimePeriodCloseDayEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DAY_OF_WEEK_UNSPECIFIED":
		fallthrough
	case "MONDAY":
		fallthrough
	case "TUESDAY":
		fallthrough
	case "WEDNESDAY":
		fallthrough
	case "THURSDAY":
		fallthrough
	case "FRIDAY":
		fallthrough
	case "SATURDAY":
		fallthrough
	case "SUNDAY":
		*e = TimePeriodCloseDayEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TimePeriodCloseDayEnum: %s", s)
	}
}

// TimePeriodOpenDayEnum - Indicates the day of the week this period starts on.
type TimePeriodOpenDayEnum string

const (
	TimePeriodOpenDayEnumDayOfWeekUnspecified TimePeriodOpenDayEnum = "DAY_OF_WEEK_UNSPECIFIED"
	TimePeriodOpenDayEnumMonday               TimePeriodOpenDayEnum = "MONDAY"
	TimePeriodOpenDayEnumTuesday              TimePeriodOpenDayEnum = "TUESDAY"
	TimePeriodOpenDayEnumWednesday            TimePeriodOpenDayEnum = "WEDNESDAY"
	TimePeriodOpenDayEnumThursday             TimePeriodOpenDayEnum = "THURSDAY"
	TimePeriodOpenDayEnumFriday               TimePeriodOpenDayEnum = "FRIDAY"
	TimePeriodOpenDayEnumSaturday             TimePeriodOpenDayEnum = "SATURDAY"
	TimePeriodOpenDayEnumSunday               TimePeriodOpenDayEnum = "SUNDAY"
)

func (e *TimePeriodOpenDayEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DAY_OF_WEEK_UNSPECIFIED":
		fallthrough
	case "MONDAY":
		fallthrough
	case "TUESDAY":
		fallthrough
	case "WEDNESDAY":
		fallthrough
	case "THURSDAY":
		fallthrough
	case "FRIDAY":
		fallthrough
	case "SATURDAY":
		fallthrough
	case "SUNDAY":
		*e = TimePeriodOpenDayEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TimePeriodOpenDayEnum: %s", s)
	}
}

// TimePeriod - Represents a span of time that the business is open, starting on the specified open day/time and closing on the specified close day/time. The closing time must occur after the opening time, for example later in the same day, or on a subsequent day.
type TimePeriod struct {
	// Indicates the day of the week this period ends on.
	CloseDay *TimePeriodCloseDayEnum `json:"closeDay,omitempty"`
	// Time in 24hr ISO 8601 extended format (hh:mm). Valid values are 00:00-24:00, where 24:00 represents midnight at the end of the specified day field.
	CloseTime *string `json:"closeTime,omitempty"`
	// Indicates the day of the week this period starts on.
	OpenDay *TimePeriodOpenDayEnum `json:"openDay,omitempty"`
	// Time in 24hr ISO 8601 extended format (hh:mm). Valid values are 00:00-24:00, where 24:00 represents midnight at the end of the specified day field.
	OpenTime *string `json:"openTime,omitempty"`
}
