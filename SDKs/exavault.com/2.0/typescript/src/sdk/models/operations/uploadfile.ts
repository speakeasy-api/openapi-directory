/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class UploadFileRequestBodyFile extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, content=true" })
  content: Uint8Array;

  @SpeakeasyMetadata({ data: "multipart_form, name=file" })
  file: string;
}

export class UploadFileRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, file=true" })
  file?: UploadFileRequestBodyFile;
}

export class UploadFileRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody?: UploadFileRequestBody;

  /**
   * True if a file with the same name is found in the designated path, should be overwritten. False if different file names should be generated.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=allowOverwrite",
  })
  allowOverwrite?: boolean;

  /**
   * Access token required to make the API call.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=ev-access-token",
  })
  evAccessToken: string;

  /**
   * API Key required to make the API call.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=ev-api-key",
  })
  evApiKey: string;

  /**
   * File size, in bits, of the file being uploaded.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fileSize",
  })
  fileSize: number;

  /**
   * Allows a file upload to resume at a certain number of bytes.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=offsetBytes",
  })
  offsetBytes?: number;

  /**
   * Destination path for the file being uploaded, including the file name.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=path" })
  path: string;

  /**
   * True if upload resume is supported, false if it isn't.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=resume",
  })
  resume?: boolean;
}

export class UploadFileResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Successful Operation
   */
  @SpeakeasyMetadata()
  resourceResponse?: shared.ResourceResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
