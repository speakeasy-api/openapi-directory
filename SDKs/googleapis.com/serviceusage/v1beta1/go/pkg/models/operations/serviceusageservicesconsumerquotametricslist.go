// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ServiceusageServicesConsumerQuotaMetricsListSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type ServiceusageServicesConsumerQuotaMetricsListSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type ServiceusageServicesConsumerQuotaMetricsListSecurity struct {
	Option1 *ServiceusageServicesConsumerQuotaMetricsListSecurityOption1 `security:"option"`
	Option2 *ServiceusageServicesConsumerQuotaMetricsListSecurityOption2 `security:"option"`
}

// ServiceusageServicesConsumerQuotaMetricsListViewEnum - Specifies the level of detail for quota information in the response.
type ServiceusageServicesConsumerQuotaMetricsListViewEnum string

const (
	ServiceusageServicesConsumerQuotaMetricsListViewEnumQuotaViewUnspecified ServiceusageServicesConsumerQuotaMetricsListViewEnum = "QUOTA_VIEW_UNSPECIFIED"
	ServiceusageServicesConsumerQuotaMetricsListViewEnumBasic                ServiceusageServicesConsumerQuotaMetricsListViewEnum = "BASIC"
	ServiceusageServicesConsumerQuotaMetricsListViewEnumFull                 ServiceusageServicesConsumerQuotaMetricsListViewEnum = "FULL"
)

func (e ServiceusageServicesConsumerQuotaMetricsListViewEnum) ToPointer() *ServiceusageServicesConsumerQuotaMetricsListViewEnum {
	return &e
}

func (e *ServiceusageServicesConsumerQuotaMetricsListViewEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "QUOTA_VIEW_UNSPECIFIED":
		fallthrough
	case "BASIC":
		fallthrough
	case "FULL":
		*e = ServiceusageServicesConsumerQuotaMetricsListViewEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ServiceusageServicesConsumerQuotaMetricsListViewEnum: %v", v)
	}
}

type ServiceusageServicesConsumerQuotaMetricsListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Requested size of the next page of data.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// Token identifying which result to start with; returned by a previous list call.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Parent of the quotas resource. Some example names would be: `projects/123/services/serviceconsumermanagement.googleapis.com` `folders/345/services/serviceconsumermanagement.googleapis.com` `organizations/456/services/serviceconsumermanagement.googleapis.com`
	Parent string `pathParam:"style=simple,explode=false,name=parent"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// Specifies the level of detail for quota information in the response.
	View *ServiceusageServicesConsumerQuotaMetricsListViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type ServiceusageServicesConsumerQuotaMetricsListResponse struct {
	ContentType string
	// Successful response
	ListConsumerQuotaMetricsResponse *shared.ListConsumerQuotaMetricsResponse
	StatusCode                       int
	RawResponse                      *http.Response
}
