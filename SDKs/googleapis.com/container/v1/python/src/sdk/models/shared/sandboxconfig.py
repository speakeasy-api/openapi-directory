"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SandboxConfigTypeEnum(str, Enum):
    r"""Type of the sandbox to use for the node."""
    UNSPECIFIED = 'UNSPECIFIED'
    GVISOR = 'GVISOR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SandboxConfig:
    r"""SandboxConfig contains configurations of the sandbox to use for the node."""
    
    type: Optional[SandboxConfigTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of the sandbox to use for the node."""  
    