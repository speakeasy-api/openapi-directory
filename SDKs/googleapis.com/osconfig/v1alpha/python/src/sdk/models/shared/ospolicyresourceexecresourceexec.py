"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ospolicyresourcefile as shared_ospolicyresourcefile
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class OSPolicyResourceExecResourceExecInterpreterEnum(str, Enum):
    r"""Required. The script interpreter to use."""
    INTERPRETER_UNSPECIFIED = 'INTERPRETER_UNSPECIFIED'
    NONE = 'NONE'
    SHELL = 'SHELL'
    POWERSHELL = 'POWERSHELL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OSPolicyResourceExecResourceExec:
    r"""A file or script to execute."""
    
    args: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('args'), 'exclude': lambda f: f is None }})
    r"""Optional arguments to pass to the source during execution."""  
    file: Optional[shared_ospolicyresourcefile.OSPolicyResourceFile] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file'), 'exclude': lambda f: f is None }})
    r"""A remote or local file."""  
    interpreter: Optional[OSPolicyResourceExecResourceExecInterpreterEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interpreter'), 'exclude': lambda f: f is None }})
    r"""Required. The script interpreter to use."""  
    output_file_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outputFilePath'), 'exclude': lambda f: f is None }})
    r"""Only recorded for enforce Exec. Path to an output file (that is created by this Exec) whose content will be recorded in OSPolicyResourceCompliance after a successful run. Absence or failure to read this file will result in this ExecResource being non-compliant. Output file size is limited to 100K bytes."""  
    script: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('script'), 'exclude': lambda f: f is None }})
    r"""An inline script. The size of the script is limited to 32KiB."""  
    