"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ManualTriggerInput:
    r"""A single manual trigger in Display & Video 360."""
    
    activation_duration_minutes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activationDurationMinutes'), 'exclude': lambda f: f is None }})
    r"""Required. The maximum duration of each activation in minutes. Must be between 1 and 360 inclusive. After this duration, the trigger will be automatically deactivated."""  
    advertiser_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advertiserId'), 'exclude': lambda f: f is None }})
    r"""Required. Immutable. The unique ID of the advertiser that the manual trigger belongs to."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. The display name of the manual trigger. Must be UTF-8 encoded with a maximum size of 240 bytes."""  
    
class ManualTriggerStateEnum(str, Enum):
    r"""Output only. The state of the manual trigger. Will be set to the `INACTIVE` state upon creation."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    INACTIVE = 'INACTIVE'
    ACTIVE = 'ACTIVE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ManualTrigger:
    r"""A single manual trigger in Display & Video 360."""
    
    activation_duration_minutes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activationDurationMinutes'), 'exclude': lambda f: f is None }})
    r"""Required. The maximum duration of each activation in minutes. Must be between 1 and 360 inclusive. After this duration, the trigger will be automatically deactivated."""  
    advertiser_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advertiserId'), 'exclude': lambda f: f is None }})
    r"""Required. Immutable. The unique ID of the advertiser that the manual trigger belongs to."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. The display name of the manual trigger. Must be UTF-8 encoded with a maximum size of 240 bytes."""  
    latest_activation_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('latestActivationTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The timestamp of the trigger's latest activation."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. The resource name of the manual trigger."""  
    state: Optional[ManualTriggerStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Output only. The state of the manual trigger. Will be set to the `INACTIVE` state upon creation."""  
    trigger_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('triggerId'), 'exclude': lambda f: f is None }})
    r"""Output only. The unique ID of the manual trigger."""  
    