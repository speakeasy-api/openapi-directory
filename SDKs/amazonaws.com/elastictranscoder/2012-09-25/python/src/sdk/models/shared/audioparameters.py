"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import audiocodecoptions as shared_audiocodecoptions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AudioParameters:
    r"""Parameters required for transcoding audio."""
    
    audio_packing_mode: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AudioPackingMode'), 'exclude': lambda f: f is None }})  
    bit_rate: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BitRate'), 'exclude': lambda f: f is None }})  
    channels: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Channels'), 'exclude': lambda f: f is None }})  
    codec: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Codec'), 'exclude': lambda f: f is None }})  
    codec_options: Optional[shared_audiocodecoptions.AudioCodecOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CodecOptions'), 'exclude': lambda f: f is None }})  
    sample_rate: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SampleRate'), 'exclude': lambda f: f is None }})  
    