// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PersonalApplicationPolicyInstallTypeEnum - The type of installation to perform.
type PersonalApplicationPolicyInstallTypeEnum string

const (
	PersonalApplicationPolicyInstallTypeEnumInstallTypeUnspecified PersonalApplicationPolicyInstallTypeEnum = "INSTALL_TYPE_UNSPECIFIED"
	PersonalApplicationPolicyInstallTypeEnumBlocked                PersonalApplicationPolicyInstallTypeEnum = "BLOCKED"
	PersonalApplicationPolicyInstallTypeEnumAvailable              PersonalApplicationPolicyInstallTypeEnum = "AVAILABLE"
)

func (e *PersonalApplicationPolicyInstallTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INSTALL_TYPE_UNSPECIFIED":
		fallthrough
	case "BLOCKED":
		fallthrough
	case "AVAILABLE":
		*e = PersonalApplicationPolicyInstallTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PersonalApplicationPolicyInstallTypeEnum: %s", s)
	}
}

// PersonalApplicationPolicy - Policies for apps in the personal profile of a company-owned device with a work profile.
type PersonalApplicationPolicy struct {
	// The type of installation to perform.
	InstallType *PersonalApplicationPolicyInstallTypeEnum `json:"installType,omitempty"`
	// The package name of the application.
	PackageName *string `json:"packageName,omitempty"`
}
