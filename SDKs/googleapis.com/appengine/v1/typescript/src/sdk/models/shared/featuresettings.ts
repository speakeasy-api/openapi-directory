/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The feature specific settings to be used in the application. These define behaviors that are user configurable.
 */
export class FeatureSettings extends SpeakeasyBase {
  /**
   * Boolean value indicating if split health checks should be used instead of the legacy health checks. At an app.yaml level, this means defaulting to 'readiness_check' and 'liveness_check' values instead of 'health_check' ones. Once the legacy 'health_check' behavior is deprecated, and this value is always true, this setting can be removed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "splitHealthChecks" })
  splitHealthChecks?: boolean;

  /**
   * If true, use Container-Optimized OS (https://cloud.google.com/container-optimized-os/) base image for VMs, rather than a base Debian image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "useContainerOptimizedOs" })
  useContainerOptimizedOs?: boolean;
}
