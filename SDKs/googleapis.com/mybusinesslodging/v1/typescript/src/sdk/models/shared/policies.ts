/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PaymentOptions } from "./paymentoptions";
import { TimeOfDay } from "./timeofday";
import { Expose, Type } from "class-transformer";

/**
 * All inclusive available exception.
 */
export enum PoliciesAllInclusiveAvailableExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * All inclusive only exception.
 */
export enum PoliciesAllInclusiveOnlyExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Check-in time exception.
 */
export enum PoliciesCheckinTimeExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Check-out time exception.
 */
export enum PoliciesCheckoutTimeExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Kids stay free exception.
 */
export enum PoliciesKidsStayFreeExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Max child age exception.
 */
export enum PoliciesMaxChildAgeExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Max kids stay free count exception.
 */
export enum PoliciesMaxKidsStayFreeCountExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Smoke free property exception.
 */
export enum PoliciesSmokeFreePropertyExceptionEnum {
  ExceptionUnspecified = "EXCEPTION_UNSPECIFIED",
  UnderConstruction = "UNDER_CONSTRUCTION",
  DependentOnSeason = "DEPENDENT_ON_SEASON",
  DependentOnDayOfWeek = "DEPENDENT_ON_DAY_OF_WEEK",
}

/**
 * Property rules that impact guests.
 */
export class Policies extends SpeakeasyBase {
  /**
   * All inclusive available. The hotel offers a rate option that includes the cost of the room, meals, activities, and other amenities that might otherwise be charged separately.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allInclusiveAvailable" })
  allInclusiveAvailable?: boolean;

  /**
   * All inclusive available exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allInclusiveAvailableException" })
  allInclusiveAvailableException?: PoliciesAllInclusiveAvailableExceptionEnum;

  /**
   * All inclusive only. The only rate option offered by the hotel is a rate that includes the cost of the room, meals, activities and other amenities that might otherwise be charged separately.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allInclusiveOnly" })
  allInclusiveOnly?: boolean;

  /**
   * All inclusive only exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allInclusiveOnlyException" })
  allInclusiveOnlyException?: PoliciesAllInclusiveOnlyExceptionEnum;

  /**
   * Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "checkinTime" })
  @Type(() => TimeOfDay)
  checkinTime?: TimeOfDay;

  /**
   * Check-in time exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "checkinTimeException" })
  checkinTimeException?: PoliciesCheckinTimeExceptionEnum;

  /**
   * Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "checkoutTime" })
  @Type(() => TimeOfDay)
  checkoutTime?: TimeOfDay;

  /**
   * Check-out time exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "checkoutTimeException" })
  checkoutTimeException?: PoliciesCheckoutTimeExceptionEnum;

  /**
   * Kids stay free. The children of guests are allowed to stay in the room/suite of a parent or adult without an additional fee. The policy may or may not stipulate a limit of the child's age or the overall number of children allowed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kidsStayFree" })
  kidsStayFree?: boolean;

  /**
   * Kids stay free exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kidsStayFreeException" })
  kidsStayFreeException?: PoliciesKidsStayFreeExceptionEnum;

  /**
   * Max child age. The hotel allows children up to a certain age to stay in the room/suite of a parent or adult without an additional fee.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxChildAge" })
  maxChildAge?: number;

  /**
   * Max child age exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxChildAgeException" })
  maxChildAgeException?: PoliciesMaxChildAgeExceptionEnum;

  /**
   * Max kids stay free count. The hotel allows a specific, defined number of children to stay in the room/suite of a parent or adult without an additional fee.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxKidsStayFreeCount" })
  maxKidsStayFreeCount?: number;

  /**
   * Max kids stay free count exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxKidsStayFreeCountException" })
  maxKidsStayFreeCountException?: PoliciesMaxKidsStayFreeCountExceptionEnum;

  /**
   * Forms of payment accepted at the property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentOptions" })
  @Type(() => PaymentOptions)
  paymentOptions?: PaymentOptions;

  /**
   * Smoke free property. Smoking is not allowed inside the building, on balconies, or in outside spaces. Hotels that offer a designated area for guests to smoke are not considered smoke-free properties.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "smokeFreeProperty" })
  smokeFreeProperty?: boolean;

  /**
   * Smoke free property exception.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "smokeFreePropertyException" })
  smokeFreePropertyException?: PoliciesSmokeFreePropertyExceptionEnum;
}
