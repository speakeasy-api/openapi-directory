"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectorConfiguration = void 0;
var utils_1 = require("../../../internal/utils");
var authenticationconfig_1 = require("./authenticationconfig");
var connectormetadata_1 = require("./connectormetadata");
var connectorprovisioningconfig_1 = require("./connectorprovisioningconfig");
var connectorprovisioningtypeenum_1 = require("./connectorprovisioningtypeenum");
var connectorruntimesetting_1 = require("./connectorruntimesetting");
var connectortypeenum_1 = require("./connectortypeenum");
var class_transformer_1 = require("class-transformer");
/**
 *  The configuration settings related to a given connector.
 */
var ConnectorConfiguration = /** @class */ (function (_super) {
    __extends(ConnectorConfiguration, _super);
    function ConnectorConfiguration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authenticationConfig" }),
        (0, class_transformer_1.Type)(function () { return authenticationconfig_1.AuthenticationConfig; }),
        __metadata("design:type", authenticationconfig_1.AuthenticationConfig)
    ], ConnectorConfiguration.prototype, "authenticationConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "canUseAsDestination" }),
        __metadata("design:type", Boolean)
    ], ConnectorConfiguration.prototype, "canUseAsDestination", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "canUseAsSource" }),
        __metadata("design:type", Boolean)
    ], ConnectorConfiguration.prototype, "canUseAsSource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectorArn" }),
        __metadata("design:type", String)
    ], ConnectorConfiguration.prototype, "connectorArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectorDescription" }),
        __metadata("design:type", String)
    ], ConnectorConfiguration.prototype, "connectorDescription", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectorLabel" }),
        __metadata("design:type", String)
    ], ConnectorConfiguration.prototype, "connectorLabel", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectorMetadata" }),
        (0, class_transformer_1.Type)(function () { return connectormetadata_1.ConnectorMetadata; }),
        __metadata("design:type", connectormetadata_1.ConnectorMetadata)
    ], ConnectorConfiguration.prototype, "connectorMetadata", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectorModes" }),
        __metadata("design:type", Array)
    ], ConnectorConfiguration.prototype, "connectorModes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectorName" }),
        __metadata("design:type", String)
    ], ConnectorConfiguration.prototype, "connectorName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectorOwner" }),
        __metadata("design:type", String)
    ], ConnectorConfiguration.prototype, "connectorOwner", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectorProvisioningConfig" }),
        (0, class_transformer_1.Type)(function () { return connectorprovisioningconfig_1.ConnectorProvisioningConfig; }),
        __metadata("design:type", connectorprovisioningconfig_1.ConnectorProvisioningConfig)
    ], ConnectorConfiguration.prototype, "connectorProvisioningConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectorProvisioningType" }),
        __metadata("design:type", String)
    ], ConnectorConfiguration.prototype, "connectorProvisioningType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: connectorruntimesetting_1.ConnectorRuntimeSetting }),
        (0, class_transformer_1.Expose)({ name: "connectorRuntimeSettings" }),
        (0, class_transformer_1.Type)(function () { return connectorruntimesetting_1.ConnectorRuntimeSetting; }),
        __metadata("design:type", Array)
    ], ConnectorConfiguration.prototype, "connectorRuntimeSettings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectorType" }),
        __metadata("design:type", String)
    ], ConnectorConfiguration.prototype, "connectorType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connectorVersion" }),
        __metadata("design:type", String)
    ], ConnectorConfiguration.prototype, "connectorVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isPrivateLinkEnabled" }),
        __metadata("design:type", Boolean)
    ], ConnectorConfiguration.prototype, "isPrivateLinkEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isPrivateLinkEndpointUrlRequired" }),
        __metadata("design:type", Boolean)
    ], ConnectorConfiguration.prototype, "isPrivateLinkEndpointUrlRequired", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "logoURL" }),
        __metadata("design:type", String)
    ], ConnectorConfiguration.prototype, "logoURL", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "registeredAt" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], ConnectorConfiguration.prototype, "registeredAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "registeredBy" }),
        __metadata("design:type", String)
    ], ConnectorConfiguration.prototype, "registeredBy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "supportedApiVersions" }),
        __metadata("design:type", Array)
    ], ConnectorConfiguration.prototype, "supportedApiVersions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "supportedDestinationConnectors" }),
        __metadata("design:type", Array)
    ], ConnectorConfiguration.prototype, "supportedDestinationConnectors", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "supportedOperators" }),
        __metadata("design:type", Array)
    ], ConnectorConfiguration.prototype, "supportedOperators", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "supportedSchedulingFrequencies" }),
        __metadata("design:type", Array)
    ], ConnectorConfiguration.prototype, "supportedSchedulingFrequencies", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "supportedTriggerTypes" }),
        __metadata("design:type", Array)
    ], ConnectorConfiguration.prototype, "supportedTriggerTypes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "supportedWriteOperations" }),
        __metadata("design:type", Array)
    ], ConnectorConfiguration.prototype, "supportedWriteOperations", void 0);
    return ConnectorConfiguration;
}(utils_1.SpeakeasyBase));
exports.ConnectorConfiguration = ConnectorConfiguration;
