/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ExpenseTransactionLine {
    @JsonProperty("accountRef")
    public RecordRef accountRef;

    public ExpenseTransactionLine withAccountRef(RecordRef accountRef) {
        this.accountRef = accountRef;
        return this;
    }
    
    /**
     * Amount of the line, exclusive of tax.
     */
    @JsonProperty("netAmount")
    public Double netAmount;

    public ExpenseTransactionLine withNetAmount(Double netAmount) {
        this.netAmount = netAmount;
        return this;
    }
    
    /**
     * Amount of tax for the line.
     */
    @JsonProperty("taxAmount")
    public Double taxAmount;

    public ExpenseTransactionLine withTaxAmount(Double taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxRateRef")
    public RecordRef taxRateRef;

    public ExpenseTransactionLine withTaxRateRef(RecordRef taxRateRef) {
        this.taxRateRef = taxRateRef;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trackingRefs")
    public RecordRef[] trackingRefs;

    public ExpenseTransactionLine withTrackingRefs(RecordRef[] trackingRefs) {
        this.trackingRefs = trackingRefs;
        return this;
    }
    
    public ExpenseTransactionLine(@JsonProperty("accountRef") RecordRef accountRef, @JsonProperty("netAmount") Double netAmount, @JsonProperty("taxAmount") Double taxAmount) {
        this.accountRef = accountRef;
        this.netAmount = netAmount;
        this.taxAmount = taxAmount;
  }
}
