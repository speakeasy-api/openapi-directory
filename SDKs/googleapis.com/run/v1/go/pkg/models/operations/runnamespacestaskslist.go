// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type RunNamespacesTasksListSecurity struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type RunNamespacesTasksListPathParams struct {
	// Required. The namespace from which the tasks should be listed. Replace {namespace} with the project ID or number. It takes the form namespaces/{namespace}. For example: namespaces/PROJECT_ID
	Parent string `pathParam:"style=simple,explode=false,name=parent"`
}

type RunNamespacesTasksListQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Optional. Optional encoded string to continue paging.
	Continue *string `queryParam:"style=form,explode=true,name=continue"`
	// Optional. Not supported by Cloud Run.
	FieldSelector *string `queryParam:"style=form,explode=true,name=fieldSelector"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Optional. Not supported by Cloud Run.
	IncludeUninitialized *bool `queryParam:"style=form,explode=true,name=includeUninitialized"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// Optional. Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn. For example, to list all tasks of execution "foo" in succeeded state: `run.googleapis.com/execution=foo,run.googleapis.com/runningState=Succeeded`. Supported states are: * `Pending`: Initial state of all tasks. The task has not yet started but eventually will. * `Running`: Container instances for this task are running or will be running shortly. * `Succeeded`: No more container instances to run for the task, and the last attempt succeeded. * `Failed`: No more container instances to run for the task, and the last attempt failed. This task has run out of retry attempts. * `Cancelled`: Task was running but got stopped because its parent execution has been aborted. * `Abandoned`: The task has not yet started and never will because its parent execution has been aborted.
	LabelSelector *string `queryParam:"style=form,explode=true,name=labelSelector"`
	// Optional. The maximum number of records that should be returned.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Optional. Not supported by Cloud Run.
	ResourceVersion *string `queryParam:"style=form,explode=true,name=resourceVersion"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// Optional. Not supported by Cloud Run.
	Watch *bool `queryParam:"style=form,explode=true,name=watch"`
}

type RunNamespacesTasksListRequest struct {
	PathParams  RunNamespacesTasksListPathParams
	QueryParams RunNamespacesTasksListQueryParams
	Security    RunNamespacesTasksListSecurity
}

type RunNamespacesTasksListResponse struct {
	ContentType string
	// Successful response
	ListTasksResponse *shared.ListTasksResponse
	StatusCode        int
	RawResponse       *http.Response
}
