// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RedshiftResultCompressionTypeEnum - The compression used for Redshift query results.
type RedshiftResultCompressionTypeEnum string

const (
	RedshiftResultCompressionTypeEnumNone   RedshiftResultCompressionTypeEnum = "None"
	RedshiftResultCompressionTypeEnumGzip   RedshiftResultCompressionTypeEnum = "GZIP"
	RedshiftResultCompressionTypeEnumBzip2  RedshiftResultCompressionTypeEnum = "BZIP2"
	RedshiftResultCompressionTypeEnumZstd   RedshiftResultCompressionTypeEnum = "ZSTD"
	RedshiftResultCompressionTypeEnumSnappy RedshiftResultCompressionTypeEnum = "SNAPPY"
)

func (e RedshiftResultCompressionTypeEnum) ToPointer() *RedshiftResultCompressionTypeEnum {
	return &e
}

func (e *RedshiftResultCompressionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "None":
		fallthrough
	case "GZIP":
		fallthrough
	case "BZIP2":
		fallthrough
	case "ZSTD":
		fallthrough
	case "SNAPPY":
		*e = RedshiftResultCompressionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RedshiftResultCompressionTypeEnum: %v", v)
	}
}
