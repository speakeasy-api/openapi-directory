import { SpeakeasyBase } from "../../../internal/utils";
/**
 * Specifies Kerberos related configuration.
 */
export declare class KerberosConfig extends SpeakeasyBase {
    /**
     * Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
     */
    crossRealmTrustAdminServer?: string;
    /**
     * Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
     */
    crossRealmTrustKdc?: string;
    /**
     * Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
     */
    crossRealmTrustRealm?: string;
    /**
     * Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
     */
    crossRealmTrustSharedPasswordUri?: string;
    /**
     * Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
     */
    enableKerberos?: boolean;
    /**
     * Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
     */
    kdcDbKeyUri?: string;
    /**
     * Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
     */
    keyPasswordUri?: string;
    /**
     * Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
     */
    keystorePasswordUri?: string;
    /**
     * Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
     */
    keystoreUri?: string;
    /**
     * Optional. The uri of the KMS key used to encrypt various sensitive files.
     */
    kmsKeyUri?: string;
    /**
     * Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
     */
    realm?: string;
    /**
     * Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
     */
    rootPrincipalPasswordUri?: string;
    /**
     * Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
     */
    tgtLifetimeHours?: number;
    /**
     * Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
     */
    truststorePasswordUri?: string;
    /**
     * Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
     */
    truststoreUri?: string;
}
