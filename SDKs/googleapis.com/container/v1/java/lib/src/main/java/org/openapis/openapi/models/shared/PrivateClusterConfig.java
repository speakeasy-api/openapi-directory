/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PrivateClusterConfig - Configuration options for private clusters.
 */
public class PrivateClusterConfig {
    /**
     * Whether the master's internal IP address is used as the cluster endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enablePrivateEndpoint")
    public Boolean enablePrivateEndpoint;
    public PrivateClusterConfig withEnablePrivateEndpoint(Boolean enablePrivateEndpoint) {
        this.enablePrivateEndpoint = enablePrivateEndpoint;
        return this;
    }
    
    /**
     * Whether nodes have internal IP addresses only. If enabled, all nodes are given only RFC 1918 private addresses and communicate with the master via private networking.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enablePrivateNodes")
    public Boolean enablePrivateNodes;
    public PrivateClusterConfig withEnablePrivateNodes(Boolean enablePrivateNodes) {
        this.enablePrivateNodes = enablePrivateNodes;
        return this;
    }
    
    /**
     * Configuration for controlling master global access settings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("masterGlobalAccessConfig")
    public PrivateClusterMasterGlobalAccessConfig masterGlobalAccessConfig;
    public PrivateClusterConfig withMasterGlobalAccessConfig(PrivateClusterMasterGlobalAccessConfig masterGlobalAccessConfig) {
        this.masterGlobalAccessConfig = masterGlobalAccessConfig;
        return this;
    }
    
    /**
     * The IP range in CIDR notation to use for the hosted master network. This range will be used for assigning internal IP addresses to the master or set of masters, as well as the ILB VIP. This range must not overlap with any other ranges in use within the cluster's network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("masterIpv4CidrBlock")
    public String masterIpv4CidrBlock;
    public PrivateClusterConfig withMasterIpv4CidrBlock(String masterIpv4CidrBlock) {
        this.masterIpv4CidrBlock = masterIpv4CidrBlock;
        return this;
    }
    
    /**
     * Output only. The peering name in the customer VPC used by this cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("peeringName")
    public String peeringName;
    public PrivateClusterConfig withPeeringName(String peeringName) {
        this.peeringName = peeringName;
        return this;
    }
    
    /**
     * Output only. The internal IP address of this cluster's master endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateEndpoint")
    public String privateEndpoint;
    public PrivateClusterConfig withPrivateEndpoint(String privateEndpoint) {
        this.privateEndpoint = privateEndpoint;
        return this;
    }
    
    /**
     * Subnet to provision the master's private endpoint during cluster creation. Specified in projects/* /regions/* /subnetworks/* format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateEndpointSubnetwork")
    public String privateEndpointSubnetwork;
    public PrivateClusterConfig withPrivateEndpointSubnetwork(String privateEndpointSubnetwork) {
        this.privateEndpointSubnetwork = privateEndpointSubnetwork;
        return this;
    }
    
    /**
     * Output only. The external IP address of this cluster's master endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publicEndpoint")
    public String publicEndpoint;
    public PrivateClusterConfig withPublicEndpoint(String publicEndpoint) {
        this.publicEndpoint = publicEndpoint;
        return this;
    }
    
}
