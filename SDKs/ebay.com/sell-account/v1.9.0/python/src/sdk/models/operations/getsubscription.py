"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import subscriptionresponse as shared_subscriptionresponse
from typing import Optional


@dataclasses.dataclass
class GetSubscriptionSecurity:
    
    api_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetSubscriptionRequest:
    
    continuation_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'continuation_token', 'style': 'form', 'explode': True }})
    r"""This field is for future use."""  
    limit: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""This field is for future use."""  
    

@dataclasses.dataclass
class GetSubscriptionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    subscription_response: Optional[shared_subscriptionresponse.SubscriptionResponse] = dataclasses.field(default=None)
    r"""Success"""  
    