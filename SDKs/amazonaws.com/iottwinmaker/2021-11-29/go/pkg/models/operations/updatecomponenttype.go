// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdateComponentTypePathParams struct {
	// The ID of the component type.
	ComponentTypeID string `pathParam:"style=simple,explode=false,name=componentTypeId"`
	// The ID of the workspace.
	WorkspaceID string `pathParam:"style=simple,explode=false,name=workspaceId"`
}

type UpdateComponentTypeHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateComponentTypeRequestBody struct {
	// The component type name.
	ComponentTypeName *string `json:"componentTypeName,omitempty"`
	// The description of the component type.
	Description *string `json:"description,omitempty"`
	// Specifies the component type that this component type extends.
	ExtendsFrom []string `json:"extendsFrom,omitempty"`
	// An object that maps strings to the functions in the component type. Each string in the mapping must be unique to this object.
	Functions map[string]shared.FunctionRequest `json:"functions,omitempty"`
	// A Boolean value that specifies whether an entity can have more than one component of this type.
	IsSingleton *bool `json:"isSingleton,omitempty"`
	// An object that maps strings to the property definitions in the component type. Each string in the mapping must be unique to this object.
	PropertyDefinitions map[string]shared.PropertyDefinitionRequest `json:"propertyDefinitions,omitempty"`
	// The property groups.
	PropertyGroups map[string]shared.PropertyGroupRequest `json:"propertyGroups,omitempty"`
}

type UpdateComponentTypeRequest struct {
	PathParams UpdateComponentTypePathParams
	Headers    UpdateComponentTypeHeaders
	Request    UpdateComponentTypeRequestBody `request:"mediaType=application/json"`
}

type UpdateComponentTypeResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateComponentTypeResponse *shared.UpdateComponentTypeResponse
	// ValidationException
	ValidationException interface{}
}
