/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export enum WritableCircuitStatusEnum {
  Planned = "planned",
  Provisioning = "provisioning",
  Active = "active",
  Offline = "offline",
  Deprovisioning = "deprovisioning",
  Decommissioned = "decommissioned",
}

export class WritableCircuitInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cid" })
  cid: string;

  @SpeakeasyMetadata()
  @Expose({ name: "comments" })
  comments?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "commit_rate" })
  commitRate?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_fields" })
  customFields?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "install_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  installDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "provider" })
  provider: number;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: WritableCircuitStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "tenant" })
  tenant?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: number;
}
