"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SharedconnectionConnectionsDefaultApplicationJSONCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SharedconnectionConnectionsDefaultApplicationJSON:
    r"""bad_request: proper details are not provided for connection in body."""
    
    code: SharedconnectionConnectionsDefaultApplicationJSONCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    
class SharedconnectionConnections200ApplicationJSONCredentialTypeEnum(str, Enum):
    r"""the type of the credential"""
    CREDENTIALS = 'credentials'
    CERTIFICATE = 'certificate'
    KEY = 'key'

class SharedconnectionConnections200ApplicationJSONServiceTypeEnum(str, Enum):
    r"""service type of shared connection can be apple|gitlab|googleplay|jira"""
    APPLE = 'apple'
    JIRA = 'jira'
    GOOGLEPLAY = 'googleplay'
    GITLAB = 'gitlab'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SharedconnectionConnections200ApplicationJSON:
    r"""SharedConnectionResponse"""
    
    display_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName') }})
    r"""display name of shared connection"""  
    service_type: SharedconnectionConnections200ApplicationJSONServiceTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceType') }})
    r"""service type of shared connection can be apple|gitlab|googleplay|jira"""  
    credential_type: Optional[SharedconnectionConnections200ApplicationJSONCredentialTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('credentialType'), 'exclude': lambda f: f is None }})
    r"""the type of the credential"""  
    

@dataclasses.dataclass
class SharedconnectionConnectionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    sharedconnection_connections_200_application_json_objects: Optional[list[SharedconnectionConnections200ApplicationJSON]] = dataclasses.field(default=None)
    r"""Success"""  
    sharedconnection_connections_default_application_json_object: Optional[SharedconnectionConnectionsDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""bad_request: proper details are not provided for connection in body."""  
    