"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LeaderboardOrderEnum(str, Enum):
    r"""How scores are ordered."""
    SCORE_ORDER_UNSPECIFIED = 'SCORE_ORDER_UNSPECIFIED'
    LARGER_IS_BETTER = 'LARGER_IS_BETTER'
    SMALLER_IS_BETTER = 'SMALLER_IS_BETTER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Leaderboard:
    r"""The Leaderboard resource."""
    
    icon_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iconUrl'), 'exclude': lambda f: f is None }})
    r"""The icon for the leaderboard."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The leaderboard ID."""  
    is_icon_url_default: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isIconUrlDefault'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the icon image being returned is a default image, or is game-provided."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Uniquely identifies the type of this resource. Value is always the fixed string `games#leaderboard`."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the leaderboard."""  
    order: Optional[LeaderboardOrderEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('order'), 'exclude': lambda f: f is None }})
    r"""How scores are ordered."""  
    