/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LicenseCountingTypeEnum } from "./licensecountingtypeenum";
import { ProductInformation } from "./productinformation";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateLicenseConfigurationRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DisassociateWhenNotFound" })
  disassociateWhenNotFound?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "LicenseCount" })
  licenseCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "LicenseCountHardLimit" })
  licenseCountHardLimit?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "LicenseCountingType" })
  licenseCountingType: LicenseCountingTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LicenseRules" })
  licenseRules?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata({ elemType: ProductInformation })
  @Expose({ name: "ProductInformationList" })
  @Type(() => ProductInformation)
  productInformationList?: ProductInformation[];

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
