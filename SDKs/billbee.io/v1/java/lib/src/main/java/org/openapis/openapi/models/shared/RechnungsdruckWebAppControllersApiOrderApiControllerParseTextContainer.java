/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer {
    /**
     * If true, the string will be handled as html.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsHtml")
    @SpeakeasyMetadata("form:name=IsHtml")
    public Boolean isHtml;

    public RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer withIsHtml(Boolean isHtml) {
        this.isHtml = isHtml;
        return this;
    }
    
    /**
     * The ISO 639-1 code of the target language. Using default if not set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Language")
    @SpeakeasyMetadata("form:name=Language")
    public String language;

    public RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    /**
     * The text to parse and replace the placeholders in.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TextToParse")
    @SpeakeasyMetadata("form:name=TextToParse")
    public String textToParse;

    public RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer withTextToParse(String textToParse) {
        this.textToParse = textToParse;
        return this;
    }
    
    /**
     * If true, then the placeholder values are trimmed after usage.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Trim")
    @SpeakeasyMetadata("form:name=Trim")
    public Boolean trim;

    public RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer withTrim(Boolean trim) {
        this.trim = trim;
        return this;
    }
    
    public RechnungsdruckWebAppControllersApiOrderApiControllerParseTextContainer(){}
}
