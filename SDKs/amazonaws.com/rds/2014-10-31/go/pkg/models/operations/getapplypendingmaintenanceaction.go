// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETApplyPendingMaintenanceActionActionEnum
type GETApplyPendingMaintenanceActionActionEnum string

const (
	GETApplyPendingMaintenanceActionActionEnumApplyPendingMaintenanceAction GETApplyPendingMaintenanceActionActionEnum = "ApplyPendingMaintenanceAction"
)

func (e *GETApplyPendingMaintenanceActionActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ApplyPendingMaintenanceAction":
		*e = GETApplyPendingMaintenanceActionActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETApplyPendingMaintenanceActionActionEnum: %s", s)
	}
}

// GETApplyPendingMaintenanceActionVersionEnum
type GETApplyPendingMaintenanceActionVersionEnum string

const (
	GETApplyPendingMaintenanceActionVersionEnumTwoThousandAndFourteen1031 GETApplyPendingMaintenanceActionVersionEnum = "2014-10-31"
)

func (e *GETApplyPendingMaintenanceActionVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2014-10-31":
		*e = GETApplyPendingMaintenanceActionVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETApplyPendingMaintenanceActionVersionEnum: %s", s)
	}
}

type GETApplyPendingMaintenanceActionRequest struct {
	Action GETApplyPendingMaintenanceActionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The pending maintenance action to apply to this resource.</p> <p>Valid values: <code>system-update</code>, <code>db-upgrade</code>, <code>hardware-maintenance</code>, <code>ca-certificate-rotation</code> </p>
	ApplyAction string `queryParam:"style=form,explode=true,name=ApplyAction"`
	// <p>A value that specifies the type of opt-in request, or undoes an opt-in request. An opt-in request of type <code>immediate</code> can't be undone.</p> <p>Valid values:</p> <ul> <li> <p> <code>immediate</code> - Apply the maintenance action immediately.</p> </li> <li> <p> <code>next-maintenance</code> - Apply the maintenance action during the next maintenance window for the resource.</p> </li> <li> <p> <code>undo-opt-in</code> - Cancel any existing <code>next-maintenance</code> opt-in requests.</p> </li> </ul>
	OptInType string `queryParam:"style=form,explode=true,name=OptInType"`
	// The RDS Amazon Resource Name (ARN) of the resource that the pending maintenance action applies to. For information about creating an ARN, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.ARN.html#USER_Tagging.ARN.Constructing"> Constructing an RDS Amazon Resource Name (ARN)</a>.
	ResourceIdentifier string                                      `queryParam:"style=form,explode=true,name=ResourceIdentifier"`
	Version            GETApplyPendingMaintenanceActionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm      *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETApplyPendingMaintenanceActionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
