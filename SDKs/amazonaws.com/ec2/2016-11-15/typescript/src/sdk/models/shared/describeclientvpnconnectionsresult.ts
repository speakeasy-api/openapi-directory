/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The state of the client connection.
 */
export enum DescribeClientVpnConnectionsResultConnectionsStatusCodeEnum {
  Active = "active",
  FailedToTerminate = "failed-to-terminate",
  Terminating = "terminating",
  Terminated = "terminated",
}

/**
 * The current state of the client connection.
 */
export class DescribeClientVpnConnectionsResultConnectionsStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  code?: DescribeClientVpnConnectionsResultConnectionsStatusCodeEnum;

  @SpeakeasyMetadata()
  message?: string;
}

/**
 * Describes a client connection.
 */
export class DescribeClientVpnConnectionsResultConnections extends SpeakeasyBase {
  @SpeakeasyMetadata()
  clientIp?: string;

  @SpeakeasyMetadata()
  clientVpnEndpointId?: string;

  @SpeakeasyMetadata()
  commonName?: string;

  @SpeakeasyMetadata()
  connectionEndTime?: string;

  @SpeakeasyMetadata()
  connectionEstablishedTime?: string;

  @SpeakeasyMetadata()
  connectionId?: string;

  @SpeakeasyMetadata()
  egressBytes?: string;

  @SpeakeasyMetadata()
  egressPackets?: string;

  @SpeakeasyMetadata()
  ingressBytes?: string;

  @SpeakeasyMetadata()
  ingressPackets?: string;

  @SpeakeasyMetadata()
  postureComplianceStatuses?: string[];

  @SpeakeasyMetadata()
  status?: DescribeClientVpnConnectionsResultConnectionsStatus;

  @SpeakeasyMetadata()
  timestamp?: string;

  @SpeakeasyMetadata()
  username?: string;
}

/**
 * Success
 */
export class DescribeClientVpnConnectionsResult extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: DescribeClientVpnConnectionsResultConnections,
  })
  connections?: DescribeClientVpnConnectionsResultConnections[];

  @SpeakeasyMetadata()
  nextToken?: string;
}
