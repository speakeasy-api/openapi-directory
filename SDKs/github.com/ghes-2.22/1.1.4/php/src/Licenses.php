<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Licenses 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Get a license
     * 
     * https://docs.github.com/enterprise-server@2.22/rest/reference/licenses#get-a-license - API method documentation
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\LicensesGetRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\LicensesGetResponse
     * @see https://docs.github.com/enterprise-server@2.22/rest/reference/licenses#get-a-license
     */
	public function licensesGet(
        \OpenAPI\OpenAPI\Models\Operations\LicensesGetRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\LicensesGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/licenses/{license}', \OpenAPI\OpenAPI\Models\Operations\LicensesGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\LicensesGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->license = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\License', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 304) {
        }
        else if ($httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 404) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->basicError = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\BasicError', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get all commonly used licenses
     * 
     * https://docs.github.com/enterprise-server@2.22/rest/reference/licenses#get-all-commonly-used-licenses - API method documentation
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\LicensesGetAllCommonlyUsedRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\LicensesGetAllCommonlyUsedResponse
     * @see https://docs.github.com/enterprise-server@2.22/rest/reference/licenses#get-all-commonly-used-licenses
     */
	public function licensesGetAllCommonlyUsed(
        \OpenAPI\OpenAPI\Models\Operations\LicensesGetAllCommonlyUsedRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\LicensesGetAllCommonlyUsedResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/licenses');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\LicensesGetAllCommonlyUsedRequest::class, $request, null));
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\LicensesGetAllCommonlyUsedResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->licenseSimples = $serializer->deserialize((string)$httpResponse->getBody(), 'array<OpenAPI\OpenAPI\Models\Shared\LicenseSimple>', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 304) {
        }

        return $response;
    }
	
    /**
     * Get the license for a repository
     * 
     * This method returns the contents of the repository's license file, if one is detected.
     * 
     * Similar to [Get repository content](https://docs.github.com/enterprise-server@2.22/rest/reference/repos#get-repository-content), this method also supports [custom media types](https://docs.github.com/enterprise-server@2.22/rest/overview/media-types) for retrieving the raw license content or rendered license HTML.
     * https://docs.github.com/enterprise-server@2.22/rest/reference/licenses/#get-the-license-for-a-repository - API method documentation
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\LicensesGetForRepoRequest $request
     * @return \OpenAPI\OpenAPI\Models\Operations\LicensesGetForRepoResponse
     * @see https://docs.github.com/enterprise-server@2.22/rest/reference/licenses/#get-the-license-for-a-repository
     */
	public function licensesGetForRepo(
        \OpenAPI\OpenAPI\Models\Operations\LicensesGetForRepoRequest $request,
    ): \OpenAPI\OpenAPI\Models\Operations\LicensesGetForRepoResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/repos/{owner}/{repo}/license', \OpenAPI\OpenAPI\Models\Operations\LicensesGetForRepoRequest::class, $request);
        
        $options = ['http_errors' => false];
        
        $httpResponse = $this->_defaultClient->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\LicensesGetForRepoResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->licenseContent = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\LicenseContent', 'json');
            }
        }

        return $response;
    }
}