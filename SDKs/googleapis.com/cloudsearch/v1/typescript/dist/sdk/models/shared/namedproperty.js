"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NamedProperty = void 0;
var utils_1 = require("../../../internal/utils");
var datevalues_1 = require("./datevalues");
var doublevalues_1 = require("./doublevalues");
var enumvalues_1 = require("./enumvalues");
var htmlvalues_1 = require("./htmlvalues");
var integervalues_1 = require("./integervalues");
var objectvalues_1 = require("./objectvalues");
var textvalues_1 = require("./textvalues");
var timestampvalues_1 = require("./timestampvalues");
var class_transformer_1 = require("class-transformer");
/**
 * A typed name-value pair for structured data. The type of the value should be the same as the registered type for the `name` property in the object definition of `objectType`.
 */
var NamedProperty = /** @class */ (function (_super) {
    __extends(NamedProperty, _super);
    function NamedProperty() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "booleanValue" }),
        __metadata("design:type", Boolean)
    ], NamedProperty.prototype, "booleanValue", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "dateValues" }),
        (0, class_transformer_1.Type)(function () { return datevalues_1.DateValues; }),
        __metadata("design:type", datevalues_1.DateValues)
    ], NamedProperty.prototype, "dateValues", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "doubleValues" }),
        (0, class_transformer_1.Type)(function () { return doublevalues_1.DoubleValues; }),
        __metadata("design:type", doublevalues_1.DoubleValues)
    ], NamedProperty.prototype, "doubleValues", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enumValues" }),
        (0, class_transformer_1.Type)(function () { return enumvalues_1.EnumValues; }),
        __metadata("design:type", enumvalues_1.EnumValues)
    ], NamedProperty.prototype, "enumValues", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "htmlValues" }),
        (0, class_transformer_1.Type)(function () { return htmlvalues_1.HtmlValues; }),
        __metadata("design:type", htmlvalues_1.HtmlValues)
    ], NamedProperty.prototype, "htmlValues", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "integerValues" }),
        (0, class_transformer_1.Type)(function () { return integervalues_1.IntegerValues; }),
        __metadata("design:type", integervalues_1.IntegerValues)
    ], NamedProperty.prototype, "integerValues", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], NamedProperty.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "objectValues" }),
        (0, class_transformer_1.Type)(function () { return objectvalues_1.ObjectValues; }),
        __metadata("design:type", objectvalues_1.ObjectValues)
    ], NamedProperty.prototype, "objectValues", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "textValues" }),
        (0, class_transformer_1.Type)(function () { return textvalues_1.TextValues; }),
        __metadata("design:type", textvalues_1.TextValues)
    ], NamedProperty.prototype, "textValues", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "timestampValues" }),
        (0, class_transformer_1.Type)(function () { return timestampvalues_1.TimestampValues; }),
        __metadata("design:type", timestampvalues_1.TimestampValues)
    ], NamedProperty.prototype, "timestampValues", void 0);
    return NamedProperty;
}(utils_1.SpeakeasyBase));
exports.NamedProperty = NamedProperty;
