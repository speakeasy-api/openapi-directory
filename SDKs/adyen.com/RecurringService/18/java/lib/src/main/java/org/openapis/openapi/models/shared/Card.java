/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Card {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("billingAddress")
    public Address billingAddress;
    public Card withBillingAddress(Address billingAddress) {
        this.billingAddress = billingAddress;
        return this;
    }
    
    /**
     * The [card verification code](https://docs.adyen.com/developers/payment-glossary#cardsecuritycodecvccvvcid) (1-20 characters). Depending on the card brand, it is known also as:
     * * CVV2/CVC2 \u2013 length: 3 digits
     * * CID \u2013 length: 4 digits
     * &gt; If you are using [Client-Side Encryption](https://docs.adyen.com/developers/ecommerce-integration), the CVC code is present in the encrypted data. You must never post the card details to the server.
     * &gt; This field must be always present in a [one-click payment request](https://docs.adyen.com/developers/features/recurring-payments).
     * &gt; When this value is returned in a response, it is always empty because it is not stored.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cvc")
    public String cvc;
    public Card withCvc(String cvc) {
        this.cvc = cvc;
        return this;
    }
    
    /**
     * The card expiry month.
     * Format: 2 digits, zero-padded for single digits. For example:
     * * 03 = March
     * * 11 = November
     */
    @JsonProperty("expiryMonth")
    public String expiryMonth;
    public Card withExpiryMonth(String expiryMonth) {
        this.expiryMonth = expiryMonth;
        return this;
    }
    
    /**
     * The card expiry year.
     * Format: 4 digits. For example: 2020
     */
    @JsonProperty("expiryYear")
    public String expiryYear;
    public Card withExpiryYear(String expiryYear) {
        this.expiryYear = expiryYear;
        return this;
    }
    
    /**
     * The name of the cardholder, as printed on the card.
     */
    @JsonProperty("holderName")
    public String holderName;
    public Card withHolderName(String holderName) {
        this.holderName = holderName;
        return this;
    }
    
    /**
     * The issue number of the card (for some UK debit cards only).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issueNumber")
    public String issueNumber;
    public Card withIssueNumber(String issueNumber) {
        this.issueNumber = issueNumber;
        return this;
    }
    
    /**
     * The card number (4-19 characters). Do not use any separators.
     * When this value is returned in a response, only the last 4 digits of the card number are returned.
     */
    @JsonProperty("number")
    public String number;
    public Card withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * The month component of the start date (for some UK debit cards only).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startMonth")
    public String startMonth;
    public Card withStartMonth(String startMonth) {
        this.startMonth = startMonth;
        return this;
    }
    
    /**
     * The year component of the start date (for some UK debit cards only).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startYear")
    public String startYear;
    public Card withStartYear(String startYear) {
        this.startYear = startYear;
        return this;
    }
    
}
