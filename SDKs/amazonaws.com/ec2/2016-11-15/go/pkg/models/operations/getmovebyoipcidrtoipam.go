// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETMoveByoipCidrToIpamActionEnum
type GETMoveByoipCidrToIpamActionEnum string

const (
	GETMoveByoipCidrToIpamActionEnumMoveByoipCidrToIpam GETMoveByoipCidrToIpamActionEnum = "MoveByoipCidrToIpam"
)

func (e GETMoveByoipCidrToIpamActionEnum) ToPointer() *GETMoveByoipCidrToIpamActionEnum {
	return &e
}

func (e *GETMoveByoipCidrToIpamActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MoveByoipCidrToIpam":
		*e = GETMoveByoipCidrToIpamActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETMoveByoipCidrToIpamActionEnum: %v", v)
	}
}

// GETMoveByoipCidrToIpamVersionEnum
type GETMoveByoipCidrToIpamVersionEnum string

const (
	GETMoveByoipCidrToIpamVersionEnumTwoThousandAndSixteen1115 GETMoveByoipCidrToIpamVersionEnum = "2016-11-15"
)

func (e GETMoveByoipCidrToIpamVersionEnum) ToPointer() *GETMoveByoipCidrToIpamVersionEnum {
	return &e
}

func (e *GETMoveByoipCidrToIpamVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETMoveByoipCidrToIpamVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETMoveByoipCidrToIpamVersionEnum: %v", v)
	}
}

type GETMoveByoipCidrToIpamRequest struct {
	Action GETMoveByoipCidrToIpamActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The BYOIP CIDR.
	Cidr string `queryParam:"style=form,explode=true,name=Cidr"`
	// A check for whether you have the required permissions for the action without actually making the request and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The IPAM pool ID.
	IpamPoolID string `queryParam:"style=form,explode=true,name=IpamPoolId"`
	// The Amazon Web Services account ID of the owner of the IPAM pool.
	IpamPoolOwner     string                            `queryParam:"style=form,explode=true,name=IpamPoolOwner"`
	Version           GETMoveByoipCidrToIpamVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETMoveByoipCidrToIpamResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
