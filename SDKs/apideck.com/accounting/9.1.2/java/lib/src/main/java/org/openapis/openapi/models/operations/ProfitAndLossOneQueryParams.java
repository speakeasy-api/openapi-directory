/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ProfitAndLossOneQueryParams {
    /**
     * The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. &lt;br /&gt;&lt;br /&gt;Example: `fields=name,email,addresses.city`&lt;br /&gt;&lt;br /&gt;In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;
    public ProfitAndLossOneQueryParams withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * Apply filters
     */
    @SpeakeasyMetadata("queryParam:style=deepObject,explode=true,name=filter")
    public org.openapis.openapi.models.shared.ProfitAndLossFilter filter;
    public ProfitAndLossOneQueryParams withFilter(org.openapis.openapi.models.shared.ProfitAndLossFilter filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * Optional unmapped key/values that will be passed through to downstream as query parameters
     */
    @SpeakeasyMetadata("queryParam:style=deepObject,explode=true,name=pass_through")
    public java.util.Map<String, Object> passThrough;
    public ProfitAndLossOneQueryParams withPassThrough(java.util.Map<String, Object> passThrough) {
        this.passThrough = passThrough;
        return this;
    }
    
    /**
     * Include raw response. Mostly used for debugging purposes
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=raw")
    public Boolean raw;
    public ProfitAndLossOneQueryParams withRaw(Boolean raw) {
        this.raw = raw;
        return this;
    }
    
}
