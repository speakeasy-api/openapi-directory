"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import predictionquery as shared_predictionquery
from ..shared import predictionquerytoken as shared_predictionquerytoken
from typing import Optional


@dataclasses.dataclass
class QueryPredictionResultsFormRequest:
    
    prediction_query_token_input: shared_predictionquerytoken.PredictionQueryTokenInput = dataclasses.field(metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})
    r"""Parameters used to query the predictions. Limited to combining 2 tags"""  
    project_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'projectId', 'style': 'simple', 'explode': False }})
    r"""The project id"""  
    training_key: str = dataclasses.field(metadata={'header': { 'field_name': 'Training-Key', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class QueryPredictionResultsFormResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    prediction_query: Optional[shared_predictionquery.PredictionQuery] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    