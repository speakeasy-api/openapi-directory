/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DiagnoseClusterRequest - A request to collect cluster diagnostic information.
 */
public class DiagnoseClusterRequest {
    /**
     * Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive).The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diagnosisInterval")
    public Interval diagnosisInterval;

    public DiagnoseClusterRequest withDiagnosisInterval(Interval diagnosisInterval) {
        this.diagnosisInterval = diagnosisInterval;
        return this;
    }
    
    /**
     * Optional. DEPRECATED Specifies the job on which diagnosis is to be performed. Format: projects/{project}/regions/{region}/jobs/{job}
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("job")
    public String job;

    public DiagnoseClusterRequest withJob(String job) {
        this.job = job;
        return this;
    }
    
    /**
     * Optional. Specifies a list of jobs on which diagnosis is to be performed. Format: projects/{project}/regions/{region}/jobs/{job}
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jobs")
    public String[] jobs;

    public DiagnoseClusterRequest withJobs(String[] jobs) {
        this.jobs = jobs;
        return this;
    }
    
    /**
     * Optional. DEPRECATED Specifies the yarn application on which diagnosis is to be performed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("yarnApplicationId")
    public String yarnApplicationId;

    public DiagnoseClusterRequest withYarnApplicationId(String yarnApplicationId) {
        this.yarnApplicationId = yarnApplicationId;
        return this;
    }
    
    /**
     * Optional. Specifies a list of yarn applications on which diagnosis is to be performed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("yarnApplicationIds")
    public String[] yarnApplicationIds;

    public DiagnoseClusterRequest withYarnApplicationIds(String[] yarnApplicationIds) {
        this.yarnApplicationIds = yarnApplicationIds;
        return this;
    }
    
    public DiagnoseClusterRequest(){}
}
