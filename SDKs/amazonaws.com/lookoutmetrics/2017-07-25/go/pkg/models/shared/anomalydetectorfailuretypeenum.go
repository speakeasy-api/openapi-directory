// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AnomalyDetectorFailureTypeEnum string

const (
	AnomalyDetectorFailureTypeEnumActivationFailure         AnomalyDetectorFailureTypeEnum = "ACTIVATION_FAILURE"
	AnomalyDetectorFailureTypeEnumBackTestActivationFailure AnomalyDetectorFailureTypeEnum = "BACK_TEST_ACTIVATION_FAILURE"
	AnomalyDetectorFailureTypeEnumDeletionFailure           AnomalyDetectorFailureTypeEnum = "DELETION_FAILURE"
	AnomalyDetectorFailureTypeEnumDeactivationFailure       AnomalyDetectorFailureTypeEnum = "DEACTIVATION_FAILURE"
)

func (e AnomalyDetectorFailureTypeEnum) ToPointer() *AnomalyDetectorFailureTypeEnum {
	return &e
}

func (e *AnomalyDetectorFailureTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ACTIVATION_FAILURE":
		fallthrough
	case "BACK_TEST_ACTIVATION_FAILURE":
		fallthrough
	case "DELETION_FAILURE":
		fallthrough
	case "DEACTIVATION_FAILURE":
		*e = AnomalyDetectorFailureTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AnomalyDetectorFailureTypeEnum: %v", v)
	}
}
