/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETModifyCurrentDBClusterCapacityQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETModifyCurrentDBClusterCapacityActionEnum action;
    public GETModifyCurrentDBClusterCapacityQueryParams withAction(GETModifyCurrentDBClusterCapacityActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * &lt;p&gt;The DB cluster capacity.&lt;/p&gt; &lt;p&gt;When you change the capacity of a paused Aurora Serverless v1 DB cluster, it automatically resumes.&lt;/p&gt; &lt;p&gt;Constraints:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;For Aurora MySQL, valid capacity values are &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;4&lt;/code&gt;, &lt;code&gt;8&lt;/code&gt;, &lt;code&gt;16&lt;/code&gt;, &lt;code&gt;32&lt;/code&gt;, &lt;code&gt;64&lt;/code&gt;, &lt;code&gt;128&lt;/code&gt;, and &lt;code&gt;256&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;For Aurora PostgreSQL, valid capacity values are &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;4&lt;/code&gt;, &lt;code&gt;8&lt;/code&gt;, &lt;code&gt;16&lt;/code&gt;, &lt;code&gt;32&lt;/code&gt;, &lt;code&gt;64&lt;/code&gt;, &lt;code&gt;192&lt;/code&gt;, and &lt;code&gt;384&lt;/code&gt;.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Capacity")
    public Long capacity;
    public GETModifyCurrentDBClusterCapacityQueryParams withCapacity(Long capacity) {
        this.capacity = capacity;
        return this;
    }
    
    /**
     * &lt;p&gt;The DB cluster identifier for the cluster being modified. This parameter isn't case-sensitive.&lt;/p&gt; &lt;p&gt;Constraints:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;Must match the identifier of an existing DB cluster.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=DBClusterIdentifier")
    public String dbClusterIdentifier;
    public GETModifyCurrentDBClusterCapacityQueryParams withDBClusterIdentifier(String dbClusterIdentifier) {
        this.dbClusterIdentifier = dbClusterIdentifier;
        return this;
    }
    
    /**
     * &lt;p&gt;The amount of time, in seconds, that Aurora Serverless v1 tries to find a scaling point to perform seamless scaling before enforcing the timeout action. The default is 300.&lt;/p&gt; &lt;p&gt;Specify a value between 10 and 600 seconds.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=SecondsBeforeTimeout")
    public Long secondsBeforeTimeout;
    public GETModifyCurrentDBClusterCapacityQueryParams withSecondsBeforeTimeout(Long secondsBeforeTimeout) {
        this.secondsBeforeTimeout = secondsBeforeTimeout;
        return this;
    }
    
    /**
     * &lt;p&gt;The action to take when the timeout is reached, either &lt;code&gt;ForceApplyCapacityChange&lt;/code&gt; or &lt;code&gt;RollbackCapacityChange&lt;/code&gt;.&lt;/p&gt; &lt;p&gt; &lt;code&gt;ForceApplyCapacityChange&lt;/code&gt;, the default, sets the capacity to the specified value as soon as possible.&lt;/p&gt; &lt;p&gt; &lt;code&gt;RollbackCapacityChange&lt;/code&gt; ignores the capacity change if a scaling point isn't found in the timeout period.&lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TimeoutAction")
    public String timeoutAction;
    public GETModifyCurrentDBClusterCapacityQueryParams withTimeoutAction(String timeoutAction) {
        this.timeoutAction = timeoutAction;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETModifyCurrentDBClusterCapacityVersionEnum version;
    public GETModifyCurrentDBClusterCapacityQueryParams withVersion(GETModifyCurrentDBClusterCapacityVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
