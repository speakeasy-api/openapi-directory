"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import api_core_responses_entitiesresponse_api_core_dto_accounting_domainwhitelistentry_ as shared_api_core_responses_entitiesresponse_api_core_dto_accounting_domainwhitelistentry_
from typing import Optional


@dataclasses.dataclass
class AccountGetDomainWhitelistRequest:
    
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Limit results to this number"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Offset where to start from"""  
    

@dataclasses.dataclass
class AccountGetDomainWhitelistResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_core_responses_entities_response_api_core_dto_accounting_domain_whitelist_entry: Optional[shared_api_core_responses_entitiesresponse_api_core_dto_accounting_domainwhitelistentry_.APICoreResponsesEntitiesResponseAPICoreDtoAccountingDomainWhitelistEntry] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    