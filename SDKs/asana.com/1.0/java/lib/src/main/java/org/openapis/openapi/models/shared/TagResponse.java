/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TagResponse - A *tag* is a label that can be attached to any task in Asana. It exists in a single workspace or organization.
 */
public class TagResponse {
    /**
     * Color of the tag.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("color")
    public TagResponseColorEnum color;
    public TagResponse withColor(TagResponseColorEnum color) {
        this.color = color;
        return this;
    }
    
    /**
     * The time at which this resource was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public TagResponse withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Array of users following this tag.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("followers")
    public UserCompact[] followers;
    public TagResponse withFollowers(UserCompact[] followers) {
        this.followers = followers;
        return this;
    }
    
    /**
     * Globally unique identifier of the resource, as a string.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gid")
    public String gid;
    public TagResponse withGid(String gid) {
        this.gid = gid;
        return this;
    }
    
    /**
     * Name of the tag. This is generally a short sentence fragment that fits on a line in the UI for maximum readability. However, it can be longer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public TagResponse withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Free-form textual information associated with the tag (i.e. its description).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public TagResponse withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * A url that points directly to the object within Asana.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permalink_url")
    public String permalinkUrl;
    public TagResponse withPermalinkUrl(String permalinkUrl) {
        this.permalinkUrl = permalinkUrl;
        return this;
    }
    
    /**
     * The base type of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_type")
    public String resourceType;
    public TagResponse withResourceType(String resourceType) {
        this.resourceType = resourceType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspace")
    public WorkspaceCompact workspace;
    public TagResponse withWorkspace(WorkspaceCompact workspace) {
        this.workspace = workspace;
        return this;
    }
    
}
