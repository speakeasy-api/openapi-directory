/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ComplianceViolator } from "./complianceviolator";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes the noncompliant resources in a member account for a specific Firewall Manager policy. A maximum of 100 entries are displayed. If more than 100 resources are noncompliant, <code>EvaluationLimitExceeded</code> is set to <code>True</code>.
 */
export class PolicyComplianceDetail extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "EvaluationLimitExceeded" })
  evaluationLimitExceeded?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ExpiredAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiredAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "IssueInfoMap" })
  issueInfoMap?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "MemberAccount" })
  memberAccount?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PolicyId" })
  policyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PolicyOwner" })
  policyOwner?: string;

  @SpeakeasyMetadata({ elemType: ComplianceViolator })
  @Expose({ name: "Violators" })
  @Type(() => ComplianceViolator)
  violators?: ComplianceViolator[];
}
