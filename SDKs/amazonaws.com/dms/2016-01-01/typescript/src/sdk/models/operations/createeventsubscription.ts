/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum CreateEventSubscriptionXAmzTargetEnum {
  AmazonDMSv20160101CreateEventSubscription = "AmazonDMSv20160101.CreateEventSubscription",
}

export class CreateEventSubscriptionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  createEventSubscriptionMessage: shared.CreateEventSubscriptionMessage;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Target",
  })
  xAmzTarget: CreateEventSubscriptionXAmzTargetEnum;
}

export class CreateEventSubscriptionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createEventSubscriptionResponse?: shared.CreateEventSubscriptionResponse;

  /**
   * KMSAccessDeniedFault
   */
  @SpeakeasyMetadata()
  kmsAccessDeniedFault?: any;

  /**
   * KMSDisabledFault
   */
  @SpeakeasyMetadata()
  kmsDisabledFault?: any;

  /**
   * KMSInvalidStateFault
   */
  @SpeakeasyMetadata()
  kmsInvalidStateFault?: any;

  /**
   * KMSNotFoundFault
   */
  @SpeakeasyMetadata()
  kmsNotFoundFault?: any;

  /**
   * KMSThrottlingFault
   */
  @SpeakeasyMetadata()
  kmsThrottlingFault?: any;

  /**
   * ResourceAlreadyExistsFault
   */
  @SpeakeasyMetadata()
  resourceAlreadyExistsFault?: any;

  /**
   * ResourceNotFoundFault
   */
  @SpeakeasyMetadata()
  resourceNotFoundFault?: any;

  /**
   * ResourceQuotaExceededFault
   */
  @SpeakeasyMetadata()
  resourceQuotaExceededFault?: any;

  /**
   * SNSInvalidTopicFault
   */
  @SpeakeasyMetadata()
  snsInvalidTopicFault?: any;

  /**
   * SNSNoAuthorizationFault
   */
  @SpeakeasyMetadata()
  snsNoAuthorizationFault?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
