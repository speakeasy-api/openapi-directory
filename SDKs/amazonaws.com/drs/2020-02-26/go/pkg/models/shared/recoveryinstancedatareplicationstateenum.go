// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RecoveryInstanceDataReplicationStateEnum string

const (
	RecoveryInstanceDataReplicationStateEnumStopped                      RecoveryInstanceDataReplicationStateEnum = "STOPPED"
	RecoveryInstanceDataReplicationStateEnumInitiating                   RecoveryInstanceDataReplicationStateEnum = "INITIATING"
	RecoveryInstanceDataReplicationStateEnumInitialSync                  RecoveryInstanceDataReplicationStateEnum = "INITIAL_SYNC"
	RecoveryInstanceDataReplicationStateEnumBacklog                      RecoveryInstanceDataReplicationStateEnum = "BACKLOG"
	RecoveryInstanceDataReplicationStateEnumCreatingSnapshot             RecoveryInstanceDataReplicationStateEnum = "CREATING_SNAPSHOT"
	RecoveryInstanceDataReplicationStateEnumContinuous                   RecoveryInstanceDataReplicationStateEnum = "CONTINUOUS"
	RecoveryInstanceDataReplicationStateEnumPaused                       RecoveryInstanceDataReplicationStateEnum = "PAUSED"
	RecoveryInstanceDataReplicationStateEnumRescan                       RecoveryInstanceDataReplicationStateEnum = "RESCAN"
	RecoveryInstanceDataReplicationStateEnumStalled                      RecoveryInstanceDataReplicationStateEnum = "STALLED"
	RecoveryInstanceDataReplicationStateEnumDisconnected                 RecoveryInstanceDataReplicationStateEnum = "DISCONNECTED"
	RecoveryInstanceDataReplicationStateEnumReplicationStateNotAvailable RecoveryInstanceDataReplicationStateEnum = "REPLICATION_STATE_NOT_AVAILABLE"
	RecoveryInstanceDataReplicationStateEnumNotStarted                   RecoveryInstanceDataReplicationStateEnum = "NOT_STARTED"
)

func (e RecoveryInstanceDataReplicationStateEnum) ToPointer() *RecoveryInstanceDataReplicationStateEnum {
	return &e
}

func (e *RecoveryInstanceDataReplicationStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STOPPED":
		fallthrough
	case "INITIATING":
		fallthrough
	case "INITIAL_SYNC":
		fallthrough
	case "BACKLOG":
		fallthrough
	case "CREATING_SNAPSHOT":
		fallthrough
	case "CONTINUOUS":
		fallthrough
	case "PAUSED":
		fallthrough
	case "RESCAN":
		fallthrough
	case "STALLED":
		fallthrough
	case "DISCONNECTED":
		fallthrough
	case "REPLICATION_STATE_NOT_AVAILABLE":
		fallthrough
	case "NOT_STARTED":
		*e = RecoveryInstanceDataReplicationStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RecoveryInstanceDataReplicationStateEnum: %v", v)
	}
}
