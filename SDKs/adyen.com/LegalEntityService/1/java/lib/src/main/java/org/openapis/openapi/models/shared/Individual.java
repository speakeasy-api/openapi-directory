/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Individual {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("birthData")
    public BirthData birthData;

    public Individual withBirthData(BirthData birthData) {
        this.birthData = birthData;
        return this;
    }
    
    /**
     * The email address of the legal entity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public Individual withEmail(String email) {
        this.email = email;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("identificationData")
    public IdentificationData identificationData;

    public Individual withIdentificationData(IdentificationData identificationData) {
        this.identificationData = identificationData;
        return this;
    }
    
    @JsonProperty("name")
    public Name name;

    public Individual withName(Name name) {
        this.name = name;
        return this;
    }
    
    /**
     * The individual's nationality.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nationality")
    public String nationality;

    public Individual withNationality(String nationality) {
        this.nationality = nationality;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone")
    public PhoneNumber phone;

    public Individual withPhone(PhoneNumber phone) {
        this.phone = phone;
        return this;
    }
    
    @JsonProperty("residentialAddress")
    public Address residentialAddress;

    public Individual withResidentialAddress(Address residentialAddress) {
        this.residentialAddress = residentialAddress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webData")
    public WebData webData;

    public Individual withWebData(WebData webData) {
        this.webData = webData;
        return this;
    }
    
    public Individual(@JsonProperty("name") Name name, @JsonProperty("residentialAddress") Address residentialAddress) {
        this.name = name;
        this.residentialAddress = residentialAddress;
  }
}
