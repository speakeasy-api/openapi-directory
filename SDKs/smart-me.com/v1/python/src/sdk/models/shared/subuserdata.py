"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class SubUserDataPermissionLevelEnum(str, Enum):
    r"""The permission level of the user"""
    SELECTED_FOLDER_AND_SUBFOLDERS_METERS = 'SelectedFolderAndSubfoldersMeters'
    SELECTED_FOLDER_ONLY = 'SelectedFolderOnly'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SubUserData:
    r"""Container data for the sub user"""
    
    access_end_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccessEndDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'AccessEndDate' }})
    r"""The end date. until this date the user has access"""  
    access_time_start_date: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccessTimeStartDate'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'AccessTimeStartDate' }})
    r"""The start date. From this date the user has access"""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Email'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Email' }})
    r"""The Email adress"""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Id' }})
    r"""The ID of the user"""  
    new_password: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NewPassword'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'NewPassword' }})
    r"""If set this is used a new password"""  
    permission_level: Optional[SubUserDataPermissionLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PermissionLevel'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'PermissionLevel' }})
    r"""The permission level of the user"""  
    username: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Username'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Username' }})
    r"""The username"""  
    