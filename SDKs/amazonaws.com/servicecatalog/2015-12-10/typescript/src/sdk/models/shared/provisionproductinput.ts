/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProvisioningParameter } from "./provisioningparameter";
import { ProvisioningPreferences } from "./provisioningpreferences";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class ProvisionProductInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AcceptLanguage" })
  acceptLanguage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NotificationArns" })
  notificationArns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "PathId" })
  pathId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PathName" })
  pathName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProductId" })
  productId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProductName" })
  productName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProvisionToken" })
  provisionToken: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProvisionedProductName" })
  provisionedProductName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProvisioningArtifactId" })
  provisioningArtifactId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProvisioningArtifactName" })
  provisioningArtifactName?: string;

  @SpeakeasyMetadata({ elemType: ProvisioningParameter })
  @Expose({ name: "ProvisioningParameters" })
  @Type(() => ProvisioningParameter)
  provisioningParameters?: ProvisioningParameter[];

  @SpeakeasyMetadata()
  @Expose({ name: "ProvisioningPreferences" })
  @Type(() => ProvisioningPreferences)
  provisioningPreferences?: ProvisioningPreferences;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
