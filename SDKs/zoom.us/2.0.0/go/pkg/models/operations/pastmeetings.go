// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type PastMeetingsSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type PastMeetingsPathParams struct {
	// The meeting ID in **long** format. The data type of this field is "long"(represented as int64 in JSON).
	//
	// While storing it in your database, store it as a **long** data type and **not as an integer**, as the Meeting IDs can be longer than 10 digits.
	MeetingID int64 `pathParam:"style=simple,explode=false,name=meetingId"`
}

type PastMeetingsRequest struct {
	PathParams PastMeetingsPathParams
	Security   PastMeetingsSecurity
}

type PastMeetingsMeetingInstancesMeetings struct {
	// Start time
	StartTime *time.Time `json:"start_time,omitempty"`
	// Meeting UUID. Unique meeting ID. Each meeting instance will generate its own Meeting UUID (i.e., after a meeting ends, a new UUID will be generated for the next instance of the meeting). Please double encode your UUID when using it for API calls if the UUID begins with a '/'or contains '//' in it.
	//
	//
	UUID *string `json:"uuid,omitempty"`
}

// PastMeetingsMeetingInstances - List of Meetings
type PastMeetingsMeetingInstances struct {
	// List of ended meeting instances.
	Meetings []PastMeetingsMeetingInstancesMeetings `json:"meetings,omitempty"`
}

type PastMeetingsResponse struct {
	Body        []byte
	ContentType string
	// **HTTP Status Code:** `200`<br>
	// List of ended meeting instances returned.
	MeetingInstances *PastMeetingsMeetingInstances
	StatusCode       int
	RawResponse      *http.Response
}
