// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type DeleteWorkspaceQueryParams struct {
	// Workspace identifier
	WorkspaceID string `queryParam:"style=form,explode=true,name=workspaceId"`
}

type DeleteWorkspaceRequest struct {
	QueryParams DeleteWorkspaceQueryParams
}

// DeleteWorkspace500ApplicationJSON - Internal Server Error
type DeleteWorkspace500ApplicationJSON struct {
	// Error description
	Error *string `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

// DeleteWorkspace422ApplicationJSONErrorEnum - Error description
type DeleteWorkspace422ApplicationJSONErrorEnum string

const (
	DeleteWorkspace422ApplicationJSONErrorEnumUnableToParseJSONPleaseCheckFormatting               DeleteWorkspace422ApplicationJSONErrorEnum = "Unable to parse JSON, please check formatting"
	DeleteWorkspace422ApplicationJSONErrorEnumRequiredParameterMissing                             DeleteWorkspace422ApplicationJSONErrorEnum = "Required parameter missing"
	DeleteWorkspace422ApplicationJSONErrorEnumRequiredParameterMissingTemplateDefinitionNotDefined DeleteWorkspace422ApplicationJSONErrorEnum = "Required parameter missing: template definition not defined"
	DeleteWorkspace422ApplicationJSONErrorEnumRequiredParameterMissingTemplateNotDefined           DeleteWorkspace422ApplicationJSONErrorEnum = "Required parameter missing: template not defined"
)

func (e *DeleteWorkspace422ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unable to parse JSON, please check formatting":
		fallthrough
	case "Required parameter missing":
		fallthrough
	case "Required parameter missing: template definition not defined":
		fallthrough
	case "Required parameter missing: template not defined":
		*e = DeleteWorkspace422ApplicationJSONErrorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteWorkspace422ApplicationJSONErrorEnum: %s", s)
	}
}

// DeleteWorkspace422ApplicationJSON - Unprocessable Entity
type DeleteWorkspace422ApplicationJSON struct {
	// Error description
	Error *DeleteWorkspace422ApplicationJSONErrorEnum `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

// DeleteWorkspace404ApplicationJSONErrorEnum - Error description
type DeleteWorkspace404ApplicationJSONErrorEnum string

const (
	DeleteWorkspace404ApplicationJSONErrorEnumEntityNotFound                               DeleteWorkspace404ApplicationJSONErrorEnum = "Entity not found"
	DeleteWorkspace404ApplicationJSONErrorEnumResourceNotFound                             DeleteWorkspace404ApplicationJSONErrorEnum = "Resource not found"
	DeleteWorkspace404ApplicationJSONErrorEnumNoneOfTheTemplatesIsAvailableForTheWorkspace DeleteWorkspace404ApplicationJSONErrorEnum = "None of the templates is available for the workspace."
)

func (e *DeleteWorkspace404ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Entity not found":
		fallthrough
	case "Resource not found":
		fallthrough
	case "None of the templates is available for the workspace.":
		*e = DeleteWorkspace404ApplicationJSONErrorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteWorkspace404ApplicationJSONErrorEnum: %s", s)
	}
}

// DeleteWorkspace404ApplicationJSON - Not Found
type DeleteWorkspace404ApplicationJSON struct {
	// Error description
	Error *DeleteWorkspace404ApplicationJSONErrorEnum `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

// DeleteWorkspace403ApplicationJSONErrorEnum - Error description
type DeleteWorkspace403ApplicationJSONErrorEnum string

const (
	DeleteWorkspace403ApplicationJSONErrorEnumYourAccountHasExceededTheMonthlyDocumentGenerationLimit DeleteWorkspace403ApplicationJSONErrorEnum = "Your account has exceeded the monthly document generation limit."
)

func (e *DeleteWorkspace403ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Your account has exceeded the monthly document generation limit.":
		*e = DeleteWorkspace403ApplicationJSONErrorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteWorkspace403ApplicationJSONErrorEnum: %s", s)
	}
}

// DeleteWorkspace403ApplicationJSON - Forbidden
type DeleteWorkspace403ApplicationJSON struct {
	// Error description
	Error *DeleteWorkspace403ApplicationJSONErrorEnum `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

// DeleteWorkspace401ApplicationJSONErrorEnum - Error description
type DeleteWorkspace401ApplicationJSONErrorEnum string

const (
	DeleteWorkspace401ApplicationJSONErrorEnumAuthenticationFailedRequestExpired                        DeleteWorkspace401ApplicationJSONErrorEnum = "Authentication failed: request expired"
	DeleteWorkspace401ApplicationJSONErrorEnumAuthenticationFailedSignatureOrSecretMissing              DeleteWorkspace401ApplicationJSONErrorEnum = "Authentication failed: signature or secret missing"
	DeleteWorkspace401ApplicationJSONErrorEnumAuthenticationFailedWorkspaceMissing                      DeleteWorkspace401ApplicationJSONErrorEnum = "Authentication failed: workspace missing"
	DeleteWorkspace401ApplicationJSONErrorEnumAuthenticationFailedKeyMissing                            DeleteWorkspace401ApplicationJSONErrorEnum = "Authentication failed: key missing"
	DeleteWorkspace401ApplicationJSONErrorEnumAuthenticationFailedPropertyIssIssuerMissingInJwt         DeleteWorkspace401ApplicationJSONErrorEnum = "Authentication failed: property 'iss' (issuer) missing in JWT"
	DeleteWorkspace401ApplicationJSONErrorEnumAuthenticationFailedPropertySubSubjectMissingInJwt        DeleteWorkspace401ApplicationJSONErrorEnum = "Authentication failed: property 'sub' (subject) missing in JWT"
	DeleteWorkspace401ApplicationJSONErrorEnumAuthenticationFailedPropertyExpExpirationTimeMissingInJwt DeleteWorkspace401ApplicationJSONErrorEnum = "Authentication failed: property 'exp' (expiration time) missing in JWT"
	DeleteWorkspace401ApplicationJSONErrorEnumAuthenticationFailedInvalidIssIssuer                      DeleteWorkspace401ApplicationJSONErrorEnum = "Authentication failed: invalid 'iss' (issuer)"
	DeleteWorkspace401ApplicationJSONErrorEnumAuthenticationFailedIncorrectSignature                    DeleteWorkspace401ApplicationJSONErrorEnum = "Authentication failed: incorrect signature"
	DeleteWorkspace401ApplicationJSONErrorEnumAuthenticationFailed                                      DeleteWorkspace401ApplicationJSONErrorEnum = "Authentication failed"
)

func (e *DeleteWorkspace401ApplicationJSONErrorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Authentication failed: request expired":
		fallthrough
	case "Authentication failed: signature or secret missing":
		fallthrough
	case "Authentication failed: workspace missing":
		fallthrough
	case "Authentication failed: key missing":
		fallthrough
	case "Authentication failed: property 'iss' (issuer) missing in JWT":
		fallthrough
	case "Authentication failed: property 'sub' (subject) missing in JWT":
		fallthrough
	case "Authentication failed: property 'exp' (expiration time) missing in JWT":
		fallthrough
	case "Authentication failed: invalid 'iss' (issuer)":
		fallthrough
	case "Authentication failed: incorrect signature":
		fallthrough
	case "Authentication failed":
		*e = DeleteWorkspace401ApplicationJSONErrorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteWorkspace401ApplicationJSONErrorEnum: %s", s)
	}
}

// DeleteWorkspace401ApplicationJSON - Unauthorized
type DeleteWorkspace401ApplicationJSON struct {
	// Error description
	Error *DeleteWorkspace401ApplicationJSONErrorEnum `json:"error,omitempty"`
	// HTTP Error code
	Status *int64 `json:"status,omitempty"`
}

type DeleteWorkspace200ApplicationJSONResponse struct {
	Success *bool `json:"success,omitempty"`
}

// DeleteWorkspace200ApplicationJSON - The request was successfully executed.
type DeleteWorkspace200ApplicationJSON struct {
	Response *DeleteWorkspace200ApplicationJSONResponse `json:"response,omitempty"`
}

type DeleteWorkspaceResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The request was successfully executed.
	DeleteWorkspace200ApplicationJSONObject *DeleteWorkspace200ApplicationJSON
	// Unauthorized
	DeleteWorkspace401ApplicationJSONObject *DeleteWorkspace401ApplicationJSON
	// Forbidden
	DeleteWorkspace403ApplicationJSONObject *DeleteWorkspace403ApplicationJSON
	// Not Found
	DeleteWorkspace404ApplicationJSONObject *DeleteWorkspace404ApplicationJSON
	// Unprocessable Entity
	DeleteWorkspace422ApplicationJSONObject *DeleteWorkspace422ApplicationJSON
	// Internal Server Error
	DeleteWorkspace500ApplicationJSONObject *DeleteWorkspace500ApplicationJSON
}
