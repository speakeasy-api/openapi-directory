"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import updatepullrequestapprovalstateinput as shared_updatepullrequestapprovalstateinput
from enum import Enum
from typing import Any, Optional

class UpdatePullRequestApprovalStateXAmzTargetEnum(str, Enum):
    CODE_COMMIT_20150413_UPDATE_PULL_REQUEST_APPROVAL_STATE = 'CodeCommit_20150413.UpdatePullRequestApprovalState'


@dataclasses.dataclass
class UpdatePullRequestApprovalStateRequest:
    
    update_pull_request_approval_state_input: shared_updatepullrequestapprovalstateinput.UpdatePullRequestApprovalStateInput = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    x_amz_target: UpdatePullRequestApprovalStateXAmzTargetEnum = dataclasses.field(metadata={'header': { 'field_name': 'X-Amz-Target', 'style': 'simple', 'explode': False }})  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class UpdatePullRequestApprovalStateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    approval_state_required_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ApprovalStateRequiredException"""  
    encryption_integrity_checks_failed_exception: Optional[Any] = dataclasses.field(default=None)
    r"""EncryptionIntegrityChecksFailedException"""  
    encryption_key_access_denied_exception: Optional[Any] = dataclasses.field(default=None)
    r"""EncryptionKeyAccessDeniedException"""  
    encryption_key_disabled_exception: Optional[Any] = dataclasses.field(default=None)
    r"""EncryptionKeyDisabledException"""  
    encryption_key_not_found_exception: Optional[Any] = dataclasses.field(default=None)
    r"""EncryptionKeyNotFoundException"""  
    encryption_key_unavailable_exception: Optional[Any] = dataclasses.field(default=None)
    r"""EncryptionKeyUnavailableException"""  
    invalid_approval_state_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidApprovalStateException"""  
    invalid_pull_request_id_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidPullRequestIdException"""  
    invalid_revision_id_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidRevisionIdException"""  
    maximum_number_of_approvals_exceeded_exception: Optional[Any] = dataclasses.field(default=None)
    r"""MaximumNumberOfApprovalsExceededException"""  
    pull_request_already_closed_exception: Optional[Any] = dataclasses.field(default=None)
    r"""PullRequestAlreadyClosedException"""  
    pull_request_cannot_be_approved_by_author_exception: Optional[Any] = dataclasses.field(default=None)
    r"""PullRequestCannotBeApprovedByAuthorException"""  
    pull_request_does_not_exist_exception: Optional[Any] = dataclasses.field(default=None)
    r"""PullRequestDoesNotExistException"""  
    pull_request_id_required_exception: Optional[Any] = dataclasses.field(default=None)
    r"""PullRequestIdRequiredException"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    revision_id_required_exception: Optional[Any] = dataclasses.field(default=None)
    r"""RevisionIdRequiredException"""  
    revision_not_current_exception: Optional[Any] = dataclasses.field(default=None)
    r"""RevisionNotCurrentException"""  
    