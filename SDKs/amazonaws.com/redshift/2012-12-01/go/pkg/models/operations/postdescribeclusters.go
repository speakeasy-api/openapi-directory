// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeClustersActionEnum
type POSTDescribeClustersActionEnum string

const (
	POSTDescribeClustersActionEnumDescribeClusters POSTDescribeClustersActionEnum = "DescribeClusters"
)

func (e *POSTDescribeClustersActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeClusters":
		*e = POSTDescribeClustersActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeClustersActionEnum: %s", s)
	}
}

// POSTDescribeClustersVersionEnum
type POSTDescribeClustersVersionEnum string

const (
	POSTDescribeClustersVersionEnumTwoThousandAndTwelve1201 POSTDescribeClustersVersionEnum = "2012-12-01"
)

func (e *POSTDescribeClustersVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = POSTDescribeClustersVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeClustersVersionEnum: %s", s)
	}
}

type POSTDescribeClustersQueryParams struct {
	Action POSTDescribeClustersActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxRecords *string                         `queryParam:"style=form,explode=true,name=MaxRecords"`
	Version    POSTDescribeClustersVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTDescribeClustersHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeClustersRequest struct {
	QueryParams POSTDescribeClustersQueryParams
	Headers     POSTDescribeClustersHeaders
	Request     []byte `request:"mediaType=text/xml"`
}

type POSTDescribeClustersResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
