<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * JobScheduleStatistics - The lifetime resource usage statistics for a job schedule.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class JobScheduleStatistics
{
    /**
     * Gets or sets the total kernel mode CPU time (summed across all cores and all compute nodes) consumed by all the tasks in all the jobs created under the schedule.
     * 
     * @var string $kernelCPUTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('kernelCPUTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $kernelCPUTime;
    
    /**
     * Gets or sets the time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
     * 
     * @var \DateTime $lastUpdateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastUpdateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $lastUpdateTime;
    
    /**
     * Gets or sets the total number of tasks that failed during the given time range in jobs created under the schedule. A task fails if it exhausts its maximum retry count without returning exit code 0.
     * 
     * @var int $numFailedTasks
     */
	#[\JMS\Serializer\Annotation\SerializedName('numFailedTasks')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $numFailedTasks;
    
    /**
     * Gets or sets the total number of tasks successfully completed during the given time range in jobs created under the schedule.  A task completes successfully if it returns exit code 0.
     * 
     * @var int $numSucceededTasks
     */
	#[\JMS\Serializer\Annotation\SerializedName('numSucceededTasks')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $numSucceededTasks;
    
    /**
     * Gets or sets the total number of retries during the given time range on all the tasks in jobs created under the schedule.
     * 
     * @var int $numTaskRetries
     */
	#[\JMS\Serializer\Annotation\SerializedName('numTaskRetries')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $numTaskRetries;
    
    /**
     * Gets or sets the total amount of data in GiB of I/O read by all the tasks in all the jobs created under the schedule.
     * 
     * @var float $readIOGiB
     */
	#[\JMS\Serializer\Annotation\SerializedName('readIOGiB')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $readIOGiB;
    
    /**
     * Gets or sets the total number of I/O read operations performed by all the tasks in all the jobs created under the schedule.
     * 
     * @var int $readIOps
     */
	#[\JMS\Serializer\Annotation\SerializedName('readIOps')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $readIOps;
    
    /**
     * Gets or sets the start time of the time range covered by the statistics.
     * 
     * @var \DateTime $startTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $startTime;
    
    /**
     * Gets or sets the URL for the statistics.
     * 
     * @var string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
    /**
     * Gets or sets the total user mode CPU time (summed across all cores and all compute nodes) consumed by all the tasks in all the jobs created under the schedule.
     * 
     * @var string $userCPUTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('userCPUTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $userCPUTime;
    
    /**
     * Gets or sets the total wait time of all the tasks in jobs created under the schedule.
     * 
     * @var string $waitTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('waitTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $waitTime;
    
    /**
     * Gets or sets the total wall clock time of all the tasks in all the jobs created under the schedule.
     * 
     * @var string $wallClockTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('wallClockTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $wallClockTime;
    
    /**
     * Gets or sets the total amount of data in GiB of I/O written by all the tasks in all the jobs created under the schedule.
     * 
     * @var float $writeIOGiB
     */
	#[\JMS\Serializer\Annotation\SerializedName('writeIOGiB')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $writeIOGiB;
    
    /**
     * Gets or sets the total number of I/O write operations performed by all the tasks in all the jobs created under the schedule.
     * 
     * @var int $writeIOps
     */
	#[\JMS\Serializer\Annotation\SerializedName('writeIOps')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $writeIOps;
    
	public function __construct()
	{
		$this->kernelCPUTime = "";
		$this->lastUpdateTime = new \DateTime();
		$this->numFailedTasks = 0;
		$this->numSucceededTasks = 0;
		$this->numTaskRetries = 0;
		$this->readIOGiB = 0;
		$this->readIOps = 0;
		$this->startTime = new \DateTime();
		$this->url = "";
		$this->userCPUTime = "";
		$this->waitTime = "";
		$this->wallClockTime = "";
		$this->writeIOGiB = 0;
		$this->writeIOps = 0;
	}
}
