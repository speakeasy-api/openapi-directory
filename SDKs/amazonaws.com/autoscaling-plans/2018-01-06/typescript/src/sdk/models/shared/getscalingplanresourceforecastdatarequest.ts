/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ForecastDataTypeEnum } from "./forecastdatatypeenum";
import { ScalableDimensionEnum } from "./scalabledimensionenum";
import { ServiceNamespaceEnum } from "./servicenamespaceenum";
import { Expose, Transform } from "class-transformer";

export class GetScalingPlanResourceForecastDataRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ForecastDataType" })
  forecastDataType: ForecastDataTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceId" })
  resourceId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ScalableDimension" })
  scalableDimension: ScalableDimensionEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ScalingPlanName" })
  scalingPlanName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ScalingPlanVersion" })
  scalingPlanVersion: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ServiceNamespace" })
  serviceNamespace: ServiceNamespaceEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime: Date;
}
