/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateTokenServerList = ["https://oauth.twilio.com"] as const;

export class CreateTokenSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateTokenCreateTokenRequest extends SpeakeasyBase {
  /**
   * The credential for confidential OAuth App.
   */
  @SpeakeasyMetadata({ data: "form, name=ClientSecret" })
  clientSecret?: string;

  /**
   * A 34 character string that uniquely identifies this OAuth App.
   */
  @SpeakeasyMetadata({ data: "form, name=ClientSid" })
  clientSid: string;

  /**
   * JWT token related to the authorization code grant type.
   */
  @SpeakeasyMetadata({ data: "form, name=Code" })
  code?: string;

  /**
   * A code which is generation cryptographically.
   */
  @SpeakeasyMetadata({ data: "form, name=CodeVerifier" })
  codeVerifier?: string;

  /**
   * JWT token related to the device code grant type.
   */
  @SpeakeasyMetadata({ data: "form, name=DeviceCode" })
  deviceCode?: string;

  /**
   * The Id of the device associated with the token (refresh token).
   */
  @SpeakeasyMetadata({ data: "form, name=DeviceId" })
  deviceId?: string;

  /**
   * Grant type is a credential representing resource owner's authorization which can be used by client to obtain access token.
   */
  @SpeakeasyMetadata({ data: "form, name=GrantType" })
  grantType: string;

  /**
   * JWT token related to the refresh token grant type.
   */
  @SpeakeasyMetadata({ data: "form, name=RefreshToken" })
  refreshToken?: string;
}

export class CreateTokenResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  oauthV1Token?: shared.OauthV1Token;
}
