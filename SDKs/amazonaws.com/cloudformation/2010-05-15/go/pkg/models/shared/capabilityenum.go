// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CapabilityEnum string

const (
	CapabilityEnumCapabilityIam        CapabilityEnum = "CAPABILITY_IAM"
	CapabilityEnumCapabilityNamedIam   CapabilityEnum = "CAPABILITY_NAMED_IAM"
	CapabilityEnumCapabilityAutoExpand CapabilityEnum = "CAPABILITY_AUTO_EXPAND"
)

func (e CapabilityEnum) ToPointer() *CapabilityEnum {
	return &e
}

func (e *CapabilityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CAPABILITY_IAM":
		fallthrough
	case "CAPABILITY_NAMED_IAM":
		fallthrough
	case "CAPABILITY_AUTO_EXPAND":
		*e = CapabilityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CapabilityEnum: %v", v)
	}
}
