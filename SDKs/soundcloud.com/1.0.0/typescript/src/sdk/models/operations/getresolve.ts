/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetResolveSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
  })
  authHeader: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=query;name=client_id",
  })
  clientId: string;
}

export class GetResolveRequest extends SpeakeasyBase {
  /**
   * SoundCloud URL
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=url" })
  url: string;
}

export class GetResolveResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Found
   */
  @SpeakeasyMetadata()
  found?: shared.Found;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
