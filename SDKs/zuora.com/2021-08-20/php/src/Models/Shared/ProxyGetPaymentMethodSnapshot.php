<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ProxyGetPaymentMethodSnapshot
{
    /**
     * The ID of the customer account associated with this payment method.
     * 
     * @var ?string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('AccountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountId = null;
    
    /**
     * The nine-digit routing number or ABA number used by banks. Applicable to ACH payment methods.
     * 
     * @var ?string $achAbaCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('AchAbaCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $achAbaCode = null;
    
    /**
     * The name of the account holder, which can be either a person or a company. Applicable to ACH payment methods.
     * 
     * @var ?string $achAccountName
     */
	#[\JMS\Serializer\Annotation\SerializedName('AchAccountName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $achAccountName = null;
    
    /**
     * This is a masked displayable version of the ACH account number, used for security purposes. For example: `XXXXXXXXX54321`.
     * 
     * @var ?string $achAccountNumberMask
     */
	#[\JMS\Serializer\Annotation\SerializedName('AchAccountNumberMask')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $achAccountNumberMask = null;
    
    /**
     * The type of bank account associated with the ACH payment.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ProxyGetPaymentMethodSnapshotAchAccountTypeEnum $achAccountType
     */
	#[\JMS\Serializer\Annotation\SerializedName('AchAccountType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ProxyGetPaymentMethodSnapshotAchAccountTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ProxyGetPaymentMethodSnapshotAchAccountTypeEnum $achAccountType = null;
    
    /**
     * The name of the bank where the ACH payment account is held.
     * 
     * @var ?string $achBankName
     */
	#[\JMS\Serializer\Annotation\SerializedName('AchBankName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $achBankName = null;
    
    /**
     * The branch code of the bank used for direct debit.
     * 
     * @var ?string $bankBranchCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('BankBranchCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankBranchCode = null;
    
    /**
     * The check digit in the international bank account number, which confirms the validity of the account. Applicable to direct debit payment methods.
     * 
     * @var ?string $bankCheckDigit
     */
	#[\JMS\Serializer\Annotation\SerializedName('BankCheckDigit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankCheckDigit = null;
    
    /**
     * The city of the direct debit bank.
     * 
     * @var ?string $bankCity
     */
	#[\JMS\Serializer\Annotation\SerializedName('BankCity')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankCity = null;
    
    /**
     * The sort code or number that identifies the bank. This is also known as the sort code.
     * 
     * @var ?string $bankCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('BankCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankCode = null;
    
    /**
     * The first six digits of the payment method's number, such as the credit card number or account number. Banks use this number to identify a payment method.
     * 
     * @var ?string $bankIdentificationNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('BankIdentificationNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankIdentificationNumber = null;
    
    /**
     * The name of the direct debit bank.
     * 
     * @var ?string $bankName
     */
	#[\JMS\Serializer\Annotation\SerializedName('BankName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankName = null;
    
    /**
     * The zip code or postal code of the direct debit bank.
     * 
     * @var ?string $bankPostalCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('BankPostalCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankPostalCode = null;
    
    /**
     * The name of the street of the direct debit bank.
     * 
     * @var ?string $bankStreetName
     */
	#[\JMS\Serializer\Annotation\SerializedName('BankStreetName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankStreetName = null;
    
    /**
     * The number of the direct debit bank.
     * 
     * @var ?string $bankStreetNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('BankStreetNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankStreetNumber = null;
    
    /**
     * The name on the direct debit bank account.
     * 
     * @var ?string $bankTransferAccountName
     */
	#[\JMS\Serializer\Annotation\SerializedName('BankTransferAccountName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankTransferAccountName = null;
    
    /**
     * This is a masked displayable version of the bank account number, used for security purposes. For example: `XXXXXXXXX54321`.
     * 
     * @var ?string $bankTransferAccountNumberMask
     */
	#[\JMS\Serializer\Annotation\SerializedName('BankTransferAccountNumberMask')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankTransferAccountNumberMask = null;
    
    /**
     * The type of the customer's bank account. Applicable to direct debit payment methods.
     * 
     * @var ?string $bankTransferAccountType
     */
	#[\JMS\Serializer\Annotation\SerializedName('BankTransferAccountType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankTransferAccountType = null;
    
    /**
     * Specifies the type of direct debit transfer. The value of this field is dependent on the country of the user.
     * 
     * 
     * Possible Values: 
     * 
     * 
     * * `AutomatischIncasso` (NL)
     * 
     * * `LastschriftDE` (Germany)
     * 
     * * `LastschriftAT` (Austria)
     * 
     * * `DemandeDePrelevement` (FR)
     * 
     * * `DirectDebitUK` (UK)
     * 
     * * `Domicil` (Belgium)
     * 
     * * `LastschriftCH` (CH)
     * 
     * * `RID` (Italy)
     * 
     * * `OrdenDeDomiciliacion` (Spain)
     * * `Autogiro` (Sweden)
     * * `Betalingsservice` (Denmark)
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ProxyGetPaymentMethodSnapshotBankTransferTypeEnum $bankTransferType
     */
	#[\JMS\Serializer\Annotation\SerializedName('BankTransferType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ProxyGetPaymentMethodSnapshotBankTransferTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ProxyGetPaymentMethodSnapshotBankTransferTypeEnum $bankTransferType = null;
    
    /**
     * The business identification code for Swiss direct payment methods that use the Global Collect payment gateway. Only applicable to direct debit payments in Switzerland with Global Collect.
     * 
     * @var ?string $businessIdentificationCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('BusinessIdentificationCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $businessIdentificationCode = null;
    
    /**
     * The city of the customer's address. Applicable to debit payment methods.
     * 
     * @var ?string $city
     */
	#[\JMS\Serializer\Annotation\SerializedName('City')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $city = null;
    
    /**
     * The name of the company.
     * 
     * 
     * 
     * @var ?string $companyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('CompanyName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $companyName = null;
    
    /**
     * The two-letter country code of the customer's address. Applicable to direct debit payment methods.
     * 
     * @var ?string $country
     */
	#[\JMS\Serializer\Annotation\SerializedName('Country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $country = null;
    
    /**
     * The first line of the card holder's address, which is often a street address or business name. Applicable to credit card and direct debit payment methods.
     * 
     * @var ?string $creditCardAddress1
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditCardAddress1')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creditCardAddress1 = null;
    
    /**
     * The second line of the card holder's address. Applicable to credit card and direct debit payment methods.
     * 
     * @var ?string $creditCardAddress2
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditCardAddress2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creditCardAddress2 = null;
    
    /**
     * The city of the card holder's address. Applicable to credit card and direct debit payment methods.
     * 
     * @var ?string $creditCardCity
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditCardCity')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creditCardCity = null;
    
    /**
     * The country of the card holder's address.
     * 
     * @var ?string $creditCardCountry
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditCardCountry')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creditCardCountry = null;
    
    /**
     * The expiration month of the credit card or debit card. Applicable to credit card and direct debit payment methods.
     * 
     * @var ?int $creditCardExpirationMonth
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditCardExpirationMonth')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $creditCardExpirationMonth = null;
    
    /**
     * The expiration month of the credit card or debit card. Applicable to credit card and direct debit payment methods.
     * 
     * @var ?int $creditCardExpirationYear
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditCardExpirationYear')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $creditCardExpirationYear = null;
    
    /**
     * The full name of the card holder. Applicable to credit card and direct debit payment methods.
     * 
     * @var ?string $creditCardHolderName
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditCardHolderName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creditCardHolderName = null;
    
    /**
     * A masked version of the credit or debit card number.
     * 
     * @var ?string $creditCardMaskNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditCardMaskNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creditCardMaskNumber = null;
    
    /**
     * The billing address's zip code.
     * 
     * @var ?string $creditCardPostalCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditCardPostalCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creditCardPostalCode = null;
    
    /**
     * The billing address's state. Applicable if `CreditCardCountry` is either Canada or the US.
     * 
     * @var ?string $creditCardState
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditCardState')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creditCardState = null;
    
    /**
     * The type of credit card or debit card.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ProxyGetPaymentMethodSnapshotCreditCardTypeEnum $creditCardType
     */
	#[\JMS\Serializer\Annotation\SerializedName('CreditCardType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ProxyGetPaymentMethodSnapshotCreditCardTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ProxyGetPaymentMethodSnapshotCreditCardTypeEnum $creditCardType = null;
    
    /**
     * The session ID of the user when the `PaymentMethod` was created or updated.
     * 
     * @var ?string $deviceSessionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('DeviceSessionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $deviceSessionId = null;
    
    /**
     * An email address for the payment method in addition to the bill to contact email address.
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('Email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * Indicates if the customer has an existing mandate or a new mandate. Only applicable to direct debit payment methods.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ProxyGetPaymentMethodSnapshotExistingMandateEnum $existingMandate
     */
	#[\JMS\Serializer\Annotation\SerializedName('ExistingMandate')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ProxyGetPaymentMethodSnapshotExistingMandateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ProxyGetPaymentMethodSnapshotExistingMandateEnum $existingMandate = null;
    
    /**
     * The customer's first name. Only applicable to direct debit payment methods.
     * 
     * @var ?string $firstName
     */
	#[\JMS\Serializer\Annotation\SerializedName('FirstName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $firstName = null;
    
    /**
     * The International Bank Account Number. Only applicable to direct debit payment methods.
     * 
     * @var ?string $iban
     */
	#[\JMS\Serializer\Annotation\SerializedName('IBAN')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $iban = null;
    
    /**
     * The IP address of the user when the payment method was created or updated.
     * 
     * @var ?string $ipAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('IPAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ipAddress = null;
    
    /**
     * Object identifier.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('Id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The unique identity number of the customer account. 
     * 
     * 
     * 
     * @var ?string $identityNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('IdentityNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $identityNumber = null;
    
    /**
     * Whether the customer account is a company.
     * 
     * 
     * 
     * @var ?bool $isCompany
     */
	#[\JMS\Serializer\Annotation\SerializedName('IsCompany')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isCompany = null;
    
    /**
     * The date of the last failed attempt to collect payment with this payment method.
     * 
     * @var ?\DateTime $lastFailedSaleTransactionDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('LastFailedSaleTransactionDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastFailedSaleTransactionDate = null;
    
    /**
     * The customer's last name. Only applicable to direct debit payment methods.
     * 
     * @var ?string $lastName
     */
	#[\JMS\Serializer\Annotation\SerializedName('LastName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastName = null;
    
    /**
     * The date of the most recent transaction.
     * 
     * @var ?\DateTime $lastTransactionDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('LastTransactionDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastTransactionDateTime = null;
    
    /**
     * The status of the most recent transaction.
     * 
     * @var ?string $lastTransactionStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('LastTransactionStatus')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastTransactionStatus = null;
    
    /**
     * The date when the mandate was created, in `yyyy-mm-dd` format. A mandate is a signed authorization for UK and NL customers. Only applicable to direct debit payment methods.
     * 
     * @var ?\DateTime $mandateCreationDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('MandateCreationDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $mandateCreationDate = null;
    
    /**
     * The ID of the mandate. A mandate is a signed authorization for UK and NL customers. Only applicable to direct debit payment methods.
     * 
     * @var ?string $mandateID
     */
	#[\JMS\Serializer\Annotation\SerializedName('MandateID')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mandateID = null;
    
    /**
     * Indicates if  the mandate was received. A mandate is a signed authorization for UK and NL customers. Only applicable to direct debit payment methods.
     * 
     * @var ?string $mandateReceived
     */
	#[\JMS\Serializer\Annotation\SerializedName('MandateReceived')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mandateReceived = null;
    
    /**
     * The date when the mandate was last updated, in `yyyy-mm-dd` format. A mandate is a signed authorization for UK and NL customers. Only applicable to direct debit payment methods.
     * 
     * @var ?\DateTime $mandateUpdateDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('MandateUpdateDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $mandateUpdateDate = null;
    
    /**
     * The number of allowable consecutive failures Zuora attempts with the payment method before stopping.
     * 
     * @var ?int $maxConsecutivePaymentFailures
     */
	#[\JMS\Serializer\Annotation\SerializedName('MaxConsecutivePaymentFailures')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxConsecutivePaymentFailures = null;
    
    /**
     * The name of the payment method.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The number of consecutive failed payment for the payment method.
     * 
     * @var ?int $numConsecutiveFailures
     */
	#[\JMS\Serializer\Annotation\SerializedName('NumConsecutiveFailures')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $numConsecutiveFailures = null;
    
    /**
     * Object identifier of the payment method.
     * 
     * @var ?string $paymentMethodId
     */
	#[\JMS\Serializer\Annotation\SerializedName('PaymentMethodId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentMethodId = null;
    
    /**
     * Specifies the status of the payment method.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ProxyGetPaymentMethodSnapshotPaymentMethodStatusEnum $paymentMethodStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('PaymentMethodStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ProxyGetPaymentMethodSnapshotPaymentMethodStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ProxyGetPaymentMethodSnapshotPaymentMethodStatusEnum $paymentMethodStatus = null;
    
    /**
     * The retry interval setting, which prevents making a payment attempt if the last failed attempt was within the last specified number of hours.
     * 
     * @var ?int $paymentRetryWindow
     */
	#[\JMS\Serializer\Annotation\SerializedName('PaymentRetryWindow')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $paymentRetryWindow = null;
    
    /**
     * The PayPal billing agreement ID, which is a contract between two PayPal accounts.
     * 
     * @var ?string $paypalBaid
     */
	#[\JMS\Serializer\Annotation\SerializedName('PaypalBaid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paypalBaid = null;
    
    /**
     * The email address associated with the account holder's PayPal account or of the PayPal account of the person paying for the service.
     * 
     * @var ?string $paypalEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('PaypalEmail')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paypalEmail = null;
    
    /**
     * PayPal's Adaptive Payments API key.
     * 
     * @var ?string $paypalPreapprovalKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('PaypalPreapprovalKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paypalPreapprovalKey = null;
    
    /**
     * Specifies the PayPal gateway: PayFlow Pro (Express Checkout) or Adaptive Payments.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ProxyGetPaymentMethodSnapshotPaypalTypeEnum $paypalType
     */
	#[\JMS\Serializer\Annotation\SerializedName('PaypalType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ProxyGetPaymentMethodSnapshotPaypalTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ProxyGetPaymentMethodSnapshotPaypalTypeEnum $paypalType = null;
    
    /**
     * The phone number that the account holder registered with the bank. This field is used for credit card validation when passing to a gateway.
     * 
     * @var ?string $phone
     */
	#[\JMS\Serializer\Annotation\SerializedName('Phone')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phone = null;
    
    /**
     * The zip code of the customer's address. Only applicable to direct debit payment methods.
     * 
     * @var ?string $postalCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('PostalCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $postalCode = null;
    
    /**
     * A gateway unique identifier that replaces sensitive payment method data. Applicable to CC Reference Transaction payment methods.
     * 
     * @var ?string $secondTokenId
     */
	#[\JMS\Serializer\Annotation\SerializedName('SecondTokenId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $secondTokenId = null;
    
    /**
     * The state of the customer's address. Only applicable to direct debit payment methods.
     * 
     * @var ?string $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('State')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $state = null;
    
    /**
     * The street name of the customer's address. Only applicable to direct debit payment methods.
     * 
     * @var ?string $streetName
     */
	#[\JMS\Serializer\Annotation\SerializedName('StreetName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $streetName = null;
    
    /**
     * The street number of the customer's address. Only applicable to direct debit payment methods.
     * 
     * @var ?string $streetNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('StreetNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $streetNumber = null;
    
    /**
     * A gateway unique identifier that replaces sensitive payment method data or represents a gateway's unique customer profile. Applicable to CC Reference Transaction payment methods.
     * 
     * @var ?string $tokenId
     */
	#[\JMS\Serializer\Annotation\SerializedName('TokenId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tokenId = null;
    
    /**
     * The number of error payments that used this payment method.
     * 
     * @var ?int $totalNumberOfErrorPayments
     */
	#[\JMS\Serializer\Annotation\SerializedName('TotalNumberOfErrorPayments')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $totalNumberOfErrorPayments = null;
    
    /**
     * The number of successful payments that used this payment method.
     * 
     * @var ?int $totalNumberOfProcessedPayments
     */
	#[\JMS\Serializer\Annotation\SerializedName('TotalNumberOfProcessedPayments')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $totalNumberOfProcessedPayments = null;
    
    /**
     * The type of payment method.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ProxyGetPaymentMethodSnapshotTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('Type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ProxyGetPaymentMethodSnapshotTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ProxyGetPaymentMethodSnapshotTypeEnum $type = null;
    
    /**
     * Determines whether to use the default retry rules configured in the Zuora Payments settings.
     * 
     * @var ?bool $useDefaultRetryRule
     */
	#[\JMS\Serializer\Annotation\SerializedName('UseDefaultRetryRule')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $useDefaultRetryRule = null;
    
	public function __construct()
	{
		$this->accountId = null;
		$this->achAbaCode = null;
		$this->achAccountName = null;
		$this->achAccountNumberMask = null;
		$this->achAccountType = null;
		$this->achBankName = null;
		$this->bankBranchCode = null;
		$this->bankCheckDigit = null;
		$this->bankCity = null;
		$this->bankCode = null;
		$this->bankIdentificationNumber = null;
		$this->bankName = null;
		$this->bankPostalCode = null;
		$this->bankStreetName = null;
		$this->bankStreetNumber = null;
		$this->bankTransferAccountName = null;
		$this->bankTransferAccountNumberMask = null;
		$this->bankTransferAccountType = null;
		$this->bankTransferType = null;
		$this->businessIdentificationCode = null;
		$this->city = null;
		$this->companyName = null;
		$this->country = null;
		$this->creditCardAddress1 = null;
		$this->creditCardAddress2 = null;
		$this->creditCardCity = null;
		$this->creditCardCountry = null;
		$this->creditCardExpirationMonth = null;
		$this->creditCardExpirationYear = null;
		$this->creditCardHolderName = null;
		$this->creditCardMaskNumber = null;
		$this->creditCardPostalCode = null;
		$this->creditCardState = null;
		$this->creditCardType = null;
		$this->deviceSessionId = null;
		$this->email = null;
		$this->existingMandate = null;
		$this->firstName = null;
		$this->iban = null;
		$this->ipAddress = null;
		$this->id = null;
		$this->identityNumber = null;
		$this->isCompany = null;
		$this->lastFailedSaleTransactionDate = null;
		$this->lastName = null;
		$this->lastTransactionDateTime = null;
		$this->lastTransactionStatus = null;
		$this->mandateCreationDate = null;
		$this->mandateID = null;
		$this->mandateReceived = null;
		$this->mandateUpdateDate = null;
		$this->maxConsecutivePaymentFailures = null;
		$this->name = null;
		$this->numConsecutiveFailures = null;
		$this->paymentMethodId = null;
		$this->paymentMethodStatus = null;
		$this->paymentRetryWindow = null;
		$this->paypalBaid = null;
		$this->paypalEmail = null;
		$this->paypalPreapprovalKey = null;
		$this->paypalType = null;
		$this->phone = null;
		$this->postalCode = null;
		$this->secondTokenId = null;
		$this->state = null;
		$this->streetName = null;
		$this->streetNumber = null;
		$this->tokenId = null;
		$this->totalNumberOfErrorPayments = null;
		$this->totalNumberOfProcessedPayments = null;
		$this->type = null;
		$this->useDefaultRetryRule = null;
	}
}
