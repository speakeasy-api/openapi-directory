<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * EmbeddedObject - An embedded object in the document.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class EmbeddedObject
{
    /**
     * The description of the embedded object. The `title` and `description` are both combined to display alt text.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The properties of an embedded drawing and used to differentiate the object type. An embedded drawing is one that's created and edited within a document. Note that extensive details are not supported.
     * 
     * @var ?array<string, mixed> $embeddedDrawingProperties
     */
	#[\JMS\Serializer\Annotation\SerializedName('embeddedDrawingProperties')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $embeddedDrawingProperties = null;
    
    /**
     * A border around an EmbeddedObject.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EmbeddedObjectBorder $embeddedObjectBorder
     */
	#[\JMS\Serializer\Annotation\SerializedName('embeddedObjectBorder')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EmbeddedObjectBorder')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EmbeddedObjectBorder $embeddedObjectBorder = null;
    
    /**
     * The properties of an image.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ImageProperties $imageProperties
     */
	#[\JMS\Serializer\Annotation\SerializedName('imageProperties')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ImageProperties')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ImageProperties $imageProperties = null;
    
    /**
     * A reference to the external linked source content.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LinkedContentReference $linkedContentReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('linkedContentReference')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LinkedContentReference')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LinkedContentReference $linkedContentReference = null;
    
    /**
     * A magnitude in a single direction in the specified units.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Dimension $marginBottom
     */
	#[\JMS\Serializer\Annotation\SerializedName('marginBottom')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Dimension')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Dimension $marginBottom = null;
    
    /**
     * A magnitude in a single direction in the specified units.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Dimension $marginLeft
     */
	#[\JMS\Serializer\Annotation\SerializedName('marginLeft')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Dimension')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Dimension $marginLeft = null;
    
    /**
     * A magnitude in a single direction in the specified units.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Dimension $marginRight
     */
	#[\JMS\Serializer\Annotation\SerializedName('marginRight')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Dimension')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Dimension $marginRight = null;
    
    /**
     * A magnitude in a single direction in the specified units.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Dimension $marginTop
     */
	#[\JMS\Serializer\Annotation\SerializedName('marginTop')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Dimension')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Dimension $marginTop = null;
    
    /**
     * A width and height.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Size $size
     */
	#[\JMS\Serializer\Annotation\SerializedName('size')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Size')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Size $size = null;
    
    /**
     * The title of the embedded object. The `title` and `description` are both combined to display alt text.
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
	public function __construct()
	{
		$this->description = null;
		$this->embeddedDrawingProperties = null;
		$this->embeddedObjectBorder = null;
		$this->imageProperties = null;
		$this->linkedContentReference = null;
		$this->marginBottom = null;
		$this->marginLeft = null;
		$this->marginRight = null;
		$this->marginTop = null;
		$this->size = null;
		$this->title = null;
	}
}
