<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CreateAWireTransferParameters
{
    /**
     * The identifier for the account that will send the transfer.
     * 
     * @var string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $accountId;
    
    /**
     * The account number for the destination account.
     * 
     * @var ?string $accountNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountNumber = null;
    
    /**
     * The transfer amount in cents.
     * 
     * @var int $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $amount;
    
    /**
     * The beneficiary's address line 1.
     * 
     * @var ?string $beneficiaryAddressLine1
     */
	#[\JMS\Serializer\Annotation\SerializedName('beneficiary_address_line1')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $beneficiaryAddressLine1 = null;
    
    /**
     * The beneficiary's address line 2.
     * 
     * @var ?string $beneficiaryAddressLine2
     */
	#[\JMS\Serializer\Annotation\SerializedName('beneficiary_address_line2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $beneficiaryAddressLine2 = null;
    
    /**
     * The beneficiary's address line 3.
     * 
     * @var ?string $beneficiaryAddressLine3
     */
	#[\JMS\Serializer\Annotation\SerializedName('beneficiary_address_line3')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $beneficiaryAddressLine3 = null;
    
    /**
     * The beneficiary's name.
     * 
     * @var string $beneficiaryName
     */
	#[\JMS\Serializer\Annotation\SerializedName('beneficiary_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $beneficiaryName;
    
    /**
     * The ID of an External Account to initiate a transfer to. If this parameter is provided, `account_number` and `routing_number` must be absent.
     * 
     * @var ?string $externalAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('external_account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $externalAccountId = null;
    
    /**
     * The message that will show on the recipient's bank statement.
     * 
     * @var string $messageToRecipient
     */
	#[\JMS\Serializer\Annotation\SerializedName('message_to_recipient')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $messageToRecipient;
    
    /**
     * Whether the transfer requires explicit approval via the dashboard or API.
     * 
     * @var ?bool $requireApproval
     */
	#[\JMS\Serializer\Annotation\SerializedName('require_approval')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $requireApproval = null;
    
    /**
     * The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account.
     * 
     * @var ?string $routingNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('routing_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $routingNumber = null;
    
	public function __construct()
	{
		$this->accountId = "";
		$this->accountNumber = null;
		$this->amount = 0;
		$this->beneficiaryAddressLine1 = null;
		$this->beneficiaryAddressLine2 = null;
		$this->beneficiaryAddressLine3 = null;
		$this->beneficiaryName = "";
		$this->externalAccountId = null;
		$this->messageToRecipient = "";
		$this->requireApproval = null;
		$this->routingNumber = null;
	}
}
