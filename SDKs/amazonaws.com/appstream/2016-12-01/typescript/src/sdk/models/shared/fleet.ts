/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ComputeCapacityStatus } from "./computecapacitystatus";
import { DomainJoinInfo } from "./domainjoininfo";
import { FleetError } from "./fleeterror";
import { FleetStateEnum } from "./fleetstateenum";
import { FleetTypeEnum } from "./fleettypeenum";
import { PlatformTypeEnum } from "./platformtypeenum";
import { S3Location } from "./s3location";
import { StreamViewEnum } from "./streamviewenum";
import { VpcConfig } from "./vpcconfig";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Describes a fleet.
 */
export class Fleet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ComputeCapacityStatus" })
  @Type(() => ComputeCapacityStatus)
  computeCapacityStatus: ComputeCapacityStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DisconnectTimeoutInSeconds" })
  disconnectTimeoutInSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "DisplayName" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DomainJoinInfo" })
  @Type(() => DomainJoinInfo)
  domainJoinInfo?: DomainJoinInfo;

  @SpeakeasyMetadata()
  @Expose({ name: "EnableDefaultInternetAccess" })
  enableDefaultInternetAccess?: boolean;

  @SpeakeasyMetadata({ elemType: FleetError })
  @Expose({ name: "FleetErrors" })
  @Type(() => FleetError)
  fleetErrors?: FleetError[];

  @SpeakeasyMetadata()
  @Expose({ name: "FleetType" })
  fleetType?: FleetTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "IamRoleArn" })
  iamRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IdleDisconnectTimeoutInSeconds" })
  idleDisconnectTimeoutInSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ImageArn" })
  imageArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ImageName" })
  imageName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InstanceType" })
  instanceType: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxConcurrentSessions" })
  maxConcurrentSessions?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxUserDurationInSeconds" })
  maxUserDurationInSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Platform" })
  platform?: PlatformTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SessionScriptS3Location" })
  @Type(() => S3Location)
  sessionScriptS3Location?: S3Location;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state: FleetStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StreamView" })
  streamView?: StreamViewEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "UsbDeviceFilterStrings" })
  usbDeviceFilterStrings?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "VpcConfig" })
  @Type(() => VpcConfig)
  vpcConfig?: VpcConfig;
}
