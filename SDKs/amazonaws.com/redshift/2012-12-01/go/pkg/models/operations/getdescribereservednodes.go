// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDescribeReservedNodesActionEnum
type GETDescribeReservedNodesActionEnum string

const (
	GETDescribeReservedNodesActionEnumDescribeReservedNodes GETDescribeReservedNodesActionEnum = "DescribeReservedNodes"
)

func (e *GETDescribeReservedNodesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeReservedNodes":
		*e = GETDescribeReservedNodesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeReservedNodesActionEnum: %s", s)
	}
}

// GETDescribeReservedNodesVersionEnum
type GETDescribeReservedNodesVersionEnum string

const (
	GETDescribeReservedNodesVersionEnumTwoThousandAndTwelve1201 GETDescribeReservedNodesVersionEnum = "2012-12-01"
)

func (e *GETDescribeReservedNodesVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = GETDescribeReservedNodesVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDescribeReservedNodesVersionEnum: %s", s)
	}
}

type GETDescribeReservedNodesRequest struct {
	Action GETDescribeReservedNodesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// An optional parameter that specifies the starting point to return a set of response records. When the results of a <a>DescribeReservedNodes</a> request exceed the value specified in <code>MaxRecords</code>, Amazon Web Services returns a value in the <code>Marker</code> field of the response. You can retrieve the next set of response records by providing the returned marker value in the <code>Marker</code> parameter and retrying the request.
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// <p>The maximum number of response records to return in each call. If the number of remaining response records exceeds the specified <code>MaxRecords</code> value, a value is returned in a <code>marker</code> field of the response. You can retrieve the next set of records by retrying the command with the returned marker value. </p> <p>Default: <code>100</code> </p> <p>Constraints: minimum 20, maximum 100.</p>
	MaxRecords *int64 `queryParam:"style=form,explode=true,name=MaxRecords"`
	// Identifier for the node reservation.
	ReservedNodeID    *string                             `queryParam:"style=form,explode=true,name=ReservedNodeId"`
	Version           GETDescribeReservedNodesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDescribeReservedNodesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
