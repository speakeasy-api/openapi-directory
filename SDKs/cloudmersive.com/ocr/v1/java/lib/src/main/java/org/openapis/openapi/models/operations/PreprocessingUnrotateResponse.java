/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class PreprocessingUnrotateResponse {
    
    public String contentType;

    public PreprocessingUnrotateResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * OK
     */
    
    public String preprocessingUnrotate200ApplicationJSONByteString;

    public PreprocessingUnrotateResponse withPreprocessingUnrotate200ApplicationJSONByteString(String preprocessingUnrotate200ApplicationJSONByteString) {
        this.preprocessingUnrotate200ApplicationJSONByteString = preprocessingUnrotate200ApplicationJSONByteString;
        return this;
    }
    
    /**
     * OK
     */
    
    public String preprocessingUnrotate200ApplicationXMLByteString;

    public PreprocessingUnrotateResponse withPreprocessingUnrotate200ApplicationXMLByteString(String preprocessingUnrotate200ApplicationXMLByteString) {
        this.preprocessingUnrotate200ApplicationXMLByteString = preprocessingUnrotate200ApplicationXMLByteString;
        return this;
    }
    
    /**
     * OK
     */
    
    public String preprocessingUnrotate200TextJSONByteString;

    public PreprocessingUnrotateResponse withPreprocessingUnrotate200TextJSONByteString(String preprocessingUnrotate200TextJSONByteString) {
        this.preprocessingUnrotate200TextJSONByteString = preprocessingUnrotate200TextJSONByteString;
        return this;
    }
    
    /**
     * OK
     */
    
    public String preprocessingUnrotate200TextXMLByteString;

    public PreprocessingUnrotateResponse withPreprocessingUnrotate200TextXMLByteString(String preprocessingUnrotate200TextXMLByteString) {
        this.preprocessingUnrotate200TextXMLByteString = preprocessingUnrotate200TextXMLByteString;
        return this;
    }
    
    
    public Integer statusCode;

    public PreprocessingUnrotateResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public PreprocessingUnrotateResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    public PreprocessingUnrotateResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
