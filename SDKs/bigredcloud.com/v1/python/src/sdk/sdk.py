"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from .accounts import Accounts
from .analysiscategories import AnalysisCategories
from .bankaccounts import BankAccounts
from .booktrantypes import BookTranTypes
from .cashpayments import CashPayments
from .cashreceipts import CashReceipts
from .categorytypes import CategoryTypes
from .companysettings import CompanySettings
from .companysetupconfig import CompanySetupConfig
from .customers import Customers
from .email import Email
from .ownertypegroups import OwnerTypeGroups
from .ownertypes import OwnerTypes
from .payments import Payments
from .products import Products
from .producttypes import ProductTypes
from .purchases import Purchases
from .quote import Quote
from .sales import Sales
from .salescreditnotes import SalesCreditNotes
from .salesentries import SalesEntries
from .salesinvoices import SalesInvoices
from .salesrep import SalesRep
from .suppliers import Suppliers
from .userdefinedfields import UserDefinedFields
from .vatanalysistypes import VatAnalysisTypes
from .vatcategories import VatCategories
from .vatrates import VatRates
from .vattypes import VatTypes

SERVERS = [
    "https://app.bigredcloud.com/api",
]
"""Contains the list of servers available to the SDK"""

class SDK:
    r"""<div style='line-height: 30px;'>
        <strong>Welcome to the Big Red Cloud API</strong><br/>
        This API enables programmatic access to Big Red Cloud data.<br/>
        We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>
        To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>
        Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>
        The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>
        For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>
    </div>
    """
    accounts: Accounts
    analysis_categories: AnalysisCategories
    bank_accounts: BankAccounts
    book_tran_types: BookTranTypes
    cash_payments: CashPayments
    cash_receipts: CashReceipts
    category_types: CategoryTypes
    company_settings: CompanySettings
    company_setup_config: CompanySetupConfig
    customers: Customers
    email: Email
    owner_type_groups: OwnerTypeGroups
    owner_types: OwnerTypes
    payments: Payments
    product_types: ProductTypes
    products: Products
    purchases: Purchases
    quote: Quote
    sales: Sales
    sales_credit_notes: SalesCreditNotes
    sales_entries: SalesEntries
    sales_invoices: SalesInvoices
    sales_rep: SalesRep
    suppliers: Suppliers
    user_defined_fields: UserDefinedFields
    vat_analysis_types: VatAnalysisTypes
    vat_categories: VatCategories
    vat_rates: VatRates
    vat_types: VatTypes

    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str = SERVERS[0]
    _language: str = "python"
    _sdk_version: str = "0.0.1"
    _gen_version: str = "internal"

    def __init__(self,
                 server_url: str = None,
                 url_params: dict[str, str] = None,
                 client: requests_http.Session = None
                 ) -> None:
        """Instantiates the SDK configuring it with the provided parameters.
        
        :param server_url: The server URL to use for all operations
        :type server_url: str
        :param url_params: Parameters to optionally template the server URL with
        :type url_params: dict[str, str]
        :param client: The requests.Session HTTP client to use for all operations
        :type client: requests_http.Session        
        """
        self._client = requests_http.Session()
        
        
        if server_url is not None:
            if url_params is not None:
                self._server_url = utils.template_url(server_url, url_params)
            else:
                self._server_url = server_url

        if client is not None:
            self._client = client
        
        self._security_client = self._client
        

        self._init_sdks()
    
    def _init_sdks(self):
        self.accounts = Accounts(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.analysis_categories = AnalysisCategories(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.bank_accounts = BankAccounts(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.book_tran_types = BookTranTypes(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.cash_payments = CashPayments(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.cash_receipts = CashReceipts(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.category_types = CategoryTypes(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.company_settings = CompanySettings(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.company_setup_config = CompanySetupConfig(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.customers = Customers(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.email = Email(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.owner_type_groups = OwnerTypeGroups(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.owner_types = OwnerTypes(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.payments = Payments(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.product_types = ProductTypes(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.products = Products(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.purchases = Purchases(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.quote = Quote(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.sales = Sales(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.sales_credit_notes = SalesCreditNotes(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.sales_entries = SalesEntries(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.sales_invoices = SalesInvoices(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.sales_rep = SalesRep(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.suppliers = Suppliers(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.user_defined_fields = UserDefinedFields(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.vat_analysis_types = VatAnalysisTypes(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.vat_categories = VatCategories(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.vat_rates = VatRates(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
        self.vat_types = VatTypes(
            self._client,
            self._security_client,
            self._server_url,
            self._language,
            self._sdk_version,
            self._gen_version
        )
        
    