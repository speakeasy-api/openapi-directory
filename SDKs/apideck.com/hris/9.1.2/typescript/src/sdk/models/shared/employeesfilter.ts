/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Employment status to filter on
 */
export enum EmployeesFilterEmploymentStatusEnum {
  Active = "active",
  Inactive = "inactive",
  Terminated = "terminated",
  Other = "other",
}

/**
 * Apply filters
 */
export class EmployeesFilter extends SpeakeasyBase {
  /**
   * Company ID to filter on
   */
  @SpeakeasyMetadata({ data: "queryParam, name=company_id" })
  companyId?: string;

  /**
   * ID of the department to filter on
   */
  @SpeakeasyMetadata({ data: "queryParam, name=department_id" })
  departmentId?: string;

  /**
   * Email to filter on
   */
  @SpeakeasyMetadata({ data: "queryParam, name=email" })
  email?: string;

  /**
   * Employee number to filter on
   */
  @SpeakeasyMetadata({ data: "queryParam, name=employee_number" })
  employeeNumber?: string;

  /**
   * Employment status to filter on
   */
  @SpeakeasyMetadata({ data: "queryParam, name=employment_status" })
  employmentStatus?: EmployeesFilterEmploymentStatusEnum;

  /**
   * First Name to filter on
   */
  @SpeakeasyMetadata({ data: "queryParam, name=first_name" })
  firstName?: string;

  /**
   * Last Name to filter on
   */
  @SpeakeasyMetadata({ data: "queryParam, name=last_name" })
  lastName?: string;

  /**
   * Manager id to filter on
   */
  @SpeakeasyMetadata({ data: "queryParam, name=manager_id" })
  managerId?: string;

  /**
   * Job title to filter on
   */
  @SpeakeasyMetadata({ data: "queryParam, name=title" })
  title?: string;
}
