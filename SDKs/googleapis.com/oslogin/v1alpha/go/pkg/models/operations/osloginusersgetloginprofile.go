// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type OsloginUsersGetLoginProfileSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type OsloginUsersGetLoginProfileSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type OsloginUsersGetLoginProfileSecurityOption3 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type OsloginUsersGetLoginProfileSecurityOption4 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type OsloginUsersGetLoginProfileSecurity struct {
	Option1 *OsloginUsersGetLoginProfileSecurityOption1 `security:"option"`
	Option2 *OsloginUsersGetLoginProfileSecurityOption2 `security:"option"`
	Option3 *OsloginUsersGetLoginProfileSecurityOption3 `security:"option"`
	Option4 *OsloginUsersGetLoginProfileSecurityOption4 `security:"option"`
}

// OsloginUsersGetLoginProfileOperatingSystemTypeEnum - The type of operating system associated with the account.
type OsloginUsersGetLoginProfileOperatingSystemTypeEnum string

const (
	OsloginUsersGetLoginProfileOperatingSystemTypeEnumOperatingSystemTypeUnspecified OsloginUsersGetLoginProfileOperatingSystemTypeEnum = "OPERATING_SYSTEM_TYPE_UNSPECIFIED"
	OsloginUsersGetLoginProfileOperatingSystemTypeEnumLinux                          OsloginUsersGetLoginProfileOperatingSystemTypeEnum = "LINUX"
	OsloginUsersGetLoginProfileOperatingSystemTypeEnumWindows                        OsloginUsersGetLoginProfileOperatingSystemTypeEnum = "WINDOWS"
)

func (e *OsloginUsersGetLoginProfileOperatingSystemTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OPERATING_SYSTEM_TYPE_UNSPECIFIED":
		fallthrough
	case "LINUX":
		fallthrough
	case "WINDOWS":
		*e = OsloginUsersGetLoginProfileOperatingSystemTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OsloginUsersGetLoginProfileOperatingSystemTypeEnum: %s", s)
	}
}

// OsloginUsersGetLoginProfileViewEnum - The view configures whether to retrieve security keys information.
type OsloginUsersGetLoginProfileViewEnum string

const (
	OsloginUsersGetLoginProfileViewEnumLoginProfileViewUnspecified OsloginUsersGetLoginProfileViewEnum = "LOGIN_PROFILE_VIEW_UNSPECIFIED"
	OsloginUsersGetLoginProfileViewEnumBasic                       OsloginUsersGetLoginProfileViewEnum = "BASIC"
	OsloginUsersGetLoginProfileViewEnumSecurityKey                 OsloginUsersGetLoginProfileViewEnum = "SECURITY_KEY"
)

func (e *OsloginUsersGetLoginProfileViewEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LOGIN_PROFILE_VIEW_UNSPECIFIED":
		fallthrough
	case "BASIC":
		fallthrough
	case "SECURITY_KEY":
		*e = OsloginUsersGetLoginProfileViewEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OsloginUsersGetLoginProfileViewEnum: %s", s)
	}
}

type OsloginUsersGetLoginProfileRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// Required. The unique ID for the user in format `users/{user}`.
	Name string `pathParam:"style=simple,explode=false,name=name"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The type of operating system associated with the account.
	OperatingSystemType *OsloginUsersGetLoginProfileOperatingSystemTypeEnum `queryParam:"style=form,explode=true,name=operatingSystemType"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// The project ID of the Google Cloud Platform project.
	ProjectID *string `queryParam:"style=form,explode=true,name=projectId"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// A system ID for filtering the results of the request.
	SystemID *string `queryParam:"style=form,explode=true,name=systemId"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// The view configures whether to retrieve security keys information.
	View *OsloginUsersGetLoginProfileViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type OsloginUsersGetLoginProfileResponse struct {
	ContentType string
	// Successful response
	LoginProfile *shared.LoginProfile
	StatusCode   int
	RawResponse  *http.Response
}
