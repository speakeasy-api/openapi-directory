<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GetWorkflowResponse - Success
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GetWorkflowResponse
{
	#[\JMS\Serializer\Annotation\SerializedName('arn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $arn = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('creationTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $creationTime = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('definition')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $definition = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('digest')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $digest = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('engine')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WorkflowEngineEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WorkflowEngineEnum $engine = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('main')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $main = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * $parameterTemplate
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\WorkflowParameter> $parameterTemplate
     */
	#[\JMS\Serializer\Annotation\SerializedName('parameterTemplate')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\WorkflowParameter>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $parameterTemplate = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WorkflowStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WorkflowStatusEnum $status = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('statusMessage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $statusMessage = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('storageCapacity')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $storageCapacity = null;
    
    /**
     * $tags
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WorkflowTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WorkflowTypeEnum $type = null;
    
	public function __construct()
	{
		$this->arn = null;
		$this->creationTime = null;
		$this->definition = null;
		$this->description = null;
		$this->digest = null;
		$this->engine = null;
		$this->id = null;
		$this->main = null;
		$this->name = null;
		$this->parameterTemplate = null;
		$this->status = null;
		$this->statusMessage = null;
		$this->storageCapacity = null;
		$this->tags = null;
		$this->type = null;
	}
}
