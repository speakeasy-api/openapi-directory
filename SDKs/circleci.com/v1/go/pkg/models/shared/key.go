// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// KeyTypeEnum - can be "deploy-key" or "github-user-key"
type KeyTypeEnum string

const (
	KeyTypeEnumDeployKey     KeyTypeEnum = "deploy-key"
	KeyTypeEnumGithubUserKey KeyTypeEnum = "github-user-key"
)

func (e *KeyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "deploy-key":
		fallthrough
	case "github-user-key":
		*e = KeyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for KeyTypeEnum: %s", s)
	}
}

// Key - checkout key
type Key struct {
	Fingerprint *string `json:"fingerprint,omitempty"`
	Preferred   *bool   `json:"preferred,omitempty"`
	PublicKey   *string `json:"public_key,omitempty"`
	// when the key was issued
	Time *time.Time `json:"time,omitempty"`
	// can be "deploy-key" or "github-user-key"
	//
	Type *KeyTypeEnum `json:"type,omitempty"`
}
