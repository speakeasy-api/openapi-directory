"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import employmentterminationpaymenttype_enum as shared_employmentterminationpaymenttype_enum
from ..shared import entitlementfinalpaypayouttype_enum as shared_entitlementfinalpaypayouttype_enum
from ..shared import leavelinecalculationtype_enum as shared_leavelinecalculationtype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LeaveLine:
    
    annual_number_of_units: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AnnualNumberOfUnits'), 'exclude': lambda f: f is None }})
    r"""Hours of leave accrued each year"""  
    calculation_type: Optional[shared_leavelinecalculationtype_enum.LeaveLineCalculationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CalculationType'), 'exclude': lambda f: f is None }})
    r"""Calculation type for leave line for Opening Balance on Employee"""  
    employment_termination_payment_type: Optional[shared_employmentterminationpaymenttype_enum.EmploymentTerminationPaymentTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmploymentTerminationPaymentType'), 'exclude': lambda f: f is None }})  
    entitlement_final_pay_payout_type: Optional[shared_entitlementfinalpaypayouttype_enum.EntitlementFinalPayPayoutTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EntitlementFinalPayPayoutType'), 'exclude': lambda f: f is None }})  
    full_time_number_of_units_per_period: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FullTimeNumberOfUnitsPerPeriod'), 'exclude': lambda f: f is None }})
    r"""Normal ordinary earnings number of units for leave line."""  
    include_superannuation_guarantee_contribution: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IncludeSuperannuationGuaranteeContribution'), 'exclude': lambda f: f is None }})
    r"""amount of leave line"""  
    leave_type_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LeaveTypeID'), 'exclude': lambda f: f is None }})
    r"""Xero leave type identifier"""  
    number_of_units: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NumberOfUnits'), 'exclude': lambda f: f is None }})
    r"""Number of units for leave line."""  
    