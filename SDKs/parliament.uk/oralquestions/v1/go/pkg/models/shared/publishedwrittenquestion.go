// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type PublishedWrittenQuestionQuestionTypeEnum string

const (
	PublishedWrittenQuestionQuestionTypeEnumNamedDay PublishedWrittenQuestionQuestionTypeEnum = "NamedDay"
	PublishedWrittenQuestionQuestionTypeEnumOrdinary PublishedWrittenQuestionQuestionTypeEnum = "Ordinary"
)

func (e *PublishedWrittenQuestionQuestionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NamedDay":
		fallthrough
	case "Ordinary":
		*e = PublishedWrittenQuestionQuestionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PublishedWrittenQuestionQuestionTypeEnum: %s", s)
	}
}

type PublishedWrittenQuestion struct {
	Answer                 *string                                   `json:"Answer,omitempty"`
	AnsweredWhen           *time.Time                                `json:"AnsweredWhen,omitempty"`
	AnsweringBody          *string                                   `json:"AnsweringBody,omitempty"`
	AnsweringBodyID        *int                                      `json:"AnsweringBodyId,omitempty"`
	AnsweringMinister      *MemberForDate                            `json:"AnsweringMinister,omitempty"`
	AnsweringMinisterID    *int                                      `json:"AnsweringMinisterId,omitempty"`
	AnsweringMinisterTitle *string                                   `json:"AnsweringMinisterTitle,omitempty"`
	AskingMember           *MemberForDate                            `json:"AskingMember,omitempty"`
	AskingMemberID         *int                                      `json:"AskingMemberId,omitempty"`
	DueForAnswer           *time.Time                                `json:"DueForAnswer,omitempty"`
	ID                     *int                                      `json:"Id,omitempty"`
	QuestionText           *string                                   `json:"QuestionText,omitempty"`
	QuestionType           *PublishedWrittenQuestionQuestionTypeEnum `json:"QuestionType,omitempty"`
	TabledWhen             *time.Time                                `json:"TabledWhen,omitempty"`
	Uin                    *int                                      `json:"UIN,omitempty"`
}
