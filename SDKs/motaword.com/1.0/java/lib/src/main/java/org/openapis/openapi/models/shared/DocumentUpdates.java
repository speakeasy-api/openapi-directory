/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class DocumentUpdates {
    /**
     * You can add as many files as you want in documents[] parameter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documents[]")
    @SpeakeasyMetadata("multipartForm:name=documents[],json")
    public byte[][] documents;
    public DocumentUpdates withDocuments(byte[][] documents) {
        this.documents = documents;
        return this;
    }
    
    /**
     * JSON string. If your documents have a scheme, as in cases of CSV files, use the same array index keys for `schemes` parameter to specify their schemes. See `Document Schemes` title in the API documentation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schemes[]")
    @SpeakeasyMetadata("multipartForm:name=schemes[]")
    public String schemes;
    public DocumentUpdates withSchemes(String schemes) {
        this.schemes = schemes;
        return this;
    }
    
    /**
     * When provided, we will download the files from these URLs, in addition to files provded in `documents` parameter and then save as source documents
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("source-links[]")
    @SpeakeasyMetadata("multipartForm:name=source-links[],json")
    public LinkedSourceDocument[] sourceLinks;
    public DocumentUpdates withSourceLinks(LinkedSourceDocument[] sourceLinks) {
        this.sourceLinks = sourceLinks;
        return this;
    }
    
}
