/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The launch template that the fast-launch enabled Windows AMI uses when it launches Windows instances from pre-provisioned snapshots.
 */
export class DescribeFastLaunchImagesResultFastLaunchImagesLaunchTemplate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  launchTemplateId?: string;

  @SpeakeasyMetadata()
  launchTemplateName?: string;

  @SpeakeasyMetadata()
  version?: string;
}

/**
 * The resource type that is used for pre-provisioning the Windows AMI. Supported values include: <code>snapshot</code>.
 */
export enum DescribeFastLaunchImagesResultFastLaunchImagesResourceTypeEnum {
  Snapshot = "snapshot",
}

/**
 * A group of parameters that are used for pre-provisioning the associated Windows AMI using snapshots.
 */
export class DescribeFastLaunchImagesResultFastLaunchImagesSnapshotConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  targetResourceCount?: number;
}

/**
 * The current state of faster launching for the specified Windows AMI.
 */
export enum DescribeFastLaunchImagesResultFastLaunchImagesStateEnum {
  Enabling = "enabling",
  EnablingFailed = "enabling-failed",
  Enabled = "enabled",
  EnabledFailed = "enabled-failed",
  Disabling = "disabling",
  DisablingFailed = "disabling-failed",
}

/**
 * Describe details about a fast-launch enabled Windows image that meets the requested criteria. Criteria are defined by the <code>DescribeFastLaunchImages</code> action filters.
 */
export class DescribeFastLaunchImagesResultFastLaunchImages extends SpeakeasyBase {
  @SpeakeasyMetadata()
  imageId?: string;

  @SpeakeasyMetadata()
  launchTemplate?: DescribeFastLaunchImagesResultFastLaunchImagesLaunchTemplate;

  @SpeakeasyMetadata()
  maxParallelLaunches?: number;

  @SpeakeasyMetadata()
  ownerId?: string;

  @SpeakeasyMetadata()
  resourceType?: DescribeFastLaunchImagesResultFastLaunchImagesResourceTypeEnum;

  @SpeakeasyMetadata()
  snapshotConfiguration?: DescribeFastLaunchImagesResultFastLaunchImagesSnapshotConfiguration;

  @SpeakeasyMetadata()
  state?: DescribeFastLaunchImagesResultFastLaunchImagesStateEnum;

  @SpeakeasyMetadata()
  stateTransitionReason?: string;

  @SpeakeasyMetadata()
  stateTransitionTime?: Date;
}

/**
 * Success
 */
export class DescribeFastLaunchImagesResult extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: DescribeFastLaunchImagesResultFastLaunchImages,
  })
  fastLaunchImages?: DescribeFastLaunchImagesResultFastLaunchImages[];

  @SpeakeasyMetadata()
  nextToken?: string;
}
