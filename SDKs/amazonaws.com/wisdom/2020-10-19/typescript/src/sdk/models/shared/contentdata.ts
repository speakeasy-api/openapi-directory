/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ContentStatusEnum } from "./contentstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Information about the content.
 */
export class ContentData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "contentArn" })
  contentArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contentId" })
  contentId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "contentType" })
  contentType: string;

  @SpeakeasyMetadata()
  @Expose({ name: "knowledgeBaseArn" })
  knowledgeBaseArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "knowledgeBaseId" })
  knowledgeBaseId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "linkOutUri" })
  linkOutUri?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  metadata: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "revisionId" })
  revisionId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: ContentStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;

  @SpeakeasyMetadata()
  @Expose({ name: "urlExpiry" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  urlExpiry: Date;
}
