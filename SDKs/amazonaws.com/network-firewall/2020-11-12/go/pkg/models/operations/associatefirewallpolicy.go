// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AssociateFirewallPolicyXAmzTargetEnum
type AssociateFirewallPolicyXAmzTargetEnum string

const (
	AssociateFirewallPolicyXAmzTargetEnumNetworkFirewall20201112AssociateFirewallPolicy AssociateFirewallPolicyXAmzTargetEnum = "NetworkFirewall_20201112.AssociateFirewallPolicy"
)

func (e AssociateFirewallPolicyXAmzTargetEnum) ToPointer() *AssociateFirewallPolicyXAmzTargetEnum {
	return &e
}

func (e *AssociateFirewallPolicyXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NetworkFirewall_20201112.AssociateFirewallPolicy":
		*e = AssociateFirewallPolicyXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateFirewallPolicyXAmzTargetEnum: %v", v)
	}
}

type AssociateFirewallPolicyRequest struct {
	AssociateFirewallPolicyRequest shared.AssociateFirewallPolicyRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     AssociateFirewallPolicyXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AssociateFirewallPolicyResponse struct {
	// Success
	AssociateFirewallPolicyResponse *shared.AssociateFirewallPolicyResponse
	ContentType                     string
	// InternalServerError
	InternalServerError interface{}
	// InvalidOperationException
	InvalidOperationException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// InvalidTokenException
	InvalidTokenException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ThrottlingException
	ThrottlingException interface{}
}
