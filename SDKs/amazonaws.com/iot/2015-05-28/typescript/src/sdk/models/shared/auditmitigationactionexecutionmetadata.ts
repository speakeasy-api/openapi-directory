/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AuditMitigationActionsExecutionStatusEnum } from "./auditmitigationactionsexecutionstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Returned by ListAuditMitigationActionsTask, this object contains information that describes a mitigation action that has been started.
 */
export class AuditMitigationActionExecutionMetadata extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "actionId" })
  actionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "actionName" })
  actionName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "errorCode" })
  errorCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "findingId" })
  findingId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: AuditMitigationActionsExecutionStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "taskId" })
  taskId?: string;
}
