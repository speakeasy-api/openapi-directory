"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ChannelAuditDetails:
    r"""The auditDetails object encapsulates channel data that is relevant for YouTube Partners during the audit process."""
    
    community_guidelines_good_standing: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('communityGuidelinesGoodStanding'), 'exclude': lambda f: f is None }})
    r"""Whether or not the channel respects the community guidelines."""  
    content_id_claims_good_standing: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contentIdClaimsGoodStanding'), 'exclude': lambda f: f is None }})
    r"""Whether or not the channel has any unresolved claims."""  
    copyright_strikes_good_standing: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('copyrightStrikesGoodStanding'), 'exclude': lambda f: f is None }})
    r"""Whether or not the channel has any copyright strikes."""  
    