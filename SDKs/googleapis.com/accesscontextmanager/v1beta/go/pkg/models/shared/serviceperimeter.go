// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ServicePerimeterPerimeterTypeEnum - Perimeter type indicator. A single project is allowed to be a member of single regular perimeter, but multiple service perimeter bridges. A project cannot be a included in a perimeter bridge without being included in regular perimeter. For perimeter bridges, restricted/unrestricted service lists as well as access lists must be empty.
type ServicePerimeterPerimeterTypeEnum string

const (
	ServicePerimeterPerimeterTypeEnumPerimeterTypeRegular ServicePerimeterPerimeterTypeEnum = "PERIMETER_TYPE_REGULAR"
	ServicePerimeterPerimeterTypeEnumPerimeterTypeBridge  ServicePerimeterPerimeterTypeEnum = "PERIMETER_TYPE_BRIDGE"
)

func (e ServicePerimeterPerimeterTypeEnum) ToPointer() *ServicePerimeterPerimeterTypeEnum {
	return &e
}

func (e *ServicePerimeterPerimeterTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PERIMETER_TYPE_REGULAR":
		fallthrough
	case "PERIMETER_TYPE_BRIDGE":
		*e = ServicePerimeterPerimeterTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ServicePerimeterPerimeterTypeEnum: %v", v)
	}
}

// ServicePerimeter - `ServicePerimeter` describes a set of Google Cloud resources which can freely import and export data amongst themselves, but not export outside of the `ServicePerimeter`. If a request with a source within this `ServicePerimeter` has a target outside of the `ServicePerimeter`, the request will be blocked. Otherwise the request is allowed. There are two types of Service Perimeter - Regular and Bridge. Regular Service Perimeters cannot overlap, a single Google Cloud project can only belong to a single regular Service Perimeter. Service Perimeter Bridges can contain only Google Cloud projects as members, a single Google Cloud project may belong to multiple Service Perimeter Bridges.
type ServicePerimeter struct {
	// Description of the `ServicePerimeter` and its use. Does not affect behavior.
	Description *string `json:"description,omitempty"`
	// Resource name for the `ServicePerimeter`. Format: `accessPolicies/{access_policy}/servicePerimeters/{service_perimeter}`. The `service_perimeter` component must begin with a letter, followed by alphanumeric characters or `_`. After you create a `ServicePerimeter`, you cannot change its `name`.
	Name *string `json:"name,omitempty"`
	// Perimeter type indicator. A single project is allowed to be a member of single regular perimeter, but multiple service perimeter bridges. A project cannot be a included in a perimeter bridge without being included in regular perimeter. For perimeter bridges, restricted/unrestricted service lists as well as access lists must be empty.
	PerimeterType *ServicePerimeterPerimeterTypeEnum `json:"perimeterType,omitempty"`
	// `ServicePerimeterConfig` specifies a set of Google Cloud resources that describe specific Service Perimeter configuration.
	Status *ServicePerimeterConfig `json:"status,omitempty"`
	// Human readable title. Must be unique within the Policy.
	Title *string `json:"title,omitempty"`
}
