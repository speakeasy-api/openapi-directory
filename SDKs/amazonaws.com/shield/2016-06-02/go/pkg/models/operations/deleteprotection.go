// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteProtectionXAmzTargetEnum
type DeleteProtectionXAmzTargetEnum string

const (
	DeleteProtectionXAmzTargetEnumAwsShield20160616DeleteProtection DeleteProtectionXAmzTargetEnum = "AWSShield_20160616.DeleteProtection"
)

func (e *DeleteProtectionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSShield_20160616.DeleteProtection":
		*e = DeleteProtectionXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteProtectionXAmzTargetEnum: %s", s)
	}
}

type DeleteProtectionRequest struct {
	DeleteProtectionRequest shared.DeleteProtectionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm           *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256       *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential          *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken       *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature           *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders       *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget              DeleteProtectionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteProtectionResponse struct {
	ContentType string
	// Success
	DeleteProtectionResponse map[string]interface{}
	// InternalErrorException
	InternalErrorException interface{}
	// OptimisticLockException
	OptimisticLockException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
