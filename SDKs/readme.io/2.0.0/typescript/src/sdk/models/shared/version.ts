/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Version object
 */
export class Version extends SpeakeasyBase {
  /**
   * Dubbed name of version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "codename" })
  codename?: string;

  /**
   * Semantic Version to use as the base fork
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  from: string;

  @SpeakeasyMetadata()
  @Expose({ name: "is_beta" })
  isBeta?: boolean;

  /**
   * Should this be deprecated? Only allowed in PUT operations
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_deprecated" })
  isDeprecated?: boolean;

  /**
   * Should this be publically accessible?
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_hidden" })
  isHidden?: boolean;

  /**
   * Should this be the **main** version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_stable" })
  isStable?: boolean;

  /**
   * Semantic Version
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version: string;
}
