// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type CreateShopScriptTagSecurity struct {
	OAuth2 string `security:"scheme,type=oauth2,name=Authorization"`
}

// CreateShopScriptTagRequestBodyScriptTagDisplayScopeEnum - スクリプトを出力するページ
// - `shop`: ショップページ
// - `thanks_page`: 注文完了ページ
type CreateShopScriptTagRequestBodyScriptTagDisplayScopeEnum string

const (
	CreateShopScriptTagRequestBodyScriptTagDisplayScopeEnumShop       CreateShopScriptTagRequestBodyScriptTagDisplayScopeEnum = "shop"
	CreateShopScriptTagRequestBodyScriptTagDisplayScopeEnumThanksPage CreateShopScriptTagRequestBodyScriptTagDisplayScopeEnum = "thanks_page"
)

func (e CreateShopScriptTagRequestBodyScriptTagDisplayScopeEnum) ToPointer() *CreateShopScriptTagRequestBodyScriptTagDisplayScopeEnum {
	return &e
}

func (e *CreateShopScriptTagRequestBodyScriptTagDisplayScopeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "shop":
		fallthrough
	case "thanks_page":
		*e = CreateShopScriptTagRequestBodyScriptTagDisplayScopeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateShopScriptTagRequestBodyScriptTagDisplayScopeEnum: %v", v)
	}
}

type CreateShopScriptTagRequestBodyScriptTag struct {
	// スクリプトを出力するページ
	// - `shop`: ショップページ
	// - `thanks_page`: 注文完了ページ
	//
	DisplayScope *CreateShopScriptTagRequestBodyScriptTagDisplayScopeEnum `json:"display_scope,omitempty"`
	// スクリプトのハッシュ値をBase64エンコードした値を設定します。この値はスクリプトタグのIntegrity属性値として利用されます。
	// 詳しくは [サブリソース完全性 - Web セキュリティ | MDN](https://developer.mozilla.org/ja/docs/Web/Security/Subresource_Integrity) (外部サイト) をご覧ください。
	// ※この値が正しく設定されない場合はブラウザがスクリプトの読み込みをブロックします。この場合、一般的なWebブラウザ(e.g. Google Chrome, Firefox)の開発者ツールのコンソールでエラーを確認できます。
	//
	Integrity *string `json:"integrity,omitempty"`
	// スクリプトURL
	Src *string `json:"src,omitempty"`
}

// CreateShopScriptTagRequestBody - 作成するスクリプトタグの情報
type CreateShopScriptTagRequestBody struct {
	ScriptTag *CreateShopScriptTagRequestBodyScriptTag `json:"script_tag,omitempty"`
}

// CreateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum - スクリプトを出力するページ
// - `shop`: ショップページ
// - `thanks_page`: 注文完了ページ
type CreateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum string

const (
	CreateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnumShop       CreateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum = "shop"
	CreateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnumThanksPage CreateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum = "thanks_page"
)

func (e CreateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum) ToPointer() *CreateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum {
	return &e
}

func (e *CreateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "shop":
		fallthrough
	case "thanks_page":
		*e = CreateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum: %v", v)
	}
}

type CreateShopScriptTag200ApplicationJSONScriptTag struct {
	// アカウントID
	AccountID *string `json:"account_id,omitempty"`
	// スクリプトを出力するページ
	// - `shop`: ショップページ
	// - `thanks_page`: 注文完了ページ
	//
	DisplayScope *CreateShopScriptTag200ApplicationJSONScriptTagDisplayScopeEnum `json:"display_scope,omitempty"`
	// スクリプトタグID
	ID *int64 `json:"id,omitempty"`
	// スクリプトファイルのハッシュ値（script tagのintegrity属性）
	Integrity *string `json:"integrity,omitempty"`
	// 作成日時
	MakeDate *int64 `json:"make_date,omitempty"`
	// OAuthアプリケーションID
	OauthApplicationID *int64 `json:"oauth_application_id,omitempty"`
	// スクリプトURL
	Src *string `json:"src,omitempty"`
	// 更新日時
	UpdateDate *int64 `json:"update_date,omitempty"`
}

type CreateShopScriptTag200ApplicationJSON struct {
	ScriptTag *CreateShopScriptTag200ApplicationJSONScriptTag `json:"script_tag,omitempty"`
}

type CreateShopScriptTagResponse struct {
	ContentType                                 string
	StatusCode                                  int
	RawResponse                                 *http.Response
	CreateShopScriptTag200ApplicationJSONObject *CreateShopScriptTag200ApplicationJSON
}
