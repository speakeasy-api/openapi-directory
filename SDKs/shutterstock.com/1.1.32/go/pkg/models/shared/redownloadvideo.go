// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RedownloadVideoSizeEnum - Size of the video
type RedownloadVideoSizeEnum string

const (
	RedownloadVideoSizeEnumWeb   RedownloadVideoSizeEnum = "web"
	RedownloadVideoSizeEnumSd    RedownloadVideoSizeEnum = "sd"
	RedownloadVideoSizeEnumHd    RedownloadVideoSizeEnum = "hd"
	RedownloadVideoSizeEnumFourk RedownloadVideoSizeEnum = "4k"
)

func (e RedownloadVideoSizeEnum) ToPointer() *RedownloadVideoSizeEnum {
	return &e
}

func (e *RedownloadVideoSizeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "web":
		fallthrough
	case "sd":
		fallthrough
	case "hd":
		fallthrough
	case "4k":
		*e = RedownloadVideoSizeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RedownloadVideoSizeEnum: %v", v)
	}
}

// RedownloadVideo - Data required to redownload a video
type RedownloadVideo struct {
	// Cookie object
	AuthCookie *Cookie `json:"auth_cookie,omitempty"`
	// (Deprecated)
	ShowModal *bool `json:"show_modal,omitempty"`
	// Size of the video
	Size *RedownloadVideoSizeEnum `json:"size,omitempty"`
	// (Deprecated)
	VerificationCode *string `json:"verification_code,omitempty"`
}
