/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ReservedNode - Represents the output of a &lt;code&gt;PurchaseReservedNodesOffering&lt;/code&gt; operation.
 */
public class ReservedNode {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ARN")
    public String arn;
    public ReservedNode withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Duration")
    public Long duration;
    public ReservedNode withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FixedPrice")
    public Double fixedPrice;
    public ReservedNode withFixedPrice(Double fixedPrice) {
        this.fixedPrice = fixedPrice;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NodeCount")
    public Long nodeCount;
    public ReservedNode withNodeCount(Long nodeCount) {
        this.nodeCount = nodeCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NodeType")
    public String nodeType;
    public ReservedNode withNodeType(String nodeType) {
        this.nodeType = nodeType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OfferingType")
    public String offeringType;
    public ReservedNode withOfferingType(String offeringType) {
        this.offeringType = offeringType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RecurringCharges")
    public RecurringCharge[] recurringCharges;
    public ReservedNode withRecurringCharges(RecurringCharge[] recurringCharges) {
        this.recurringCharges = recurringCharges;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReservationId")
    public String reservationId;
    public ReservedNode withReservationId(String reservationId) {
        this.reservationId = reservationId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReservedNodesOfferingId")
    public String reservedNodesOfferingId;
    public ReservedNode withReservedNodesOfferingId(String reservedNodesOfferingId) {
        this.reservedNodesOfferingId = reservedNodesOfferingId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartTime")
    public OffsetDateTime startTime;
    public ReservedNode withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("State")
    public String state;
    public ReservedNode withState(String state) {
        this.state = state;
        return this;
    }
    
}
