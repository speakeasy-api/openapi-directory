// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type AppengineAppsAuthorizedCertificatesGetSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type AppengineAppsAuthorizedCertificatesGetSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type AppengineAppsAuthorizedCertificatesGetSecurityOption3 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type AppengineAppsAuthorizedCertificatesGetSecurity struct {
	Option1 *AppengineAppsAuthorizedCertificatesGetSecurityOption1 `security:"option"`
	Option2 *AppengineAppsAuthorizedCertificatesGetSecurityOption2 `security:"option"`
	Option3 *AppengineAppsAuthorizedCertificatesGetSecurityOption3 `security:"option"`
}

// AppengineAppsAuthorizedCertificatesGetViewEnum - Controls the set of fields returned in the GET response.
type AppengineAppsAuthorizedCertificatesGetViewEnum string

const (
	AppengineAppsAuthorizedCertificatesGetViewEnumBasicCertificate AppengineAppsAuthorizedCertificatesGetViewEnum = "BASIC_CERTIFICATE"
	AppengineAppsAuthorizedCertificatesGetViewEnumFullCertificate  AppengineAppsAuthorizedCertificatesGetViewEnum = "FULL_CERTIFICATE"
)

func (e *AppengineAppsAuthorizedCertificatesGetViewEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BASIC_CERTIFICATE":
		fallthrough
	case "FULL_CERTIFICATE":
		*e = AppengineAppsAuthorizedCertificatesGetViewEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppengineAppsAuthorizedCertificatesGetViewEnum: %s", s)
	}
}

type AppengineAppsAuthorizedCertificatesGetRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Part of `name`. Name of the resource requested. Example: apps/myapp/authorizedCertificates/12345.
	AppsID string `pathParam:"style=simple,explode=false,name=appsId"`
	// Part of `name`. See documentation of `appsId`.
	AuthorizedCertificatesID string `pathParam:"style=simple,explode=false,name=authorizedCertificatesId"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
	// Controls the set of fields returned in the GET response.
	View *AppengineAppsAuthorizedCertificatesGetViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type AppengineAppsAuthorizedCertificatesGetResponse struct {
	// Successful response
	AuthorizedCertificate *shared.AuthorizedCertificate
	ContentType           string
	StatusCode            int
	RawResponse           *http.Response
}
