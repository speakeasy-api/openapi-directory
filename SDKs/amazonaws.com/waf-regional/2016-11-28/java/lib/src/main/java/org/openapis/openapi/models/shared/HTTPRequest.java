/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * HTTPRequest - &lt;note&gt; &lt;p&gt;This is &lt;b&gt;AWS WAF Classic&lt;/b&gt; documentation. For more information, see &lt;a href="https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html"&gt;AWS WAF Classic&lt;/a&gt; in the developer guide.&lt;/p&gt; &lt;p&gt; &lt;b&gt;For the latest version of AWS WAF&lt;/b&gt;, use the AWS WAFV2 API and see the &lt;a href="https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html"&gt;AWS WAF Developer Guide&lt;/a&gt;. With the latest version, AWS WAF has a single set of endpoints for regional and global use. &lt;/p&gt; &lt;/note&gt; &lt;p&gt;The response from a &lt;a&gt;GetSampledRequests&lt;/a&gt; request includes an &lt;code&gt;HTTPRequest&lt;/code&gt; complex type that appears as &lt;code&gt;Request&lt;/code&gt; in the response syntax. &lt;code&gt;HTTPRequest&lt;/code&gt; contains information about one of the web requests that were returned by &lt;code&gt;GetSampledRequests&lt;/code&gt;. &lt;/p&gt;
 */
public class HTTPRequest {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ClientIP")
    public String clientIP;
    public HTTPRequest withClientIP(String clientIP) {
        this.clientIP = clientIP;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Country")
    public String country;
    public HTTPRequest withCountry(String country) {
        this.country = country;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HTTPVersion")
    public String httpVersion;
    public HTTPRequest withHTTPVersion(String httpVersion) {
        this.httpVersion = httpVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Headers")
    public HTTPHeader[] headers;
    public HTTPRequest withHeaders(HTTPHeader[] headers) {
        this.headers = headers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Method")
    public String method;
    public HTTPRequest withMethod(String method) {
        this.method = method;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("URI")
    public String uri;
    public HTTPRequest withUri(String uri) {
        this.uri = uri;
        return this;
    }
    
}
