/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LoggingConfiguration } from "./loggingconfiguration";
import { StateMachineTypeEnum } from "./statemachinetypeenum";
import { Tag } from "./tag";
import { TracingConfiguration } from "./tracingconfiguration";
import { Expose, Type } from "class-transformer";

export class CreateStateMachineInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "definition" })
  definition: string;

  @SpeakeasyMetadata()
  @Expose({ name: "loggingConfiguration" })
  @Type(() => LoggingConfiguration)
  loggingConfiguration?: LoggingConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "tracingConfiguration" })
  @Type(() => TracingConfiguration)
  tracingConfiguration?: TracingConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: StateMachineTypeEnum;
}
