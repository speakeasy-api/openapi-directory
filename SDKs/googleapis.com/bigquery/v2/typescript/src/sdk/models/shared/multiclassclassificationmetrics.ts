/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AggregateClassificationMetrics } from "./aggregateclassificationmetrics";
import { ConfusionMatrix } from "./confusionmatrix";
import { Expose, Type } from "class-transformer";

/**
 * Evaluation metrics for multi-class classification/classifier models.
 */
export class MultiClassClassificationMetrics extends SpeakeasyBase {
  /**
   * Aggregate metrics for classification/classifier models. For multi-class models, the metrics are either macro-averaged or micro-averaged. When macro-averaged, the metrics are calculated for each label and then an unweighted average is taken of those values. When micro-averaged, the metric is calculated globally by counting the total number of correctly predicted rows.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aggregateClassificationMetrics" })
  @Type(() => AggregateClassificationMetrics)
  aggregateClassificationMetrics?: AggregateClassificationMetrics;

  /**
   * Confusion matrix at different thresholds.
   */
  @SpeakeasyMetadata({ elemType: ConfusionMatrix })
  @Expose({ name: "confusionMatrixList" })
  @Type(() => ConfusionMatrix)
  confusionMatrixList?: ConfusionMatrix[];
}
