<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CreateStoredCredentialProfileRequest
{
    /**
     * Specifies how Zuora activates the stored credential profile. Only applicable if you set the `status` field to `Active`.
     * 
     * 
     * * `Activate` (default) - Use this value if you are creating the stored credential profile after receiving the customer's consent.
     * 
     *   Zuora will create the stored credential profile then send a cardholder-initiated transaction (CIT) to the payment gateway to validate the stored credential profile. If the CIT succeeds, the status of the stored credential profile will be `Active`. If the CIT does not succeed, Zuora will not create a stored credential profile.
     *   
     *   If the payment gateway does not support the stored credential transaction framework, the status of the stored credential profile will be `Agreed`.
     * 
     * 
     * * `Persist` - Use this value if the stored credential profile represents a stored credential profile in an external system. The status of the payment method's stored credential profile will be `Active`.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateStoredCredentialProfileRequestActionEnum $action
     */
	#[\JMS\Serializer\Annotation\SerializedName('action')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateStoredCredentialProfileRequestActionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateStoredCredentialProfileRequestActionEnum $action = null;
    
    /**
     * The date on which the profile is agreed. The date format is `yyyy-mm-dd`.
     * 
     * 
     * 
     * @var ?\DateTime $agreedOn
     */
	#[\JMS\Serializer\Annotation\SerializedName('agreedOn')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $agreedOn = null;
    
    /**
     * Specifies the ID of the payment gateway that Zuora will use when activating the stored credential profile.
     * 
     * 
     * 
     * @var ?string $authGateway
     */
	#[\JMS\Serializer\Annotation\SerializedName('authGateway')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $authGateway = null;
    
    /**
     * The security code of the credit card.
     * 
     * 
     * 
     * @var ?string $cardSecurityCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('cardSecurityCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cardSecurityCode = null;
    
    /**
     * Specifies your reference for the consent agreement that you have established with the customer.
     * 
     * 
     * 
     * @var ?string $consentAgreementRef
     */
	#[\JMS\Serializer\Annotation\SerializedName('consentAgreementRef')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $consentAgreementRef = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('consentAgreementSrc')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateStoredCredentialProfileRequestConsentAgreementSrcEnum>')]
    public CreateStoredCredentialProfileRequestConsentAgreementSrcEnum $consentAgreementSrc;
    
    /**
     * The ID of a network transaction.
     * 
     * 
     * 
     * @var ?string $networkTransactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkTransactionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $networkTransactionId = null;
    
    /**
     * Specifies the status of the stored credential profile.
     * 
     * 
     * * `Active` - Use this value if you are creating the stored credential profile after receiving the customer's consent, or if the stored credential profile represents a stored credential profile in an external system.
     * 
     *   You can use the `action` field to specify how Zuora activates the stored credential profile.
     * 
     * 
     * * `Agreed` - Use this value if you are migrating the payment method to the stored credential transaction framework.
     * 
     *   In this case, Zuora will not send a cardholder-initiated transaction (CIT) to the payment gateway to validate the stored credential profile.
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CreateStoredCredentialProfileRequestStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateStoredCredentialProfileRequestStatusEnum>')]
    public CreateStoredCredentialProfileRequestStatusEnum $status;
    
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateStoredCredentialProfileRequestTypeEnum>')]
    public CreateStoredCredentialProfileRequestTypeEnum $type;
    
	public function __construct()
	{
		$this->action = null;
		$this->agreedOn = null;
		$this->authGateway = null;
		$this->cardSecurityCode = null;
		$this->consentAgreementRef = null;
		$this->consentAgreementSrc = \OpenAPI\OpenAPI\Models\Shared\CreateStoredCredentialProfileRequestConsentAgreementSrcEnum::EXTERNAL;
		$this->networkTransactionId = null;
		$this->status = \OpenAPI\OpenAPI\Models\Shared\CreateStoredCredentialProfileRequestStatusEnum::AGREED;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\CreateStoredCredentialProfileRequestTypeEnum::RECURRING;
	}
}
