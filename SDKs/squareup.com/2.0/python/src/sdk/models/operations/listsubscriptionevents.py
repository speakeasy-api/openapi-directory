"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import listsubscriptioneventsresponse as shared_listsubscriptioneventsresponse
from typing import Optional


@dataclasses.dataclass
class ListSubscriptionEventsSecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class ListSubscriptionEventsRequest:
    
    subscription_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'subscription_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the subscription to retrieve the events for."""  
    cursor: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'cursor', 'style': 'form', 'explode': True }})
    r"""A pagination cursor returned by a previous call to this endpoint.
    Provide this to retrieve the next set of results for the original query.
    
    For more information, see [Pagination](https://developer.squareup.com/docs/working-with-apis/pagination).
    """  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""The upper limit on the number of subscription events to return
    in the response.
    
    Default: `200`
    """  
    

@dataclasses.dataclass
class ListSubscriptionEventsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    list_subscription_events_response: Optional[shared_listsubscriptioneventsresponse.ListSubscriptionEventsResponse] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    