/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DestinationModel } from "./destinationmodel";
import { MetaTagModel } from "./metatagmodel";
import { SnippetModel } from "./snippetmodel";
import { Expose, Type } from "class-transformer";

/**
 * Alias model or **null**
 */
export class AliasModel extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  createdAt?: number;

  @SpeakeasyMetadata({ elemType: DestinationModel })
  @Expose({ name: "destinations" })
  @Type(() => DestinationModel)
  destinations?: DestinationModel[];

  @SpeakeasyMetadata()
  @Expose({ name: "domainName" })
  domainName?: string;

  @SpeakeasyMetadata({ elemType: MetaTagModel })
  @Expose({ name: "metatags" })
  @Type(() => MetaTagModel)
  metatags?: MetaTagModel[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata({ elemType: SnippetModel })
  @Expose({ name: "snippets" })
  @Type(() => SnippetModel)
  snippets?: SnippetModel[];

  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  updatedAt?: number;
}
