/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class PatientMessagePatientMessageAttachment extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attachment" })
  attachment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "doctor" })
  doctor?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt?: string;
}

/**
 * Created
 */
export class PatientMessage extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: PatientMessagePatientMessageAttachment })
  @Expose({ name: "attachments" })
  @Type(() => PatientMessagePatientMessageAttachment)
  attachments?: PatientMessagePatientMessageAttachment[];

  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "doctor" })
  doctor: number;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "patient" })
  patient: number;

  @SpeakeasyMetadata()
  @Expose({ name: "subject" })
  subject: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt?: string;
}
