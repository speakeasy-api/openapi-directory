// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// SubmitRequestEntityTypeEnum - The type of the entity the payout is processed for.
//
// Allowed values:
// * NaturalPerson
// * Company
// > This field is required to update the existing `entityType` that is associated with this recurring contract.
type SubmitRequestEntityTypeEnum string

const (
	SubmitRequestEntityTypeEnumNaturalPerson SubmitRequestEntityTypeEnum = "NaturalPerson"
	SubmitRequestEntityTypeEnumCompany       SubmitRequestEntityTypeEnum = "Company"
)

func (e *SubmitRequestEntityTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NaturalPerson":
		fallthrough
	case "Company":
		*e = SubmitRequestEntityTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SubmitRequestEntityTypeEnum: %s", s)
	}
}

type SubmitRequest struct {
	// This field contains additional data, which may be required for a particular request.
	AdditionalData map[string]string `json:"additionalData,omitempty"`
	Amount         Amount            `json:"amount"`
	// The date of birth.
	// Format: ISO-8601; example: YYYY-MM-DD
	//
	// For Paysafecard it must be the same as used when registering the Paysafecard account.
	//
	// > This field is mandatory for natural persons.
	// > This field is required to update the existing `dateOfBirth` that is associated with this recurring contract.
	DateOfBirth *time.Time `json:"dateOfBirth,omitempty"`
	// The type of the entity the payout is processed for.
	//
	// Allowed values:
	// * NaturalPerson
	// * Company
	// > This field is required to update the existing `entityType` that is associated with this recurring contract.
	EntityType *SubmitRequestEntityTypeEnum `json:"entityType,omitempty"`
	// An integer value that is added to the normal fraud score. The value can be either positive or negative.
	FraudOffset *int `json:"fraudOffset,omitempty"`
	// The merchant account identifier you want to process the transaction request with.
	MerchantAccount string `json:"merchantAccount"`
	// The shopper's nationality.
	//
	// A valid value is an ISO 2-character country code (e.g. 'NL').
	//
	// > This field is required to update the existing nationality that is associated with this recurring contract.
	Nationality *string   `json:"nationality,omitempty"`
	Recurring   Recurring `json:"recurring"`
	// The merchant reference for this payout. This reference will be used in all communication to the merchant about the status of the payout. Although it is a good idea to make sure it is unique, this is not a requirement.
	Reference string `json:"reference"`
	// This is the `recurringDetailReference` you want to use for this payout.
	//
	// You can use the value LATEST to select the most recently used recurring detail.
	SelectedRecurringDetailReference string `json:"selectedRecurringDetailReference"`
	// The shopper's email address.
	ShopperEmail string `json:"shopperEmail"`
	ShopperName  *Name  `json:"shopperName,omitempty"`
	// The shopper's reference for the payout transaction.
	ShopperReference string `json:"shopperReference"`
	// The description of this payout. This description is shown on the bank statement of the shopper (if this is supported by the chosen payment method).
	ShopperStatement *string `json:"shopperStatement,omitempty"`
	// The shopper's social security number.
	SocialSecurityNumber *string `json:"socialSecurityNumber,omitempty"`
}
