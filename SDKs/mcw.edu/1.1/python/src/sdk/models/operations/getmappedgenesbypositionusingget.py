"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class GETMappedGenesByPositionUsingGETRequest:
    
    chr: str = dataclasses.field(metadata={'path_param': { 'field_name': 'chr', 'style': 'simple', 'explode': False }})
    r"""Chromosome"""  
    map_key: int = dataclasses.field(metadata={'path_param': { 'field_name': 'mapKey', 'style': 'simple', 'explode': False }})
    r"""A list of RGD assembly map keys can be found in the lookup service"""  
    start: int = dataclasses.field(metadata={'path_param': { 'field_name': 'start', 'style': 'simple', 'explode': False }})
    r"""Start Position"""  
    stop: int = dataclasses.field(metadata={'path_param': { 'field_name': 'stop', 'style': 'simple', 'explode': False }})
    r"""Stop Position"""  
    

@dataclasses.dataclass
class GETMappedGenesByPositionUsingGETResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    