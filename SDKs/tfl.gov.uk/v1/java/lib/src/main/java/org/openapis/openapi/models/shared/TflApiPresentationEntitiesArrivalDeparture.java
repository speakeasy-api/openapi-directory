/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TflApiPresentationEntitiesArrivalDeparture - DTO to capture the prediction details
 */
public class TflApiPresentationEntitiesArrivalDeparture {
    /**
     * Reason for cancellation or delay
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cause")
    public String cause;
    public TflApiPresentationEntitiesArrivalDeparture withCause(String cause) {
        this.cause = cause;
        return this;
    }
    
    /**
     * Status of departure
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("departureStatus")
    public TflApiPresentationEntitiesArrivalDepartureDepartureStatusEnum departureStatus;
    public TflApiPresentationEntitiesArrivalDeparture withDepartureStatus(TflApiPresentationEntitiesArrivalDepartureDepartureStatusEnum departureStatus) {
        this.departureStatus = departureStatus;
        return this;
    }
    
    /**
     * Name of the destination
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationName")
    public String destinationName;
    public TflApiPresentationEntitiesArrivalDeparture withDestinationName(String destinationName) {
        this.destinationName = destinationName;
        return this;
    }
    
    /**
     * Naptan Identifier for the prediction's destination
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("destinationNaptanId")
    public String destinationNaptanId;
    public TflApiPresentationEntitiesArrivalDeparture withDestinationNaptanId(String destinationNaptanId) {
        this.destinationNaptanId = destinationNaptanId;
        return this;
    }
    
    /**
     * Estimated time of arrival
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("estimatedTimeOfArrival")
    public OffsetDateTime estimatedTimeOfArrival;
    public TflApiPresentationEntitiesArrivalDeparture withEstimatedTimeOfArrival(OffsetDateTime estimatedTimeOfArrival) {
        this.estimatedTimeOfArrival = estimatedTimeOfArrival;
        return this;
    }
    
    /**
     * Estimated time of arrival
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("estimatedTimeOfDeparture")
    public OffsetDateTime estimatedTimeOfDeparture;
    public TflApiPresentationEntitiesArrivalDeparture withEstimatedTimeOfDeparture(OffsetDateTime estimatedTimeOfDeparture) {
        this.estimatedTimeOfDeparture = estimatedTimeOfDeparture;
        return this;
    }
    
    /**
     * Estimated time of arrival
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minutesAndSecondsToArrival")
    public String minutesAndSecondsToArrival;
    public TflApiPresentationEntitiesArrivalDeparture withMinutesAndSecondsToArrival(String minutesAndSecondsToArrival) {
        this.minutesAndSecondsToArrival = minutesAndSecondsToArrival;
        return this;
    }
    
    /**
     * Estimated time of arrival
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minutesAndSecondsToDeparture")
    public String minutesAndSecondsToDeparture;
    public TflApiPresentationEntitiesArrivalDeparture withMinutesAndSecondsToDeparture(String minutesAndSecondsToDeparture) {
        this.minutesAndSecondsToDeparture = minutesAndSecondsToDeparture;
        return this;
    }
    
    /**
     * Identifier for the prediction
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("naptanId")
    public String naptanId;
    public TflApiPresentationEntitiesArrivalDeparture withNaptanId(String naptanId) {
        this.naptanId = naptanId;
        return this;
    }
    
    /**
     * Platform name (for bus, this is the stop letter)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platformName")
    public String platformName;
    public TflApiPresentationEntitiesArrivalDeparture withPlatformName(String platformName) {
        this.platformName = platformName;
        return this;
    }
    
    /**
     * Estimated time of arrival
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("scheduledTimeOfArrival")
    public OffsetDateTime scheduledTimeOfArrival;
    public TflApiPresentationEntitiesArrivalDeparture withScheduledTimeOfArrival(OffsetDateTime scheduledTimeOfArrival) {
        this.scheduledTimeOfArrival = scheduledTimeOfArrival;
        return this;
    }
    
    /**
     * Estimated time of arrival
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("scheduledTimeOfDeparture")
    public OffsetDateTime scheduledTimeOfDeparture;
    public TflApiPresentationEntitiesArrivalDeparture withScheduledTimeOfDeparture(OffsetDateTime scheduledTimeOfDeparture) {
        this.scheduledTimeOfDeparture = scheduledTimeOfDeparture;
        return this;
    }
    
    /**
     * Station name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stationName")
    public String stationName;
    public TflApiPresentationEntitiesArrivalDeparture withStationName(String stationName) {
        this.stationName = stationName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timing")
    public TflApiPresentationEntitiesPredictionTiming timing;
    public TflApiPresentationEntitiesArrivalDeparture withTiming(TflApiPresentationEntitiesPredictionTiming timing) {
        this.timing = timing;
        return this;
    }
    
}
