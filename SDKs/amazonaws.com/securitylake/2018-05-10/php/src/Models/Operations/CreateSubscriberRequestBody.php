<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateSubscriberRequestBody
{
    /**
     * The Amazon S3 or Lake Formation access type.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AccessTypeEnum> $accessTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('accessTypes')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\AccessTypeEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $accessTypes = null;
    
    /**
     * The Amazon Web Services account ID used to access your data.
     * 
     * @var string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $accountId;
    
    /**
     * The external ID of the subscriber. This lets the user that is assuming the role assert the circumstances in which they are operating. It also provides a way for the account owner to permit the role to be assumed only under specific circumstances.
     * 
     * @var string $externalId
     */
	#[\JMS\Serializer\Annotation\SerializedName('externalId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $externalId;
    
    /**
     * The supported Amazon Web Services from which logs and events are collected. Security Lake supports log and event collection for natively supported Amazon Web Services.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\SourceType> $sourceTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceTypes')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SourceType>')]
    public array $sourceTypes;
    
    /**
     * The description for your subscriber account in Security Lake. 
     * 
     * @var ?string $subscriberDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('subscriberDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subscriberDescription = null;
    
    /**
     * The name of your Security Lake subscriber account.
     * 
     * @var string $subscriberName
     */
	#[\JMS\Serializer\Annotation\SerializedName('subscriberName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $subscriberName;
    
	public function __construct()
	{
		$this->accessTypes = null;
		$this->accountId = "";
		$this->externalId = "";
		$this->sourceTypes = [];
		$this->subscriberDescription = null;
		$this->subscriberName = "";
	}
}
