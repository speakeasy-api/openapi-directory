"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ec2config as shared_ec2config
from ..shared import efsintransitencryption_enum as shared_efsintransitencryption_enum
from ..shared import taglistentry as shared_taglistentry
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateLocationEfsRequest:
    r"""CreateLocationEfsRequest"""
    
    ec2_config: shared_ec2config.Ec2Config = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Ec2Config') }})  
    efs_filesystem_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EfsFilesystemArn') }})  
    access_point_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccessPointArn'), 'exclude': lambda f: f is None }})  
    file_system_access_role_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FileSystemAccessRoleArn'), 'exclude': lambda f: f is None }})  
    in_transit_encryption: Optional[shared_efsintransitencryption_enum.EfsInTransitEncryptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InTransitEncryption'), 'exclude': lambda f: f is None }})  
    subdirectory: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Subdirectory'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_taglistentry.TagListEntry]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    