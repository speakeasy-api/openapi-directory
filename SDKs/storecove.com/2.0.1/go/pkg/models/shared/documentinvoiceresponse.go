// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DocumentInvoiceResponseResponseCodeEnum - The response code. For details see https://docs.peppol.eu/poacc/upgrade-3/codelist/UNCL4343-T111/
type DocumentInvoiceResponseResponseCodeEnum string

const (
	DocumentInvoiceResponseResponseCodeEnumAb DocumentInvoiceResponseResponseCodeEnum = "AB"
	DocumentInvoiceResponseResponseCodeEnumIP DocumentInvoiceResponseResponseCodeEnum = "IP"
	DocumentInvoiceResponseResponseCodeEnumUq DocumentInvoiceResponseResponseCodeEnum = "UQ"
	DocumentInvoiceResponseResponseCodeEnumRe DocumentInvoiceResponseResponseCodeEnum = "RE"
	DocumentInvoiceResponseResponseCodeEnumAp DocumentInvoiceResponseResponseCodeEnum = "AP"
	DocumentInvoiceResponseResponseCodeEnumPd DocumentInvoiceResponseResponseCodeEnum = "PD"
)

func (e *DocumentInvoiceResponseResponseCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AB":
		fallthrough
	case "IP":
		fallthrough
	case "UQ":
		fallthrough
	case "RE":
		fallthrough
	case "AP":
		fallthrough
	case "PD":
		*e = DocumentInvoiceResponseResponseCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DocumentInvoiceResponseResponseCodeEnum: %s", s)
	}
}

// DocumentInvoiceResponse - The invoice response to send.
type DocumentInvoiceResponse struct {
	// A list of clarifications why a received invoice was rejected (RE) or under query (UQ) and what action to take.
	Clarifications []InvoiceResponseClarification `json:"clarifications,omitempty"`
	// The date when the status became effective. Format: yyyy-mm-dd.
	EffectiveDate *string `json:"effectiveDate,omitempty"`
	// A note to add to the invoice reponse
	Note *string `json:"note,omitempty"`
	// The response code. For details see https://docs.peppol.eu/poacc/upgrade-3/codelist/UNCL4343-T111/
	ResponseCode DocumentInvoiceResponseResponseCodeEnum `json:"responseCode"`
}
