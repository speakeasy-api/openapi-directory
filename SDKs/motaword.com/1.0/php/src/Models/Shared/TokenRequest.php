<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class TokenRequest
{
    /**
     * OAuth2 grant type. Supports 'client_credentials', 'password', 'refresh_token' or 'user_id'.
     * 
     * @var string $grantType
     */
	#[\JMS\Serializer\Annotation\SerializedName('grant_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[SpeakeasyMetadata('multipartForm:name=grant_type')]
    public string $grantType;
    
    /**
     * MW Account password (to be used in password grant type)
     * 
     * @var ?string $password
     */
	#[\JMS\Serializer\Annotation\SerializedName('password')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('multipartForm:name=password')]
    public ?string $password = null;
    
    /**
     * Refresh token value for refresh token flow.
     * 
     * @var ?string $refreshToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('refresh_token')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('multipartForm:name=refresh_token')]
    public ?string $refreshToken = null;
    
    /**
     * Authorization scope. Use 'privileged' for private endpoints.
     * 
     * @var string $scope
     */
	#[\JMS\Serializer\Annotation\SerializedName('scope')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[SpeakeasyMetadata('multipartForm:name=scope')]
    public string $scope;
    
    /**
     * Value for user_id grant type flow.
     * 
     * @var ?int $userId
     */
	#[\JMS\Serializer\Annotation\SerializedName('user_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('multipartForm:name=user_id')]
    public ?int $userId = null;
    
    /**
     * MW Account email (to be used in password grant type)
     * 
     * @var ?string $username
     */
	#[\JMS\Serializer\Annotation\SerializedName('username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    #[SpeakeasyMetadata('multipartForm:name=username')]
    public ?string $username = null;
    
	public function __construct()
	{
		$this->grantType = "";
		$this->password = null;
		$this->refreshToken = null;
		$this->scope = "";
		$this->userId = null;
		$this->username = null;
	}
}
