// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// FetchEmailHistoriesSortEnum - valid sorts:
//   - send_time - ascending by send_time
//   - -send_time - descending by send_time
type FetchEmailHistoriesSortEnum string

const (
	FetchEmailHistoriesSortEnumSendTime      FetchEmailHistoriesSortEnum = "send_time"
	FetchEmailHistoriesSortEnumMinusSendTime FetchEmailHistoriesSortEnum = "-send_time"
)

func (e *FetchEmailHistoriesSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "send_time":
		fallthrough
	case "-send_time":
		*e = FetchEmailHistoriesSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for FetchEmailHistoriesSortEnum: %s", s)
	}
}

type FetchEmailHistoriesQueryParams struct {
	// Type of email
	FilterEmailType *string `queryParam:"style=form,explode=true,name=filter[emailType]"`
	// Fitbit Plus user id of email recipient. Required if filter[sender] is not defined.
	FilterReceiver *string `queryParam:"style=form,explode=true,name=filter[receiver]"`
	// Fitbit Plus user id of email sender. Required if filter[receiver] is not defined.
	FilterSender *string `queryParam:"style=form,explode=true,name=filter[sender]"`
	// valid sorts:
	//   * send_time - ascending by send_time
	//   * -send_time - descending by send_time
	//
	Sort *FetchEmailHistoriesSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type FetchEmailHistoriesRequest struct {
	QueryParams FetchEmailHistoriesQueryParams
}

type FetchEmailHistoriesResponse struct {
	ContentType string
	// OK
	FetchEmailHistoriesResponse *shared.FetchEmailHistoriesResponse
	// Unauthorized
	FetchErrorResponse *shared.FetchErrorResponse
	StatusCode         int
	RawResponse        *http.Response
}
