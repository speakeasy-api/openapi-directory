<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetSearchVersionNumberRoutedSearchQueryPositionHeadingExtRequest
{
    /**
     * Expected response format.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ExtEnum $ext
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=ext')]
    public \OpenAPI\OpenAPI\Models\Shared\ExtEnum $ext;
    
    /**
     * Indexes for which extended postal codes should be included in the results. Available indexes are:
     * 
     *   - <b>Addr</b> = Address ranges
     *   - <b>Geo</b> = Geographies
     *   - <b>PAD</b> = Point Addresses
     *   - <b>POI</b> = Points of Interest
     *   - <b>Str</b> = Streets
     *   - <b>XStr</b> = Cross Streets (intersections)
     * 
     * @var ?string $extendedPostalCodesFor
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=extendedPostalCodesFor')]
    public ?string $extendedPostalCodesFor = null;
    
    /**
     * The directional heading in degrees, usually similar to the course along a road segment. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.)
     * 
     * @var float $heading
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=heading')]
    public float $heading;
    
    /**
     * A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:
     * 
     *   - <b>Addr</b> = Address range interpolation (when there is no PAD)
     *   - <b>Geo</b> = Geographies
     *   - <b>PAD</b> = Point Addresses
     *   - <b>POI</b> = Points of interest
     *   - <b>Str</b> = Streets
     *   - <b>Xstr</b> = Cross Streets (intersections)
     * 
     * @var ?string $idxSet
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=idxSet')]
    public ?string $idxSet = null;
    
    /**
     * Language in which search results should be returned. Should be one of <a href="/search-api/search-api-documentation/supported-languages">supported IETF language tags</a>, case insensitive.
     * 
     * @var ?string $language
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=language')]
    public ?string $language = null;
    
    /**
     * Maximum number of search results that will be returned.
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * Multiplies the limit by N to gather more candidate POIs, which will then be sorted by drive distance, returning only the top candidates according to the limit.
     * 
     * @var ?int $multiplier
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=multiplier')]
    public ?int $multiplier = null;
    
    /**
     * This is specified as a comma separated string composed of lat., lon.
     * 
     * @var string $position
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=position')]
    public string $position;
    
    /**
     * Query string. Must be properly URL encoded.
     * 
     * @var string $query
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=query')]
    public string $query;
    
    /**
     * Only return results that arrive from routing engine within this time limit.
     * 
     * @var ?int $routingTimeout
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=routingTimeout')]
    public ?int $routingTimeout = null;
    
    /**
     * If the "typeahead" flag is set, the query will be interpreted as a partial input and the search will enter <b>predictive</b> mode.
     * 
     * @var ?bool $typeahead
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=typeahead')]
    public ?bool $typeahead = null;
    
    /**
     * Service version number. The current value is 2.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VersionNumberEnum $versionNumber
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=versionNumber')]
    public \OpenAPI\OpenAPI\Models\Shared\VersionNumberEnum $versionNumber;
    
	public function __construct()
	{
		$this->ext = \OpenAPI\OpenAPI\Models\Shared\ExtEnum::JSON;
		$this->extendedPostalCodesFor = null;
		$this->heading = 0;
		$this->idxSet = null;
		$this->language = null;
		$this->limit = null;
		$this->multiplier = null;
		$this->position = "";
		$this->query = "";
		$this->routingTimeout = null;
		$this->typeahead = null;
		$this->versionNumber = \OpenAPI\OpenAPI\Models\Shared\VersionNumberEnum::TWO;
	}
}
