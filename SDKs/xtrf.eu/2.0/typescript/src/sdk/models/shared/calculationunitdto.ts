/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum CalculationUnitDTOTypeEnum {
  Time = "TIME",
  Volume = "VOLUME",
  Percent = "PERCENT",
}

export class CalculationUnitDTO extends SpeakeasyBase {
  /**
   * should this value be available on the XTRF selection lists
   */
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "canBeUsedInCatAnalysis" })
  canBeUsedInCatAnalysis?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "catQuantityConversionExpression" })
  catQuantityConversionExpression?: string;

  /**
   * should this value be set by default in XTRF selection lists
   */
  @SpeakeasyMetadata()
  @Expose({ name: "default" })
  default?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "exchangeRatio" })
  exchangeRatio?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "fileStatsConversionExpression" })
  fileStatsConversionExpression?: string;

  /**
   * internal identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "jobTypeIds" })
  jobTypeIds?: number[];

  /**
   * localised name (formatted in the current user's locale)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * should this value be available on the top of XTRF selection lists, in the Preferred section
   */
  @SpeakeasyMetadata()
  @Expose({ name: "preferred" })
  preferred?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "symbol" })
  symbol?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timeToQuantityConversionExpression" })
  timeToQuantityConversionExpression?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: CalculationUnitDTOTypeEnum;
}
