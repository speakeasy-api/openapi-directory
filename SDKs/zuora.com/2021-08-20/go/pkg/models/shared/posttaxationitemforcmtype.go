// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// POSTTaxationItemForCMTypeFinanceInformation - Container for the finance information related to the taxation item.
type POSTTaxationItemForCMTypeFinanceInformation struct {
	// The accounting code that maps to an on account in your accounting system.
	//
	OnAccountAccountingCode *string `json:"onAccountAccountingCode,omitempty"`
	// The accounting code for the sales taxes payable.
	//
	SalesTaxPayableAccountingCode *string `json:"salesTaxPayableAccountingCode,omitempty"`
}

// POSTTaxationItemForCMTypeTaxRateTypeEnum - The type of the tax rate applied to the credit memo.
type POSTTaxationItemForCMTypeTaxRateTypeEnum string

const (
	POSTTaxationItemForCMTypeTaxRateTypeEnumPercentage POSTTaxationItemForCMTypeTaxRateTypeEnum = "Percentage"
	POSTTaxationItemForCMTypeTaxRateTypeEnumFlatFee    POSTTaxationItemForCMTypeTaxRateTypeEnum = "FlatFee"
)

func (e *POSTTaxationItemForCMTypeTaxRateTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Percentage":
		fallthrough
	case "FlatFee":
		*e = POSTTaxationItemForCMTypeTaxRateTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTTaxationItemForCMTypeTaxRateTypeEnum: %s", s)
	}
}

// POSTTaxationItemForCMType - Container for custom fields of a Taxation Item object.
type POSTTaxationItemForCMType struct {
	// The amount of taxes or VAT for which the customer has an exemption.
	//
	ExemptAmount *float64 `json:"exemptAmount,omitempty"`
	// Container for the finance information related to the taxation item.
	//
	FinanceInformation *POSTTaxationItemForCMTypeFinanceInformation `json:"financeInformation,omitempty"`
	// The jurisdiction that applies the tax or VAT. This value is typically a state, province, county, or city.
	//
	Jurisdiction string `json:"jurisdiction"`
	// The identifier for the location based on the value of the `taxCode` field.
	//
	LocationCode *string `json:"locationCode,omitempty"`
	// The ID of the credit memo that the taxation item is created for.
	//
	MemoItemID *string `json:"memoItemId,omitempty"`
	// The name of the taxation item.
	//
	Name string `json:"name"`
	// The ID of the taxation item of the invoice, which the credit memo is created from.
	//
	// If you want to use this REST API to create taxation items for a credit memo created from an invoice, the taxation items of the invoice must be created or imported through the SOAP API call.
	//
	// **Note:**
	//   - This field is only used if the credit memo is created from an invoice.
	//   - If you do not contain this field in the request body, Zuora will automatically set a value for the `sourceTaxItemId` field based on the tax location code, tax jurisdiction, and tax rate.
	//
	SourceTaxItemID *string `json:"sourceTaxItemId,omitempty"`
	// The amount of the tax applied to the credit memo.
	//
	TaxAmount float64 `json:"taxAmount"`
	// The tax code identifies which tax rules and tax rates to apply to a specific credit memo.
	//
	TaxCode *string `json:"taxCode,omitempty"`
	// The description of the tax code.
	//
	TaxCodeDescription *string `json:"taxCodeDescription,omitempty"`
	// The date when the tax is applied to the credit memo.
	//
	TaxDate *types.Date `json:"taxDate,omitempty"`
	// The tax rate applied to the credit memo.
	//
	TaxRate float64 `json:"taxRate"`
	// The description of the tax rate.
	//
	TaxRateDescription *string `json:"taxRateDescription,omitempty"`
	// The type of the tax rate applied to the credit memo.
	//
	TaxRateType POSTTaxationItemForCMTypeTaxRateTypeEnum `json:"taxRateType"`
}
