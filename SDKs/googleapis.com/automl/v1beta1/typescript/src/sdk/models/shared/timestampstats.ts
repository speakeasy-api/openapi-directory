/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { GranularStats } from "./granularstats";
import { Expose, Transform } from "class-transformer";

/**
 * The data statistics of a series of TIMESTAMP values.
 */
export class TimestampStats extends SpeakeasyBase {
  /**
   * The string key is the pre-defined granularity. Currently supported: hour_of_day, day_of_week, month_of_year. Granularities finer that the granularity of timestamp data are not populated (e.g. if timestamps are at day granularity, then hour_of_day is not populated).
   */
  @SpeakeasyMetadata({ elemType: GranularStats })
  @Expose({ name: "granularStats" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, GranularStats> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], GranularStats);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  granularStats?: Record<string, GranularStats>;
}
