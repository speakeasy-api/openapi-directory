"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnalyticsGetAudienceResponse = exports.AnalyticsGetAudience200ApplicationJSON = exports.AnalyticsGetAudience200ApplicationJSONStateEnum = exports.AnalyticsGetAudience200ApplicationJSONCustomPropertiesEnum = exports.AnalyticsGetAudienceDefaultApplicationJSON = exports.AnalyticsGetAudienceDefaultApplicationJSONError = exports.AnalyticsGetAudienceDefaultApplicationJSONErrorCodeEnum = exports.AnalyticsGetAudienceRequest = exports.AnalyticsGetAudienceSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var AnalyticsGetAudienceSecurity = /** @class */ (function (_super) {
    __extends(AnalyticsGetAudienceSecurity, _super);
    function AnalyticsGetAudienceSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
        }),
        __metadata("design:type", String)
    ], AnalyticsGetAudienceSecurity.prototype, "apiToken", void 0);
    return AnalyticsGetAudienceSecurity;
}(utils_1.SpeakeasyBase));
exports.AnalyticsGetAudienceSecurity = AnalyticsGetAudienceSecurity;
var AnalyticsGetAudienceRequest = /** @class */ (function (_super) {
    __extends(AnalyticsGetAudienceRequest, _super);
    function AnalyticsGetAudienceRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=app_name",
        }),
        __metadata("design:type", String)
    ], AnalyticsGetAudienceRequest.prototype, "appName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=audience_name",
        }),
        __metadata("design:type", String)
    ], AnalyticsGetAudienceRequest.prototype, "audienceName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=owner_name",
        }),
        __metadata("design:type", String)
    ], AnalyticsGetAudienceRequest.prototype, "ownerName", void 0);
    return AnalyticsGetAudienceRequest;
}(utils_1.SpeakeasyBase));
exports.AnalyticsGetAudienceRequest = AnalyticsGetAudienceRequest;
var AnalyticsGetAudienceDefaultApplicationJSONErrorCodeEnum;
(function (AnalyticsGetAudienceDefaultApplicationJSONErrorCodeEnum) {
    AnalyticsGetAudienceDefaultApplicationJSONErrorCodeEnum["BadRequest"] = "BadRequest";
    AnalyticsGetAudienceDefaultApplicationJSONErrorCodeEnum["Conflict"] = "Conflict";
    AnalyticsGetAudienceDefaultApplicationJSONErrorCodeEnum["NotAcceptable"] = "NotAcceptable";
    AnalyticsGetAudienceDefaultApplicationJSONErrorCodeEnum["NotFound"] = "NotFound";
    AnalyticsGetAudienceDefaultApplicationJSONErrorCodeEnum["InternalServerError"] = "InternalServerError";
    AnalyticsGetAudienceDefaultApplicationJSONErrorCodeEnum["Unauthorized"] = "Unauthorized";
    AnalyticsGetAudienceDefaultApplicationJSONErrorCodeEnum["TooManyRequests"] = "TooManyRequests";
})(AnalyticsGetAudienceDefaultApplicationJSONErrorCodeEnum = exports.AnalyticsGetAudienceDefaultApplicationJSONErrorCodeEnum || (exports.AnalyticsGetAudienceDefaultApplicationJSONErrorCodeEnum = {}));
var AnalyticsGetAudienceDefaultApplicationJSONError = /** @class */ (function (_super) {
    __extends(AnalyticsGetAudienceDefaultApplicationJSONError, _super);
    function AnalyticsGetAudienceDefaultApplicationJSONError() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", String)
    ], AnalyticsGetAudienceDefaultApplicationJSONError.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], AnalyticsGetAudienceDefaultApplicationJSONError.prototype, "message", void 0);
    return AnalyticsGetAudienceDefaultApplicationJSONError;
}(utils_1.SpeakeasyBase));
exports.AnalyticsGetAudienceDefaultApplicationJSONError = AnalyticsGetAudienceDefaultApplicationJSONError;
/**
 * Error code with reason
 */
var AnalyticsGetAudienceDefaultApplicationJSON = /** @class */ (function (_super) {
    __extends(AnalyticsGetAudienceDefaultApplicationJSON, _super);
    function AnalyticsGetAudienceDefaultApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "error" }),
        (0, class_transformer_1.Type)(function () { return AnalyticsGetAudienceDefaultApplicationJSONError; }),
        __metadata("design:type", AnalyticsGetAudienceDefaultApplicationJSONError)
    ], AnalyticsGetAudienceDefaultApplicationJSON.prototype, "error", void 0);
    return AnalyticsGetAudienceDefaultApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.AnalyticsGetAudienceDefaultApplicationJSON = AnalyticsGetAudienceDefaultApplicationJSON;
var AnalyticsGetAudience200ApplicationJSONCustomPropertiesEnum;
(function (AnalyticsGetAudience200ApplicationJSONCustomPropertiesEnum) {
    AnalyticsGetAudience200ApplicationJSONCustomPropertiesEnum["String"] = "string";
    AnalyticsGetAudience200ApplicationJSONCustomPropertiesEnum["Number"] = "number";
    AnalyticsGetAudience200ApplicationJSONCustomPropertiesEnum["Boolean"] = "boolean";
    AnalyticsGetAudience200ApplicationJSONCustomPropertiesEnum["DateTime"] = "date_time";
})(AnalyticsGetAudience200ApplicationJSONCustomPropertiesEnum = exports.AnalyticsGetAudience200ApplicationJSONCustomPropertiesEnum || (exports.AnalyticsGetAudience200ApplicationJSONCustomPropertiesEnum = {}));
/**
 * Audience state.
 */
var AnalyticsGetAudience200ApplicationJSONStateEnum;
(function (AnalyticsGetAudience200ApplicationJSONStateEnum) {
    AnalyticsGetAudience200ApplicationJSONStateEnum["Calculating"] = "Calculating";
    AnalyticsGetAudience200ApplicationJSONStateEnum["Ready"] = "Ready";
    AnalyticsGetAudience200ApplicationJSONStateEnum["Disabled"] = "Disabled";
})(AnalyticsGetAudience200ApplicationJSONStateEnum = exports.AnalyticsGetAudience200ApplicationJSONStateEnum || (exports.AnalyticsGetAudience200ApplicationJSONStateEnum = {}));
/**
 * Audience definition.
 */
var AnalyticsGetAudience200ApplicationJSON = /** @class */ (function (_super) {
    __extends(AnalyticsGetAudience200ApplicationJSON, _super);
    function AnalyticsGetAudience200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "custom_properties" }),
        __metadata("design:type", Object)
    ], AnalyticsGetAudience200ApplicationJSON.prototype, "customProperties", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "definition" }),
        __metadata("design:type", String)
    ], AnalyticsGetAudience200ApplicationJSON.prototype, "definition", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], AnalyticsGetAudience200ApplicationJSON.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], AnalyticsGetAudience200ApplicationJSON.prototype, "enabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "estimated_count" }),
        __metadata("design:type", Number)
    ], AnalyticsGetAudience200ApplicationJSON.prototype, "estimatedCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "estimated_total_count" }),
        __metadata("design:type", Number)
    ], AnalyticsGetAudience200ApplicationJSON.prototype, "estimatedTotalCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], AnalyticsGetAudience200ApplicationJSON.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "state" }),
        __metadata("design:type", String)
    ], AnalyticsGetAudience200ApplicationJSON.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "timestamp" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], AnalyticsGetAudience200ApplicationJSON.prototype, "timestamp", void 0);
    return AnalyticsGetAudience200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.AnalyticsGetAudience200ApplicationJSON = AnalyticsGetAudience200ApplicationJSON;
var AnalyticsGetAudienceResponse = /** @class */ (function (_super) {
    __extends(AnalyticsGetAudienceResponse, _super);
    function AnalyticsGetAudienceResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AnalyticsGetAudience200ApplicationJSON)
    ], AnalyticsGetAudienceResponse.prototype, "analyticsGetAudience200ApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", AnalyticsGetAudienceDefaultApplicationJSON)
    ], AnalyticsGetAudienceResponse.prototype, "analyticsGetAudienceDefaultApplicationJSONObject", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], AnalyticsGetAudienceResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], AnalyticsGetAudienceResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], AnalyticsGetAudienceResponse.prototype, "rawResponse", void 0);
    return AnalyticsGetAudienceResponse;
}(utils_1.SpeakeasyBase));
exports.AnalyticsGetAudienceResponse = AnalyticsGetAudienceResponse;
