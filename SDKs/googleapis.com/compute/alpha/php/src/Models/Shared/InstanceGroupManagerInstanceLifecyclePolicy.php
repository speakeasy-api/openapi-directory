<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class InstanceGroupManagerInstanceLifecyclePolicy
{
    /**
     * Defines behaviour for all instance or failures
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InstanceGroupManagerInstanceLifecyclePolicyDefaultActionOnFailureEnum $defaultActionOnFailure
     */
	#[\JMS\Serializer\Annotation\SerializedName('defaultActionOnFailure')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InstanceGroupManagerInstanceLifecyclePolicyDefaultActionOnFailureEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InstanceGroupManagerInstanceLifecyclePolicyDefaultActionOnFailureEnum $defaultActionOnFailure = null;
    
    /**
     * A bit indicating whether to forcefully apply the group's latest configuration when repairing a VM. Valid options are: - NO (default): If configuration updates are available, they are not forcefully applied during repair. Instead, configuration updates are applied according to the group's update policy. - YES: If configuration updates are available, they are applied during repair. 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InstanceGroupManagerInstanceLifecyclePolicyForceUpdateOnRepairEnum $forceUpdateOnRepair
     */
	#[\JMS\Serializer\Annotation\SerializedName('forceUpdateOnRepair')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\InstanceGroupManagerInstanceLifecyclePolicyForceUpdateOnRepairEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InstanceGroupManagerInstanceLifecyclePolicyForceUpdateOnRepairEnum $forceUpdateOnRepair = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('metadataBasedReadinessSignal')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InstanceGroupManagerInstanceLifecyclePolicyMetadataBasedReadinessSignal')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InstanceGroupManagerInstanceLifecyclePolicyMetadataBasedReadinessSignal $metadataBasedReadinessSignal = null;
    
	public function __construct()
	{
		$this->defaultActionOnFailure = null;
		$this->forceUpdateOnRepair = null;
		$this->metadataBasedReadinessSignal = null;
	}
}
