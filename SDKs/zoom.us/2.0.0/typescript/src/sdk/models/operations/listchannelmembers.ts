/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListChannelMembersSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

export class ListChannelMembersRequest extends SpeakeasyBase {
  /**
   * Channel Id.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=channelId",
  })
  channelId: string;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The number of records returned with a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * Unique identifier of the user who is the owner of this channel.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userId",
  })
  userId: string;
}

/**
 * The role of the member. The value can be one of these: `owner`, `admin`, `member`.
 */
export enum ListChannelMembers200ApplicationXMLMembersRoleEnum {
  Admin = "admin",
  Owner = "owner",
  Member = "member",
}

export class ListChannelMembers200ApplicationXMLMembers extends SpeakeasyBase {
  /**
   * Email address of the member.
   */
  @SpeakeasyMetadata()
  email?: string;

  /**
   * Member's first name.
   */
  @SpeakeasyMetadata()
  firstName?: string;

  /**
   * Member ID: Unique Identifier of the member.
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * Member's last name.
   */
  @SpeakeasyMetadata()
  lastName?: string;

  /**
   * The role of the member. The value can be one of these: `owner`, `admin`, `member`.
   */
  @SpeakeasyMetadata()
  role?: ListChannelMembers200ApplicationXMLMembersRoleEnum;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * List of channel members returned.
 *
 *
 */
export class ListChannelMembers200ApplicationXML extends SpeakeasyBase {
  /**
   * Members in a channel.
   */
  @SpeakeasyMetadata({ elemType: ListChannelMembers200ApplicationXMLMembers })
  members?: ListChannelMembers200ApplicationXMLMembers[];

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The number of records returned with a single API call.
   */
  @SpeakeasyMetadata()
  pageSize?: number;

  /**
   * The total number of records returned.
   */
  @SpeakeasyMetadata()
  totalRecords?: number;
}

/**
 * The role of the member. The value can be one of these: `owner`, `admin`, `member`.
 */
export enum ListChannelMembers200ApplicationJSONMembersRoleEnum {
  Admin = "admin",
  Owner = "owner",
  Member = "member",
}

export class ListChannelMembers200ApplicationJSONMembers extends SpeakeasyBase {
  /**
   * Email address of the member.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Member's first name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_name" })
  firstName?: string;

  /**
   * Member ID: Unique Identifier of the member.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Member's last name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_name" })
  lastName?: string;

  /**
   * The role of the member. The value can be one of these: `owner`, `admin`, `member`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: ListChannelMembers200ApplicationJSONMembersRoleEnum;
}

/**
 * **HTTP Status Code:** `200`<br>
 *
 * @remarks
 * List of channel members returned.
 *
 *
 */
export class ListChannelMembers200ApplicationJSON extends SpeakeasyBase {
  /**
   * Members in a channel.
   */
  @SpeakeasyMetadata({ elemType: ListChannelMembers200ApplicationJSONMembers })
  @Expose({ name: "members" })
  @Type(() => ListChannelMembers200ApplicationJSONMembers)
  members?: ListChannelMembers200ApplicationJSONMembers[];

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of records returned with a single API call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  /**
   * The total number of records returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;
}

export class ListChannelMembersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * List of channel members returned.
   *
   *
   */
  @SpeakeasyMetadata()
  listChannelMembers200ApplicationJSONObject?: ListChannelMembers200ApplicationJSON;
}
