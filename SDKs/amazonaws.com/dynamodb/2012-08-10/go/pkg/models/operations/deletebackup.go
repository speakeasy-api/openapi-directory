// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteBackupXAmzTargetEnum
type DeleteBackupXAmzTargetEnum string

const (
	DeleteBackupXAmzTargetEnumDynamoDb20120810DeleteBackup DeleteBackupXAmzTargetEnum = "DynamoDB_20120810.DeleteBackup"
)

func (e *DeleteBackupXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DynamoDB_20120810.DeleteBackup":
		*e = DeleteBackupXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteBackupXAmzTargetEnum: %s", s)
	}
}

type DeleteBackupRequest struct {
	DeleteBackupInput shared.DeleteBackupInput   `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DeleteBackupXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteBackupResponse struct {
	// BackupInUseException
	BackupInUseException interface{}
	// BackupNotFoundException
	BackupNotFoundException interface{}
	ContentType             string
	// Success
	DeleteBackupOutput *shared.DeleteBackupOutput
	// InternalServerError
	InternalServerError interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
}
