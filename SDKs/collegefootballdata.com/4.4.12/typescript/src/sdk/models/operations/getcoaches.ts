/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetCoachesRequest extends SpeakeasyBase {
  /**
   * First name filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=firstName",
  })
  firstName?: string;

  /**
   * Last name filter
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=lastName",
  })
  lastName?: string;

  /**
   * Maximum year filter (inclusive)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=maxYear",
  })
  maxYear?: number;

  /**
   * Minimum year filter (inclusive)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=minYear",
  })
  minYear?: number;

  /**
   * Team name filter
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=team" })
  team?: string;

  /**
   * Year filter
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=year" })
  year?: number;
}

export class GetCoachesResponse extends SpeakeasyBase {
  /**
   * successful operation
   */
  @SpeakeasyMetadata({ elemType: shared.Coach })
  coaches?: shared.Coach[];

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
