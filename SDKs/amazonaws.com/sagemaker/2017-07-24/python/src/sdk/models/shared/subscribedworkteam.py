"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SubscribedWorkteam:
    r"""Describes a work team of a vendor that does the a labelling job."""
    
    workteam_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WorkteamArn') }})  
    listing_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ListingId'), 'exclude': lambda f: f is None }})  
    marketplace_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MarketplaceDescription'), 'exclude': lambda f: f is None }})  
    marketplace_title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MarketplaceTitle'), 'exclude': lambda f: f is None }})  
    seller_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SellerName'), 'exclude': lambda f: f is None }})  
    