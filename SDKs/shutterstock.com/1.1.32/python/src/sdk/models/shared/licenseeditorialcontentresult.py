"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import url as shared_url
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LicenseEditorialContentResult:
    r"""The response to a licensing request for editorial content"""
    
    editorial_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('editorial_id') }})
    r"""Editorial ID"""  
    allotment_charge: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allotment_charge'), 'exclude': lambda f: f is None }})
    r"""For pre-paid plans, how many credits were used for the item license"""  
    download: Optional[shared_url.URL] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('download'), 'exclude': lambda f: f is None }})
    r"""URL object"""  
    error: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})  
    