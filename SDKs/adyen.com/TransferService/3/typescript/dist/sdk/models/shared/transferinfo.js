"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransferInfo = exports.TransferInfoPriorityEnum = exports.TransferInfoCategoryEnum = void 0;
var utils_1 = require("../../../internal/utils");
var amount_1 = require("./amount");
var counterpartyinfov3_1 = require("./counterpartyinfov3");
var class_transformer_1 = require("class-transformer");
/**
 * The type of transfer.
 *
 * @remarks
 *
 * Possible values:
 *
 *  - **bank**: Transfer to a [transfer instrument](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/transferInstruments__resParam_id) or a bank account.
 *
 * - **internal**: Transfer to another [balance account](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/balanceAccounts__resParam_id) within your platform.
 *
 * - **issuedCard**: Transfer initiated by a Adyen-issued card.
 *
 * - **platformPayment**: Fund movements related to payments that are acquired for your users.
 */
var TransferInfoCategoryEnum;
(function (TransferInfoCategoryEnum) {
    TransferInfoCategoryEnum["Bank"] = "bank";
    TransferInfoCategoryEnum["Internal"] = "internal";
    TransferInfoCategoryEnum["IssuedCard"] = "issuedCard";
    TransferInfoCategoryEnum["PlatformPayment"] = "platformPayment";
})(TransferInfoCategoryEnum = exports.TransferInfoCategoryEnum || (exports.TransferInfoCategoryEnum = {}));
/**
 * The priority for the bank transfer. This sets the speed at which the transfer is sent and the fees that you have to pay. Required for transfers with `category` **bank**.
 *
 * @remarks
 *
 * Possible values:
 *
 * * **regular**: For normal, low-value transactions.
 *
 * * **fast**: Faster way to transfer funds but has higher fees. Recommended for high-priority, low-value transactions.
 *
 * * **wire**: Fastest way to transfer funds but has the highest fees. Recommended for high-priority, high-value transactions.
 *
 * * **instant**: Instant way to transfer funds in [SEPA countries](https://www.ecb.europa.eu/paym/integration/retail/sepa/html/index.en.html).
 *
 * * **crossBorder**: High-value transfer to a recipient in a different country.
 *
 * * **internal**: Transfer to an Adyen-issued business bank account (by bank account number/IBAN).
 */
var TransferInfoPriorityEnum;
(function (TransferInfoPriorityEnum) {
    TransferInfoPriorityEnum["CrossBorder"] = "crossBorder";
    TransferInfoPriorityEnum["DirectDebit"] = "directDebit";
    TransferInfoPriorityEnum["Fast"] = "fast";
    TransferInfoPriorityEnum["Instant"] = "instant";
    TransferInfoPriorityEnum["Internal"] = "internal";
    TransferInfoPriorityEnum["Regular"] = "regular";
    TransferInfoPriorityEnum["Wire"] = "wire";
})(TransferInfoPriorityEnum = exports.TransferInfoPriorityEnum || (exports.TransferInfoPriorityEnum = {}));
var TransferInfo = /** @class */ (function (_super) {
    __extends(TransferInfo, _super);
    function TransferInfo() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        (0, class_transformer_1.Type)(function () { return amount_1.Amount; }),
        __metadata("design:type", amount_1.Amount)
    ], TransferInfo.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "balanceAccountId" }),
        __metadata("design:type", String)
    ], TransferInfo.prototype, "balanceAccountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "category" }),
        __metadata("design:type", String)
    ], TransferInfo.prototype, "category", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "counterparty" }),
        (0, class_transformer_1.Type)(function () { return counterpartyinfov3_1.CounterpartyInfoV3; }),
        __metadata("design:type", counterpartyinfov3_1.CounterpartyInfoV3)
    ], TransferInfo.prototype, "counterparty", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], TransferInfo.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], TransferInfo.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paymentInstrumentId" }),
        __metadata("design:type", String)
    ], TransferInfo.prototype, "paymentInstrumentId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "priority" }),
        __metadata("design:type", String)
    ], TransferInfo.prototype, "priority", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reference" }),
        __metadata("design:type", String)
    ], TransferInfo.prototype, "reference", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "referenceForBeneficiary" }),
        __metadata("design:type", String)
    ], TransferInfo.prototype, "referenceForBeneficiary", void 0);
    return TransferInfo;
}(utils_1.SpeakeasyBase));
exports.TransferInfo = TransferInfo;
