"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddialogflowv2eventinput as shared_googleclouddialogflowv2eventinput
from ..shared import googleclouddialogflowv2inputaudioconfig as shared_googleclouddialogflowv2inputaudioconfig
from ..shared import googleclouddialogflowv2textinput as shared_googleclouddialogflowv2textinput
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowV2QueryInput:
    r"""Represents the query input. It can contain either: 1. An audio config which instructs the speech recognizer how to process the speech audio. 2. A conversational query in the form of text,. 3. An event that specifies which intent to trigger."""
    
    audio_config: Optional[shared_googleclouddialogflowv2inputaudioconfig.GoogleCloudDialogflowV2InputAudioConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('audioConfig'), 'exclude': lambda f: f is None }})
    r"""Instructs the speech recognizer how to process the audio content."""  
    event: Optional[shared_googleclouddialogflowv2eventinput.GoogleCloudDialogflowV2EventInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('event'), 'exclude': lambda f: f is None }})
    r"""Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `\\"Hello #welcome_event.name! What can I do for you today?\\"`."""  
    text: Optional[shared_googleclouddialogflowv2textinput.GoogleCloudDialogflowV2TextInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('text'), 'exclude': lambda f: f is None }})
    r"""============================================================================ Auxiliary proto messages. Represents the natural language text to be processed."""  
    