// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListEnvironmentProvisionedResourcesXAmzTargetEnum
type ListEnvironmentProvisionedResourcesXAmzTargetEnum string

const (
	ListEnvironmentProvisionedResourcesXAmzTargetEnumAwsProton20200720ListEnvironmentProvisionedResources ListEnvironmentProvisionedResourcesXAmzTargetEnum = "AwsProton20200720.ListEnvironmentProvisionedResources"
)

func (e ListEnvironmentProvisionedResourcesXAmzTargetEnum) ToPointer() *ListEnvironmentProvisionedResourcesXAmzTargetEnum {
	return &e
}

func (e *ListEnvironmentProvisionedResourcesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AwsProton20200720.ListEnvironmentProvisionedResources":
		*e = ListEnvironmentProvisionedResourcesXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListEnvironmentProvisionedResourcesXAmzTargetEnum: %v", v)
	}
}

type ListEnvironmentProvisionedResourcesRequest struct {
	ListEnvironmentProvisionedResourcesInput shared.ListEnvironmentProvisionedResourcesInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                            *string                                           `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                        *string                                           `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                           *string                                           `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                 *string                                           `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                        *string                                           `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                            *string                                           `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                        *string                                           `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                               ListEnvironmentProvisionedResourcesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
	// Pagination token
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
}

type ListEnvironmentProvisionedResourcesResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	// Success
	ListEnvironmentProvisionedResourcesOutput *shared.ListEnvironmentProvisionedResourcesOutput
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
