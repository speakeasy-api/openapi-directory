/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GuestAttributesValue } from "./guestattributesvalue";
import { Expose, Type } from "class-transformer";

/**
 * A guest attributes.
 */
export class GuestAttributes extends SpeakeasyBase {
  /**
   * The path to be queried. This can be the default namespace ('/') or a nested namespace ('/\/') or a specified key ('/\/\')
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queryPath" })
  queryPath?: string;

  /**
   * Array of guest attribute namespace/key/value tuples.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queryValue" })
  @Type(() => GuestAttributesValue)
  queryValue?: GuestAttributesValue;
}
