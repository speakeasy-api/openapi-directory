// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type PatientIdentificationRequestQueryPatient struct {
	ID *string `json:"id,omitempty"`
}

type PatientIdentificationRequestQueryRequesterTypeEnum string

const (
	PatientIdentificationRequestQueryRequesterTypeEnumHiu PatientIdentificationRequestQueryRequesterTypeEnum = "HIU"
	PatientIdentificationRequestQueryRequesterTypeEnumHip PatientIdentificationRequestQueryRequesterTypeEnum = "HIP"
)

func (e *PatientIdentificationRequestQueryRequesterTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HIU":
		fallthrough
	case "HIP":
		*e = PatientIdentificationRequestQueryRequesterTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatientIdentificationRequestQueryRequesterTypeEnum: %s", s)
	}
}

type PatientIdentificationRequestQueryRequester struct {
	ID   *string                                             `json:"id,omitempty"`
	Type *PatientIdentificationRequestQueryRequesterTypeEnum `json:"type,omitempty"`
}

type PatientIdentificationRequestQuery struct {
	Patient   PatientIdentificationRequestQueryPatient   `json:"patient"`
	Requester PatientIdentificationRequestQueryRequester `json:"requester"`
}

type PatientIdentificationRequest struct {
	Query PatientIdentificationRequestQuery `json:"query"`
	// a nonce, unique for each HTTP request
	RequestID string `json:"requestId"`
	// Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
	Timestamp time.Time `json:"timestamp"`
}
