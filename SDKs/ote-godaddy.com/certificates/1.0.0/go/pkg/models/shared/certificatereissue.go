// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CertificateReissueRootTypeEnum - Root Type. Depending on certificate expiration date, SHA_1 not be allowed. Will default to SHA_2 if expiration date exceeds sha1 allowed date
type CertificateReissueRootTypeEnum string

const (
	CertificateReissueRootTypeEnumGodaddySha1   CertificateReissueRootTypeEnum = "GODADDY_SHA_1"
	CertificateReissueRootTypeEnumGodaddySha2   CertificateReissueRootTypeEnum = "GODADDY_SHA_2"
	CertificateReissueRootTypeEnumStarfieldSha1 CertificateReissueRootTypeEnum = "STARFIELD_SHA_1"
	CertificateReissueRootTypeEnumStarfieldSha2 CertificateReissueRootTypeEnum = "STARFIELD_SHA_2"
)

func (e *CertificateReissueRootTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GODADDY_SHA_1":
		fallthrough
	case "GODADDY_SHA_2":
		fallthrough
	case "STARFIELD_SHA_1":
		fallthrough
	case "STARFIELD_SHA_2":
		*e = CertificateReissueRootTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CertificateReissueRootTypeEnum: %s", s)
	}
}

// CertificateReissue - The reissue request info
type CertificateReissue struct {
	// Required if client would like to receive stateful action via callback during certificate lifecyle
	CallbackURL *string `json:"callbackUrl,omitempty"`
	// The common name of certificate to be secured
	CommonName *string `json:"commonName,omitempty"`
	// Certificate Signing Request.
	Csr *string `json:"csr,omitempty"`
	// In hours, time to delay revoking existing certificate after issuance of new certificate. If revokeExistingCertOnIssuance is enabled, this value will be ignored
	DelayExistingRevoke *int64 `json:"delayExistingRevoke,omitempty"`
	// Optional field. Domain verification will be required for each domain listed here. Specify a value of * to indicate that all domains associated with the request should have their domain information reverified.
	ForceDomainRevetting []string `json:"forceDomainRevetting,omitempty"`
	// Root Type. Depending on certificate expiration date, SHA_1 not be allowed. Will default to SHA_2 if expiration date exceeds sha1 allowed date
	RootType *CertificateReissueRootTypeEnum `json:"rootType,omitempty"`
	// Only used for UCC products. An array of subject alternative names to include in certificate.
	SubjectAlternativeNames []string `json:"subjectAlternativeNames,omitempty"`
}
