// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CampaignStatusEnum string

const (
	CampaignStatusEnumScheduled      CampaignStatusEnum = "SCHEDULED"
	CampaignStatusEnumExecuting      CampaignStatusEnum = "EXECUTING"
	CampaignStatusEnumPendingNextRun CampaignStatusEnum = "PENDING_NEXT_RUN"
	CampaignStatusEnumCompleted      CampaignStatusEnum = "COMPLETED"
	CampaignStatusEnumPaused         CampaignStatusEnum = "PAUSED"
	CampaignStatusEnumDeleted        CampaignStatusEnum = "DELETED"
	CampaignStatusEnumInvalid        CampaignStatusEnum = "INVALID"
)

func (e CampaignStatusEnum) ToPointer() *CampaignStatusEnum {
	return &e
}

func (e *CampaignStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SCHEDULED":
		fallthrough
	case "EXECUTING":
		fallthrough
	case "PENDING_NEXT_RUN":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "PAUSED":
		fallthrough
	case "DELETED":
		fallthrough
	case "INVALID":
		*e = CampaignStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CampaignStatusEnum: %v", v)
	}
}
