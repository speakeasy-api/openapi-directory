"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dqresultspublishingoptions as shared_dqresultspublishingoptions
from ..shared import dqstopjobonfailureoptions as shared_dqstopjobonfailureoptions
from ..shared import dqtransformoutput_enum as shared_dqtransformoutput_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EvaluateDataQuality:
    r"""Specifies your data quality evaluation criteria."""
    
    inputs: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Inputs') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    ruleset: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Ruleset') }})  
    output: Optional[shared_dqtransformoutput_enum.DQTransformOutputEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Output'), 'exclude': lambda f: f is None }})  
    publishing_options: Optional[shared_dqresultspublishingoptions.DQResultsPublishingOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PublishingOptions'), 'exclude': lambda f: f is None }})  
    stop_job_on_failure_options: Optional[shared_dqstopjobonfailureoptions.DQStopJobOnFailureOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StopJobOnFailureOptions'), 'exclude': lambda f: f is None }})  
    