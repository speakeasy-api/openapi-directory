// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTListPoliciesActionEnum
type POSTListPoliciesActionEnum string

const (
	POSTListPoliciesActionEnumListPolicies POSTListPoliciesActionEnum = "ListPolicies"
)

func (e POSTListPoliciesActionEnum) ToPointer() *POSTListPoliciesActionEnum {
	return &e
}

func (e *POSTListPoliciesActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ListPolicies":
		*e = POSTListPoliciesActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListPoliciesActionEnum: %v", v)
	}
}

// POSTListPoliciesVersionEnum
type POSTListPoliciesVersionEnum string

const (
	POSTListPoliciesVersionEnumTwoThousandAndTen0508 POSTListPoliciesVersionEnum = "2010-05-08"
)

func (e POSTListPoliciesVersionEnum) ToPointer() *POSTListPoliciesVersionEnum {
	return &e
}

func (e *POSTListPoliciesVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = POSTListPoliciesVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTListPoliciesVersionEnum: %v", v)
	}
}

type POSTListPoliciesRequest struct {
	Action POSTListPoliciesActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	MaxItems          *string                     `queryParam:"style=form,explode=true,name=MaxItems"`
	RequestBody       []byte                      `request:"mediaType=text/xml"`
	Version           POSTListPoliciesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTListPoliciesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
