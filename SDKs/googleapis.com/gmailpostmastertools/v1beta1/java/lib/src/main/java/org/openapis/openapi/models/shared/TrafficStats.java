/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TrafficStats - Email traffic statistics pertaining to a specific date.
 */
public class TrafficStats {
    /**
     * Delivery errors for the domain. This metric only pertains to traffic that passed [SPF](http://www.openspf.org/) or [DKIM](http://www.dkim.org/).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliveryErrors")
    public DeliveryError[] deliveryErrors;

    public TrafficStats withDeliveryErrors(DeliveryError[] deliveryErrors) {
        this.deliveryErrors = deliveryErrors;
        return this;
    }
    
    /**
     * The ratio of mail that successfully authenticated with DKIM vs. all mail that attempted to authenticate with [DKIM](http://www.dkim.org/). Spoofed mail is excluded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dkimSuccessRatio")
    public Double dkimSuccessRatio;

    public TrafficStats withDkimSuccessRatio(Double dkimSuccessRatio) {
        this.dkimSuccessRatio = dkimSuccessRatio;
        return this;
    }
    
    /**
     * The ratio of mail that passed [DMARC](https://dmarc.org/) alignment checks vs all mail received from the domain that successfully authenticated with either of [SPF](http://www.openspf.org/) or [DKIM](http://www.dkim.org/).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dmarcSuccessRatio")
    public Double dmarcSuccessRatio;

    public TrafficStats withDmarcSuccessRatio(Double dmarcSuccessRatio) {
        this.dmarcSuccessRatio = dmarcSuccessRatio;
        return this;
    }
    
    /**
     * Reputation of the domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domainReputation")
    public TrafficStatsDomainReputationEnum domainReputation;

    public TrafficStats withDomainReputation(TrafficStatsDomainReputationEnum domainReputation) {
        this.domainReputation = domainReputation;
        return this;
    }
    
    /**
     * The ratio of incoming mail (to Gmail), that passed secure transport (TLS) vs all mail received from that domain. This metric only pertains to traffic that passed [SPF](http://www.openspf.org/) or [DKIM](http://www.dkim.org/).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inboundEncryptionRatio")
    public Double inboundEncryptionRatio;

    public TrafficStats withInboundEncryptionRatio(Double inboundEncryptionRatio) {
        this.inboundEncryptionRatio = inboundEncryptionRatio;
        return this;
    }
    
    /**
     * Reputation information pertaining to the IP addresses of the email servers for the domain. There is exactly one entry for each reputation category except REPUTATION_CATEGORY_UNSPECIFIED.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipReputations")
    public IpReputation[] ipReputations;

    public TrafficStats withIpReputations(IpReputation[] ipReputations) {
        this.ipReputations = ipReputations;
        return this;
    }
    
    /**
     * The resource name of the traffic statistics. Traffic statistic names have the form `domains/{domain}/trafficStats/{date}`, where domain_name is the fully qualified domain name (i.e., mymail.mydomain.com) of the domain this traffic statistics pertains to and date is the date in yyyymmdd format that these statistics corresponds to. For example: domains/mymail.mydomain.com/trafficStats/20160807
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public TrafficStats withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The ratio of outgoing mail (from Gmail) that was accepted over secure transport (TLS).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outboundEncryptionRatio")
    public Double outboundEncryptionRatio;

    public TrafficStats withOutboundEncryptionRatio(Double outboundEncryptionRatio) {
        this.outboundEncryptionRatio = outboundEncryptionRatio;
        return this;
    }
    
    /**
     * Spammy [Feedback loop identifiers] (https://support.google.com/mail/answer/6254652) with their individual spam rates. This metric only pertains to traffic that is authenticated by [DKIM](http://www.dkim.org/).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spammyFeedbackLoops")
    public FeedbackLoop[] spammyFeedbackLoops;

    public TrafficStats withSpammyFeedbackLoops(FeedbackLoop[] spammyFeedbackLoops) {
        this.spammyFeedbackLoops = spammyFeedbackLoops;
        return this;
    }
    
    /**
     * The ratio of mail that successfully authenticated with SPF vs. all mail that attempted to authenticate with [SPF](http://www.openspf.org/). Spoofed mail is excluded.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spfSuccessRatio")
    public Double spfSuccessRatio;

    public TrafficStats withSpfSuccessRatio(Double spfSuccessRatio) {
        this.spfSuccessRatio = spfSuccessRatio;
        return this;
    }
    
    /**
     * The ratio of user-report spam vs. email that was sent to the inbox. This metric only pertains to emails authenticated by [DKIM](http://www.dkim.org/).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userReportedSpamRatio")
    public Double userReportedSpamRatio;

    public TrafficStats withUserReportedSpamRatio(Double userReportedSpamRatio) {
        this.userReportedSpamRatio = userReportedSpamRatio;
        return this;
    }
    
    public TrafficStats(){}
}
