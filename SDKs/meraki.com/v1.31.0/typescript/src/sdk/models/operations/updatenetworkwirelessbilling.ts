/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The uplink bandwidth settings for the pricing plan.
 */
export class UpdateNetworkWirelessBillingRequestBodyPlansBandwidthLimits extends SpeakeasyBase {
  /**
   * The maximum download limit (integer, in Kbps). null indicates no limit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limitDown" })
  limitDown?: number;

  /**
   * The maximum upload limit (integer, in Kbps). null indicates no limit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limitUp" })
  limitUp?: number;
}

/**
 * The time limit of the pricing plan in minutes. Can be '1 hour', '1 day', '1 week', or '30 days'.
 */
export enum UpdateNetworkWirelessBillingRequestBodyPlansTimeLimitEnum {
  OneDay = "1 day",
  OneHour = "1 hour",
  OneWeek = "1 week",
  ThirtyDays = "30 days",
}

export class UpdateNetworkWirelessBillingRequestBodyPlans extends SpeakeasyBase {
  /**
   * The uplink bandwidth settings for the pricing plan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bandwidthLimits" })
  @Type(() => UpdateNetworkWirelessBillingRequestBodyPlansBandwidthLimits)
  bandwidthLimits: UpdateNetworkWirelessBillingRequestBodyPlansBandwidthLimits;

  /**
   * The id of the pricing plan to update.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The price of the billing plan.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price: number;

  /**
   * The time limit of the pricing plan in minutes. Can be '1 hour', '1 day', '1 week', or '30 days'.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeLimit" })
  timeLimit: UpdateNetworkWirelessBillingRequestBodyPlansTimeLimitEnum;
}

export class UpdateNetworkWirelessBillingRequestBody extends SpeakeasyBase {
  /**
   * The currency code of this node group's billing plans
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency?: string;

  /**
   * Array of billing plans in the node group. (Can configure a maximum of 5)
   */
  @SpeakeasyMetadata({ elemType: UpdateNetworkWirelessBillingRequestBodyPlans })
  @Expose({ name: "plans" })
  @Type(() => UpdateNetworkWirelessBillingRequestBodyPlans)
  plans?: UpdateNetworkWirelessBillingRequestBodyPlans[];
}

export class UpdateNetworkWirelessBillingRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: UpdateNetworkWirelessBillingRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

export class UpdateNetworkWirelessBillingResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  updateNetworkWirelessBilling200ApplicationJSONObject?: Record<string, any>;
}
