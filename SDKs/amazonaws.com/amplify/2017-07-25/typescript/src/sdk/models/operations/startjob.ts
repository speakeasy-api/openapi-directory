/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

/**
 *  Describes the type for the job. The job type <code>RELEASE</code> starts a new job with the latest change from the specified branch. This value is available only for apps that are connected to a repository. The job type <code>RETRY</code> retries an existing job. If the job type value is <code>RETRY</code>, the <code>jobId</code> is also required.
 */
export enum StartJobRequestBodyJobTypeEnum {
  Release = "RELEASE",
  Retry = "RETRY",
  Manual = "MANUAL",
  WebHook = "WEB_HOOK",
}

export class StartJobRequestBody extends SpeakeasyBase {
  /**
   *  The commit ID from a third-party repository provider for the job.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commitId" })
  commitId?: string;

  /**
   *  The commit message from a third-party repository provider for the job.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commitMessage" })
  commitMessage?: string;

  /**
   *  The commit date and time for the job.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commitTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  commitTime?: Date;

  /**
   *  The unique ID for an existing job. This is required if the value of <code>jobType</code> is <code>RETRY</code>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jobId" })
  jobId?: string;

  /**
   *  A descriptive reason for starting this job.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jobReason" })
  jobReason?: string;

  /**
   *  Describes the type for the job. The job type <code>RELEASE</code> starts a new job with the latest change from the specified branch. This value is available only for apps that are connected to a repository. The job type <code>RETRY</code> retries an existing job. If the job type value is <code>RETRY</code>, the <code>jobId</code> is also required.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jobType" })
  jobType: StartJobRequestBodyJobTypeEnum;
}

export class StartJobRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: StartJobRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   *  The unique ID for an Amplify app.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=appId",
  })
  appId: string;

  /**
   *  The branch name for the job.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=branchName",
  })
  branchName: string;
}

export class StartJobResponse extends SpeakeasyBase {
  /**
   * BadRequestException
   */
  @SpeakeasyMetadata()
  badRequestException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalFailureException
   */
  @SpeakeasyMetadata()
  internalFailureException?: any;

  /**
   * LimitExceededException
   */
  @SpeakeasyMetadata()
  limitExceededException?: any;

  /**
   * NotFoundException
   */
  @SpeakeasyMetadata()
  notFoundException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  startJobResult?: shared.StartJobResult;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * UnauthorizedException
   */
  @SpeakeasyMetadata()
  unauthorizedException?: any;
}
