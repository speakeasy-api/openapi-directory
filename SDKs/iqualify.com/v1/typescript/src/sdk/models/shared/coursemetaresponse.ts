/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LearningOutcomes } from "./learningoutcomes";
import { Expose, Transform, Type } from "class-transformer";

export class CourseMetaResponseMetadata extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category?: string;

  @SpeakeasyMetadata({ elemType: LearningOutcomes })
  @Expose({ name: "learning_outcomes" })
  @Type(() => LearningOutcomes)
  learningOutcomes?: LearningOutcomes[];

  @SpeakeasyMetadata()
  @Expose({ name: "level" })
  level?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "rootContentId" })
  rootContentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "topic" })
  topic?: string;
}

/**
 * Course detail
 */
export class CourseMetaResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "coverImageUrl" })
  coverImageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => CourseMetaResponseMetadata)
  metadata?: CourseMetaResponseMetadata;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tasksEnabled" })
  tasksEnabled?: boolean;
}
