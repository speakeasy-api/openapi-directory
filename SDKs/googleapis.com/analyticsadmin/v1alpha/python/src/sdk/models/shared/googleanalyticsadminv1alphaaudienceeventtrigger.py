"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleAnalyticsAdminV1alphaAudienceEventTriggerLogConditionEnum(str, Enum):
    r"""Required. When to log the event."""
    LOG_CONDITION_UNSPECIFIED = 'LOG_CONDITION_UNSPECIFIED'
    AUDIENCE_JOINED = 'AUDIENCE_JOINED'
    AUDIENCE_MEMBERSHIP_RENEWED = 'AUDIENCE_MEMBERSHIP_RENEWED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAnalyticsAdminV1alphaAudienceEventTrigger:
    r"""Specifies an event to log when a user joins the Audience."""
    
    event_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventName'), 'exclude': lambda f: f is None }})
    r"""Required. The event name that will be logged."""  
    log_condition: Optional[GoogleAnalyticsAdminV1alphaAudienceEventTriggerLogConditionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('logCondition'), 'exclude': lambda f: f is None }})
    r"""Required. When to log the event."""  
    