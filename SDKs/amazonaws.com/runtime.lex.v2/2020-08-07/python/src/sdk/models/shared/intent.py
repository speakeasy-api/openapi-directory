"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import confirmationstate_enum as shared_confirmationstate_enum
from ..shared import intentstate_enum as shared_intentstate_enum
from ..shared import slot as shared_slot
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Intent:
    r"""The current intent that Amazon Lex V2 is attempting to fulfill."""
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    confirmation_state: Optional[shared_confirmationstate_enum.ConfirmationStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('confirmationState'), 'exclude': lambda f: f is None }})  
    slots: Optional[dict[str, shared_slot.Slot]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slots'), 'exclude': lambda f: f is None }})  
    state: Optional[shared_intentstate_enum.IntentStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})  
    