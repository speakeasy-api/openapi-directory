// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PatchOpEnum string

const (
	PatchOpEnumAdd     PatchOpEnum = "add"
	PatchOpEnumRemove  PatchOpEnum = "remove"
	PatchOpEnumReplace PatchOpEnum = "replace"
)

func (e PatchOpEnum) ToPointer() *PatchOpEnum {
	return &e
}

func (e *PatchOpEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "add":
		fallthrough
	case "remove":
		fallthrough
	case "replace":
		*e = PatchOpEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchOpEnum: %v", v)
	}
}

type Patch struct {
	Op PatchOpEnum `json:"op"`
	// An RFC6901 JSON Pointer pointing to the Item document, an Item Attribute, and Item Field by Field ID, or an Item Field Attribute
	Path  string                 `json:"path"`
	Value map[string]interface{} `json:"value,omitempty"`
}
