// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateStageRequestBodyAccessLogSettings - Settings for logging access in a stage.
type UpdateStageRequestBodyAccessLogSettings struct {
	DestinationArn *string `json:"DestinationArn,omitempty"`
	Format         *string `json:"Format,omitempty"`
}

// UpdateStageRequestBodyDefaultRouteSettingsLoggingLevelEnum - Specifies the logging level for this route: INFO, ERROR, or OFF. This property affects the log entries pushed to Amazon CloudWatch Logs. Supported only for WebSocket APIs.
type UpdateStageRequestBodyDefaultRouteSettingsLoggingLevelEnum string

const (
	UpdateStageRequestBodyDefaultRouteSettingsLoggingLevelEnumError UpdateStageRequestBodyDefaultRouteSettingsLoggingLevelEnum = "ERROR"
	UpdateStageRequestBodyDefaultRouteSettingsLoggingLevelEnumInfo  UpdateStageRequestBodyDefaultRouteSettingsLoggingLevelEnum = "INFO"
	UpdateStageRequestBodyDefaultRouteSettingsLoggingLevelEnumOff   UpdateStageRequestBodyDefaultRouteSettingsLoggingLevelEnum = "OFF"
)

func (e UpdateStageRequestBodyDefaultRouteSettingsLoggingLevelEnum) ToPointer() *UpdateStageRequestBodyDefaultRouteSettingsLoggingLevelEnum {
	return &e
}

func (e *UpdateStageRequestBodyDefaultRouteSettingsLoggingLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ERROR":
		fallthrough
	case "INFO":
		fallthrough
	case "OFF":
		*e = UpdateStageRequestBodyDefaultRouteSettingsLoggingLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateStageRequestBodyDefaultRouteSettingsLoggingLevelEnum: %v", v)
	}
}

// UpdateStageRequestBodyDefaultRouteSettings - Represents a collection of route settings.
type UpdateStageRequestBodyDefaultRouteSettings struct {
	DataTraceEnabled       *bool                                                       `json:"DataTraceEnabled,omitempty"`
	DetailedMetricsEnabled *bool                                                       `json:"DetailedMetricsEnabled,omitempty"`
	LoggingLevel           *UpdateStageRequestBodyDefaultRouteSettingsLoggingLevelEnum `json:"LoggingLevel,omitempty"`
	ThrottlingBurstLimit   *int64                                                      `json:"ThrottlingBurstLimit,omitempty"`
	ThrottlingRateLimit    *float64                                                    `json:"ThrottlingRateLimit,omitempty"`
}

type UpdateStageRequestBody struct {
	// Settings for logging access in a stage.
	AccessLogSettings *UpdateStageRequestBodyAccessLogSettings `json:"accessLogSettings,omitempty"`
	// Specifies whether updates to an API automatically trigger a new deployment. The default value is false.
	AutoDeploy *bool `json:"autoDeploy,omitempty"`
	// The identifier.
	ClientCertificateID *string `json:"clientCertificateId,omitempty"`
	// Represents a collection of route settings.
	DefaultRouteSettings *UpdateStageRequestBodyDefaultRouteSettings `json:"defaultRouteSettings,omitempty"`
	// The identifier.
	DeploymentID *string `json:"deploymentId,omitempty"`
	// A string with a length between [0-1024].
	Description *string `json:"description,omitempty"`
	// The route settings map.
	RouteSettings map[string]shared.RouteSettings `json:"routeSettings,omitempty"`
	// The stage variable map.
	StageVariables map[string]string `json:"stageVariables,omitempty"`
}

type UpdateStageRequest struct {
	RequestBody       UpdateStageRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The API identifier.
	APIID string `pathParam:"style=simple,explode=false,name=apiId"`
	// The stage name. Stage names can contain only alphanumeric characters, hyphens, and underscores, or be $default. Maximum length is 128 characters.
	StageName string `pathParam:"style=simple,explode=false,name=stageName"`
}

type UpdateStageResponse struct {
	// BadRequestException
	BadRequestException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// Success
	UpdateStageResponse *shared.UpdateStageResponse
}
