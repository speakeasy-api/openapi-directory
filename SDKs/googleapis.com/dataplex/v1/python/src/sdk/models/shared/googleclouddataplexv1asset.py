"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddataplexv1assetdiscoveryspec as shared_googleclouddataplexv1assetdiscoveryspec
from ..shared import googleclouddataplexv1assetdiscoverystatus as shared_googleclouddataplexv1assetdiscoverystatus
from ..shared import googleclouddataplexv1assetresourcespec as shared_googleclouddataplexv1assetresourcespec
from ..shared import googleclouddataplexv1assetresourcestatus as shared_googleclouddataplexv1assetresourcestatus
from ..shared import googleclouddataplexv1assetsecuritystatus as shared_googleclouddataplexv1assetsecuritystatus
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDataplexV1AssetInput:
    r"""An asset represents a cloud resource that is being managed within a lake as a member of a zone."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Optional. Description of the asset."""  
    discovery_spec: Optional[shared_googleclouddataplexv1assetdiscoveryspec.GoogleCloudDataplexV1AssetDiscoverySpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('discoverySpec'), 'exclude': lambda f: f is None }})
    r"""Settings to manage the metadata discovery and publishing for an asset."""  
    discovery_status: Optional[shared_googleclouddataplexv1assetdiscoverystatus.GoogleCloudDataplexV1AssetDiscoveryStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('discoveryStatus'), 'exclude': lambda f: f is None }})
    r"""Status of discovery for an asset."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Optional. User friendly display name."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Optional. User defined labels for the asset."""  
    resource_spec: Optional[shared_googleclouddataplexv1assetresourcespec.GoogleCloudDataplexV1AssetResourceSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceSpec'), 'exclude': lambda f: f is None }})
    r"""Identifies the cloud resource that is referenced by this asset."""  
    resource_status: Optional[shared_googleclouddataplexv1assetresourcestatus.GoogleCloudDataplexV1AssetResourceStatusInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceStatus'), 'exclude': lambda f: f is None }})
    r"""Status of the resource referenced by an asset."""  
    security_status: Optional[shared_googleclouddataplexv1assetsecuritystatus.GoogleCloudDataplexV1AssetSecurityStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('securityStatus'), 'exclude': lambda f: f is None }})
    r"""Security policy status of the asset. Data security policy, i.e., readers, writers & owners, should be specified in the lake/zone/asset IAM policy."""  
    
class GoogleCloudDataplexV1AssetStateEnum(str, Enum):
    r"""Output only. Current state of the asset."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    ACTIVE = 'ACTIVE'
    CREATING = 'CREATING'
    DELETING = 'DELETING'
    ACTION_REQUIRED = 'ACTION_REQUIRED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDataplexV1Asset:
    r"""An asset represents a cloud resource that is being managed within a lake as a member of a zone."""
    
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time when the asset was created."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Optional. Description of the asset."""  
    discovery_spec: Optional[shared_googleclouddataplexv1assetdiscoveryspec.GoogleCloudDataplexV1AssetDiscoverySpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('discoverySpec'), 'exclude': lambda f: f is None }})
    r"""Settings to manage the metadata discovery and publishing for an asset."""  
    discovery_status: Optional[shared_googleclouddataplexv1assetdiscoverystatus.GoogleCloudDataplexV1AssetDiscoveryStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('discoveryStatus'), 'exclude': lambda f: f is None }})
    r"""Status of discovery for an asset."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Optional. User friendly display name."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Optional. User defined labels for the asset."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. The relative resource name of the asset, of the form: projects/{project_number}/locations/{location_id}/lakes/{lake_id}/zones/{zone_id}/assets/{asset_id}."""  
    resource_spec: Optional[shared_googleclouddataplexv1assetresourcespec.GoogleCloudDataplexV1AssetResourceSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceSpec'), 'exclude': lambda f: f is None }})
    r"""Identifies the cloud resource that is referenced by this asset."""  
    resource_status: Optional[shared_googleclouddataplexv1assetresourcestatus.GoogleCloudDataplexV1AssetResourceStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceStatus'), 'exclude': lambda f: f is None }})
    r"""Status of the resource referenced by an asset."""  
    security_status: Optional[shared_googleclouddataplexv1assetsecuritystatus.GoogleCloudDataplexV1AssetSecurityStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('securityStatus'), 'exclude': lambda f: f is None }})
    r"""Security policy status of the asset. Data security policy, i.e., readers, writers & owners, should be specified in the lake/zone/asset IAM policy."""  
    state: Optional[GoogleCloudDataplexV1AssetStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Output only. Current state of the asset."""  
    uid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uid'), 'exclude': lambda f: f is None }})
    r"""Output only. System generated globally unique ID for the asset. This ID will be different if the asset is deleted and re-created with the same name."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The time when the asset was last updated."""  
    