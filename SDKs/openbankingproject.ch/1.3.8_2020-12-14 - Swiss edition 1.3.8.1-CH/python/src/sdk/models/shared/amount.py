"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Amount:
    
    amount: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount') }})
    r"""The amount given with fractional digits, where fractions must be compliant to the currency definition.
    Up to 14 significant figures. Negative amounts are signed by minus.
    The decimal separator is a dot.
    
    **Example:**
    Valid representations for EUR with up to two decimals are:
    
      * 1056
      * 5768.2
      * -1.50
      * 5877.78
    """  
    currency: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currency') }})
    r"""ISO 4217 Alpha 3 currency code."""  
    