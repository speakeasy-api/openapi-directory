/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Specify the reason why the metrics are generated by the certain order action.
 *
 * @remarks
 *
 */
export enum TimeSlicedElpNetMetricsGeneratedReasonEnum {
  IncreaseQuantity = "IncreaseQuantity",
  DecreaseQuantity = "DecreaseQuantity",
  ChangePrice = "ChangePrice",
  Extension = "Extension",
  Contraction = "Contraction",
}

/**
 * The type for ELP is always "Regular".
 */
export enum TimeSlicedElpNetMetricsTypeEnum {
  Regular = "Regular",
  Discount = "Discount",
}

export class TimeSlicedElpNetMetrics extends SpeakeasyBase {
  /**
   * The extended list price which is calculated by the original product catalog list price multiplied by the delta quantity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: number;

  /**
   * The latest date that the metric applies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endDate?: Date;

  /**
   * Specify the reason why the metrics are generated by the certain order action.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "generatedReason" })
  generatedReason?: TimeSlicedElpNetMetricsGeneratedReasonEnum;

  /**
   * The acount number of the billing account that is billed for the subscription.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "invoiceOwner" })
  invoiceOwner?: string;

  /**
   * The ID of the order item referenced by the order metrics.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "orderItemId" })
  orderItemId?: string;

  /**
   * The earliest date that the metric applies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDate?: Date;

  /**
   * The acount number of the billing account that owns the subscription.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subscriptionOwner" })
  subscriptionOwner?: string;

  /**
   * The tax amount in the metric when the tax permission is enabled.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax" })
  tax?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "termNumber" })
  termNumber?: number;

  /**
   * The type for ELP is always "Regular".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: TimeSlicedElpNetMetricsTypeEnum;
}
