// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteRemediationConfigurationXAmzTargetEnum
type DeleteRemediationConfigurationXAmzTargetEnum string

const (
	DeleteRemediationConfigurationXAmzTargetEnumStarlingDoveServiceDeleteRemediationConfiguration DeleteRemediationConfigurationXAmzTargetEnum = "StarlingDoveService.DeleteRemediationConfiguration"
)

func (e DeleteRemediationConfigurationXAmzTargetEnum) ToPointer() *DeleteRemediationConfigurationXAmzTargetEnum {
	return &e
}

func (e *DeleteRemediationConfigurationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "StarlingDoveService.DeleteRemediationConfiguration":
		*e = DeleteRemediationConfigurationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteRemediationConfigurationXAmzTargetEnum: %v", v)
	}
}

type DeleteRemediationConfigurationRequest struct {
	DeleteRemediationConfigurationRequest shared.DeleteRemediationConfigurationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                        *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                              *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                     *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                         *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                     *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                            DeleteRemediationConfigurationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteRemediationConfigurationResponse struct {
	ContentType string
	// Success
	DeleteRemediationConfigurationResponse map[string]interface{}
	// InsufficientPermissionsException
	InsufficientPermissionsException interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// NoSuchRemediationConfigurationException
	NoSuchRemediationConfigurationException interface{}
	StatusCode                              int
	RawResponse                             *http.Response
	// RemediationInProgressException
	RemediationInProgressException interface{}
}
