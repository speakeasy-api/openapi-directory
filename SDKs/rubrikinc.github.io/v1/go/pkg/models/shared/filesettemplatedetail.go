// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// FilesetTemplateDetailOperatingSystemTypeEnum - Operating system type of filesets created by template.
type FilesetTemplateDetailOperatingSystemTypeEnum string

const (
	FilesetTemplateDetailOperatingSystemTypeEnumUnixLike FilesetTemplateDetailOperatingSystemTypeEnum = "UnixLike"
	FilesetTemplateDetailOperatingSystemTypeEnumWindows  FilesetTemplateDetailOperatingSystemTypeEnum = "Windows"
)

func (e FilesetTemplateDetailOperatingSystemTypeEnum) ToPointer() *FilesetTemplateDetailOperatingSystemTypeEnum {
	return &e
}

func (e *FilesetTemplateDetailOperatingSystemTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UnixLike":
		fallthrough
	case "Windows":
		*e = FilesetTemplateDetailOperatingSystemTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FilesetTemplateDetailOperatingSystemTypeEnum: %v", v)
	}
}

type FilesetTemplateDetailShareTypeEnum string

const (
	FilesetTemplateDetailShareTypeEnumNfs FilesetTemplateDetailShareTypeEnum = "NFS"
	FilesetTemplateDetailShareTypeEnumSmb FilesetTemplateDetailShareTypeEnum = "SMB"
)

func (e FilesetTemplateDetailShareTypeEnum) ToPointer() *FilesetTemplateDetailShareTypeEnum {
	return &e
}

func (e *FilesetTemplateDetailShareTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NFS":
		fallthrough
	case "SMB":
		*e = FilesetTemplateDetailShareTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FilesetTemplateDetailShareTypeEnum: %v", v)
	}
}

// FilesetTemplateDetail - Summary information for the created fileset template.
type FilesetTemplateDetail struct {
	// Include or exclude hidden folders inside locally-mounted remote file systems from backups.
	AllowBackupHiddenFoldersInNetworkMounts *bool `json:"allowBackupHiddenFoldersInNetworkMounts,omitempty"`
	// Include or exclude locally-mounted remote file systems from backups.
	AllowBackupNetworkMounts *bool `json:"allowBackupNetworkMounts,omitempty"`
	// Action taken if script fails. Options are "abort", "continue".
	BackupScriptErrorHandling *string `json:"backupScriptErrorHandling,omitempty"`
	// Number of seconds after which the script is killed if it has not completed execution.
	BackupScriptTimeout *int64   `json:"backupScriptTimeout,omitempty"`
	Exceptions          []string `json:"exceptions,omitempty"`
	Excludes            []string `json:"excludes,omitempty"`
	// Number of hosts where this template has been applied.
	HostCount  *int     `json:"hostCount,omitempty"`
	ID         string   `json:"id"`
	Includes   []string `json:"includes"`
	IsArchived *bool    `json:"isArchived,omitempty"`
	// Boolean value that determines whether the fileset is array-enabled. Set to true to indicate that the fileset is array-enabled. Set to false to indicate that the fileset is not array-enabled. When a fileset is array-enabled, the includes must be top-level LVM logical volume mount points.
	IsArrayEnabled *bool `json:"isArrayEnabled,omitempty"`
	// Specifies whether this is created by a Kupr Host.
	IsCreatedByKupr *bool  `json:"isCreatedByKupr,omitempty"`
	Name            string `json:"name"`
	// Operating system type of filesets created by template.
	OperatingSystemType *FilesetTemplateDetailOperatingSystemTypeEnum `json:"operatingSystemType,omitempty"`
	// Script to run after backup of this fileset ends.
	PostBackupScript *string `json:"postBackupScript,omitempty"`
	// Script to run before backup of this fileset starts.
	PreBackupScript  *string `json:"preBackupScript,omitempty"`
	PrimaryClusterID string  `json:"primaryClusterId"`
	// Number of shares where this template has been applied.
	ShareCount *int                                `json:"shareCount,omitempty"`
	ShareType  *FilesetTemplateDetailShareTypeEnum `json:"shareType,omitempty"`
	// Use VSS during Windows backups.
	UseWindowsVss *bool `json:"useWindowsVss,omitempty"`
}
