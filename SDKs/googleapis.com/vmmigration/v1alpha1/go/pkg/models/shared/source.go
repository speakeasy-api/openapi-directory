// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Source - Source message describes a specific vm migration Source resource. It contains the source environment information.
type Source struct {
	// AwsSourceDetails message describes a specific source details for the AWS source type.
	Aws *AwsSourceDetails `json:"aws,omitempty"`
	// Output only. The create time timestamp.
	CreateTime *string `json:"createTime,omitempty"`
	// User-provided description of the source.
	Description *string `json:"description,omitempty"`
	// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	Error *Status `json:"error,omitempty"`
	// The labels of the source.
	Labels map[string]string `json:"labels,omitempty"`
	// Output only. The Source name.
	Name *string `json:"name,omitempty"`
	// Output only. The update time timestamp.
	UpdateTime *string `json:"updateTime,omitempty"`
	// VmwareSourceDetails message describes a specific source details for the vmware source type.
	Vmware *VmwareSourceDetails `json:"vmware,omitempty"`
}

// SourceInput - Source message describes a specific vm migration Source resource. It contains the source environment information.
type SourceInput struct {
	// AwsSourceDetails message describes a specific source details for the AWS source type.
	Aws *AwsSourceDetailsInput `json:"aws,omitempty"`
	// User-provided description of the source.
	Description *string `json:"description,omitempty"`
	// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	Error *Status `json:"error,omitempty"`
	// The labels of the source.
	Labels map[string]string `json:"labels,omitempty"`
	// VmwareSourceDetails message describes a specific source details for the vmware source type.
	Vmware *VmwareSourceDetails `json:"vmware,omitempty"`
}
