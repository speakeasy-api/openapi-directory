// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CreateRoomRequestClassificationEnum - Classification ID:
//
// * `1` - public
//
// * `2` - internal
//
// * `3` - confidential
//
// * `4` - strictly confidential
//
// # Provided (or default) classification is taken from room
//
// when file gets uploaded without any classification.
type CreateRoomRequestClassificationEnum string

const (
	CreateRoomRequestClassificationEnumOne   CreateRoomRequestClassificationEnum = "1"
	CreateRoomRequestClassificationEnumTwo   CreateRoomRequestClassificationEnum = "2"
	CreateRoomRequestClassificationEnumThree CreateRoomRequestClassificationEnum = "3"
	CreateRoomRequestClassificationEnumFour  CreateRoomRequestClassificationEnum = "4"
)

func (e *CreateRoomRequestClassificationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		fallthrough
	case "2":
		fallthrough
	case "3":
		fallthrough
	case "4":
		*e = CreateRoomRequestClassificationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateRoomRequestClassificationEnum: %s", s)
	}
}

// CreateRoomRequestNewGroupMemberAcceptanceEnum - Behaviour when new users are added to the group:
//
// * `autoallow`
//
// * `pending`
//
// Only relevant if `adminGroupIds` has items.
type CreateRoomRequestNewGroupMemberAcceptanceEnum string

const (
	CreateRoomRequestNewGroupMemberAcceptanceEnumAutoallow CreateRoomRequestNewGroupMemberAcceptanceEnum = "autoallow"
	CreateRoomRequestNewGroupMemberAcceptanceEnumPending   CreateRoomRequestNewGroupMemberAcceptanceEnum = "pending"
)

func (e *CreateRoomRequestNewGroupMemberAcceptanceEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "autoallow":
		fallthrough
	case "pending":
		*e = CreateRoomRequestNewGroupMemberAcceptanceEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateRoomRequestNewGroupMemberAcceptanceEnum: %s", s)
	}
}

// CreateRoomRequest - Request model for creating a room
type CreateRoomRequest struct {
	// List of group ids
	//
	// A room requires at least one admin (user or group)
	AdminGroupIds []int64 `json:"adminGroupIds,omitempty"`
	// List of user ids
	//
	// A room requires at least one admin (user or group)
	AdminIds []int64 `json:"adminIds,omitempty"`
	// Classification ID:
	//
	// * `1` - public
	//
	// * `2` - internal
	//
	// * `3` - confidential
	//
	// * `4` - strictly confidential
	//
	//
	//
	// Provided (or default) classification is taken from room
	//
	// when file gets uploaded without any classification.
	Classification *CreateRoomRequestClassificationEnum `json:"classification,omitempty"`
	// Is activities log active (for rooms only)
	HasActivitiesLog *bool `json:"hasActivitiesLog,omitempty"`
	// &#128679; Deprecated since v4.10.0
	//
	// Is recycle bin active (for rooms only)
	//
	// Recycle bin is always on (disabling is not possible).
	HasRecycleBin *bool `json:"hasRecycleBin,omitempty"`
	// Inherit permissions from parent room
	//
	// (default: `false` if `parentId` is `0`; otherwise: `true`)
	InheritPermissions *bool `json:"inheritPermissions,omitempty"`
	// Name
	Name string `json:"name"`
	// Behaviour when new users are added to the group:
	//
	// * `autoallow`
	//
	// * `pending`
	//
	//
	//
	// Only relevant if `adminGroupIds` has items.
	NewGroupMemberAcceptance *CreateRoomRequestNewGroupMemberAcceptanceEnum `json:"newGroupMemberAcceptance,omitempty"`
	// User notes
	//
	// Use empty string to remove.
	Notes *string `json:"notes,omitempty"`
	// Parent room ID or `null` (not 0) to create a top level room
	ParentID *int64 `json:"parentId,omitempty"`
	// Quota in byte
	Quota *int64 `json:"quota,omitempty"`
	// Retention period for deleted nodes in days
	RecycleBinRetentionPeriod *int `json:"recycleBinRetentionPeriod,omitempty"`
	// &#128640; Since v4.22.0
	//
	// Time the node was created on external file system
	//
	// (default: current server datetime in UTC format)
	TimestampCreation *time.Time `json:"timestampCreation,omitempty"`
	// &#128640; Since v4.22.0
	//
	// Time the content of a node was last modified on external file system
	//
	// (default: current server datetime in UTC format)
	TimestampModification *time.Time `json:"timestampModification,omitempty"`
}
