"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class GETBillingDocumentsResponseTypeDocumentTypeEnum(str, Enum):
    r"""The type of the billing document."""
    INVOICE = 'Invoice'
    CREDIT_MEMO = 'CreditMemo'
    DEBIT_MEMO = 'DebitMemo'

class GETBillingDocumentsResponseTypeStatusEnum(str, Enum):
    r"""The current status of the billing document."""
    DRAFT = 'Draft'
    POSTED = 'Posted'
    CANCELED = 'Canceled'
    ERROR = 'Error'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GETBillingDocumentsResponseType:
    
    account_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountId'), 'exclude': lambda f: f is None }})
    r"""The ID of the customer account associated with the billing document."""  
    amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})
    r"""The total amount of the billing document."""  
    balance: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balance'), 'exclude': lambda f: f is None }})
    r"""The balance of the billing document."""  
    document_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentDate'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date of the billing document. The date can be the invoice date for invoices, credit memo date for credit memos, or debit memo date for debit memos."""  
    document_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentNumber'), 'exclude': lambda f: f is None }})
    r"""The number of the billing document."""  
    document_type: Optional[GETBillingDocumentsResponseTypeDocumentTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentType'), 'exclude': lambda f: f is None }})
    r"""The type of the billing document."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The ID of the billing document."""  
    status: Optional[GETBillingDocumentsResponseTypeStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The current status of the billing document."""  
    