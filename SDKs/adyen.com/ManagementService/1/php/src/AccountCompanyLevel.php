<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class AccountCompanyLevel 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Get a list of company accounts
     * 
     * Returns the list of company accounts that your API credential has access to. The list is grouped into pages as defined by the query parameters.
     * 
     * To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
     * 
     * * Management API—Account read
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetCompaniesRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\GetCompaniesSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\GetCompaniesResponse
     */
	public function getCompanies(
        \OpenAPI\OpenAPI\Models\Operations\GetCompaniesRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\GetCompaniesSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\GetCompaniesResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/companies');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetCompaniesRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetCompaniesResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->listCompanyResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ListCompanyResponse', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 422 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->restServiceError = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\RestServiceError', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get a company account
     * 
     * Returns the company account specified in the path. Your API credential must have access to the company account. 
     * 
     * To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
     * * Management API—Account read
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetCompaniesCompanyIdRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\GetCompaniesCompanyIdSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\GetCompaniesCompanyIdResponse
     */
	public function getCompaniesCompanyId(
        \OpenAPI\OpenAPI\Models\Operations\GetCompaniesCompanyIdRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\GetCompaniesCompanyIdSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\GetCompaniesCompanyIdResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/companies/{companyId}', \OpenAPI\OpenAPI\Models\Operations\GetCompaniesCompanyIdRequest::class, $request);
        
        $options = ['http_errors' => false];
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetCompaniesCompanyIdResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->company = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Company', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 422 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->restServiceError = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\RestServiceError', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Get a list of merchant accounts
     * 
     * Returns the list of merchant accounts under the company account specified in the path. The list only includes merchant accounts that your API credential has access to. The list is grouped into pages as defined by the query parameters. 
     * 
     * To make this request, your API credential must have the following [roles](https://docs.adyen.com/development-resources/api-credentials#api-permissions):
     * * Management API—Account read
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\GetCompaniesCompanyIdMerchantsRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\GetCompaniesCompanyIdMerchantsSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\GetCompaniesCompanyIdMerchantsResponse
     */
	public function getCompaniesCompanyIdMerchants(
        \OpenAPI\OpenAPI\Models\Operations\GetCompaniesCompanyIdMerchantsRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\GetCompaniesCompanyIdMerchantsSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\GetCompaniesCompanyIdMerchantsResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/companies/{companyId}/merchants', \OpenAPI\OpenAPI\Models\Operations\GetCompaniesCompanyIdMerchantsRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\GetCompaniesCompanyIdMerchantsRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\GetCompaniesCompanyIdMerchantsResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->listMerchantResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ListMerchantResponse', 'json');
            }
        }
        else if ($httpResponse->getStatusCode() === 400 or $httpResponse->getStatusCode() === 401 or $httpResponse->getStatusCode() === 403 or $httpResponse->getStatusCode() === 422 or $httpResponse->getStatusCode() === 500) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->restServiceError = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\RestServiceError', 'json');
            }
        }

        return $response;
    }
}