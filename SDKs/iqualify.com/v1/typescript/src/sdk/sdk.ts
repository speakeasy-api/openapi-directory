/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as utils from "../internal/utils";
import { APIInfo } from "./apiinfo";
import { AssessmentData } from "./assessmentdata";
import { AssessmentGroups } from "./assessmentgroups";
import { AssessmentManagement } from "./assessmentmanagement";
import { Badges } from "./badges";
import { Channels } from "./channels";
import { CourseMappings } from "./coursemappings";
import { CourseMetadata } from "./coursemetadata";
import { Courses } from "./courses";
import { LearnerActivity } from "./learneractivity";
import * as shared from "./models/shared";
import { OfferingLearners } from "./offeringlearners";
import { OfferingMetadata } from "./offeringmetadata";
import { Offerings } from "./offerings";
import { Organisation } from "./organisation";
import { Pulses } from "./pulses";
import { UsersInIQualify } from "./usersiniqualify";
import axios, { AxiosInstance } from "axios";

/**
 * Contains the list of servers available to the SDK
 */
export const ServerList = ["https://api.iqualify.com/v1"] as const;

/**
 * The available configuration options for the SDK
 */
export type SDKProps = {
  /**
   * The security details required to authenticate the SDK
   */
  security?: shared.Security;
  /**
   * Allows overriding the default axios client used by the SDK
   */
  defaultClient?: AxiosInstance;
  /**
   * Allows overriding the default server URL used by the SDK
   */
  serverURL?: string;
};

/**
 * The iQualify API offers management responses for building
 *
 * @remarks
 * learning experiences using your iQualify instance data.
 *
 * Once youâ€™ve registered with iQualify, you can request an API access token by
 * navigating to the API access section of the "Account Settings" area.
 *
 * Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token)
 * on our Knowledge base.
 *
 * All endpoints are only accessible via https and are located at
 * api.iqualify.com. For instance: you can find your current offerings by
 * accessing the following URL:
 *
 *     https://api.iqualify.com/v1/offerings/current
 *
 *
 */
export class SDK {
  public apiInfo: APIInfo;
  public assessmentData: AssessmentData;
  public assessmentGroups: AssessmentGroups;
  public assessmentManagement: AssessmentManagement;
  public badges: Badges;
  public channels: Channels;
  public courseMappings: CourseMappings;
  public courseMetadata: CourseMetadata;
  public courses: Courses;
  public learnerActivity: LearnerActivity;
  public offeringLearners: OfferingLearners;
  public offeringMetadata: OfferingMetadata;
  public offerings: Offerings;
  public organisation: Organisation;
  public pulses: Pulses;
  public usersInIQualify: UsersInIQualify;

  public _defaultClient: AxiosInstance;
  public _securityClient: AxiosInstance;
  public _serverURL: string;
  private _language = "typescript";
  private _sdkVersion = "0.0.1";
  private _genVersion = "internal";
  private _globals: any;

  constructor(props?: SDKProps) {
    this._serverURL = props?.serverURL ?? ServerList[0];

    this._defaultClient =
      props?.defaultClient ?? axios.create({ baseURL: this._serverURL });
    if (props?.security) {
      let security: shared.Security = props.security;
      if (!(props.security instanceof utils.SpeakeasyBase))
        security = new shared.Security(props.security);
      this._securityClient = utils.createSecurityClient(
        this._defaultClient,
        security
      );
    } else {
      this._securityClient = this._defaultClient;
    }

    this.apiInfo = new APIInfo(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.assessmentData = new AssessmentData(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.assessmentGroups = new AssessmentGroups(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.assessmentManagement = new AssessmentManagement(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.badges = new Badges(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.channels = new Channels(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.courseMappings = new CourseMappings(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.courseMetadata = new CourseMetadata(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.courses = new Courses(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.learnerActivity = new LearnerActivity(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.offeringLearners = new OfferingLearners(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.offeringMetadata = new OfferingMetadata(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.offerings = new Offerings(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.organisation = new Organisation(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.pulses = new Pulses(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.usersInIQualify = new UsersInIQualify(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );
  }
}
