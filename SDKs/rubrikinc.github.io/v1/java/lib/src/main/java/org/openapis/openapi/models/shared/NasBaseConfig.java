/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class NasBaseConfig {
    /**
     * TLS certification to validate NAS server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiCertificate")
    public String apiCertificate;

    public NasBaseConfig withApiCertificate(String apiCertificate) {
        this.apiCertificate = apiCertificate;
        return this;
    }
    
    /**
     * API endpoint to access NAS API 'FLASHBLADE'.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiEndpoint")
    public String apiEndpoint;

    public NasBaseConfig withApiEndpoint(String apiEndpoint) {
        this.apiEndpoint = apiEndpoint;
        return this;
    }
    
    /**
     * Hostname or IP used in the NAS API calls.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiHostname")
    public String apiHostname;

    public NasBaseConfig withApiHostname(String apiHostname) {
        this.apiHostname = apiHostname;
        return this;
    }
    
    /**
     * Username to access NAS API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiUsername")
    public String apiUsername;

    public NasBaseConfig withApiUsername(String apiUsername) {
        this.apiUsername = apiUsername;
        return this;
    }
    
    /**
     * Indicates if Changelist is enabled on Isilon NAS share. When this value is 'true', metadata fetches during backup operations use the Isilon Changelist feature. The Changelist feature improves incremental backup performance by tracking the difference between two snapshots, reducing the metadata scanning time during a backup job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isIsilonChangelistEnabled")
    public Boolean isIsilonChangelistEnabled;

    public NasBaseConfig withIsIsilonChangelistEnabled(Boolean isIsilonChangelistEnabled) {
        this.isIsilonChangelistEnabled = isIsilonChangelistEnabled;
        return this;
    }
    
    /**
     * Indicates if SnapDiff is enabled on NetApp NAS share. When this value is 'true', metadata fetches during backup operations use the NetApp SnapDiff feature. The SnapDiff feature improves incremental backup performance by tracking the difference between two snapshots, reducing the metadata scanning time during a backup job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isNetAppSnapDiffEnabled")
    public Boolean isNetAppSnapDiffEnabled;

    public NasBaseConfig withIsNetAppSnapDiffEnabled(Boolean isNetAppSnapDiffEnabled) {
        this.isNetAppSnapDiffEnabled = isNetAppSnapDiffEnabled;
        return this;
    }
    
    /**
     * Specifies whether shares on the NAS host are automatically discovered. When this value is 'true', Rubrik periodically (every 30 minutes by default) connects to the NAS host to discover NFS and SMB shares.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isShareAutoDiscoveryEnabled")
    public Boolean isShareAutoDiscoveryEnabled;

    public NasBaseConfig withIsShareAutoDiscoveryEnabled(Boolean isShareAutoDiscoveryEnabled) {
        this.isShareAutoDiscoveryEnabled = isShareAutoDiscoveryEnabled;
        return this;
    }
    
    /**
     * Type of NAS vendor 'ISILON/NETAPP/FLASHBLADE'.
     */
    @JsonProperty("vendorType")
    public String vendorType;

    public NasBaseConfig withVendorType(String vendorType) {
        this.vendorType = vendorType;
        return this;
    }
    
    /**
     * Name of the Isilon zone that data IP belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zoneName")
    public String zoneName;

    public NasBaseConfig withZoneName(String zoneName) {
        this.zoneName = zoneName;
        return this;
    }
    
    public NasBaseConfig(@JsonProperty("vendorType") String vendorType) {
        this.vendorType = vendorType;
  }
}
