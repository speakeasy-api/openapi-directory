/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CollectionUpdate - Collection description
 */
public class CollectionUpdate {
    /**
     * List of articles to be associated with the collection
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("articles")
    public Long[] articles;
    public CollectionUpdate withArticles(Long[] articles) {
        this.articles = articles;
        return this;
    }
    
    /**
     * List of authors to be associated with the collection. The list can contain the following fields: id, name, first_name, last_name, email, orcid_id. If an id is supplied, it will take priority and everything else will be ignored. No more than 10 authors. For adding more authors use the specific authors endpoint.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authors")
    public java.util.Map<String, Object>[] authors;
    public CollectionUpdate withAuthors(java.util.Map<String, Object>[] authors) {
        this.authors = authors;
        return this;
    }
    
    /**
     * List of category ids to be associated with the collection (e.g [1, 23, 33, 66])
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categories")
    public Long[] categories;
    public CollectionUpdate withCategories(Long[] categories) {
        this.categories = categories;
        return this;
    }
    
    /**
     * List of category source ids to be associated with the article, supersedes the categories property
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categories_by_source_id")
    public String[] categoriesBySourceId;
    public CollectionUpdate withCategoriesBySourceId(String[] categoriesBySourceId) {
        this.categoriesBySourceId = categoriesBySourceId;
        return this;
    }
    
    /**
     * List of key, values pairs to be associated with the collection
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_fields")
    public java.util.Map<String, Object> customFields;
    public CollectionUpdate withCustomFields(java.util.Map<String, Object> customFields) {
        this.customFields = customFields;
        return this;
    }
    
    /**
     * List of custom fields values, supersedes custom_fields parameter
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_fields_list")
    public CustomArticleFieldAdd[] customFieldsList;
    public CollectionUpdate withCustomFieldsList(CustomArticleFieldAdd[] customFieldsList) {
        this.customFieldsList = customFieldsList;
        return this;
    }
    
    /**
     * The collection description. In a publisher case, usually this is the remote collection description
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public CollectionUpdate withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Not applicable for regular users. In an institutional case, make sure your group supports setting DOIs. This setting is applied by figshare via opening a ticket through our support/helpdesk system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("doi")
    public String doi;
    public CollectionUpdate withDoi(String doi) {
        this.doi = doi;
        return this;
    }
    
    /**
     * Grant number or funding authority
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("funding")
    public String funding;
    public CollectionUpdate withFunding(String funding) {
        this.funding = funding;
        return this;
    }
    
    /**
     * Funding creation / update items
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("funding_list")
    public FundingCreate[] fundingList;
    public CollectionUpdate withFundingList(FundingCreate[] fundingList) {
        this.fundingList = fundingList;
        return this;
    }
    
    /**
     * Not applicable to regular users. This field is reserved to institutions/publishers with access to assign to specific groups
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("group_id")
    public Long groupId;
    public CollectionUpdate withGroupId(Long groupId) {
        this.groupId = groupId;
        return this;
    }
    
    /**
     * Not applicable for regular users. In an institutional case, make sure your group supports setting Handles. This setting is applied by figshare via opening a ticket through our support/helpdesk system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("handle")
    public String handle;
    public CollectionUpdate withHandle(String handle) {
        this.handle = handle;
        return this;
    }
    
    /**
     * List of tags to be associated with the collection. Tags can be used instead
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keywords")
    public String[] keywords;
    public CollectionUpdate withKeywords(String[] keywords) {
        this.keywords = keywords;
        return this;
    }
    
    /**
     * List of links to be associated with the collection (e.g ["http://link1", "http://link2", "http://link3"])
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("references")
    public String[] references;
    public CollectionUpdate withReferences(String[] references) {
        this.references = references;
        return this;
    }
    
    /**
     * Not applicable to regular users. In a publisher case, this is the publisher article DOI.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_doi")
    public String resourceDoi;
    public CollectionUpdate withResourceDoi(String resourceDoi) {
        this.resourceDoi = resourceDoi;
        return this;
    }
    
    /**
     * Not applicable to regular users. In a publisher case, this is the publisher article id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_id")
    public String resourceId;
    public CollectionUpdate withResourceId(String resourceId) {
        this.resourceId = resourceId;
        return this;
    }
    
    /**
     * Not applicable to regular users. In a publisher case, this is the publisher article link
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_link")
    public String resourceLink;
    public CollectionUpdate withResourceLink(String resourceLink) {
        this.resourceLink = resourceLink;
        return this;
    }
    
    /**
     * Not applicable to regular users. In a publisher case, this is the publisher article title.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_title")
    public String resourceTitle;
    public CollectionUpdate withResourceTitle(String resourceTitle) {
        this.resourceTitle = resourceTitle;
        return this;
    }
    
    /**
     * Not applicable to regular users. In a publisher case, this is the publisher article version
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource_version")
    public Long resourceVersion;
    public CollectionUpdate withResourceVersion(Long resourceVersion) {
        this.resourceVersion = resourceVersion;
        return this;
    }
    
    /**
     * List of tags to be associated with the collection. Keywords can be used instead
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public String[] tags;
    public CollectionUpdate withTags(String[] tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeline")
    public TimelineUpdate timeline;
    public CollectionUpdate withTimeline(TimelineUpdate timeline) {
        this.timeline = timeline;
        return this;
    }
    
    /**
     * Title of collection
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;
    public CollectionUpdate withTitle(String title) {
        this.title = title;
        return this;
    }
    
}
