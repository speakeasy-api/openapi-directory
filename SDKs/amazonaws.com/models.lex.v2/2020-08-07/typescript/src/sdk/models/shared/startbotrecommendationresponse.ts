/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BotRecommendationStatusEnum } from "./botrecommendationstatusenum";
import { EncryptionSetting } from "./encryptionsetting";
import { TranscriptSourceSetting } from "./transcriptsourcesetting";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class StartBotRecommendationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "botId" })
  botId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "botRecommendationId" })
  botRecommendationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "botRecommendationStatus" })
  botRecommendationStatus?: BotRecommendationStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "botVersion" })
  botVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creationDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "encryptionSetting" })
  @Type(() => EncryptionSetting)
  encryptionSetting?: EncryptionSetting;

  @SpeakeasyMetadata()
  @Expose({ name: "localeId" })
  localeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "transcriptSourceSetting" })
  @Type(() => TranscriptSourceSetting)
  transcriptSourceSetting?: TranscriptSourceSetting;
}
