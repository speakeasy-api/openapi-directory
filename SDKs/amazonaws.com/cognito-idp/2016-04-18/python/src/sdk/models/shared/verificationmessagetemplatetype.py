"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import defaultemailoptiontype_enum as shared_defaultemailoptiontype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VerificationMessageTemplateType:
    r"""The template for verification messages."""
    
    default_email_option: Optional[shared_defaultemailoptiontype_enum.DefaultEmailOptionTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DefaultEmailOption'), 'exclude': lambda f: f is None }})  
    email_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmailMessage'), 'exclude': lambda f: f is None }})  
    email_message_by_link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmailMessageByLink'), 'exclude': lambda f: f is None }})  
    email_subject: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmailSubject'), 'exclude': lambda f: f is None }})  
    email_subject_by_link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmailSubjectByLink'), 'exclude': lambda f: f is None }})  
    sms_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SmsMessage'), 'exclude': lambda f: f is None }})  
    