/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DestinationNotWorkingEvidence - Evidence of the creative's destination URL not functioning properly or having been incorrectly set up.
 */
public class DestinationNotWorkingEvidence {
    /**
     * DNS lookup errors.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dnsError")
    public DestinationNotWorkingEvidenceDnsErrorEnum dnsError;

    public DestinationNotWorkingEvidence withDnsError(DestinationNotWorkingEvidenceDnsErrorEnum dnsError) {
        this.dnsError = dnsError;
        return this;
    }
    
    /**
     * The full non-working URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expandedUrl")
    public String expandedUrl;

    public DestinationNotWorkingEvidence withExpandedUrl(String expandedUrl) {
        this.expandedUrl = expandedUrl;
        return this;
    }
    
    /**
     * HTTP error code (for example, 404 or 5xx)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("httpError")
    public Integer httpError;

    public DestinationNotWorkingEvidence withHttpError(Integer httpError) {
        this.httpError = httpError;
        return this;
    }
    
    /**
     * Page was crawled successfully, but was detected as either a page with no content or an error page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invalidPage")
    public DestinationNotWorkingEvidenceInvalidPageEnum invalidPage;

    public DestinationNotWorkingEvidence withInvalidPage(DestinationNotWorkingEvidenceInvalidPageEnum invalidPage) {
        this.invalidPage = invalidPage;
        return this;
    }
    
    /**
     * Approximate time when the ad destination was last checked.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastCheckTime")
    public String lastCheckTime;

    public DestinationNotWorkingEvidence withLastCheckTime(String lastCheckTime) {
        this.lastCheckTime = lastCheckTime;
        return this;
    }
    
    /**
     * Platform of the non-working URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platform")
    public DestinationNotWorkingEvidencePlatformEnum platform;

    public DestinationNotWorkingEvidence withPlatform(DestinationNotWorkingEvidencePlatformEnum platform) {
        this.platform = platform;
        return this;
    }
    
    /**
     * HTTP redirect chain error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redirectionError")
    public DestinationNotWorkingEvidenceRedirectionErrorEnum redirectionError;

    public DestinationNotWorkingEvidence withRedirectionError(DestinationNotWorkingEvidenceRedirectionErrorEnum redirectionError) {
        this.redirectionError = redirectionError;
        return this;
    }
    
    /**
     * Rejected because of malformed URLs or invalid requests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("urlRejected")
    public DestinationNotWorkingEvidenceUrlRejectedEnum urlRejected;

    public DestinationNotWorkingEvidence withUrlRejected(DestinationNotWorkingEvidenceUrlRejectedEnum urlRejected) {
        this.urlRejected = urlRejected;
        return this;
    }
    
    public DestinationNotWorkingEvidence(){}
}
