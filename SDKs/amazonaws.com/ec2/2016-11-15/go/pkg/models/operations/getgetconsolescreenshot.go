// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETConsoleScreenshotActionEnum
type GETGETConsoleScreenshotActionEnum string

const (
	GETGETConsoleScreenshotActionEnumGetConsoleScreenshot GETGETConsoleScreenshotActionEnum = "GetConsoleScreenshot"
)

func (e GETGETConsoleScreenshotActionEnum) ToPointer() *GETGETConsoleScreenshotActionEnum {
	return &e
}

func (e *GETGETConsoleScreenshotActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetConsoleScreenshot":
		*e = GETGETConsoleScreenshotActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETConsoleScreenshotActionEnum: %v", v)
	}
}

// GETGETConsoleScreenshotVersionEnum
type GETGETConsoleScreenshotVersionEnum string

const (
	GETGETConsoleScreenshotVersionEnumTwoThousandAndSixteen1115 GETGETConsoleScreenshotVersionEnum = "2016-11-15"
)

func (e GETGETConsoleScreenshotVersionEnum) ToPointer() *GETGETConsoleScreenshotVersionEnum {
	return &e
}

func (e *GETGETConsoleScreenshotVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETGETConsoleScreenshotVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETConsoleScreenshotVersionEnum: %v", v)
	}
}

type GETGETConsoleScreenshotRequest struct {
	Action GETGETConsoleScreenshotActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the instance.
	InstanceID string                             `queryParam:"style=form,explode=true,name=InstanceId"`
	Version    GETGETConsoleScreenshotVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// When set to <code>true</code>, acts as keystroke input and wakes up an instance that's in standby or "sleep" mode.
	WakeUp            *bool   `queryParam:"style=form,explode=true,name=WakeUp"`
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETConsoleScreenshotResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
