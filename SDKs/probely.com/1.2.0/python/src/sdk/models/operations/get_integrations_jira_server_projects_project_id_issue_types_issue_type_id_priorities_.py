"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import jiraissuepriority as shared_jiraissuepriority
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetIntegrationsJiraServerProjectsProjectIDIssueTypesIssueTypeIDPrioritiesRequest:
    
    issue_type_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'issue_type_id', 'style': 'simple', 'explode': False }})
    r"""Jira issue type id"""  
    project_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'project_id', 'style': 'simple', 'explode': False }})
    r"""Jira Project Id"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetIntegrationsJiraServerProjectsProjectIDIssueTypesIssueTypeIDPriorities403ApplicationJSON:
    r"""Not allowed to perform operation"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""Error message."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetIntegrationsJiraServerProjectsProjectIDIssueTypesIssueTypeIDPriorities401ApplicationJSON:
    r"""Access token is missing or invalid"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetIntegrationsJiraServerProjectsProjectIDIssueTypesIssueTypeIDPrioritiesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_integrations_jira_server_projects_project_id_issue_types_issue_type_id_priorities_401_application_json_object: Optional[GetIntegrationsJiraServerProjectsProjectIDIssueTypesIssueTypeIDPriorities401ApplicationJSON] = dataclasses.field(default=None)
    r"""Access token is missing or invalid"""  
    get_integrations_jira_server_projects_project_id_issue_types_issue_type_id_priorities_403_application_json_object: Optional[GetIntegrationsJiraServerProjectsProjectIDIssueTypesIssueTypeIDPriorities403ApplicationJSON] = dataclasses.field(default=None)
    r"""Not allowed to perform operation"""  
    jira_issue_priorities: Optional[list[shared_jiraissuepriority.JiraIssuePriority]] = dataclasses.field(default=None)
    r"""Jira issue priorities"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    