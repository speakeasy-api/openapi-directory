// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CourseWorkAssigneeModeEnum - Assignee mode of the coursework. If unspecified, the default value is `ALL_STUDENTS`.
type CourseWorkAssigneeModeEnum string

const (
	CourseWorkAssigneeModeEnumAssigneeModeUnspecified CourseWorkAssigneeModeEnum = "ASSIGNEE_MODE_UNSPECIFIED"
	CourseWorkAssigneeModeEnumAllStudents             CourseWorkAssigneeModeEnum = "ALL_STUDENTS"
	CourseWorkAssigneeModeEnumIndividualStudents      CourseWorkAssigneeModeEnum = "INDIVIDUAL_STUDENTS"
)

func (e *CourseWorkAssigneeModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ASSIGNEE_MODE_UNSPECIFIED":
		fallthrough
	case "ALL_STUDENTS":
		fallthrough
	case "INDIVIDUAL_STUDENTS":
		*e = CourseWorkAssigneeModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CourseWorkAssigneeModeEnum: %s", s)
	}
}

// CourseWorkStateEnum - Status of this course work. If unspecified, the default state is `DRAFT`.
type CourseWorkStateEnum string

const (
	CourseWorkStateEnumCourseWorkStateUnspecified CourseWorkStateEnum = "COURSE_WORK_STATE_UNSPECIFIED"
	CourseWorkStateEnumPublished                  CourseWorkStateEnum = "PUBLISHED"
	CourseWorkStateEnumDraft                      CourseWorkStateEnum = "DRAFT"
	CourseWorkStateEnumDeleted                    CourseWorkStateEnum = "DELETED"
)

func (e *CourseWorkStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COURSE_WORK_STATE_UNSPECIFIED":
		fallthrough
	case "PUBLISHED":
		fallthrough
	case "DRAFT":
		fallthrough
	case "DELETED":
		*e = CourseWorkStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CourseWorkStateEnum: %s", s)
	}
}

// CourseWorkSubmissionModificationModeEnum - Setting to determine when students are allowed to modify submissions. If unspecified, the default value is `MODIFIABLE_UNTIL_TURNED_IN`.
type CourseWorkSubmissionModificationModeEnum string

const (
	CourseWorkSubmissionModificationModeEnumSubmissionModificationModeUnspecified CourseWorkSubmissionModificationModeEnum = "SUBMISSION_MODIFICATION_MODE_UNSPECIFIED"
	CourseWorkSubmissionModificationModeEnumModifiableUntilTurnedIn               CourseWorkSubmissionModificationModeEnum = "MODIFIABLE_UNTIL_TURNED_IN"
	CourseWorkSubmissionModificationModeEnumModifiable                            CourseWorkSubmissionModificationModeEnum = "MODIFIABLE"
)

func (e *CourseWorkSubmissionModificationModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SUBMISSION_MODIFICATION_MODE_UNSPECIFIED":
		fallthrough
	case "MODIFIABLE_UNTIL_TURNED_IN":
		fallthrough
	case "MODIFIABLE":
		*e = CourseWorkSubmissionModificationModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CourseWorkSubmissionModificationModeEnum: %s", s)
	}
}

// CourseWorkWorkTypeEnum - Type of this course work. The type is set when the course work is created and cannot be changed.
type CourseWorkWorkTypeEnum string

const (
	CourseWorkWorkTypeEnumCourseWorkTypeUnspecified CourseWorkWorkTypeEnum = "COURSE_WORK_TYPE_UNSPECIFIED"
	CourseWorkWorkTypeEnumAssignment                CourseWorkWorkTypeEnum = "ASSIGNMENT"
	CourseWorkWorkTypeEnumShortAnswerQuestion       CourseWorkWorkTypeEnum = "SHORT_ANSWER_QUESTION"
	CourseWorkWorkTypeEnumMultipleChoiceQuestion    CourseWorkWorkTypeEnum = "MULTIPLE_CHOICE_QUESTION"
)

func (e *CourseWorkWorkTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COURSE_WORK_TYPE_UNSPECIFIED":
		fallthrough
	case "ASSIGNMENT":
		fallthrough
	case "SHORT_ANSWER_QUESTION":
		fallthrough
	case "MULTIPLE_CHOICE_QUESTION":
		*e = CourseWorkWorkTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CourseWorkWorkTypeEnum: %s", s)
	}
}

// CourseWork - Course work created by a teacher for students of the course.
type CourseWork struct {
	// Absolute link to this course work in the Classroom web UI. This is only populated if `state` is `PUBLISHED`. Read-only.
	AlternateLink *string `json:"alternateLink,omitempty"`
	// Assignee mode of the coursework. If unspecified, the default value is `ALL_STUDENTS`.
	AssigneeMode *CourseWorkAssigneeModeEnum `json:"assigneeMode,omitempty"`
	// Additional details for assignments.
	Assignment *Assignment `json:"assignment,omitempty"`
	// Whether this course work item is associated with the Developer Console project making the request. See CreateCourseWork for more details. Read-only.
	AssociatedWithDeveloper *bool `json:"associatedWithDeveloper,omitempty"`
	// Identifier of the course. Read-only.
	CourseID *string `json:"courseId,omitempty"`
	// Timestamp when this course work was created. Read-only.
	CreationTime *string `json:"creationTime,omitempty"`
	// Identifier for the user that created the coursework. Read-only.
	CreatorUserID *string `json:"creatorUserId,omitempty"`
	// Optional description of this course work. If set, the description must be a valid UTF-8 string containing no more than 30,000 characters.
	Description *string `json:"description,omitempty"`
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	DueDate *Date `json:"dueDate,omitempty"`
	// Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
	DueTime *TimeOfDay `json:"dueTime,omitempty"`
	// Details for a grade category in a course. Coursework may have zero or one grade category, and the category may be used in computing the overall grade. See the [help center article](https://support.google.com/edu/classroom/answer/9184995) for details.
	GradeCategory *GradeCategory `json:"gradeCategory,omitempty"`
	// Classroom-assigned identifier of this course work, unique per course. Read-only.
	ID *string `json:"id,omitempty"`
	// Assignee details about a coursework/announcement. This field is set if and only if `assigneeMode` is `INDIVIDUAL_STUDENTS`.
	IndividualStudentsOptions *IndividualStudentsOptions `json:"individualStudentsOptions,omitempty"`
	// Additional materials. CourseWork must have no more than 20 material items.
	Materials []Material `json:"materials,omitempty"`
	// Maximum grade for this course work. If zero or unspecified, this assignment is considered ungraded. This must be a non-negative integer value.
	MaxPoints *float64 `json:"maxPoints,omitempty"`
	// Additional details for multiple-choice questions.
	MultipleChoiceQuestion *MultipleChoiceQuestion `json:"multipleChoiceQuestion,omitempty"`
	// Optional timestamp when this course work is scheduled to be published.
	ScheduledTime *string `json:"scheduledTime,omitempty"`
	// Status of this course work. If unspecified, the default state is `DRAFT`.
	State *CourseWorkStateEnum `json:"state,omitempty"`
	// Setting to determine when students are allowed to modify submissions. If unspecified, the default value is `MODIFIABLE_UNTIL_TURNED_IN`.
	SubmissionModificationMode *CourseWorkSubmissionModificationModeEnum `json:"submissionModificationMode,omitempty"`
	// Title of this course work. The title must be a valid UTF-8 string containing between 1 and 3000 characters.
	Title *string `json:"title,omitempty"`
	// Identifier for the topic that this coursework is associated with. Must match an existing topic in the course.
	TopicID *string `json:"topicId,omitempty"`
	// Timestamp of the most recent change to this course work. Read-only.
	UpdateTime *string `json:"updateTime,omitempty"`
	// Type of this course work. The type is set when the course work is created and cannot be changed.
	WorkType *CourseWorkWorkTypeEnum `json:"workType,omitempty"`
}
