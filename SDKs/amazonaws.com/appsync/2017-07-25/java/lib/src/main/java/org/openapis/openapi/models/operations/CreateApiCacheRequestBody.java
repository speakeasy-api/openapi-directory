/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateApiCacheRequestBody {
    /**
     * &lt;p&gt;Caching behavior.&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;FULL_REQUEST_CACHING&lt;/b&gt;: All requests are fully cached.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;PER_RESOLVER_CACHING&lt;/b&gt;: Individual resolvers that you specify are cached.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonProperty("apiCachingBehavior")
    public CreateApiCacheRequestBodyApiCachingBehaviorEnum apiCachingBehavior;
    public CreateApiCacheRequestBody withApiCachingBehavior(CreateApiCacheRequestBodyApiCachingBehaviorEnum apiCachingBehavior) {
        this.apiCachingBehavior = apiCachingBehavior;
        return this;
    }
    
    /**
     * At-rest encryption flag for cache. You cannot update this setting after creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("atRestEncryptionEnabled")
    public Boolean atRestEncryptionEnabled;
    public CreateApiCacheRequestBody withAtRestEncryptionEnabled(Boolean atRestEncryptionEnabled) {
        this.atRestEncryptionEnabled = atRestEncryptionEnabled;
        return this;
    }
    
    /**
     * Transit encryption flag when connecting to cache. You cannot update this setting after creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transitEncryptionEnabled")
    public Boolean transitEncryptionEnabled;
    public CreateApiCacheRequestBody withTransitEncryptionEnabled(Boolean transitEncryptionEnabled) {
        this.transitEncryptionEnabled = transitEncryptionEnabled;
        return this;
    }
    
    /**
     * &lt;p&gt;TTL in seconds for cache entries.&lt;/p&gt; &lt;p&gt;Valid values are 1\u20133,600 seconds.&lt;/p&gt;
     */
    @JsonProperty("ttl")
    public Long ttl;
    public CreateApiCacheRequestBody withTtl(Long ttl) {
        this.ttl = ttl;
        return this;
    }
    
    /**
     * &lt;p&gt;The cache instance type. Valid values are &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;SMALL&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;MEDIUM&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;LARGE&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;XLARGE&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;LARGE_2X&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;LARGE_4X&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;LARGE_8X&lt;/code&gt; (not available in all regions)&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;code&gt;LARGE_12X&lt;/code&gt; &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Historically, instance types were identified by an EC2-style value. As of July 2020, this is deprecated, and the generic identifiers above should be used.&lt;/p&gt; &lt;p&gt;The following legacy instance types are available, but their use is discouraged:&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;T2_SMALL&lt;/b&gt;: A t2.small instance type.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;T2_MEDIUM&lt;/b&gt;: A t2.medium instance type.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;R4_LARGE&lt;/b&gt;: A r4.large instance type.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;R4_XLARGE&lt;/b&gt;: A r4.xlarge instance type.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;R4_2XLARGE&lt;/b&gt;: A r4.2xlarge instance type.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;R4_4XLARGE&lt;/b&gt;: A r4.4xlarge instance type.&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt; &lt;b&gt;R4_8XLARGE&lt;/b&gt;: A r4.8xlarge instance type.&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
     */
    @JsonProperty("type")
    public CreateApiCacheRequestBodyTypeEnum type;
    public CreateApiCacheRequestBody withType(CreateApiCacheRequestBodyTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
