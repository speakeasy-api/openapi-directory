// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ListenerTLSModeEnum string

const (
	ListenerTLSModeEnumStrict     ListenerTLSModeEnum = "STRICT"
	ListenerTLSModeEnumPermissive ListenerTLSModeEnum = "PERMISSIVE"
	ListenerTLSModeEnumDisabled   ListenerTLSModeEnum = "DISABLED"
)

func (e ListenerTLSModeEnum) ToPointer() *ListenerTLSModeEnum {
	return &e
}

func (e *ListenerTLSModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STRICT":
		fallthrough
	case "PERMISSIVE":
		fallthrough
	case "DISABLED":
		*e = ListenerTLSModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListenerTLSModeEnum: %v", v)
	}
}
