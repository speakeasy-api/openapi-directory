// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ListNotificationRulesFilterNameEnum string

const (
	ListNotificationRulesFilterNameEnumEventTypeID   ListNotificationRulesFilterNameEnum = "EVENT_TYPE_ID"
	ListNotificationRulesFilterNameEnumCreatedBy     ListNotificationRulesFilterNameEnum = "CREATED_BY"
	ListNotificationRulesFilterNameEnumResource      ListNotificationRulesFilterNameEnum = "RESOURCE"
	ListNotificationRulesFilterNameEnumTargetAddress ListNotificationRulesFilterNameEnum = "TARGET_ADDRESS"
)

func (e ListNotificationRulesFilterNameEnum) ToPointer() *ListNotificationRulesFilterNameEnum {
	return &e
}

func (e *ListNotificationRulesFilterNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EVENT_TYPE_ID":
		fallthrough
	case "CREATED_BY":
		fallthrough
	case "RESOURCE":
		fallthrough
	case "TARGET_ADDRESS":
		*e = ListNotificationRulesFilterNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListNotificationRulesFilterNameEnum: %v", v)
	}
}
