/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface } from "./googlecloudbaremetalsolutionv2servernetworktemplatelogicalinterface";
import { Expose, Type } from "class-transformer";

/**
 * Network template.
 */
export class ServerNetworkTemplate extends SpeakeasyBase {
  /**
   * Instance types this template is applicable to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "applicableInstanceTypes" })
  applicableInstanceTypes?: string[];

  /**
   * Logical interfaces.
   */
  @SpeakeasyMetadata({
    elemType:
      GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface,
  })
  @Expose({ name: "logicalInterfaces" })
  @Type(
    () => GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface
  )
  logicalInterfaces?: GoogleCloudBaremetalsolutionV2ServerNetworkTemplateLogicalInterface[];

  /**
   * Output only. Template's unique name. The full resource name follows the pattern: `projects/{project}/locations/{location}/serverNetworkTemplate/{server_network_template}` Generally, the {server_network_template} follows the syntax of "bond" or "nic".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}
