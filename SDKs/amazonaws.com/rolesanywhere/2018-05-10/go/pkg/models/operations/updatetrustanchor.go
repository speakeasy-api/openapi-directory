// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateTrustAnchorRequestBodySource - The trust anchor type and its related certificate data.
type UpdateTrustAnchorRequestBodySource struct {
	SourceData *shared.SourceData          `json:"sourceData,omitempty"`
	SourceType *shared.TrustAnchorTypeEnum `json:"sourceType,omitempty"`
}

type UpdateTrustAnchorRequestBody struct {
	// The name of the trust anchor.
	Name *string `json:"name,omitempty"`
	// The trust anchor type and its related certificate data.
	Source *UpdateTrustAnchorRequestBodySource `json:"source,omitempty"`
}

type UpdateTrustAnchorRequest struct {
	RequestBody       UpdateTrustAnchorRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The unique identifier of the trust anchor.
	TrustAnchorID string `pathParam:"style=simple,explode=false,name=trustAnchorId"`
}

type UpdateTrustAnchorResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	StatusCode            int
	RawResponse           *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	TrustAnchorDetailResponse *shared.TrustAnchorDetailResponse
	// ValidationException
	ValidationException interface{}
}
