import dataclasses
from datetime import date, datetime
from marshmallow import fields
import dateutil.parser
from typing import Any,Optional
from enum import Enum
from dataclasses_json import dataclass_json
from sdk import utils


@dataclasses.dataclass
class UpdateNetworkApplianceSecurityMalwarePathParams:
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})
    

@dataclass_json
@dataclasses.dataclass
class UpdateNetworkApplianceSecurityMalwareRequestBodyAllowedFiles:
    comment: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.field_name('comment') }})
    sha256: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.field_name('sha256') }})
    

@dataclass_json
@dataclasses.dataclass
class UpdateNetworkApplianceSecurityMalwareRequestBodyAllowedUrls:
    comment: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.field_name('comment') }})
    url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.field_name('url') }})
    
class UpdateNetworkApplianceSecurityMalwareRequestBodyModeEnum(str, Enum):
    ENABLED = "enabled"
    DISABLED = "disabled"


@dataclass_json
@dataclasses.dataclass
class UpdateNetworkApplianceSecurityMalwareRequestBody:
    mode: UpdateNetworkApplianceSecurityMalwareRequestBodyModeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.field_name('mode') }})
    allowed_files: Optional[list[UpdateNetworkApplianceSecurityMalwareRequestBodyAllowedFiles]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('allowedFiles') }})
    allowed_urls: Optional[list[UpdateNetworkApplianceSecurityMalwareRequestBodyAllowedUrls]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('allowedUrls') }})
    

@dataclasses.dataclass
class UpdateNetworkApplianceSecurityMalwareRequest:
    path_params: UpdateNetworkApplianceSecurityMalwarePathParams = dataclasses.field()
    request: UpdateNetworkApplianceSecurityMalwareRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    

@dataclasses.dataclass
class UpdateNetworkApplianceSecurityMalwareResponse:
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    update_network_appliance_security_malware_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    
