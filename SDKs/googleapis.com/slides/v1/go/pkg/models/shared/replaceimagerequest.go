// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ReplaceImageRequestImageReplaceMethodEnum - The replacement method.
type ReplaceImageRequestImageReplaceMethodEnum string

const (
	ReplaceImageRequestImageReplaceMethodEnumImageReplaceMethodUnspecified ReplaceImageRequestImageReplaceMethodEnum = "IMAGE_REPLACE_METHOD_UNSPECIFIED"
	ReplaceImageRequestImageReplaceMethodEnumCenterInside                  ReplaceImageRequestImageReplaceMethodEnum = "CENTER_INSIDE"
	ReplaceImageRequestImageReplaceMethodEnumCenterCrop                    ReplaceImageRequestImageReplaceMethodEnum = "CENTER_CROP"
)

func (e *ReplaceImageRequestImageReplaceMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "IMAGE_REPLACE_METHOD_UNSPECIFIED":
		fallthrough
	case "CENTER_INSIDE":
		fallthrough
	case "CENTER_CROP":
		*e = ReplaceImageRequestImageReplaceMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReplaceImageRequestImageReplaceMethodEnum: %s", s)
	}
}

// ReplaceImageRequest - Replaces an existing image with a new image. Replacing an image removes some image effects from the existing image.
type ReplaceImageRequest struct {
	// The ID of the existing image that will be replaced. The ID can be retrieved from the response of a get request.
	ImageObjectID *string `json:"imageObjectId,omitempty"`
	// The replacement method.
	ImageReplaceMethod *ReplaceImageRequestImageReplaceMethodEnum `json:"imageReplaceMethod,omitempty"`
	// The image URL. The image is fetched once at insertion time and a copy is stored for display inside the presentation. Images must be less than 50MB, cannot exceed 25 megapixels, and must be in PNG, JPEG, or GIF format. The provided URL can't surpass 2 KB in length. The URL is saved with the image, and exposed through the Image.source_url field.
	URL *string `json:"url,omitempty"`
}
