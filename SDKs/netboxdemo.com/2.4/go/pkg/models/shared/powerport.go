// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PowerPortConnectionStatusEnum string

const (
	PowerPortConnectionStatusEnumFalse PowerPortConnectionStatusEnum = "false"
	PowerPortConnectionStatusEnumTrue  PowerPortConnectionStatusEnum = "true"
)

func (e *PowerPortConnectionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "false":
		fallthrough
	case "true":
		*e = PowerPortConnectionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PowerPortConnectionStatusEnum: %s", s)
	}
}

type PowerPort struct {
	ConnectionStatus *PowerPortConnectionStatusEnum `json:"connection_status,omitempty"`
	Device           NestedDevice                   `json:"device"`
	ID               *int64                         `json:"id,omitempty"`
	Name             string                         `json:"name"`
	PowerOutlet      *NestedPowerOutlet             `json:"power_outlet,omitempty"`
	Tags             []string                       `json:"tags,omitempty"`
}
