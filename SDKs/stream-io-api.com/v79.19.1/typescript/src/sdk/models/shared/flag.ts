/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Contains information about flagged user or message
 */
export class Flag extends SpeakeasyBase {
  /**
   * Date of the approval
   */
  @SpeakeasyMetadata()
  @Expose({ name: "approved_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  approvedAt?: Date;

  /**
   * Date/time of creation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "created_by_automod" })
  createdByAutomod: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "details" })
  details?: Record<string, any>;

  /**
   * Date of the rejection
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rejected_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  rejectedAt?: Date;

  /**
   * Date of the review
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reviewed_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  reviewedAt?: Date;

  /**
   * Represents any chat message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_message" })
  targetMessage?: Record<string, any>;

  /**
   * ID of flagged message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_message_id" })
  targetMessageId?: string;

  /**
   * Represents chat user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_user" })
  targetUser?: Record<string, any>;

  /**
   * Date/time of the last update
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  /**
   * Represents chat user
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user?: Record<string, any>;
}
