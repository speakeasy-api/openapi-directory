// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type HaArchitectureEnum string

const (
	HaArchitectureEnumMultiSite        HaArchitectureEnum = "MultiSite"
	HaArchitectureEnumWarmStandby      HaArchitectureEnum = "WarmStandby"
	HaArchitectureEnumPilotLight       HaArchitectureEnum = "PilotLight"
	HaArchitectureEnumBackupAndRestore HaArchitectureEnum = "BackupAndRestore"
	HaArchitectureEnumNoRecoveryPlan   HaArchitectureEnum = "NoRecoveryPlan"
)

func (e HaArchitectureEnum) ToPointer() *HaArchitectureEnum {
	return &e
}

func (e *HaArchitectureEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MultiSite":
		fallthrough
	case "WarmStandby":
		fallthrough
	case "PilotLight":
		fallthrough
	case "BackupAndRestore":
		fallthrough
	case "NoRecoveryPlan":
		*e = HaArchitectureEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HaArchitectureEnum: %v", v)
	}
}
