/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { UserImportJobStatusTypeEnum } from "./userimportjobstatustypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * The user import job type.
 */
export class UserImportJobType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CloudWatchLogsRoleArn" })
  cloudWatchLogsRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CompletionDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  completionDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CompletionMessage" })
  completionMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "FailedUsers" })
  failedUsers?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ImportedUsers" })
  importedUsers?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "JobId" })
  jobId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "JobName" })
  jobName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PreSignedUrl" })
  preSignedUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SkippedUsers" })
  skippedUsers?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "StartDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: UserImportJobStatusTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "UserPoolId" })
  userPoolId?: string;
}
