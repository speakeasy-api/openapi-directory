<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GetOpenIDConfigResponse - GetOpenIDConfigResponse is an OIDC discovery document for the cluster. See the OpenID Connect Discovery 1.0 specification for details.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GetOpenIDConfigResponse
{
    /**
     * RFC-2616: cache control support
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\HttpCacheControlResponseHeader $cacheHeader
     */
	#[\JMS\Serializer\Annotation\SerializedName('cacheHeader')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\HttpCacheControlResponseHeader')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?HttpCacheControlResponseHeader $cacheHeader = null;
    
    /**
     * Supported claims.
     * 
     * @var ?array<string> $claimsSupported
     */
	#[\JMS\Serializer\Annotation\SerializedName('claims_supported')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $claimsSupported = null;
    
    /**
     * Supported grant types.
     * 
     * @var ?array<string> $grantTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('grant_types')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $grantTypes = null;
    
    /**
     * supported ID Token signing Algorithms.
     * 
     * @var ?array<string> $idTokenSigningAlgValuesSupported
     */
	#[\JMS\Serializer\Annotation\SerializedName('id_token_signing_alg_values_supported')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $idTokenSigningAlgValuesSupported = null;
    
    /**
     * OIDC Issuer.
     * 
     * @var ?string $issuer
     */
	#[\JMS\Serializer\Annotation\SerializedName('issuer')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $issuer = null;
    
    /**
     * JSON Web Key uri.
     * 
     * @var ?string $jwksUri
     */
	#[\JMS\Serializer\Annotation\SerializedName('jwks_uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $jwksUri = null;
    
    /**
     * Supported response types.
     * 
     * @var ?array<string> $responseTypesSupported
     */
	#[\JMS\Serializer\Annotation\SerializedName('response_types_supported')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $responseTypesSupported = null;
    
    /**
     * Supported subject types.
     * 
     * @var ?array<string> $subjectTypesSupported
     */
	#[\JMS\Serializer\Annotation\SerializedName('subject_types_supported')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $subjectTypesSupported = null;
    
	public function __construct()
	{
		$this->cacheHeader = null;
		$this->claimsSupported = null;
		$this->grantTypes = null;
		$this->idTokenSigningAlgValuesSupported = null;
		$this->issuer = null;
		$this->jwksUri = null;
		$this->responseTypesSupported = null;
		$this->subjectTypesSupported = null;
	}
}
