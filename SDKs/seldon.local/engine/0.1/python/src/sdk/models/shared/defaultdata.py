"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import tensor as shared_tensor
from ..shared import tensorflowtensorproto as shared_tensorflowtensorproto
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DefaultData:
    
    names: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('names'), 'exclude': lambda f: f is None }})  
    ndarray: Optional[list[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ndarray'), 'exclude': lambda f: f is None }})  
    tensor: Optional[shared_tensor.Tensor] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tensor'), 'exclude': lambda f: f is None }})  
    tftensor: Optional[shared_tensorflowtensorproto.TensorflowTensorProto] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tftensor'), 'exclude': lambda f: f is None }})
    r"""Protocol buffer representing a tensor."""  
    