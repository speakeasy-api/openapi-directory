/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * JobStatus - JobStatus represents the current state of a Job.
 */
public class JobStatus {
    /**
     * Optional. The number of actively running instances. +optional
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Integer active;
    public JobStatus withActive(Integer active) {
        this.active = active;
        return this;
    }
    
    /**
     * Optional. Represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. +optional
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("completionTime")
    public String completionTime;
    public JobStatus withCompletionTime(String completionTime) {
        this.completionTime = completionTime;
        return this;
    }
    
    /**
     * Optional. The latest available observations of a job's current state. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/ +optional
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conditions")
    public JobCondition[] conditions;
    public JobStatus withConditions(JobCondition[] conditions) {
        this.conditions = conditions;
        return this;
    }
    
    /**
     * Optional. The number of instances which reached phase Failed. +optional
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failed")
    public Integer failed;
    public JobStatus withFailed(Integer failed) {
        this.failed = failed;
        return this;
    }
    
    /**
     * Optional. ImageDigest holds the resolved digest for the image specified within .Spec.Template.Spec.Container.Image. The digest is resolved during the creation of the Job. This field holds the digest value regardless of whether a tag or digest was originally specified in the Container object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageDigest")
    public String imageDigest;
    public JobStatus withImageDigest(String imageDigest) {
        this.imageDigest = imageDigest;
        return this;
    }
    
    /**
     * Optional. Status of completed, failed, and running instances. +optional
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instances")
    public InstanceStatus[] instances;
    public JobStatus withInstances(InstanceStatus[] instances) {
        this.instances = instances;
        return this;
    }
    
    /**
     * Optional. The 'generation' of the job that was last processed by the controller.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("observedGeneration")
    public Integer observedGeneration;
    public JobStatus withObservedGeneration(Integer observedGeneration) {
        this.observedGeneration = observedGeneration;
        return this;
    }
    
    /**
     * Optional. Represents time when the job was acknowledged by the job controller. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. +optional
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;
    public JobStatus withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * Optional. The number of instances which reached phase Succeeded. +optional
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("succeeded")
    public Integer succeeded;
    public JobStatus withSucceeded(Integer succeeded) {
        this.succeeded = succeeded;
        return this;
    }
    
}
