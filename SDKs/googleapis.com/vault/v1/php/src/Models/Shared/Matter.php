<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Matter - Represents a matter. To work with Vault resources, the account must have the [required Vault privileges] (https://support.google.com/vault/answer/2799699) and access to the matter. To access a matter, the account must have created the matter, have the matter shared with them, or have the **View All Matters** privilege.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Matter
{
    /**
     * An optional description for the matter.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The matter ID, which is generated by the server. Leave blank when creating a matter.
     * 
     * @var ?string $matterId
     */
	#[\JMS\Serializer\Annotation\SerializedName('matterId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $matterId = null;
    
    /**
     * Lists the users and their permission for the matter. Currently there is no programmer defined limit on the number of permissions a matter can have.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\MatterPermission> $matterPermissions
     */
	#[\JMS\Serializer\Annotation\SerializedName('matterPermissions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\MatterPermission>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $matterPermissions = null;
    
    /**
     * The name of the matter.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The state of the matter.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MatterStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\MatterStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MatterStateEnum $state = null;
    
	public function __construct()
	{
		$this->description = null;
		$this->matterId = null;
		$this->matterPermissions = null;
		$this->name = null;
		$this->state = null;
	}
}
