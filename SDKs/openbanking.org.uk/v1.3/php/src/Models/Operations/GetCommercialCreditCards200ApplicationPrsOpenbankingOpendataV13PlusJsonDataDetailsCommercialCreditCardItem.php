<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * GetCommercialCreditCards200ApplicationPrsOpenbankingOpendataV13PlusJsonDataDetailsCommercialCreditCardItem - Commercial Credit Card Item 
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class GetCommercialCreditCards200ApplicationPrsOpenbankingOpendataV13PlusJsonDataDetailsCommercialCreditCardItem
{
    /**
     * Annual Percentage Rate
     * 
     * @var string $aprRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('APRRate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $aprRate;
    
    /**
     * The ability to set separate limts on different cards in one account
     * 
     * @var ?bool $abilityToSetIndividualLimits
     */
	#[\JMS\Serializer\Annotation\SerializedName('AbilityToSetIndividualLimits')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $abilityToSetIndividualLimits = null;
    
    /**
     * Describes whether the account have access to an online tool for reprting on expenditure
     * 
     * @var bool $accessToOnlineDataReportingTool
     */
	#[\JMS\Serializer\Annotation\SerializedName('AccessToOnlineDataReportingTool')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $accessToOnlineDataReportingTool;
    
    /**
     * Allocation rules for repayment
     * 
     * @var ?string $allocationofRepayment
     */
	#[\JMS\Serializer\Annotation\SerializedName('AllocationofRepayment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $allocationofRepayment = null;
    
    /**
     * Details on annual account fee, such as non payable when there is a turnover above a certain sum
     * 
     * @var ?string $annualAccountFeeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('AnnualAccountFeeType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $annualAccountFeeType = null;
    
    /**
     * Standard fee on the card
     * 
     * @var string $annualFeeAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('AnnualFeeAmount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $annualFeeAmount;
    
    /**
     * The period used to define the specific interest rate for balance transfers
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetCommercialCreditCards200ApplicationPrsOpenbankingOpendataV13PlusJsonDataDetailsCommercialCreditCardItemBalanceTransferInterestRatePeriodEnum $balanceTransferInterestRatePeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('BalanceTransferInterestRatePeriod')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetCommercialCreditCards200ApplicationPrsOpenbankingOpendataV13PlusJsonDataDetailsCommercialCreditCardItemBalanceTransferInterestRatePeriodEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetCommercialCreditCards200ApplicationPrsOpenbankingOpendataV13PlusJsonDataDetailsCommercialCreditCardItemBalanceTransferInterestRatePeriodEnum $balanceTransferInterestRatePeriod = null;
    
    /**
     * Balance transfer rate
     * 
     * @var ?string $balanceTransferRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('BalanceTransferRate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $balanceTransferRate = null;
    
    /**
     * Card Scheme Code
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetCommercialCreditCards200ApplicationPrsOpenbankingOpendataV13PlusJsonDataDetailsCommercialCreditCardItemCardSchemeEnum $cardScheme
     */
	#[\JMS\Serializer\Annotation\SerializedName('CardScheme')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetCommercialCreditCards200ApplicationPrsOpenbankingOpendataV13PlusJsonDataDetailsCommercialCreditCardItemCardSchemeEnum>')]
    public GetCommercialCreditCards200ApplicationPrsOpenbankingOpendataV13PlusJsonDataDetailsCommercialCreditCardItemCardSchemeEnum $cardScheme;
    
    /**
     * Cash advance rate
     * 
     * @var string $cashAdvanceRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('CashAdvanceRate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $cashAdvanceRate;
    
    /**
     * Describes whether cash withdrawals are allowed
     * 
     * @var bool $cashWithdrawalsAllowed
     */
	#[\JMS\Serializer\Annotation\SerializedName('CashWithdrawalsAllowed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $cashWithdrawalsAllowed;
    
    /**
     * Percent of cashback on amount spend
     * 
     * @var ?string $cashbackPercent
     */
	#[\JMS\Serializer\Annotation\SerializedName('CashbackPercent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cashbackPercent = null;
    
    /**
     * Percentage fee on convenience cheques
     * 
     * @var ?string $chequeFeePercent
     */
	#[\JMS\Serializer\Annotation\SerializedName('ChequeFeePercent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $chequeFeePercent = null;
    
    /**
     * Describes whether the card account allow convenience cheques
     * 
     * @var bool $convenienceCheque
     */
	#[\JMS\Serializer\Annotation\SerializedName('ConvenienceCheque')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $convenienceCheque;
    
    /**
     * Date of the change if it refers to future terms
     * 
     * @var ?string $dateOfChange
     */
	#[\JMS\Serializer\Annotation\SerializedName('DateOfChange')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dateOfChange = null;
    
    /**
     * Describes how many interest free days are given if the card is fully paid at each term
     * 
     * @var int $daysInterestFreeCreditIfPaymentFull
     */
	#[\JMS\Serializer\Annotation\SerializedName('DaysInterestFreeCreditIfPaymentFull')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $daysInterestFreeCreditIfPaymentFull;
    
    /**
     * The margin added, by certain card issuers, to the scheme rate in order to arrive at the exchange rate qouted as the reference exchange rate to the cardholder
     * 
     * @var string $exchangeRateAdjustment
     */
	#[\JMS\Serializer\Annotation\SerializedName('ExchangeRateAdjustment')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $exchangeRateAdjustment;
    
    /**
     * Percentage fee on a convenince cheques
     * 
     * @var ?string $feesOnCheque
     */
	#[\JMS\Serializer\Annotation\SerializedName('FeesOnCheque')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $feesOnCheque = null;
    
    /**
     * Additional card fee applied to sterling cash withdrawal made abroad
     * 
     * @var ?string $foreignCashFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('ForeignCashFee')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $foreignCashFee = null;
    
    /**
     * Additional card fee rate applied to sterling cash withdrawal made abroad
     * 
     * @var ?string $foreignCashFeeRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('ForeignCashFeeRate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $foreignCashFeeRate = null;
    
    /**
     * Additional card fee applied to sterling retail transactions made abroad
     * 
     * @var ?string $foreignPurchaseFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('ForeignPurchaseFee')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $foreignPurchaseFee = null;
    
    /**
     * Additional card fee rate applied to sterling retail transactions made abroad
     * 
     * @var ?string $foreignPurchaseFeeRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('ForeignPurchaseFeeRate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $foreignPurchaseFeeRate = null;
    
    /**
     * Amount payable for issuing an emergency card
     * 
     * @var string $issuingEmergencyCardsFees
     */
	#[\JMS\Serializer\Annotation\SerializedName('IssuingEmergencyCardsFees')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $issuingEmergencyCardsFees;
    
    /**
     * Describes the length if only a duration is given instead of a date
     * 
     * @var ?int $lengthPromotionalInDays
     */
	#[\JMS\Serializer\Annotation\SerializedName('LengthPromotionalInDays')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $lengthPromotionalInDays = null;
    
    /**
     * The maximum numbers of cards per account
     * 
     * @var ?int $maximumNumberOfCardsPermitted
     */
	#[\JMS\Serializer\Annotation\SerializedName('MaximumNumberOfCardsPermitted')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maximumNumberOfCardsPermitted = null;
    
    /**
     * Minimum Â£500, maximum subject to status
     * 
     * @var string $minimumCreditLimit
     */
	#[\JMS\Serializer\Annotation\SerializedName('MinimumCreditLimit')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $minimumCreditLimit;
    
    /**
     * The minimum lending available
     * 
     * @var ?string $minimumLendingAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('MinimumLendingAmount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $minimumLendingAmount = null;
    
    /**
     * Minimum repayment amount
     * 
     * @var ?string $minimumRepaymentAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('MinimumRepaymentAmount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $minimumRepaymentAmount = null;
    
    /**
     * Minimum repayment as percentage
     * 
     * @var ?string $minimumRepaymentPercentage
     */
	#[\JMS\Serializer\Annotation\SerializedName('MinimumRepaymentPercentage')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $minimumRepaymentPercentage = null;
    
    /**
     * An additional fee applied to certain card cash withdrawals. This fee also applies to cash near fees such as gambling
     * 
     * @var ?string $nonSterlingCashFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('NonSterlingCashFee')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nonSterlingCashFee = null;
    
    /**
     * An additional fee rate applied to certain card cash withdrawals. This fee also applies to cash near fees such as gambling
     * 
     * @var ?string $nonSterlingCashFeeRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('NonSterlingCashFeeRate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nonSterlingCashFeeRate = null;
    
    /**
     * An additional fee applied to certain card retail transactions
     * 
     * @var ?string $nonSterlingPurchaseFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('NonSterlingPurchaseFee')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nonSterlingPurchaseFee = null;
    
    /**
     * An additional fee rate applied to certain card retail transactions
     * 
     * @var ?string $nonSterlingPurchaseFeeRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('NonSterlingPurchaseFeeRate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nonSterlingPurchaseFeeRate = null;
    
    /**
     * A fee applied to all non-Sterling card transactions
     * 
     * @var ?string $nonSterlingTransactionFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('NonSterlingTransactionFee')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nonSterlingTransactionFee = null;
    
    /**
     * A fee rate applied to all non-Sterling card transactions
     * 
     * @var ?string $nonSterlingTransactionFeeRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('NonSterlingTransactionFeeRate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nonSterlingTransactionFeeRate = null;
    
    /**
     * Fee applicable if the card was credited over its limit
     * 
     * @var ?string $overLimitFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('OverLimitFee')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $overLimitFee = null;
    
    /**
     * How many days after statement is the payment expected
     * 
     * @var int $paymentDaysAfterStatement
     */
	#[\JMS\Serializer\Annotation\SerializedName('PaymentDaysAfterStatement')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $paymentDaysAfterStatement;
    
    /**
     * Any payment network fee applied to some or all non-sterling transactions that the card issuer recover directly from the cardholder
     * 
     * @var ?string $paymentSchemeExchangeFee
     */
	#[\JMS\Serializer\Annotation\SerializedName('PaymentSchemeExchangeFee')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentSchemeExchangeFee = null;
    
    /**
     * Any payment network fee rate applied to some or all non-sterling transactions that the card issuer recover directly from the cardholder
     * 
     * @var ?string $paymentSchemeExchangeFeeRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('PaymentSchemeExchangeFeeRate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentSchemeExchangeFeeRate = null;
    
    /**
     * The base exchange rate used in settlement of the transaction between issuer and scheme
     * 
     * @var ?string $paymentSchemeExchangeRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('PaymentSchemeExchangeRate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentSchemeExchangeRate = null;
    
    /**
     * Purchase rate
     * 
     * @var string $purchaseRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('PurchaseRate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $purchaseRate;
    
    /**
     * Repayment frequency
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetCommercialCreditCards200ApplicationPrsOpenbankingOpendataV13PlusJsonDataDetailsCommercialCreditCardItemRepaymentFrequencyEnum $repaymentFrequency
     */
	#[\JMS\Serializer\Annotation\SerializedName('RepaymentFrequency')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetCommercialCreditCards200ApplicationPrsOpenbankingOpendataV13PlusJsonDataDetailsCommercialCreditCardItemRepaymentFrequencyEnum>')]
    public GetCommercialCreditCards200ApplicationPrsOpenbankingOpendataV13PlusJsonDataDetailsCommercialCreditCardItemRepaymentFrequencyEnum $repaymentFrequency;
    
    /**
     * Additional notes
     * 
     * @var ?string $repaymentNotes
     */
	#[\JMS\Serializer\Annotation\SerializedName('RepaymentNotes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $repaymentNotes = null;
    
    /**
     * Describes the start date
     * 
     * @var ?string $startPromotionOrFutureTerms
     */
	#[\JMS\Serializer\Annotation\SerializedName('StartPromotionOrFutureTerms')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startPromotionOrFutureTerms = null;
    
    /**
     * Describes whether there is a statement at account level
     * 
     * @var bool $statementAtAccountLevel
     */
	#[\JMS\Serializer\Annotation\SerializedName('StatementAtAccountLevel')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $statementAtAccountLevel;
    
    /**
     * Describes whether there is a statement at card level
     * 
     * @var bool $statementAtPersonalLevel
     */
	#[\JMS\Serializer\Annotation\SerializedName('StatementAtPersonalLevel')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $statementAtPersonalLevel;
    
    /**
     * Describes the end date
     * 
     * @var ?string $stopPromotionOrFutureTerms
     */
	#[\JMS\Serializer\Annotation\SerializedName('StopPromotionOrFutureTerms')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stopPromotionOrFutureTerms = null;
    
	public function __construct()
	{
		$this->aprRate = "";
		$this->abilityToSetIndividualLimits = null;
		$this->accessToOnlineDataReportingTool = false;
		$this->allocationofRepayment = null;
		$this->annualAccountFeeType = null;
		$this->annualFeeAmount = "";
		$this->balanceTransferInterestRatePeriod = null;
		$this->balanceTransferRate = null;
		$this->cardScheme = \OpenAPI\OpenAPI\Models\Operations\GetCommercialCreditCards200ApplicationPrsOpenbankingOpendataV13PlusJsonDataDetailsCommercialCreditCardItemCardSchemeEnum::CASHCARD;
		$this->cashAdvanceRate = "";
		$this->cashWithdrawalsAllowed = false;
		$this->cashbackPercent = null;
		$this->chequeFeePercent = null;
		$this->convenienceCheque = false;
		$this->dateOfChange = null;
		$this->daysInterestFreeCreditIfPaymentFull = 0;
		$this->exchangeRateAdjustment = "";
		$this->feesOnCheque = null;
		$this->foreignCashFee = null;
		$this->foreignCashFeeRate = null;
		$this->foreignPurchaseFee = null;
		$this->foreignPurchaseFeeRate = null;
		$this->issuingEmergencyCardsFees = "";
		$this->lengthPromotionalInDays = null;
		$this->maximumNumberOfCardsPermitted = null;
		$this->minimumCreditLimit = "";
		$this->minimumLendingAmount = null;
		$this->minimumRepaymentAmount = null;
		$this->minimumRepaymentPercentage = null;
		$this->nonSterlingCashFee = null;
		$this->nonSterlingCashFeeRate = null;
		$this->nonSterlingPurchaseFee = null;
		$this->nonSterlingPurchaseFeeRate = null;
		$this->nonSterlingTransactionFee = null;
		$this->nonSterlingTransactionFeeRate = null;
		$this->overLimitFee = null;
		$this->paymentDaysAfterStatement = 0;
		$this->paymentSchemeExchangeFee = null;
		$this->paymentSchemeExchangeFeeRate = null;
		$this->paymentSchemeExchangeRate = null;
		$this->purchaseRate = "";
		$this->repaymentFrequency = \OpenAPI\OpenAPI\Models\Operations\GetCommercialCreditCards200ApplicationPrsOpenbankingOpendataV13PlusJsonDataDetailsCommercialCreditCardItemRepaymentFrequencyEnum::DAILY;
		$this->repaymentNotes = null;
		$this->startPromotionOrFutureTerms = null;
		$this->statementAtAccountLevel = false;
		$this->statementAtPersonalLevel = false;
		$this->stopPromotionOrFutureTerms = null;
	}
}
