/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorT } from "./error";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A monetary value, such as the price of a shipping label, the insured value of a package, or an account balance.
 *
 * @remarks
 *
 */
export class RatesInformationRateMonetaryValue extends SpeakeasyBase {
  /**
   * The monetary amount, in the specified currency.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: string;
}

/**
 * The possible rate type values
 */
export enum RatesInformationRateRateTypeEnum {
  Check = "check",
  Shipment = "shipment",
}

/**
 * The possible validation status values
 */
export enum RatesInformationRateValidationStatusEnum {
  Valid = "valid",
  Invalid = "invalid",
  HasWarnings = "has_warnings",
  Unknown = "unknown",
}

/**
 * A rate
 */
export class RatesInformationRate extends SpeakeasyBase {
  /**
   * carrier code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "carrier_code" })
  carrierCode: string;

  /**
   * The carrier delivery days
   */
  @SpeakeasyMetadata()
  @Expose({ name: "carrier_delivery_days" })
  carrierDeliveryDays?: string;

  /**
   * carrier friendly name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "carrier_friendly_name" })
  carrierFriendlyName: string;

  /**
   * A string that uniquely identifies the carrier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "carrier_id" })
  carrierId: string;

  /**
   * carrier nickname
   */
  @SpeakeasyMetadata()
  @Expose({ name: "carrier_nickname" })
  carrierNickname: string;

  /**
   * The confirmation amount
   */
  @SpeakeasyMetadata()
  @Expose({ name: "confirmation_amount" })
  @Type(() => RatesInformationRateMonetaryValue)
  confirmationAmount: RatesInformationRateMonetaryValue;

  /**
   * The number of days estimated for delivery, this will show the _actual_ delivery
   *
   * @remarks
   * time if for example, the package gets shipped on a Friday
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "delivery_days" })
  deliveryDays?: number;

  /**
   * The error messages
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_messages" })
  errorMessages: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "estimated_delivery_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  estimatedDeliveryDate?: Date;

  /**
   * Indicates if the rate is guaranteed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "guaranteed_service" })
  guaranteedService: boolean;

  /**
   * The insurance amount
   */
  @SpeakeasyMetadata()
  @Expose({ name: "insurance_amount" })
  @Type(() => RatesInformationRateMonetaryValue)
  insuranceAmount: RatesInformationRateMonetaryValue;

  /**
   * Indicates if the rates been negotiated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "negotiated_rate" })
  negotiatedRate: boolean;

  /**
   * Any other charges associated with this rate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "other_amount" })
  @Type(() => RatesInformationRateMonetaryValue)
  otherAmount: RatesInformationRateMonetaryValue;

  /**
   * package type that this rate was estimated for
   */
  @SpeakeasyMetadata()
  @Expose({ name: "package_type" })
  packageType: string;

  /**
   * A string that uniquely identifies the rate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rate_id" })
  rateId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "rate_type" })
  rateType: RatesInformationRateRateTypeEnum;

  /**
   * service code for the rate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "service_code" })
  serviceCode: string;

  /**
   * service type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "service_type" })
  serviceType: string;

  /**
   * ship date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ship_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  shipDate?: Date;

  /**
   * The shipping amount
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shipping_amount" })
  @Type(() => RatesInformationRateMonetaryValue)
  shippingAmount: RatesInformationRateMonetaryValue;

  /**
   * Tariff and additional taxes associated with an international shipment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tax_amount" })
  @Type(() => RatesInformationRateMonetaryValue)
  taxAmount?: RatesInformationRateMonetaryValue;

  /**
   * Indicates if rate is trackable
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trackable" })
  trackable: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "validation_status" })
  validationStatus: RatesInformationRateValidationStatusEnum;

  /**
   * The warning messages
   */
  @SpeakeasyMetadata()
  @Expose({ name: "warning_messages" })
  warningMessages: string[];

  /**
   * Certain carriers base [their rates](https://blog.stamps.com/2017/09/08/usps-postal-zones/) off of
   *
   * @remarks
   * custom zones that vary depending upon the ship_to and ship_from location
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "zone" })
  zone: number;
}

/**
 * The possible rate response status values
 */
export enum RatesInformationRateResponseStatusEnum {
  Working = "working",
  Completed = "completed",
  Partial = "partial",
  Error = "error",
}

/**
 * A rates information resource
 */
export class RatesInformation extends SpeakeasyBase {
  /**
   * When the rate was created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata({ elemType: ErrorT })
  @Expose({ name: "errors" })
  @Type(() => ErrorT)
  errors?: ErrorT[];

  /**
   * An array of invalid shipment rates
   */
  @SpeakeasyMetadata({ elemType: RatesInformationRate })
  @Expose({ name: "invalid_rates" })
  @Type(() => RatesInformationRate)
  invalidRates?: RatesInformationRate[];

  /**
   * A string that uniquely identifies the rate request
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rate_request_id" })
  rateRequestId?: string;

  /**
   * An array of shipment rates
   */
  @SpeakeasyMetadata({ elemType: RatesInformationRate })
  @Expose({ name: "rates" })
  @Type(() => RatesInformationRate)
  rates?: RatesInformationRate[];

  /**
   * A string that uniquely identifies the shipment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shipment_id" })
  shipmentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: RatesInformationRateResponseStatusEnum;
}
