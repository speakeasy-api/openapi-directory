/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DynamoKeyTypeEnum } from "./dynamokeytypeenum";
import { Expose } from "class-transformer";

/**
 * <p>Describes an action to write to a DynamoDB table.</p> <p>The <code>tableName</code>, <code>hashKeyField</code>, and <code>rangeKeyField</code> values must match the values used when you created the table.</p> <p>The <code>hashKeyValue</code> and <code>rangeKeyvalue</code> fields use a substitution template syntax. These templates provide data at runtime. The syntax is as follows: ${<i>sql-expression</i>}.</p> <p>You can specify any valid expression in a WHERE or SELECT clause, including JSON properties, comparisons, calculations, and functions. For example, the following field uses the third level of the topic:</p> <p> <code>"hashKeyValue": "${topic(3)}"</code> </p> <p>The following field uses the timestamp:</p> <p> <code>"rangeKeyValue": "${timestamp()}"</code> </p>
 */
export class DynamoDBAction extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "hashKeyField" })
  hashKeyField: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hashKeyType" })
  hashKeyType?: DynamoKeyTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "hashKeyValue" })
  hashKeyValue: string;

  @SpeakeasyMetadata()
  @Expose({ name: "operation" })
  operation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payloadField" })
  payloadField?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "rangeKeyField" })
  rangeKeyField?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "rangeKeyType" })
  rangeKeyType?: DynamoKeyTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "rangeKeyValue" })
  rangeKeyValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tableName" })
  tableName: string;
}
