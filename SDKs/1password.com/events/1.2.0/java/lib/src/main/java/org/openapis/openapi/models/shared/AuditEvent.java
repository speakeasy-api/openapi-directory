/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * AuditEvent - A single audit event object
 */
public class AuditEvent {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public AuditEventActionsEnum action;

    public AuditEvent withAction(AuditEventActionsEnum action) {
        this.action = action;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("actor_uuid")
    public String actorUuid;

    public AuditEvent withActorUuid(String actorUuid) {
        this.actorUuid = actorUuid;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aux_id")
    public Long auxId;

    public AuditEvent withAuxId(Long auxId) {
        this.auxId = auxId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aux_info")
    public String auxInfo;

    public AuditEvent withAuxInfo(String auxInfo) {
        this.auxInfo = auxInfo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aux_uuid")
    public String auxUuid;

    public AuditEvent withAuxUuid(String auxUuid) {
        this.auxUuid = auxUuid;
        return this;
    }
    
    /**
     * Geolocation Info about the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public Location location;

    public AuditEvent withLocation(Location location) {
        this.location = location;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("object_type")
    public AuditEventObjectTypesEnum objectType;

    public AuditEvent withObjectType(AuditEventObjectTypesEnum objectType) {
        this.objectType = objectType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("object_uuid")
    public String objectUuid;

    public AuditEvent withObjectUuid(String objectUuid) {
        this.objectUuid = objectUuid;
        return this;
    }
    
    /**
     * Session information gathered about the client
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("session")
    public Session session;

    public AuditEvent withSession(Session session) {
        this.session = session;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timestamp")
    public OffsetDateTime timestamp;

    public AuditEvent withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uuid")
    public String uuid;

    public AuditEvent withUuid(String uuid) {
        this.uuid = uuid;
        return this;
    }
    
    public AuditEvent(){}
}
