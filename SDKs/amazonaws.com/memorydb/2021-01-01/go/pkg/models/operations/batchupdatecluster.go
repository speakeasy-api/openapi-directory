// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// BatchUpdateClusterXAmzTargetEnum
type BatchUpdateClusterXAmzTargetEnum string

const (
	BatchUpdateClusterXAmzTargetEnumAmazonMemoryDbBatchUpdateCluster BatchUpdateClusterXAmzTargetEnum = "AmazonMemoryDB.BatchUpdateCluster"
)

func (e *BatchUpdateClusterXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AmazonMemoryDB.BatchUpdateCluster":
		*e = BatchUpdateClusterXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchUpdateClusterXAmzTargetEnum: %s", s)
	}
}

type BatchUpdateClusterHeaders struct {
	XAmzAlgorithm     *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        BatchUpdateClusterXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type BatchUpdateClusterRequest struct {
	Headers BatchUpdateClusterHeaders
	Request shared.BatchUpdateClusterRequest `request:"mediaType=application/json"`
}

type BatchUpdateClusterResponse struct {
	// Success
	BatchUpdateClusterResponse *shared.BatchUpdateClusterResponse
	ContentType                string
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// ServiceUpdateNotFoundFault
	ServiceUpdateNotFoundFault interface{}
	StatusCode                 int
	RawResponse                *http.Response
}
