/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChannelConnection } from "./channelconnection";
import { Expose, Type } from "class-transformer";

/**
 * The response message for the `ListChannelConnections` method.
 */
export class ListChannelConnectionsResponse extends SpeakeasyBase {
  /**
   * The requested channel connections, up to the number specified in `page_size`.
   */
  @SpeakeasyMetadata({ elemType: ChannelConnection })
  @Expose({ name: "channelConnections" })
  @Type(() => ChannelConnection)
  channelConnections?: ChannelConnection[];

  /**
   * A page token that can be sent to `ListChannelConnections` to request the next page. If this is empty, then there are no more pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * Unreachable resources, if any.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unreachable" })
  unreachable?: string[];
}
