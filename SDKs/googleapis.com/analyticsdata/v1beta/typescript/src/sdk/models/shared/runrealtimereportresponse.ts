/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DimensionHeader } from "./dimensionheader";
import { MetricHeader } from "./metricheader";
import { PropertyQuota } from "./propertyquota";
import { Row } from "./row";
import { Expose, Type } from "class-transformer";

/**
 * The response realtime report table corresponding to a request.
 */
export class RunRealtimeReportResponse extends SpeakeasyBase {
  /**
   * Describes dimension columns. The number of DimensionHeaders and ordering of DimensionHeaders matches the dimensions present in rows.
   */
  @SpeakeasyMetadata({ elemType: DimensionHeader })
  @Expose({ name: "dimensionHeaders" })
  @Type(() => DimensionHeader)
  dimensionHeaders?: DimensionHeader[];

  /**
   * Identifies what kind of resource this message is. This `kind` is always the fixed string "analyticsData#runRealtimeReport". Useful to distinguish between response types in JSON.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * If requested, the maximum values of metrics.
   */
  @SpeakeasyMetadata({ elemType: Row })
  @Expose({ name: "maximums" })
  @Type(() => Row)
  maximums?: Row[];

  /**
   * Describes metric columns. The number of MetricHeaders and ordering of MetricHeaders matches the metrics present in rows.
   */
  @SpeakeasyMetadata({ elemType: MetricHeader })
  @Expose({ name: "metricHeaders" })
  @Type(() => MetricHeader)
  metricHeaders?: MetricHeader[];

  /**
   * If requested, the minimum values of metrics.
   */
  @SpeakeasyMetadata({ elemType: Row })
  @Expose({ name: "minimums" })
  @Type(() => Row)
  minimums?: Row[];

  /**
   * Current state of all quotas for this Analytics Property. If any quota for a property is exhausted, all requests to that property will return Resource Exhausted errors.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "propertyQuota" })
  @Type(() => PropertyQuota)
  propertyQuota?: PropertyQuota;

  /**
   * The total number of rows in the query result. `rowCount` is independent of the number of rows returned in the response and the `limit` request parameter. For example if a query returns 175 rows and includes `limit` of 50 in the API request, the response will contain `rowCount` of 175 but only 50 rows.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rowCount" })
  rowCount?: number;

  /**
   * Rows of dimension value combinations and metric values in the report.
   */
  @SpeakeasyMetadata({ elemType: Row })
  @Expose({ name: "rows" })
  @Type(() => Row)
  rows?: Row[];

  /**
   * If requested, the totaled values of metrics.
   */
  @SpeakeasyMetadata({ elemType: Row })
  @Expose({ name: "totals" })
  @Type(() => Row)
  totals?: Row[];
}
