"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import resourceallocationlistviewmodel as shared_resourceallocationlistviewmodel
from datetime import datetime
from typing import Optional


@dataclasses.dataclass
class GetSetupV1ResourcesIDAllocationsRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""id of resource to list allocations for"""  
    end_date: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'endDate', 'style': 'form', 'explode': True }})
    r"""yyyy-mm-dd, filter on/before endDate"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Page limit default 20, max 100"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Starting row of page, default 0"""  
    start_date: Optional[datetime] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'startDate', 'style': 'form', 'explode': True }})
    r"""yyyy-mm-dd, filter allocations on/after startDate"""  
    

@dataclasses.dataclass
class GetSetupV1ResourcesIDAllocationsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    resource_allocation_list_view_model: Optional[shared_resourceallocationlistviewmodel.ResourceAllocationListViewModel] = dataclasses.field(default=None)
    r"""resource allocation objects"""  
    