// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ModelBillingPeriodEnum - The billingPeriod along with the billingPeriodUnit make up the time between billing cycles
type ModelBillingPeriodEnum string

const (
	ModelBillingPeriodEnumDaily    ModelBillingPeriodEnum = "daily"
	ModelBillingPeriodEnumWeekly   ModelBillingPeriodEnum = "weekly"
	ModelBillingPeriodEnumMonthly  ModelBillingPeriodEnum = "monthly"
	ModelBillingPeriodEnumAnnually ModelBillingPeriodEnum = "annually"
)

func (e *ModelBillingPeriodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "daily":
		fallthrough
	case "weekly":
		fallthrough
	case "monthly":
		fallthrough
	case "annually":
		*e = ModelBillingPeriodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModelBillingPeriodEnum: %s", s)
	}
}

// ModelFeePayerEnum - The payee that will be paying for any payment processing fees
type ModelFeePayerEnum string

const (
	ModelFeePayerEnumDeveloper   ModelFeePayerEnum = "developer"
	ModelFeePayerEnumMarketplace ModelFeePayerEnum = "marketplace"
)

func (e *ModelFeePayerEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "developer":
		fallthrough
	case "marketplace":
		*e = ModelFeePayerEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModelFeePayerEnum: %s", s)
	}
}

// ModelLicenseEnum - The license model type. Single allows a purchase to a single user or organization
type ModelLicenseEnum string

const (
	ModelLicenseEnumSingle ModelLicenseEnum = "single"
)

func (e *ModelLicenseEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "single":
		*e = ModelLicenseEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModelLicenseEnum: %s", s)
	}
}

// ModelSubtypeEnum - The pricing model subtype
type ModelSubtypeEnum string

const (
	ModelSubtypeEnumUsage ModelSubtypeEnum = "usage"
	ModelSubtypeEnumSeat  ModelSubtypeEnum = "seat"
)

func (e *ModelSubtypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "usage":
		fallthrough
	case "seat":
		*e = ModelSubtypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModelSubtypeEnum: %s", s)
	}
}

// ModelTypeEnum - The pricing model type. Free has no cost, single has a one time purchase cost and recurring requires a monthly subscription
type ModelTypeEnum string

const (
	ModelTypeEnumFree      ModelTypeEnum = "free"
	ModelTypeEnumSingle    ModelTypeEnum = "single"
	ModelTypeEnumRecurring ModelTypeEnum = "recurring"
)

func (e *ModelTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "free":
		fallthrough
	case "single":
		fallthrough
	case "recurring":
		*e = ModelTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ModelTypeEnum: %s", s)
	}
}

// Model - The model that describes the cost and pricing for apps
type Model struct {
	// The billingPeriod along with the billingPeriodUnit make up the time between billing cycles
	BillingPeriod *ModelBillingPeriodEnum
	// The billingPeriod along with the billingPeriodUnit make up the time between billing cycles
	BillingPeriodUnit *int64
	// The marketplace commission applied to this app's model multiplied by 100 to include two digits for fractions of a percent
	Commission int64
	// The ISO 4217 currency code for this price
	Currency string
	// A custom JSON object that you can create and attach to this record
	CustomData map[string]interface{}
	// The payee that will be paying for any payment processing fees
	FeePayer ModelFeePayerEnum
	// The license model type. Single allows a purchase to a single user or organization
	License ModelLicenseEnum
	// The id that uniquely identifies this model
	ModelID *string
	// The price of this app in cents
	Price int64
	// The pricing model subtype
	Subtype *ModelSubtypeEnum
	// The maximum number of free trial days available
	Trial int64
	// The pricing model type. Free has no cost, single has a one time purchase cost and recurring requires a monthly subscription
	Type ModelTypeEnum
}
