/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The type of range.
 */
export enum RangeTypeEnum {
  RangeTypeUnspecified = "RANGE_TYPE_UNSPECIFIED",
  FixedRange = "FIXED_RANGE",
  FromStartIndex = "FROM_START_INDEX",
  All = "ALL",
}

/**
 * Specifies a contiguous range of an indexed collection, such as characters in text.
 */
export class Range extends SpeakeasyBase {
  /**
   * The optional zero-based index of the end of the collection. Required for `FIXED_RANGE` ranges.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endIndex" })
  endIndex?: number;

  /**
   * The optional zero-based index of the beginning of the collection. Required for `FIXED_RANGE` and `FROM_START_INDEX` ranges.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startIndex" })
  startIndex?: number;

  /**
   * The type of range.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: RangeTypeEnum;
}
