/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ScimEnterpriseUserResponse - User has been created
 */
public class ScimEnterpriseUserResponse {
    /**
     * Whether the user active in the IdP.
     */
    @JsonProperty("active")
    public Boolean active;

    public ScimEnterpriseUserResponse withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    /**
     * A human-readable name for the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public ScimEnterpriseUserResponse withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The emails for the user.
     */
    @JsonProperty("emails")
    public UserEmailsResponse[] emails;

    public ScimEnterpriseUserResponse withEmails(UserEmailsResponse[] emails) {
        this.emails = emails;
        return this;
    }
    
    /**
     * A unique identifier for the resource as defined by the provisioning client.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("externalId")
    public String externalId;

    public ScimEnterpriseUserResponse withExternalId(String externalId) {
        this.externalId = externalId;
        return this;
    }
    
    /**
     * Provisioned SCIM groups that the user is a member of.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("groups")
    public ScimEnterpriseUserResponseGroups[] groups;

    public ScimEnterpriseUserResponse withGroups(ScimEnterpriseUserResponseGroups[] groups) {
        this.groups = groups;
        return this;
    }
    
    /**
     * The internally generated id for the user object.
     */
    @JsonProperty("id")
    public String id;

    public ScimEnterpriseUserResponse withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The metadata associated with the creation/updates to the user.
     */
    @JsonProperty("meta")
    public Meta meta;

    public ScimEnterpriseUserResponse withMeta(Meta meta) {
        this.meta = meta;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public UserNameResponse name;

    public ScimEnterpriseUserResponse withName(UserNameResponse name) {
        this.name = name;
        return this;
    }
    
    /**
     * The roles assigned to the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("roles")
    public UserRole[] roles;

    public ScimEnterpriseUserResponse withRoles(UserRole[] roles) {
        this.roles = roles;
        return this;
    }
    
    /**
     * The URIs that are used to indicate the namespaces of the SCIM schemas.
     */
    @JsonProperty("schemas")
    public ScimEnterpriseUserResponseSchemasEnum[] schemas;

    public ScimEnterpriseUserResponse withSchemas(ScimEnterpriseUserResponseSchemasEnum[] schemas) {
        this.schemas = schemas;
        return this;
    }
    
    /**
     * The username for the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userName")
    public String userName;

    public ScimEnterpriseUserResponse withUserName(String userName) {
        this.userName = userName;
        return this;
    }
    
    public ScimEnterpriseUserResponse(@JsonProperty("active") Boolean active, @JsonProperty("emails") UserEmailsResponse[] emails, @JsonProperty("id") String id, @JsonProperty("meta") Meta meta, @JsonProperty("schemas") ScimEnterpriseUserResponseSchemasEnum[] schemas) {
        this.active = active;
        this.emails = emails;
        this.id = id;
        this.meta = meta;
        this.schemas = schemas;
  }
}
