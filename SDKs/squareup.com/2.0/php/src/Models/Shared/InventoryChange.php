<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * InventoryChange - Represents a single physical count, inventory, adjustment, or transfer
 * 
 * that is part of the history of inventory changes for a particular
 * [CatalogObject](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogObject) instance.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class InventoryChange
{
    /**
     * Represents a change in state or quantity of product inventory at a
     * 
     * particular time and location.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InventoryAdjustment $adjustment
     */
	#[\JMS\Serializer\Annotation\SerializedName('adjustment')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InventoryAdjustment')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InventoryAdjustment $adjustment = null;
    
    /**
     * Represents the unit used to measure a `CatalogItemVariation` and
     * 
     * specifies the precision for decimal quantities.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CatalogMeasurementUnit $measurementUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('measurement_unit')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CatalogMeasurementUnit')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CatalogMeasurementUnit $measurementUnit = null;
    
    /**
     * The ID of the [CatalogMeasurementUnit](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogMeasurementUnit) object representing the catalog measurement unit associated with the inventory change.
     * 
     * @var ?string $measurementUnitId
     */
	#[\JMS\Serializer\Annotation\SerializedName('measurement_unit_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $measurementUnitId = null;
    
    /**
     * Represents the quantity of an item variation that is physically present
     * 
     * at a specific location, verified by a seller or a seller's employee. For example,
     * a physical count might come from an employee counting the item variations on
     * hand or from syncing with an external system.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InventoryPhysicalCount $physicalCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('physical_count')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InventoryPhysicalCount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InventoryPhysicalCount $physicalCount = null;
    
    /**
     * Represents the transfer of a quantity of product inventory at a
     * 
     * particular time from one location to another.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InventoryTransfer $transfer
     */
	#[\JMS\Serializer\Annotation\SerializedName('transfer')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InventoryTransfer')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InventoryTransfer $transfer = null;
    
    /**
     * Indicates how the inventory change is applied. See
     * 
     * [InventoryChangeType](https://developer.squareup.com/reference/square_2021-08-18/enums/InventoryChangeType) for all possible values.
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->adjustment = null;
		$this->measurementUnit = null;
		$this->measurementUnitId = null;
		$this->physicalCount = null;
		$this->transfer = null;
		$this->type = null;
	}
}
