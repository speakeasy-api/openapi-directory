// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CertificateStateEnum string

const (
	CertificateStateEnumRegistering      CertificateStateEnum = "Registering"
	CertificateStateEnumRegistered       CertificateStateEnum = "Registered"
	CertificateStateEnumRegisterFailed   CertificateStateEnum = "RegisterFailed"
	CertificateStateEnumDeregistering    CertificateStateEnum = "Deregistering"
	CertificateStateEnumDeregistered     CertificateStateEnum = "Deregistered"
	CertificateStateEnumDeregisterFailed CertificateStateEnum = "DeregisterFailed"
)

func (e *CertificateStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Registering":
		fallthrough
	case "Registered":
		fallthrough
	case "RegisterFailed":
		fallthrough
	case "Deregistering":
		fallthrough
	case "Deregistered":
		fallthrough
	case "DeregisterFailed":
		*e = CertificateStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CertificateStateEnum: %s", s)
	}
}
