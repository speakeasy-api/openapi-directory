/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Optionally choose a specific transmission method for the payment
 */
export enum PaymentInstructionV3TransmissionTypeEnum {
  SameDayAch = "SAME_DAY_ACH",
  Wire = "WIRE",
  Ach = "ACH",
  Local = "LOCAL",
  Swift = "SWIFT",
}

/**
 * Instruction for creating a payment
 */
export class PaymentInstructionV3 extends SpeakeasyBase {
  /**
   * <p>Amount to send to Payee</p>
   *
   * @remarks
   * <p>The maximum payment amount is dependent on the currency</p>
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount: number;

  /**
   * Valid ISO 4217 3 letter currency code. See the <a href="https://www.iso.org/iso-4217-currency-codes.html" target="_blank" a>ISO specification</a> for details.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currency" })
  currency: string;

  /**
   * <p>Any value here will override the memo value in the parent payout</p>
   *
   * @remarks
   * <p>This should be the reference field on the statement seen by the payee (but not via ACH)</p>
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentMemo" })
  paymentMemo?: string;

  /**
   * <p>Metadata about the payment that may be relevant to the specific rails or remote system making the payout</p>
   *
   * @remarks
   * <p>The structure of the data will be dictated by the requirements of the payment rails</p>
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paymentMetadata" })
  paymentMetadata?: string;

  /**
   * A reference identifier for the payor for the given payee payment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "payorPaymentId" })
  payorPaymentId?: string;

  /**
   * Your identifier for the payee
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remoteId" })
  remoteId: string;

  /**
   * <p>The identifier for the remote payments system if not Velo</p>
   *
   * @remarks
   * <p>Should only be used after consultation with Velo Payments</p>
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "remoteSystemId" })
  remoteSystemId?: string;

  /**
   * Must match a valid source account name belonging to the payor
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceAccountName" })
  sourceAccountName: string;

  /**
   * Optionally choose a specific transmission method for the payment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transmissionType" })
  transmissionType?: PaymentInstructionV3TransmissionTypeEnum;
}
