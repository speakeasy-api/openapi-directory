"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DescribeSecurityGroupsResult = exports.DescribeSecurityGroupsResultSecurityGroups = exports.DescribeSecurityGroupsResultSecurityGroupsTags = exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgress = exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressUserIdGroupPairs = exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressPrefixListIds = exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpv6Ranges = exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpRanges = exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissions = exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissionsUserIdGroupPairs = exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissionsPrefixListIds = exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpv6Ranges = exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpRanges = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * Describes an IPv4 range.
 */
var DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpRanges = /** @class */ (function (_super) {
    __extends(DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpRanges, _super);
    function DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpRanges() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpRanges.prototype, "cidrIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpRanges.prototype, "description", void 0);
    return DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpRanges;
}(utils_1.SpeakeasyBase));
exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpRanges = DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpRanges;
/**
 * [EC2-VPC only] Describes an IPv6 range.
 */
var DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpv6Ranges = /** @class */ (function (_super) {
    __extends(DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpv6Ranges, _super);
    function DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpv6Ranges() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpv6Ranges.prototype, "cidrIpv6", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpv6Ranges.prototype, "description", void 0);
    return DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpv6Ranges;
}(utils_1.SpeakeasyBase));
exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpv6Ranges = DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpv6Ranges;
/**
 * Describes a prefix list ID.
 */
var DescribeSecurityGroupsResultSecurityGroupsIpPermissionsPrefixListIds = /** @class */ (function (_super) {
    __extends(DescribeSecurityGroupsResultSecurityGroupsIpPermissionsPrefixListIds, _super);
    function DescribeSecurityGroupsResultSecurityGroupsIpPermissionsPrefixListIds() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsPrefixListIds.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsPrefixListIds.prototype, "prefixListId", void 0);
    return DescribeSecurityGroupsResultSecurityGroupsIpPermissionsPrefixListIds;
}(utils_1.SpeakeasyBase));
exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissionsPrefixListIds = DescribeSecurityGroupsResultSecurityGroupsIpPermissionsPrefixListIds;
/**
 * <p>Describes a security group and Amazon Web Services account ID pair.</p> <note> <p>We are retiring EC2-Classic. We recommend that you migrate from EC2-Classic to a VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </note>
 */
var DescribeSecurityGroupsResultSecurityGroupsIpPermissionsUserIdGroupPairs = /** @class */ (function (_super) {
    __extends(DescribeSecurityGroupsResultSecurityGroupsIpPermissionsUserIdGroupPairs, _super);
    function DescribeSecurityGroupsResultSecurityGroupsIpPermissionsUserIdGroupPairs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsUserIdGroupPairs.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsUserIdGroupPairs.prototype, "groupId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsUserIdGroupPairs.prototype, "groupName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsUserIdGroupPairs.prototype, "peeringStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsUserIdGroupPairs.prototype, "userId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsUserIdGroupPairs.prototype, "vpcId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsUserIdGroupPairs.prototype, "vpcPeeringConnectionId", void 0);
    return DescribeSecurityGroupsResultSecurityGroupsIpPermissionsUserIdGroupPairs;
}(utils_1.SpeakeasyBase));
exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissionsUserIdGroupPairs = DescribeSecurityGroupsResultSecurityGroupsIpPermissionsUserIdGroupPairs;
/**
 * Describes a set of permissions for a security group rule.
 */
var DescribeSecurityGroupsResultSecurityGroupsIpPermissions = /** @class */ (function (_super) {
    __extends(DescribeSecurityGroupsResultSecurityGroupsIpPermissions, _super);
    function DescribeSecurityGroupsResultSecurityGroupsIpPermissions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissions.prototype, "fromPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissions.prototype, "ipProtocol", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpRanges,
        }),
        __metadata("design:type", Array)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissions.prototype, "ipRanges", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsIpv6Ranges,
        }),
        __metadata("design:type", Array)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissions.prototype, "ipv6Ranges", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsPrefixListIds,
        }),
        __metadata("design:type", Array)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissions.prototype, "prefixListIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissions.prototype, "toPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsUserIdGroupPairs,
        }),
        __metadata("design:type", Array)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissions.prototype, "userIdGroupPairs", void 0);
    return DescribeSecurityGroupsResultSecurityGroupsIpPermissions;
}(utils_1.SpeakeasyBase));
exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissions = DescribeSecurityGroupsResultSecurityGroupsIpPermissions;
/**
 * Describes an IPv4 range.
 */
var DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpRanges = /** @class */ (function (_super) {
    __extends(DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpRanges, _super);
    function DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpRanges() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpRanges.prototype, "cidrIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpRanges.prototype, "description", void 0);
    return DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpRanges;
}(utils_1.SpeakeasyBase));
exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpRanges = DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpRanges;
/**
 * [EC2-VPC only] Describes an IPv6 range.
 */
var DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpv6Ranges = /** @class */ (function (_super) {
    __extends(DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpv6Ranges, _super);
    function DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpv6Ranges() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpv6Ranges.prototype, "cidrIpv6", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpv6Ranges.prototype, "description", void 0);
    return DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpv6Ranges;
}(utils_1.SpeakeasyBase));
exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpv6Ranges = DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpv6Ranges;
/**
 * Describes a prefix list ID.
 */
var DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressPrefixListIds = /** @class */ (function (_super) {
    __extends(DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressPrefixListIds, _super);
    function DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressPrefixListIds() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressPrefixListIds.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressPrefixListIds.prototype, "prefixListId", void 0);
    return DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressPrefixListIds;
}(utils_1.SpeakeasyBase));
exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressPrefixListIds = DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressPrefixListIds;
/**
 * <p>Describes a security group and Amazon Web Services account ID pair.</p> <note> <p>We are retiring EC2-Classic. We recommend that you migrate from EC2-Classic to a VPC. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-migrate.html">Migrate from EC2-Classic to a VPC</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.</p> </note>
 */
var DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressUserIdGroupPairs = /** @class */ (function (_super) {
    __extends(DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressUserIdGroupPairs, _super);
    function DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressUserIdGroupPairs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressUserIdGroupPairs.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressUserIdGroupPairs.prototype, "groupId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressUserIdGroupPairs.prototype, "groupName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressUserIdGroupPairs.prototype, "peeringStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressUserIdGroupPairs.prototype, "userId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressUserIdGroupPairs.prototype, "vpcId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressUserIdGroupPairs.prototype, "vpcPeeringConnectionId", void 0);
    return DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressUserIdGroupPairs;
}(utils_1.SpeakeasyBase));
exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressUserIdGroupPairs = DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressUserIdGroupPairs;
/**
 * Describes a set of permissions for a security group rule.
 */
var DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgress = /** @class */ (function (_super) {
    __extends(DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgress, _super);
    function DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgress() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgress.prototype, "fromPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgress.prototype, "ipProtocol", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpRanges,
        }),
        __metadata("design:type", Array)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgress.prototype, "ipRanges", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressIpv6Ranges,
        }),
        __metadata("design:type", Array)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgress.prototype, "ipv6Ranges", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressPrefixListIds,
        }),
        __metadata("design:type", Array)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgress.prototype, "prefixListIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgress.prototype, "toPort", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgressUserIdGroupPairs,
        }),
        __metadata("design:type", Array)
    ], DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgress.prototype, "userIdGroupPairs", void 0);
    return DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgress;
}(utils_1.SpeakeasyBase));
exports.DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgress = DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgress;
/**
 * Describes a tag.
 */
var DescribeSecurityGroupsResultSecurityGroupsTags = /** @class */ (function (_super) {
    __extends(DescribeSecurityGroupsResultSecurityGroupsTags, _super);
    function DescribeSecurityGroupsResultSecurityGroupsTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroupsTags.prototype, "value", void 0);
    return DescribeSecurityGroupsResultSecurityGroupsTags;
}(utils_1.SpeakeasyBase));
exports.DescribeSecurityGroupsResultSecurityGroupsTags = DescribeSecurityGroupsResultSecurityGroupsTags;
/**
 * Describes a security group.
 */
var DescribeSecurityGroupsResultSecurityGroups = /** @class */ (function (_super) {
    __extends(DescribeSecurityGroupsResultSecurityGroups, _super);
    function DescribeSecurityGroupsResultSecurityGroups() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroups.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroups.prototype, "groupId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroups.prototype, "groupName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeSecurityGroupsResultSecurityGroupsIpPermissions,
        }),
        __metadata("design:type", Array)
    ], DescribeSecurityGroupsResultSecurityGroups.prototype, "ipPermissions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeSecurityGroupsResultSecurityGroupsIpPermissionsEgress,
        }),
        __metadata("design:type", Array)
    ], DescribeSecurityGroupsResultSecurityGroups.prototype, "ipPermissionsEgress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroups.prototype, "ownerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeSecurityGroupsResultSecurityGroupsTags,
        }),
        __metadata("design:type", Array)
    ], DescribeSecurityGroupsResultSecurityGroups.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResultSecurityGroups.prototype, "vpcId", void 0);
    return DescribeSecurityGroupsResultSecurityGroups;
}(utils_1.SpeakeasyBase));
exports.DescribeSecurityGroupsResultSecurityGroups = DescribeSecurityGroupsResultSecurityGroups;
/**
 * Success
 */
var DescribeSecurityGroupsResult = /** @class */ (function (_super) {
    __extends(DescribeSecurityGroupsResult, _super);
    function DescribeSecurityGroupsResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeSecurityGroupsResult.prototype, "nextToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DescribeSecurityGroupsResultSecurityGroups }),
        __metadata("design:type", Array)
    ], DescribeSecurityGroupsResult.prototype, "securityGroups", void 0);
    return DescribeSecurityGroupsResult;
}(utils_1.SpeakeasyBase));
exports.DescribeSecurityGroupsResult = DescribeSecurityGroupsResult;
