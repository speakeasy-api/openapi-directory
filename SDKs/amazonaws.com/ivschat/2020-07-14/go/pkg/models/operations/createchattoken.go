// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateChatTokenHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateChatTokenRequestBody struct {
	// Application-provided attributes to encode into the token and attach to a chat session. Map keys and values can contain UTF-8 encoded text. The maximum length of this field is 1 KB total.
	Attributes map[string]string `json:"attributes,omitempty"`
	// Set of capabilities that the user is allowed to perform in the room. Default: None (the capability to view messages is implicitly included in all requests).
	Capabilities []shared.ChatTokenCapabilityEnum `json:"capabilities,omitempty"`
	// Identifier of the room that the client is trying to access. Currently this must be an ARN.
	RoomIdentifier string `json:"roomIdentifier"`
	// Session duration (in minutes), after which the session expires. Default: 60 (1 hour).
	SessionDurationInMinutes *int64 `json:"sessionDurationInMinutes,omitempty"`
	// Application-provided ID that uniquely identifies the user associated with this token. This can be any UTF-8 encoded text.
	UserID string `json:"userId"`
}

type CreateChatTokenRequest struct {
	Headers CreateChatTokenHeaders
	Request CreateChatTokenRequestBody `request:"mediaType=application/json"`
}

type CreateChatTokenResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	CreateChatTokenResponse *shared.CreateChatTokenResponse
	// PendingVerification
	PendingVerification interface{}
	StatusCode          int
	RawResponse         *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ValidationException
	ValidationException interface{}
}
