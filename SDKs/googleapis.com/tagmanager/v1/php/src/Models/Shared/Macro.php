<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Macro - Represents a Google Tag Manager Macro.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Macro
{
    /**
     * GTM Account ID.
     * 
     * @var ?string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountId = null;
    
    /**
     * GTM Container ID.
     * 
     * @var ?string $containerId
     */
	#[\JMS\Serializer\Annotation\SerializedName('containerId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $containerId = null;
    
    /**
     * For mobile containers only: A list of rule IDs for disabling conditional macros; the macro is enabled if one of the enabling rules is true while all the disabling rules are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update
     * 
     * @var ?array<string> $disablingRuleId
     */
	#[\JMS\Serializer\Annotation\SerializedName('disablingRuleId')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $disablingRuleId = null;
    
    /**
     * For mobile containers only: A list of rule IDs for enabling conditional macros; the macro is enabled if one of the enabling rules is true while all the disabling rules are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update
     * 
     * @var ?array<string> $enablingRuleId
     */
	#[\JMS\Serializer\Annotation\SerializedName('enablingRuleId')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $enablingRuleId = null;
    
    /**
     * The fingerprint of the GTM Macro as computed at storage time. This value is recomputed whenever the macro is modified.
     * 
     * @var ?string $fingerprint
     */
	#[\JMS\Serializer\Annotation\SerializedName('fingerprint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fingerprint = null;
    
    /**
     * The Macro ID uniquely identifies the GTM Macro.
     * 
     * @var ?string $macroId
     */
	#[\JMS\Serializer\Annotation\SerializedName('macroId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $macroId = null;
    
    /**
     * Macro display name. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * User notes on how to apply this macro in the container. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update
     * 
     * @var ?string $notes
     */
	#[\JMS\Serializer\Annotation\SerializedName('notes')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notes = null;
    
    /**
     * The macro's parameters. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Parameter> $parameter
     */
	#[\JMS\Serializer\Annotation\SerializedName('parameter')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Parameter>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $parameter = null;
    
    /**
     * Parent folder id.
     * 
     * @var ?string $parentFolderId
     */
	#[\JMS\Serializer\Annotation\SerializedName('parentFolderId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $parentFolderId = null;
    
    /**
     * The end timestamp in milliseconds to schedule a macro. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update
     * 
     * @var ?string $scheduleEndMs
     */
	#[\JMS\Serializer\Annotation\SerializedName('scheduleEndMs')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $scheduleEndMs = null;
    
    /**
     * The start timestamp in milliseconds to schedule a macro. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update
     * 
     * @var ?string $scheduleStartMs
     */
	#[\JMS\Serializer\Annotation\SerializedName('scheduleStartMs')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $scheduleStartMs = null;
    
    /**
     * GTM Macro Type. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->accountId = null;
		$this->containerId = null;
		$this->disablingRuleId = null;
		$this->enablingRuleId = null;
		$this->fingerprint = null;
		$this->macroId = null;
		$this->name = null;
		$this->notes = null;
		$this->parameter = null;
		$this->parentFolderId = null;
		$this->scheduleEndMs = null;
		$this->scheduleStartMs = null;
		$this->type = null;
	}
}
