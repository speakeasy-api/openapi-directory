// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ArtistAPIGetListFieldsEnum - List of optional fields (optional). Possible values are Description, Groups, Members, Names, Tags, WebLinks.
type ArtistAPIGetListFieldsEnum string

const (
	ArtistAPIGetListFieldsEnumNone               ArtistAPIGetListFieldsEnum = "None"
	ArtistAPIGetListFieldsEnumAdditionalNames    ArtistAPIGetListFieldsEnum = "AdditionalNames"
	ArtistAPIGetListFieldsEnumArtistLinks        ArtistAPIGetListFieldsEnum = "ArtistLinks"
	ArtistAPIGetListFieldsEnumArtistLinksReverse ArtistAPIGetListFieldsEnum = "ArtistLinksReverse"
	ArtistAPIGetListFieldsEnumBaseVoicebank      ArtistAPIGetListFieldsEnum = "BaseVoicebank"
	ArtistAPIGetListFieldsEnumDescription        ArtistAPIGetListFieldsEnum = "Description"
	ArtistAPIGetListFieldsEnumMainPicture        ArtistAPIGetListFieldsEnum = "MainPicture"
	ArtistAPIGetListFieldsEnumNames              ArtistAPIGetListFieldsEnum = "Names"
	ArtistAPIGetListFieldsEnumTags               ArtistAPIGetListFieldsEnum = "Tags"
	ArtistAPIGetListFieldsEnumWebLinks           ArtistAPIGetListFieldsEnum = "WebLinks"
)

func (e *ArtistAPIGetListFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AdditionalNames":
		fallthrough
	case "ArtistLinks":
		fallthrough
	case "ArtistLinksReverse":
		fallthrough
	case "BaseVoicebank":
		fallthrough
	case "Description":
		fallthrough
	case "MainPicture":
		fallthrough
	case "Names":
		fallthrough
	case "Tags":
		fallthrough
	case "WebLinks":
		*e = ArtistAPIGetListFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ArtistAPIGetListFieldsEnum: %s", s)
	}
}

// ArtistAPIGetListLangEnum - Content language preference (optional).
type ArtistAPIGetListLangEnum string

const (
	ArtistAPIGetListLangEnumDefault  ArtistAPIGetListLangEnum = "Default"
	ArtistAPIGetListLangEnumJapanese ArtistAPIGetListLangEnum = "Japanese"
	ArtistAPIGetListLangEnumRomaji   ArtistAPIGetListLangEnum = "Romaji"
	ArtistAPIGetListLangEnumEnglish  ArtistAPIGetListLangEnum = "English"
)

func (e *ArtistAPIGetListLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = ArtistAPIGetListLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ArtistAPIGetListLangEnum: %s", s)
	}
}

// ArtistAPIGetListNameMatchModeEnum - Match mode for artist name (optional, defaults to Exact).
type ArtistAPIGetListNameMatchModeEnum string

const (
	ArtistAPIGetListNameMatchModeEnumAuto       ArtistAPIGetListNameMatchModeEnum = "Auto"
	ArtistAPIGetListNameMatchModeEnumPartial    ArtistAPIGetListNameMatchModeEnum = "Partial"
	ArtistAPIGetListNameMatchModeEnumStartsWith ArtistAPIGetListNameMatchModeEnum = "StartsWith"
	ArtistAPIGetListNameMatchModeEnumExact      ArtistAPIGetListNameMatchModeEnum = "Exact"
	ArtistAPIGetListNameMatchModeEnumWords      ArtistAPIGetListNameMatchModeEnum = "Words"
)

func (e *ArtistAPIGetListNameMatchModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Auto":
		fallthrough
	case "Partial":
		fallthrough
	case "StartsWith":
		fallthrough
	case "Exact":
		fallthrough
	case "Words":
		*e = ArtistAPIGetListNameMatchModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ArtistAPIGetListNameMatchModeEnum: %s", s)
	}
}

// ArtistAPIGetListSortEnum - Sort rule (optional, defaults to Name). Possible values are None, Name, AdditionDate, AdditionDateAsc.
type ArtistAPIGetListSortEnum string

const (
	ArtistAPIGetListSortEnumNone            ArtistAPIGetListSortEnum = "None"
	ArtistAPIGetListSortEnumName            ArtistAPIGetListSortEnum = "Name"
	ArtistAPIGetListSortEnumAdditionDate    ArtistAPIGetListSortEnum = "AdditionDate"
	ArtistAPIGetListSortEnumAdditionDateAsc ArtistAPIGetListSortEnum = "AdditionDateAsc"
	ArtistAPIGetListSortEnumReleaseDate     ArtistAPIGetListSortEnum = "ReleaseDate"
	ArtistAPIGetListSortEnumSongCount       ArtistAPIGetListSortEnum = "SongCount"
	ArtistAPIGetListSortEnumSongRating      ArtistAPIGetListSortEnum = "SongRating"
	ArtistAPIGetListSortEnumFollowerCount   ArtistAPIGetListSortEnum = "FollowerCount"
)

func (e *ArtistAPIGetListSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "Name":
		fallthrough
	case "AdditionDate":
		fallthrough
	case "AdditionDateAsc":
		fallthrough
	case "ReleaseDate":
		fallthrough
	case "SongCount":
		fallthrough
	case "SongRating":
		fallthrough
	case "FollowerCount":
		*e = ArtistAPIGetListSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ArtistAPIGetListSortEnum: %s", s)
	}
}

// ArtistAPIGetListStatusEnum - Filter by entry status (optional).
type ArtistAPIGetListStatusEnum string

const (
	ArtistAPIGetListStatusEnumDraft    ArtistAPIGetListStatusEnum = "Draft"
	ArtistAPIGetListStatusEnumFinished ArtistAPIGetListStatusEnum = "Finished"
	ArtistAPIGetListStatusEnumApproved ArtistAPIGetListStatusEnum = "Approved"
	ArtistAPIGetListStatusEnumLocked   ArtistAPIGetListStatusEnum = "Locked"
)

func (e *ArtistAPIGetListStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Draft":
		fallthrough
	case "Finished":
		fallthrough
	case "Approved":
		fallthrough
	case "Locked":
		*e = ArtistAPIGetListStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ArtistAPIGetListStatusEnum: %s", s)
	}
}

type ArtistAPIGetListQueryParams struct {
	// List of advanced filters (optional).
	AdvancedFilters []interface{} `queryParam:"style=form,explode=true,name=advancedFilters"`
	// Allow base voicebanks. If false, only root voicebanks will be allowed. Only affects voice synthesizers that can have base voicebanks.
	AllowBaseVoicebanks *bool `queryParam:"style=form,explode=true,name=allowBaseVoicebanks"`
	// Filtered artist type (optional).
	ArtistTypes *string `queryParam:"style=form,explode=true,name=artistTypes"`
	// Include child tags, if the tags being filtered by have any.
	ChildTags *bool `queryParam:"style=form,explode=true,name=childTags"`
	// List of optional fields (optional). Possible values are Description, Groups, Members, Names, Tags, WebLinks.
	Fields *ArtistAPIGetListFieldsEnum `queryParam:"style=form,explode=true,name=fields"`
	// Filter by user following the artists. By default there is no filtering.
	FollowedByUserID *int `queryParam:"style=form,explode=true,name=followedByUserId"`
	// Whether to load total number of items (optional, default to false).
	GetTotalCount *bool `queryParam:"style=form,explode=true,name=getTotalCount"`
	// Content language preference (optional).
	Lang *ArtistAPIGetListLangEnum `queryParam:"style=form,explode=true,name=lang"`
	// Maximum number of results to be loaded (optional, defaults to 10, maximum of 100).
	MaxResults *int `queryParam:"style=form,explode=true,name=maxResults"`
	// Match mode for artist name (optional, defaults to Exact).
	NameMatchMode *ArtistAPIGetListNameMatchModeEnum `queryParam:"style=form,explode=true,name=nameMatchMode"`
	// Whether the search should prefer accurate matches.
	//             If this is true, entries that match by prefix will be moved first, instead of being sorted alphabetically.
	//             Requires a text query. Does not support pagination.
	//             This is mostly useful for autocomplete boxes.
	PreferAccurateMatches *bool `queryParam:"style=form,explode=true,name=preferAccurateMatches"`
	// Artist name query (optional).
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// Sort rule (optional, defaults to Name). Possible values are None, Name, AdditionDate, AdditionDateAsc.
	Sort *ArtistAPIGetListSortEnum `queryParam:"style=form,explode=true,name=sort"`
	// First item to be retrieved (optional, defaults to 0).
	Start *int `queryParam:"style=form,explode=true,name=start"`
	// Filter by entry status (optional).
	Status *ArtistAPIGetListStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// Filter by tag Id (optional). This filter can be specified multiple times.
	TagID []int `queryParam:"style=form,explode=true,name=tagId"`
	// Filter by tag name (optional).
	TagName []string `queryParam:"style=form,explode=true,name=tagName"`
}

type ArtistAPIGetListRequest struct {
	QueryParams ArtistAPIGetListQueryParams
}

type ArtistAPIGetListResponse struct {
	Body        []byte
	ContentType string
	// OK
	PartialFindResultArtistForAPIContract *shared.PartialFindResultArtistForAPIContract
	StatusCode                            int
	RawResponse                           *http.Response
}
