/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * PutInvoiceType - Container for custom fields of an Invoice object.
 * 
 */
public class PutInvoiceType {
    /**
     * ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationId__NS")
    public String integrationIdNS;
    public PutInvoiceType withIntegrationIdNS(String integrationIdNS) {
        this.integrationIdNS = integrationIdNS;
        return this;
    }
    
    /**
     * Status of the invoice's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IntegrationStatus__NS")
    public String integrationStatusNS;
    public PutInvoiceType withIntegrationStatusNS(String integrationStatusNS) {
        this.integrationStatusNS = integrationStatusNS;
        return this;
    }
    
    /**
     * Date when the invoice was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SyncDate__NS")
    public String syncDateNS;
    public PutInvoiceType withSyncDateNS(String syncDateNS) {
        this.syncDateNS = syncDateNS;
        return this;
    }
    
    /**
     * Whether invoices are automatically picked up for processing in the corresponding payment run.
     * 
     * By default, invoices are automatically picked up for processing in the corresponding payment run.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoPay")
    public Boolean autoPay;
    public PutInvoiceType withAutoPay(Boolean autoPay) {
        this.autoPay = autoPay;
        return this;
    }
    
    /**
     * Additional information related to the invoice that a Zuora user added to the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comments")
    public String comments;
    public PutInvoiceType withComments(String comments) {
        this.comments = comments;
        return this;
    }
    
    /**
     * The date by which the payment for this invoice is due.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("dueDate")
    public LocalDate dueDate;
    public PutInvoiceType withDueDate(LocalDate dueDate) {
        this.dueDate = dueDate;
        return this;
    }
    
    /**
     * The new invoice date of the invoice. The new invoice date cannot fall in a closed accounting period.
     * 
     * You can only specify `invoiceDate` or `dueDate` in one request. Otherwise, an error occurs.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("invoiceDate")
    public LocalDate invoiceDate;
    public PutInvoiceType withInvoiceDate(LocalDate invoiceDate) {
        this.invoiceDate = invoiceDate;
        return this;
    }
    
    /**
     * Container for invoice items, The maximum number of items is 1,000.
     * **Note:** Invoice items can only be updated when Unified Invoice is enabled and the invoice is a standalone invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceItems")
    public PutInvoiceItemType[] invoiceItems;
    public PutInvoiceType withInvoiceItems(PutInvoiceItemType[] invoiceItems) {
        this.invoiceItems = invoiceItems;
        return this;
    }
    
    /**
     * Whether the invoice was transferred to an external accounting system.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferredToAccounting")
    public PutInvoiceTypeTransferredToAccountingEnum transferredToAccounting;
    public PutInvoiceType withTransferredToAccounting(PutInvoiceTypeTransferredToAccountingEnum transferredToAccounting) {
        this.transferredToAccounting = transferredToAccounting;
        return this;
    }
    
}
