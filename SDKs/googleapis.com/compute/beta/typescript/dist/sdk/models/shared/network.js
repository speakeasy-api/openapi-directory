"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Network = exports.NetworkNetworkFirewallPolicyEnforcementOrderEnum = void 0;
var utils_1 = require("../../../internal/utils");
var networkpeering_1 = require("./networkpeering");
var networkroutingconfig_1 = require("./networkroutingconfig");
var class_transformer_1 = require("class-transformer");
/**
 * The network firewall policy enforcement order. Can be either AFTER_CLASSIC_FIREWALL or BEFORE_CLASSIC_FIREWALL. Defaults to AFTER_CLASSIC_FIREWALL if the field is not specified.
 */
var NetworkNetworkFirewallPolicyEnforcementOrderEnum;
(function (NetworkNetworkFirewallPolicyEnforcementOrderEnum) {
    NetworkNetworkFirewallPolicyEnforcementOrderEnum["AfterClassicFirewall"] = "AFTER_CLASSIC_FIREWALL";
    NetworkNetworkFirewallPolicyEnforcementOrderEnum["BeforeClassicFirewall"] = "BEFORE_CLASSIC_FIREWALL";
})(NetworkNetworkFirewallPolicyEnforcementOrderEnum = exports.NetworkNetworkFirewallPolicyEnforcementOrderEnum || (exports.NetworkNetworkFirewallPolicyEnforcementOrderEnum = {}));
/**
 * Represents a VPC Network resource. Networks connect resources to each other and to the internet. For more information, read Virtual Private Cloud (VPC) Network.
 */
var Network = /** @class */ (function (_super) {
    __extends(Network, _super);
    function Network() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IPv4Range" }),
        __metadata("design:type", String)
    ], Network.prototype, "iPv4Range", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "autoCreateSubnetworks" }),
        __metadata("design:type", Boolean)
    ], Network.prototype, "autoCreateSubnetworks", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTimestamp" }),
        __metadata("design:type", String)
    ], Network.prototype, "creationTimestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Network.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enableUlaInternalIpv6" }),
        __metadata("design:type", Boolean)
    ], Network.prototype, "enableUlaInternalIpv6", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "firewallPolicy" }),
        __metadata("design:type", String)
    ], Network.prototype, "firewallPolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayIPv4" }),
        __metadata("design:type", String)
    ], Network.prototype, "gatewayIPv4", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Network.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "internalIpv6Range" }),
        __metadata("design:type", String)
    ], Network.prototype, "internalIpv6Range", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], Network.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mtu" }),
        __metadata("design:type", Number)
    ], Network.prototype, "mtu", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Network.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "networkFirewallPolicyEnforcementOrder" }),
        __metadata("design:type", String)
    ], Network.prototype, "networkFirewallPolicyEnforcementOrder", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: networkpeering_1.NetworkPeering }),
        (0, class_transformer_1.Expose)({ name: "peerings" }),
        (0, class_transformer_1.Type)(function () { return networkpeering_1.NetworkPeering; }),
        __metadata("design:type", Array)
    ], Network.prototype, "peerings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "routingConfig" }),
        (0, class_transformer_1.Type)(function () { return networkroutingconfig_1.NetworkRoutingConfig; }),
        __metadata("design:type", networkroutingconfig_1.NetworkRoutingConfig)
    ], Network.prototype, "routingConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLink" }),
        __metadata("design:type", String)
    ], Network.prototype, "selfLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLinkWithId" }),
        __metadata("design:type", String)
    ], Network.prototype, "selfLinkWithId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subnetworks" }),
        __metadata("design:type", Array)
    ], Network.prototype, "subnetworks", void 0);
    return Network;
}(utils_1.SpeakeasyBase));
exports.Network = Network;
