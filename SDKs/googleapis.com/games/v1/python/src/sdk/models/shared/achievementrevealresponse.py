"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AchievementRevealResponseCurrentStateEnum(str, Enum):
    r"""The current state of the achievement for which a reveal was attempted. This might be `UNLOCKED` if the achievement was already unlocked."""
    REVEAL_ACHIEVEMENT_STATE_UNSPECIFIED = 'REVEAL_ACHIEVEMENT_STATE_UNSPECIFIED'
    REVEALED = 'REVEALED'
    UNLOCKED = 'UNLOCKED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AchievementRevealResponse:
    r"""An achievement reveal response"""
    
    current_state: Optional[AchievementRevealResponseCurrentStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currentState'), 'exclude': lambda f: f is None }})
    r"""The current state of the achievement for which a reveal was attempted. This might be `UNLOCKED` if the achievement was already unlocked."""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Uniquely identifies the type of this resource. Value is always the fixed string `games#achievementRevealResponse`."""  
    