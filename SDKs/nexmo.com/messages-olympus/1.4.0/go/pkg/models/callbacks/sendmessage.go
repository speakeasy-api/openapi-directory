// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package callbacks

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
	"openapi/pkg/models/shared"
)

type SendMessageMessageStatusResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}

type SendMessageMessageStatusRequestBodyType string

const (
	SendMessageMessageStatusRequestBodyTypeMessageStatusSMS       SendMessageMessageStatusRequestBodyType = "messageStatusSMS"
	SendMessageMessageStatusRequestBodyTypeMessageStatusMMS       SendMessageMessageStatusRequestBodyType = "messageStatusMMS"
	SendMessageMessageStatusRequestBodyTypeMessageStatusWhatsApp  SendMessageMessageStatusRequestBodyType = "messageStatusWhatsApp"
	SendMessageMessageStatusRequestBodyTypeMessageStatusMessenger SendMessageMessageStatusRequestBodyType = "messageStatusMessenger"
	SendMessageMessageStatusRequestBodyTypeMessageStatusViber     SendMessageMessageStatusRequestBodyType = "messageStatusViber"
)

type SendMessageMessageStatusRequestBody struct {
	MessageStatusSMS       *shared.MessageStatusSMS
	MessageStatusMMS       *shared.MessageStatusMMS
	MessageStatusWhatsApp  *shared.MessageStatusWhatsApp
	MessageStatusMessenger *shared.MessageStatusMessenger
	MessageStatusViber     *shared.MessageStatusViber

	Type SendMessageMessageStatusRequestBodyType
}

func CreateSendMessageMessageStatusRequestBodyMessageStatusSMS(messageStatusSMS shared.MessageStatusSMS) SendMessageMessageStatusRequestBody {
	typ := SendMessageMessageStatusRequestBodyTypeMessageStatusSMS

	return SendMessageMessageStatusRequestBody{
		MessageStatusSMS: &messageStatusSMS,
		Type:             typ,
	}
}

func CreateSendMessageMessageStatusRequestBodyMessageStatusMMS(messageStatusMMS shared.MessageStatusMMS) SendMessageMessageStatusRequestBody {
	typ := SendMessageMessageStatusRequestBodyTypeMessageStatusMMS

	return SendMessageMessageStatusRequestBody{
		MessageStatusMMS: &messageStatusMMS,
		Type:             typ,
	}
}

func CreateSendMessageMessageStatusRequestBodyMessageStatusWhatsApp(messageStatusWhatsApp shared.MessageStatusWhatsApp) SendMessageMessageStatusRequestBody {
	typ := SendMessageMessageStatusRequestBodyTypeMessageStatusWhatsApp

	return SendMessageMessageStatusRequestBody{
		MessageStatusWhatsApp: &messageStatusWhatsApp,
		Type:                  typ,
	}
}

func CreateSendMessageMessageStatusRequestBodyMessageStatusMessenger(messageStatusMessenger shared.MessageStatusMessenger) SendMessageMessageStatusRequestBody {
	typ := SendMessageMessageStatusRequestBodyTypeMessageStatusMessenger

	return SendMessageMessageStatusRequestBody{
		MessageStatusMessenger: &messageStatusMessenger,
		Type:                   typ,
	}
}

func CreateSendMessageMessageStatusRequestBodyMessageStatusViber(messageStatusViber shared.MessageStatusViber) SendMessageMessageStatusRequestBody {
	typ := SendMessageMessageStatusRequestBodyTypeMessageStatusViber

	return SendMessageMessageStatusRequestBody{
		MessageStatusViber: &messageStatusViber,
		Type:               typ,
	}
}

func (u *SendMessageMessageStatusRequestBody) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	messageStatusSMS := new(shared.MessageStatusSMS)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&messageStatusSMS); err == nil {
		u.MessageStatusSMS = messageStatusSMS
		u.Type = SendMessageMessageStatusRequestBodyTypeMessageStatusSMS
		return nil
	}

	messageStatusMMS := new(shared.MessageStatusMMS)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&messageStatusMMS); err == nil {
		u.MessageStatusMMS = messageStatusMMS
		u.Type = SendMessageMessageStatusRequestBodyTypeMessageStatusMMS
		return nil
	}

	messageStatusWhatsApp := new(shared.MessageStatusWhatsApp)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&messageStatusWhatsApp); err == nil {
		u.MessageStatusWhatsApp = messageStatusWhatsApp
		u.Type = SendMessageMessageStatusRequestBodyTypeMessageStatusWhatsApp
		return nil
	}

	messageStatusMessenger := new(shared.MessageStatusMessenger)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&messageStatusMessenger); err == nil {
		u.MessageStatusMessenger = messageStatusMessenger
		u.Type = SendMessageMessageStatusRequestBodyTypeMessageStatusMessenger
		return nil
	}

	messageStatusViber := new(shared.MessageStatusViber)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&messageStatusViber); err == nil {
		u.MessageStatusViber = messageStatusViber
		u.Type = SendMessageMessageStatusRequestBodyTypeMessageStatusViber
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u SendMessageMessageStatusRequestBody) MarshalJSON() ([]byte, error) {
	if u.MessageStatusSMS != nil {
		return json.Marshal(u.MessageStatusSMS)
	}

	if u.MessageStatusMMS != nil {
		return json.Marshal(u.MessageStatusMMS)
	}

	if u.MessageStatusWhatsApp != nil {
		return json.Marshal(u.MessageStatusWhatsApp)
	}

	if u.MessageStatusMessenger != nil {
		return json.Marshal(u.MessageStatusMessenger)
	}

	if u.MessageStatusViber != nil {
		return json.Marshal(u.MessageStatusViber)
	}

	return nil, nil
}

type SendMessageMessageStatusRequest struct {
	Request SendMessageMessageStatusRequestBody `request:"mediaType=application/json"`
}
