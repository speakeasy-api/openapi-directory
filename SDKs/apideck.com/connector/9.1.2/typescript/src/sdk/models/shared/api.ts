/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ApiStatusEnum } from "./apistatusenum";
import { ResourceStatusEnum } from "./resourcestatusenum";
import { Expose, Type } from "class-transformer";

export class ApiResources extends SpeakeasyBase {
  /**
   * Exclude from mapping coverage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "excluded_from_coverage" })
  excludedFromCoverage?: boolean;

  /**
   * ID of the resource, typically a lowercased version of its name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of the resource (plural)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Status of the resource. Resources with status live or beta are callable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ResourceStatusEnum;
}

/**
 * Indicates whether the API is a Unified API. If unified_api is false, the API is a Platform API.
 */
export enum ApiTypeEnum {
  Platform = "platform",
  Unified = "unified",
}

export class Api extends SpeakeasyBase {
  /**
   * Link to the API reference of the API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "api_reference_url" })
  apiReferenceUrl?: string;

  /**
   * List of categories the API belongs to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "categories" })
  categories?: string[];

  /**
   * Description of the API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * List of event types this API supports.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "events" })
  events?: string[];

  /**
   * ID of the API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of the API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * ID of the Postman collection of the API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postman_collection_id" })
  postmanCollectionId?: string;

  /**
   * List of resources supported in this API.
   */
  @SpeakeasyMetadata({ elemType: ApiResources })
  @Expose({ name: "resources" })
  @Type(() => ApiResources)
  resources?: ApiResources[];

  /**
   * Link to the latest OpenAPI specification of the API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "spec_url" })
  specUrl?: string;

  /**
   * Status of the API. APIs with status live or beta are callable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ApiStatusEnum;

  /**
   * Indicates whether the API is a Unified API. If unified_api is false, the API is a Platform API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ApiTypeEnum;
}
