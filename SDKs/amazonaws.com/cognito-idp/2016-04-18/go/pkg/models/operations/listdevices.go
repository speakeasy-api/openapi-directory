// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListDevicesXAmzTargetEnum
type ListDevicesXAmzTargetEnum string

const (
	ListDevicesXAmzTargetEnumAwsCognitoIdentityProviderServiceListDevices ListDevicesXAmzTargetEnum = "AWSCognitoIdentityProviderService.ListDevices"
)

func (e ListDevicesXAmzTargetEnum) ToPointer() *ListDevicesXAmzTargetEnum {
	return &e
}

func (e *ListDevicesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSCognitoIdentityProviderService.ListDevices":
		*e = ListDevicesXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListDevicesXAmzTargetEnum: %v", v)
	}
}

type ListDevicesRequest struct {
	ListDevicesRequest shared.ListDevicesRequest `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         ListDevicesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListDevicesResponse struct {
	ContentType string
	// ForbiddenException
	ForbiddenException interface{}
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidUserPoolConfigurationException
	InvalidUserPoolConfigurationException interface{}
	// Success
	ListDevicesResponse *shared.ListDevicesResponse
	// NotAuthorizedException
	NotAuthorizedException interface{}
	// PasswordResetRequiredException
	PasswordResetRequiredException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// UserNotConfirmedException
	UserNotConfirmedException interface{}
	// UserNotFoundException
	UserNotFoundException interface{}
}
