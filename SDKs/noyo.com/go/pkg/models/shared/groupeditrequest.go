// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// GroupEditRequestBusinessDetailsEmployerTypeEnum - Type or classification of the group as an employer
type GroupEditRequestBusinessDetailsEmployerTypeEnum string

const (
	GroupEditRequestBusinessDetailsEmployerTypeEnumForeignGovernment GroupEditRequestBusinessDetailsEmployerTypeEnum = "foreign_government"
	GroupEditRequestBusinessDetailsEmployerTypeEnumPrivateSector     GroupEditRequestBusinessDetailsEmployerTypeEnum = "private_sector"
	GroupEditRequestBusinessDetailsEmployerTypeEnumReligiousEmployer GroupEditRequestBusinessDetailsEmployerTypeEnum = "religious_employer"
	GroupEditRequestBusinessDetailsEmployerTypeEnumStateGovernment   GroupEditRequestBusinessDetailsEmployerTypeEnum = "state_government"
	GroupEditRequestBusinessDetailsEmployerTypeEnumTribalGovernment  GroupEditRequestBusinessDetailsEmployerTypeEnum = "tribal_government"
)

func (e *GroupEditRequestBusinessDetailsEmployerTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "foreign_government":
		fallthrough
	case "private_sector":
		fallthrough
	case "religious_employer":
		fallthrough
	case "state_government":
		fallthrough
	case "tribal_government":
		*e = GroupEditRequestBusinessDetailsEmployerTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupEditRequestBusinessDetailsEmployerTypeEnum: %s", s)
	}
}

// GroupEditRequestBusinessDetailsEntityTypeEnum - Type of legal or business entity
type GroupEditRequestBusinessDetailsEntityTypeEnum string

const (
	GroupEditRequestBusinessDetailsEntityTypeEnumCCorp       GroupEditRequestBusinessDetailsEntityTypeEnum = "c_corp"
	GroupEditRequestBusinessDetailsEntityTypeEnumLlc         GroupEditRequestBusinessDetailsEntityTypeEnum = "llc"
	GroupEditRequestBusinessDetailsEntityTypeEnumLlp         GroupEditRequestBusinessDetailsEntityTypeEnum = "llp"
	GroupEditRequestBusinessDetailsEntityTypeEnumPartnership GroupEditRequestBusinessDetailsEntityTypeEnum = "partnership"
	GroupEditRequestBusinessDetailsEntityTypeEnumSCorp       GroupEditRequestBusinessDetailsEntityTypeEnum = "s_corp"
)

func (e *GroupEditRequestBusinessDetailsEntityTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "c_corp":
		fallthrough
	case "llc":
		fallthrough
	case "llp":
		fallthrough
	case "partnership":
		fallthrough
	case "s_corp":
		*e = GroupEditRequestBusinessDetailsEntityTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GroupEditRequestBusinessDetailsEntityTypeEnum: %s", s)
	}
}

// GroupEditRequestBusinessDetails - Details about business or industry of the group
type GroupEditRequestBusinessDetails struct {
	// General description of the type of business
	CompanyDescription *string `json:"company_description,omitempty"`
	// Date the company was established
	DateEstablished *types.Date `json:"date_established,omitempty"`
	// Type or classification of the group as an employer
	EmployerType *GroupEditRequestBusinessDetailsEmployerTypeEnum `json:"employer_type,omitempty"`
	// Type of legal or business entity
	EntityType *GroupEditRequestBusinessDetailsEntityTypeEnum `json:"entity_type,omitempty"`
}

// GroupEditRequestInsuranceDetails - General details about the group insurance offerings
type GroupEditRequestInsuranceDetails struct {
	// True if the group is compliant with ERISA regulation
	IsErisaCompliant *bool `json:"is_erisa_compliant,omitempty"`
	// True if company is subject to ERISA regulation
	IsErisaSubject *bool `json:"is_erisa_subject,omitempty"`
}

type GroupEditRequest struct {
	// Details about business or industry of the group
	BusinessDetails *GroupEditRequestBusinessDetails `json:"business_details,omitempty"`
	// DBA name for the company, if applicable
	DbaName *string `json:"dba_name,omitempty"`
	// Federal Employer Identification Number for the group/company
	FederalEin *string `json:"federal_ein,omitempty"`
	// General details about the group insurance offerings
	InsuranceDetails *GroupEditRequestInsuranceDetails `json:"insurance_details,omitempty"`
	// Name of the group/company
	Name *string `json:"name,omitempty"`
	// SIC Code for the group/company
	SicCode *string `json:"sic_code,omitempty"`
}
