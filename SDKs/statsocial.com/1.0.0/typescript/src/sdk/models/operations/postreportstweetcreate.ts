/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PostReportsTweetCreateRequest extends SpeakeasyBase {
  /**
   * A unix timestamp. end_date will be set to the next midnight.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=end_date",
  })
  endDate: number;

  /**
   * Filtering options to be used when creating a filtered report. The options must be in JSON form, example: {'gender':['male'],'ages':['18-24'],'countries':['usa']}
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter",
  })
  filter?: string;

  /**
   * Name of report
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=report_name",
  })
  reportName: string;

  /**
   * A unix timestamp. start_date will be set to the previous midnight.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=start_date",
  })
  startDate: number;

  /**
   * If you are tracking a single term, then the keyword itself is suffice otherwise, tracking multiple terms must be in JSON form, example '[{"operator":"","word":"http://google.com"},{"operator":"or","word":"#test"},{"operator":"and","word":"test2"}]' Which results in filtering tweets containing 'http://google.com' OR '#test' AND 'test2'. (NOTE) Make sure to URL encode the terms value for multiple terms.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=terms" })
  terms: string;
}

export class PostReportsTweetCreateResponse extends SpeakeasyBase {
  /**
   * Possible reasons include:<br>{success: 0, msg: Invalid API parameters, error_code_msg: API_INVALID_PARAMS}<br>{success: 0, msg: Error please include the 'action' parameter, error_code_msg: API_MISSING_ACTION_PARAMETER}
   */
  @SpeakeasyMetadata()
  fourHundredError?: shared.FourHundredError;

  /**
   * {success: 0, msg: Invalid API key, error_code_msg: API_INVALID_KEY}
   */
  @SpeakeasyMetadata()
  fourHundredAndOneError?: shared.FourHundredAndOneError;

  /**
   * Possible reasons include:<br>{success: 0, msg: you are going too fast}<br>{success: 0, msg: Not enough tokens remaining under your application, error_code_msg: API_INSUFFICIENT_TOKENS_REMAINING}
   */
  @SpeakeasyMetadata()
  fourHundredAndThreeError?: shared.FourHundredAndThreeError;

  /**
   * Possible reasons include:<br>{success: 0, msg: Error getting application's credentials, error_code_msg: API_ERROR_GETTING_APPLICATION_INFO}<br>{success: 0, msg: Internal database error, error_code_msg: API_ERROR_DATABASE_INITIATION_ERROR}
   */
  @SpeakeasyMetadata()
  fiveHundredError?: shared.FiveHundredError;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createTweet?: shared.CreateTweet;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
