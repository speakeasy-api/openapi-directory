"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import rule as shared_rule
from ..shared import validator as shared_validator
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaymentSystemsResponse:
    
    affiliation_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('affiliationId') }})  
    allow_commercial_condition: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowCommercialCondition') }})  
    allow_commercial_policy: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowCommercialPolicy') }})  
    allow_country: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowCountry') }})  
    allow_installments: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowInstallments') }})  
    allow_issuer: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowIssuer') }})  
    allow_multiple: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowMultiple') }})  
    allow_notification: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowNotification') }})  
    allow_period: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowPeriod') }})  
    antifraud_connector_implementation: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('antifraudConnectorImplementation') }})  
    connector_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connectorId') }})  
    connector_implementation: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connectorImplementation') }})  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})  
    due_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dueDate') }})  
    fields_: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fields') }})  
    group_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groupName') }})  
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})  
    implementation: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('implementation') }})  
    is_available: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isAvailable') }})  
    is_custom: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isCustom') }})  
    is_self_authorized: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isSelfAuthorized') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    requires_document: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requiresDocument') }})  
    requires_phone: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requiresPhone') }})  
    rules: list[shared_rule.Rule] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rules') }})  
    validator: shared_validator.Validator = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('validator') }})  
    