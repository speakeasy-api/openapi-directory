<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ComponentBindingPropertiesValue - Represents the data binding configuration for a component at runtime. You can use <code>ComponentBindingPropertiesValue</code> to add exposed properties to a component to allow different values to be entered when a component is reused in different places in an app.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ComponentBindingPropertiesValue
{
	#[\JMS\Serializer\Annotation\SerializedName('bindingProperties')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ComponentBindingPropertiesValueProperties')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ComponentBindingPropertiesValueProperties $bindingProperties = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('defaultValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $defaultValue = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->bindingProperties = null;
		$this->defaultValue = null;
		$this->type = null;
	}
}
