// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type ItemUsageActionEnum string

const (
	ItemUsageActionEnumFill              ItemUsageActionEnum = "fill"
	ItemUsageActionEnumSelectSsoProvider ItemUsageActionEnum = "select-sso-provider"
	ItemUsageActionEnumEnterItemEditMode ItemUsageActionEnum = "enter-item-edit-mode"
	ItemUsageActionEnumExport            ItemUsageActionEnum = "export"
	ItemUsageActionEnumShare             ItemUsageActionEnum = "share"
	ItemUsageActionEnumSecureCopy        ItemUsageActionEnum = "secure-copy"
	ItemUsageActionEnumReveal            ItemUsageActionEnum = "reveal"
	ItemUsageActionEnumServerCreate      ItemUsageActionEnum = "server-create"
	ItemUsageActionEnumServerUpdate      ItemUsageActionEnum = "server-update"
	ItemUsageActionEnumServerFetch       ItemUsageActionEnum = "server-fetch"
)

func (e ItemUsageActionEnum) ToPointer() *ItemUsageActionEnum {
	return &e
}

func (e *ItemUsageActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "fill":
		fallthrough
	case "select-sso-provider":
		fallthrough
	case "enter-item-edit-mode":
		fallthrough
	case "export":
		fallthrough
	case "share":
		fallthrough
	case "secure-copy":
		fallthrough
	case "reveal":
		fallthrough
	case "server-create":
		fallthrough
	case "server-update":
		fallthrough
	case "server-fetch":
		*e = ItemUsageActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ItemUsageActionEnum: %v", v)
	}
}

// ItemUsage - A single item usage object
type ItemUsage struct {
	Action *ItemUsageActionEnum `json:"action,omitempty"`
	// Metadata gathered about the client
	Client   *Client `json:"client,omitempty"`
	ItemUUID *string `json:"item_uuid,omitempty"`
	// Geolocation Info about the client
	Location    *Location  `json:"location,omitempty"`
	Timestamp   *time.Time `json:"timestamp,omitempty"`
	UsedVersion *int64     `json:"used_version,omitempty"`
	// User object
	User      *User   `json:"user,omitempty"`
	UUID      *string `json:"uuid,omitempty"`
	VaultUUID *string `json:"vault_uuid,omitempty"`
}
