/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConfigInput } from "./config";
import { Expose, Type } from "class-transformer";

/**
 * An Instance represents the instance resources of the Registry. Currently, only one instance is allowed for each project.
 */
export class InstanceInput extends SpeakeasyBase {
  /**
   * Available configurations to provision an Instance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "config" })
  @Type(() => ConfigInput)
  config?: ConfigInput;

  /**
   * Format: `projects/* /locations/* /instance`. Currently only `locations/global` is supported.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}
