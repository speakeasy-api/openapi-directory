/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class WebhookActivityAttributesV2WebhookV2DetailsWebhookV2EventDataResources {
    /**
     * Date and time resource was most recently downloaded
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("accessedAt")
    public OffsetDateTime accessedAt;
    public WebhookActivityAttributesV2WebhookV2DetailsWebhookV2EventDataResources withAccessedAt(OffsetDateTime accessedAt) {
        this.accessedAt = accessedAt;
        return this;
    }
    
    /**
     * Date and time of resource creation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;
    public WebhookActivityAttributesV2WebhookV2DetailsWebhookV2EventDataResources withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Username who originally created resource
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdBy")
    public String createdBy;
    public WebhookActivityAttributesV2WebhookV2DetailsWebhookV2EventDataResources withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * Number of resources contained in this folder. If this is a file, fileCount is null
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileCount")
    public Long fileCount;
    public WebhookActivityAttributesV2WebhookV2DetailsWebhookV2EventDataResources withFileCount(Long fileCount) {
        this.fileCount = fileCount;
        return this;
    }
    
    /**
     * Resource hash value
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hash")
    public String hash;
    public WebhookActivityAttributesV2WebhookV2DetailsWebhookV2EventDataResources withHash(String hash) {
        this.hash = hash;
        return this;
    }
    
    /**
     * Resource ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public WebhookActivityAttributesV2WebhookV2DetailsWebhookV2EventDataResources withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Resource name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public WebhookActivityAttributesV2WebhookV2DetailsWebhookV2EventDataResources withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Full path to resource
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public String path;
    public WebhookActivityAttributesV2WebhookV2DetailsWebhookV2EventDataResources withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * Whether the resource can be previewed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("previewable")
    public Boolean previewable;
    public WebhookActivityAttributesV2WebhookV2DetailsWebhookV2EventDataResources withPreviewable(Boolean previewable) {
        this.previewable = previewable;
        return this;
    }
    
    /**
     * Size of resource in bytes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Integer size;
    public WebhookActivityAttributesV2WebhookV2DetailsWebhookV2EventDataResources withSize(Integer size) {
        this.size = size;
        return this;
    }
    
    /**
     * Type of resource `file` or `dir`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public WebhookActivityAttributesV2WebhookV2DetailsWebhookV2EventDataResources withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * Date and time resource was most recently changed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedAt")
    public OffsetDateTime updatedAt;
    public WebhookActivityAttributesV2WebhookV2DetailsWebhookV2EventDataResources withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * Date resource was first uploaded
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("uploadDate")
    public OffsetDateTime uploadDate;
    public WebhookActivityAttributesV2WebhookV2DetailsWebhookV2EventDataResources withUploadDate(OffsetDateTime uploadDate) {
        this.uploadDate = uploadDate;
        return this;
    }
    
}
