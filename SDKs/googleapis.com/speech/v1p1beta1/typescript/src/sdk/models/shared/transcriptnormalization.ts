/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Entry } from "./entry";
import { Expose, Type } from "class-transformer";

/**
 * Transcription normalization configuration. Use transcription normalization to automatically replace parts of the transcript with phrases of your choosing. For StreamingRecognize, this normalization only applies to stable partial transcripts (stability > 0.8) and final transcripts.
 */
export class TranscriptNormalization extends SpeakeasyBase {
  /**
   * A list of replacement entries. We will perform replacement with one entry at a time. For example, the second entry in ["cat" => "dog", "mountain cat" => "mountain dog"] will never be applied because we will always process the first entry before it. At most 100 entries.
   */
  @SpeakeasyMetadata({ elemType: Entry })
  @Expose({ name: "entries" })
  @Type(() => Entry)
  entries?: Entry[];
}
