// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LoginResponseResponse struct {
	// The WebID of the user who has logged in.
	User string `json:"user"`
}

type LoginResponseStatusEnum string

const (
	LoginResponseStatusEnumSuccess LoginResponseStatusEnum = "success"
)

func (e LoginResponseStatusEnum) ToPointer() *LoginResponseStatusEnum {
	return &e
}

func (e *LoginResponseStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		*e = LoginResponseStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LoginResponseStatusEnum: %v", v)
	}
}

// LoginResponse - Confirmation of a successful OSDB login.
type LoginResponse struct {
	// The path of the REST API method
	API string `json:"api"`
	// The name of the REST API method
	Method   string                  `json:"method"`
	Response LoginResponseResponse   `json:"response"`
	Status   LoginResponseStatusEnum `json:"status"`
}
