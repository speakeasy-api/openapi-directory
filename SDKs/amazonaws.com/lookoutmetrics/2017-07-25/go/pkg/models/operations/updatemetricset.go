// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateMetricSetRequestBodyMetricSetFrequencyEnum - The dataset's interval.
type UpdateMetricSetRequestBodyMetricSetFrequencyEnum string

const (
	UpdateMetricSetRequestBodyMetricSetFrequencyEnumP1D   UpdateMetricSetRequestBodyMetricSetFrequencyEnum = "P1D"
	UpdateMetricSetRequestBodyMetricSetFrequencyEnumPt1H  UpdateMetricSetRequestBodyMetricSetFrequencyEnum = "PT1H"
	UpdateMetricSetRequestBodyMetricSetFrequencyEnumPt10M UpdateMetricSetRequestBodyMetricSetFrequencyEnum = "PT10M"
	UpdateMetricSetRequestBodyMetricSetFrequencyEnumPt5M  UpdateMetricSetRequestBodyMetricSetFrequencyEnum = "PT5M"
)

func (e UpdateMetricSetRequestBodyMetricSetFrequencyEnum) ToPointer() *UpdateMetricSetRequestBodyMetricSetFrequencyEnum {
	return &e
}

func (e *UpdateMetricSetRequestBodyMetricSetFrequencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "P1D":
		fallthrough
	case "PT1H":
		fallthrough
	case "PT10M":
		fallthrough
	case "PT5M":
		*e = UpdateMetricSetRequestBodyMetricSetFrequencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateMetricSetRequestBodyMetricSetFrequencyEnum: %v", v)
	}
}

// UpdateMetricSetRequestBodyMetricSource - Contains information about source data used to generate metrics.
type UpdateMetricSetRequestBodyMetricSource struct {
	AppFlowConfig        *shared.AppFlowConfig        `json:"AppFlowConfig,omitempty"`
	AthenaSourceConfig   *shared.AthenaSourceConfig   `json:"AthenaSourceConfig,omitempty"`
	CloudWatchConfig     *shared.CloudWatchConfig     `json:"CloudWatchConfig,omitempty"`
	RDSSourceConfig      *shared.RDSSourceConfig      `json:"RDSSourceConfig,omitempty"`
	RedshiftSourceConfig *shared.RedshiftSourceConfig `json:"RedshiftSourceConfig,omitempty"`
	// Contains information about the configuration of the S3 bucket that contains source files.
	S3SourceConfig *shared.S3SourceConfig `json:"S3SourceConfig,omitempty"`
}

// UpdateMetricSetRequestBodyTimestampColumn - Contains information about the column used to track time in a source data file.
type UpdateMetricSetRequestBodyTimestampColumn struct {
	ColumnFormat *string `json:"ColumnFormat,omitempty"`
	ColumnName   *string `json:"ColumnName,omitempty"`
}

type UpdateMetricSetRequestBody struct {
	// Describes a list of filters for choosing specific dimensions and specific values. Each filter consists of the dimension and one of its values that you want to include. When multiple dimensions or values are specified, the dimensions are joined with an AND operation and the values are joined with an OR operation.
	DimensionFilterList []shared.MetricSetDimensionFilter `json:"DimensionFilterList,omitempty"`
	// The dimension list.
	DimensionList []string `json:"DimensionList,omitempty"`
	// The metric list.
	MetricList []shared.Metric `json:"MetricList,omitempty"`
	// The ARN of the dataset to update.
	MetricSetArn string `json:"MetricSetArn"`
	// The dataset's description.
	MetricSetDescription *string `json:"MetricSetDescription,omitempty"`
	// The dataset's interval.
	MetricSetFrequency *UpdateMetricSetRequestBodyMetricSetFrequencyEnum `json:"MetricSetFrequency,omitempty"`
	// Contains information about source data used to generate metrics.
	MetricSource *UpdateMetricSetRequestBodyMetricSource `json:"MetricSource,omitempty"`
	// After an interval ends, the amount of seconds that the detector waits before importing data. Offset is only supported for S3, Redshift, Athena and datasources.
	Offset *int64 `json:"Offset,omitempty"`
	// Contains information about the column used to track time in a source data file.
	TimestampColumn *UpdateMetricSetRequestBodyTimestampColumn `json:"TimestampColumn,omitempty"`
}

type UpdateMetricSetRequest struct {
	RequestBody       UpdateMetricSetRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateMetricSetResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// Success
	UpdateMetricSetResponse *shared.UpdateMetricSetResponse
	// ValidationException
	ValidationException interface{}
}
