// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetGroupVideosPathParams struct {
	// The ID of the group.
	GroupID float64 `pathParam:"style=simple,explode=false,name=group_id"`
}

// GetGroupVideosDirectionEnum - The sort direction of the results.
type GetGroupVideosDirectionEnum string

const (
	GetGroupVideosDirectionEnumAsc  GetGroupVideosDirectionEnum = "asc"
	GetGroupVideosDirectionEnumDesc GetGroupVideosDirectionEnum = "desc"
)

func (e *GetGroupVideosDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetGroupVideosDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGroupVideosDirectionEnum: %s", s)
	}
}

// GetGroupVideosFilterEnum - The attribute by which to filter the results.
type GetGroupVideosFilterEnum string

const (
	GetGroupVideosFilterEnumEmbeddable GetGroupVideosFilterEnum = "embeddable"
)

func (e *GetGroupVideosFilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "embeddable":
		*e = GetGroupVideosFilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGroupVideosFilterEnum: %s", s)
	}
}

// GetGroupVideosSortEnum - The way to sort the results.
type GetGroupVideosSortEnum string

const (
	GetGroupVideosSortEnumAlphabetical GetGroupVideosSortEnum = "alphabetical"
	GetGroupVideosSortEnumComments     GetGroupVideosSortEnum = "comments"
	GetGroupVideosSortEnumDate         GetGroupVideosSortEnum = "date"
	GetGroupVideosSortEnumDuration     GetGroupVideosSortEnum = "duration"
	GetGroupVideosSortEnumLikes        GetGroupVideosSortEnum = "likes"
	GetGroupVideosSortEnumPlays        GetGroupVideosSortEnum = "plays"
)

func (e *GetGroupVideosSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "comments":
		fallthrough
	case "date":
		fallthrough
	case "duration":
		fallthrough
	case "likes":
		fallthrough
	case "plays":
		*e = GetGroupVideosSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGroupVideosSortEnum: %s", s)
	}
}

type GetGroupVideosQueryParams struct {
	// The sort direction of the results.
	Direction *GetGroupVideosDirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The attribute by which to filter the results.
	Filter *GetGroupVideosFilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// Whether to filter the results by embeddable videos (`true`) or non-embeddable videos (`false`). Required only if **filter** is `embeddable`.
	FilterEmbeddable *bool `queryParam:"style=form,explode=true,name=filter_embeddable"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The search query to use to filter the results.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// The way to sort the results.
	Sort *GetGroupVideosSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetGroupVideosRequest struct {
	PathParams  GetGroupVideosPathParams
	QueryParams GetGroupVideosQueryParams
}

type GetGroupVideosResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// No such group exists.
	LegacyError *shared.LegacyError
	// The videos were returned.
	Videos []shared.Video
}
