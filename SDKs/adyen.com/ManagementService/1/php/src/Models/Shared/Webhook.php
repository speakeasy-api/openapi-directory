<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Webhook - OK - the request has succeeded.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Webhook
{
	#[\JMS\Serializer\Annotation\SerializedName('_links')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\WebhookLinks')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WebhookLinks $links = null;
    
    /**
     * Indicates if expired SSL certificates are accepted. Default value: **false**.
     * 
     * @var ?bool $acceptsExpiredCertificate
     */
	#[\JMS\Serializer\Annotation\SerializedName('acceptsExpiredCertificate')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $acceptsExpiredCertificate = null;
    
    /**
     * Indicates if self-signed SSL certificates are accepted. Default value: **false**.
     * 
     * @var ?bool $acceptsSelfSignedCertificate
     */
	#[\JMS\Serializer\Annotation\SerializedName('acceptsSelfSignedCertificate')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $acceptsSelfSignedCertificate = null;
    
    /**
     * Indicates if untrusted SSL certificates are accepted. Default value: **false**.
     * 
     * @var ?bool $acceptsUntrustedRootCertificate
     */
	#[\JMS\Serializer\Annotation\SerializedName('acceptsUntrustedRootCertificate')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $acceptsUntrustedRootCertificate = null;
    
    /**
     * Reference to the account the webook is set on.
     * 
     * @var ?string $accountReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountReference = null;
    
    /**
     * Indicates if the webhook configuration is active. The field must be **true** for you to receive webhooks about events related an account.
     * 
     * @var bool $active
     */
	#[\JMS\Serializer\Annotation\SerializedName('active')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $active;
    
	#[\JMS\Serializer\Annotation\SerializedName('additionalSettings')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AdditionalSettingsResponse')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AdditionalSettingsResponse $additionalSettings = null;
    
    /**
     * The alias of our SSL certificate. When you receive a notification from us, the alias from the HMAC signature will match this alias.
     * 
     * @var ?string $certificateAlias
     */
	#[\JMS\Serializer\Annotation\SerializedName('certificateAlias')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $certificateAlias = null;
    
    /**
     * Format or protocol for receiving webhooks. Possible values:
     * 
     * * **soap**
     * * **http**
     * * **json** 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\WebhookCommunicationFormatEnum $communicationFormat
     */
	#[\JMS\Serializer\Annotation\SerializedName('communicationFormat')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WebhookCommunicationFormatEnum>')]
    public WebhookCommunicationFormatEnum $communicationFormat;
    
    /**
     * Your description for this webhook configuration.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Shows how merchant accounts are included in company-level webhooks. Possible values:
     * 
     * * **includeAccounts**
     * * **excludeAccounts**
     * * **allAccounts**: Includes all merchant accounts, and does not require specifying `filterMerchantAccounts`.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WebhookFilterMerchantAccountTypeEnum $filterMerchantAccountType
     */
	#[\JMS\Serializer\Annotation\SerializedName('filterMerchantAccountType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WebhookFilterMerchantAccountTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WebhookFilterMerchantAccountTypeEnum $filterMerchantAccountType = null;
    
    /**
     * A list of merchant account names that are included or excluded from receiving the webhook. Inclusion or exclusion is based on the value defined for `filterMerchantAccountType`.
     * 
     * 
     * Required if `filterMerchantAccountType` is either:
     * * **includeAccounts**
     * * **excludeAccounts**
     * 
     * Not needed for `filterMerchantAccountType`: **allAccounts**.
     * 
     * @var ?array<string> $filterMerchantAccounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('filterMerchantAccounts')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $filterMerchantAccounts = null;
    
    /**
     * Indicates if the webhook configuration has errors that need troubleshooting. If the value is **true**, troubleshoot the configuration using the [testing endpoint](https://docs.adyen.com/api-explorer/#/ManagementService/v1/post/companies/{companyId}/webhooks/{webhookid}/test).
     * 
     * @var ?bool $hasError
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasError')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasError = null;
    
    /**
     * Indicates if the webhook is password protected.
     * 
     * @var ?bool $hasPassword
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasPassword')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasPassword = null;
    
    /**
     * The [checksum](https://en.wikipedia.org/wiki/Key_checksum_value) of the HMAC key generated for this webhook. You can use this value to uniquely identify the HMAC key configured for this webhook.
     * 
     * @var ?string $hmacKeyCheckValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('hmacKeyCheckValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $hmacKeyCheckValue = null;
    
    /**
     * Unique identifier for this webhook.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Network type for Terminal API details webhooks.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WebhookNetworkTypeEnum $networkType
     */
	#[\JMS\Serializer\Annotation\SerializedName('networkType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WebhookNetworkTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WebhookNetworkTypeEnum $networkType = null;
    
    /**
     * Indicates if the SOAP action header needs to be populated. Default value: **false**.
     * 
     * 
     * Only applies if `communicationFormat`: **soap**.
     * 
     * @var ?bool $populateSoapActionHeader
     */
	#[\JMS\Serializer\Annotation\SerializedName('populateSoapActionHeader')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $populateSoapActionHeader = null;
    
    /**
     * SSL version to access the public webhook URL specified in the `url` field. Possible values:
     * 
     * * **TLSv1.3**
     * * **TLSv1.2**
     * * **HTTP** - Only allowed on Test environment.
     * 
     * If not specified, the webhook will use `sslVersion`: **TLSv1.2**.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WebhookSslVersionEnum $sslVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('sslVersion')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WebhookSslVersionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WebhookSslVersionEnum $sslVersion = null;
    
    /**
     * The type of webhook. Possible values are:
     * 
     * 
     * - **standard**
     * - **account-settings-notification**
     * - **banktransfer-notification**
     * - **boletobancario-notification**
     * - **directdebit-notification**
     * - **pending-notification**
     * - **ideal-notification**
     * - **ideal-pending-notification**
     * - **report-notification**
     * - **terminal-api-notification**
     * 
     * Find out more about [standard notification webhooks](https://docs.adyen.com/development-resources/webhooks/understand-notifications#event-codes) and [other types of notifications](https://docs.adyen.com/development-resources/webhooks/understand-notifications#other-notifications).
     * 
     * @var string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $type;
    
    /**
     * Public URL where webhooks will be sent, for example **https://www.domain.com/webhook-endpoint**.
     * 
     * @var string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
    /**
     * Username to access the webhook URL.
     * 
     * @var ?string $username
     */
	#[\JMS\Serializer\Annotation\SerializedName('username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $username = null;
    
	public function __construct()
	{
		$this->links = null;
		$this->acceptsExpiredCertificate = null;
		$this->acceptsSelfSignedCertificate = null;
		$this->acceptsUntrustedRootCertificate = null;
		$this->accountReference = null;
		$this->active = false;
		$this->additionalSettings = null;
		$this->certificateAlias = null;
		$this->communicationFormat = \OpenAPI\OpenAPI\Models\Shared\WebhookCommunicationFormatEnum::HTTP;
		$this->description = null;
		$this->filterMerchantAccountType = null;
		$this->filterMerchantAccounts = null;
		$this->hasError = null;
		$this->hasPassword = null;
		$this->hmacKeyCheckValue = null;
		$this->id = null;
		$this->networkType = null;
		$this->populateSoapActionHeader = null;
		$this->sslVersion = null;
		$this->type = "";
		$this->url = "";
		$this->username = null;
	}
}
