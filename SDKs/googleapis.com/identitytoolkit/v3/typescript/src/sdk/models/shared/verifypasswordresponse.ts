/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Request of verifying the password.
 */
export class VerifyPasswordResponse extends SpeakeasyBase {
  /**
   * The name of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * The email returned by the IdP. NOTE: The federated login user may not own the email.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * If idToken is STS id token, then this field will be expiration time of STS id token in seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expiresIn" })
  expiresIn?: string;

  /**
   * The GITKit token for authenticated user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idToken" })
  idToken?: string;

  /**
   * The fixed string "identitytoolkit#VerifyPasswordResponse".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The RP local ID if it's already been mapped to the IdP account identified by the federated ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "localId" })
  localId?: string;

  /**
   * The OAuth2 access token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "oauthAccessToken" })
  oauthAccessToken?: string;

  /**
   * The OAuth2 authorization code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "oauthAuthorizationCode" })
  oauthAuthorizationCode?: string;

  /**
   * The lifetime in seconds of the OAuth2 access token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "oauthExpireIn" })
  oauthExpireIn?: number;

  /**
   * The URI of the user's photo at IdP
   */
  @SpeakeasyMetadata()
  @Expose({ name: "photoUrl" })
  photoUrl?: string;

  /**
   * If idToken is STS id token, then this field will be refresh token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "refreshToken" })
  refreshToken?: string;

  /**
   * Whether the email is registered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "registered" })
  registered?: boolean;
}
