<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AccountTransfer - Account transfers move funds between your own accounts at Increase.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AccountTransfer
{
    /**
     * The Account to which the transfer belongs.
     * 
     * @var string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $accountId;
    
    /**
     * The transfer amount in the minor unit of the destination account currency. For dollars, for example, this is cents.
     * 
     * @var int $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $amount;
    
    /**
     * If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AccountTransferTransferApproval $approval
     */
	#[\JMS\Serializer\Annotation\SerializedName('approval')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AccountTransferTransferApproval')]
    public AccountTransferTransferApproval $approval;
    
    /**
     * If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AccountTransferTransferCancellation $cancellation
     */
	#[\JMS\Serializer\Annotation\SerializedName('cancellation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AccountTransferTransferCancellation')]
    public AccountTransferTransferCancellation $cancellation;
    
    /**
     * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.
     * 
     * @var \DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the destination account currency.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AccountTransferCurrencyEnum $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AccountTransferCurrencyEnum>')]
    public AccountTransferCurrencyEnum $currency;
    
    /**
     * The description that will show on the transactions.
     * 
     * @var string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $description;
    
    /**
     * The destination account's identifier.
     * 
     * @var string $destinationAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('destination_account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $destinationAccountId;
    
    /**
     * The ID for the transaction receiving the transfer.
     * 
     * @var string $destinationTransactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('destination_transaction_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $destinationTransactionId;
    
    /**
     * The account transfer's identifier.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * The transfer's network.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AccountTransferNetworkEnum $network
     */
	#[\JMS\Serializer\Annotation\SerializedName('network')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AccountTransferNetworkEnum>')]
    public AccountTransferNetworkEnum $network;
    
    /**
     * The lifecycle status of the transfer.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AccountTransferStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AccountTransferStatusEnum>')]
    public AccountTransferStatusEnum $status;
    
    /**
     * If the transfer was created from a template, this will be the template's ID.
     * 
     * @var string $templateId
     */
	#[\JMS\Serializer\Annotation\SerializedName('template_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $templateId;
    
    /**
     * The ID for the transaction funding the transfer.
     * 
     * @var string $transactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('transaction_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $transactionId;
    
    /**
     * A constant representing the object's type. For this resource it will always be `account_transfer`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\AccountTransferTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AccountTransferTypeEnum>')]
    public AccountTransferTypeEnum $type;
    
	public function __construct()
	{
		$this->accountId = "";
		$this->amount = 0;
		$this->approval = new \OpenAPI\OpenAPI\Models\Shared\AccountTransferTransferApproval();
		$this->cancellation = new \OpenAPI\OpenAPI\Models\Shared\AccountTransferTransferCancellation();
		$this->createdAt = new \DateTime();
		$this->currency = \OpenAPI\OpenAPI\Models\Shared\AccountTransferCurrencyEnum::CAD;
		$this->description = "";
		$this->destinationAccountId = "";
		$this->destinationTransactionId = "";
		$this->id = "";
		$this->network = \OpenAPI\OpenAPI\Models\Shared\AccountTransferNetworkEnum::ACCOUNT;
		$this->status = \OpenAPI\OpenAPI\Models\Shared\AccountTransferStatusEnum::PENDING_SUBMISSION;
		$this->templateId = "";
		$this->transactionId = "";
		$this->type = \OpenAPI\OpenAPI\Models\Shared\AccountTransferTypeEnum::ACCOUNT_TRANSFER;
	}
}
