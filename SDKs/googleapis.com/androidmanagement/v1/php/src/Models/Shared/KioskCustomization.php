<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * KioskCustomization - Settings controlling the behavior of a device in kiosk mode. To enable kiosk mode, set kioskCustomLauncherEnabled to true or specify an app in the policy with installType KIOSK.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class KioskCustomization
{
    /**
     * Specifies whether the Settings app is allowed in kiosk mode.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\KioskCustomizationDeviceSettingsEnum $deviceSettings
     */
	#[\JMS\Serializer\Annotation\SerializedName('deviceSettings')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\KioskCustomizationDeviceSettingsEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?KioskCustomizationDeviceSettingsEnum $deviceSettings = null;
    
    /**
     * Sets the behavior of a device in kiosk mode when a user presses and holds (long-presses) the Power button.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\KioskCustomizationPowerButtonActionsEnum $powerButtonActions
     */
	#[\JMS\Serializer\Annotation\SerializedName('powerButtonActions')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\KioskCustomizationPowerButtonActionsEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?KioskCustomizationPowerButtonActionsEnum $powerButtonActions = null;
    
    /**
     * Specifies whether system info and notifications are disabled in kiosk mode.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\KioskCustomizationStatusBarEnum $statusBar
     */
	#[\JMS\Serializer\Annotation\SerializedName('statusBar')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\KioskCustomizationStatusBarEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?KioskCustomizationStatusBarEnum $statusBar = null;
    
    /**
     * Specifies whether system error dialogs for crashed or unresponsive apps are blocked in kiosk mode. When blocked, the system will force-stop the app as if the user chooses the "close app" option on the UI.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\KioskCustomizationSystemErrorWarningsEnum $systemErrorWarnings
     */
	#[\JMS\Serializer\Annotation\SerializedName('systemErrorWarnings')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\KioskCustomizationSystemErrorWarningsEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?KioskCustomizationSystemErrorWarningsEnum $systemErrorWarnings = null;
    
    /**
     * Specifies which navigation features are enabled (e.g. Home, Overview buttons) in kiosk mode.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\KioskCustomizationSystemNavigationEnum $systemNavigation
     */
	#[\JMS\Serializer\Annotation\SerializedName('systemNavigation')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\KioskCustomizationSystemNavigationEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?KioskCustomizationSystemNavigationEnum $systemNavigation = null;
    
	public function __construct()
	{
		$this->deviceSettings = null;
		$this->powerButtonActions = null;
		$this->statusBar = null;
		$this->systemErrorWarnings = null;
		$this->systemNavigation = null;
	}
}
