"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from datetime import datetime
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class CreateVpcEndpointResultVpcEndpointDNSEntries:
    r"""Describes a DNS entry."""
    
    dns_name: Optional[str] = dataclasses.field(default=None)  
    hosted_zone_id: Optional[str] = dataclasses.field(default=None)  
    
class CreateVpcEndpointResultVpcEndpointDNSOptionsDNSRecordIPTypeEnum(str, Enum):
    r"""The DNS records created for the endpoint."""
    IPV4 = 'ipv4'
    DUALSTACK = 'dualstack'
    IPV6 = 'ipv6'
    SERVICE_DEFINED = 'service-defined'


@dataclasses.dataclass
class CreateVpcEndpointResultVpcEndpointDNSOptions:
    r"""The DNS options for the endpoint."""
    
    dns_record_ip_type: Optional[CreateVpcEndpointResultVpcEndpointDNSOptionsDNSRecordIPTypeEnum] = dataclasses.field(default=None)  
    private_dns_only_for_inbound_resolver_endpoint: Optional[bool] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreateVpcEndpointResultVpcEndpointGroups:
    r"""Describes a security group."""
    
    group_id: Optional[str] = dataclasses.field(default=None)  
    group_name: Optional[str] = dataclasses.field(default=None)  
    
class CreateVpcEndpointResultVpcEndpointIPAddressTypeEnum(str, Enum):
    r"""The IP address type for the endpoint."""
    IPV4 = 'ipv4'
    DUALSTACK = 'dualstack'
    IPV6 = 'ipv6'


@dataclasses.dataclass
class CreateVpcEndpointResultVpcEndpointLastError:
    r"""The last error that occurred for endpoint."""
    
    code: Optional[str] = dataclasses.field(default=None)  
    message: Optional[str] = dataclasses.field(default=None)  
    
class CreateVpcEndpointResultVpcEndpointStateEnum(str, Enum):
    r"""The state of the endpoint."""
    PENDING_ACCEPTANCE = 'PendingAcceptance'
    PENDING = 'Pending'
    AVAILABLE = 'Available'
    DELETING = 'Deleting'
    DELETED = 'Deleted'
    REJECTED = 'Rejected'
    FAILED = 'Failed'
    EXPIRED = 'Expired'


@dataclasses.dataclass
class CreateVpcEndpointResultVpcEndpointTags:
    r"""Describes a tag."""
    
    key: Optional[str] = dataclasses.field(default=None)  
    value: Optional[str] = dataclasses.field(default=None)  
    
class CreateVpcEndpointResultVpcEndpointVpcEndpointTypeEnum(str, Enum):
    r"""The type of endpoint."""
    INTERFACE = 'Interface'
    GATEWAY = 'Gateway'
    GATEWAY_LOAD_BALANCER = 'GatewayLoadBalancer'


@dataclasses.dataclass
class CreateVpcEndpointResultVpcEndpoint:
    r"""Information about the endpoint."""
    
    creation_timestamp: Optional[datetime] = dataclasses.field(default=None)  
    dns_entries: Optional[list[CreateVpcEndpointResultVpcEndpointDNSEntries]] = dataclasses.field(default=None)  
    dns_options: Optional[CreateVpcEndpointResultVpcEndpointDNSOptions] = dataclasses.field(default=None)  
    groups: Optional[list[CreateVpcEndpointResultVpcEndpointGroups]] = dataclasses.field(default=None)  
    ip_address_type: Optional[CreateVpcEndpointResultVpcEndpointIPAddressTypeEnum] = dataclasses.field(default=None)  
    last_error: Optional[CreateVpcEndpointResultVpcEndpointLastError] = dataclasses.field(default=None)  
    network_interface_ids: Optional[list[str]] = dataclasses.field(default=None)  
    owner_id: Optional[str] = dataclasses.field(default=None)  
    policy_document: Optional[str] = dataclasses.field(default=None)  
    private_dns_enabled: Optional[bool] = dataclasses.field(default=None)  
    requester_managed: Optional[bool] = dataclasses.field(default=None)  
    route_table_ids: Optional[list[str]] = dataclasses.field(default=None)  
    service_name: Optional[str] = dataclasses.field(default=None)  
    state: Optional[CreateVpcEndpointResultVpcEndpointStateEnum] = dataclasses.field(default=None)  
    subnet_ids: Optional[list[str]] = dataclasses.field(default=None)  
    tags: Optional[list[CreateVpcEndpointResultVpcEndpointTags]] = dataclasses.field(default=None)  
    vpc_endpoint_id: Optional[str] = dataclasses.field(default=None)  
    vpc_endpoint_type: Optional[CreateVpcEndpointResultVpcEndpointVpcEndpointTypeEnum] = dataclasses.field(default=None)  
    vpc_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreateVpcEndpointResult:
    r"""Success"""
    
    client_token: Optional[str] = dataclasses.field(default=None)  
    vpc_endpoint: Optional[CreateVpcEndpointResultVpcEndpoint] = dataclasses.field(default=None)  
    