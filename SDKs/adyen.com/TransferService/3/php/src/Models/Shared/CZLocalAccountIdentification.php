<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CZLocalAccountIdentification - Contains the bank account details. The fields required in this object depend on the country of the bank account and the currency of the transfer.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CZLocalAccountIdentification
{
    /**
     * The 2- to 16-digit bank account number (Číslo účtu) in the following format:
     * 
     * 
     * - The optional prefix (předčíslí).
     * 
     * - The required second part (základní část) which must be at least two non-zero digits.
     * 
     * Examples:
     * 
     * - **19-123457** (with prefix)
     * 
     * - **123457** (without prefix)
     * 
     * - **000019-0000123457** (with prefix, normalized)
     * 
     * - **000000-0000123457** (without prefix, normalized)
     * 
     * @var string $accountNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $accountNumber;
    
    /**
     * The 4-digit bank code (Kód banky), without separators or whitespace.
     * 
     * @var string $bankCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $bankCode;
    
    /**
     * **czLocal**
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\CZLocalAccountIdentificationTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CZLocalAccountIdentificationTypeEnum>')]
    public CZLocalAccountIdentificationTypeEnum $type;
    
	public function __construct()
	{
		$this->accountNumber = "";
		$this->bankCode = "";
		$this->type = \OpenAPI\OpenAPI\Models\Shared\CZLocalAccountIdentificationTypeEnum::CZ_LOCAL;
	}
}
