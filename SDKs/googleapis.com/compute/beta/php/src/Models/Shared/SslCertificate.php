<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SslCertificate - Represents an SSL Certificate resource. Google Compute Engine has two SSL Certificate resources: * [Global](/compute/docs/reference/rest/beta/sslCertificates) * [Regional](/compute/docs/reference/rest/beta/regionSslCertificates) The sslCertificates are used by: - external HTTPS load balancers - SSL proxy load balancers The regionSslCertificates are used by internal HTTPS load balancers. Optionally, certificate file contents that you upload can contain a set of up to five PEM-encoded certificates. The API call creates an object (sslCertificate) that holds this data. You can use SSL keys and certificates to secure connections to a load balancer. For more information, read Creating and using SSL certificates, SSL certificates quotas and limits, and Troubleshooting SSL certificates.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SslCertificate
{
    /**
     * A value read into memory from a certificate file. The certificate file must be in PEM format. The certificate chain must be no greater than 5 certs long. The chain must include at least one intermediate cert.
     * 
     * @var ?string $certificate
     */
	#[\JMS\Serializer\Annotation\SerializedName('certificate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $certificate = null;
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     * 
     * @var ?string $creationTimestamp
     */
	#[\JMS\Serializer\Annotation\SerializedName('creationTimestamp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creationTimestamp = null;
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * [Output Only] Expire time of the certificate. RFC3339
     * 
     * @var ?string $expireTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('expireTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $expireTime = null;
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * [Output Only] Type of the resource. Always compute#sslCertificate for SSL certificates.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * Configuration and status of a managed SSL certificate.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SslCertificateManagedSslCertificate $managed
     */
	#[\JMS\Serializer\Annotation\SerializedName('managed')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SslCertificateManagedSslCertificate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SslCertificateManagedSslCertificate $managed = null;
    
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * A value read into memory from a write-only private key file. The private key file must be in PEM format. For security, only insert requests include this field.
     * 
     * @var ?string $privateKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('privateKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $privateKey = null;
    
    /**
     * [Output Only] URL of the region where the regional SSL Certificate resides. This field is not applicable to global SSL Certificate.
     * 
     * @var ?string $region
     */
	#[\JMS\Serializer\Annotation\SerializedName('region')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $region = null;
    
    /**
     * [Output only] Server-defined URL for the resource.
     * 
     * @var ?string $selfLink
     */
	#[\JMS\Serializer\Annotation\SerializedName('selfLink')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $selfLink = null;
    
    /**
     * Configuration and status of a self-managed SSL certificate.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SslCertificateSelfManagedSslCertificate $selfManaged
     */
	#[\JMS\Serializer\Annotation\SerializedName('selfManaged')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SslCertificateSelfManagedSslCertificate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SslCertificateSelfManagedSslCertificate $selfManaged = null;
    
    /**
     * [Output Only] Domains associated with the certificate via Subject Alternative Name.
     * 
     * @var ?array<string> $subjectAlternativeNames
     */
	#[\JMS\Serializer\Annotation\SerializedName('subjectAlternativeNames')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $subjectAlternativeNames = null;
    
    /**
     * (Optional) Specifies the type of SSL certificate, either "SELF_MANAGED" or "MANAGED". If not specified, the certificate is self-managed and the fields certificate and private_key are used.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SslCertificateTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SslCertificateTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SslCertificateTypeEnum $type = null;
    
	public function __construct()
	{
		$this->certificate = null;
		$this->creationTimestamp = null;
		$this->description = null;
		$this->expireTime = null;
		$this->id = null;
		$this->kind = null;
		$this->managed = null;
		$this->name = null;
		$this->privateKey = null;
		$this->region = null;
		$this->selfLink = null;
		$this->selfManaged = null;
		$this->subjectAlternativeNames = null;
		$this->type = null;
	}
}
