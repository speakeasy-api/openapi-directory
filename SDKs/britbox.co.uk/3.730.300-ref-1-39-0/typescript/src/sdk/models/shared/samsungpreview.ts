/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SamsungPreviewSection } from "./samsungpreviewsection";
import { Expose, Type } from "class-transformer";

/**
 * The samsung public preview requested.
 */
export class SamsungPreview extends SpeakeasyBase {
  /**
   * For public preview only
   *
   * @remarks
   * If specified, the time at which the preview content is updated.
   * The time is at most 1 week into the future. By default, the preview
   * content is updated every 10 minutes, whenever the TV is switched on,
   * or the JSON file changes.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expires" })
  expires?: number;

  /**
   * For public preview only
   *
   * @remarks
   * If this value is "true", the preview content is updated only at
   * the time specified by the "expires" parameter.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "expires_only" })
  expiresOnly?: boolean;

  /**
   * Preview sections
   */
  @SpeakeasyMetadata({ elemType: SamsungPreviewSection })
  @Expose({ name: "sections" })
  @Type(() => SamsungPreviewSection)
  sections: SamsungPreviewSection[];
}
