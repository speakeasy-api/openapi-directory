// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ActionARealTimeDecisionRequest struct {
	ActionARealTimeDecisionParameters shared.ActionARealTimeDecisionParameters `request:"mediaType=application/json"`
	RealTimeDecisionID                string                                   `pathParam:"style=simple,explode=false,name=real_time_decision_id"`
}

type ActionARealTimeDecisionDefaultApplicationJSON13StatusEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ActionARealTimeDecisionDefaultApplicationJSON13StatusEnum = "429"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = ActionARealTimeDecisionDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON13TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON13TypeEnumRateLimitedError ActionARealTimeDecisionDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON13 struct {
	Detail     string                                                    `json:"detail"`
	RetryAfter *int64                                                    `json:"retry_after,omitempty"`
	Status     ActionARealTimeDecisionDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                    `json:"title"`
	Type       ActionARealTimeDecisionDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON12StatusEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON12StatusEnumFourHundredAndThree ActionARealTimeDecisionDefaultApplicationJSON12StatusEnum = "403"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ActionARealTimeDecisionDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON12TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON12TypeEnumPrivateFeatureError ActionARealTimeDecisionDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON12 struct {
	Detail string                                                    `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON11StatusEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON11StatusEnumFourHundredAndFour ActionARealTimeDecisionDefaultApplicationJSON11StatusEnum = "404"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ActionARealTimeDecisionDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON11TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON11TypeEnumObjectNotFoundError ActionARealTimeDecisionDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON11 struct {
	Detail string                                                    `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON10StatusEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON10StatusEnumFourHundred ActionARealTimeDecisionDefaultApplicationJSON10StatusEnum = "400"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ActionARealTimeDecisionDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON10TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON10TypeEnumMalformedRequestError ActionARealTimeDecisionDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON10 struct {
	Detail string                                                    `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON9StatusEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON9StatusEnumFourHundred ActionARealTimeDecisionDefaultApplicationJSON9StatusEnum = "400"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ActionARealTimeDecisionDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON9TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON9TypeEnumInvalidParametersError ActionARealTimeDecisionDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                 `json:"errors,omitempty"`
	Status ActionARealTimeDecisionDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON8StatusEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON8StatusEnumFourHundredAndNine ActionARealTimeDecisionDefaultApplicationJSON8StatusEnum = "409"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ActionARealTimeDecisionDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON8TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON8TypeEnumInvalidOperationError ActionARealTimeDecisionDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON8 struct {
	Detail string                                                   `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON7StatusEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON7StatusEnumFourHundredAndOne ActionARealTimeDecisionDefaultApplicationJSON7StatusEnum = "401"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = ActionARealTimeDecisionDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON7TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ActionARealTimeDecisionDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON7 struct {
	Detail string                                                   `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON6StatusEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON6StatusEnumFiveHundred ActionARealTimeDecisionDefaultApplicationJSON6StatusEnum = "500"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = ActionARealTimeDecisionDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON6TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON6TypeEnumInternalServerError ActionARealTimeDecisionDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON6 struct {
	Detail string                                                   `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON5StatusEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON5StatusEnumFourHundredAndThree ActionARealTimeDecisionDefaultApplicationJSON5StatusEnum = "403"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ActionARealTimeDecisionDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON5TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ActionARealTimeDecisionDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON5 struct {
	Detail string                                                   `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON4StatusEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ActionARealTimeDecisionDefaultApplicationJSON4StatusEnum = "422"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = ActionARealTimeDecisionDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON4TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ActionARealTimeDecisionDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON4 struct {
	Detail string                                                   `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON3StatusEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON3StatusEnumFourHundredAndNine ActionARealTimeDecisionDefaultApplicationJSON3StatusEnum = "409"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ActionARealTimeDecisionDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON3TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON3TypeEnumIdempotencyConflictError ActionARealTimeDecisionDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON3 struct {
	Detail string                                                   `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON2StatusEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON2StatusEnumFourHundredAndThree ActionARealTimeDecisionDefaultApplicationJSON2StatusEnum = "403"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ActionARealTimeDecisionDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON2TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ActionARealTimeDecisionDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON2 struct {
	Detail string                                                   `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionDefaultApplicationJSON1StatusEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON1StatusEnumFourHundredAndFour ActionARealTimeDecisionDefaultApplicationJSON1StatusEnum = "404"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ActionARealTimeDecisionDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON1TypeEnum string

const (
	ActionARealTimeDecisionDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ActionARealTimeDecisionDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *ActionARealTimeDecisionDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = ActionARealTimeDecisionDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type ActionARealTimeDecisionDefaultApplicationJSON1 struct {
	Detail string                                                   `json:"detail"`
	Status ActionARealTimeDecisionDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                   `json:"title"`
	Type   ActionARealTimeDecisionDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ActionARealTimeDecisionResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// Real-Time Decision
	RealTimeDecision *shared.RealTimeDecision
}
