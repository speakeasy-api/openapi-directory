// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetContentAspectIDCivixDocumentIDAspectIDEnum - The identifier of the 'aspect' (content group) to search
type GetContentAspectIDCivixDocumentIDAspectIDEnum string

const (
	GetContentAspectIDCivixDocumentIDAspectIDEnumComplete GetContentAspectIDCivixDocumentIDAspectIDEnum = "complete"
	GetContentAspectIDCivixDocumentIDAspectIDEnumCorpreg  GetContentAspectIDCivixDocumentIDAspectIDEnum = "corpreg"
	GetContentAspectIDCivixDocumentIDAspectIDEnumBcgaz1   GetContentAspectIDCivixDocumentIDAspectIDEnum = "bcgaz1"
	GetContentAspectIDCivixDocumentIDAspectIDEnumBcgaz2   GetContentAspectIDCivixDocumentIDAspectIDEnum = "bcgaz2"
	GetContentAspectIDCivixDocumentIDAspectIDEnumOic      GetContentAspectIDCivixDocumentIDAspectIDEnum = "oic"
	GetContentAspectIDCivixDocumentIDAspectIDEnumPsl      GetContentAspectIDCivixDocumentIDAspectIDEnum = "psl"
	GetContentAspectIDCivixDocumentIDAspectIDEnumEcb      GetContentAspectIDCivixDocumentIDAspectIDEnum = "ecb"
	GetContentAspectIDCivixDocumentIDAspectIDEnumHscr     GetContentAspectIDCivixDocumentIDAspectIDEnum = "hscr"
	GetContentAspectIDCivixDocumentIDAspectIDEnumArchOic  GetContentAspectIDCivixDocumentIDAspectIDEnum = "arch_oic"
)

func (e *GetContentAspectIDCivixDocumentIDAspectIDEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "complete":
		fallthrough
	case "corpreg":
		fallthrough
	case "bcgaz1":
		fallthrough
	case "bcgaz2":
		fallthrough
	case "oic":
		fallthrough
	case "psl":
		fallthrough
	case "ecb":
		fallthrough
	case "hscr":
		fallthrough
	case "arch_oic":
		*e = GetContentAspectIDCivixDocumentIDAspectIDEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetContentAspectIDCivixDocumentIDAspectIDEnum: %s", s)
	}
}

type GetContentAspectIDCivixDocumentIDRequest struct {
	// The identifier of the 'aspect' (content group) to search
	AspectID GetContentAspectIDCivixDocumentIDAspectIDEnum `pathParam:"style=simple,explode=false,name=aspectId"`
	// The document identification code for an index or directory
	CivixDocumentID string `pathParam:"style=simple,explode=false,name=civixDocumentId"`
}

type GetContentAspectIDCivixDocumentIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
