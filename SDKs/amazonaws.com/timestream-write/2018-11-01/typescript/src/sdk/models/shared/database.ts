/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * A top-level container for a table. Databases and tables are the fundamental management concepts in Amazon Timestream. All tables in a database are encrypted with the same KMS key.
 */
export class Database extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DatabaseName" })
  databaseName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KmsKeyId" })
  kmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "TableCount" })
  tableCount?: number;
}
