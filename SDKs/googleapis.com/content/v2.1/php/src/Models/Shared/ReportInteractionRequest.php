<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ReportInteractionRequest - Request to report interactions on a recommendation.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ReportInteractionRequest
{
    /**
     * Required. Type of the interaction that is reported, for example INTERACTION_CLICK.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ReportInteractionRequestInteractionTypeEnum $interactionType
     */
	#[\JMS\Serializer\Annotation\SerializedName('interactionType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ReportInteractionRequestInteractionTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ReportInteractionRequestInteractionTypeEnum $interactionType = null;
    
    /**
     * Required. Token of the response when recommendation was returned.
     * 
     * @var ?string $responseToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('responseToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $responseToken = null;
    
    /**
     * Optional. Subtype of the recommendations this interaction happened on. This field must be set only to the value that is returned by {@link `RecommendationsService.GenerateRecommendations`} call.
     * 
     * @var ?string $subtype
     */
	#[\JMS\Serializer\Annotation\SerializedName('subtype')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subtype = null;
    
    /**
     * Required. Type of the recommendations on which this interaction happened. This field must be set only to the value that is returned by {@link `GenerateRecommendationsResponse`} call.
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->interactionType = null;
		$this->responseToken = null;
		$this->subtype = null;
		$this->type = null;
	}
}
