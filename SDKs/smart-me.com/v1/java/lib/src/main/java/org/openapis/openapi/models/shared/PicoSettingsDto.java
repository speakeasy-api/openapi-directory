/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PicoSettingsDto - DTO for the pico charging station settings
 */
public class PicoSettingsDto {
    /**
     * The authentication type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AuthenticationType")
    public PicoSettingsDtoAuthenticationTypeEnum authenticationType;

    public PicoSettingsDto withAuthenticationType(PicoSettingsDtoAuthenticationTypeEnum authenticationType) {
        this.authenticationType = authenticationType;
        return this;
    }
    
    /**
     * Flag if the car id detection is enabled
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CarIdDetection")
    public Boolean carIdDetection;

    public PicoSettingsDto withCarIdDetection(Boolean carIdDetection) {
        this.carIdDetection = carIdDetection;
        return this;
    }
    
    /**
     * The Brightness of the LCD Matrix display. 0 = minimum, 255 = maximum
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DisplayBrightness")
    public String displayBrightness;

    public PicoSettingsDto withDisplayBrightness(String displayBrightness) {
        this.displayBrightness = displayBrightness;
        return this;
    }
    
    /**
     * The DNS name of the pico's internal ip
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DnsName")
    public String dnsName;

    public PicoSettingsDto withDnsName(String dnsName) {
        this.dnsName = dnsName;
        return this;
    }
    
    /**
     * Enable the fix lock of the charging cable
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FixCableLockEnable")
    public Boolean fixCableLockEnable;

    public PicoSettingsDto withFixCableLockEnable(Boolean fixCableLockEnable) {
        this.fixCableLockEnable = fixCableLockEnable;
        return this;
    }
    
    /**
     * The url of the idle image
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IdleImageUrl")
    public String idleImageUrl;

    public PicoSettingsDto withIdleImageUrl(String idleImageUrl) {
        this.idleImageUrl = idleImageUrl;
        return this;
    }
    
    /**
     * The internal IP address
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InternalIp")
    public String internalIp;

    public PicoSettingsDto withInternalIp(String internalIp) {
        this.internalIp = internalIp;
        return this;
    }
    
    /**
     * The ID of the loadmanagement group
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LoadmanagementGroupId")
    public String loadmanagementGroupId;

    public PicoSettingsDto withLoadmanagementGroupId(String loadmanagementGroupId) {
        this.loadmanagementGroupId = loadmanagementGroupId;
        return this;
    }
    
    /**
     * The max current of this station (in A)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxCurrent")
    public Integer maxCurrent;

    public PicoSettingsDto withMaxCurrent(Integer maxCurrent) {
        this.maxCurrent = maxCurrent;
        return this;
    }
    
    /**
     * The max current of this station (in A)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MinCurrent")
    public Integer minCurrent;

    public PicoSettingsDto withMinCurrent(Integer minCurrent) {
        this.minCurrent = minCurrent;
        return this;
    }
    
    /**
     * Flag if ModbusTcp is enabled
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ModbusTcp")
    public Boolean modbusTcp;

    public PicoSettingsDto withModbusTcp(Boolean modbusTcp) {
        this.modbusTcp = modbusTcp;
        return this;
    }
    
    /**
     * The name of the station
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public PicoSettingsDto withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The Serial number of the station
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SerialNumber")
    public String serialNumber;

    public PicoSettingsDto withSerialNumber(String serialNumber) {
        this.serialNumber = serialNumber;
        return this;
    }
    
    public PicoSettingsDto(){}
}
