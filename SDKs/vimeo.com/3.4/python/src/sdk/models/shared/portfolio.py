"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PortfolioMetadataConnectionsVideos:
    r"""Information about the videos contained within this portfolio."""
    
    options: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options') }})
    r"""An array of HTTP methods permitted on this URI."""  
    total: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total') }})
    r"""The total number of videos on this connection."""  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The API URI that resolves to the connection data."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PortfolioMetadataConnections:
    r"""A list of resource URIs related to the album."""
    
    videos: PortfolioMetadataConnectionsVideos = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('videos') }})
    r"""Information about the videos contained within this portfolio."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PortfolioMetadata:
    r"""Metadata about the album."""
    
    connections: PortfolioMetadataConnections = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connections') }})
    r"""A list of resource URIs related to the album."""  
    
class PortfolioSortEnum(str, Enum):
    r"""The default video sort order for the portfolio:
    
    Option descriptions:
     * `alphabetical` - The default sort order is alphabetical by name.
     * `clips` - The default sort order is video creation date.
     * `modified` - The default sort order is the order in which the videos were modified.
     * `recent` - The default sort order is the order in which the videos were added.
    """
    ALPHABETICAL = 'alphabetical'
    CLIPS = 'clips'
    MODIFIED = 'modified'
    RECENT = 'recent'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Portfolio:
    r"""The portfolio was returned."""
    
    created_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_time') }})
    r"""The time in ISO 8601 format when the portfolio was created."""  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})
    r"""The portfolio's description."""  
    link: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('link') }})
    r"""The link to the portfolio."""  
    metadata: PortfolioMetadata = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadata') }})
    r"""Metadata about the album."""  
    modified_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modified_time') }})
    r"""The time in ISO 8601 format when the portfolio's data was last modified."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The display name of the portfolio."""  
    sort: PortfolioSortEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sort') }})
    r"""The default video sort order for the portfolio:
    
    Option descriptions:
     * `alphabetical` - The default sort order is alphabetical by name.
     * `clips` - The default sort order is video creation date.
     * `modified` - The default sort order is the order in which the videos were modified.
     * `recent` - The default sort order is the order in which the videos were added.
    """  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The canonical relative URI of the portfolio."""  
    