"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import borrowconfiguration as shared_borrowconfiguration
from ..shared import provisionalconfiguration as shared_provisionalconfiguration
from ..shared import renewtype_enum as shared_renewtype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConsumptionConfiguration:
    r"""Details about a consumption configuration."""
    
    borrow_configuration: Optional[shared_borrowconfiguration.BorrowConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BorrowConfiguration'), 'exclude': lambda f: f is None }})  
    provisional_configuration: Optional[shared_provisionalconfiguration.ProvisionalConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProvisionalConfiguration'), 'exclude': lambda f: f is None }})  
    renew_type: Optional[shared_renewtype_enum.RenewTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RenewType'), 'exclude': lambda f: f is None }})  
    