// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OptionGoToActionEnum - Section navigation type.
type OptionGoToActionEnum string

const (
	OptionGoToActionEnumGoToActionUnspecified OptionGoToActionEnum = "GO_TO_ACTION_UNSPECIFIED"
	OptionGoToActionEnumNextSection           OptionGoToActionEnum = "NEXT_SECTION"
	OptionGoToActionEnumRestartForm           OptionGoToActionEnum = "RESTART_FORM"
	OptionGoToActionEnumSubmitForm            OptionGoToActionEnum = "SUBMIT_FORM"
)

func (e *OptionGoToActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GO_TO_ACTION_UNSPECIFIED":
		fallthrough
	case "NEXT_SECTION":
		fallthrough
	case "RESTART_FORM":
		fallthrough
	case "SUBMIT_FORM":
		*e = OptionGoToActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OptionGoToActionEnum: %s", s)
	}
}

// Option - An option for a Choice question.
type Option struct {
	// Section navigation type.
	GoToAction *OptionGoToActionEnum `json:"goToAction,omitempty"`
	// Item ID of section header to go to.
	GoToSectionID *string `json:"goToSectionId,omitempty"`
	// Data representing an image.
	Image *Image `json:"image,omitempty"`
	// Whether the option is "other". Currently only applies to `RADIO` and `CHECKBOX` choice types, but is not allowed in a QuestionGroupItem.
	IsOther *bool `json:"isOther,omitempty"`
	// Required. The choice as presented to the user.
	Value *string `json:"value,omitempty"`
}

// OptionInput - An option for a Choice question.
type OptionInput struct {
	// Section navigation type.
	GoToAction *OptionGoToActionEnum `json:"goToAction,omitempty"`
	// Item ID of section header to go to.
	GoToSectionID *string `json:"goToSectionId,omitempty"`
	// Data representing an image.
	Image *ImageInput `json:"image,omitempty"`
	// Whether the option is "other". Currently only applies to `RADIO` and `CHECKBOX` choice types, but is not allowed in a QuestionGroupItem.
	IsOther *bool `json:"isOther,omitempty"`
	// Required. The choice as presented to the user.
	Value *string `json:"value,omitempty"`
}
