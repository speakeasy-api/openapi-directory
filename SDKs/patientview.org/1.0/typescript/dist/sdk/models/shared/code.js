"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Code = exports.CodeSourceTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var codecategory_1 = require("./codecategory");
var codeexternalstandard_1 = require("./codeexternalstandard");
var link_1 = require("./link");
var lookup_1 = require("./lookup");
var class_transformer_1 = require("class-transformer");
var CodeSourceTypeEnum;
(function (CodeSourceTypeEnum) {
    CodeSourceTypeEnum["Patientview"] = "PATIENTVIEW";
    CodeSourceTypeEnum["NhsChoices"] = "NHS_CHOICES";
})(CodeSourceTypeEnum = exports.CodeSourceTypeEnum || (exports.CodeSourceTypeEnum = {}));
var Code = /** @class */ (function (_super) {
    __extends(Code, _super);
    function Code() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", String)
    ], Code.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: codecategory_1.CodeCategory }),
        (0, class_transformer_1.Expose)({ name: "codeCategories" }),
        (0, class_transformer_1.Type)(function () { return codecategory_1.CodeCategory; }),
        __metadata("design:type", Array)
    ], Code.prototype, "codeCategories", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "codeType" }),
        (0, class_transformer_1.Type)(function () { return lookup_1.Lookup; }),
        __metadata("design:type", lookup_1.Lookup)
    ], Code.prototype, "codeType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Code.prototype, "created", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Code.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "displayOrder" }),
        __metadata("design:type", Number)
    ], Code.prototype, "displayOrder", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: codeexternalstandard_1.CodeExternalStandard }),
        (0, class_transformer_1.Expose)({ name: "externalStandards" }),
        (0, class_transformer_1.Type)(function () { return codeexternalstandard_1.CodeExternalStandard; }),
        __metadata("design:type", Array)
    ], Code.prototype, "externalStandards", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fullDescription" }),
        __metadata("design:type", String)
    ], Code.prototype, "fullDescription", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hideFromPatients" }),
        __metadata("design:type", Boolean)
    ], Code.prototype, "hideFromPatients", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", Number)
    ], Code.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "lastUpdate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Code.prototype, "lastUpdate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: link_1.Link }),
        (0, class_transformer_1.Expose)({ name: "links" }),
        (0, class_transformer_1.Type)(function () { return link_1.Link; }),
        __metadata("design:type", Array)
    ], Code.prototype, "links", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "patientFriendlyName" }),
        __metadata("design:type", String)
    ], Code.prototype, "patientFriendlyName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "removedExternally" }),
        __metadata("design:type", Boolean)
    ], Code.prototype, "removedExternally", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sourceType" }),
        __metadata("design:type", String)
    ], Code.prototype, "sourceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "standardType" }),
        (0, class_transformer_1.Type)(function () { return lookup_1.Lookup; }),
        __metadata("design:type", lookup_1.Lookup)
    ], Code.prototype, "standardType", void 0);
    return Code;
}(utils_1.SpeakeasyBase));
exports.Code = Code;
