"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import devicetemplate as shared_devicetemplate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PlacementTemplate:
    r"""An object defining the template for a placement."""
    
    default_attributes: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('defaultAttributes'), 'exclude': lambda f: f is None }})  
    device_templates: Optional[dict[str, shared_devicetemplate.DeviceTemplate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceTemplates'), 'exclude': lambda f: f is None }})  
    