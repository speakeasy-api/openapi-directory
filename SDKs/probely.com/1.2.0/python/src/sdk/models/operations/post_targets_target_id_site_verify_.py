"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import verificationtype_enum as shared_verificationtype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostTargetsTargetIDSiteVerifyRequestBody:
    
    type: shared_verificationtype_enum.VerificationTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Type of verification:
    * dns - we look or a TXT record on the host you registered containing
    `Probely=<verification_token>`
    * file - on the root of the path you registered we look for a file
    named `<verification token>` containing `Probely`.
    """  
    

@dataclasses.dataclass
class PostTargetsTargetIDSiteVerifyRequest:
    
    request_body: PostTargetsTargetIDSiteVerifyRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    target_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'target_id', 'style': 'simple', 'explode': False }})
    r"""Target id"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostTargetsTargetIDSiteVerify404ApplicationJSON:
    r"""Not found"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""Not found."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostTargetsTargetIDSiteVerify403ApplicationJSON:
    r"""Not allowed to perform operation"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})
    r"""Error message."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostTargetsTargetIDSiteVerify401ApplicationJSON:
    r"""Access token is missing or invalid"""
    
    detail: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('detail'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostTargetsTargetIDSiteVerify400ApplicationJSON:
    r"""Bad Request"""
    
    error: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})
    r"""Error message"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostTargetsTargetIDSiteVerify200ApplicationJSON:
    r"""Success"""
    
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""Message"""  
    

@dataclasses.dataclass
class PostTargetsTargetIDSiteVerifyResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    post_targets_target_id_site_verify_200_application_json_object: Optional[PostTargetsTargetIDSiteVerify200ApplicationJSON] = dataclasses.field(default=None)
    r"""Success"""  
    post_targets_target_id_site_verify_400_application_json_object: Optional[PostTargetsTargetIDSiteVerify400ApplicationJSON] = dataclasses.field(default=None)
    r"""Bad Request"""  
    post_targets_target_id_site_verify_401_application_json_object: Optional[PostTargetsTargetIDSiteVerify401ApplicationJSON] = dataclasses.field(default=None)
    r"""Access token is missing or invalid"""  
    post_targets_target_id_site_verify_403_application_json_object: Optional[PostTargetsTargetIDSiteVerify403ApplicationJSON] = dataclasses.field(default=None)
    r"""Not allowed to perform operation"""  
    post_targets_target_id_site_verify_404_application_json_object: Optional[PostTargetsTargetIDSiteVerify404ApplicationJSON] = dataclasses.field(default=None)
    r"""Not found"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    