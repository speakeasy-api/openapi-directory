"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LocationListLocationTypeEnum(str, Enum):
    r"""Required. Immutable. The type of location. All locations in the list will share this type."""
    TARGETING_LOCATION_TYPE_UNSPECIFIED = 'TARGETING_LOCATION_TYPE_UNSPECIFIED'
    TARGETING_LOCATION_TYPE_PROXIMITY = 'TARGETING_LOCATION_TYPE_PROXIMITY'
    TARGETING_LOCATION_TYPE_REGIONAL = 'TARGETING_LOCATION_TYPE_REGIONAL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LocationListInput:
    r"""A list of locations used for targeting."""
    
    advertiser_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advertiserId'), 'exclude': lambda f: f is None }})
    r"""Required. Immutable. The unique ID of the advertiser the location list belongs to."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. The display name of the location list. Must be UTF-8 encoded with a maximum size of 240 bytes."""  
    location_type: Optional[LocationListLocationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locationType'), 'exclude': lambda f: f is None }})
    r"""Required. Immutable. The type of location. All locations in the list will share this type."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LocationList:
    r"""A list of locations used for targeting."""
    
    advertiser_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advertiserId'), 'exclude': lambda f: f is None }})
    r"""Required. Immutable. The unique ID of the advertiser the location list belongs to."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Required. The display name of the location list. Must be UTF-8 encoded with a maximum size of 240 bytes."""  
    location_list_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locationListId'), 'exclude': lambda f: f is None }})
    r"""Output only. The unique ID of the location list. Assigned by the system."""  
    location_type: Optional[LocationListLocationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locationType'), 'exclude': lambda f: f is None }})
    r"""Required. Immutable. The type of location. All locations in the list will share this type."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. The resource name of the location list."""  
    