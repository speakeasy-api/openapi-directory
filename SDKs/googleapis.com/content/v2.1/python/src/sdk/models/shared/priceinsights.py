"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PriceInsights:
    r"""Price insights fields requested by the merchant in the query. Field values are only set if the merchant queries `PriceInsightsProductView`. https://support.google.com/merchants/answer/11916926"""
    
    predicted_clicks_change_fraction: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('predictedClicksChangeFraction'), 'exclude': lambda f: f is None }})
    r"""The predicted change in clicks as a fraction after introducing the suggested price compared to current active price. For example, 0.05 is a 5% predicted increase in clicks."""  
    predicted_conversions_change_fraction: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('predictedConversionsChangeFraction'), 'exclude': lambda f: f is None }})
    r"""The predicted change in conversions as a fraction after introducing the suggested price compared to current active price. For example, 0.05 is a 5% predicted increase in conversions)."""  
    predicted_gross_profit_change_fraction: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('predictedGrossProfitChangeFraction'), 'exclude': lambda f: f is None }})
    r"""The predicted change in gross profit as a fraction after introducing the suggested price compared to current active price. For example, 0.05 is a 5% predicted increase in gross profit."""  
    predicted_impressions_change_fraction: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('predictedImpressionsChangeFraction'), 'exclude': lambda f: f is None }})
    r"""The predicted change in impressions as a fraction after introducing the suggested price compared to current active price. For example, 0.05 is a 5% predicted increase in impressions."""  
    predicted_monthly_gross_profit_change_currency_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('predictedMonthlyGrossProfitChangeCurrencyCode'), 'exclude': lambda f: f is None }})
    r"""The predicted monthly gross profit change currency (ISO 4217 code)."""  
    predicted_monthly_gross_profit_change_micros: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('predictedMonthlyGrossProfitChangeMicros'), 'exclude': lambda f: f is None }})
    r"""The predicted change in gross profit in micros (1 millionth of a standard unit, 1 USD = 1000000 micros) after introducing the suggested price for a month compared to current active price."""  
    suggested_price_currency_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suggestedPriceCurrencyCode'), 'exclude': lambda f: f is None }})
    r"""The suggested price currency (ISO 4217 code)."""  
    suggested_price_micros: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('suggestedPriceMicros'), 'exclude': lambda f: f is None }})
    r"""The latest suggested price in micros (1 millionth of a standard unit, 1 USD = 1000000 micros) for the product."""  
    