"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import auth as shared_auth
from ..shared import error as shared_error
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ClientAuthRequestBodyGrantTypeEnum(str, Enum):
    r"""The grant type. Must be set to `client_credentials`."""
    CLIENT_CREDENTIALS = 'client_credentials'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ClientAuthRequestBody:
    
    grant_type: ClientAuthRequestBodyGrantTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('grant_type') }})
    r"""The grant type. Must be set to `client_credentials`."""  
    scope: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scope') }})
    r"""A space-separated list of the authentication [scopes](https://developer.vimeo.com/api/authentication#supported-scopes) that you want to access. The default is `public`."""  
    

@dataclasses.dataclass
class ClientAuthResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    auth: Optional[shared_auth.Auth] = dataclasses.field(default=None)
    r"""The authorization was successful."""  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Error code 8001: No such client secret exists."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    