/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AssignmentTypeEnum } from "./assignmenttypeenum";
import { ClassAttachmentCreation } from "./classattachmentcreation";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Possible modes of assigning assignments
 */
export enum AssignmentCreationAssigneeModeEnum {
  Everyone = "everyone",
  Selected = "selected",
}

/**
 * Google Classroom options for this assignment
 */
export class AssignmentCreationGoogleClassroom extends SpeakeasyBase {
  /**
   * Identifier of the topic where the assignment is created
   */
  @SpeakeasyMetadata()
  @Expose({ name: "topicId" })
  topicId?: string;
}

/**
 * Microsoft Graph options for this assignment
 */
export class AssignmentCreationMicrosoftGraph extends SpeakeasyBase {
  /**
   * List of categories this assignment belongs to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "categories" })
  categories?: string[];
}

/**
 * State of the assignment
 */
export enum AssignmentCreationStateEnum {
  Draft = "draft",
  Active = "active",
}

/**
 * Assignment creation details
 */
export class AssignmentCreation extends SpeakeasyBase {
  /**
   * Identifiers for the students that have access to the assignment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assignedStudents" })
  assignedStudents?: string[];

  /**
   * Possible modes of assigning assignments
   */
  @SpeakeasyMetadata()
  @Expose({ name: "assigneeMode" })
  assigneeMode?: AssignmentCreationAssigneeModeEnum;

  @SpeakeasyMetadata({ elemType: ClassAttachmentCreation })
  @Expose({ name: "attachments" })
  @Type(() => ClassAttachmentCreation)
  attachments?: ClassAttachmentCreation[];

  /**
   * The URL of the cover to display
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cover" })
  cover?: string;

  /**
   * The id of the cover to display
   */
  @SpeakeasyMetadata()
  @Expose({ name: "coverFile" })
  coverFile?: string;

  /**
   * Description and content of the assignment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The due date of this assignment, late submissions will be marked as paste due. If not set, the assignment won't have a due date.
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dueDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dueDate?: Date;

  /**
   * Google Classroom options for this assignment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "googleClassroom" })
  @Type(() => AssignmentCreationGoogleClassroom)
  googleClassroom?: AssignmentCreationGoogleClassroom;

  /**
   * If set, the grading will be enabled for the assignement with this value as the maximum of points
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maxPoints" })
  maxPoints?: number;

  /**
   * Microsoft Graph options for this assignment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "microsoftGraph" })
  @Type(() => AssignmentCreationMicrosoftGraph)
  microsoftGraph?: AssignmentCreationMicrosoftGraph;

  /**
   * The number of playback authorized on the scores of the assignment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nbPlaybackAuthorized" })
  nbPlaybackAuthorized?: number;

  /**
   * The publication (scheduled) date of the assignment.
   *
   * @remarks
   * If this one is specified, the assignment will only be listed to the teachers of the class.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scheduledDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  scheduledDate?: Date;

  /**
   * State of the assignment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: AssignmentCreationStateEnum;

  /**
   * Title of the assignment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * The id of the associated toolset
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toolset" })
  toolset?: string;

  /**
   * Type of the assignment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: AssignmentTypeEnum;
}
