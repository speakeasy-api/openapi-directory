// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteVpcEndpointXAmzTargetEnum
type DeleteVpcEndpointXAmzTargetEnum string

const (
	DeleteVpcEndpointXAmzTargetEnumOpenSearchServerlessDeleteVpcEndpoint DeleteVpcEndpointXAmzTargetEnum = "OpenSearchServerless.DeleteVpcEndpoint"
)

func (e DeleteVpcEndpointXAmzTargetEnum) ToPointer() *DeleteVpcEndpointXAmzTargetEnum {
	return &e
}

func (e *DeleteVpcEndpointXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OpenSearchServerless.DeleteVpcEndpoint":
		*e = DeleteVpcEndpointXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteVpcEndpointXAmzTargetEnum: %v", v)
	}
}

type DeleteVpcEndpointRequest struct {
	DeleteVpcEndpointRequest shared.DeleteVpcEndpointRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               DeleteVpcEndpointXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteVpcEndpointResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	DeleteVpcEndpointResponse *shared.DeleteVpcEndpointResponse
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ValidationException
	ValidationException interface{}
}
