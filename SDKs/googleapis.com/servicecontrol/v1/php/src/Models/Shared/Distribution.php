<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Distribution - Distribution represents a frequency distribution of double-valued sample points. It contains the size of the population of sample points plus additional optional information: * the arithmetic mean of the samples * the minimum and maximum of the samples * the sum-squared-deviation of the samples, used to compute variance * a histogram of the values of the sample points
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Distribution
{
    /**
     * The number of samples in each histogram bucket. `bucket_counts` are optional. If present, they must sum to the `count` value. The buckets are defined below in `bucket_option`. There are N buckets. `bucket_counts[0]` is the number of samples in the underflow bucket. `bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples in each of the finite buckets. And `bucket_counts[N] is the number of samples in the overflow bucket. See the comments of `bucket_option` below for more details. Any suffix of trailing zeros may be omitted.
     * 
     * @var ?array<string> $bucketCounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('bucketCounts')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $bucketCounts = null;
    
    /**
     * The total number of samples in the distribution. Must be >= 0.
     * 
     * @var ?string $count
     */
	#[\JMS\Serializer\Annotation\SerializedName('count')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $count = null;
    
    /**
     * Example points. Must be in increasing order of `value` field.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Exemplar> $exemplars
     */
	#[\JMS\Serializer\Annotation\SerializedName('exemplars')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Exemplar>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $exemplars = null;
    
    /**
     * Describing buckets with arbitrary user-provided width.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ExplicitBuckets $explicitBuckets
     */
	#[\JMS\Serializer\Annotation\SerializedName('explicitBuckets')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ExplicitBuckets')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ExplicitBuckets $explicitBuckets = null;
    
    /**
     * Describing buckets with exponentially growing width.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ExponentialBuckets $exponentialBuckets
     */
	#[\JMS\Serializer\Annotation\SerializedName('exponentialBuckets')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ExponentialBuckets')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ExponentialBuckets $exponentialBuckets = null;
    
    /**
     * Describing buckets with constant width.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LinearBuckets $linearBuckets
     */
	#[\JMS\Serializer\Annotation\SerializedName('linearBuckets')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LinearBuckets')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LinearBuckets $linearBuckets = null;
    
    /**
     * The maximum of the population of values. Ignored if `count` is zero.
     * 
     * @var ?float $maximum
     */
	#[\JMS\Serializer\Annotation\SerializedName('maximum')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $maximum = null;
    
    /**
     * The arithmetic mean of the samples in the distribution. If `count` is zero then this field must be zero.
     * 
     * @var ?float $mean
     */
	#[\JMS\Serializer\Annotation\SerializedName('mean')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $mean = null;
    
    /**
     * The minimum of the population of values. Ignored if `count` is zero.
     * 
     * @var ?float $minimum
     */
	#[\JMS\Serializer\Annotation\SerializedName('minimum')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $minimum = null;
    
    /**
     * The sum of squared deviations from the mean: Sum[i=1..count]((x_i - mean)^2) where each x_i is a sample values. If `count` is zero then this field must be zero, otherwise validation of the request fails.
     * 
     * @var ?float $sumOfSquaredDeviation
     */
	#[\JMS\Serializer\Annotation\SerializedName('sumOfSquaredDeviation')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $sumOfSquaredDeviation = null;
    
	public function __construct()
	{
		$this->bucketCounts = null;
		$this->count = null;
		$this->exemplars = null;
		$this->explicitBuckets = null;
		$this->exponentialBuckets = null;
		$this->linearBuckets = null;
		$this->maximum = null;
		$this->mean = null;
		$this->minimum = null;
		$this->sumOfSquaredDeviation = null;
	}
}
