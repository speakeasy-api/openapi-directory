<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class LegalArrangementEntityDetail
{
	#[\JMS\Serializer\Annotation\SerializedName('address')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ViasAddress')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ViasAddress $address = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('businessDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BusinessDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BusinessDetails $businessDetails = null;
    
    /**
     * The e-mail address of the entity.
     * 
     * @var ?string $email
     */
	#[\JMS\Serializer\Annotation\SerializedName('email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $email = null;
    
    /**
     * The phone number of the contact provided as a single string.  It will be handled as a landline phone.
     * 
     * **Examples:** "0031 6 11 22 33 44", "+316/1122-3344", "(0031) 611223344"
     * 
     * @var ?string $fullPhoneNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('fullPhoneNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fullPhoneNumber = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('individualDetails')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\IndividualDetails')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IndividualDetails $individualDetails = null;
    
    /**
     * Adyen-generated unique alphanumeric identifier (UUID) for the entry, returned in the response when you create a legal arrangement entity.
     * 
     * Use only when updating an account holder. If you include this field when creating an account holder, the request will fail.
     * 
     * @var ?string $legalArrangementEntityCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('legalArrangementEntityCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $legalArrangementEntityCode = null;
    
    /**
     * Your reference for the legal arrangement entity.
     * 
     * @var ?string $legalArrangementEntityReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('legalArrangementEntityReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $legalArrangementEntityReference = null;
    
    /**
     * An array containing the roles of the entity in the legal arrangement.
     * 
     * 
     * The possible values depend on the legal arrangement `type`.
     * 
     * - For `type` **Association**: **ControllingPerson** and **Shareholder**.
     * 
     * - For `type` **Partnership**: **Partner** and **Shareholder**.
     * 
     * - For `type` **Trust**: **Trustee**, **Settlor**, **Protector**, **Beneficiary**,  and **Shareholder**.
     * 
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\LegalArrangementEntityDetailLegalArrangementMembersEnum> $legalArrangementMembers
     */
	#[\JMS\Serializer\Annotation\SerializedName('legalArrangementMembers')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\LegalArrangementEntityDetailLegalArrangementMembersEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $legalArrangementMembers = null;
    
    /**
     * The legal entity type.
     * 
     * 
     * Possible values: **Business**, **Individual**, **NonProfit**, **PublicCompany**, or **Partnership**. 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LegalArrangementEntityDetailLegalEntityTypeEnum $legalEntityType
     */
	#[\JMS\Serializer\Annotation\SerializedName('legalEntityType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\LegalArrangementEntityDetailLegalEntityTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LegalArrangementEntityDetailLegalEntityTypeEnum $legalEntityType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('phoneNumber')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ViasPhoneNumber')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ViasPhoneNumber $phoneNumber = null;
    
    /**
     * The URL of the website of the contact.
     * 
     * @var ?string $webAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('webAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $webAddress = null;
    
	public function __construct()
	{
		$this->address = null;
		$this->businessDetails = null;
		$this->email = null;
		$this->fullPhoneNumber = null;
		$this->individualDetails = null;
		$this->legalArrangementEntityCode = null;
		$this->legalArrangementEntityReference = null;
		$this->legalArrangementMembers = null;
		$this->legalEntityType = null;
		$this->phoneNumber = null;
		$this->webAddress = null;
	}
}
