/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * BookedRate - Information on the price of the booked room, other components of the room (such as breakfast, lunch or a welcome drink) and the cancellation policies that apply.
 */
public class BookedRate {
    @JsonProperty("cancellationPolicies")
    public CancellationPolicy[] cancellationPolicies;
    public BookedRate withCancellationPolicies(CancellationPolicy[] cancellationPolicies) {
        this.cancellationPolicies = cancellationPolicies;
        return this;
    }
    
    @JsonProperty("components")
    public RateComponent[] components;
    public BookedRate withComponents(RateComponent[] components) {
        this.components = components;
        return this;
    }
    
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("end")
    public LocalDate end;
    public BookedRate withEnd(LocalDate end) {
        this.end = end;
        return this;
    }
    
    /**
     * Essential information on an agreement with a hotel.
     */
    @JsonProperty("hotelAgreement")
    public HotelAgreementStub hotelAgreement;
    public BookedRate withHotelAgreement(HotelAgreementStub hotelAgreement) {
        this.hotelAgreement = hotelAgreement;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxOccupancy")
    public Double maxOccupancy;
    public BookedRate withMaxOccupancy(Double maxOccupancy) {
        this.maxOccupancy = maxOccupancy;
        return this;
    }
    
    /**
     * The public retail rate you should quote and charge your guest. You're not allowed to quote or charge an amount lower than this if your website or app is publicly accessible.
     */
    @JsonProperty("retailRate")
    public BookedRateRetailRate retailRate;
    public BookedRate withRetailRate(BookedRateRetailRate retailRate) {
        this.retailRate = retailRate;
        return this;
    }
    
    /**
     * The commission percentage you as a seller will earn from this booking, based on `retailRate.total`.
     */
    @JsonProperty("sellerCommissionPercentage")
    public Float sellerCommissionPercentage;
    public BookedRate withSellerCommissionPercentage(Float sellerCommissionPercentage) {
        this.sellerCommissionPercentage = sellerCommissionPercentage;
        return this;
    }
    
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("start")
    public LocalDate start;
    public BookedRate withStart(LocalDate start) {
        this.start = start;
        return this;
    }
    
}
