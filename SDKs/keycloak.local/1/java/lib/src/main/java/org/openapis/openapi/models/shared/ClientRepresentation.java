/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ClientRepresentation - success
 */
public class ClientRepresentation {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("access")
    public java.util.Map<String, Object> access;
    public ClientRepresentation withAccess(java.util.Map<String, Object> access) {
        this.access = access;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adminUrl")
    public String adminUrl;
    public ClientRepresentation withAdminUrl(String adminUrl) {
        this.adminUrl = adminUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alwaysDisplayInConsole")
    public Boolean alwaysDisplayInConsole;
    public ClientRepresentation withAlwaysDisplayInConsole(Boolean alwaysDisplayInConsole) {
        this.alwaysDisplayInConsole = alwaysDisplayInConsole;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributes")
    public java.util.Map<String, Object> attributes;
    public ClientRepresentation withAttributes(java.util.Map<String, Object> attributes) {
        this.attributes = attributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authenticationFlowBindingOverrides")
    public java.util.Map<String, Object> authenticationFlowBindingOverrides;
    public ClientRepresentation withAuthenticationFlowBindingOverrides(java.util.Map<String, Object> authenticationFlowBindingOverrides) {
        this.authenticationFlowBindingOverrides = authenticationFlowBindingOverrides;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizationServicesEnabled")
    public Boolean authorizationServicesEnabled;
    public ClientRepresentation withAuthorizationServicesEnabled(Boolean authorizationServicesEnabled) {
        this.authorizationServicesEnabled = authorizationServicesEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizationSettings")
    public ResourceServerRepresentation authorizationSettings;
    public ClientRepresentation withAuthorizationSettings(ResourceServerRepresentation authorizationSettings) {
        this.authorizationSettings = authorizationSettings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("baseUrl")
    public String baseUrl;
    public ClientRepresentation withBaseUrl(String baseUrl) {
        this.baseUrl = baseUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bearerOnly")
    public Boolean bearerOnly;
    public ClientRepresentation withBearerOnly(Boolean bearerOnly) {
        this.bearerOnly = bearerOnly;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientAuthenticatorType")
    public String clientAuthenticatorType;
    public ClientRepresentation withClientAuthenticatorType(String clientAuthenticatorType) {
        this.clientAuthenticatorType = clientAuthenticatorType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientId")
    public String clientId;
    public ClientRepresentation withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("consentRequired")
    public Boolean consentRequired;
    public ClientRepresentation withConsentRequired(Boolean consentRequired) {
        this.consentRequired = consentRequired;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultClientScopes")
    public String[] defaultClientScopes;
    public ClientRepresentation withDefaultClientScopes(String[] defaultClientScopes) {
        this.defaultClientScopes = defaultClientScopes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultRoles")
    public String[] defaultRoles;
    public ClientRepresentation withDefaultRoles(String[] defaultRoles) {
        this.defaultRoles = defaultRoles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public ClientRepresentation withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("directAccessGrantsEnabled")
    public Boolean directAccessGrantsEnabled;
    public ClientRepresentation withDirectAccessGrantsEnabled(Boolean directAccessGrantsEnabled) {
        this.directAccessGrantsEnabled = directAccessGrantsEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;
    public ClientRepresentation withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("frontchannelLogout")
    public Boolean frontchannelLogout;
    public ClientRepresentation withFrontchannelLogout(Boolean frontchannelLogout) {
        this.frontchannelLogout = frontchannelLogout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fullScopeAllowed")
    public Boolean fullScopeAllowed;
    public ClientRepresentation withFullScopeAllowed(Boolean fullScopeAllowed) {
        this.fullScopeAllowed = fullScopeAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public ClientRepresentation withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("implicitFlowEnabled")
    public Boolean implicitFlowEnabled;
    public ClientRepresentation withImplicitFlowEnabled(Boolean implicitFlowEnabled) {
        this.implicitFlowEnabled = implicitFlowEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ClientRepresentation withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodeReRegistrationTimeout")
    public Integer nodeReRegistrationTimeout;
    public ClientRepresentation withNodeReRegistrationTimeout(Integer nodeReRegistrationTimeout) {
        this.nodeReRegistrationTimeout = nodeReRegistrationTimeout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notBefore")
    public Integer notBefore;
    public ClientRepresentation withNotBefore(Integer notBefore) {
        this.notBefore = notBefore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("optionalClientScopes")
    public String[] optionalClientScopes;
    public ClientRepresentation withOptionalClientScopes(String[] optionalClientScopes) {
        this.optionalClientScopes = optionalClientScopes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("origin")
    public String origin;
    public ClientRepresentation withOrigin(String origin) {
        this.origin = origin;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protocol")
    public String protocol;
    public ClientRepresentation withProtocol(String protocol) {
        this.protocol = protocol;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protocolMappers")
    public ProtocolMapperRepresentation[] protocolMappers;
    public ClientRepresentation withProtocolMappers(ProtocolMapperRepresentation[] protocolMappers) {
        this.protocolMappers = protocolMappers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publicClient")
    public Boolean publicClient;
    public ClientRepresentation withPublicClient(Boolean publicClient) {
        this.publicClient = publicClient;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redirectUris")
    public String[] redirectUris;
    public ClientRepresentation withRedirectUris(String[] redirectUris) {
        this.redirectUris = redirectUris;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registeredNodes")
    public java.util.Map<String, Object> registeredNodes;
    public ClientRepresentation withRegisteredNodes(java.util.Map<String, Object> registeredNodes) {
        this.registeredNodes = registeredNodes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registrationAccessToken")
    public String registrationAccessToken;
    public ClientRepresentation withRegistrationAccessToken(String registrationAccessToken) {
        this.registrationAccessToken = registrationAccessToken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rootUrl")
    public String rootUrl;
    public ClientRepresentation withRootUrl(String rootUrl) {
        this.rootUrl = rootUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret")
    public String secret;
    public ClientRepresentation withSecret(String secret) {
        this.secret = secret;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccountsEnabled")
    public Boolean serviceAccountsEnabled;
    public ClientRepresentation withServiceAccountsEnabled(Boolean serviceAccountsEnabled) {
        this.serviceAccountsEnabled = serviceAccountsEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("standardFlowEnabled")
    public Boolean standardFlowEnabled;
    public ClientRepresentation withStandardFlowEnabled(Boolean standardFlowEnabled) {
        this.standardFlowEnabled = standardFlowEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("surrogateAuthRequired")
    public Boolean surrogateAuthRequired;
    public ClientRepresentation withSurrogateAuthRequired(Boolean surrogateAuthRequired) {
        this.surrogateAuthRequired = surrogateAuthRequired;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webOrigins")
    public String[] webOrigins;
    public ClientRepresentation withWebOrigins(String[] webOrigins) {
        this.webOrigins = webOrigins;
        return this;
    }
    
}
