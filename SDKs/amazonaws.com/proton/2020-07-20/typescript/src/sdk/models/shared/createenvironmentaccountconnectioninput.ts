/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateEnvironmentAccountConnectionInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "clientToken" })
  clientToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "codebuildRoleArn" })
  codebuildRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "componentRoleArn" })
  componentRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "environmentName" })
  environmentName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "managementAccountId" })
  managementAccountId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
