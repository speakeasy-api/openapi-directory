// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type TokensTwitchDropHistoryResponseClaimStateEnum int64

const (
	TokensTwitchDropHistoryResponseClaimStateEnumZero TokensTwitchDropHistoryResponseClaimStateEnum = 0
	TokensTwitchDropHistoryResponseClaimStateEnumOne  TokensTwitchDropHistoryResponseClaimStateEnum = 1
	TokensTwitchDropHistoryResponseClaimStateEnumTwo  TokensTwitchDropHistoryResponseClaimStateEnum = 2
)

func (e TokensTwitchDropHistoryResponseClaimStateEnum) ToPointer() *TokensTwitchDropHistoryResponseClaimStateEnum {
	return &e
}

func (e *TokensTwitchDropHistoryResponseClaimStateEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 0:
		fallthrough
	case 1:
		fallthrough
	case 2:
		*e = TokensTwitchDropHistoryResponseClaimStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TokensTwitchDropHistoryResponseClaimStateEnum: %v", v)
	}
}

type TokensTwitchDropHistoryResponse struct {
	ClaimState  *TokensTwitchDropHistoryResponseClaimStateEnum
	CreatedAt   *time.Time
	Description *string
	Title       *string
}
