/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Job - Specifies a job definition.
 */
public class Job {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AllocatedCapacity")
    public Long allocatedCapacity;
    public Job withAllocatedCapacity(Long allocatedCapacity) {
        this.allocatedCapacity = allocatedCapacity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CodeGenConfigurationNodes")
    public java.util.Map<String, CodeGenConfigurationNode> codeGenConfigurationNodes;
    public Job withCodeGenConfigurationNodes(java.util.Map<String, CodeGenConfigurationNode> codeGenConfigurationNodes) {
        this.codeGenConfigurationNodes = codeGenConfigurationNodes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Command")
    public JobCommand command;
    public Job withCommand(JobCommand command) {
        this.command = command;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Connections")
    public ConnectionsList connections;
    public Job withConnections(ConnectionsList connections) {
        this.connections = connections;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedOn")
    public OffsetDateTime createdOn;
    public Job withCreatedOn(OffsetDateTime createdOn) {
        this.createdOn = createdOn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefaultArguments")
    public java.util.Map<String, String> defaultArguments;
    public Job withDefaultArguments(java.util.Map<String, String> defaultArguments) {
        this.defaultArguments = defaultArguments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public Job withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExecutionClass")
    public ExecutionClassEnum executionClass;
    public Job withExecutionClass(ExecutionClassEnum executionClass) {
        this.executionClass = executionClass;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExecutionProperty")
    public ExecutionProperty executionProperty;
    public Job withExecutionProperty(ExecutionProperty executionProperty) {
        this.executionProperty = executionProperty;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlueVersion")
    public String glueVersion;
    public Job withGlueVersion(String glueVersion) {
        this.glueVersion = glueVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastModifiedOn")
    public OffsetDateTime lastModifiedOn;
    public Job withLastModifiedOn(OffsetDateTime lastModifiedOn) {
        this.lastModifiedOn = lastModifiedOn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LogUri")
    public String logUri;
    public Job withLogUri(String logUri) {
        this.logUri = logUri;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxCapacity")
    public Double maxCapacity;
    public Job withMaxCapacity(Double maxCapacity) {
        this.maxCapacity = maxCapacity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxRetries")
    public Long maxRetries;
    public Job withMaxRetries(Long maxRetries) {
        this.maxRetries = maxRetries;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public Job withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NonOverridableArguments")
    public java.util.Map<String, String> nonOverridableArguments;
    public Job withNonOverridableArguments(java.util.Map<String, String> nonOverridableArguments) {
        this.nonOverridableArguments = nonOverridableArguments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NotificationProperty")
    public NotificationProperty notificationProperty;
    public Job withNotificationProperty(NotificationProperty notificationProperty) {
        this.notificationProperty = notificationProperty;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NumberOfWorkers")
    public Long numberOfWorkers;
    public Job withNumberOfWorkers(Long numberOfWorkers) {
        this.numberOfWorkers = numberOfWorkers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Role")
    public String role;
    public Job withRole(String role) {
        this.role = role;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SecurityConfiguration")
    public String securityConfiguration;
    public Job withSecurityConfiguration(String securityConfiguration) {
        this.securityConfiguration = securityConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceControlDetails")
    public SourceControlDetails sourceControlDetails;
    public Job withSourceControlDetails(SourceControlDetails sourceControlDetails) {
        this.sourceControlDetails = sourceControlDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Timeout")
    public Long timeout;
    public Job withTimeout(Long timeout) {
        this.timeout = timeout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WorkerType")
    public WorkerTypeEnum workerType;
    public Job withWorkerType(WorkerTypeEnum workerType) {
        this.workerType = workerType;
        return this;
    }
    
}
