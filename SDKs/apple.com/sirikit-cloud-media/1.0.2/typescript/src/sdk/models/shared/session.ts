/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Constraints } from "./constraints";
import { PlayerContext } from "./playercontext";
import { Expose, Transform, Type } from "class-transformer";

export class Session extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "constraints" })
  @Type(() => Constraints)
  constraints: Constraints;

  @SpeakeasyMetadata()
  @Expose({ name: "deadline" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deadline: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "identifier" })
  identifier: string;

  @SpeakeasyMetadata()
  @Expose({ name: "playerContext" })
  @Type(() => PlayerContext)
  playerContext?: PlayerContext;

  @SpeakeasyMetadata()
  @Expose({ name: "requested" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  requested: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version: string;
}
