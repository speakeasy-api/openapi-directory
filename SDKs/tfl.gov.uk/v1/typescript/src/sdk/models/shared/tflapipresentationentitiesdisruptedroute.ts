/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TflApiPresentationEntitiesRouteSectionNaptanEntrySequence } from "./tflapipresentationentitiesroutesectionnaptanentrysequence";
import { Expose, Transform, Type } from "class-transformer";

/**
 * keep old RouteSection name so as not to break contract
 */
export class TflApiPresentationEntitiesDisruptedRoute extends SpeakeasyBase {
  /**
   * The name of the Destination StopPoint
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destinationName" })
  destinationName?: string;

  /**
   * Inbound or Outbound
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction?: string;

  /**
   * The Id of the route
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Whether this represents the entire route section
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isEntireRouteSection" })
  isEntireRouteSection?: boolean;

  /**
   * The Id of the Line
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lineId" })
  lineId?: string;

  /**
   * The co-ordinates of the route's path as a geoJSON lineString
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lineString" })
  lineString?: string;

  /**
   * Name such as "72"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The name of the Origin StopPoint
   */
  @SpeakeasyMetadata()
  @Expose({ name: "originationName" })
  originationName?: string;

  /**
   * The route code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "routeCode" })
  routeCode?: string;

  @SpeakeasyMetadata({
    elemType: TflApiPresentationEntitiesRouteSectionNaptanEntrySequence,
  })
  @Expose({ name: "routeSectionNaptanEntrySequence" })
  @Type(() => TflApiPresentationEntitiesRouteSectionNaptanEntrySequence)
  routeSectionNaptanEntrySequence?: TflApiPresentationEntitiesRouteSectionNaptanEntrySequence[];

  /**
   * The DateTime that the Service containing this Route is valid from.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validFrom" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  validFrom?: Date;

  /**
   * The DateTime that the Service containing this Route is valid until.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validTo" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  validTo?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "via" })
  @Type(() => TflApiPresentationEntitiesRouteSectionNaptanEntrySequence)
  via?: TflApiPresentationEntitiesRouteSectionNaptanEntrySequence;
}
