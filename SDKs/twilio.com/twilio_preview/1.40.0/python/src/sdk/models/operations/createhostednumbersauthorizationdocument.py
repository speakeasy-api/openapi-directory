"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import preview_hosted_numbers_authorization_document as shared_preview_hosted_numbers_authorization_document
from typing import Optional

CREATE_HOSTED_NUMBERS_AUTHORIZATION_DOCUMENT_SERVERS = [
	"https://preview.twilio.com",
]


@dataclasses.dataclass
class CreateHostedNumbersAuthorizationDocumentSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class CreateHostedNumbersAuthorizationDocumentCreateHostedNumbersAuthorizationDocumentRequest:
    
    address_sid: str = dataclasses.field(metadata={'form': { 'field_name': 'AddressSid' }})
    r"""A 34 character string that uniquely identifies the Address resource that is associated with this AuthorizationDocument."""  
    contact_phone_number: str = dataclasses.field(metadata={'form': { 'field_name': 'ContactPhoneNumber' }})
    r"""The contact phone number of the person authorized to sign the Authorization Document."""  
    contact_title: str = dataclasses.field(metadata={'form': { 'field_name': 'ContactTitle' }})
    r"""The title of the person authorized to sign the Authorization Document for this phone number."""  
    email: str = dataclasses.field(metadata={'form': { 'field_name': 'Email' }})
    r"""Email that this AuthorizationDocument will be sent to for signing."""  
    hosted_number_order_sids: list[str] = dataclasses.field(metadata={'form': { 'field_name': 'HostedNumberOrderSids' }})
    r"""A list of HostedNumberOrder sids that this AuthorizationDocument will authorize for hosting phone number capabilities on Twilio's platform."""  
    cc_emails: Optional[list[str]] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'CcEmails' }})
    r"""Email recipients who will be informed when an Authorization Document has been sent and signed."""  
    

@dataclasses.dataclass
class CreateHostedNumbersAuthorizationDocumentResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    preview_hosted_numbers_authorization_document: Optional[shared_preview_hosted_numbers_authorization_document.PreviewHostedNumbersAuthorizationDocument] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    