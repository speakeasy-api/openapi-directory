"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import radiusauthenticationprotocol_enum as shared_radiusauthenticationprotocol_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RadiusSettings:
    r"""Contains information about a Remote Authentication Dial In User Service (RADIUS) server."""
    
    authentication_protocol: Optional[shared_radiusauthenticationprotocol_enum.RadiusAuthenticationProtocolEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AuthenticationProtocol'), 'exclude': lambda f: f is None }})  
    display_label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DisplayLabel'), 'exclude': lambda f: f is None }})  
    radius_port: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RadiusPort'), 'exclude': lambda f: f is None }})  
    radius_retries: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RadiusRetries'), 'exclude': lambda f: f is None }})  
    radius_servers: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RadiusServers'), 'exclude': lambda f: f is None }})  
    radius_timeout: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RadiusTimeout'), 'exclude': lambda f: f is None }})  
    shared_secret: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SharedSecret'), 'exclude': lambda f: f is None }})  
    use_same_username: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UseSameUsername'), 'exclude': lambda f: f is None }})  
    