/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DomainStats } from "./domainstats";
import { MatchingResponse } from "./matchingresponse";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetDomainResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DeadLetterQueueUrl" })
  deadLetterQueueUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DefaultEncryptionKey" })
  defaultEncryptionKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DefaultExpirationDays" })
  defaultExpirationDays?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "DomainName" })
  domainName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Matching" })
  @Type(() => MatchingResponse)
  matching?: MatchingResponse;

  @SpeakeasyMetadata()
  @Expose({ name: "Stats" })
  @Type(() => DomainStats)
  stats?: DomainStats;

  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;
}
