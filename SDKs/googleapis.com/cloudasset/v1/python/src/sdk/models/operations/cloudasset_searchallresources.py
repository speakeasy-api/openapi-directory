"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import _xgafv_enum as shared__xgafv_enum
from ..shared import alt_enum as shared_alt_enum
from ..shared import searchallresourcesresponse as shared_searchallresourcesresponse
from typing import Optional


@dataclasses.dataclass
class CloudassetSearchAllResourcesSecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    oauth2c: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class CloudassetSearchAllResourcesRequest:
    
    scope: str = dataclasses.field(metadata={'path_param': { 'field_name': 'scope', 'style': 'simple', 'explode': False }})
    r"""Required. A scope can be a project, a folder, or an organization. The search is limited to the resources within the `scope`. The caller must be granted the [`cloudasset.assets.searchAllResources`](https://cloud.google.com/asset-inventory/docs/access-control#required_permissions) permission on the desired scope. The allowed values are: * projects/{PROJECT_ID} (e.g., \\"projects/foo-bar\\") * projects/{PROJECT_NUMBER} (e.g., \\"projects/12345678\\") * folders/{FOLDER_NUMBER} (e.g., \\"folders/1234567\\") * organizations/{ORGANIZATION_NUMBER} (e.g., \\"organizations/123456\\")"""  
    dollar_xgafv: Optional[shared__xgafv_enum.XgafvEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': '$.xgafv', 'style': 'form', 'explode': True }})
    r"""V1 error format."""  
    access_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'access_token', 'style': 'form', 'explode': True }})
    r"""OAuth access token."""  
    alt: Optional[shared_alt_enum.AltEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'alt', 'style': 'form', 'explode': True }})
    r"""Data format for response."""  
    asset_types: Optional[list[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'assetTypes', 'style': 'form', 'explode': True }})
    r"""Optional. A list of asset types that this request searches for. If empty, it will search all the [searchable asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types#searchable_asset_types). Regular expressions are also supported. For example: * \\"compute.googleapis.com.*\\" snapshots resources whose asset type starts with \\"compute.googleapis.com\\". * \\".*Instance\\" snapshots resources whose asset type ends with \\"Instance\\". * \\".*Instance.*\\" snapshots resources whose asset type contains \\"Instance\\". See [RE2](https://github.com/google/re2/wiki/Syntax) for all supported regular expression syntax. If the regular expression does not match any supported asset type, an INVALID_ARGUMENT error will be returned."""  
    callback: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'callback', 'style': 'form', 'explode': True }})
    r"""JSONP"""  
    fields_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fields', 'style': 'form', 'explode': True }})
    r"""Selector specifying which fields to include in a partial response."""  
    key: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'key', 'style': 'form', 'explode': True }})
    r"""API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."""  
    oauth_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'oauth_token', 'style': 'form', 'explode': True }})
    r"""OAuth 2.0 token for the current user."""  
    order_by: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'orderBy', 'style': 'form', 'explode': True }})
    r"""Optional. A comma-separated list of fields specifying the sorting order of the results. The default order is ascending. Add \\" DESC\\" after the field name to indicate descending order. Redundant space characters are ignored. Example: \\"location DESC, name\\". Only singular primitive fields in the response are sortable: * name * assetType * project * displayName * description * location * createTime * updateTime * state * parentFullResourceName * parentAssetType All the other fields such as repeated fields (e.g., `networkTags`, `kmsKeys`), map fields (e.g., `labels`) and struct fields (e.g., `additionalAttributes`) are not supported."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pageSize', 'style': 'form', 'explode': True }})
    r"""Optional. The page size for search result pagination. Page size is capped at 500 even if a larger value is given. If set to zero, server will pick an appropriate default. Returned results may be fewer than requested. When this happens, there could be more results as long as `next_page_token` is returned."""  
    page_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pageToken', 'style': 'form', 'explode': True }})
    r"""Optional. If present, then retrieve the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of all other method parameters, must be identical to those in the previous call."""  
    pretty_print: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'prettyPrint', 'style': 'form', 'explode': True }})
    r"""Returns response with indentations and line breaks."""  
    query: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'query', 'style': 'form', 'explode': True }})
    r"""Optional. The query statement. See [how to construct a query](https://cloud.google.com/asset-inventory/docs/searching-resources#how_to_construct_a_query) for more information. If not specified or empty, it will search all the resources within the specified `scope`. Examples: * `name:Important` to find Google Cloud resources whose name contains \\"Important\\" as a word. * `name=Important` to find the Google Cloud resource whose name is exactly \\"Important\\". * `displayName:Impor*` to find Google Cloud resources whose display name contains \\"Impor\\" as a prefix of any word in the field. * `location:us-west*` to find Google Cloud resources whose location contains both \\"us\\" and \\"west\\" as prefixes. * `labels:prod` to find Google Cloud resources whose labels contain \\"prod\\" as a key or value. * `labels.env:prod` to find Google Cloud resources that have a label \\"env\\" and its value is \\"prod\\". * `labels.env:*` to find Google Cloud resources that have a label \\"env\\". * `kmsKey:key` to find Google Cloud resources encrypted with a customer-managed encryption key whose name contains \\"key\\" as a word. This field is deprecated. Please use the `kmsKeys` field to retrieve Cloud KMS key information. * `kmsKeys:key` to find Google Cloud resources encrypted with customer-managed encryption keys whose name contains the word \\"key\\". * `relationships:instance-group-1` to find Google Cloud resources that have relationships with \\"instance-group-1\\" in the related resource name. * `relationships:INSTANCE_TO_INSTANCEGROUP` to find Compute Engine instances that have relationships of type \\"INSTANCE_TO_INSTANCEGROUP\\". * `relationships.INSTANCE_TO_INSTANCEGROUP:instance-group-1` to find Compute Engine instances that have relationships with \\"instance-group-1\\" in the Compute Engine instance group resource name, for relationship type \\"INSTANCE_TO_INSTANCEGROUP\\". * `state:ACTIVE` to find Google Cloud resources whose state contains \\"ACTIVE\\" as a word. * `NOT state:ACTIVE` to find Google Cloud resources whose state doesn't contain \\"ACTIVE\\" as a word. * `createTime<1609459200` to find Google Cloud resources that were created before \\"2021-01-01 00:00:00 UTC\\". 1609459200 is the epoch timestamp of \\"2021-01-01 00:00:00 UTC\\" in seconds. * `updateTime>1609459200` to find Google Cloud resources that were updated after \\"2021-01-01 00:00:00 UTC\\". 1609459200 is the epoch timestamp of \\"2021-01-01 00:00:00 UTC\\" in seconds. * `Important` to find Google Cloud resources that contain \\"Important\\" as a word in any of the searchable fields. * `Impor*` to find Google Cloud resources that contain \\"Impor\\" as a prefix of any word in any of the searchable fields. * `Important location:(us-west1 OR global)` to find Google Cloud resources that contain \\"Important\\" as a word in any of the searchable fields and are also located in the \\"us-west1\\" region or the \\"global\\" location."""  
    quota_user: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'quotaUser', 'style': 'form', 'explode': True }})
    r"""Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."""  
    read_mask: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'readMask', 'style': 'form', 'explode': True }})
    r"""Optional. A comma-separated list of fields specifying which fields to be returned in ResourceSearchResult. Only '*' or combination of top level fields can be specified. Field names of both snake_case and camelCase are supported. Examples: `\\"*\\"`, `\\"name,location\\"`, `\\"name,versionedResources\\"`. The read_mask paths must be valid field paths listed but not limited to (both snake_case and camelCase are supported): * name * assetType * project * displayName * description * location * tagKeys * tagValues * tagValueIds * labels * networkTags * kmsKey (This field is deprecated. Please use the `kmsKeys` field to retrieve Cloud KMS key information.) * kmsKeys * createTime * updateTime * state * additionalAttributes * versionedResources If read_mask is not specified, all fields except versionedResources will be returned. If only '*' is specified, all fields including versionedResources will be returned. Any invalid field path will trigger INVALID_ARGUMENT error."""  
    upload_protocol: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'upload_protocol', 'style': 'form', 'explode': True }})
    r"""Upload protocol for media (e.g. \\"raw\\", \\"multipart\\")."""  
    upload_type: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'uploadType', 'style': 'form', 'explode': True }})
    r"""Legacy upload protocol for media (e.g. \\"media\\", \\"multipart\\")."""  
    

@dataclasses.dataclass
class CloudassetSearchAllResourcesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    search_all_resources_response: Optional[shared_searchallresourcesresponse.SearchAllResourcesResponse] = dataclasses.field(default=None)
    r"""Successful response"""  
    