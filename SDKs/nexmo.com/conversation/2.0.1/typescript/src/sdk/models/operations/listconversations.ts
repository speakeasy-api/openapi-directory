/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ListConversationsRequest extends SpeakeasyBase {
  /**
   * Return the records that occurred before this point in time.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=date_end",
  })
  dateEnd?: string;

  /**
   * Return the records that occurred after this point in time.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=date_start",
  })
  dateStart?: string;

  /**
   * Return the records in ascending or descending order.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=order" })
  order?: shared.OrderEnum;

  /**
   * Return this amount of records in the response
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * Return calls from this index in the response
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=record_index",
  })
  recordIndex?: number;
}

export class ListConversations200ApplicationJSONEmbeddedConversationsLinksSelf extends SpeakeasyBase {
  /**
   * A link towards a conversation included in Conversation API
   */
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;
}

export class ListConversations200ApplicationJSONEmbeddedConversationsLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  @Type(() => ListConversations200ApplicationJSONEmbeddedConversationsLinksSelf)
  self?: ListConversations200ApplicationJSONEmbeddedConversationsLinksSelf;
}

export class ListConversations200ApplicationJSONEmbeddedConversations extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => ListConversations200ApplicationJSONEmbeddedConversationsLinks)
  links?: ListConversations200ApplicationJSONEmbeddedConversationsLinks;

  /**
   * Unique name for a conversation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The unique identifier for this conversation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uuid" })
  uuid: string;
}

/**
 * A list of conversation objects. See the [get details of a specific conversation](#retrieveConversation) response fields for a description of the nested objects
 */
export class ListConversations200ApplicationJSONEmbedded extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: ListConversations200ApplicationJSONEmbeddedConversations,
  })
  @Expose({ name: "conversations" })
  @Type(() => ListConversations200ApplicationJSONEmbeddedConversations)
  conversations: ListConversations200ApplicationJSONEmbeddedConversations[];
}

/**
 * List Conversations Response Payload Object.
 */
export class ListConversations200ApplicationJSON extends SpeakeasyBase {
  /**
   * A list of conversation objects. See the [get details of a specific conversation](#retrieveConversation) response fields for a description of the nested objects
   */
  @SpeakeasyMetadata()
  @Expose({ name: "_embedded" })
  @Type(() => ListConversations200ApplicationJSONEmbedded)
  embedded: ListConversations200ApplicationJSONEmbedded;

  /**
   * A series of links between resources in this API in the http://stateless.co/hal_specification.html.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => shared.LinksConversationsList)
  links: shared.LinksConversationsList;

  /**
   * The total number of records returned by your request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "count" })
  count: number;

  /**
   * The amount of records returned in this response
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize: number;

  /**
   * Return `page_size` amount of conversations from this index in the response. That is, if your request returns 300 conversations, set `record_index` to 5 in order to return conversations 50 to 59. The default value is 0. That is, the first `page_size` calls.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "record_index" })
  recordIndex: number;
}

export class ListConversationsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * List Conversations Response Payload Object.
   */
  @SpeakeasyMetadata()
  listConversations200ApplicationJSONObject?: ListConversations200ApplicationJSON;
}
