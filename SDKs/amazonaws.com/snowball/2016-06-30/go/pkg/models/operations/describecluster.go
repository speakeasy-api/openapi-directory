// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeClusterXAmzTargetEnum
type DescribeClusterXAmzTargetEnum string

const (
	DescribeClusterXAmzTargetEnumAwsieSnowballJobManagementServiceDescribeCluster DescribeClusterXAmzTargetEnum = "AWSIESnowballJobManagementService.DescribeCluster"
)

func (e *DescribeClusterXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSIESnowballJobManagementService.DescribeCluster":
		*e = DescribeClusterXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeClusterXAmzTargetEnum: %s", s)
	}
}

type DescribeClusterHeaders struct {
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DescribeClusterXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeClusterRequest struct {
	Headers DescribeClusterHeaders
	Request shared.DescribeClusterRequest `request:"mediaType=application/json"`
}

type DescribeClusterResponse struct {
	ContentType string
	// Success
	DescribeClusterResult *shared.DescribeClusterResult
	// InvalidResourceException
	InvalidResourceException interface{}
	StatusCode               int
	RawResponse              *http.Response
}
