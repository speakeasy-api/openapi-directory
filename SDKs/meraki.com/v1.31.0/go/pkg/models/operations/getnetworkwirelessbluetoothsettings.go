// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetNetworkWirelessBluetoothSettingsRequest struct {
	NetworkID string `pathParam:"style=simple,explode=false,name=networkId"`
}

// GetNetworkWirelessBluetoothSettings200ApplicationJSON - Successful operation
type GetNetworkWirelessBluetoothSettings200ApplicationJSON struct {
	// Whether APs will advertise beacons.
	AdvertisingEnabled *bool `json:"advertisingEnabled,omitempty"`
	// Whether ESL is enabled on this network.
	EslEnabled *bool `json:"eslEnabled,omitempty"`
	// The major number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
	Major *int64 `json:"major,omitempty"`
	// The way major and minor number should be assigned to nodes in the network. ('Unique', 'Non-unique')
	MajorMinorAssignmentMode *string `json:"majorMinorAssignmentMode,omitempty"`
	// The minor number to be used in the beacon identifier. Only valid in 'Non-unique' mode.
	Minor *int64 `json:"minor,omitempty"`
	// Whether APs will scan for Bluetooth enabled clients.
	ScanningEnabled *bool `json:"scanningEnabled,omitempty"`
	// The UUID to be used in the beacon identifier.
	UUID *string `json:"uuid,omitempty"`
}

type GetNetworkWirelessBluetoothSettingsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetNetworkWirelessBluetoothSettings200ApplicationJSONObject *GetNetworkWirelessBluetoothSettings200ApplicationJSON
}
