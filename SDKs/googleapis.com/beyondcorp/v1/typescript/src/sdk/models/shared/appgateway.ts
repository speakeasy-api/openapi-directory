/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AllocatedConnection } from "./allocatedconnection";
import { Expose, Type } from "class-transformer";

/**
 * Required. The type of hosting used by the AppGateway.
 */
export enum AppGatewayHostTypeEnum {
  HostTypeUnspecified = "HOST_TYPE_UNSPECIFIED",
  GcpRegionalMig = "GCP_REGIONAL_MIG",
}

/**
 * Output only. The current state of the AppGateway.
 */
export enum AppGatewayStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Creating = "CREATING",
  Created = "CREATED",
  Updating = "UPDATING",
  Deleting = "DELETING",
  Down = "DOWN",
}

/**
 * Required. The type of network connectivity used by the AppGateway.
 */
export enum AppGatewayTypeEnum {
  TypeUnspecified = "TYPE_UNSPECIFIED",
  TcpProxy = "TCP_PROXY",
}

/**
 * A BeyondCorp AppGateway resource represents a BeyondCorp protected AppGateway to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected AppGateway. Multiple connectors can be authorised for a single AppGateway.
 */
export class AppGateway extends SpeakeasyBase {
  /**
   * Output only. A list of connections allocated for the Gateway
   */
  @SpeakeasyMetadata({ elemType: AllocatedConnection })
  @Expose({ name: "allocatedConnections" })
  @Type(() => AllocatedConnection)
  allocatedConnections?: AllocatedConnection[];

  /**
   * Output only. Timestamp when the resource was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Optional. An arbitrary user-provided name for the AppGateway. Cannot exceed 64 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Required. The type of hosting used by the AppGateway.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hostType" })
  hostType?: AppGatewayHostTypeEnum;

  /**
   * Optional. Resource labels to represent user provided metadata.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Required. Unique resource name of the AppGateway. The name is ignored when creating an AppGateway.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. The current state of the AppGateway.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: AppGatewayStateEnum;

  /**
   * Required. The type of network connectivity used by the AppGateway.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: AppGatewayTypeEnum;

  /**
   * Output only. A unique identifier for the instance generated by the system.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uid" })
  uid?: string;

  /**
   * Output only. Timestamp when the resource was last modified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updateTime" })
  updateTime?: string;

  /**
   * Output only. Server-defined URI for this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri?: string;
}

/**
 * A BeyondCorp AppGateway resource represents a BeyondCorp protected AppGateway to a remote application. It creates all the necessary GCP components needed for creating a BeyondCorp protected AppGateway. Multiple connectors can be authorised for a single AppGateway.
 */
export class AppGatewayInput extends SpeakeasyBase {
  /**
   * Optional. An arbitrary user-provided name for the AppGateway. Cannot exceed 64 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Required. The type of hosting used by the AppGateway.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hostType" })
  hostType?: AppGatewayHostTypeEnum;

  /**
   * Optional. Resource labels to represent user provided metadata.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, string>;

  /**
   * Required. Unique resource name of the AppGateway. The name is ignored when creating an AppGateway.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Required. The type of network connectivity used by the AppGateway.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: AppGatewayTypeEnum;
}
