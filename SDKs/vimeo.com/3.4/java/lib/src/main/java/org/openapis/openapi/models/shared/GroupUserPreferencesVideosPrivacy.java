/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GroupUserPreferencesVideosPrivacy {
    /**
     * Whether other users can add the user's videos.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("add")
    public Boolean add;
    public GroupUserPreferencesVideosPrivacy withAdd(Boolean add) {
        this.add = add;
        return this;
    }
    
    /**
     * The user's privacy preference for comments:
     * 
     * Option descriptions:
     *  * `anybody` - Anyone can comment on the user's videos.
     *  * `contacts` - Only contacts can comment on the user's videos.
     *  * `nobody` - No one can comment on the user's videos.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comments")
    public GroupUserPreferencesVideosPrivacyCommentsEnum comments;
    public GroupUserPreferencesVideosPrivacy withComments(GroupUserPreferencesVideosPrivacyCommentsEnum comments) {
        this.comments = comments;
        return this;
    }
    
    /**
     * Whether other users can download the user's videos.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("download")
    public Boolean download;
    public GroupUserPreferencesVideosPrivacy withDownload(Boolean download) {
        this.download = download;
        return this;
    }
    
    /**
     * The user's privacy preference for embeds:
     * 
     * Option descriptions:
     *  * `private` - Only the user can embed their own videos.
     *  * `public` - Anyone can embed the user's videos.
     *  * `whitelist` - Only those on the whitelist can embed the user's videos.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("embed")
    public GroupUserPreferencesVideosPrivacyEmbedEnum embed;
    public GroupUserPreferencesVideosPrivacy withEmbed(GroupUserPreferencesVideosPrivacyEmbedEnum embed) {
        this.embed = embed;
        return this;
    }
    
    /**
     * The user's privacy preference for views:
     * 
     * Option descriptions:
     *  * `anybody` - Anyone can view the user's videos.
     *  * `contacts` - Only contacts can view the user's videos.
     *  * `disable` - Views are disabled for the user's videos.
     *  * `nobody` - No one except the user can view the user's videos.
     *  * `password` - Only those with the password can view the user's videos.
     *  * `unlisted` - Anybody can view the user's videos if they have a link.
     *  * `users` - Only other Vimeo members can view the user's videos.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("view")
    public GroupUserPreferencesVideosPrivacyViewEnum view;
    public GroupUserPreferencesVideosPrivacy withView(GroupUserPreferencesVideosPrivacyViewEnum view) {
        this.view = view;
        return this;
    }
    
}
