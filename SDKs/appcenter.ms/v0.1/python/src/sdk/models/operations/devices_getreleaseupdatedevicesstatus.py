"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class DevicesGetReleaseUpdateDevicesStatusSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    

@dataclasses.dataclass
class DevicesGetReleaseUpdateDevicesStatusRequest:
    
    app_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_name', 'style': 'simple', 'explode': False }})
    r"""The name of the application"""  
    owner_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner_name', 'style': 'simple', 'explode': False }})
    r"""The name of the owner"""  
    release_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'release_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the release."""  
    resign_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'resign_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the resign operation."""  
    include_provisioning_profile: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include_provisioning_profile', 'style': 'form', 'explode': True }})
    r"""A boolean value that indicates if the provisioning profile should be return in addition to the status. When set to true, the provisioning profile will be returned only when status is 'complete' or 'preparing_for_testers'."""  
    
class DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DevicesGetReleaseUpdateDevicesStatus404ApplicationJSON:
    r"""<b>not_found</b>: A distribution group can't be found."""
    
    code: DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    
class DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DevicesGetReleaseUpdateDevicesStatus400ApplicationJSON:
    r"""Error"""
    
    code: DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DevicesGetReleaseUpdateDevicesStatus200ApplicationJSON:
    r"""The status of the resign operation."""
    
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""The status of the resign"""  
    error_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error_code'), 'exclude': lambda f: f is None }})
    r"""Error code for any error that occured during the resigning operation."""  
    error_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error_message'), 'exclude': lambda f: f is None }})
    r"""Error message for any error that occured during the resigning operation."""  
    

@dataclasses.dataclass
class DevicesGetReleaseUpdateDevicesStatusResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    devices_get_release_update_devices_status_200_application_json_object: Optional[DevicesGetReleaseUpdateDevicesStatus200ApplicationJSON] = dataclasses.field(default=None)
    r"""Success"""  
    devices_get_release_update_devices_status_400_application_json_object: Optional[DevicesGetReleaseUpdateDevicesStatus400ApplicationJSON] = dataclasses.field(default=None)
    r"""Error"""  
    devices_get_release_update_devices_status_404_application_json_object: Optional[DevicesGetReleaseUpdateDevicesStatus404ApplicationJSON] = dataclasses.field(default=None)
    r"""<b>not_found</b>: A distribution group can't be found."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    