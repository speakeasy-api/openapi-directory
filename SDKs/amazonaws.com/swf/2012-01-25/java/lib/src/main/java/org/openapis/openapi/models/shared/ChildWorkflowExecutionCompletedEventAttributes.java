/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ChildWorkflowExecutionCompletedEventAttributes - Provides the details of the &lt;code&gt;ChildWorkflowExecutionCompleted&lt;/code&gt; event.
 */
public class ChildWorkflowExecutionCompletedEventAttributes {
    @JsonProperty("initiatedEventId")
    public Long initiatedEventId;

    public ChildWorkflowExecutionCompletedEventAttributes withInitiatedEventId(Long initiatedEventId) {
        this.initiatedEventId = initiatedEventId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("result")
    public String result;

    public ChildWorkflowExecutionCompletedEventAttributes withResult(String result) {
        this.result = result;
        return this;
    }
    
    @JsonProperty("startedEventId")
    public Long startedEventId;

    public ChildWorkflowExecutionCompletedEventAttributes withStartedEventId(Long startedEventId) {
        this.startedEventId = startedEventId;
        return this;
    }
    
    @JsonProperty("workflowExecution")
    public WorkflowExecution workflowExecution;

    public ChildWorkflowExecutionCompletedEventAttributes withWorkflowExecution(WorkflowExecution workflowExecution) {
        this.workflowExecution = workflowExecution;
        return this;
    }
    
    @JsonProperty("workflowType")
    public WorkflowType workflowType;

    public ChildWorkflowExecutionCompletedEventAttributes withWorkflowType(WorkflowType workflowType) {
        this.workflowType = workflowType;
        return this;
    }
    
    public ChildWorkflowExecutionCompletedEventAttributes(@JsonProperty("initiatedEventId") Long initiatedEventId, @JsonProperty("startedEventId") Long startedEventId, @JsonProperty("workflowExecution") WorkflowExecution workflowExecution, @JsonProperty("workflowType") WorkflowType workflowType) {
        this.initiatedEventId = initiatedEventId;
        this.startedEventId = startedEventId;
        this.workflowExecution = workflowExecution;
        this.workflowType = workflowType;
  }
}
