"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateNetworkVlanRequestBody:
    
    appliance_ip: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applianceIp') }})
    r"""The local IP of the appliance on the VLAN"""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The VLAN ID of the new VLAN (must be between 1 and 4094)"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the new VLAN"""  
    subnet: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subnet') }})
    r"""The subnet of the VLAN"""  
    group_policy_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groupPolicyId'), 'exclude': lambda f: f is None }})
    r"""The id of the desired group policy to apply to the VLAN"""  
    

@dataclasses.dataclass
class CreateNetworkVlanRequest:
    
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    request_body: CreateNetworkVlanRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class CreateNetworkVlanResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    create_network_vlan_201_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    