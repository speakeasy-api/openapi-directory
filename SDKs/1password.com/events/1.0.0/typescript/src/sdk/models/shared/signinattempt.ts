/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Client } from "./client";
import { Details } from "./details";
import { User } from "./user";
import { Expose, Transform, Type } from "class-transformer";

export enum SignInAttemptCategoryEnum {
  Success = "success",
  CredentialsFailed = "credentials_failed",
  MfaFailed = "mfa_failed",
  ModernVersionFailed = "modern_version_failed",
  FirewallFailed = "firewall_failed",
  FirewallReportedSuccess = "firewall_reported_success",
}

export enum SignInAttemptTypeEnum {
  CredentialsOk = "credentials_ok",
  MfaOk = "mfa_ok",
  PasswordSecretBad = "password_secret_bad",
  MfaMissing = "mfa_missing",
  TotpDisabled = "totp_disabled",
  TotpBad = "totp_bad",
  TotpTimeout = "totp_timeout",
  U2fDisabled = "u2f_disabled",
  U2fBad = "u2f_bad",
  U2fTimout = "u2f_timout",
  DuoDisabled = "duo_disabled",
  DuoBad = "duo_bad",
  DuoTimeout = "duo_timeout",
  DuoNativeBad = "duo_native_bad",
  PlatformSecretDisabled = "platform_secret_disabled",
  PlatformSecretBad = "platform_secret_bad",
  PlatformSecretProxy = "platform_secret_proxy",
  CodeDisabled = "code_disabled",
  CodeBad = "code_bad",
  CodeTimeout = "code_timeout",
  IpBlocked = "ip_blocked",
  ContinentBlocked = "continent_blocked",
  CountryBlocked = "country_blocked",
  AnonymousBlocked = "anonymous_blocked",
  AllBlocked = "all_blocked",
  ModernVersionMissing = "modern_version_missing",
  ModernVersionOld = "modern_version_old",
}

/**
 * A single sign-in attempt object
 */
export class SignInAttempt extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category?: SignInAttemptCategoryEnum;

  /**
   * Metadata gathered about the client
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client" })
  @Type(() => Client)
  client?: Client;

  /**
   * Country ISO Code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * Additional information about the sign-in attempt
   */
  @SpeakeasyMetadata()
  @Expose({ name: "details" })
  @Type(() => Details)
  details?: Details;

  @SpeakeasyMetadata()
  @Expose({ name: "session_uuid" })
  sessionUuid?: string;

  /**
   * User object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_user" })
  @Type(() => User)
  targetUser?: User;

  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: SignInAttemptTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "uuid" })
  uuid?: string;
}
