/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetPartnersStoresJsonRequest extends SpeakeasyBase {
  /**
   * Partner authentication token.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=auth_token",
  })
  authToken: string;

  /**
   * Statistics start date. Should be in format 'Y-m-d'.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=from" })
  from: string;

  /**
   * List page
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * Partner code.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=partner_code",
  })
  partnerCode: string;

  /**
   * Statistics end date. Should be in format 'Y-m-d'.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=to" })
  to: string;
}

export class GetPartnersStoresJsonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Bad Request.
   */
  @SpeakeasyMetadata()
  partnerError?: shared.PartnerError;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Array of partner stores statistics.
   */
  @SpeakeasyMetadata({ elemType: shared.TypeT })
  types?: shared.TypeT[];
}
