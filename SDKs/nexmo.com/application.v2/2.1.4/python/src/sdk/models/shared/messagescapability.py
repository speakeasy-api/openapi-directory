"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MessagesCapabilityWebhooksInboundURLHTTPMethodEnum(str, Enum):
    POST = 'POST'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MessagesCapabilityWebhooksInboundURL:
    r"""Vonage will forward inbound messages to this URL"""
    
    address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})  
    http_method: Optional[MessagesCapabilityWebhooksInboundURLHTTPMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http_method'), 'exclude': lambda f: f is None }})  
    
class MessagesCapabilityWebhooksStatusURLHTTPMethodEnum(str, Enum):
    POST = 'POST'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MessagesCapabilityWebhooksStatusURL:
    r"""Vonage will send message status updates (e.g. `delivered`, `seen`) to this URL"""
    
    address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})  
    http_method: Optional[MessagesCapabilityWebhooksStatusURLHTTPMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http_method'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MessagesCapabilityWebhooks:
    
    inbound_url: Optional[MessagesCapabilityWebhooksInboundURL] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inbound_url'), 'exclude': lambda f: f is None }})
    r"""Vonage will forward inbound messages to this URL"""  
    status_url: Optional[MessagesCapabilityWebhooksStatusURL] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status_url'), 'exclude': lambda f: f is None }})
    r"""Vonage will send message status updates (e.g. `delivered`, `seen`) to this URL"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MessagesCapability:
    r"""Messages / Dispatch related configuration"""
    
    version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version'), 'exclude': lambda f: f is None }})
    r"""If not populated will be set to v1"""  
    webhooks: Optional[MessagesCapabilityWebhooks] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webhooks'), 'exclude': lambda f: f is None }})  
    