// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ProvisioningConfigInput - A provisioning configuration.
type ProvisioningConfigInput struct {
	// Optional. The user-defined identifier of the provisioning config.
	CustomID *string `json:"customId,omitempty"`
	// Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.
	Email *string `json:"email,omitempty"`
	// A service account to enable customers to access instance credentials upon handover.
	HandoverServiceAccount *string `json:"handoverServiceAccount,omitempty"`
	// Instances to be created.
	Instances []InstanceConfigInput `json:"instances,omitempty"`
	// Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.
	Location *string `json:"location,omitempty"`
	// Networks to be created.
	Networks []NetworkConfigInput `json:"networks,omitempty"`
	// Optional status messages associated with the FAILED state.
	StatusMessage *string `json:"statusMessage,omitempty"`
	// A generated ticket id to track provisioning request.
	TicketID *string `json:"ticketId,omitempty"`
	// Volumes to be created.
	Volumes []VolumeConfigInput `json:"volumes,omitempty"`
	// If true, VPC SC is enabled for the cluster.
	VpcScEnabled *bool `json:"vpcScEnabled,omitempty"`
}

// ProvisioningConfigStateEnum - Output only. State of ProvisioningConfig.
type ProvisioningConfigStateEnum string

const (
	ProvisioningConfigStateEnumStateUnspecified ProvisioningConfigStateEnum = "STATE_UNSPECIFIED"
	ProvisioningConfigStateEnumDraft            ProvisioningConfigStateEnum = "DRAFT"
	ProvisioningConfigStateEnumSubmitted        ProvisioningConfigStateEnum = "SUBMITTED"
	ProvisioningConfigStateEnumProvisioning     ProvisioningConfigStateEnum = "PROVISIONING"
	ProvisioningConfigStateEnumProvisioned      ProvisioningConfigStateEnum = "PROVISIONED"
	ProvisioningConfigStateEnumValidated        ProvisioningConfigStateEnum = "VALIDATED"
	ProvisioningConfigStateEnumCancelled        ProvisioningConfigStateEnum = "CANCELLED"
	ProvisioningConfigStateEnumFailed           ProvisioningConfigStateEnum = "FAILED"
)

func (e ProvisioningConfigStateEnum) ToPointer() *ProvisioningConfigStateEnum {
	return &e
}

func (e *ProvisioningConfigStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "DRAFT":
		fallthrough
	case "SUBMITTED":
		fallthrough
	case "PROVISIONING":
		fallthrough
	case "PROVISIONED":
		fallthrough
	case "VALIDATED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "FAILED":
		*e = ProvisioningConfigStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProvisioningConfigStateEnum: %v", v)
	}
}

// ProvisioningConfig - A provisioning configuration.
type ProvisioningConfig struct {
	// Output only. URI to Cloud Console UI view of this provisioning config.
	CloudConsoleURI *string `json:"cloudConsoleUri,omitempty"`
	// Optional. The user-defined identifier of the provisioning config.
	CustomID *string `json:"customId,omitempty"`
	// Email provided to send a confirmation with provisioning config to. Deprecated in favour of email field in request messages.
	Email *string `json:"email,omitempty"`
	// A service account to enable customers to access instance credentials upon handover.
	HandoverServiceAccount *string `json:"handoverServiceAccount,omitempty"`
	// Instances to be created.
	Instances []InstanceConfig `json:"instances,omitempty"`
	// Optional. Location name of this ProvisioningConfig. It is optional only for Intake UI transition period.
	Location *string `json:"location,omitempty"`
	// Output only. The system-generated name of the provisioning config. This follows the UUID format.
	Name *string `json:"name,omitempty"`
	// Networks to be created.
	Networks []NetworkConfig `json:"networks,omitempty"`
	// Output only. State of ProvisioningConfig.
	State *ProvisioningConfigStateEnum `json:"state,omitempty"`
	// Optional status messages associated with the FAILED state.
	StatusMessage *string `json:"statusMessage,omitempty"`
	// A generated ticket id to track provisioning request.
	TicketID *string `json:"ticketId,omitempty"`
	// Output only. Last update timestamp.
	UpdateTime *string `json:"updateTime,omitempty"`
	// Volumes to be created.
	Volumes []VolumeConfig `json:"volumes,omitempty"`
	// If true, VPC SC is enabled for the cluster.
	VpcScEnabled *bool `json:"vpcScEnabled,omitempty"`
}
