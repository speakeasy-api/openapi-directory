"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import customauthconfig as shared_customauthconfig
from ..shared import oauth2defaults as shared_oauth2defaults
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AuthenticationConfig:
    r"""Contains information about the authentication config that the connector supports."""
    
    custom_auth_configs: Optional[list[shared_customauthconfig.CustomAuthConfig]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customAuthConfigs'), 'exclude': lambda f: f is None }})  
    is_api_key_auth_supported: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isApiKeyAuthSupported'), 'exclude': lambda f: f is None }})  
    is_basic_auth_supported: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isBasicAuthSupported'), 'exclude': lambda f: f is None }})  
    is_custom_auth_supported: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isCustomAuthSupported'), 'exclude': lambda f: f is None }})  
    is_o_auth2_supported: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isOAuth2Supported'), 'exclude': lambda f: f is None }})  
    o_auth2_defaults: Optional[shared_oauth2defaults.OAuth2Defaults] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oAuth2Defaults'), 'exclude': lambda f: f is None }})  
    