/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UserProfile - OK
 */
public class UserProfile {
    /**
     * For staff members, this is their primary physician's ID. For doctors, it is their own ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("doctor")
    public String doctor;

    public UserProfile withDoctor(String doctor) {
        this.doctor = doctor;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public UserProfile withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Mutually exclusive with `is_staff`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_doctor")
    public String isDoctor;

    public UserProfile withIsDoctor(String isDoctor) {
        this.isDoctor = isDoctor;
        return this;
    }
    
    /**
     * Mutually exclusive with `is_doctor`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_staff")
    public String isStaff;

    public UserProfile withIsStaff(String isStaff) {
        this.isStaff = isStaff;
        return this;
    }
    
    /**
     * Permissions the user has.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissions")
    public String permissions;

    public UserProfile withPermissions(String permissions) {
        this.permissions = permissions;
        return this;
    }
    
    /**
     * The ID of the practice group this user belongs to. This can be used to identify users in the same practice.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("practice_group")
    public String practiceGroup;

    public UserProfile withPracticeGroup(String practiceGroup) {
        this.practiceGroup = practiceGroup;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("username")
    public String username;

    public UserProfile withUsername(String username) {
        this.username = username;
        return this;
    }
    
    public UserProfile(){}
}
