"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import security as shared_security
from ..shared import updatedmediadatalist as shared_updatedmediadatalist
from datetime import date
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetUpdatedImagesSecurity:
    
    basic: Optional[shared_security.SchemeBasic] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic' }})  
    customer_access_code: Optional[str] = dataclasses.field(default=None, metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class GetUpdatedImagesSortEnum(str, Enum):
    r"""Sort order"""
    NEWEST = 'newest'
    OLDEST = 'oldest'

class GetUpdatedImagesTypeEnum(str, Enum):
    ADDITION = 'addition'
    DELETION = 'deletion'
    EDIT = 'edit'


@dataclasses.dataclass
class GetUpdatedImagesRequest:
    
    end_date: Optional[date] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'end_date', 'style': 'form', 'explode': True }})
    r"""Show images updated before the specified date"""  
    interval: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'interval', 'style': 'form', 'explode': True }})
    r"""Show images updated in the specified time period, where the time period is an interval (like SQL INTERVAL) such as 1 DAY, 6 HOUR, or 30 MINUTE; the default is 1 HOUR, which shows images that were updated in the hour preceding the request"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Page number"""  
    per_page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': True }})
    r"""Number of results per page"""  
    sort: Optional[GetUpdatedImagesSortEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""Sort order"""  
    start_date: Optional[date] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'start_date', 'style': 'form', 'explode': True }})
    r"""Show images updated on or after the specified date"""  
    type: Optional[list[GetUpdatedImagesTypeEnum]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'type', 'style': 'form', 'explode': True }})
    r"""Show images that were added, deleted, or edited; by default, the endpoint returns images that were updated in any of these ways"""  
    

@dataclasses.dataclass
class GetUpdatedImagesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    updated_media_data_list: Optional[shared_updatedmediadatalist.UpdatedMediaDataList] = dataclasses.field(default=None)
    r"""OK"""  
    