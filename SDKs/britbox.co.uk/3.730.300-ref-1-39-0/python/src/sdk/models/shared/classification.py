"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Classification:
    
    code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})
    r"""The unique code for a classification."""  
    images: dict[str, str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('images') }})  
    level: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('level') }})
    r"""The level of this classification when compared with its siblings.
    A higher level means a greater restriction.
    Each classification in a system should have a unique level.
    """  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The name of the classification for display."""  
    system: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('system') }})
    r"""The parent system code of the classification."""  
    advisory_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advisoryText'), 'exclude': lambda f: f is None }})
    r"""Parental advisort text."""  
    