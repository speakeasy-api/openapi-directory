/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TestNotificationConfigurationResponse - OK - the request has succeeded.
 */
public class TestNotificationConfigurationResponse {
    /**
     * Any error messages encountered.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorMessages")
    public String[] errorMessages;
    public TestNotificationConfigurationResponse withErrorMessages(String[] errorMessages) {
        this.errorMessages = errorMessages;
        return this;
    }
    
    /**
     * The event types that were tested.
     * &gt;Permitted values: `ACCOUNT_HOLDER_CREATED`, `ACCOUNT_CREATED`, `ACCOUNT_UPDATED`, `ACCOUNT_HOLDER_UPDATED`, `ACCOUNT_HOLDER_STATUS_CHANGE`, `ACCOUNT_HOLDER_STORE_STATUS_CHANGE` `ACCOUNT_HOLDER_VERIFICATION`, `ACCOUNT_HOLDER_LIMIT_REACHED`, `ACCOUNT_HOLDER_PAYOUT`, `PAYMENT_FAILURE`, `SCHEDULED_REFUNDS`, `REPORT_AVAILABLE`, `TRANSFER_FUNDS`, `BENEFICIARY_SETUP`, `COMPENSATE_NEGATIVE_BALANCE`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventTypes")
    public TestNotificationConfigurationResponseEventTypesEnum[] eventTypes;
    public TestNotificationConfigurationResponse withEventTypes(TestNotificationConfigurationResponseEventTypesEnum[] eventTypes) {
        this.eventTypes = eventTypes;
        return this;
    }
    
    /**
     * The notification message and related response messages.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exchangeMessages")
    public ExchangeMessage[] exchangeMessages;
    public TestNotificationConfigurationResponse withExchangeMessages(ExchangeMessage[] exchangeMessages) {
        this.exchangeMessages = exchangeMessages;
        return this;
    }
    
    /**
     * Contains field validation errors that would prevent requests from being processed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invalidFields")
    public ErrorFieldType[] invalidFields;
    public TestNotificationConfigurationResponse withInvalidFields(ErrorFieldType[] invalidFields) {
        this.invalidFields = invalidFields;
        return this;
    }
    
    /**
     * The ID of the notification subscription configuration.
     */
    @JsonProperty("notificationId")
    public Long notificationId;
    public TestNotificationConfigurationResponse withNotificationId(Long notificationId) {
        this.notificationId = notificationId;
        return this;
    }
    
    /**
     * A list of messages describing the testing steps.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("okMessages")
    public String[] okMessages;
    public TestNotificationConfigurationResponse withOkMessages(String[] okMessages) {
        this.okMessages = okMessages;
        return this;
    }
    
    /**
     * The reference of a request. Can be used to uniquely identify the request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pspReference")
    public String pspReference;
    public TestNotificationConfigurationResponse withPspReference(String pspReference) {
        this.pspReference = pspReference;
        return this;
    }
    
    /**
     * The result code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resultCode")
    public String resultCode;
    public TestNotificationConfigurationResponse withResultCode(String resultCode) {
        this.resultCode = resultCode;
        return this;
    }
    
}
