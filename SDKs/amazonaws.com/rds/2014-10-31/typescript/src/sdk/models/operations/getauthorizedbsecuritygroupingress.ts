/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export enum GETAuthorizeDBSecurityGroupIngressActionEnum {
  AuthorizeDBSecurityGroupIngress = "AuthorizeDBSecurityGroupIngress",
}

export enum GETAuthorizeDBSecurityGroupIngressVersionEnum {
  TwoThousandAndFourteen1031 = "2014-10-31",
}

export class GETAuthorizeDBSecurityGroupIngressRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETAuthorizeDBSecurityGroupIngressActionEnum;

  /**
   * The IP range to authorize.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=CIDRIP",
  })
  cidrip?: string;

  /**
   * The name of the DB security group to add authorization to.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DBSecurityGroupName",
  })
  dbSecurityGroupName: string;

  /**
   * Id of the EC2 security group to authorize. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EC2SecurityGroupId",
  })
  ec2SecurityGroupId?: string;

  /**
   * Name of the EC2 security group to authorize. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EC2SecurityGroupName",
  })
  ec2SecurityGroupName?: string;

  /**
   * Amazon Web Services account number of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> parameter. The Amazon Web Services access key ID isn't an acceptable value. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EC2SecurityGroupOwnerId",
  })
  ec2SecurityGroupOwnerId?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETAuthorizeDBSecurityGroupIngressVersionEnum;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETAuthorizeDBSecurityGroupIngressResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
