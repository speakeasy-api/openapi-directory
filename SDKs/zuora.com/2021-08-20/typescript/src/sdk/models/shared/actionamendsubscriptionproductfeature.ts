/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class ActionAmendSubscriptionProductFeature extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedById" })
  createdById?: string;

  /**
   *  Date and time when the product feature was added to the subscription.
   *
   * @remarks
   *
   *
   * **Character limit**: 29
   *
   * **Values**:
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdDate?: Date;

  /**
   *  Description of the subscription product feature.
   *
   * @remarks
   *
   *
   * **Character limit**: 500
   *
   * **Values**:
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  /**
   *  Unique code of the feature.
   *
   * @remarks
   *
   *
   * **Character limit**: 255
   *
   * **Values**:
   */
  @SpeakeasyMetadata()
  @Expose({ name: "FeatureCode" })
  featureCode?: string;

  /**
   *  Internal Zuora ID of the feature.
   *
   * @remarks
   *
   *
   * **Character limit**: 32
   *
   * **Values**:
   */
  @SpeakeasyMetadata()
  @Expose({ name: "FeatureId" })
  featureId?: string;

  /**
   *  Name of the feature.
   *
   * @remarks
   *
   *
   * **Character limit**: 255
   *
   * **Values**:
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  /**
   *  Id of the product rate plan to which the feature belongs.
   *
   * @remarks
   *
   *
   * **Character limit**: 32
   *
   * **Values**:
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RatePlanId" })
  ratePlanId?: string;

  /**
   *  Internal Zuora ID of the user who last updated the subscription product feature.
   *
   * @remarks
   *
   *
   * **Character limit**: 32
   *
   * **Values**:
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedById" })
  updatedById?: string;

  /**
   *  Date and time when the subscription product feature was last updated.
   *
   * @remarks
   *
   *
   * **Character limit**: 29
   *
   * **Values**:
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedDate?: Date;
}
