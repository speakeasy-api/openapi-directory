<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

/**
 * SDK - # Introduction
 * 
 * Welcome to the SureVoIP RESTful hypermedia API (sometimes known as a VoIP REST API, Telecom REST API, SIP API, Hypermedia API or just VoIP API.)
 * 
 * The SureVoIP API is a way for you to automate your interaction with the SureVoIP platforms. With the API, you can create your own scripts, applications or mashups which can:
 * * List calls
 * * create customers
 * * search numbers
 * * provision numbers
 * * send SMS texts
 * * create outbound calls
 * * schedule announcements
 * * schedule call hangups with an announcement
 * * subscribe to events/alerts
 * * track calls
 * * retrieve invoices
 * * grab your SIP details
 * * check your IP address
 * * be 100% self-sufficient
 * * and much more!
 * 
 * https://www.surevoip.co.uk/support/wiki/api_documentation - SureVoIP API Wiki
 * 
 * @package OpenAPI\OpenAPI
 * @access public
 * @see https://www.surevoip.co.uk/support/wiki/api_documentation
 */
class SDK
{
	public const SERVERS = [
        /** Production SureVoIP API (live data) */
		'https://api.surevoip.co.uk',
        /** Sandbox SureVoIP API (data is 24 hours behind production) */
		'https://sandbox.surevoip.co.uk',
	];
  	
    /**
     * Announcements that can be played during or before a call
     * 
     * @var Announcements $$announcements
     */
	public Announcements $announcements;
	
    /**
     * Areacodes of numbers that SureVoIP can supply
     * 
     * @var Areacodes $$areacodes
     */
	public Areacodes $areacodes;
	
    /**
     * Billing details and invoices
     * 
     * @var Billing $$billing
     */
	public Billing $billing;
	
    /**
     * Create phone calls via an API
     * 
     * @var Calls $$calls
     */
	public Calls $calls;
	
    /**
     * Create a charge for a customer
     * 
     * @var Charges $$charges
     */
	public Charges $charges;
	
    /**
     * Create, List, Updated and Delete Contacts
     * 
     * @var Contacts $$contacts
     */
	public Contacts $contacts;
	
    /**
     * Create, List, Updated and Delete Customers
     * 
     * @var Customers $$customers
     */
	public Customers $customers;
	
    /**
     * Echo back your payload
     * 
     * @var EchoT $$echo
     */
	public EchoT $echo;
	
    /**
     * Send faxes - Not in service
     * 
     * @var Faxes $$faxes
     */
	public Faxes $faxes;
	
	public GlobalT $global;
	
    /**
     * Create, List, Updated and Delete Hosted VoIP Customers
     * 
     * @var Hosted $$hosted
     */
	public Hosted $hosted;
	
    /**
     * Create, List, Updated and Delete SIMs
     * 
     * @var Mobile $$mobile
     */
	public Mobile $mobile;
	
    /**
     * Create, List, Updated and Delete Numbers (DDIs)
     * 
     * @var Numbers $$numbers
     */
	public Numbers $numbers;
	
    /**
     * Create, List, Updated and Delete Partners and their customers
     * 
     * @var Partners $$partners
     */
	public Partners $partners;
	
    /**
     * Create, List, Updated and Delete Number Porting requests
     * 
     * @var Porting $$porting
     */
	public Porting $porting;
	
    /**
     * List SIP details
     * 
     * @var Sip $$sip
     */
	public Sip $sip;
	
    /**
     * Send SMS (text messages)
     * 
     * @var Sms $$sms
     */
	public Sms $sms;
	
    /**
     * List support details
     * 
     * @var Support $$support
     */
	public Support $support;
	
    /**
     * Create call credit topups for customers
     * 
     * @var Topups $$topups
     */
	public Topups $topups;
		
	// SDK private variables namespaced with _ to avoid conflicts with API models
	private ?\GuzzleHttp\ClientInterface $_defaultClient;
	private ?\GuzzleHttp\ClientInterface $_securityClient;
	private ?Models\Shared\Security $_security;
	private string $_serverUrl;
	private string $_language = 'php';
	private string $_sdkVersion = '0.0.1';
	private string $_genVersion = 'internal';

	/**
	 * Returns a new instance of the SDK builder used to configure and create the SDK instance.
	 * 
	 * @return SDKBuilder
	 */
	public static function builder(): SDKBuilder
	{
		return new SDKBuilder();
	}

	/**
	 * @param \GuzzleHttp\ClientInterface|null $client	 
	 * @param Models\Shared\Security|null $security
	 * @param string $serverUrl
	 * @param array<string, string>|null $params
	 */
	public function __construct(?\GuzzleHttp\ClientInterface $client, ?Models\Shared\Security $security, string $serverUrl, ?array $params)
	{
		$this->_defaultClient = $client;
		
		if ($this->_defaultClient === null) {
			$this->_defaultClient = new \GuzzleHttp\Client([
				'timeout' => 60,
			]);
		}

		$this->_securityClient = null;
		if ($security !== null) {
			$this->_security = $security;
			$this->_securityClient = Utils\Utils::configureSecurityClient($this->_defaultClient, $this->_security);
		}
		
		if ($this->_securityClient === null) {
			$this->_securityClient = $this->_defaultClient;
		}

		if (!empty($serverUrl)) {
			$this->_serverUrl = Utils\Utils::templateUrl($serverUrl, $params);
		}
		
		if (empty($this->_serverUrl)) {
			$this->_serverUrl = $this::SERVERS[0];
		}
		
		$this->announcements = new Announcements(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->areacodes = new Areacodes(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->billing = new Billing(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->calls = new Calls(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->charges = new Charges(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->contacts = new Contacts(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->customers = new Customers(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->echo = new EchoT(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->faxes = new Faxes(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->global = new GlobalT(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->hosted = new Hosted(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->mobile = new Mobile(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->numbers = new Numbers(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->partners = new Partners(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->porting = new Porting(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->sip = new Sip(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->sms = new Sms(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->support = new Support(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
		
		$this->topups = new Topups(
			$this->_defaultClient,
			$this->_securityClient,
			$this->_serverUrl,
			$this->_language,
			$this->_sdkVersion,
			$this->_genVersion
		);
	}
}