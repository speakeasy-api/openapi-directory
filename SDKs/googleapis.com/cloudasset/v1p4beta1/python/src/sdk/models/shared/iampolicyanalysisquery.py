"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accessselector as shared_accessselector
from ..shared import identityselector as shared_identityselector
from ..shared import resourceselector as shared_resourceselector
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IamPolicyAnalysisQuery:
    r"""IAM policy analysis query message."""
    
    access_selector: Optional[shared_accessselector.AccessSelector] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accessSelector'), 'exclude': lambda f: f is None }})
    r"""Specifies roles and/or permissions to analyze, to determine both the identities possessing them and the resources they control. If multiple values are specified, results will include identities and resources matching any of them. The total number of roles and permissions should be equal or less than 10."""  
    identity_selector: Optional[shared_identityselector.IdentitySelector] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('identitySelector'), 'exclude': lambda f: f is None }})
    r"""Specifies an identity for which to determine resource access, based on roles assigned either directly to them or to the groups they belong to, directly or indirectly."""  
    parent: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parent'), 'exclude': lambda f: f is None }})
    r"""Required. The relative name of the root asset. Only resources and IAM policies within the parent will be analyzed. This can only be an organization number (such as \\"organizations/123\\"), a folder number (such as \\"folders/123\\"), a project ID (such as \\"projects/my-project-id\\"), or a project number (such as \\"projects/12345\\"). To know how to get organization id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-organization#retrieving_your_organization_id). To know how to get folder or project id, visit [here ](https://cloud.google.com/resource-manager/docs/creating-managing-folders#viewing_or_listing_folders_and_projects)."""  
    resource_selector: Optional[shared_resourceselector.ResourceSelector] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceSelector'), 'exclude': lambda f: f is None }})
    r"""Specifies the resource to analyze for access policies, which may be set directly on the resource, or on ancestors such as organizations, folders or projects."""  
    