"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TwoHundredResult = exports.TwoHundredResultResult = exports.TwoHundredResultResultAst = exports.TwoHundredResultResultAstRules = exports.TwoHundredResultResultAstRulesHead = exports.TwoHundredResultResultAstRulesHeadKey = exports.TwoHundredResultResultAstRulesBody = exports.TwoHundredResultResultAstRulesBodyTerms = exports.TwoHundredResultResultAstRulesBodyTermsValue = exports.TwoHundredResultResultAstPackage = exports.TwoHundredResultResultAstPackagePath = exports.TwoHundredResultResultAstPackagePathTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The type of the path operation
 */
var TwoHundredResultResultAstPackagePathTypeEnum;
(function (TwoHundredResultResultAstPackagePathTypeEnum) {
    TwoHundredResultResultAstPackagePathTypeEnum["Import"] = "import";
    TwoHundredResultResultAstPackagePathTypeEnum["Package"] = "package";
})(TwoHundredResultResultAstPackagePathTypeEnum = exports.TwoHundredResultResultAstPackagePathTypeEnum || (exports.TwoHundredResultResultAstPackagePathTypeEnum = {}));
var TwoHundredResultResultAstPackagePath = /** @class */ (function (_super) {
    __extends(TwoHundredResultResultAstPackagePath, _super);
    function TwoHundredResultResultAstPackagePath() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], TwoHundredResultResultAstPackagePath.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], TwoHundredResultResultAstPackagePath.prototype, "value", void 0);
    return TwoHundredResultResultAstPackagePath;
}(utils_1.SpeakeasyBase));
exports.TwoHundredResultResultAstPackagePath = TwoHundredResultResultAstPackagePath;
var TwoHundredResultResultAstPackage = /** @class */ (function (_super) {
    __extends(TwoHundredResultResultAstPackage, _super);
    function TwoHundredResultResultAstPackage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: TwoHundredResultResultAstPackagePath }),
        (0, class_transformer_1.Expose)({ name: "path" }),
        (0, class_transformer_1.Type)(function () { return TwoHundredResultResultAstPackagePath; }),
        __metadata("design:type", Array)
    ], TwoHundredResultResultAstPackage.prototype, "path", void 0);
    return TwoHundredResultResultAstPackage;
}(utils_1.SpeakeasyBase));
exports.TwoHundredResultResultAstPackage = TwoHundredResultResultAstPackage;
var TwoHundredResultResultAstRulesBodyTermsValue = /** @class */ (function (_super) {
    __extends(TwoHundredResultResultAstRulesBodyTermsValue, _super);
    function TwoHundredResultResultAstRulesBodyTermsValue() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], TwoHundredResultResultAstRulesBodyTermsValue.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], TwoHundredResultResultAstRulesBodyTermsValue.prototype, "value", void 0);
    return TwoHundredResultResultAstRulesBodyTermsValue;
}(utils_1.SpeakeasyBase));
exports.TwoHundredResultResultAstRulesBodyTermsValue = TwoHundredResultResultAstRulesBodyTermsValue;
var TwoHundredResultResultAstRulesBodyTerms = /** @class */ (function (_super) {
    __extends(TwoHundredResultResultAstRulesBodyTerms, _super);
    function TwoHundredResultResultAstRulesBodyTerms() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], TwoHundredResultResultAstRulesBodyTerms.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: TwoHundredResultResultAstRulesBodyTermsValue }),
        (0, class_transformer_1.Expose)({ name: "value" }),
        (0, class_transformer_1.Type)(function () { return TwoHundredResultResultAstRulesBodyTermsValue; }),
        __metadata("design:type", Array)
    ], TwoHundredResultResultAstRulesBodyTerms.prototype, "value", void 0);
    return TwoHundredResultResultAstRulesBodyTerms;
}(utils_1.SpeakeasyBase));
exports.TwoHundredResultResultAstRulesBodyTerms = TwoHundredResultResultAstRulesBodyTerms;
var TwoHundredResultResultAstRulesBody = /** @class */ (function (_super) {
    __extends(TwoHundredResultResultAstRulesBody, _super);
    function TwoHundredResultResultAstRulesBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "index" }),
        __metadata("design:type", Number)
    ], TwoHundredResultResultAstRulesBody.prototype, "index", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: TwoHundredResultResultAstRulesBodyTerms }),
        (0, class_transformer_1.Expose)({ name: "terms" }),
        (0, class_transformer_1.Type)(function () { return TwoHundredResultResultAstRulesBodyTerms; }),
        __metadata("design:type", Array)
    ], TwoHundredResultResultAstRulesBody.prototype, "terms", void 0);
    return TwoHundredResultResultAstRulesBody;
}(utils_1.SpeakeasyBase));
exports.TwoHundredResultResultAstRulesBody = TwoHundredResultResultAstRulesBody;
/**
 * The type/value pairing for this rule's head
 */
var TwoHundredResultResultAstRulesHeadKey = /** @class */ (function (_super) {
    __extends(TwoHundredResultResultAstRulesHeadKey, _super);
    function TwoHundredResultResultAstRulesHeadKey() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], TwoHundredResultResultAstRulesHeadKey.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], TwoHundredResultResultAstRulesHeadKey.prototype, "value", void 0);
    return TwoHundredResultResultAstRulesHeadKey;
}(utils_1.SpeakeasyBase));
exports.TwoHundredResultResultAstRulesHeadKey = TwoHundredResultResultAstRulesHeadKey;
var TwoHundredResultResultAstRulesHead = /** @class */ (function (_super) {
    __extends(TwoHundredResultResultAstRulesHead, _super);
    function TwoHundredResultResultAstRulesHead() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "key" }),
        (0, class_transformer_1.Type)(function () { return TwoHundredResultResultAstRulesHeadKey; }),
        __metadata("design:type", TwoHundredResultResultAstRulesHeadKey)
    ], TwoHundredResultResultAstRulesHead.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], TwoHundredResultResultAstRulesHead.prototype, "name", void 0);
    return TwoHundredResultResultAstRulesHead;
}(utils_1.SpeakeasyBase));
exports.TwoHundredResultResultAstRulesHead = TwoHundredResultResultAstRulesHead;
var TwoHundredResultResultAstRules = /** @class */ (function (_super) {
    __extends(TwoHundredResultResultAstRules, _super);
    function TwoHundredResultResultAstRules() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: TwoHundredResultResultAstRulesBody }),
        (0, class_transformer_1.Expose)({ name: "body" }),
        (0, class_transformer_1.Type)(function () { return TwoHundredResultResultAstRulesBody; }),
        __metadata("design:type", Array)
    ], TwoHundredResultResultAstRules.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "head" }),
        (0, class_transformer_1.Type)(function () { return TwoHundredResultResultAstRulesHead; }),
        __metadata("design:type", TwoHundredResultResultAstRulesHead)
    ], TwoHundredResultResultAstRules.prototype, "head", void 0);
    return TwoHundredResultResultAstRules;
}(utils_1.SpeakeasyBase));
exports.TwoHundredResultResultAstRules = TwoHundredResultResultAstRules;
/**
 * The types for declarations and runtime objects passed to your implementation. This consists of an abstract syntax tree (AST) of policy modules, package and import declarations, rules, expressions, and terms.
 *
 * @see {@link https://godoc.org/github.com/open-policy-agent/opa/ast} - AST
 */
var TwoHundredResultResultAst = /** @class */ (function (_super) {
    __extends(TwoHundredResultResultAst, _super);
    function TwoHundredResultResultAst() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "package" }),
        (0, class_transformer_1.Type)(function () { return TwoHundredResultResultAstPackage; }),
        __metadata("design:type", TwoHundredResultResultAstPackage)
    ], TwoHundredResultResultAst.prototype, "package", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: TwoHundredResultResultAstRules }),
        (0, class_transformer_1.Expose)({ name: "rules" }),
        (0, class_transformer_1.Type)(function () { return TwoHundredResultResultAstRules; }),
        __metadata("design:type", Array)
    ], TwoHundredResultResultAst.prototype, "rules", void 0);
    return TwoHundredResultResultAst;
}(utils_1.SpeakeasyBase));
exports.TwoHundredResultResultAst = TwoHundredResultResultAst;
var TwoHundredResultResult = /** @class */ (function (_super) {
    __extends(TwoHundredResultResult, _super);
    function TwoHundredResultResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ast" }),
        (0, class_transformer_1.Type)(function () { return TwoHundredResultResultAst; }),
        __metadata("design:type", TwoHundredResultResultAst)
    ], TwoHundredResultResult.prototype, "ast", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], TwoHundredResultResult.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "raw" }),
        __metadata("design:type", String)
    ], TwoHundredResultResult.prototype, "raw", void 0);
    return TwoHundredResultResult;
}(utils_1.SpeakeasyBase));
exports.TwoHundredResultResult = TwoHundredResultResult;
/**
 * Success
 */
var TwoHundredResult = /** @class */ (function (_super) {
    __extends(TwoHundredResult, _super);
    function TwoHundredResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: TwoHundredResultResult }),
        (0, class_transformer_1.Expose)({ name: "result" }),
        (0, class_transformer_1.Type)(function () { return TwoHundredResultResult; }),
        __metadata("design:type", Array)
    ], TwoHundredResult.prototype, "result", void 0);
    return TwoHundredResult;
}(utils_1.SpeakeasyBase));
exports.TwoHundredResult = TwoHundredResult;
