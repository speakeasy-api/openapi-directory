"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cloudformationhealth as shared_cloudformationhealth
from ..shared import servicehealth as shared_servicehealth
from ..shared import taghealth as shared_taghealth
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DescribeResourceCollectionHealthResponse:
    r"""Success"""
    
    cloud_formation: Optional[list[shared_cloudformationhealth.CloudFormationHealth]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CloudFormation'), 'exclude': lambda f: f is None }})  
    next_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NextToken'), 'exclude': lambda f: f is None }})  
    service: Optional[list[shared_servicehealth.ServiceHealth]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Service'), 'exclude': lambda f: f is None }})  
    tags: Optional[list[shared_taghealth.TagHealth]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    