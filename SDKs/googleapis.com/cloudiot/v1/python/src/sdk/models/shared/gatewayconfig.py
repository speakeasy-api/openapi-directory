"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GatewayConfigGatewayAuthMethodEnum(str, Enum):
    r"""Indicates how to authorize and/or authenticate devices to access the gateway."""
    GATEWAY_AUTH_METHOD_UNSPECIFIED = 'GATEWAY_AUTH_METHOD_UNSPECIFIED'
    ASSOCIATION_ONLY = 'ASSOCIATION_ONLY'
    DEVICE_AUTH_TOKEN_ONLY = 'DEVICE_AUTH_TOKEN_ONLY'
    ASSOCIATION_AND_DEVICE_AUTH_TOKEN = 'ASSOCIATION_AND_DEVICE_AUTH_TOKEN'

class GatewayConfigGatewayTypeEnum(str, Enum):
    r"""Indicates whether the device is a gateway."""
    GATEWAY_TYPE_UNSPECIFIED = 'GATEWAY_TYPE_UNSPECIFIED'
    GATEWAY = 'GATEWAY'
    NON_GATEWAY = 'NON_GATEWAY'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GatewayConfig:
    r"""Gateway-related configuration and state."""
    
    gateway_auth_method: Optional[GatewayConfigGatewayAuthMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gatewayAuthMethod'), 'exclude': lambda f: f is None }})
    r"""Indicates how to authorize and/or authenticate devices to access the gateway."""  
    gateway_type: Optional[GatewayConfigGatewayTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gatewayType'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the device is a gateway."""  
    last_accessed_gateway_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastAccessedGatewayId'), 'exclude': lambda f: f is None }})
    r"""[Output only] The ID of the gateway the device accessed most recently."""  
    last_accessed_gateway_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastAccessedGatewayTime'), 'exclude': lambda f: f is None }})
    r"""[Output only] The most recent time at which the device accessed the gateway specified in `last_accessed_gateway`."""  
    