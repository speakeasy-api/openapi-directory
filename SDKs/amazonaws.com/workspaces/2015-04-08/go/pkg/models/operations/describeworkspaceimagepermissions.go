// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeWorkspaceImagePermissionsXAmzTargetEnum
type DescribeWorkspaceImagePermissionsXAmzTargetEnum string

const (
	DescribeWorkspaceImagePermissionsXAmzTargetEnumWorkspacesServiceDescribeWorkspaceImagePermissions DescribeWorkspaceImagePermissionsXAmzTargetEnum = "WorkspacesService.DescribeWorkspaceImagePermissions"
)

func (e *DescribeWorkspaceImagePermissionsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "WorkspacesService.DescribeWorkspaceImagePermissions":
		*e = DescribeWorkspaceImagePermissionsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeWorkspaceImagePermissionsXAmzTargetEnum: %s", s)
	}
}

type DescribeWorkspaceImagePermissionsRequest struct {
	DescribeWorkspaceImagePermissionsRequest shared.DescribeWorkspaceImagePermissionsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                            *string                                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                        *string                                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                           *string                                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                 *string                                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                        *string                                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                            *string                                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                        *string                                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                               DescribeWorkspaceImagePermissionsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeWorkspaceImagePermissionsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	DescribeWorkspaceImagePermissionsResult *shared.DescribeWorkspaceImagePermissionsResult
	// InvalidParameterValuesException
	InvalidParameterValuesException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
