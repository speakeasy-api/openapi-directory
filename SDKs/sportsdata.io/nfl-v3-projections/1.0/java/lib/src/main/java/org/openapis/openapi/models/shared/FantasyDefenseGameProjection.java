/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class FantasyDefenseGameProjection {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AssistedTackles")
    public Double assistedTackles;
    public FantasyDefenseGameProjection withAssistedTackles(Double assistedTackles) {
        this.assistedTackles = assistedTackles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BlockedKickReturnTouchdowns")
    public Double blockedKickReturnTouchdowns;
    public FantasyDefenseGameProjection withBlockedKickReturnTouchdowns(Double blockedKickReturnTouchdowns) {
        this.blockedKickReturnTouchdowns = blockedKickReturnTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BlockedKickReturnYards")
    public Double blockedKickReturnYards;
    public FantasyDefenseGameProjection withBlockedKickReturnYards(Double blockedKickReturnYards) {
        this.blockedKickReturnYards = blockedKickReturnYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BlockedKicks")
    public Double blockedKicks;
    public FantasyDefenseGameProjection withBlockedKicks(Double blockedKicks) {
        this.blockedKicks = blockedKicks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Date")
    public String date;
    public FantasyDefenseGameProjection withDate(String date) {
        this.date = date;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DateTime")
    public String dateTime;
    public FantasyDefenseGameProjection withDateTime(String dateTime) {
        this.dateTime = dateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Day")
    public String day;
    public FantasyDefenseGameProjection withDay(String day) {
        this.day = day;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DefensiveTouchdowns")
    public Double defensiveTouchdowns;
    public FantasyDefenseGameProjection withDefensiveTouchdowns(Double defensiveTouchdowns) {
        this.defensiveTouchdowns = defensiveTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DraftKingsFantasyPointsAllowed")
    public Double draftKingsFantasyPointsAllowed;
    public FantasyDefenseGameProjection withDraftKingsFantasyPointsAllowed(Double draftKingsFantasyPointsAllowed) {
        this.draftKingsFantasyPointsAllowed = draftKingsFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DraftKingsKickerFantasyPointsAllowed")
    public Double draftKingsKickerFantasyPointsAllowed;
    public FantasyDefenseGameProjection withDraftKingsKickerFantasyPointsAllowed(Double draftKingsKickerFantasyPointsAllowed) {
        this.draftKingsKickerFantasyPointsAllowed = draftKingsKickerFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DraftKingsPosition")
    public String draftKingsPosition;
    public FantasyDefenseGameProjection withDraftKingsPosition(String draftKingsPosition) {
        this.draftKingsPosition = draftKingsPosition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DraftKingsQuarterbackFantasyPointsAllowed")
    public Double draftKingsQuarterbackFantasyPointsAllowed;
    public FantasyDefenseGameProjection withDraftKingsQuarterbackFantasyPointsAllowed(Double draftKingsQuarterbackFantasyPointsAllowed) {
        this.draftKingsQuarterbackFantasyPointsAllowed = draftKingsQuarterbackFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DraftKingsRunningbackFantasyPointsAllowed")
    public Double draftKingsRunningbackFantasyPointsAllowed;
    public FantasyDefenseGameProjection withDraftKingsRunningbackFantasyPointsAllowed(Double draftKingsRunningbackFantasyPointsAllowed) {
        this.draftKingsRunningbackFantasyPointsAllowed = draftKingsRunningbackFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DraftKingsSalary")
    public Long draftKingsSalary;
    public FantasyDefenseGameProjection withDraftKingsSalary(Long draftKingsSalary) {
        this.draftKingsSalary = draftKingsSalary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DraftKingsTightEndFantasyPointsAllowed")
    public Double draftKingsTightEndFantasyPointsAllowed;
    public FantasyDefenseGameProjection withDraftKingsTightEndFantasyPointsAllowed(Double draftKingsTightEndFantasyPointsAllowed) {
        this.draftKingsTightEndFantasyPointsAllowed = draftKingsTightEndFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DraftKingsWideReceiverFantasyPointsAllowed")
    public Double draftKingsWideReceiverFantasyPointsAllowed;
    public FantasyDefenseGameProjection withDraftKingsWideReceiverFantasyPointsAllowed(Double draftKingsWideReceiverFantasyPointsAllowed) {
        this.draftKingsWideReceiverFantasyPointsAllowed = draftKingsWideReceiverFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FanDuelFantasyPointsAllowed")
    public Double fanDuelFantasyPointsAllowed;
    public FantasyDefenseGameProjection withFanDuelFantasyPointsAllowed(Double fanDuelFantasyPointsAllowed) {
        this.fanDuelFantasyPointsAllowed = fanDuelFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FanDuelKickerFantasyPointsAllowed")
    public Double fanDuelKickerFantasyPointsAllowed;
    public FantasyDefenseGameProjection withFanDuelKickerFantasyPointsAllowed(Double fanDuelKickerFantasyPointsAllowed) {
        this.fanDuelKickerFantasyPointsAllowed = fanDuelKickerFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FanDuelPosition")
    public String fanDuelPosition;
    public FantasyDefenseGameProjection withFanDuelPosition(String fanDuelPosition) {
        this.fanDuelPosition = fanDuelPosition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FanDuelQuarterbackFantasyPointsAllowed")
    public Double fanDuelQuarterbackFantasyPointsAllowed;
    public FantasyDefenseGameProjection withFanDuelQuarterbackFantasyPointsAllowed(Double fanDuelQuarterbackFantasyPointsAllowed) {
        this.fanDuelQuarterbackFantasyPointsAllowed = fanDuelQuarterbackFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FanDuelRunningbackFantasyPointsAllowed")
    public Double fanDuelRunningbackFantasyPointsAllowed;
    public FantasyDefenseGameProjection withFanDuelRunningbackFantasyPointsAllowed(Double fanDuelRunningbackFantasyPointsAllowed) {
        this.fanDuelRunningbackFantasyPointsAllowed = fanDuelRunningbackFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FanDuelSalary")
    public Long fanDuelSalary;
    public FantasyDefenseGameProjection withFanDuelSalary(Long fanDuelSalary) {
        this.fanDuelSalary = fanDuelSalary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FanDuelTightEndFantasyPointsAllowed")
    public Double fanDuelTightEndFantasyPointsAllowed;
    public FantasyDefenseGameProjection withFanDuelTightEndFantasyPointsAllowed(Double fanDuelTightEndFantasyPointsAllowed) {
        this.fanDuelTightEndFantasyPointsAllowed = fanDuelTightEndFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FanDuelWideReceiverFantasyPointsAllowed")
    public Double fanDuelWideReceiverFantasyPointsAllowed;
    public FantasyDefenseGameProjection withFanDuelWideReceiverFantasyPointsAllowed(Double fanDuelWideReceiverFantasyPointsAllowed) {
        this.fanDuelWideReceiverFantasyPointsAllowed = fanDuelWideReceiverFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyDataSalary")
    public Long fantasyDataSalary;
    public FantasyDefenseGameProjection withFantasyDataSalary(Long fantasyDataSalary) {
        this.fantasyDataSalary = fantasyDataSalary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyDefenseID")
    public Long fantasyDefenseID;
    public FantasyDefenseGameProjection withFantasyDefenseID(Long fantasyDefenseID) {
        this.fantasyDefenseID = fantasyDefenseID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyDraftFantasyPointsAllowed")
    public Double fantasyDraftFantasyPointsAllowed;
    public FantasyDefenseGameProjection withFantasyDraftFantasyPointsAllowed(Double fantasyDraftFantasyPointsAllowed) {
        this.fantasyDraftFantasyPointsAllowed = fantasyDraftFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyDraftKickerFantasyPointsAllowed")
    public Double fantasyDraftKickerFantasyPointsAllowed;
    public FantasyDefenseGameProjection withFantasyDraftKickerFantasyPointsAllowed(Double fantasyDraftKickerFantasyPointsAllowed) {
        this.fantasyDraftKickerFantasyPointsAllowed = fantasyDraftKickerFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyDraftPosition")
    public String fantasyDraftPosition;
    public FantasyDefenseGameProjection withFantasyDraftPosition(String fantasyDraftPosition) {
        this.fantasyDraftPosition = fantasyDraftPosition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyDraftQuarterbackFantasyPointsAllowed")
    public Double fantasyDraftQuarterbackFantasyPointsAllowed;
    public FantasyDefenseGameProjection withFantasyDraftQuarterbackFantasyPointsAllowed(Double fantasyDraftQuarterbackFantasyPointsAllowed) {
        this.fantasyDraftQuarterbackFantasyPointsAllowed = fantasyDraftQuarterbackFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyDraftRunningbackFantasyPointsAllowed")
    public Double fantasyDraftRunningbackFantasyPointsAllowed;
    public FantasyDefenseGameProjection withFantasyDraftRunningbackFantasyPointsAllowed(Double fantasyDraftRunningbackFantasyPointsAllowed) {
        this.fantasyDraftRunningbackFantasyPointsAllowed = fantasyDraftRunningbackFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyDraftSalary")
    public Long fantasyDraftSalary;
    public FantasyDefenseGameProjection withFantasyDraftSalary(Long fantasyDraftSalary) {
        this.fantasyDraftSalary = fantasyDraftSalary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyDraftTightEndFantasyPointsAllowed")
    public Double fantasyDraftTightEndFantasyPointsAllowed;
    public FantasyDefenseGameProjection withFantasyDraftTightEndFantasyPointsAllowed(Double fantasyDraftTightEndFantasyPointsAllowed) {
        this.fantasyDraftTightEndFantasyPointsAllowed = fantasyDraftTightEndFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyDraftWideReceiverFantasyPointsAllowed")
    public Double fantasyDraftWideReceiverFantasyPointsAllowed;
    public FantasyDefenseGameProjection withFantasyDraftWideReceiverFantasyPointsAllowed(Double fantasyDraftWideReceiverFantasyPointsAllowed) {
        this.fantasyDraftWideReceiverFantasyPointsAllowed = fantasyDraftWideReceiverFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPoints")
    public Double fantasyPoints;
    public FantasyDefenseGameProjection withFantasyPoints(Double fantasyPoints) {
        this.fantasyPoints = fantasyPoints;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsAllowed")
    public Double fantasyPointsAllowed;
    public FantasyDefenseGameProjection withFantasyPointsAllowed(Double fantasyPointsAllowed) {
        this.fantasyPointsAllowed = fantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsDraftKings")
    public Double fantasyPointsDraftKings;
    public FantasyDefenseGameProjection withFantasyPointsDraftKings(Double fantasyPointsDraftKings) {
        this.fantasyPointsDraftKings = fantasyPointsDraftKings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsFanDuel")
    public Double fantasyPointsFanDuel;
    public FantasyDefenseGameProjection withFantasyPointsFanDuel(Double fantasyPointsFanDuel) {
        this.fantasyPointsFanDuel = fantasyPointsFanDuel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsFantasyDraft")
    public Double fantasyPointsFantasyDraft;
    public FantasyDefenseGameProjection withFantasyPointsFantasyDraft(Double fantasyPointsFantasyDraft) {
        this.fantasyPointsFantasyDraft = fantasyPointsFantasyDraft;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FantasyPointsYahoo")
    public Double fantasyPointsYahoo;
    public FantasyDefenseGameProjection withFantasyPointsYahoo(Double fantasyPointsYahoo) {
        this.fantasyPointsYahoo = fantasyPointsYahoo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalReturnTouchdowns")
    public Double fieldGoalReturnTouchdowns;
    public FantasyDefenseGameProjection withFieldGoalReturnTouchdowns(Double fieldGoalReturnTouchdowns) {
        this.fieldGoalReturnTouchdowns = fieldGoalReturnTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FieldGoalReturnYards")
    public Double fieldGoalReturnYards;
    public FantasyDefenseGameProjection withFieldGoalReturnYards(Double fieldGoalReturnYards) {
        this.fieldGoalReturnYards = fieldGoalReturnYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FourthDownAttempts")
    public Double fourthDownAttempts;
    public FantasyDefenseGameProjection withFourthDownAttempts(Double fourthDownAttempts) {
        this.fourthDownAttempts = fourthDownAttempts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FourthDownConversions")
    public Double fourthDownConversions;
    public FantasyDefenseGameProjection withFourthDownConversions(Double fourthDownConversions) {
        this.fourthDownConversions = fourthDownConversions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FumbleReturnTouchdowns")
    public Double fumbleReturnTouchdowns;
    public FantasyDefenseGameProjection withFumbleReturnTouchdowns(Double fumbleReturnTouchdowns) {
        this.fumbleReturnTouchdowns = fumbleReturnTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FumbleReturnYards")
    public Double fumbleReturnYards;
    public FantasyDefenseGameProjection withFumbleReturnYards(Double fumbleReturnYards) {
        this.fumbleReturnYards = fumbleReturnYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FumblesForced")
    public Double fumblesForced;
    public FantasyDefenseGameProjection withFumblesForced(Double fumblesForced) {
        this.fumblesForced = fumblesForced;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FumblesRecovered")
    public Double fumblesRecovered;
    public FantasyDefenseGameProjection withFumblesRecovered(Double fumblesRecovered) {
        this.fumblesRecovered = fumblesRecovered;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameKey")
    public String gameKey;
    public FantasyDefenseGameProjection withGameKey(String gameKey) {
        this.gameKey = gameKey;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalGameID")
    public Long globalGameID;
    public FantasyDefenseGameProjection withGlobalGameID(Long globalGameID) {
        this.globalGameID = globalGameID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalOpponentID")
    public Long globalOpponentID;
    public FantasyDefenseGameProjection withGlobalOpponentID(Long globalOpponentID) {
        this.globalOpponentID = globalOpponentID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalTeamID")
    public Long globalTeamID;
    public FantasyDefenseGameProjection withGlobalTeamID(Long globalTeamID) {
        this.globalTeamID = globalTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeOrAway")
    public String homeOrAway;
    public FantasyDefenseGameProjection withHomeOrAway(String homeOrAway) {
        this.homeOrAway = homeOrAway;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Humidity")
    public Long humidity;
    public FantasyDefenseGameProjection withHumidity(Long humidity) {
        this.humidity = humidity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InterceptionReturnTouchdowns")
    public Double interceptionReturnTouchdowns;
    public FantasyDefenseGameProjection withInterceptionReturnTouchdowns(Double interceptionReturnTouchdowns) {
        this.interceptionReturnTouchdowns = interceptionReturnTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InterceptionReturnYards")
    public Double interceptionReturnYards;
    public FantasyDefenseGameProjection withInterceptionReturnYards(Double interceptionReturnYards) {
        this.interceptionReturnYards = interceptionReturnYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Interceptions")
    public Double interceptions;
    public FantasyDefenseGameProjection withInterceptions(Double interceptions) {
        this.interceptions = interceptions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsGameOver")
    public Boolean isGameOver;
    public FantasyDefenseGameProjection withIsGameOver(Boolean isGameOver) {
        this.isGameOver = isGameOver;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KickReturnLong")
    public Double kickReturnLong;
    public FantasyDefenseGameProjection withKickReturnLong(Double kickReturnLong) {
        this.kickReturnLong = kickReturnLong;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KickReturnTouchdowns")
    public Double kickReturnTouchdowns;
    public FantasyDefenseGameProjection withKickReturnTouchdowns(Double kickReturnTouchdowns) {
        this.kickReturnTouchdowns = kickReturnTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KickReturnYards")
    public Double kickReturnYards;
    public FantasyDefenseGameProjection withKickReturnYards(Double kickReturnYards) {
        this.kickReturnYards = kickReturnYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KickReturns")
    public Double kickReturns;
    public FantasyDefenseGameProjection withKickReturns(Double kickReturns) {
        this.kickReturns = kickReturns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KickerFantasyPointsAllowed")
    public Double kickerFantasyPointsAllowed;
    public FantasyDefenseGameProjection withKickerFantasyPointsAllowed(Double kickerFantasyPointsAllowed) {
        this.kickerFantasyPointsAllowed = kickerFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OffensiveYardsAllowed")
    public Double offensiveYardsAllowed;
    public FantasyDefenseGameProjection withOffensiveYardsAllowed(Double offensiveYardsAllowed) {
        this.offensiveYardsAllowed = offensiveYardsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Opponent")
    public String opponent;
    public FantasyDefenseGameProjection withOpponent(String opponent) {
        this.opponent = opponent;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpponentID")
    public Long opponentID;
    public FantasyDefenseGameProjection withOpponentID(Long opponentID) {
        this.opponentID = opponentID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpponentPositionRank")
    public Long opponentPositionRank;
    public FantasyDefenseGameProjection withOpponentPositionRank(Long opponentPositionRank) {
        this.opponentPositionRank = opponentPositionRank;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpponentRank")
    public Long opponentRank;
    public FantasyDefenseGameProjection withOpponentRank(Long opponentRank) {
        this.opponentRank = opponentRank;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PassesDefended")
    public Double passesDefended;
    public FantasyDefenseGameProjection withPassesDefended(Double passesDefended) {
        this.passesDefended = passesDefended;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PlayerID")
    public Long playerID;
    public FantasyDefenseGameProjection withPlayerID(Long playerID) {
        this.playerID = playerID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PointsAllowed")
    public Double pointsAllowed;
    public FantasyDefenseGameProjection withPointsAllowed(Double pointsAllowed) {
        this.pointsAllowed = pointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PointsAllowedByDefenseSpecialTeams")
    public Double pointsAllowedByDefenseSpecialTeams;
    public FantasyDefenseGameProjection withPointsAllowedByDefenseSpecialTeams(Double pointsAllowedByDefenseSpecialTeams) {
        this.pointsAllowedByDefenseSpecialTeams = pointsAllowedByDefenseSpecialTeams;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PuntReturnLong")
    public Double puntReturnLong;
    public FantasyDefenseGameProjection withPuntReturnLong(Double puntReturnLong) {
        this.puntReturnLong = puntReturnLong;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PuntReturnTouchdowns")
    public Double puntReturnTouchdowns;
    public FantasyDefenseGameProjection withPuntReturnTouchdowns(Double puntReturnTouchdowns) {
        this.puntReturnTouchdowns = puntReturnTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PuntReturnYards")
    public Double puntReturnYards;
    public FantasyDefenseGameProjection withPuntReturnYards(Double puntReturnYards) {
        this.puntReturnYards = puntReturnYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PuntReturns")
    public Double puntReturns;
    public FantasyDefenseGameProjection withPuntReturns(Double puntReturns) {
        this.puntReturns = puntReturns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QuarterbackFantasyPointsAllowed")
    public Double quarterbackFantasyPointsAllowed;
    public FantasyDefenseGameProjection withQuarterbackFantasyPointsAllowed(Double quarterbackFantasyPointsAllowed) {
        this.quarterbackFantasyPointsAllowed = quarterbackFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("QuarterbackHits")
    public Double quarterbackHits;
    public FantasyDefenseGameProjection withQuarterbackHits(Double quarterbackHits) {
        this.quarterbackHits = quarterbackHits;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RunningbackFantasyPointsAllowed")
    public Double runningbackFantasyPointsAllowed;
    public FantasyDefenseGameProjection withRunningbackFantasyPointsAllowed(Double runningbackFantasyPointsAllowed) {
        this.runningbackFantasyPointsAllowed = runningbackFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SackYards")
    public Double sackYards;
    public FantasyDefenseGameProjection withSackYards(Double sackYards) {
        this.sackYards = sackYards;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Sacks")
    public Double sacks;
    public FantasyDefenseGameProjection withSacks(Double sacks) {
        this.sacks = sacks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Safeties")
    public Double safeties;
    public FantasyDefenseGameProjection withSafeties(Double safeties) {
        this.safeties = safeties;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ScoreID")
    public Long scoreID;
    public FantasyDefenseGameProjection withScoreID(Long scoreID) {
        this.scoreID = scoreID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ScoringDetails")
    public ScoringDetail[] scoringDetails;
    public FantasyDefenseGameProjection withScoringDetails(ScoringDetail[] scoringDetails) {
        this.scoringDetails = scoringDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Season")
    public Long season;
    public FantasyDefenseGameProjection withSeason(Long season) {
        this.season = season;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SeasonType")
    public Long seasonType;
    public FantasyDefenseGameProjection withSeasonType(Long seasonType) {
        this.seasonType = seasonType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SoloTackles")
    public Double soloTackles;
    public FantasyDefenseGameProjection withSoloTackles(Double soloTackles) {
        this.soloTackles = soloTackles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SpecialTeamsTouchdowns")
    public Double specialTeamsTouchdowns;
    public FantasyDefenseGameProjection withSpecialTeamsTouchdowns(Double specialTeamsTouchdowns) {
        this.specialTeamsTouchdowns = specialTeamsTouchdowns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Stadium")
    public String stadium;
    public FantasyDefenseGameProjection withStadium(String stadium) {
        this.stadium = stadium;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TacklesForLoss")
    public Double tacklesForLoss;
    public FantasyDefenseGameProjection withTacklesForLoss(Double tacklesForLoss) {
        this.tacklesForLoss = tacklesForLoss;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Team")
    public String team;
    public FantasyDefenseGameProjection withTeam(String team) {
        this.team = team;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TeamID")
    public Long teamID;
    public FantasyDefenseGameProjection withTeamID(Long teamID) {
        this.teamID = teamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Temperature")
    public Long temperature;
    public FantasyDefenseGameProjection withTemperature(Long temperature) {
        this.temperature = temperature;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThirdDownAttempts")
    public Double thirdDownAttempts;
    public FantasyDefenseGameProjection withThirdDownAttempts(Double thirdDownAttempts) {
        this.thirdDownAttempts = thirdDownAttempts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ThirdDownConversions")
    public Double thirdDownConversions;
    public FantasyDefenseGameProjection withThirdDownConversions(Double thirdDownConversions) {
        this.thirdDownConversions = thirdDownConversions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TightEndFantasyPointsAllowed")
    public Double tightEndFantasyPointsAllowed;
    public FantasyDefenseGameProjection withTightEndFantasyPointsAllowed(Double tightEndFantasyPointsAllowed) {
        this.tightEndFantasyPointsAllowed = tightEndFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TouchdownsScored")
    public Double touchdownsScored;
    public FantasyDefenseGameProjection withTouchdownsScored(Double touchdownsScored) {
        this.touchdownsScored = touchdownsScored;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TwoPointConversionReturns")
    public Double twoPointConversionReturns;
    public FantasyDefenseGameProjection withTwoPointConversionReturns(Double twoPointConversionReturns) {
        this.twoPointConversionReturns = twoPointConversionReturns;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VictivSalary")
    public Long victivSalary;
    public FantasyDefenseGameProjection withVictivSalary(Long victivSalary) {
        this.victivSalary = victivSalary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Week")
    public Long week;
    public FantasyDefenseGameProjection withWeek(Long week) {
        this.week = week;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WideReceiverFantasyPointsAllowed")
    public Double wideReceiverFantasyPointsAllowed;
    public FantasyDefenseGameProjection withWideReceiverFantasyPointsAllowed(Double wideReceiverFantasyPointsAllowed) {
        this.wideReceiverFantasyPointsAllowed = wideReceiverFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WindSpeed")
    public Long windSpeed;
    public FantasyDefenseGameProjection withWindSpeed(Long windSpeed) {
        this.windSpeed = windSpeed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("YahooFantasyPointsAllowed")
    public Double yahooFantasyPointsAllowed;
    public FantasyDefenseGameProjection withYahooFantasyPointsAllowed(Double yahooFantasyPointsAllowed) {
        this.yahooFantasyPointsAllowed = yahooFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("YahooKickerFantasyPointsAllowed")
    public Double yahooKickerFantasyPointsAllowed;
    public FantasyDefenseGameProjection withYahooKickerFantasyPointsAllowed(Double yahooKickerFantasyPointsAllowed) {
        this.yahooKickerFantasyPointsAllowed = yahooKickerFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("YahooPosition")
    public String yahooPosition;
    public FantasyDefenseGameProjection withYahooPosition(String yahooPosition) {
        this.yahooPosition = yahooPosition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("YahooQuarterbackFantasyPointsAllowed")
    public Double yahooQuarterbackFantasyPointsAllowed;
    public FantasyDefenseGameProjection withYahooQuarterbackFantasyPointsAllowed(Double yahooQuarterbackFantasyPointsAllowed) {
        this.yahooQuarterbackFantasyPointsAllowed = yahooQuarterbackFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("YahooRunningbackFantasyPointsAllowed")
    public Double yahooRunningbackFantasyPointsAllowed;
    public FantasyDefenseGameProjection withYahooRunningbackFantasyPointsAllowed(Double yahooRunningbackFantasyPointsAllowed) {
        this.yahooRunningbackFantasyPointsAllowed = yahooRunningbackFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("YahooSalary")
    public Long yahooSalary;
    public FantasyDefenseGameProjection withYahooSalary(Long yahooSalary) {
        this.yahooSalary = yahooSalary;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("YahooTightEndFantasyPointsAllowed")
    public Double yahooTightEndFantasyPointsAllowed;
    public FantasyDefenseGameProjection withYahooTightEndFantasyPointsAllowed(Double yahooTightEndFantasyPointsAllowed) {
        this.yahooTightEndFantasyPointsAllowed = yahooTightEndFantasyPointsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("YahooWideReceiverFantasyPointsAllowed")
    public Double yahooWideReceiverFantasyPointsAllowed;
    public FantasyDefenseGameProjection withYahooWideReceiverFantasyPointsAllowed(Double yahooWideReceiverFantasyPointsAllowed) {
        this.yahooWideReceiverFantasyPointsAllowed = yahooWideReceiverFantasyPointsAllowed;
        return this;
    }
    
}
