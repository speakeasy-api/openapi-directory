/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class VerificationError {
    /**
     * Contains key-value pairs that specify the actions that the legal entity can do in your platform. The key is a capability required for your integration. For example, **issueCard** for Issuing.The value is an object containing the settings for the capability.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("capabilities")
    public VerificationErrorCapabilitiesEnum[] capabilities;
    public VerificationError withCapabilities(VerificationErrorCapabilitiesEnum[] capabilities) {
        this.capabilities = capabilities;
        return this;
    }
    
    /**
     * The general error code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    public String code;
    public VerificationError withCode(String code) {
        this.code = code;
        return this;
    }
    
    /**
     * The general error message.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message")
    public String message;
    public VerificationError withMessage(String message) {
        this.message = message;
        return this;
    }
    
    /**
     * An object containing possible solutions to fix a verification error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remediatingActions")
    public RemediatingAction[] remediatingActions;
    public VerificationError withRemediatingActions(RemediatingAction[] remediatingActions) {
        this.remediatingActions = remediatingActions;
        return this;
    }
    
    /**
     * An array containing more granular information about the cause of the verification error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subErrors")
    public VerificationErrorRecursive[] subErrors;
    public VerificationError withSubErrors(VerificationErrorRecursive[] subErrors) {
        this.subErrors = subErrors;
        return this;
    }
    
    /**
     * The type of error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public VerificationErrorTypeEnum type;
    public VerificationError withType(VerificationErrorTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
