"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import stackframe as shared_stackframe
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StackFrames:
    r"""A collection of stack frames, which can be truncated."""
    
    dropped_frames_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('droppedFramesCount'), 'exclude': lambda f: f is None }})
    r"""The number of stack frames that were dropped because there were too many stack frames. If this value is 0, then no stack frames were dropped."""  
    frame: Optional[list[shared_stackframe.StackFrame]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('frame'), 'exclude': lambda f: f is None }})
    r"""Stack frames in this call stack."""  
    