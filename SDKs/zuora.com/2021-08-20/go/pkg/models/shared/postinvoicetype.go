// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// PostInvoiceTypeStatusEnum - The status of invoice. By default, the invoice status is Draft.
//
// When creating an invoice, if you set this field to `Posted`, the invoice is created and posted directly.
type PostInvoiceTypeStatusEnum string

const (
	PostInvoiceTypeStatusEnumDraft  PostInvoiceTypeStatusEnum = "Draft"
	PostInvoiceTypeStatusEnumPosted PostInvoiceTypeStatusEnum = "Posted"
)

func (e *PostInvoiceTypeStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Draft":
		fallthrough
	case "Posted":
		*e = PostInvoiceTypeStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostInvoiceTypeStatusEnum: %s", s)
	}
}

type PostInvoiceTypeTransferredToAccountingEnum string

const (
	PostInvoiceTypeTransferredToAccountingEnumProcessing PostInvoiceTypeTransferredToAccountingEnum = "Processing"
	PostInvoiceTypeTransferredToAccountingEnumError      PostInvoiceTypeTransferredToAccountingEnum = "Error"
	PostInvoiceTypeTransferredToAccountingEnumIgnore     PostInvoiceTypeTransferredToAccountingEnum = "Ignore"
	PostInvoiceTypeTransferredToAccountingEnumTrue       PostInvoiceTypeTransferredToAccountingEnum = "true"
	PostInvoiceTypeTransferredToAccountingEnumFalse      PostInvoiceTypeTransferredToAccountingEnum = "false"
)

func (e *PostInvoiceTypeTransferredToAccountingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Processing":
		fallthrough
	case "Error":
		fallthrough
	case "Ignore":
		fallthrough
	case "true":
		fallthrough
	case "false":
		*e = PostInvoiceTypeTransferredToAccountingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostInvoiceTypeTransferredToAccountingEnum: %s", s)
	}
}

// PostInvoiceType - Container for custom fields of an Invoice object.
type PostInvoiceType struct {
	// ID of the corresponding object in NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
	//
	IntegrationIDNS *string `json:"IntegrationId__NS,omitempty"`
	// Status of the invoice's synchronization with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
	//
	IntegrationStatusNS *string `json:"IntegrationStatus__NS,omitempty"`
	// Date when the invoice was synchronized with NetSuite. Only available if you have installed the [Zuora Connector for NetSuite](https://www.zuora.com/connect/app/?appId=265).
	//
	SyncDateNS *string `json:"SyncDate__NS,omitempty"`
	// The ID of the account associated with the invoice.
	//
	AccountID string `json:"accountId"`
	// Whether invoices are automatically picked up for processing in the corresponding payment run.
	//
	AutoPay *bool `json:"autoPay,omitempty"`
	// Comments about the invoice.
	//
	Comments *string `json:"comments,omitempty"`
	// The date by which the payment for this invoice is due, in `yyyy-mm-dd` format.
	//
	DueDate *types.Date `json:"dueDate,omitempty"`
	// The date that appears on the invoice being created, in `yyyy-mm-dd` format. The value cannot fall in a closed accounting period.
	//
	InvoiceDate types.Date `json:"invoiceDate"`
	// Container for invoice items. The maximum number of invoice items is 1,000.
	//
	InvoiceItems []PostInvoiceItemType `json:"invoiceItems,omitempty"`
	// The status of invoice. By default, the invoice status is Draft.
	//
	// When creating an invoice, if you set this field to `Posted`, the invoice is created and posted directly.
	//
	Status                  *PostInvoiceTypeStatusEnum                  `json:"status,omitempty"`
	TransferredToAccounting *PostInvoiceTypeTransferredToAccountingEnum `json:"transferredToAccounting,omitempty"`
}
