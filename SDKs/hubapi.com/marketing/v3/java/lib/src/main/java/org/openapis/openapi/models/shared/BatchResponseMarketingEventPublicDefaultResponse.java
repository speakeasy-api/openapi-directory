/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * BatchResponseMarketingEventPublicDefaultResponse - successful operation
 */
public class BatchResponseMarketingEventPublicDefaultResponse {
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("completedAt")
    public OffsetDateTime completedAt;

    public BatchResponseMarketingEventPublicDefaultResponse withCompletedAt(OffsetDateTime completedAt) {
        this.completedAt = completedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errors")
    public StandardError[] errors;

    public BatchResponseMarketingEventPublicDefaultResponse withErrors(StandardError[] errors) {
        this.errors = errors;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public java.util.Map<String, String> links;

    public BatchResponseMarketingEventPublicDefaultResponse withLinks(java.util.Map<String, String> links) {
        this.links = links;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numErrors")
    public Integer numErrors;

    public BatchResponseMarketingEventPublicDefaultResponse withNumErrors(Integer numErrors) {
        this.numErrors = numErrors;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("requestedAt")
    public OffsetDateTime requestedAt;

    public BatchResponseMarketingEventPublicDefaultResponse withRequestedAt(OffsetDateTime requestedAt) {
        this.requestedAt = requestedAt;
        return this;
    }
    
    @JsonProperty("results")
    public MarketingEventPublicDefaultResponse[] results;

    public BatchResponseMarketingEventPublicDefaultResponse withResults(MarketingEventPublicDefaultResponse[] results) {
        this.results = results;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startedAt")
    public OffsetDateTime startedAt;

    public BatchResponseMarketingEventPublicDefaultResponse withStartedAt(OffsetDateTime startedAt) {
        this.startedAt = startedAt;
        return this;
    }
    
    @JsonProperty("status")
    public BatchResponseMarketingEventPublicDefaultResponseStatusEnum status;

    public BatchResponseMarketingEventPublicDefaultResponse withStatus(BatchResponseMarketingEventPublicDefaultResponseStatusEnum status) {
        this.status = status;
        return this;
    }
    
    public BatchResponseMarketingEventPublicDefaultResponse(@JsonProperty("completedAt") OffsetDateTime completedAt, @JsonProperty("results") MarketingEventPublicDefaultResponse[] results, @JsonProperty("startedAt") OffsetDateTime startedAt, @JsonProperty("status") BatchResponseMarketingEventPublicDefaultResponseStatusEnum status) {
        this.completedAt = completedAt;
        this.results = results;
        this.startedAt = startedAt;
        this.status = status;
  }
}
