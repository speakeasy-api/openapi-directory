/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Matcher } from "./matcher";
import { Score } from "./score";
import { Expose, Type } from "class-transformer";

export class SaveaccountconfigRequest extends SpeakeasyBase {
  /**
   * This field determines the type of approval configuration applied to SKUs received  from a seller. The possible values include:
   *
   * @remarks
   *
   * - `default` where the Matcher reviews the SKU, and approves it based on its score
   *
   * - `manual` for manual approvals through the Received SKU UI or Match API
   *
   * - `autoApprove` for every SKU received from a given seller to be approved automatically, regardless of the Matcher Score.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MatchFlux" })
  matchFlux: string;

  /**
   * Matchers for approving and rejecting SKUs received from sellers.
   */
  @SpeakeasyMetadata({ elemType: Matcher })
  @Expose({ name: "Matchers" })
  @Type(() => Matcher)
  matchers: Matcher[];

  /**
   * Matcher rates received SKUs by comparing the data sent by sellers to existing fields in the marketplace. The calculation of these scores determines whether the product has been: `Approved` or `Denied`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Score" })
  @Type(() => Score)
  score: Score;

  /**
   * This attribute maps product and SKU specifications.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SpecificationsMapping" })
  specificationsMapping: string[];
}
