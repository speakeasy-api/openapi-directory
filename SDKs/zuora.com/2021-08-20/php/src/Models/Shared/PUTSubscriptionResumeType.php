<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class PUTSubscriptionResumeType
{
    /**
     * The priority order to apply credit memos and/or unapplied payments to an invoice. Possible item values are: `CreditMemo`, `UnappliedPayment`.
     * 
     * 
     * **Note:**
     *   - This field is valid only if the `applyCredit` field is set to `true`.
     *   - If no value is specified for this field, the default priority order is used, ["CreditMemo", "UnappliedPayment"], to apply credit memos first and then apply unapplied payments.
     *   - If only one item is specified, only the items of the spedified type are applied to invoices. For example, if the value is `["CreditMemo"]`, only credit memos are used to apply to invoices.
     * 
     * 
     * @var ?array<string> $applicationOrder
     */
	#[\JMS\Serializer\Annotation\SerializedName('applicationOrder')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $applicationOrder = null;
    
    /**
     * Whether to automatically apply credit memos or unapplied payments, or both to an invoice.
     * 
     * 
     * If the value is `true`, the credit memo or unapplied payment, or both will be automatically applied to the invoice. If no value is specified or the value is `false`, no action is taken.
     * 
     * **Note:** This field is only available if you have [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement) enabled. The Invoice Settlement feature is generally available as of Zuora Billing Release 296 (March 2021). This feature includes Unapplied Payments, Credit and Debit Memo, and Invoice Item Settlement. If you want to enable Invoice Settlement, see [Invoice Settlement Enablement and Checklist Guide](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement/Invoice_Settlement_Migration_Checklist_and_Guide) for more information.
     * 
     * 
     * @var ?bool $applyCredit
     */
	#[\JMS\Serializer\Annotation\SerializedName('applyCredit')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $applyCredit = null;
    
    /**
     * Whether to automatically apply a credit balance to an invoice.
     * 
     * 
     * If the value is `true`, the credit balance is applied to the invoice. If the value is `false`, no action is taken.
     * 
     * 
     * To view the credit balance adjustment, retrieve the details of the invoice using the Get Invoices method.
     * 
     * Prerequisite: `invoice` must be `true`. 
     * 
     * **Note:** 
     *   - If you are using the field `invoiceCollect` rather than the field `invoice`, the `invoiceCollect` value must be `true`.
     *   - This field is deprecated if you have the Invoice Settlement feature enabled.
     * 
     * 
     * @var ?bool $applyCreditBalance
     */
	#[\JMS\Serializer\Annotation\SerializedName('applyCreditBalance')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $applyCreditBalance = null;
    
    /**
     * Collects an automatic payment for a subscription. The collection generated in this operation is only for this subscription, not for the entire customer account.
     * 
     * 
     * If the value is `true`, the automatic payment is collected. If the value is `false`, no action is taken.
     * 
     * Prerequisite: The `invoice` or `runBilling` field must be `true`. 
     * 
     * **Note**: This field is only available if you set the `zuora-version` request header to `196.0` or later.
     * 
     * 
     * @var ?bool $collect
     */
	#[\JMS\Serializer\Annotation\SerializedName('collect')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $collect = null;
    
    /**
     * The date when the customer notifies you that they want to resume their subscription.
     * 
     * 
     * 
     * @var ?\DateTime $contractEffectiveDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('contractEffectiveDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $contractEffectiveDate = null;
    
    /**
     * The date of the billing document, in `yyyy-mm-dd` format. It represents the invoice date for invoices, credit memo date for credit memos, and debit memo date for debit memos.
     * 
     * 
     * - If this field is specified, the specified date is used as the billing document date. 
     * - If this field is not specified, the date specified in the `targetDate` is used as the billing document date.
     * 
     * 
     * @var ?\DateTime $documentDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('documentDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $documentDate = null;
    
    /**
     * Whether to extend the subscription term by the length of time the suspension is in effect.
     * 
     * 
     * Values: `true`, `false`.
     * 
     * 
     * @var ?bool $extendsTerm
     */
	#[\JMS\Serializer\Annotation\SerializedName('extendsTerm')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $extendsTerm = null;
    
    /**
     * **Note:** This field has been replaced by the `runBilling` field. The
     * 
     * `invoice` field is only available for backward compatibility.
     * 
     * 
     * Creates an invoice for a subscription. The invoice generated in this
     * operation is only for this subscription, not for the entire customer
     * account.
     * 
     * 
     * If the value is `true`, an invoice is created. If the value is
     * `false`, no action is taken. The default value is `false`.
     * 
     * 
     * This field is in Zuora REST API version control. Supported minor
     * versions are `196.0` and `207.0`. To use this field in the method, you
     * must set the `zuora-version` parameter to the minor version number in
     * the request header. 
     * 
     * 
     * @var ?bool $invoice
     */
	#[\JMS\Serializer\Annotation\SerializedName('invoice')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $invoice = null;
    
    /**
     * **Note:** This field has been replaced by the `invoice` field
     * 
     * and the `collect` field. `invoiceCollect` is available only for backward
     * compatibility.
     * 
     * 
     * If `true`, an invoice is generated and payment collected automatically during
     * the subscription process. If `false`, no invoicing or payment
     * takes place.  The invoice generated in this operation is only for this subscription,
     * not for the entire customer account.
     * 
     * 
     * **Note**: This field is only available if you set the `zuora-version` request header to `186.0`, `187.0`, `188.0`, or `189.0`.
     * 
     * 
     * @var ?bool $invoiceCollect
     */
	#[\JMS\Serializer\Annotation\SerializedName('invoiceCollect')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $invoiceCollect = null;
    
    /**
     * **Note:** This field has been replaced by the `targetDate` field. The
     * 
     * `invoiceTargetDate` field is only available for backward
     * compatibility.
     * 
     * 
     * Date through which to calculate charges if an invoice is generated, as
     * yyyy-mm-dd. Default is current date.
     * 
     * 
     * This field is in Zuora REST API version control. Supported minor
     * versions are `207.0` and earlier.  
     * 
     * 
     * @var ?\DateTime $invoiceTargetDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('invoiceTargetDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $invoiceTargetDate = null;
    
    /**
     * The length of the period used to specify when the subscription is resumed. The subscription resumption takes effect after a specified period based on the suspend date or today's date. You must use this field together with the `resumePeriodsType` field to specify the period.
     * 
     * 
     * **Note:** This field is only applicable when the `suspendPolicy` field is set to `FixedPeriodsFromToday` or `FixedPeriodsFromSuspendDate`.
     * 
     * 
     * @var ?string $resumePeriods
     */
	#[\JMS\Serializer\Annotation\SerializedName('resumePeriods')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $resumePeriods = null;
    
    /**
     * The period type used to define when the subscription resumption takes effect. The subscription resumption takes effect after a specified period based on the suspend date or today's date. You must use this field together with the `resumePeriods` field to specify the period.
     * 
     * 
     * Values: `Day`, `Week`, `Month`, `Year`
     * 
     * **Note:** This field is only applicable when the `suspendPolicy` field is set to `FixedPeriodsFromToday` or `FixedPeriodsFromSuspendDate`.
     * 
     * 
     * @var ?string $resumePeriodsType
     */
	#[\JMS\Serializer\Annotation\SerializedName('resumePeriodsType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $resumePeriodsType = null;
    
    /**
     * Resume methods. Specify a way to resume a subscription.
     * 
     * 
     * Values:
     * 
     * * `Today`: The subscription resumption takes effect on today's date.
     * 
     * * `FixedPeriodsFromSuspendDate`: The subscription resumption takes effect after a specified period based on the suspend date. You must specify the `resumePeriods` and `resumePeriodsType` fields to define the period.
     * 
     * * `SpecificDate`: The subscription resumption takes effect on a specific date. You must define the specific date in the `resumeSpecificDate` field.
     * 
     * * `FixedPeriodsFromToday`: The subscription resumption takes effect after a specified period based on the today's date. You must specify the `resumePeriods` and `resumePeriodsType` fields to define the period.
     * 
     * 
     * @var string $resumePolicy
     */
	#[\JMS\Serializer\Annotation\SerializedName('resumePolicy')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $resumePolicy;
    
    /**
     * A specific date when the subscription resumption takes effect, in the format yyyy-mm-dd.
     * 
     * 
     * **Note:** This field is only applicable only when the `resumePolicy` field is set to `SpecificDate`.
     * 
     * The value should not be earlier than the subscription suspension date.
     * 
     * 
     * @var ?\DateTime $resumeSpecificDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('resumeSpecificDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $resumeSpecificDate = null;
    
    /**
     * Creates an invoice for a subscription. If you have the Invoice Settlement feature enabled, a credit memo might also be created based on the [invoice and credit memo generation rule](https://knowledgecenter.zuora.com/CB_Billing/Invoice_Settlement/Credit_and_Debit_Memos/Rules_for_Generating_Invoices_and_Credit_Memos).  
     * 
     * 
     * 
     * The billing documents generated
     * in this operation is only for this subscription, not for the entire
     * customer account.
     * 
     * 
     * Possible values:
     * 
     * - `true`: An invoice is created. If you have the Invoice Settlement feature enabled, a credit memo might also be created.
     * 
     * 
     * - `false`: No invoice is created.
     * 
     * 
     * **Note:** This field is in Zuora REST API version control. Supported
     * minor versions are `211.0` or later. To use this field in the method,
     * you must set the `zuora-version` parameter to the minor version number
     * in the request header.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PUTSubscriptionResumeTypeRunBillingEnum $runBilling
     */
	#[\JMS\Serializer\Annotation\SerializedName('runBilling')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PUTSubscriptionResumeTypeRunBillingEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PUTSubscriptionResumeTypeRunBillingEnum $runBilling = null;
    
    /**
     * Date through which to calculate charges if an invoice or a credit memo is generated, as
     * 
     * yyyy-mm-dd. Default is current date.
     * 
     * 
     * **Note:** The credit memo is only available if you have the Invoice Settlement feature enabled.
     * 
     * 
     * This field is in Zuora REST API version control. Supported minor
     * versions are `211.0` and later. To use this field in the method, you
     * must set the  `zuora-version` parameter to the minor version number in
     * the request header.
     * 
     * 
     * @var ?\DateTime $targetDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('targetDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $targetDate = null;
    
	public function __construct()
	{
		$this->applicationOrder = null;
		$this->applyCredit = null;
		$this->applyCreditBalance = null;
		$this->collect = null;
		$this->contractEffectiveDate = null;
		$this->documentDate = null;
		$this->extendsTerm = null;
		$this->invoice = null;
		$this->invoiceCollect = null;
		$this->invoiceTargetDate = null;
		$this->resumePeriods = null;
		$this->resumePeriodsType = null;
		$this->resumePolicy = "";
		$this->resumeSpecificDate = null;
		$this->runBilling = null;
		$this->targetDate = null;
	}
}
