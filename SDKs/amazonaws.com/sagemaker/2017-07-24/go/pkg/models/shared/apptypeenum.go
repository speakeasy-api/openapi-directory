// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AppTypeEnum string

const (
	AppTypeEnumJupyterServer    AppTypeEnum = "JupyterServer"
	AppTypeEnumKernelGateway    AppTypeEnum = "KernelGateway"
	AppTypeEnumTensorBoard      AppTypeEnum = "TensorBoard"
	AppTypeEnumRStudioServerPro AppTypeEnum = "RStudioServerPro"
	AppTypeEnumRSessionGateway  AppTypeEnum = "RSessionGateway"
)

func (e AppTypeEnum) ToPointer() *AppTypeEnum {
	return &e
}

func (e *AppTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "JupyterServer":
		fallthrough
	case "KernelGateway":
		fallthrough
	case "TensorBoard":
		fallthrough
	case "RStudioServerPro":
		fallthrough
	case "RSessionGateway":
		*e = AppTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AppTypeEnum: %v", v)
	}
}
