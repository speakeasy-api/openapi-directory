// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GETDataCountUsingGETPathParams struct {
	// apiKey
	APIKey string `pathParam:"style=simple,explode=false,name=apiKey"`
}

// GETDataCountUsingGETQueryNameEnum - queryName
type GETDataCountUsingGETQueryNameEnum string

const (
	GETDataCountUsingGETQueryNameEnumActiveUsersNow          GETDataCountUsingGETQueryNameEnum = "activeUsersNow"
	GETDataCountUsingGETQueryNameEnumDailyActiveUsers        GETDataCountUsingGETQueryNameEnum = "dailyActiveUsers"
	GETDataCountUsingGETQueryNameEnumAverageDailyActiveUsers GETDataCountUsingGETQueryNameEnum = "averageDailyActiveUsers"
	GETDataCountUsingGETQueryNameEnumLastMonthlyActiveUsers  GETDataCountUsingGETQueryNameEnum = "lastMonthlyActiveUsers"
	GETDataCountUsingGETQueryNameEnumMonthlyActiveUsers      GETDataCountUsingGETQueryNameEnum = "monthlyActiveUsers"
	GETDataCountUsingGETQueryNameEnumAverageSessionDuration  GETDataCountUsingGETQueryNameEnum = "averageSessionDuration"
)

func (e *GETDataCountUsingGETQueryNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "activeUsersNow":
		fallthrough
	case "dailyActiveUsers":
		fallthrough
	case "averageDailyActiveUsers":
		fallthrough
	case "lastMonthlyActiveUsers":
		fallthrough
	case "monthlyActiveUsers":
		fallthrough
	case "averageSessionDuration":
		*e = GETDataCountUsingGETQueryNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDataCountUsingGETQueryNameEnum: %s", s)
	}
}

// GETDataCountUsingGETStageEnum - stage
type GETDataCountUsingGETStageEnum string

const (
	GETDataCountUsingGETStageEnumLive    GETDataCountUsingGETStageEnum = "LIVE"
	GETDataCountUsingGETStageEnumPreview GETDataCountUsingGETStageEnum = "PREVIEW"
)

func (e *GETDataCountUsingGETStageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LIVE":
		fallthrough
	case "PREVIEW":
		*e = GETDataCountUsingGETStageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDataCountUsingGETStageEnum: %s", s)
	}
}

type GETDataCountUsingGETQueryParams struct {
	// queryName
	QueryName GETDataCountUsingGETQueryNameEnum `queryParam:"style=form,explode=true,name=queryName"`
	// stage
	Stage GETDataCountUsingGETStageEnum `queryParam:"style=form,explode=true,name=stage"`
}

type GETDataCountUsingGETRequest struct {
	PathParams  GETDataCountUsingGETPathParams
	QueryParams GETDataCountUsingGETQueryParams
}

type GETDataCountUsingGETResponse struct {
	// OK
	AnalyticsDataCountSwaggerModel *shared.AnalyticsDataCountSwaggerModel
	ContentType                    string
	// json error
	MessageModel *shared.MessageModel
	StatusCode   int
	RawResponse  *http.Response
}
