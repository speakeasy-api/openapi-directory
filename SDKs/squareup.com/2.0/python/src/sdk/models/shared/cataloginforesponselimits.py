"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CatalogInfoResponseLimits:
    
    batch_delete_max_object_ids: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batch_delete_max_object_ids'), 'exclude': lambda f: f is None }})
    r"""The maximum number of object IDs that may be included in a single
    `/v2/catalog/batch-delete` request.
    """  
    batch_retrieve_max_object_ids: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batch_retrieve_max_object_ids'), 'exclude': lambda f: f is None }})
    r"""The maximum number of object IDs that may appear in a `/v2/catalog/batch-retrieve`
    request.
    """  
    batch_upsert_max_objects_per_batch: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batch_upsert_max_objects_per_batch'), 'exclude': lambda f: f is None }})
    r"""The maximum number of objects that may appear within a single batch in a
    `/v2/catalog/batch-upsert` request.
    """  
    batch_upsert_max_total_objects: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batch_upsert_max_total_objects'), 'exclude': lambda f: f is None }})
    r"""The maximum number of objects that may appear across all batches in a
    `/v2/catalog/batch-upsert` request.
    """  
    search_max_page_limit: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('search_max_page_limit'), 'exclude': lambda f: f is None }})
    r"""The maximum number of results that may be returned in a page of a
    `/v2/catalog/search` response.
    """  
    update_item_modifier_lists_max_item_ids: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('update_item_modifier_lists_max_item_ids'), 'exclude': lambda f: f is None }})
    r"""The maximum number of item IDs that may be included in a single
    `/v2/catalog/update-item-modifier-lists` request.
    """  
    update_item_modifier_lists_max_modifier_lists_to_disable: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('update_item_modifier_lists_max_modifier_lists_to_disable'), 'exclude': lambda f: f is None }})
    r"""The maximum number of modifier list IDs to be disabled that may be included in
    a single `/v2/catalog/update-item-modifier-lists` request.
    """  
    update_item_modifier_lists_max_modifier_lists_to_enable: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('update_item_modifier_lists_max_modifier_lists_to_enable'), 'exclude': lambda f: f is None }})
    r"""The maximum number of modifier list IDs to be enabled that may be included in
    a single `/v2/catalog/update-item-modifier-lists` request.
    """  
    update_item_taxes_max_item_ids: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('update_item_taxes_max_item_ids'), 'exclude': lambda f: f is None }})
    r"""The maximum number of item IDs that may be included in a single
    `/v2/catalog/update-item-taxes` request.
    """  
    update_item_taxes_max_taxes_to_disable: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('update_item_taxes_max_taxes_to_disable'), 'exclude': lambda f: f is None }})
    r"""The maximum number of tax IDs to be disabled that may be included in a single
    `/v2/catalog/update-item-taxes` request.
    """  
    update_item_taxes_max_taxes_to_enable: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('update_item_taxes_max_taxes_to_enable'), 'exclude': lambda f: f is None }})
    r"""The maximum number of tax IDs to be enabled that may be included in a single
    `/v2/catalog/update-item-taxes` request.
    """  
    