// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ProductionVariantAcceleratorTypeEnum string

const (
	ProductionVariantAcceleratorTypeEnumMlEia1Medium ProductionVariantAcceleratorTypeEnum = "ml.eia1.medium"
	ProductionVariantAcceleratorTypeEnumMlEia1Large  ProductionVariantAcceleratorTypeEnum = "ml.eia1.large"
	ProductionVariantAcceleratorTypeEnumMlEia1Xlarge ProductionVariantAcceleratorTypeEnum = "ml.eia1.xlarge"
	ProductionVariantAcceleratorTypeEnumMlEia2Medium ProductionVariantAcceleratorTypeEnum = "ml.eia2.medium"
	ProductionVariantAcceleratorTypeEnumMlEia2Large  ProductionVariantAcceleratorTypeEnum = "ml.eia2.large"
	ProductionVariantAcceleratorTypeEnumMlEia2Xlarge ProductionVariantAcceleratorTypeEnum = "ml.eia2.xlarge"
)

func (e ProductionVariantAcceleratorTypeEnum) ToPointer() *ProductionVariantAcceleratorTypeEnum {
	return &e
}

func (e *ProductionVariantAcceleratorTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ml.eia1.medium":
		fallthrough
	case "ml.eia1.large":
		fallthrough
	case "ml.eia1.xlarge":
		fallthrough
	case "ml.eia2.medium":
		fallthrough
	case "ml.eia2.large":
		fallthrough
	case "ml.eia2.xlarge":
		*e = ProductionVariantAcceleratorTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProductionVariantAcceleratorTypeEnum: %v", v)
	}
}
