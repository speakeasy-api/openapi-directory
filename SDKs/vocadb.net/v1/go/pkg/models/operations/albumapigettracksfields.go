// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type AlbumAPIGetTracksFieldsPathParams struct {
	ID int `pathParam:"style=simple,explode=false,name=id"`
}

// AlbumAPIGetTracksFieldsLangEnum
type AlbumAPIGetTracksFieldsLangEnum string

const (
	AlbumAPIGetTracksFieldsLangEnumDefault  AlbumAPIGetTracksFieldsLangEnum = "Default"
	AlbumAPIGetTracksFieldsLangEnumJapanese AlbumAPIGetTracksFieldsLangEnum = "Japanese"
	AlbumAPIGetTracksFieldsLangEnumRomaji   AlbumAPIGetTracksFieldsLangEnum = "Romaji"
	AlbumAPIGetTracksFieldsLangEnumEnglish  AlbumAPIGetTracksFieldsLangEnum = "English"
)

func (e *AlbumAPIGetTracksFieldsLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = AlbumAPIGetTracksFieldsLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AlbumAPIGetTracksFieldsLangEnum: %s", s)
	}
}

type AlbumAPIGetTracksFieldsQueryParams struct {
	DiscNumber *int                             `queryParam:"style=form,explode=true,name=discNumber"`
	Field      []string                         `queryParam:"style=form,explode=true,name=field"`
	Lang       *AlbumAPIGetTracksFieldsLangEnum `queryParam:"style=form,explode=true,name=lang"`
}

type AlbumAPIGetTracksFieldsRequest struct {
	PathParams  AlbumAPIGetTracksFieldsPathParams
	QueryParams AlbumAPIGetTracksFieldsQueryParams
}

type AlbumAPIGetTracksFieldsResponse struct {
	// OK
	AlbumAPIGetTracksFields200ApplicationJSONObjects []map[string]string
	// OK
	AlbumAPIGetTracksFields200ApplicationJsonpObjects []map[string]string
	// OK
	AlbumAPIGetTracksFields200TextJSONObjects []map[string]string
	Body                                      []byte
	ContentType                               string
	StatusCode                                int
	RawResponse                               *http.Response
}
