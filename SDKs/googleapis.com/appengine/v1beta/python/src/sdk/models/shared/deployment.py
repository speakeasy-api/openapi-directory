"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import buildinfo as shared_buildinfo
from ..shared import cloudbuildoptions as shared_cloudbuildoptions
from ..shared import containerinfo as shared_containerinfo
from ..shared import fileinfo as shared_fileinfo
from ..shared import zipinfo as shared_zipinfo
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Deployment:
    r"""Code and application artifacts used to deploy a version to App Engine."""
    
    build: Optional[shared_buildinfo.BuildInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('build'), 'exclude': lambda f: f is None }})
    r"""Google Cloud Build information."""  
    cloud_build_options: Optional[shared_cloudbuildoptions.CloudBuildOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudBuildOptions'), 'exclude': lambda f: f is None }})
    r"""Options for the build operations performed as a part of the version deployment. Only applicable for App Engine flexible environment when creating a version using source code directly."""  
    container: Optional[shared_containerinfo.ContainerInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('container'), 'exclude': lambda f: f is None }})
    r"""Docker image that is used to create a container and start a VM instance for the version that you deploy. Only applicable for instances running in the App Engine flexible environment."""  
    files: Optional[dict[str, shared_fileinfo.FileInfo]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('files'), 'exclude': lambda f: f is None }})
    r"""Manifest of the files stored in Google Cloud Storage that are included as part of this version. All files must be readable using the credentials supplied with this call."""  
    zip: Optional[shared_zipinfo.ZipInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zip'), 'exclude': lambda f: f is None }})
    r"""The zip file information for a zip deployment."""  
    