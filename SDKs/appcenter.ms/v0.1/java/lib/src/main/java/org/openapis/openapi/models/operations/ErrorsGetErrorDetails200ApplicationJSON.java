/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ErrorsGetErrorDetails200ApplicationJSON - Error details.
 */
public class ErrorsGetErrorDetails200ApplicationJSON {
    /**
     * Timestamp when the app was launched, example: '2017-03-13T18:05:42Z'.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("appLaunchTimestamp")
    public OffsetDateTime appLaunchTimestamp;

    public ErrorsGetErrorDetails200ApplicationJSON withAppLaunchTimestamp(OffsetDateTime appLaunchTimestamp) {
        this.appLaunchTimestamp = appLaunchTimestamp;
        return this;
    }
    
    /**
     * Carrier name (for mobile devices).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carrierName")
    public String carrierName;

    public ErrorsGetErrorDetails200ApplicationJSON withCarrierName(String carrierName) {
        this.carrierName = carrierName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;

    public ErrorsGetErrorDetails200ApplicationJSON withCountry(String country) {
        this.country = country;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deviceName")
    public String deviceName;

    public ErrorsGetErrorDetails200ApplicationJSON withDeviceName(String deviceName) {
        this.deviceName = deviceName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorId")
    public String errorId;

    public ErrorsGetErrorDetails200ApplicationJSON withErrorId(String errorId) {
        this.errorId = errorId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasAttachments")
    public Boolean hasAttachments;

    public ErrorsGetErrorDetails200ApplicationJSON withHasAttachments(Boolean hasAttachments) {
        this.hasAttachments = hasAttachments;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasBreadcrumbs")
    public Boolean hasBreadcrumbs;

    public ErrorsGetErrorDetails200ApplicationJSON withHasBreadcrumbs(Boolean hasBreadcrumbs) {
        this.hasBreadcrumbs = hasBreadcrumbs;
        return this;
    }
    
    /**
     * Flag indicating if device is jailbroken
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jailbreak")
    public Boolean jailbreak;

    public ErrorsGetErrorDetails200ApplicationJSON withJailbreak(Boolean jailbreak) {
        this.jailbreak = jailbreak;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("language")
    public String language;

    public ErrorsGetErrorDetails200ApplicationJSON withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public ErrorsGetErrorDetails200ApplicationJSON withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osType")
    public String osType;

    public ErrorsGetErrorDetails200ApplicationJSON withOsType(String osType) {
        this.osType = osType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osVersion")
    public String osVersion;

    public ErrorsGetErrorDetails200ApplicationJSON withOsVersion(String osVersion) {
        this.osVersion = osVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    public java.util.Map<String, String> properties;

    public ErrorsGetErrorDetails200ApplicationJSON withProperties(java.util.Map<String, String> properties) {
        this.properties = properties;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reasonFrames")
    public ErrorsGetErrorDetails200ApplicationJSONReasonFrames[] reasonFrames;

    public ErrorsGetErrorDetails200ApplicationJSON withReasonFrames(ErrorsGetErrorDetails200ApplicationJSONReasonFrames[] reasonFrames) {
        this.reasonFrames = reasonFrames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timestamp")
    public OffsetDateTime timestamp;

    public ErrorsGetErrorDetails200ApplicationJSON withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userId")
    public String userId;

    public ErrorsGetErrorDetails200ApplicationJSON withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
    public ErrorsGetErrorDetails200ApplicationJSON(){}
}
