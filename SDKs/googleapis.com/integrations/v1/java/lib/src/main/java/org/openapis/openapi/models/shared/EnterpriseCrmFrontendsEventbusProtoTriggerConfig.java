/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EnterpriseCrmFrontendsEventbusProtoTriggerConfig - Configuration detail of a trigger. Next available id: 19
 */
public class EnterpriseCrmFrontendsEventbusProtoTriggerConfig {
    /**
     * An alert threshold configuration for the [trigger + client + workflow] tuple. If these values are not specified in the trigger config, default values will be populated by the system. Note that there must be exactly one alert threshold configured per [client + trigger + workflow] when published.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alertConfig")
    public EnterpriseCrmEventbusProtoWorkflowAlertConfig[] alertConfig;
    public EnterpriseCrmFrontendsEventbusProtoTriggerConfig withAlertConfig(EnterpriseCrmEventbusProtoWorkflowAlertConfig[] alertConfig) {
        this.alertConfig = alertConfig;
        return this;
    }
    
    /**
     * Cloud Scheduler Trigger configuration
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cloudSchedulerConfig")
    public EnterpriseCrmEventbusProtoCloudSchedulerConfig cloudSchedulerConfig;
    public EnterpriseCrmFrontendsEventbusProtoTriggerConfig withCloudSchedulerConfig(EnterpriseCrmEventbusProtoCloudSchedulerConfig cloudSchedulerConfig) {
        this.cloudSchedulerConfig = cloudSchedulerConfig;
        return this;
    }
    
    /**
     * User-provided description intended to give more business context about the task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public EnterpriseCrmFrontendsEventbusProtoTriggerConfig withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Required. The list of client ids which are enabled to execute the workflow using this trigger. In other words, these clients have the workflow execution privledges for this trigger. For API trigger, the client id in the incoming request is validated against the list of enabled clients. For non-API triggers, one workflow execution is triggered on behalf of each enabled client.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabledClients")
    public String[] enabledClients;
    public EnterpriseCrmFrontendsEventbusProtoTriggerConfig withEnabledClients(String[] enabledClients) {
        this.enabledClients = enabledClients;
        return this;
    }
    
    /**
     * Optional Error catcher id of the error catch flow which will be executed when execution error happens in the task
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorCatcherId")
    public String errorCatcherId;
    public EnterpriseCrmFrontendsEventbusProtoTriggerConfig withErrorCatcherId(String errorCatcherId) {
        this.errorCatcherId = errorCatcherId;
        return this;
    }
    
    /**
     * The user created label for a particular trigger.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    public String label;
    public EnterpriseCrmFrontendsEventbusProtoTriggerConfig withLabel(String label) {
        this.label = label;
        return this;
    }
    
    /**
     * Dictates how next tasks will be executed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextTasksExecutionPolicy")
    public EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicyEnum nextTasksExecutionPolicy;
    public EnterpriseCrmFrontendsEventbusProtoTriggerConfig withNextTasksExecutionPolicy(EnterpriseCrmFrontendsEventbusProtoTriggerConfigNextTasksExecutionPolicyEnum nextTasksExecutionPolicy) {
        this.nextTasksExecutionPolicy = nextTasksExecutionPolicy;
        return this;
    }
    
    /**
     * Optional. If set to true, any upcoming requests for this trigger config will be paused and the executions will be resumed later when the flag is reset. The workflow to which this trigger config belongs has to be in ACTIVE status for the executions to be paused or resumed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pauseWorkflowExecutions")
    public Boolean pauseWorkflowExecutions;
    public EnterpriseCrmFrontendsEventbusProtoTriggerConfig withPauseWorkflowExecutions(Boolean pauseWorkflowExecutions) {
        this.pauseWorkflowExecutions = pauseWorkflowExecutions;
        return this;
    }
    
    /**
     * Represents two-dimensional positions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("position")
    public EnterpriseCrmEventbusProtoCoordinate position;
    public EnterpriseCrmFrontendsEventbusProtoTriggerConfig withPosition(EnterpriseCrmEventbusProtoCoordinate position) {
        this.position = position;
        return this;
    }
    
    /**
     * Configurable properties of the trigger, not to be confused with workflow parameters. E.g. "name" is a property for API triggers and "subscription" is a property for Cloud Pubsub triggers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    public java.util.Map<String, String> properties;
    public EnterpriseCrmFrontendsEventbusProtoTriggerConfig withProperties(java.util.Map<String, String> properties) {
        this.properties = properties;
        return this;
    }
    
    /**
     * Set of tasks numbers from where the workflow execution is started by this trigger. If this is empty, then workflow is executed with default start tasks. In the list of start tasks, none of two tasks can have direct ancestor-descendant relationships (i.e. in a same workflow execution graph).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTasks")
    public EnterpriseCrmEventbusProtoNextTask[] startTasks;
    public EnterpriseCrmFrontendsEventbusProtoTriggerConfig withStartTasks(EnterpriseCrmEventbusProtoNextTask[] startTasks) {
        this.startTasks = startTasks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("triggerCriteria")
    public EnterpriseCrmEventbusProtoTriggerCriteria triggerCriteria;
    public EnterpriseCrmFrontendsEventbusProtoTriggerConfig withTriggerCriteria(EnterpriseCrmEventbusProtoTriggerCriteria triggerCriteria) {
        this.triggerCriteria = triggerCriteria;
        return this;
    }
    
    /**
     * The backend trigger ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("triggerId")
    public String triggerId;
    public EnterpriseCrmFrontendsEventbusProtoTriggerConfig withTriggerId(String triggerId) {
        this.triggerId = triggerId;
        return this;
    }
    
    /**
     * Required. A number to uniquely identify each trigger config within the workflow on UI.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("triggerNumber")
    public String triggerNumber;
    public EnterpriseCrmFrontendsEventbusProtoTriggerConfig withTriggerNumber(String triggerNumber) {
        this.triggerNumber = triggerNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("triggerType")
    public EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerTypeEnum triggerType;
    public EnterpriseCrmFrontendsEventbusProtoTriggerConfig withTriggerType(EnterpriseCrmFrontendsEventbusProtoTriggerConfigTriggerTypeEnum triggerType) {
        this.triggerType = triggerType;
        return this;
    }
    
}
