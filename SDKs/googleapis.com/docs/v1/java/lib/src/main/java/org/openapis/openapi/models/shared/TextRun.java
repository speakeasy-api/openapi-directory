/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TextRun - A ParagraphElement that represents a run of text that all has the same styling.
 */
public class TextRun {
    /**
     * The text of this run. Any non-text elements in the run are replaced with the Unicode character U+E907.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content")
    public String content;

    public TextRun withContent(String content) {
        this.content = content;
        return this;
    }
    
    /**
     * The suggested deletion IDs. If empty, then there are no suggested deletions of this content.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suggestedDeletionIds")
    public String[] suggestedDeletionIds;

    public TextRun withSuggestedDeletionIds(String[] suggestedDeletionIds) {
        this.suggestedDeletionIds = suggestedDeletionIds;
        return this;
    }
    
    /**
     * The suggested insertion IDs. A TextRun may have multiple insertion IDs if it's a nested suggested change. If empty, then this is not a suggested insertion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suggestedInsertionIds")
    public String[] suggestedInsertionIds;

    public TextRun withSuggestedInsertionIds(String[] suggestedInsertionIds) {
        this.suggestedInsertionIds = suggestedInsertionIds;
        return this;
    }
    
    /**
     * The suggested text style changes to this run, keyed by suggestion ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suggestedTextStyleChanges")
    public java.util.Map<String, SuggestedTextStyle> suggestedTextStyleChanges;

    public TextRun withSuggestedTextStyleChanges(java.util.Map<String, SuggestedTextStyle> suggestedTextStyleChanges) {
        this.suggestedTextStyleChanges = suggestedTextStyleChanges;
        return this;
    }
    
    /**
     * Represents the styling that can be applied to text. Inherited text styles are represented as unset fields in this message. A text style's parent depends on where the text style is defined: * The TextStyle of text in a Paragraph inherits from the paragraph's corresponding named style type. * The TextStyle on a named style inherits from the normal text named style. * The TextStyle of the normal text named style inherits from the default text style in the Docs editor. * The TextStyle on a Paragraph element that's contained in a table may inherit its text style from the table style. If the text style does not inherit from a parent, unsetting fields will revert the style to a value matching the defaults in the Docs editor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textStyle")
    public TextStyle textStyle;

    public TextRun withTextStyle(TextStyle textStyle) {
        this.textStyle = textStyle;
        return this;
    }
    
    public TextRun(){}
}
