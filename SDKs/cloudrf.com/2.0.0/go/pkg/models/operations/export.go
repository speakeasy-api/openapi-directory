// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ExportSecurity struct {
	APIKeyAuth shared.SchemeAPIKeyAuth `security:"scheme,type=apiKey,subtype=header"`
}

// ExportFmtEnum - Raster/Vector file format: KML, KMZ, SHP, GeoTIFF
type ExportFmtEnum string

const (
	ExportFmtEnumKml    ExportFmtEnum = "kml"
	ExportFmtEnumKmzppa ExportFmtEnum = "kmzppa"
	ExportFmtEnumShp    ExportFmtEnum = "shp"
	ExportFmtEnumTiff   ExportFmtEnum = "tiff"
)

func (e *ExportFmtEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "kml":
		fallthrough
	case "kmzppa":
		fallthrough
	case "shp":
		fallthrough
	case "tiff":
		*e = ExportFmtEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportFmtEnum: %s", s)
	}
}

type ExportQueryParams struct {
	// Calculation file name
	File string `queryParam:"style=form,explode=true,name=file"`
	// Raster/Vector file format: KML, KMZ, SHP, GeoTIFF
	Fmt ExportFmtEnum `queryParam:"style=form,explode=true,name=fmt"`
}

type ExportRequest struct {
	QueryParams ExportQueryParams
	Security    ExportSecurity
}

type ExportResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
