// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// QueryBatchResponseStatusEnum - Batch Status
type QueryBatchResponseStatusEnum string

const (
	QueryBatchResponseStatusEnumSubmitted QueryBatchResponseStatusEnum = "SUBMITTED"
	QueryBatchResponseStatusEnumAccepted  QueryBatchResponseStatusEnum = "ACCEPTED"
)

func (e *QueryBatchResponseStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SUBMITTED":
		fallthrough
	case "ACCEPTED":
		*e = QueryBatchResponseStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryBatchResponseStatusEnum: %s", s)
	}
}

// QueryBatchResponse - Get Batch Status
type QueryBatchResponse struct {
	FailureCount *int64             `json:"failureCount,omitempty"`
	Failures     []FailedSubmission `json:"failures,omitempty"`
	PendingCount *int64             `json:"pendingCount,omitempty"`
	// Batch Status
	Status *QueryBatchResponseStatusEnum `json:"status,omitempty"`
}
