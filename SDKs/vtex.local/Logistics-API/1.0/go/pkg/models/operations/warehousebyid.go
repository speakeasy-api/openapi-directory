// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type WarehouseByIDPathParams struct {
	WarehouseID string `pathParam:"style=simple,explode=false,name=warehouseId"`
}

type WarehouseByIDHeaders struct {
	// HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
	Accept string `header:"style=simple,explode=false,name=Accept"`
	// Type of the content being sent
	ContentType string `header:"style=simple,explode=false,name=Content-Type"`
}

type WarehouseByIDRequest struct {
	PathParams WarehouseByIDPathParams
	Headers    WarehouseByIDHeaders
}

type WarehouseByID200ApplicationJSONWarehouseDock1 struct {
	Cost   float64 `json:"cost"`
	DockID string  `json:"dockId"`
	Time   string  `json:"time"`
}

// WarehouseByID200ApplicationJSON - OK
type WarehouseByID200ApplicationJSON struct {
	ID *string `json:"id,omitempty"`
	// Shows if the warehouse is active (`true`) or inactive (`false`).
	IsActive *bool   `json:"isActive,omitempty"`
	Name     *string `json:"name,omitempty"`
	// This field returns a list of the [pickup points' IDs](https://help.vtex.com/en/tutorial/pickup-points--2fljn6wLjn8M4lJHA6HP3R) associated with the given warehouse.
	PickupPointIds []interface{} `json:"pickupPointIds,omitempty"`
	// If the warehouse was configured as a priority. When no priority was set, the value returns`0`.
	Priority       *int64                                          `json:"priority,omitempty"`
	WarehouseDocks []WarehouseByID200ApplicationJSONWarehouseDock1 `json:"warehouseDocks,omitempty"`
}

type WarehouseByIDResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// OK
	WarehouseByID200ApplicationJSONObject *WarehouseByID200ApplicationJSON
}
