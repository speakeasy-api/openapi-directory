/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * A secret value used for sending hits to Measurement Protocol.
 */
export class GoogleAnalyticsAdminV1betaMeasurementProtocolSecret extends SpeakeasyBase {
  /**
   * Required. Human-readable display name for this secret.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Output only. Resource name of this secret. This secret may be a child of any type of stream. Format: properties/{property}/dataStreams/{dataStream}/measurementProtocolSecrets/{measurementProtocolSecret}
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. The measurement protocol secret value. Pass this value to the api_secret field of the Measurement Protocol API when sending hits to this secret's parent property.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secretValue" })
  secretValue?: string;
}

/**
 * A secret value used for sending hits to Measurement Protocol.
 */
export class GoogleAnalyticsAdminV1betaMeasurementProtocolSecretInput extends SpeakeasyBase {
  /**
   * Required. Human-readable display name for this secret.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;
}
