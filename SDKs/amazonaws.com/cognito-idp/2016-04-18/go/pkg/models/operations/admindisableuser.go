// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AdminDisableUserXAmzTargetEnum
type AdminDisableUserXAmzTargetEnum string

const (
	AdminDisableUserXAmzTargetEnumAwsCognitoIdentityProviderServiceAdminDisableUser AdminDisableUserXAmzTargetEnum = "AWSCognitoIdentityProviderService.AdminDisableUser"
)

func (e *AdminDisableUserXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSCognitoIdentityProviderService.AdminDisableUser":
		*e = AdminDisableUserXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AdminDisableUserXAmzTargetEnum: %s", s)
	}
}

type AdminDisableUserHeaders struct {
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        AdminDisableUserXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AdminDisableUserRequest struct {
	Headers AdminDisableUserHeaders
	Request shared.AdminDisableUserRequest `request:"mediaType=application/json"`
}

type AdminDisableUserResponse struct {
	// Success
	AdminDisableUserResponse map[string]interface{}
	ContentType              string
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// NotAuthorizedException
	NotAuthorizedException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// UserNotFoundException
	UserNotFoundException interface{}
}
