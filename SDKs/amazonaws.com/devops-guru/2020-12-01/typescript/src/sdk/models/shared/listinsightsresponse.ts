/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProactiveInsightSummary } from "./proactiveinsightsummary";
import { ReactiveInsightSummary } from "./reactiveinsightsummary";
import { Expose, Type } from "class-transformer";

/**
 * Success
 */
export class ListInsightsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata({ elemType: ProactiveInsightSummary })
  @Expose({ name: "ProactiveInsights" })
  @Type(() => ProactiveInsightSummary)
  proactiveInsights?: ProactiveInsightSummary[];

  @SpeakeasyMetadata({ elemType: ReactiveInsightSummary })
  @Expose({ name: "ReactiveInsights" })
  @Type(() => ReactiveInsightSummary)
  reactiveInsights?: ReactiveInsightSummary[];
}
