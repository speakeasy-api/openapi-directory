// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DataSubjectRightExportStatusRequestSecurity struct {
	APIToken shared.SchemeAPIToken `security:"scheme,type=apiKey,subtype=header"`
}

type DataSubjectRightExportStatusRequestPathParams struct {
	// Unique request ID (GUID)
	Token string `pathParam:"style=simple,explode=false,name=token"`
}

type DataSubjectRightExportStatusRequestRequest struct {
	PathParams DataSubjectRightExportStatusRequestPathParams
	Security   DataSubjectRightExportStatusRequestSecurity
}

type DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnum string

const (
	DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnumBadRequest          DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnum = "BadRequest"
	DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnumConflict            DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnum = "Conflict"
	DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnumNotAcceptable       DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnum = "NotAcceptable"
	DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnumNotFound            DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnum = "NotFound"
	DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnumInternalServerError DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnum = "InternalServerError"
	DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnumUnauthorized        DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnum = "Unauthorized"
	DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnumTooManyRequests     DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnum = "TooManyRequests"
)

func (e *DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnum: %s", s)
	}
}

type DataSubjectRightExportStatusRequestDefaultApplicationJSONError struct {
	Code    DataSubjectRightExportStatusRequestDefaultApplicationJSONErrorCodeEnum `json:"code"`
	Message string                                                                 `json:"message"`
}

// DataSubjectRightExportStatusRequestDefaultApplicationJSON - Error code with reason
type DataSubjectRightExportStatusRequestDefaultApplicationJSON struct {
	Error DataSubjectRightExportStatusRequestDefaultApplicationJSONError `json:"error"`
}

// DataSubjectRightExportStatusRequest200ApplicationJSONStatusEnum - Status of data subject right request
type DataSubjectRightExportStatusRequest200ApplicationJSONStatusEnum string

const (
	DataSubjectRightExportStatusRequest200ApplicationJSONStatusEnumNone       DataSubjectRightExportStatusRequest200ApplicationJSONStatusEnum = "None"
	DataSubjectRightExportStatusRequest200ApplicationJSONStatusEnumCreated    DataSubjectRightExportStatusRequest200ApplicationJSONStatusEnum = "Created"
	DataSubjectRightExportStatusRequest200ApplicationJSONStatusEnumQueued     DataSubjectRightExportStatusRequest200ApplicationJSONStatusEnum = "Queued"
	DataSubjectRightExportStatusRequest200ApplicationJSONStatusEnumInProgress DataSubjectRightExportStatusRequest200ApplicationJSONStatusEnum = "InProgress"
	DataSubjectRightExportStatusRequest200ApplicationJSONStatusEnumCompleted  DataSubjectRightExportStatusRequest200ApplicationJSONStatusEnum = "Completed"
	DataSubjectRightExportStatusRequest200ApplicationJSONStatusEnumFailed     DataSubjectRightExportStatusRequest200ApplicationJSONStatusEnum = "Failed"
)

func (e *DataSubjectRightExportStatusRequest200ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "Created":
		fallthrough
	case "Queued":
		fallthrough
	case "InProgress":
		fallthrough
	case "Completed":
		fallthrough
	case "Failed":
		*e = DataSubjectRightExportStatusRequest200ApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DataSubjectRightExportStatusRequest200ApplicationJSONStatusEnum: %s", s)
	}
}

// DataSubjectRightExportStatusRequest200ApplicationJSON - Data subject right export request status successfully retrieved.
type DataSubjectRightExportStatusRequest200ApplicationJSON struct {
	// explanation message of the status
	Message string `json:"message"`
	// Azure Storage shared access signature (SAS) URL for exported user data.
	SasURL *string `json:"sasUrl,omitempty"`
	// Whether Azure Storage shared access signature (SAS) URL has expired or not.
	SasURLExpired *bool `json:"sasUrlExpired,omitempty"`
	// Status of data subject right request
	Status DataSubjectRightExportStatusRequest200ApplicationJSONStatusEnum `json:"status"`
}

type DataSubjectRightExportStatusRequestResponse struct {
	ContentType string
	// Data subject right export request status successfully retrieved.
	DataSubjectRightExportStatusRequest200ApplicationJSONObject *DataSubjectRightExportStatusRequest200ApplicationJSON
	// Error code with reason
	DataSubjectRightExportStatusRequestDefaultApplicationJSONObject *DataSubjectRightExportStatusRequestDefaultApplicationJSON
	StatusCode                                                      int
	RawResponse                                                     *http.Response
}
