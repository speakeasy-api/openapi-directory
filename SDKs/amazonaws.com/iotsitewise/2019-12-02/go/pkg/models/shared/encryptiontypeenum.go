// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EncryptionTypeEnum string

const (
	EncryptionTypeEnumSitewiseDefaultEncryption EncryptionTypeEnum = "SITEWISE_DEFAULT_ENCRYPTION"
	EncryptionTypeEnumKmsBasedEncryption        EncryptionTypeEnum = "KMS_BASED_ENCRYPTION"
)

func (e EncryptionTypeEnum) ToPointer() *EncryptionTypeEnum {
	return &e
}

func (e *EncryptionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SITEWISE_DEFAULT_ENCRYPTION":
		fallthrough
	case "KMS_BASED_ENCRYPTION":
		*e = EncryptionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EncryptionTypeEnum: %v", v)
	}
}
