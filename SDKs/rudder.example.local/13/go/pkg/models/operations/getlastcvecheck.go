// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetLastCVECheck200ApplicationJSONActionEnum - The id of the action
type GetLastCVECheck200ApplicationJSONActionEnum string

const (
	GetLastCVECheck200ApplicationJSONActionEnumGetLastCveCheck GetLastCVECheck200ApplicationJSONActionEnum = "getLastCVECheck"
)

func (e *GetLastCVECheck200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "getLastCVECheck":
		*e = GetLastCVECheck200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetLastCVECheck200ApplicationJSONActionEnum: %s", s)
	}
}

type GetLastCVECheck200ApplicationJSONData struct {
	CVEChecks []shared.CveCheck `json:"CVEChecks"`
}

// GetLastCVECheck200ApplicationJSONResultEnum - Result of the request
type GetLastCVECheck200ApplicationJSONResultEnum string

const (
	GetLastCVECheck200ApplicationJSONResultEnumSuccess GetLastCVECheck200ApplicationJSONResultEnum = "success"
	GetLastCVECheck200ApplicationJSONResultEnumError   GetLastCVECheck200ApplicationJSONResultEnum = "error"
)

func (e *GetLastCVECheck200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = GetLastCVECheck200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetLastCVECheck200ApplicationJSONResultEnum: %s", s)
	}
}

// GetLastCVECheck200ApplicationJSON - Last CVE check
type GetLastCVECheck200ApplicationJSON struct {
	// The id of the action
	Action GetLastCVECheck200ApplicationJSONActionEnum `json:"action"`
	Data   GetLastCVECheck200ApplicationJSONData       `json:"data"`
	// Result of the request
	Result GetLastCVECheck200ApplicationJSONResultEnum `json:"result"`
}

type GetLastCVECheckResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Last CVE check
	GetLastCVECheck200ApplicationJSONObject *GetLastCVECheck200ApplicationJSON
}
