// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetLensVersionDifferencePathParams struct {
	LensAlias string `pathParam:"style=simple,explode=false,name=LensAlias"`
}

type GetLensVersionDifferenceQueryParams struct {
	// The base version of the lens.
	BaseLensVersion *string `queryParam:"style=form,explode=true,name=BaseLensVersion"`
	// The lens version to target a difference for.
	TargetLensVersion *string `queryParam:"style=form,explode=true,name=TargetLensVersion"`
}

type GetLensVersionDifferenceHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GetLensVersionDifferenceRequest struct {
	PathParams  GetLensVersionDifferencePathParams
	QueryParams GetLensVersionDifferenceQueryParams
	Headers     GetLensVersionDifferenceHeaders
}

type GetLensVersionDifferenceResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	GetLensVersionDifferenceOutput *shared.GetLensVersionDifferenceOutput
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
