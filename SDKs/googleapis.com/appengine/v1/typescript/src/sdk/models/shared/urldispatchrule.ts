/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Rules to match an HTTP request and dispatch that request to a service.
 */
export class UrlDispatchRule extends SpeakeasyBase {
  /**
   * Domain name to match against. The wildcard "*" is supported if specified before a period: "*.".Defaults to matching all domains: "*".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  domain?: string;

  /**
   * Pathname within the host. Must start with a "/". A single "*" can be included at the end of the path.The sum of the lengths of the domain and path may not exceed 100 characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;

  /**
   * Resource ID of a service in this application that should serve the matched request. The service must already exist. Example: default.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "service" })
  service?: string;
}
