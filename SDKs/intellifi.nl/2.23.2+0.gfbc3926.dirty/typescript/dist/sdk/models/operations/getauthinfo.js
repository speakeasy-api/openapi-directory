"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetAuthinfoResponse = exports.GetAuthinfo200ApplicationJSON = exports.GetAuthinfo200ApplicationJSONPermissions = exports.GetAuthinfo200ApplicationJSONAuthMethodEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * What kind of authentication was used
 */
var GetAuthinfo200ApplicationJSONAuthMethodEnum;
(function (GetAuthinfo200ApplicationJSONAuthMethodEnum) {
    GetAuthinfo200ApplicationJSONAuthMethodEnum["UserSession"] = "user_session";
    GetAuthinfo200ApplicationJSONAuthMethodEnum["Internal"] = "internal";
    GetAuthinfo200ApplicationJSONAuthMethodEnum["StaticApiKey"] = "static_api_key";
})(GetAuthinfo200ApplicationJSONAuthMethodEnum = exports.GetAuthinfo200ApplicationJSONAuthMethodEnum || (exports.GetAuthinfo200ApplicationJSONAuthMethodEnum = {}));
var GetAuthinfo200ApplicationJSONPermissions = /** @class */ (function (_super) {
    __extends(GetAuthinfo200ApplicationJSONPermissions, _super);
    function GetAuthinfo200ApplicationJSONPermissions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mutate" }),
        __metadata("design:type", Boolean)
    ], GetAuthinfo200ApplicationJSONPermissions.prototype, "mutate", void 0);
    return GetAuthinfo200ApplicationJSONPermissions;
}(utils_1.SpeakeasyBase));
exports.GetAuthinfo200ApplicationJSONPermissions = GetAuthinfo200ApplicationJSONPermissions;
/**
 * A JSON object containing the authentication information
 */
var GetAuthinfo200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetAuthinfo200ApplicationJSON, _super);
    function GetAuthinfo200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "api_key_id" }),
        __metadata("design:type", String)
    ], GetAuthinfo200ApplicationJSON.prototype, "apiKeyId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "auth_method" }),
        __metadata("design:type", String)
    ], GetAuthinfo200ApplicationJSON.prototype, "authMethod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authenticated" }),
        __metadata("design:type", Boolean)
    ], GetAuthinfo200ApplicationJSON.prototype, "authenticated", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "permissions" }),
        (0, class_transformer_1.Type)(function () { return GetAuthinfo200ApplicationJSONPermissions; }),
        __metadata("design:type", GetAuthinfo200ApplicationJSONPermissions)
    ], GetAuthinfo200ApplicationJSON.prototype, "permissions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], GetAuthinfo200ApplicationJSON.prototype, "url", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "user_id" }),
        __metadata("design:type", String)
    ], GetAuthinfo200ApplicationJSON.prototype, "userId", void 0);
    return GetAuthinfo200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetAuthinfo200ApplicationJSON = GetAuthinfo200ApplicationJSON;
var GetAuthinfoResponse = /** @class */ (function (_super) {
    __extends(GetAuthinfoResponse, _super);
    function GetAuthinfoResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetAuthinfoResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetAuthinfoResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetAuthinfoResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", GetAuthinfo200ApplicationJSON)
    ], GetAuthinfoResponse.prototype, "getAuthinfo200ApplicationJSONObject", void 0);
    return GetAuthinfoResponse;
}(utils_1.SpeakeasyBase));
exports.GetAuthinfoResponse = GetAuthinfoResponse;
