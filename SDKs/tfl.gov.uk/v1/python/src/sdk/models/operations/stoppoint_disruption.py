"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import tfl_api_presentation_entities_disruptedpoint as shared_tfl_api_presentation_entities_disruptedpoint
from typing import Optional


@dataclasses.dataclass
class StopPointDisruptionRequest:
    
    ids: list[str] = dataclasses.field(metadata={'path_param': { 'field_name': 'ids', 'style': 'simple', 'explode': False }})
    r"""A comma-seperated list of stop point ids. Max. approx. 20 ids.
                You can use /StopPoint/Search/{query} endpoint to find a stop point id from a station name.
    """  
    flatten_response: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'flattenResponse', 'style': 'form', 'explode': True }})
    r"""Specify true to associate all disruptions with parent stop point. (Only applicable when getFamily is true)."""  
    get_family: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'getFamily', 'style': 'form', 'explode': True }})
    r"""Specify true to return disruptions for entire family, or false to return disruptions for just this stop point. Defaults to false."""  
    include_route_blocked_stops: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'includeRouteBlockedStops', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class StopPointDisruptionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    tfl_api_presentation_entities_disrupted_points: Optional[list[shared_tfl_api_presentation_entities_disruptedpoint.TflAPIPresentationEntitiesDisruptedPoint]] = dataclasses.field(default=None)
    r"""OK"""  
    