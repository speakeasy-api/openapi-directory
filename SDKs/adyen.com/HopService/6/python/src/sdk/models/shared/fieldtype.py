"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class FieldTypeFieldNameEnum(str, Enum):
    r"""The type of the field."""
    ACCOUNT_CODE = 'accountCode'
    ACCOUNT_HOLDER_CODE = 'accountHolderCode'
    ACCOUNT_HOLDER_DETAILS = 'accountHolderDetails'
    ACCOUNT_NUMBER = 'accountNumber'
    ACCOUNT_STATE_TYPE = 'accountStateType'
    ACCOUNT_STATUS = 'accountStatus'
    ACCOUNT_TYPE = 'accountType'
    ADDRESS = 'address'
    BALANCE_ACCOUNT = 'balanceAccount'
    BALANCE_ACCOUNT_ACTIVE = 'balanceAccountActive'
    BALANCE_ACCOUNT_CODE = 'balanceAccountCode'
    BALANCE_ACCOUNT_ID = 'balanceAccountId'
    BANK_ACCOUNT = 'bankAccount'
    BANK_ACCOUNT_CODE = 'bankAccountCode'
    BANK_ACCOUNT_NAME = 'bankAccountName'
    BANK_ACCOUNT_UUID = 'bankAccountUUID'
    BANK_BIC_SWIFT = 'bankBicSwift'
    BANK_CITY = 'bankCity'
    BANK_CODE = 'bankCode'
    BANK_NAME = 'bankName'
    BANK_STATEMENT = 'bankStatement'
    BRANCH_CODE = 'branchCode'
    BUSINESS_CONTACT = 'businessContact'
    CARD_TOKEN = 'cardToken'
    CHECK_CODE = 'checkCode'
    CITY = 'city'
    COMPANY_REGISTRATION = 'companyRegistration'
    CONSTITUTIONAL_DOCUMENT = 'constitutionalDocument'
    CONTROLLER = 'controller'
    COUNTRY = 'country'
    COUNTRY_CODE = 'countryCode'
    CURRENCY = 'currency'
    CURRENCY_CODE = 'currencyCode'
    DATE_OF_BIRTH = 'dateOfBirth'
    DESCRIPTION = 'description'
    DESTINATION_ACCOUNT_CODE = 'destinationAccountCode'
    DOCUMENT = 'document'
    DOCUMENT_CONTENT = 'documentContent'
    DOCUMENT_EXPIRATION_DATE = 'documentExpirationDate'
    DOCUMENT_ISSUER_COUNTRY = 'documentIssuerCountry'
    DOCUMENT_ISSUER_STATE = 'documentIssuerState'
    DOCUMENT_NAME = 'documentName'
    DOCUMENT_NUMBER = 'documentNumber'
    DOCUMENT_TYPE = 'documentType'
    DOING_BUSINESS_AS = 'doingBusinessAs'
    DRIVING_LICENCE = 'drivingLicence'
    DRIVING_LICENCE_BACK = 'drivingLicenceBack'
    DRIVING_LICENCE_FRONT = 'drivingLicenceFront'
    DRIVING_LICENSE = 'drivingLicense'
    EMAIL = 'email'
    FIRST_NAME = 'firstName'
    FORM_TYPE = 'formType'
    FULL_PHONE_NUMBER = 'fullPhoneNumber'
    GENDER = 'gender'
    HOP_WEBSERVICE_USER = 'hopWebserviceUser'
    HOUSE_NUMBER_OR_NAME = 'houseNumberOrName'
    IBAN = 'iban'
    ID_CARD = 'idCard'
    ID_CARD_BACK = 'idCardBack'
    ID_CARD_FRONT = 'idCardFront'
    ID_NUMBER = 'idNumber'
    IDENTITY_DOCUMENT = 'identityDocument'
    INDIVIDUAL_DETAILS = 'individualDetails'
    INFIX = 'infix'
    JOB_TITLE = 'jobTitle'
    LAST_NAME = 'lastName'
    LAST_REVIEW_DATE = 'lastReviewDate'
    LEGAL_ARRANGEMENT = 'legalArrangement'
    LEGAL_ARRANGEMENT_CODE = 'legalArrangementCode'
    LEGAL_ARRANGEMENT_ENTITY = 'legalArrangementEntity'
    LEGAL_ARRANGEMENT_ENTITY_CODE = 'legalArrangementEntityCode'
    LEGAL_ARRANGEMENT_LEGAL_FORM = 'legalArrangementLegalForm'
    LEGAL_ARRANGEMENT_MEMBER = 'legalArrangementMember'
    LEGAL_ARRANGEMENT_MEMBERS = 'legalArrangementMembers'
    LEGAL_ARRANGEMENT_NAME = 'legalArrangementName'
    LEGAL_ARRANGEMENT_REFERENCE = 'legalArrangementReference'
    LEGAL_ARRANGEMENT_REGISTRATION_NUMBER = 'legalArrangementRegistrationNumber'
    LEGAL_ARRANGEMENT_TAX_NUMBER = 'legalArrangementTaxNumber'
    LEGAL_ARRANGEMENT_TYPE = 'legalArrangementType'
    LEGAL_BUSINESS_NAME = 'legalBusinessName'
    LEGAL_ENTITY = 'legalEntity'
    LEGAL_ENTITY_TYPE = 'legalEntityType'
    LOGO = 'logo'
    MERCHANT_ACCOUNT = 'merchantAccount'
    MERCHANT_CATEGORY_CODE = 'merchantCategoryCode'
    MERCHANT_HOUSE_NUMBER = 'merchantHouseNumber'
    MERCHANT_REFERENCE = 'merchantReference'
    MICRO_DEPOSIT = 'microDeposit'
    NAME = 'name'
    NATIONALITY = 'nationality'
    ORIGINAL_REFERENCE = 'originalReference'
    OWNER_CITY = 'ownerCity'
    OWNER_COUNTRY_CODE = 'ownerCountryCode'
    OWNER_DATE_OF_BIRTH = 'ownerDateOfBirth'
    OWNER_HOUSE_NUMBER_OR_NAME = 'ownerHouseNumberOrName'
    OWNER_NAME = 'ownerName'
    OWNER_POSTAL_CODE = 'ownerPostalCode'
    OWNER_STATE = 'ownerState'
    OWNER_STREET = 'ownerStreet'
    PASSPORT = 'passport'
    PASSPORT_NUMBER = 'passportNumber'
    PAYOUT_METHOD_CODE = 'payoutMethodCode'
    PAYOUT_SCHEDULE = 'payoutSchedule'
    PCI_SELF_ASSESSMENT = 'pciSelfAssessment'
    PERSONAL_DATA = 'personalData'
    PHONE_COUNTRY_CODE = 'phoneCountryCode'
    PHONE_NUMBER = 'phoneNumber'
    POSTAL_CODE = 'postalCode'
    PRIMARY_CURRENCY = 'primaryCurrency'
    REASON = 'reason'
    REGISTRATION_NUMBER = 'registrationNumber'
    RETURN_URL = 'returnUrl'
    SCHEDULE = 'schedule'
    SHAREHOLDER = 'shareholder'
    SHAREHOLDER_CODE = 'shareholderCode'
    SHAREHOLDER_CODE_AND_SIGNATORY_CODE = 'shareholderCodeAndSignatoryCode'
    SHAREHOLDER_CODE_OR_SIGNATORY_CODE = 'shareholderCodeOrSignatoryCode'
    SHAREHOLDER_TYPE = 'shareholderType'
    SHAREHOLDER_TYPES = 'shareholderTypes'
    SHOPPER_INTERACTION = 'shopperInteraction'
    SIGNATORY = 'signatory'
    SIGNATORY_CODE = 'signatoryCode'
    SOCIAL_SECURITY_NUMBER = 'socialSecurityNumber'
    SOURCE_ACCOUNT_CODE = 'sourceAccountCode'
    SPLIT_ACCOUNT = 'splitAccount'
    SPLIT_CONFIGURATION_UUID = 'splitConfigurationUUID'
    SPLIT_CURRENCY = 'splitCurrency'
    SPLIT_VALUE = 'splitValue'
    SPLITS = 'splits'
    STATE_OR_PROVINCE = 'stateOrProvince'
    STATUS = 'status'
    STOCK_EXCHANGE = 'stockExchange'
    STOCK_NUMBER = 'stockNumber'
    STOCK_TICKER = 'stockTicker'
    STORE = 'store'
    STORE_DETAIL = 'storeDetail'
    STORE_NAME = 'storeName'
    STORE_REFERENCE = 'storeReference'
    STREET = 'street'
    TAX_ID = 'taxId'
    TIER = 'tier'
    TIER_NUMBER = 'tierNumber'
    TRANSFER_CODE = 'transferCode'
    ULTIMATE_PARENT_COMPANY = 'ultimateParentCompany'
    ULTIMATE_PARENT_COMPANY_ADDRESS_DETAILS = 'ultimateParentCompanyAddressDetails'
    ULTIMATE_PARENT_COMPANY_ADDRESS_DETAILS_COUNTRY = 'ultimateParentCompanyAddressDetailsCountry'
    ULTIMATE_PARENT_COMPANY_BUSINESS_DETAILS = 'ultimateParentCompanyBusinessDetails'
    ULTIMATE_PARENT_COMPANY_BUSINESS_DETAILS_LEGAL_BUSINESS_NAME = 'ultimateParentCompanyBusinessDetailsLegalBusinessName'
    ULTIMATE_PARENT_COMPANY_BUSINESS_DETAILS_REGISTRATION_NUMBER = 'ultimateParentCompanyBusinessDetailsRegistrationNumber'
    ULTIMATE_PARENT_COMPANY_CODE = 'ultimateParentCompanyCode'
    ULTIMATE_PARENT_COMPANY_STOCK_EXCHANGE = 'ultimateParentCompanyStockExchange'
    ULTIMATE_PARENT_COMPANY_STOCK_NUMBER = 'ultimateParentCompanyStockNumber'
    ULTIMATE_PARENT_COMPANY_STOCK_NUMBER_OR_STOCK_TICKER = 'ultimateParentCompanyStockNumberOrStockTicker'
    ULTIMATE_PARENT_COMPANY_STOCK_TICKER = 'ultimateParentCompanyStockTicker'
    UNKNOWN = 'unknown'
    VALUE = 'value'
    VERIFICATION_TYPE = 'verificationType'
    VIRTUAL_ACCOUNT = 'virtualAccount'
    VISA_NUMBER = 'visaNumber'
    WEB_ADDRESS = 'webAddress'
    YEAR = 'year'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FieldType:
    
    field: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('field'), 'exclude': lambda f: f is None }})
    r"""The full name of the property."""  
    field_name: Optional[FieldTypeFieldNameEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldName'), 'exclude': lambda f: f is None }})
    r"""The type of the field."""  
    shareholder_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shareholderCode'), 'exclude': lambda f: f is None }})
    r"""The code of the shareholder that the field belongs to. If empty, the field belongs to an account holder."""  
    