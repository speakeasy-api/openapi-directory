/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class EcommerceProductCategories extends SpeakeasyBase {
  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The name of the category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class EcommerceProductImages extends SpeakeasyBase {
  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The URL of an image of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

export class EcommerceProductOptions extends SpeakeasyBase {
  /**
   * A unique identifier for the option of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The name of the option for the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "values" })
  values?: string[];
}

/**
 * The current status of the product (active or archived).
 */
export enum EcommerceProductProductStatusEnum {
  Active = "active",
  Archived = "archived",
}

export class EcommerceProductVariantsImages extends SpeakeasyBase {
  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The URL of an image of the variant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

export class EcommerceProductVariantsOptions extends SpeakeasyBase {
  /**
   * A unique identifier for the option of the variant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The name of the option for the variant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The value of the option for the variant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

export class EcommerceProductVariants extends SpeakeasyBase {
  /**
   * A unique identifier for the variant of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata({ elemType: EcommerceProductVariantsImages })
  @Expose({ name: "images" })
  @Type(() => EcommerceProductVariantsImages)
  images?: EcommerceProductVariantsImages[];

  /**
   * The quantity of the variant in stock.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inventory_quantity" })
  inventoryQuantity?: string;

  /**
   * The name for the variant, used for displaying to customers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: EcommerceProductVariantsOptions })
  @Expose({ name: "options" })
  @Type(() => EcommerceProductVariantsOptions)
  options?: EcommerceProductVariantsOptions[];

  /**
   * The price of the variant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: string;

  /**
   * The stock keeping unit of the variant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sku" })
  sku?: string;

  /**
   * The weight of the variant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "weight" })
  weight?: string;

  /**
   * The unit of measurement for the weight of the variant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "weight_unit" })
  weightUnit?: string;
}

export class EcommerceProduct extends SpeakeasyBase {
  /**
   * An array of categories for the product, used for organization and searching.
   */
  @SpeakeasyMetadata({ elemType: EcommerceProductCategories })
  @Expose({ name: "categories" })
  @Type(() => EcommerceProductCategories)
  categories?: EcommerceProductCategories[];

  /**
   * The date and time when the object was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * A detailed description of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * A unique identifier for an object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * An array of image URLs for the product.
   */
  @SpeakeasyMetadata({ elemType: EcommerceProductImages })
  @Expose({ name: "images" })
  @Type(() => EcommerceProductImages)
  images?: EcommerceProductImages[];

  /**
   * The quantity of the product in stock.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inventory_quantity" })
  inventoryQuantity?: string;

  /**
   * The name of the product as it should be displayed to customers.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * An array of options for the product.
   */
  @SpeakeasyMetadata({ elemType: EcommerceProductOptions })
  @Expose({ name: "options" })
  @Type(() => EcommerceProductOptions)
  options?: EcommerceProductOptions[];

  /**
   * The price of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "price" })
  price?: string;

  /**
   * The stock keeping unit of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sku" })
  sku?: string;

  /**
   * The current status of the product (active or archived).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: EcommerceProductProductStatusEnum;

  /**
   * An array of tags for the product, used for organization and searching.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  /**
   * The date and time when the object was last updated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;

  @SpeakeasyMetadata({ elemType: EcommerceProductVariants })
  @Expose({ name: "variants" })
  @Type(() => EcommerceProductVariants)
  variants?: EcommerceProductVariants[];

  /**
   * The weight of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "weight" })
  weight?: string;

  /**
   * The unit of measurement for the weight of the product.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "weight_unit" })
  weightUnit?: string;
}
