/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TruncatableString } from "./truncatablestring";
import { Expose, Type } from "class-transformer";

/**
 * The allowed types for `[VALUE]` in a `[KEY]:[VALUE]` attribute.
 */
export class AttributeValue extends SpeakeasyBase {
  /**
   * A Boolean value represented by `true` or `false`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "boolValue" })
  boolValue?: boolean;

  /**
   * A 64-bit signed integer.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "intValue" })
  intValue?: string;

  /**
   * Represents a string that might be shortened to a specified length.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stringValue" })
  @Type(() => TruncatableString)
  stringValue?: TruncatableString;
}
