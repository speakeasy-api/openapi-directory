// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnum - The type of provenance operation.
type GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnum string

const (
	GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnumOperationTypeUnspecified GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnum = "OPERATION_TYPE_UNSPECIFIED"
	GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnumAdd                      GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnum = "ADD"
	GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnumRemove                   GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnum = "REMOVE"
	GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnumUpdate                   GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnum = "UPDATE"
	GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnumReplace                  GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnum = "REPLACE"
	GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnumEvalRequested            GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnum = "EVAL_REQUESTED"
	GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnumEvalApproved             GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnum = "EVAL_APPROVED"
	GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnumEvalSkipped              GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnum = "EVAL_SKIPPED"
)

func (e GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnum) ToPointer() *GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnum {
	return &e
}

func (e *GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OPERATION_TYPE_UNSPECIFIED":
		fallthrough
	case "ADD":
		fallthrough
	case "REMOVE":
		fallthrough
	case "UPDATE":
		fallthrough
	case "REPLACE":
		fallthrough
	case "EVAL_REQUESTED":
		fallthrough
	case "EVAL_APPROVED":
		fallthrough
	case "EVAL_SKIPPED":
		*e = GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnum: %v", v)
	}
}

// GoogleCloudDocumentaiV1beta2DocumentProvenance - Structure to identify provenance relationships between annotations in different revisions.
type GoogleCloudDocumentaiV1beta2DocumentProvenance struct {
	// The Id of this operation. Needs to be unique within the scope of the revision.
	ID *int `json:"id,omitempty"`
	// References to the original elements that are replaced.
	Parents []GoogleCloudDocumentaiV1beta2DocumentProvenanceParent `json:"parents,omitempty"`
	// The index of the revision that produced this element.
	Revision *int `json:"revision,omitempty"`
	// The type of provenance operation.
	Type *GoogleCloudDocumentaiV1beta2DocumentProvenanceTypeEnum `json:"type,omitempty"`
}
