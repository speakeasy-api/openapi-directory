/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Api {
    /**
     * Link to the API reference of the API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("api_reference_url")
    public String apiReferenceUrl;

    public Api withApiReferenceUrl(String apiReferenceUrl) {
        this.apiReferenceUrl = apiReferenceUrl;
        return this;
    }
    
    /**
     * List of categories the API belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("categories")
    public String[] categories;

    public Api withCategories(String[] categories) {
        this.categories = categories;
        return this;
    }
    
    /**
     * Description of the API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Api withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * List of event types this API supports.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("events")
    public String[] events;

    public Api withEvents(String[] events) {
        this.events = events;
        return this;
    }
    
    /**
     * ID of the API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Api withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Name of the API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Api withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * ID of the Postman collection of the API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postman_collection_id")
    public String postmanCollectionId;

    public Api withPostmanCollectionId(String postmanCollectionId) {
        this.postmanCollectionId = postmanCollectionId;
        return this;
    }
    
    /**
     * List of resources supported in this API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resources")
    public ApiResources[] resources;

    public Api withResources(ApiResources[] resources) {
        this.resources = resources;
        return this;
    }
    
    /**
     * Link to the latest OpenAPI specification of the API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("spec_url")
    public String specUrl;

    public Api withSpecUrl(String specUrl) {
        this.specUrl = specUrl;
        return this;
    }
    
    /**
     * Status of the API. APIs with status live or beta are callable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public ApiStatusEnum status;

    public Api withStatus(ApiStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Indicates whether the API is a Unified API. If unified_api is false, the API is a Platform API.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public ApiTypeEnum type;

    public Api withType(ApiTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public Api(){}
}
