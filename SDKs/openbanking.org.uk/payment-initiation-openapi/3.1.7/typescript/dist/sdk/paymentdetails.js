"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentDetails = void 0;
var utils = __importStar(require("../internal/utils"));
var operations = __importStar(require("./models/operations"));
var shared = __importStar(require("./models/shared"));
var PaymentDetails = /** @class */ (function () {
    function PaymentDetails(defaultClient, securityClient, serverURL, language, sdkVersion, genVersion) {
        this._defaultClient = defaultClient;
        this._securityClient = securityClient;
        this._serverURL = serverURL;
        this._language = language;
        this._sdkVersion = sdkVersion;
        this._genVersion = genVersion;
    }
    /**
     * Get Payment Details
     */
    PaymentDetails.prototype.getDomesticPaymentsDomesticPaymentIdPaymentDetails = function (req, security, config) {
        if (!(req instanceof utils.SpeakeasyBase)) {
            req =
                new operations.GetDomesticPaymentsDomesticPaymentIdPaymentDetailsRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/domestic-payments/{DomesticPaymentId}/payment-details", req);
        if (!(security instanceof utils.SpeakeasyBase)) {
            security =
                new operations.GetDomesticPaymentsDomesticPaymentIdPaymentDetailsSecurity(security);
        }
        var client = utils.createSecurityClient(this._defaultClient, security);
        var headers = __assign(__assign({}, utils.getHeadersFromRequest(req)), config === null || config === void 0 ? void 0 : config.headers);
        var r = client.request(__assign({ url: url, method: "get", headers: headers }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.GetDomesticPaymentsDomesticPaymentIdPaymentDetailsResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
                headers: utils.getHeadersFromResponse(httpRes.headers),
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/jose+jwe")) {
                        var resBody = JSON.stringify(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, null, 0);
                        var out = new Uint8Array(resBody.length);
                        for (var i = 0; i < resBody.length; i++)
                            out[i] = resBody.charCodeAt(i);
                        res.body = out;
                    }
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.obWritePaymentDetailsResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBWritePaymentDetailsResponse1);
                    }
                    if (utils.matchContentType(contentType, "application/json; charset=utf-8")) {
                        res.obWritePaymentDetailsResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBWritePaymentDetailsResponse1);
                    }
                    break;
                case [400, 403, 500].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    if (utils.matchContentType(contentType, "application/jose+jwe")) {
                        var resBody = JSON.stringify(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, null, 0);
                        var out = new Uint8Array(resBody.length);
                        for (var i = 0; i < resBody.length; i++)
                            out[i] = resBody.charCodeAt(i);
                        res.body = out;
                    }
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.obErrorResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBErrorResponse1);
                    }
                    if (utils.matchContentType(contentType, "application/json; charset=utf-8")) {
                        res.obErrorResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBErrorResponse1);
                    }
                    break;
                case [401, 404, 405, 406].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    break;
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 429:
                    break;
            }
            return res;
        });
    };
    /**
     * Get Payment Details
     */
    PaymentDetails.prototype.getDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetails = function (req, security, config) {
        if (!(req instanceof utils.SpeakeasyBase)) {
            req =
                new operations.GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetailsRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/domestic-scheduled-payments/{DomesticScheduledPaymentId}/payment-details", req);
        if (!(security instanceof utils.SpeakeasyBase)) {
            security =
                new operations.GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetailsSecurity(security);
        }
        var client = utils.createSecurityClient(this._defaultClient, security);
        var headers = __assign(__assign({}, utils.getHeadersFromRequest(req)), config === null || config === void 0 ? void 0 : config.headers);
        var r = client.request(__assign({ url: url, method: "get", headers: headers }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.GetDomesticScheduledPaymentsDomesticScheduledPaymentIdPaymentDetailsResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
                headers: utils.getHeadersFromResponse(httpRes.headers),
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/jose+jwe")) {
                        var resBody = JSON.stringify(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, null, 0);
                        var out = new Uint8Array(resBody.length);
                        for (var i = 0; i < resBody.length; i++)
                            out[i] = resBody.charCodeAt(i);
                        res.body = out;
                    }
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.obWritePaymentDetailsResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBWritePaymentDetailsResponse1);
                    }
                    if (utils.matchContentType(contentType, "application/json; charset=utf-8")) {
                        res.obWritePaymentDetailsResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBWritePaymentDetailsResponse1);
                    }
                    break;
                case [400, 403, 500].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    if (utils.matchContentType(contentType, "application/jose+jwe")) {
                        var resBody = JSON.stringify(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, null, 0);
                        var out = new Uint8Array(resBody.length);
                        for (var i = 0; i < resBody.length; i++)
                            out[i] = resBody.charCodeAt(i);
                        res.body = out;
                    }
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.obErrorResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBErrorResponse1);
                    }
                    if (utils.matchContentType(contentType, "application/json; charset=utf-8")) {
                        res.obErrorResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBErrorResponse1);
                    }
                    break;
                case [401, 404, 405, 406].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    break;
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 429:
                    break;
            }
            return res;
        });
    };
    /**
     * Get Payment Details
     */
    PaymentDetails.prototype.getDomesticStandingOrdersDomesticStandingOrderIdPaymentDetails = function (req, security, config) {
        if (!(req instanceof utils.SpeakeasyBase)) {
            req =
                new operations.GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetailsRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/domestic-standing-orders/{DomesticStandingOrderId}/payment-details", req);
        if (!(security instanceof utils.SpeakeasyBase)) {
            security =
                new operations.GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetailsSecurity(security);
        }
        var client = utils.createSecurityClient(this._defaultClient, security);
        var headers = __assign(__assign({}, utils.getHeadersFromRequest(req)), config === null || config === void 0 ? void 0 : config.headers);
        var r = client.request(__assign({ url: url, method: "get", headers: headers }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.GetDomesticStandingOrdersDomesticStandingOrderIdPaymentDetailsResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
                headers: utils.getHeadersFromResponse(httpRes.headers),
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/jose+jwe")) {
                        var resBody = JSON.stringify(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, null, 0);
                        var out = new Uint8Array(resBody.length);
                        for (var i = 0; i < resBody.length; i++)
                            out[i] = resBody.charCodeAt(i);
                        res.body = out;
                    }
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.obWritePaymentDetailsResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBWritePaymentDetailsResponse1);
                    }
                    if (utils.matchContentType(contentType, "application/json; charset=utf-8")) {
                        res.obWritePaymentDetailsResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBWritePaymentDetailsResponse1);
                    }
                    break;
                case [400, 403, 500].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    if (utils.matchContentType(contentType, "application/jose+jwe")) {
                        var resBody = JSON.stringify(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, null, 0);
                        var out = new Uint8Array(resBody.length);
                        for (var i = 0; i < resBody.length; i++)
                            out[i] = resBody.charCodeAt(i);
                        res.body = out;
                    }
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.obErrorResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBErrorResponse1);
                    }
                    if (utils.matchContentType(contentType, "application/json; charset=utf-8")) {
                        res.obErrorResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBErrorResponse1);
                    }
                    break;
                case [401, 404, 405, 406].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    break;
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 429:
                    break;
            }
            return res;
        });
    };
    /**
     * Get Payment Details
     */
    PaymentDetails.prototype.getFilePaymentsFilePaymentIdPaymentDetails = function (req, security, config) {
        if (!(req instanceof utils.SpeakeasyBase)) {
            req = new operations.GetFilePaymentsFilePaymentIdPaymentDetailsRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/file-payments/{FilePaymentId}/payment-details", req);
        if (!(security instanceof utils.SpeakeasyBase)) {
            security =
                new operations.GetFilePaymentsFilePaymentIdPaymentDetailsSecurity(security);
        }
        var client = utils.createSecurityClient(this._defaultClient, security);
        var headers = __assign(__assign({}, utils.getHeadersFromRequest(req)), config === null || config === void 0 ? void 0 : config.headers);
        var r = client.request(__assign({ url: url, method: "get", headers: headers }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.GetFilePaymentsFilePaymentIdPaymentDetailsResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
                headers: utils.getHeadersFromResponse(httpRes.headers),
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/jose+jwe")) {
                        var resBody = JSON.stringify(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, null, 0);
                        var out = new Uint8Array(resBody.length);
                        for (var i = 0; i < resBody.length; i++)
                            out[i] = resBody.charCodeAt(i);
                        res.body = out;
                    }
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.obWritePaymentDetailsResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBWritePaymentDetailsResponse1);
                    }
                    if (utils.matchContentType(contentType, "application/json; charset=utf-8")) {
                        res.obWritePaymentDetailsResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBWritePaymentDetailsResponse1);
                    }
                    break;
                case [400, 403, 500].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    if (utils.matchContentType(contentType, "application/jose+jwe")) {
                        var resBody = JSON.stringify(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, null, 0);
                        var out = new Uint8Array(resBody.length);
                        for (var i = 0; i < resBody.length; i++)
                            out[i] = resBody.charCodeAt(i);
                        res.body = out;
                    }
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.obErrorResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBErrorResponse1);
                    }
                    if (utils.matchContentType(contentType, "application/json; charset=utf-8")) {
                        res.obErrorResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBErrorResponse1);
                    }
                    break;
                case [401, 404, 405, 406].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    break;
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 429:
                    break;
            }
            return res;
        });
    };
    /**
     * Get Payment Details
     */
    PaymentDetails.prototype.getInternationalPaymentsInternationalPaymentIdPaymentDetails = function (req, security, config) {
        if (!(req instanceof utils.SpeakeasyBase)) {
            req =
                new operations.GetInternationalPaymentsInternationalPaymentIdPaymentDetailsRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/international-payments/{InternationalPaymentId}/payment-details", req);
        if (!(security instanceof utils.SpeakeasyBase)) {
            security =
                new operations.GetInternationalPaymentsInternationalPaymentIdPaymentDetailsSecurity(security);
        }
        var client = utils.createSecurityClient(this._defaultClient, security);
        var headers = __assign(__assign({}, utils.getHeadersFromRequest(req)), config === null || config === void 0 ? void 0 : config.headers);
        var r = client.request(__assign({ url: url, method: "get", headers: headers }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.GetInternationalPaymentsInternationalPaymentIdPaymentDetailsResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
                headers: utils.getHeadersFromResponse(httpRes.headers),
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/jose+jwe")) {
                        var resBody = JSON.stringify(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, null, 0);
                        var out = new Uint8Array(resBody.length);
                        for (var i = 0; i < resBody.length; i++)
                            out[i] = resBody.charCodeAt(i);
                        res.body = out;
                    }
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.obWritePaymentDetailsResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBWritePaymentDetailsResponse1);
                    }
                    if (utils.matchContentType(contentType, "application/json; charset=utf-8")) {
                        res.obWritePaymentDetailsResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBWritePaymentDetailsResponse1);
                    }
                    break;
                case [400, 403, 500].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    if (utils.matchContentType(contentType, "application/jose+jwe")) {
                        var resBody = JSON.stringify(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, null, 0);
                        var out = new Uint8Array(resBody.length);
                        for (var i = 0; i < resBody.length; i++)
                            out[i] = resBody.charCodeAt(i);
                        res.body = out;
                    }
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.obErrorResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBErrorResponse1);
                    }
                    if (utils.matchContentType(contentType, "application/json; charset=utf-8")) {
                        res.obErrorResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBErrorResponse1);
                    }
                    break;
                case [401, 404, 405, 406].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    break;
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 429:
                    break;
            }
            return res;
        });
    };
    /**
     * Get Payment Details
     */
    PaymentDetails.prototype.getInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetails = function (req, security, config) {
        if (!(req instanceof utils.SpeakeasyBase)) {
            req =
                new operations.GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetailsRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/international-scheduled-payments/{InternationalScheduledPaymentId}/payment-details", req);
        if (!(security instanceof utils.SpeakeasyBase)) {
            security =
                new operations.GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetailsSecurity(security);
        }
        var client = utils.createSecurityClient(this._defaultClient, security);
        var headers = __assign(__assign({}, utils.getHeadersFromRequest(req)), config === null || config === void 0 ? void 0 : config.headers);
        var r = client.request(__assign({ url: url, method: "get", headers: headers }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.GetInternationalScheduledPaymentsInternationalScheduledPaymentIdPaymentDetailsResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
                headers: utils.getHeadersFromResponse(httpRes.headers),
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/jose+jwe")) {
                        var resBody = JSON.stringify(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, null, 0);
                        var out = new Uint8Array(resBody.length);
                        for (var i = 0; i < resBody.length; i++)
                            out[i] = resBody.charCodeAt(i);
                        res.body = out;
                    }
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.obWritePaymentDetailsResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBWritePaymentDetailsResponse1);
                    }
                    if (utils.matchContentType(contentType, "application/json; charset=utf-8")) {
                        res.obWritePaymentDetailsResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBWritePaymentDetailsResponse1);
                    }
                    break;
                case [400, 403, 500].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    if (utils.matchContentType(contentType, "application/jose+jwe")) {
                        var resBody = JSON.stringify(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, null, 0);
                        var out = new Uint8Array(resBody.length);
                        for (var i = 0; i < resBody.length; i++)
                            out[i] = resBody.charCodeAt(i);
                        res.body = out;
                    }
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.obErrorResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBErrorResponse1);
                    }
                    if (utils.matchContentType(contentType, "application/json; charset=utf-8")) {
                        res.obErrorResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBErrorResponse1);
                    }
                    break;
                case [401, 404, 405, 406].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    break;
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 429:
                    break;
            }
            return res;
        });
    };
    /**
     * Get Payment Details
     */
    PaymentDetails.prototype.getInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetails = function (req, security, config) {
        if (!(req instanceof utils.SpeakeasyBase)) {
            req =
                new operations.GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsRequest(req);
        }
        var baseURL = this._serverURL;
        var url = utils.generateURL(baseURL, "/international-standing-orders/{InternationalStandingOrderPaymentId}/payment-details", req);
        if (!(security instanceof utils.SpeakeasyBase)) {
            security =
                new operations.GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsSecurity(security);
        }
        var client = utils.createSecurityClient(this._defaultClient, security);
        var headers = __assign(__assign({}, utils.getHeadersFromRequest(req)), config === null || config === void 0 ? void 0 : config.headers);
        var r = client.request(__assign({ url: url, method: "get", headers: headers }, config));
        return r.then(function (httpRes) {
            var _a, _b;
            var contentType = (_b = (_a = httpRes === null || httpRes === void 0 ? void 0 : httpRes.headers) === null || _a === void 0 ? void 0 : _a["content-type"]) !== null && _b !== void 0 ? _b : "";
            if ((httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == null)
                throw new Error("status code not found in response: ".concat(httpRes));
            var res = new operations.GetInternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsResponse({
                statusCode: httpRes.status,
                contentType: contentType,
                rawResponse: httpRes,
                headers: utils.getHeadersFromResponse(httpRes.headers),
            });
            switch (true) {
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 200:
                    if (utils.matchContentType(contentType, "application/jose+jwe")) {
                        var resBody = JSON.stringify(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, null, 0);
                        var out = new Uint8Array(resBody.length);
                        for (var i = 0; i < resBody.length; i++)
                            out[i] = resBody.charCodeAt(i);
                        res.body = out;
                    }
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.obWritePaymentDetailsResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBWritePaymentDetailsResponse1);
                    }
                    if (utils.matchContentType(contentType, "application/json; charset=utf-8")) {
                        res.obWritePaymentDetailsResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBWritePaymentDetailsResponse1);
                    }
                    break;
                case [400, 403, 500].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    if (utils.matchContentType(contentType, "application/jose+jwe")) {
                        var resBody = JSON.stringify(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, null, 0);
                        var out = new Uint8Array(resBody.length);
                        for (var i = 0; i < resBody.length; i++)
                            out[i] = resBody.charCodeAt(i);
                        res.body = out;
                    }
                    if (utils.matchContentType(contentType, "application/json")) {
                        res.obErrorResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBErrorResponse1);
                    }
                    if (utils.matchContentType(contentType, "application/json; charset=utf-8")) {
                        res.obErrorResponse1 = utils.objectToClass(httpRes === null || httpRes === void 0 ? void 0 : httpRes.data, shared.OBErrorResponse1);
                    }
                    break;
                case [401, 404, 405, 406].includes(httpRes === null || httpRes === void 0 ? void 0 : httpRes.status):
                    break;
                case (httpRes === null || httpRes === void 0 ? void 0 : httpRes.status) == 429:
                    break;
            }
            return res;
        });
    };
    return PaymentDetails;
}());
exports.PaymentDetails = PaymentDetails;
