/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WidgetMarkup - A widget is a UI element that presents texts, images, etc.
 */
public class WidgetMarkup {
    /**
     * A list of buttons. Buttons is also oneof data and only one of these fields should be set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buttons")
    public Button[] buttons;
    public WidgetMarkup withButtons(Button[] buttons) {
        this.buttons = buttons;
        return this;
    }
    
    /**
     * An image that is specified by a URL and can have an onclick action.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image")
    public Image image;
    public WidgetMarkup withImage(Image image) {
        this.image = image;
        return this;
    }
    
    /**
     * A UI element contains a key (label) and a value (content). And this element may also contain some actions such as onclick button.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keyValue")
    public KeyValue keyValue;
    public WidgetMarkup withKeyValue(KeyValue keyValue) {
        this.keyValue = keyValue;
        return this;
    }
    
    /**
     * A paragraph of text. Formatted text supported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textParagraph")
    public TextParagraph textParagraph;
    public WidgetMarkup withTextParagraph(TextParagraph textParagraph) {
        this.textParagraph = textParagraph;
        return this;
    }
    
}
