/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * SyncBlocker - Detailed data of the sync blocker.
 */
public class SyncBlocker {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contexts")
    public SyncBlockerContext[] contexts;

    public SyncBlocker withContexts(SyncBlockerContext[] contexts) {
        this.contexts = contexts;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;

    public SyncBlocker withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonProperty("createdReason")
    public String createdReason;

    public SyncBlocker withCreatedReason(String createdReason) {
        this.createdReason = createdReason;
        return this;
    }
    
    @JsonProperty("id")
    public String id;

    public SyncBlocker withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("resolvedAt")
    public OffsetDateTime resolvedAt;

    public SyncBlocker withResolvedAt(OffsetDateTime resolvedAt) {
        this.resolvedAt = resolvedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resolvedReason")
    public String resolvedReason;

    public SyncBlocker withResolvedReason(String resolvedReason) {
        this.resolvedReason = resolvedReason;
        return this;
    }
    
    @JsonProperty("status")
    public BlockerStatusEnum status;

    public SyncBlocker withStatus(BlockerStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonProperty("type")
    public BlockerTypeEnum type;

    public SyncBlocker withType(BlockerTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public SyncBlocker(@JsonProperty("createdAt") OffsetDateTime createdAt, @JsonProperty("createdReason") String createdReason, @JsonProperty("id") String id, @JsonProperty("status") BlockerStatusEnum status, @JsonProperty("type") BlockerTypeEnum type) {
        this.createdAt = createdAt;
        this.createdReason = createdReason;
        this.id = id;
        this.status = status;
        this.type = type;
  }
}
