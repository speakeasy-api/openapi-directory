// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETModifyAquaConfigurationActionEnum
type GETModifyAquaConfigurationActionEnum string

const (
	GETModifyAquaConfigurationActionEnumModifyAquaConfiguration GETModifyAquaConfigurationActionEnum = "ModifyAquaConfiguration"
)

func (e GETModifyAquaConfigurationActionEnum) ToPointer() *GETModifyAquaConfigurationActionEnum {
	return &e
}

func (e *GETModifyAquaConfigurationActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ModifyAquaConfiguration":
		*e = GETModifyAquaConfigurationActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyAquaConfigurationActionEnum: %v", v)
	}
}

// GETModifyAquaConfigurationAquaConfigurationStatusEnum - This parameter is retired. Amazon Redshift automatically determines whether to use AQUA (Advanced Query Accelerator).
type GETModifyAquaConfigurationAquaConfigurationStatusEnum string

const (
	GETModifyAquaConfigurationAquaConfigurationStatusEnumEnabled  GETModifyAquaConfigurationAquaConfigurationStatusEnum = "enabled"
	GETModifyAquaConfigurationAquaConfigurationStatusEnumDisabled GETModifyAquaConfigurationAquaConfigurationStatusEnum = "disabled"
	GETModifyAquaConfigurationAquaConfigurationStatusEnumAuto     GETModifyAquaConfigurationAquaConfigurationStatusEnum = "auto"
)

func (e GETModifyAquaConfigurationAquaConfigurationStatusEnum) ToPointer() *GETModifyAquaConfigurationAquaConfigurationStatusEnum {
	return &e
}

func (e *GETModifyAquaConfigurationAquaConfigurationStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "enabled":
		fallthrough
	case "disabled":
		fallthrough
	case "auto":
		*e = GETModifyAquaConfigurationAquaConfigurationStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyAquaConfigurationAquaConfigurationStatusEnum: %v", v)
	}
}

// GETModifyAquaConfigurationVersionEnum
type GETModifyAquaConfigurationVersionEnum string

const (
	GETModifyAquaConfigurationVersionEnumTwoThousandAndTwelve1201 GETModifyAquaConfigurationVersionEnum = "2012-12-01"
)

func (e GETModifyAquaConfigurationVersionEnum) ToPointer() *GETModifyAquaConfigurationVersionEnum {
	return &e
}

func (e *GETModifyAquaConfigurationVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2012-12-01":
		*e = GETModifyAquaConfigurationVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyAquaConfigurationVersionEnum: %v", v)
	}
}

type GETModifyAquaConfigurationRequest struct {
	Action GETModifyAquaConfigurationActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// This parameter is retired. Amazon Redshift automatically determines whether to use AQUA (Advanced Query Accelerator).
	AquaConfigurationStatus *GETModifyAquaConfigurationAquaConfigurationStatusEnum `queryParam:"style=form,explode=true,name=AquaConfigurationStatus"`
	// The identifier of the cluster to be modified.
	ClusterIdentifier string                                `queryParam:"style=form,explode=true,name=ClusterIdentifier"`
	Version           GETModifyAquaConfigurationVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyAquaConfigurationResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
