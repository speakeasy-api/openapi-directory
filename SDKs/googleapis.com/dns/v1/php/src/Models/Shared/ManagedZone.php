<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ManagedZone - A zone is a subtree of the DNS namespace under one administrative responsibility. A ManagedZone is a resource that represents a DNS zone hosted by the Cloud DNS service.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ManagedZone
{
    /**
     * Cloud Logging configurations for publicly visible zones.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ManagedZoneCloudLoggingConfig $cloudLoggingConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('cloudLoggingConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ManagedZoneCloudLoggingConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ManagedZoneCloudLoggingConfig $cloudLoggingConfig = null;
    
    /**
     * The time that this resource was created on the server. This is in RFC3339 text format. Output only.
     * 
     * @var ?string $creationTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('creationTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creationTime = null;
    
    /**
     * A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The DNS name of this managed zone, for instance "example.com.".
     * 
     * @var ?string $dnsName
     */
	#[\JMS\Serializer\Annotation\SerializedName('dnsName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $dnsName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('dnssecConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ManagedZoneDnsSecConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ManagedZoneDnsSecConfig $dnssecConfig = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('forwardingConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ManagedZoneForwardingConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ManagedZoneForwardingConfig $forwardingConfig = null;
    
    /**
     * Unique identifier for the resource; defined by the server (output only)
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * User labels.
     * 
     * @var ?array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team.
     * 
     * @var ?string $nameServerSet
     */
	#[\JMS\Serializer\Annotation\SerializedName('nameServerSet')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nameServerSet = null;
    
    /**
     * Delegate your managed_zone to these virtual name servers; defined by the server (output only)
     * 
     * @var ?array<string> $nameServers
     */
	#[\JMS\Serializer\Annotation\SerializedName('nameServers')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $nameServers = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('peeringConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ManagedZonePeeringConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ManagedZonePeeringConfig $peeringConfig = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('privateVisibilityConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ManagedZonePrivateVisibilityConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ManagedZonePrivateVisibilityConfig $privateVisibilityConfig = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('reverseLookupConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ManagedZoneReverseLookupConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ManagedZoneReverseLookupConfig $reverseLookupConfig = null;
    
    /**
     * Contains information about Service Directory-backed zones.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ManagedZoneServiceDirectoryConfig $serviceDirectoryConfig
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceDirectoryConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ManagedZoneServiceDirectoryConfig')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ManagedZoneServiceDirectoryConfig $serviceDirectoryConfig = null;
    
    /**
     * The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ManagedZoneVisibilityEnum $visibility
     */
	#[\JMS\Serializer\Annotation\SerializedName('visibility')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ManagedZoneVisibilityEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ManagedZoneVisibilityEnum $visibility = null;
    
	public function __construct()
	{
		$this->cloudLoggingConfig = null;
		$this->creationTime = null;
		$this->description = null;
		$this->dnsName = null;
		$this->dnssecConfig = null;
		$this->forwardingConfig = null;
		$this->id = null;
		$this->kind = null;
		$this->labels = null;
		$this->name = null;
		$this->nameServerSet = null;
		$this->nameServers = null;
		$this->peeringConfig = null;
		$this->privateVisibilityConfig = null;
		$this->reverseLookupConfig = null;
		$this->serviceDirectoryConfig = null;
		$this->visibility = null;
	}
}
