/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Recipient } from "./recipient";
import { Expose, Type } from "class-transformer";

/**
 * Request object is used for adding new batch to an existing broadcast
 */
export class BatchRequest extends SpeakeasyBase {
  /**
   * An id of existing contact list
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contactListId" })
  contactListId?: number;

  /**
   * A name of batch
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * A list of Recipient objects. For each recipient you can set its phone number or existing contact id to use contact which already exists in account
   */
  @SpeakeasyMetadata({ elemType: Recipient })
  @Expose({ name: "recipients" })
  @Type(() => Recipient)
  recipients?: Recipient[];

  /**
   * Removes duplicate recipients from batch if true
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scrubDuplicates" })
  scrubDuplicates?: boolean;
}
