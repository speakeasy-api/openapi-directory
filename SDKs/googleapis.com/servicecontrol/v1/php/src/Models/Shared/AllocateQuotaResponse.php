<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AllocateQuotaResponse - Response message for the AllocateQuota method.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AllocateQuotaResponse
{
    /**
     * Indicates the decision of the allocate.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\QuotaError> $allocateErrors
     */
	#[\JMS\Serializer\Annotation\SerializedName('allocateErrors')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\QuotaError>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $allocateErrors = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('allocateInfo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AllocateInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AllocateInfo $allocateInfo = null;
    
    /**
     * The same operation_id value used in the AllocateQuotaRequest. Used for logging and diagnostics purposes.
     * 
     * @var ?string $operationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('operationId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $operationId = null;
    
    /**
     * Quota metrics to indicate the result of allocation. Depending on the request, one or more of the following metrics will be included: 1. Per quota group or per quota metric incremental usage will be specified using the following delta metric : "serviceruntime.googleapis.com/api/consumer/quota_used_count" 2. The quota limit reached condition will be specified using the following boolean metric : "serviceruntime.googleapis.com/quota/exceeded"
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\MetricValueSet> $quotaMetrics
     */
	#[\JMS\Serializer\Annotation\SerializedName('quotaMetrics')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\MetricValueSet>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $quotaMetrics = null;
    
    /**
     * ID of the actual config used to process the request.
     * 
     * @var ?string $serviceConfigId
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceConfigId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serviceConfigId = null;
    
	public function __construct()
	{
		$this->allocateErrors = null;
		$this->allocateInfo = null;
		$this->operationId = null;
		$this->quotaMetrics = null;
		$this->serviceConfigId = null;
	}
}
