// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// ParsedListing - A parsed listing
type ParsedListing struct {
	// If not empty, it indicates that this listing belongs to a brand of the feed.
	Brand *string `json:"brand,omitempty"`
	// The partner provided category (accommodation type) of the property.
	Category []LocalizedText `json:"category,omitempty"`
	// Data issues about this listing
	DataIssueDetail []DataIssueDetail `json:"dataIssueDetail,omitempty"`
	// Description of the property.
	Description []LocalizedText `json:"description,omitempty"`
	// Images associated with this listing, localized.
	Image []Image `json:"image,omitempty"`
	// Represents the accuracy of the location. The listing can be anywhere within the defined circular area.
	ImprecisionRadiusMeters *int `json:"imprecisionRadiusMeters,omitempty"`
	// Whether the listing can be served based on non image data alone.
	IsServed *bool `json:"isServed,omitempty"`
	// List of localized names.
	ListingName []LocalizedText `json:"listingName,omitempty"`
	// An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.
	Location *LatLng `json:"location,omitempty"`
	// The list id on partner lec feed, provided by partner.
	PartnerListID *string `json:"partnerListId,omitempty"`
	// The country code where the listing is located.
	RegionCode *string `json:"regionCode,omitempty"`
	// Reviews associated with this listing. Each review proto has a single language attached to it.
	Review []Review `json:"review,omitempty"`
	// VR List attribute.
	UnitAttributes map[string]string `json:"unitAttributes,omitempty"`
}
