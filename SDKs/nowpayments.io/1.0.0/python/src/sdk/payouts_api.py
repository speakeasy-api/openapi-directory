"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations

class PayoutsAPI:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def verify_payout(self, request: operations.VerifyPayoutRequest) -> operations.VerifyPayoutResponse:
        r"""Verify payout
        This method is required to verify payouts by using your 2fa code.  
        You’ll have 10 attempts to verify the payout. If it is not verified after 10 attempts, the payout will remain in ‘creating’ status.  
        Payout will be processed only when it is verified.
        
        Make sure to have your 2fa authentication enabled in your NOWPayments Account (in Account Settings).  
        When 2fa is disabled, the code automatically goes to your registration email.  
        The code sent by email is valid for one hour.
        
        Next is a description of the required request fields:
        
        - :batch-withdrawal-id - payout id you received in `2. Create payout` method
        - verification_code - 2fa code you received with your Google Auth app or via email
            
        
        In order to establish an automatic verification of payouts, you should switch 2FA through the application.  
        There are several libraries for different frameworks aimed on generating a 2FA codes based on a secret key from your account settings.  
        e.g: Speakeasy for JavaScript.  
        We do not recommend to change any default settings.  
        
        ```
        const 2faVerificationCode = speakeasy.totp({
              your_2fa_secret_key,
              encoding: 'base32',
        })
        ```
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.VerifyPayoutRequest, base_url, '/v1/payout/{withdrawals-id}/verify', request)
        
        headers = utils.get_headers(request)
        req_content_type, data, form = utils.serialize_request_body(request, "request_body", 'json')
        if req_content_type not in ('multipart/form-data', 'multipart/mixed'):
            headers['content-type'] = req_content_type
        
        client = self._client
        
        http_res = client.request('POST', url, data=data, files=form, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.VerifyPayoutResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    