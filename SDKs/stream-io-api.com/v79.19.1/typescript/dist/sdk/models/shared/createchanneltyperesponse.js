"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateChannelTypeResponse = exports.CreateChannelTypeResponseBlocklistBehaviorEnum = exports.CreateChannelTypeResponseAutomodBehaviorEnum = exports.CreateChannelTypeResponseAutomodEnum = void 0;
var utils_1 = require("../../../internal/utils");
var policyrequest1_1 = require("./policyrequest1");
var thresholds_1 = require("./thresholds");
var class_transformer_1 = require("class-transformer");
var CreateChannelTypeResponseAutomodEnum;
(function (CreateChannelTypeResponseAutomodEnum) {
    CreateChannelTypeResponseAutomodEnum["Disabled"] = "disabled";
    CreateChannelTypeResponseAutomodEnum["Simple"] = "simple";
    CreateChannelTypeResponseAutomodEnum["Ai"] = "AI";
})(CreateChannelTypeResponseAutomodEnum = exports.CreateChannelTypeResponseAutomodEnum || (exports.CreateChannelTypeResponseAutomodEnum = {}));
var CreateChannelTypeResponseAutomodBehaviorEnum;
(function (CreateChannelTypeResponseAutomodBehaviorEnum) {
    CreateChannelTypeResponseAutomodBehaviorEnum["Flag"] = "flag";
    CreateChannelTypeResponseAutomodBehaviorEnum["Block"] = "block";
})(CreateChannelTypeResponseAutomodBehaviorEnum = exports.CreateChannelTypeResponseAutomodBehaviorEnum || (exports.CreateChannelTypeResponseAutomodBehaviorEnum = {}));
var CreateChannelTypeResponseBlocklistBehaviorEnum;
(function (CreateChannelTypeResponseBlocklistBehaviorEnum) {
    CreateChannelTypeResponseBlocklistBehaviorEnum["Flag"] = "flag";
    CreateChannelTypeResponseBlocklistBehaviorEnum["Block"] = "block";
})(CreateChannelTypeResponseBlocklistBehaviorEnum = exports.CreateChannelTypeResponseBlocklistBehaviorEnum || (exports.CreateChannelTypeResponseBlocklistBehaviorEnum = {}));
/**
 * Successful response
 */
var CreateChannelTypeResponse = /** @class */ (function (_super) {
    __extends(CreateChannelTypeResponse, _super);
    function CreateChannelTypeResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "automod" }),
        __metadata("design:type", String)
    ], CreateChannelTypeResponse.prototype, "automod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "automod_behavior" }),
        __metadata("design:type", String)
    ], CreateChannelTypeResponse.prototype, "automodBehavior", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "automod_thresholds" }),
        (0, class_transformer_1.Type)(function () { return thresholds_1.Thresholds; }),
        __metadata("design:type", thresholds_1.Thresholds)
    ], CreateChannelTypeResponse.prototype, "automodThresholds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "blocklist" }),
        __metadata("design:type", String)
    ], CreateChannelTypeResponse.prototype, "blocklist", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "blocklist_behavior" }),
        __metadata("design:type", String)
    ], CreateChannelTypeResponse.prototype, "blocklistBehavior", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "commands" }),
        __metadata("design:type", Array)
    ], CreateChannelTypeResponse.prototype, "commands", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connect_events" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeResponse.prototype, "connectEvents", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], CreateChannelTypeResponse.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "custom_events" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeResponse.prototype, "customEvents", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "duration" }),
        __metadata("design:type", String)
    ], CreateChannelTypeResponse.prototype, "duration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "grants" }),
        __metadata("design:type", Object)
    ], CreateChannelTypeResponse.prototype, "grants", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "max_message_length" }),
        __metadata("design:type", Number)
    ], CreateChannelTypeResponse.prototype, "maxMessageLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message_retention" }),
        __metadata("design:type", String)
    ], CreateChannelTypeResponse.prototype, "messageRetention", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mutes" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeResponse.prototype, "mutes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], CreateChannelTypeResponse.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: policyrequest1_1.PolicyRequest1 }),
        (0, class_transformer_1.Expose)({ name: "permissions" }),
        (0, class_transformer_1.Type)(function () { return policyrequest1_1.PolicyRequest1; }),
        __metadata("design:type", Array)
    ], CreateChannelTypeResponse.prototype, "permissions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "push_notifications" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeResponse.prototype, "pushNotifications", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "quotes" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeResponse.prototype, "quotes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reactions" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeResponse.prototype, "reactions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "read_events" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeResponse.prototype, "readEvents", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reminders" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeResponse.prototype, "reminders", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "replies" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeResponse.prototype, "replies", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "search" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeResponse.prototype, "search", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "typing_events" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeResponse.prototype, "typingEvents", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updated_at" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], CreateChannelTypeResponse.prototype, "updatedAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uploads" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeResponse.prototype, "uploads", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url_enrichment" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeResponse.prototype, "urlEnrichment", void 0);
    return CreateChannelTypeResponse;
}(utils_1.SpeakeasyBase));
exports.CreateChannelTypeResponse = CreateChannelTypeResponse;
