/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GETUserContentUserJsonSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=query;name=api-key",
  })
  apiKey: string;
}

export class GETUserContentUserJsonRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=userID",
  })
  userID?: number;
}

export class GETUserContentUserJson200ApplicationJSONDebug extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: number;
}

export class GETUserContentUserJson200ApplicationJSONResultsCommentsAssetAllProperties extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "properties" })
  properties?: Record<string, any>[];
}

export class GETUserContentUserJson200ApplicationJSONResultsCommentsAssetLabels extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "labelID" })
  labelID?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "labelName" })
  labelName?: string;
}

export class GETUserContentUserJson200ApplicationJSONResultsCommentsAssetPropertiesAutomoderationOff extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "groupID" })
  groupID?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "taxonomyID" })
  taxonomyID?: number;
}

export class GETUserContentUserJson200ApplicationJSONResultsCommentsAssetPropertiesCommentListSortApprovedateDesc extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "groupID" })
  groupID?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "taxonomyID" })
  taxonomyID?: number;
}

export class GETUserContentUserJson200ApplicationJSONResultsCommentsAssetPropertiesReachedMaxComOn extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "groupID" })
  groupID?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "taxonomyID" })
  taxonomyID?: number;
}

export class GETUserContentUserJson200ApplicationJSONResultsCommentsAssetProperties extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "automoderation-off" })
  @Type(
    () =>
      GETUserContentUserJson200ApplicationJSONResultsCommentsAssetPropertiesAutomoderationOff
  )
  automoderationOff?: GETUserContentUserJson200ApplicationJSONResultsCommentsAssetPropertiesAutomoderationOff;

  @SpeakeasyMetadata()
  @Expose({ name: "comment-list-sort-approvedate-desc" })
  @Type(
    () =>
      GETUserContentUserJson200ApplicationJSONResultsCommentsAssetPropertiesCommentListSortApprovedateDesc
  )
  commentListSortApprovedateDesc?: GETUserContentUserJson200ApplicationJSONResultsCommentsAssetPropertiesCommentListSortApprovedateDesc;

  @SpeakeasyMetadata()
  @Expose({ name: "reached-max-com-on" })
  @Type(
    () =>
      GETUserContentUserJson200ApplicationJSONResultsCommentsAssetPropertiesReachedMaxComOn
  )
  reachedMaxComOn?: GETUserContentUserJson200ApplicationJSONResultsCommentsAssetPropertiesReachedMaxComOn;
}

export class GETUserContentUserJson200ApplicationJSONResultsCommentsAsset extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      GETUserContentUserJson200ApplicationJSONResultsCommentsAssetAllProperties,
  })
  @Expose({ name: "all-properties" })
  @Type(
    () =>
      GETUserContentUserJson200ApplicationJSONResultsCommentsAssetAllProperties
  )
  allProperties?: GETUserContentUserJson200ApplicationJSONResultsCommentsAssetAllProperties[];

  @SpeakeasyMetadata()
  @Expose({ name: "assetID" })
  assetID?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "assetTitle" })
  assetTitle?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "assetURL" })
  assetURL?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createDate" })
  createDate?: string;

  @SpeakeasyMetadata({
    elemType:
      GETUserContentUserJson200ApplicationJSONResultsCommentsAssetLabels,
  })
  @Expose({ name: "labels" })
  @Type(
    () => GETUserContentUserJson200ApplicationJSONResultsCommentsAssetLabels
  )
  labels?: GETUserContentUserJson200ApplicationJSONResultsCommentsAssetLabels[];

  @SpeakeasyMetadata()
  @Expose({ name: "properties" })
  @Type(
    () => GETUserContentUserJson200ApplicationJSONResultsCommentsAssetProperties
  )
  properties?: GETUserContentUserJson200ApplicationJSONResultsCommentsAssetProperties;

  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "taxonomy" })
  taxonomy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "text" })
  text?: Record<string, any>[];

  @SpeakeasyMetadata()
  @Expose({ name: "updateDate" })
  updateDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "vendorID" })
  vendorID?: string;
}

export class GETUserContentUserJson200ApplicationJSONResultsComments extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "approveDate" })
  approveDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "asset" })
  @Type(() => GETUserContentUserJson200ApplicationJSONResultsCommentsAsset)
  asset?: GETUserContentUserJson200ApplicationJSONResultsCommentsAsset;

  @SpeakeasyMetadata()
  @Expose({ name: "commentBody" })
  commentBody?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "commentID" })
  commentID?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "commentSequence" })
  commentSequence?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "commentTitle" })
  commentTitle?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "commentType" })
  commentType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createDate" })
  createDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "editorsSelection" })
  editorsSelection?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "labels" })
  labels?: Record<string, any>[];

  @SpeakeasyMetadata()
  @Expose({ name: "parentID" })
  parentID?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "permid" })
  permid?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "picURL" })
  picURL?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "recommendations" })
  recommendations?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "replies" })
  replies?: Record<string, any>[];

  @SpeakeasyMetadata()
  @Expose({ name: "replyCount" })
  replyCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updateDate" })
  updateDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userDisplayName" })
  userDisplayName?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "userID" })
  userID?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "userLocation" })
  userLocation?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "userSubmittedDisplayName" })
  userSubmittedDisplayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userSubmittedLocation" })
  userSubmittedLocation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userSubmittedTitle" })
  userSubmittedTitle?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "userSubmittedURL" })
  userSubmittedURL?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "userTitle" })
  userTitle?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "userURL" })
  userURL?: any;
}

export class GETUserContentUserJson200ApplicationJSONResults extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "api_timestamp" })
  apiTimestamp?: string;

  @SpeakeasyMetadata({
    elemType: GETUserContentUserJson200ApplicationJSONResultsComments,
  })
  @Expose({ name: "comments" })
  @Type(() => GETUserContentUserJson200ApplicationJSONResultsComments)
  comments?: GETUserContentUserJson200ApplicationJSONResultsComments[];

  @SpeakeasyMetadata()
  @Expose({ name: "totalCommentsFound" })
  totalCommentsFound?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "totalCommentsReturned" })
  totalCommentsReturned?: number;
}

export class GETUserContentUserJson200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "copyright" })
  copyright?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "debug" })
  @Type(() => GETUserContentUserJson200ApplicationJSONDebug)
  debug?: GETUserContentUserJson200ApplicationJSONDebug;

  @SpeakeasyMetadata()
  @Expose({ name: "results" })
  @Type(() => GETUserContentUserJson200ApplicationJSONResults)
  results?: GETUserContentUserJson200ApplicationJSONResults;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}

export class GETUserContentUserJsonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  getUserContentUserJSON200ApplicationJSONObject?: GETUserContentUserJson200ApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
