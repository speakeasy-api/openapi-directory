/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GroupRelation - Message representing a transitive group of a user or a group.
 */
public class GroupRelation {
    /**
     * Display name for this group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public GroupRelation withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Resource name for this group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("group")
    public String group;

    public GroupRelation withGroup(String group) {
        this.group = group;
        return this;
    }
    
    /**
     * A unique identifier for an entity in the Cloud Identity Groups API. An entity can represent either a group with an optional `namespace` or a user without a `namespace`. The combination of `id` and `namespace` must be unique; however, the same `id` can be used with different `namespace`s.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("groupKey")
    public EntityKey groupKey;

    public GroupRelation withGroupKey(EntityKey groupKey) {
        this.groupKey = groupKey;
        return this;
    }
    
    /**
     * Labels for Group resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public GroupRelation withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * The relation between the member and the transitive group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relationType")
    public GroupRelationRelationTypeEnum relationType;

    public GroupRelation withRelationType(GroupRelationRelationTypeEnum relationType) {
        this.relationType = relationType;
        return this;
    }
    
    /**
     * Membership roles of the member for the group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("roles")
    public TransitiveMembershipRole[] roles;

    public GroupRelation withRoles(TransitiveMembershipRole[] roles) {
        this.roles = roles;
        return this;
    }
    
    public GroupRelation(){}
}
