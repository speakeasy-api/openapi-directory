// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ElectionShapeLookupBehaviorEnum string

const (
	ElectionShapeLookupBehaviorEnumShapeLookupDefault  ElectionShapeLookupBehaviorEnum = "shapeLookupDefault"
	ElectionShapeLookupBehaviorEnumShapeLookupDisabled ElectionShapeLookupBehaviorEnum = "shapeLookupDisabled"
	ElectionShapeLookupBehaviorEnumShapeLookupEnabled  ElectionShapeLookupBehaviorEnum = "shapeLookupEnabled"
)

func (e ElectionShapeLookupBehaviorEnum) ToPointer() *ElectionShapeLookupBehaviorEnum {
	return &e
}

func (e *ElectionShapeLookupBehaviorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "shapeLookupDefault":
		fallthrough
	case "shapeLookupDisabled":
		fallthrough
	case "shapeLookupEnabled":
		*e = ElectionShapeLookupBehaviorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ElectionShapeLookupBehaviorEnum: %v", v)
	}
}

// Election - Information about the election that was queried.
type Election struct {
	// Day of the election in YYYY-MM-DD format.
	ElectionDay *string `json:"electionDay,omitempty"`
	// The unique ID of this election.
	ID *string `json:"id,omitempty"`
	// A displayable name for the election.
	Name *string `json:"name,omitempty"`
	// The political division of the election. Represented as an OCD Division ID. Voters within these political jurisdictions are covered by this election. This is typically a state such as ocd-division/country:us/state:ca or for the midterms or general election the entire US (i.e. ocd-division/country:us).
	OcdDivisionID       *string                          `json:"ocdDivisionId,omitempty"`
	ShapeLookupBehavior *ElectionShapeLookupBehaviorEnum `json:"shapeLookupBehavior,omitempty"`
}
