// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnum - Detected break type.
type GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnum string

const (
	GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnumUnknown      GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnum = "UNKNOWN"
	GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnumSpace        GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnum = "SPACE"
	GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnumSureSpace    GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnum = "SURE_SPACE"
	GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnumEolSureSpace GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnum = "EOL_SURE_SPACE"
	GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnumHyphen       GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnum = "HYPHEN"
	GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnumLineBreak    GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnum = "LINE_BREAK"
)

func (e GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnum) ToPointer() *GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnum {
	return &e
}

func (e *GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN":
		fallthrough
	case "SPACE":
		fallthrough
	case "SURE_SPACE":
		fallthrough
	case "EOL_SURE_SPACE":
		fallthrough
	case "HYPHEN":
		fallthrough
	case "LINE_BREAK":
		*e = GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnum: %v", v)
	}
}

// GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak - Detected start or end of a structural component.
type GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak struct {
	// True if break prepends the element.
	IsPrefix *bool `json:"isPrefix,omitempty"`
	// Detected break type.
	Type *GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreakTypeEnum `json:"type,omitempty"`
}
