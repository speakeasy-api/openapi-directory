/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class InterconnectDiagnosticsLinkOpticalPower {
    /**
     * The status of the current value when compared to the warning and alarm levels for the receiving or transmitting transceiver. Possible states include: - OK: The value has not crossed a warning threshold. - LOW_WARNING: The value has crossed below the low warning threshold. - HIGH_WARNING: The value has crossed above the high warning threshold. - LOW_ALARM: The value has crossed below the low alarm threshold. - HIGH_ALARM: The value has crossed above the high alarm threshold. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public InterconnectDiagnosticsLinkOpticalPowerStateEnum state;
    public InterconnectDiagnosticsLinkOpticalPower withState(InterconnectDiagnosticsLinkOpticalPowerStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Value of the current receiving or transmitting optical power, read in dBm. Take a known good optical value, give it a 10% margin and trigger warnings relative to that value. In general, a -7dBm warning and a -11dBm alarm are good optical value estimates for most links.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public Float value;
    public InterconnectDiagnosticsLinkOpticalPower withValue(Float value) {
        this.value = value;
        return this;
    }
    
}
