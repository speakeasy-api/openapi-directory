<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Report - The complex type that defines that defines the report.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Report
{
    /**
     * A complex type containing the header of the report and the type of data containted in the rows of the report.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Metadata> $dimensionMetadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('dimensionMetadata')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Metadata>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $dimensionMetadata = null;
    
    /**
     * The time stamp is formatted as an ISO 8601 string, which is based on the 24-hour Universal Coordinated Time (UTC) clock. If you specify an end date that is beyond the lastUpdatedDate value, eBay returns a report that contains data only up to the lastUpdateDate date. Format: [YYYY]-[MM]-[DD]T[hh]:[mm]:[ss].[sss]Z Example: 2018-08-20T07:09:00.000Z
     * 
     * @var ?string $endDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('endDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $endDate = null;
    
    /**
     * Type that defines the headers for the dimension keys and metrics returned in the report.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Header $header
     */
	#[\JMS\Serializer\Annotation\SerializedName('header')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Header')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Header $header = null;
    
    /**
     * The date and time, in ISO 8601 format, that indicates the last time the data returned in the report was updated.
     * 
     * @var ?string $lastUpdatedDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastUpdatedDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastUpdatedDate = null;
    
    /**
     * A complex type containing the individual data records for the traffic report.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Record> $records
     */
	#[\JMS\Serializer\Annotation\SerializedName('records')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Record>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $records = null;
    
    /**
     * The start date of the date range used to calculate the report, in ISO 8601 format.
     * 
     * @var ?string $startDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('startDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startDate = null;
    
    /**
     * An array of any process errors or warnings that were generated during the processing of the call processing.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Error> $warnings
     */
	#[\JMS\Serializer\Annotation\SerializedName('warnings')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Error>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $warnings = null;
    
	public function __construct()
	{
		$this->dimensionMetadata = null;
		$this->endDate = null;
		$this->header = null;
		$this->lastUpdatedDate = null;
		$this->records = null;
		$this->startDate = null;
		$this->warnings = null;
	}
}
