"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import api_v2010_account_call_call_feedback_summary as shared_api_v2010_account_call_call_feedback_summary
from datetime import date
from enum import Enum
from typing import Optional

CREATE_CALL_FEEDBACK_SUMMARY_SERVERS = [
	"https://api.twilio.com",
]


@dataclasses.dataclass
class CreateCallFeedbackSummarySecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    
class CreateCallFeedbackSummaryCreateCallFeedbackSummaryRequestStatusCallbackMethodEnum(str, Enum):
    r"""The HTTP method (`GET` or `POST`) we use to make the request to the `StatusCallback` URL."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'


@dataclasses.dataclass
class CreateCallFeedbackSummaryCreateCallFeedbackSummaryRequest:
    
    end_date: date = dataclasses.field(metadata={'form': { 'field_name': 'EndDate' }})
    r"""Only include feedback given on or before this date. Format is `YYYY-MM-DD` and specified in UTC."""  
    start_date: date = dataclasses.field(metadata={'form': { 'field_name': 'StartDate' }})
    r"""Only include feedback given on or after this date. Format is `YYYY-MM-DD` and specified in UTC."""  
    include_subaccounts: Optional[bool] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'IncludeSubaccounts' }})
    r"""Whether to also include Feedback resources from all subaccounts. `true` includes feedback from all subaccounts and `false`, the default, includes feedback from only the specified account."""  
    status_callback: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'StatusCallback' }})
    r"""The URL that we will request when the feedback summary is complete."""  
    status_callback_method: Optional[CreateCallFeedbackSummaryCreateCallFeedbackSummaryRequestStatusCallbackMethodEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'StatusCallbackMethod' }})
    r"""The HTTP method (`GET` or `POST`) we use to make the request to the `StatusCallback` URL."""  
    

@dataclasses.dataclass
class CreateCallFeedbackSummaryRequest:
    
    account_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'AccountSid', 'style': 'simple', 'explode': False }})
    r"""The unique id of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this resource."""  
    request_body: Optional[CreateCallFeedbackSummaryCreateCallFeedbackSummaryRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class CreateCallFeedbackSummaryResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_v2010_account_call_call_feedback_summary: Optional[shared_api_v2010_account_call_call_feedback_summary.APIV2010AccountCallCallFeedbackSummary] = dataclasses.field(default=None)
    r"""Created"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    