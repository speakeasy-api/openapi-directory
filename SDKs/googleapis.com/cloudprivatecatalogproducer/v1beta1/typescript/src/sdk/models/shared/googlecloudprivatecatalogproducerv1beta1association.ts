/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * An association tuple that pairs a `Catalog` to a resource
 *
 * @remarks
 * that can use the `Catalog`. After association, a
 * google.cloud.privatecatalog.v1beta1.Catalog becomes available to
 * consumers under specified Association.resource and all of its child
 * nodes.
 * Users who have the `cloudprivatecatalog.targets.get` permission on any of
 * the resource nodes can access the catalog and child products under the node.
 *
 * For example, suppose the cloud resource hierarchy is as follows:
 *
 * * organizations/example.com
 *   * folders/team
 *     * projects/test
 *
 * After creating an association with `organizations/example.com`, the catalog
 * `catalogs/1`  is accessible from the following paths:
 *
 * * organizations/example.com
 * * folders/team
 * * projects/test
 *
 * Users can access them by
 * google.cloud.v1beta1.PrivateCatalog.SearchCatalogs action.
 */
export class GoogleCloudPrivatecatalogproducerV1beta1Association extends SpeakeasyBase {
  /**
   * The creation time of the association.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "createTime" })
  createTime?: string;

  /**
   * Output only. The resource name of the catalog association, in the format
   *
   * @remarks
   * `catalogs/{catalog_id}/associations/{association_id}'.
   *
   * A unique identifier for the catalog association, which is
   * generated by catalog service.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Required. The user-supplied fully qualified name of the `Resource`
   *
   * @remarks
   * associated to the `Catalog`. It supports `Organization`, `Folder`,
   * and `Project`. Values are of the form
   *
   * * `//cloudresourcemanager.googleapis.com/projects/{product_number}`
   * * `//cloudresourcemanager.googleapis.com/folders/{folder_id}`
   * * `//cloudresourcemanager.googleapis.com/organizations/{organization_id}`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource" })
  resource?: string;
}
