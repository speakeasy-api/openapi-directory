<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETAuthorizeDBSecurityGroupIngressRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETAuthorizeDBSecurityGroupIngressActionEnum $action;
    
    /**
     * The IP range to authorize.
     * 
     * @var ?string $cidrip
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=CIDRIP')]
    public ?string $cidrip = null;
    
    /**
     * The name of the DB security group to add authorization to.
     * 
     * @var string $dbSecurityGroupName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DBSecurityGroupName')]
    public string $dbSecurityGroupName;
    
    /**
     * Id of the EC2 security group to authorize. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.
     * 
     * @var ?string $ec2SecurityGroupId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=EC2SecurityGroupId')]
    public ?string $ec2SecurityGroupId = null;
    
    /**
     * Name of the EC2 security group to authorize. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.
     * 
     * @var ?string $ec2SecurityGroupName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=EC2SecurityGroupName')]
    public ?string $ec2SecurityGroupName = null;
    
    /**
     * Amazon Web Services account number of the owner of the EC2 security group specified in the <code>EC2SecurityGroupName</code> parameter. The Amazon Web Services access key ID isn't an acceptable value. For VPC DB security groups, <code>EC2SecurityGroupId</code> must be provided. Otherwise, <code>EC2SecurityGroupOwnerId</code> and either <code>EC2SecurityGroupName</code> or <code>EC2SecurityGroupId</code> must be provided.
     * 
     * @var ?string $ec2SecurityGroupOwnerId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=EC2SecurityGroupOwnerId')]
    public ?string $ec2SecurityGroupOwnerId = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETAuthorizeDBSecurityGroupIngressVersionEnum $version;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETAuthorizeDBSecurityGroupIngressActionEnum::AUTHORIZE_DB_SECURITY_GROUP_INGRESS;
		$this->cidrip = null;
		$this->dbSecurityGroupName = "";
		$this->ec2SecurityGroupId = null;
		$this->ec2SecurityGroupName = null;
		$this->ec2SecurityGroupOwnerId = null;
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETAuthorizeDBSecurityGroupIngressVersionEnum::TWO_THOUSAND_AND_FOURTEEN1031;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
