/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { HttpHeaderMatch } from "./httpheadermatch";
import { Expose, Type } from "class-transformer";

/**
 * Specification of traffic destination attributes.
 */
export class Destination extends SpeakeasyBase {
  /**
   * Required. List of host names to match. Matched against the ":authority" header in http requests. At least one host should match. Each host can be an exact match, or a prefix match (example "mydomain.*") or a suffix match (example "*.myorg.com") or a presence (any) match "*".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hosts" })
  hosts?: string[];

  /**
   * Specification of HTTP header match attributes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "httpHeaderMatch" })
  @Type(() => HttpHeaderMatch)
  httpHeaderMatch?: HttpHeaderMatch;

  /**
   * Optional. A list of HTTP methods to match. At least one method should match. Should not be set for gRPC services.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "methods" })
  methods?: string[];

  /**
   * Required. List of destination ports to match. At least one port should match.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ports" })
  ports?: number[];
}
