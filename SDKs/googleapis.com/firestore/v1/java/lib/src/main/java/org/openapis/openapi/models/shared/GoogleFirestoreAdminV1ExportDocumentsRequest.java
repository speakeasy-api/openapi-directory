/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleFirestoreAdminV1ExportDocumentsRequest - The request for FirestoreAdmin.ExportDocuments.
 */
public class GoogleFirestoreAdminV1ExportDocumentsRequest {
    /**
     * Which collection ids to export. Unspecified means all collections.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("collectionIds")
    public String[] collectionIds;
    public GoogleFirestoreAdminV1ExportDocumentsRequest withCollectionIds(String[] collectionIds) {
        this.collectionIds = collectionIds;
        return this;
    }
    
    /**
     * An empty list represents all namespaces. This is the preferred usage for databases that don't use namespaces. An empty string element represents the default namespace. This should be used if the database has data in non-default namespaces, but doesn't want to include them. Each namespace in this list must be unique.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("namespaceIds")
    public String[] namespaceIds;
    public GoogleFirestoreAdminV1ExportDocumentsRequest withNamespaceIds(String[] namespaceIds) {
        this.namespaceIds = namespaceIds;
        return this;
    }
    
    /**
     * The output URI. Currently only supports Google Cloud Storage URIs of the form: `gs://BUCKET_NAME[/NAMESPACE_PATH]`, where `BUCKET_NAME` is the name of the Google Cloud Storage bucket and `NAMESPACE_PATH` is an optional Google Cloud Storage namespace path. When choosing a name, be sure to consider Google Cloud Storage naming guidelines: https://cloud.google.com/storage/docs/naming. If the URI is a bucket (without a namespace path), a prefix will be generated based on the start time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputUriPrefix")
    public String outputUriPrefix;
    public GoogleFirestoreAdminV1ExportDocumentsRequest withOutputUriPrefix(String outputUriPrefix) {
        this.outputUriPrefix = outputUriPrefix;
        return this;
    }
    
}
