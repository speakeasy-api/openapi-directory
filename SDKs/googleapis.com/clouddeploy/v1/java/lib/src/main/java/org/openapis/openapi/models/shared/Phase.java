/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Phase - Phase represents a collection of jobs that are logically grouped together for a `Rollout`.
 */
public class Phase {
    /**
     * ChildRollouts job composition
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("childRolloutJobs")
    public ChildRolloutJobs childRolloutJobs;
    public Phase withChildRolloutJobs(ChildRolloutJobs childRolloutJobs) {
        this.childRolloutJobs = childRolloutJobs;
        return this;
    }
    
    /**
     * Deployment job composition.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deploymentJobs")
    public DeploymentJobs deploymentJobs;
    public Phase withDeploymentJobs(DeploymentJobs deploymentJobs) {
        this.deploymentJobs = deploymentJobs;
        return this;
    }
    
    /**
     * Output only. The ID of the Phase.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Phase withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Output only. Additional information on why the Phase was skipped, if available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skipMessage")
    public String skipMessage;
    public Phase withSkipMessage(String skipMessage) {
        this.skipMessage = skipMessage;
        return this;
    }
    
    /**
     * Output only. Current state of the Phase.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public PhaseStateEnum state;
    public Phase withState(PhaseStateEnum state) {
        this.state = state;
        return this;
    }
    
}
