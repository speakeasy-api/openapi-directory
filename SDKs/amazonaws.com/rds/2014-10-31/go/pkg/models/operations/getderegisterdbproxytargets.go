// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeregisterDBProxyTargetsActionEnum
type GETDeregisterDBProxyTargetsActionEnum string

const (
	GETDeregisterDBProxyTargetsActionEnumDeregisterDbProxyTargets GETDeregisterDBProxyTargetsActionEnum = "DeregisterDBProxyTargets"
)

func (e *GETDeregisterDBProxyTargetsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeregisterDBProxyTargets":
		*e = GETDeregisterDBProxyTargetsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeregisterDBProxyTargetsActionEnum: %s", s)
	}
}

// GETDeregisterDBProxyTargetsVersionEnum
type GETDeregisterDBProxyTargetsVersionEnum string

const (
	GETDeregisterDBProxyTargetsVersionEnumTwoThousandAndFourteen1031 GETDeregisterDBProxyTargetsVersionEnum = "2014-10-31"
)

func (e *GETDeregisterDBProxyTargetsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2014-10-31":
		*e = GETDeregisterDBProxyTargetsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeregisterDBProxyTargetsVersionEnum: %s", s)
	}
}

type GETDeregisterDBProxyTargetsRequest struct {
	Action GETDeregisterDBProxyTargetsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// One or more DB cluster identifiers.
	DBClusterIdentifiers []string `queryParam:"style=form,explode=true,name=DBClusterIdentifiers"`
	// One or more DB instance identifiers.
	DBInstanceIdentifiers []string `queryParam:"style=form,explode=true,name=DBInstanceIdentifiers"`
	// The identifier of the <code>DBProxy</code> that is associated with the <code>DBProxyTargetGroup</code>.
	DBProxyName string `queryParam:"style=form,explode=true,name=DBProxyName"`
	// The identifier of the <code>DBProxyTargetGroup</code>.
	TargetGroupName   *string                                `queryParam:"style=form,explode=true,name=TargetGroupName"`
	Version           GETDeregisterDBProxyTargetsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeregisterDBProxyTargetsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
