<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CreateControlMappingSource -  The control mapping fields that represent the source for evidence collection, along with related parameters and metadata. This doesn't contain <code>mappingID</code>. 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CreateControlMappingSource
{
	#[\JMS\Serializer\Annotation\SerializedName('sourceDescription')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceDescription = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('sourceFrequency')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SourceFrequencyEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SourceFrequencyEnum $sourceFrequency = null;
    
    /**
     * <p> The keyword to search for in CloudTrail logs, Config rules, Security Hub checks, and Amazon Web Services API names. </p> <p> To learn more about the supported keywords that you can use when mapping a control data source, see the following pages in the <i>Audit Manager User Guide</i>:</p> <ul> <li> <p> <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-ash.html">Config rules supported by Audit Manager</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-config.html">Security Hub controls supported by Audit Manager</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-api.html">API calls supported by Audit Manager</a> </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/audit-manager/latest/userguide/control-data-sources-cloudtrail.html">CloudTrail event names supported by Audit Manager</a> </p> </li> </ul>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SourceKeyword $sourceKeyword
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceKeyword')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SourceKeyword')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SourceKeyword $sourceKeyword = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('sourceName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('sourceSetUpOption')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SourceSetUpOptionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SourceSetUpOptionEnum $sourceSetUpOption = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('sourceType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SourceTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SourceTypeEnum $sourceType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('troubleshootingText')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $troubleshootingText = null;
    
	public function __construct()
	{
		$this->sourceDescription = null;
		$this->sourceFrequency = null;
		$this->sourceKeyword = null;
		$this->sourceName = null;
		$this->sourceSetUpOption = null;
		$this->sourceType = null;
		$this->troubleshootingText = null;
	}
}
