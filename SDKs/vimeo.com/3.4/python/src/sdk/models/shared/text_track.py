"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class TextTrackTypeEnum(str, Enum):
    r"""The type of the text track:
    
    Option descriptions:
     * `captions` - The text track is for captions.
     * `subtitles` - The text track is for subtitles.
    """
    CAPTIONS = 'captions'
    SUBTITLES = 'subtitles'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TextTrack:
    r"""The text track was added."""
    
    active: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('active') }})
    r"""Whether this text track is active."""  
    hls_link: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hls_link') }})
    r"""The read-only URL of the text track file, intended for use with HLS playback."""  
    hls_link_expires_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hls_link_expires_time') }})
    r"""The time in ISO 8601 format when the read-only HLS playback text track file expires."""  
    language: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('language') }})
    r"""The language code for this text track. To see a full list, request
    `/languages?filter=texttrack`.
    """  
    link: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('link') }})
    r"""The read-only URL of the text track file. You can upload to this link when you create it for the first time."""  
    link_expires_time: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('link_expires_time') }})
    r"""The time in ISO 8601 format when the text track link expires."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""The descriptive name of this text track."""  
    type: TextTrackTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of the text track:
    
    Option descriptions:
     * `captions` - The text track is for captions.
     * `subtitles` - The text track is for subtitles.
    """  
    uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri') }})
    r"""The relative URI of the text track."""  
    