/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MetricRequest } from "./metricrequest";
import { TimeRange } from "./timerange";
import { Expose, Type } from "class-transformer";

/**
 * A request for basic metric insights.
 */
export class BasicMetricsRequest extends SpeakeasyBase {
  /**
   * A collection of metrics to return values for including the options for how the data should be returned.
   */
  @SpeakeasyMetadata({ elemType: MetricRequest })
  @Expose({ name: "metricRequests" })
  @Type(() => MetricRequest)
  metricRequests?: MetricRequest[];

  /**
   * A range of time. Data will be pulled over the range as a half-open inverval (that is, [start_time, end_time)).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeRange" })
  @Type(() => TimeRange)
  timeRange?: TimeRange;
}
