// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TaskReservationEnumStatusEnum - Returns the list of reservations for a task with a specified ReservationStatus.  Can be: `pending`, `accepted`, `rejected`, or `timeout`.
type TaskReservationEnumStatusEnum string

const (
	TaskReservationEnumStatusEnumPending   TaskReservationEnumStatusEnum = "pending"
	TaskReservationEnumStatusEnumAccepted  TaskReservationEnumStatusEnum = "accepted"
	TaskReservationEnumStatusEnumRejected  TaskReservationEnumStatusEnum = "rejected"
	TaskReservationEnumStatusEnumTimeout   TaskReservationEnumStatusEnum = "timeout"
	TaskReservationEnumStatusEnumCanceled  TaskReservationEnumStatusEnum = "canceled"
	TaskReservationEnumStatusEnumRescinded TaskReservationEnumStatusEnum = "rescinded"
	TaskReservationEnumStatusEnumWrapping  TaskReservationEnumStatusEnum = "wrapping"
	TaskReservationEnumStatusEnumCompleted TaskReservationEnumStatusEnum = "completed"
)

func (e TaskReservationEnumStatusEnum) ToPointer() *TaskReservationEnumStatusEnum {
	return &e
}

func (e *TaskReservationEnumStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "accepted":
		fallthrough
	case "rejected":
		fallthrough
	case "timeout":
		fallthrough
	case "canceled":
		fallthrough
	case "rescinded":
		fallthrough
	case "wrapping":
		fallthrough
	case "completed":
		*e = TaskReservationEnumStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskReservationEnumStatusEnum: %v", v)
	}
}
