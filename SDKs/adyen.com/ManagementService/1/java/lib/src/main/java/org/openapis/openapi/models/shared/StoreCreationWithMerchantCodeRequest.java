/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class StoreCreationWithMerchantCodeRequest {
    @JsonProperty("address")
    public StoreLocation address;

    public StoreCreationWithMerchantCodeRequest withAddress(StoreLocation address) {
        this.address = address;
        return this;
    }
    
    /**
     * The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businesslines__resParam_id) that the store is associated with.
     * If not specified, the business line of the merchant account is used. Required when there are multiple business lines under the merchant account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("businessLineIds")
    public String[] businessLineIds;

    public StoreCreationWithMerchantCodeRequest withBusinessLineIds(String[] businessLineIds) {
        this.businessLineIds = businessLineIds;
        return this;
    }
    
    /**
     * Your description of the store.
     */
    @JsonProperty("description")
    public String description;

    public StoreCreationWithMerchantCodeRequest withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * When using the Zip payment method: The location ID that Zip has assigned to your store.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("externalReferenceId")
    public String externalReferenceId;

    public StoreCreationWithMerchantCodeRequest withExternalReferenceId(String externalReferenceId) {
        this.externalReferenceId = externalReferenceId;
        return this;
    }
    
    /**
     * The unique identifier of the merchant account that the store belongs to.
     */
    @JsonProperty("merchantId")
    public String merchantId;

    public StoreCreationWithMerchantCodeRequest withMerchantId(String merchantId) {
        this.merchantId = merchantId;
        return this;
    }
    
    /**
     * The phone number of the store, including '+' and country code.
     */
    @JsonProperty("phoneNumber")
    public String phoneNumber;

    public StoreCreationWithMerchantCodeRequest withPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }
    
    /**
     * Your reference to recognize the store by. Also known as the store code.
     *  Allowed characters: Lowercase and uppercase letters without diacritics, numbers 0 through 9, hyphen (-), and underscore (_).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reference")
    public String reference;

    public StoreCreationWithMerchantCodeRequest withReference(String reference) {
        this.reference = reference;
        return this;
    }
    
    /**
     * The store name to be shown on the shopper's bank or credit card statement and on the shopper receipt.
     * Maximum length: 22 characters; can't be all numbers.
     */
    @JsonProperty("shopperStatement")
    public String shopperStatement;

    public StoreCreationWithMerchantCodeRequest withShopperStatement(String shopperStatement) {
        this.shopperStatement = shopperStatement;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("splitConfiguration")
    public StoreSplitConfiguration splitConfiguration;

    public StoreCreationWithMerchantCodeRequest withSplitConfiguration(StoreSplitConfiguration splitConfiguration) {
        this.splitConfiguration = splitConfiguration;
        return this;
    }
    
    public StoreCreationWithMerchantCodeRequest(@JsonProperty("address") StoreLocation address, @JsonProperty("description") String description, @JsonProperty("merchantId") String merchantId, @JsonProperty("phoneNumber") String phoneNumber, @JsonProperty("shopperStatement") String shopperStatement) {
        this.address = address;
        this.description = description;
        this.merchantId = merchantId;
        this.phoneNumber = phoneNumber;
        this.shopperStatement = shopperStatement;
  }
}
