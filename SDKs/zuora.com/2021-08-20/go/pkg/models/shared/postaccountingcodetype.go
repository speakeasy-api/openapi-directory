// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// POSTAccountingCodeTypeTypeEnum - Accounting code type. You cannot create new accounting codes of type `AccountsReceivable`.
//
// Note that `On-Account Receivable` is only available if you enable the Invoice Settlement feature.
type POSTAccountingCodeTypeTypeEnum string

const (
	POSTAccountingCodeTypeTypeEnumAccountsReceivable    POSTAccountingCodeTypeTypeEnum = "AccountsReceivable"
	POSTAccountingCodeTypeTypeEnumOnAccountReceivable   POSTAccountingCodeTypeTypeEnum = "On-Account Receivable"
	POSTAccountingCodeTypeTypeEnumCash                  POSTAccountingCodeTypeTypeEnum = "Cash"
	POSTAccountingCodeTypeTypeEnumOtherAssets           POSTAccountingCodeTypeTypeEnum = "OtherAssets"
	POSTAccountingCodeTypeTypeEnumCustomerCashOnAccount POSTAccountingCodeTypeTypeEnum = "CustomerCashOnAccount"
	POSTAccountingCodeTypeTypeEnumDeferredRevenue       POSTAccountingCodeTypeTypeEnum = "DeferredRevenue"
	POSTAccountingCodeTypeTypeEnumSalesTaxPayable       POSTAccountingCodeTypeTypeEnum = "SalesTaxPayable"
	POSTAccountingCodeTypeTypeEnumOtherLiabilities      POSTAccountingCodeTypeTypeEnum = "OtherLiabilities"
	POSTAccountingCodeTypeTypeEnumSalesRevenue          POSTAccountingCodeTypeTypeEnum = "SalesRevenue"
	POSTAccountingCodeTypeTypeEnumSalesDiscounts        POSTAccountingCodeTypeTypeEnum = "SalesDiscounts"
	POSTAccountingCodeTypeTypeEnumOtherRevenue          POSTAccountingCodeTypeTypeEnum = "OtherRevenue"
	POSTAccountingCodeTypeTypeEnumOtherEquity           POSTAccountingCodeTypeTypeEnum = "OtherEquity"
	POSTAccountingCodeTypeTypeEnumBadDebt               POSTAccountingCodeTypeTypeEnum = "BadDebt"
	POSTAccountingCodeTypeTypeEnumOtherExpenses         POSTAccountingCodeTypeTypeEnum = "OtherExpenses"
)

func (e *POSTAccountingCodeTypeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AccountsReceivable":
		fallthrough
	case "On-Account Receivable":
		fallthrough
	case "Cash":
		fallthrough
	case "OtherAssets":
		fallthrough
	case "CustomerCashOnAccount":
		fallthrough
	case "DeferredRevenue":
		fallthrough
	case "SalesTaxPayable":
		fallthrough
	case "OtherLiabilities":
		fallthrough
	case "SalesRevenue":
		fallthrough
	case "SalesDiscounts":
		fallthrough
	case "OtherRevenue":
		fallthrough
	case "OtherEquity":
		fallthrough
	case "BadDebt":
		fallthrough
	case "OtherExpenses":
		*e = POSTAccountingCodeTypeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTAccountingCodeTypeTypeEnum: %s", s)
	}
}

// POSTAccountingCodeType - Container for custom fields of an Accounting Code object.
type POSTAccountingCodeType struct {
	// Name of the account in your general ledger.
	//
	// Field only available if you have Zuora Finance enabled. Maximum of 255 characters.
	//
	GlAccountName *string `json:"glAccountName,omitempty"`
	// Account number in your general ledger.
	//
	// Field only available if you have Zuora Finance enabled. Maximum of 255 characters.
	//
	GlAccountNumber *string `json:"glAccountNumber,omitempty"`
	// Name of the accounting code.
	//
	// Accounting code name must be unique. Maximum of 100 characters.
	//
	Name string `json:"name"`
	// Maximum of 2,000 characters.
	//
	Notes *string `json:"notes,omitempty"`
	// Accounting code type. You cannot create new accounting codes of type `AccountsReceivable`.
	//
	// Note that `On-Account Receivable` is only available if you enable the Invoice Settlement feature.
	//
	Type POSTAccountingCodeTypeTypeEnum `json:"type"`
}
