"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import consentstatus_enum as shared_consentstatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConsentStatusResponse200:
    r"""Body of the JSON response for a successful get status request for a consent."""
    
    consent_status: shared_consentstatus_enum.ConsentStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('consentStatus') }})
    r"""This is the overall lifecycle status of the consent.
    
    Valid values are:
      - 'received': The consent data have been received and are technically correct.
        The data is not authorised yet.
      - 'rejected': The consent data have been rejected e.g. since no successful authorisation has taken place.
      - 'valid': The consent is accepted and valid for GET account data calls and others as specified in the consent object.
      - 'revokedByPsu': The consent has been revoked by the PSU towards the ASPSP.
      - 'expired': The consent expired.
      - 'terminatedByTpp': The corresponding TPP has terminated the consent by applying the DELETE method to the consent resource.
      - 'partiallyAuthorised': The consent is due to a multi-level authorisation, some but not all mandated authorisations have been performed yet.
    
    The ASPSP might add further codes. These codes then shall be contained in the ASPSP's documentation of the XS2A interface 
    and has to be added to this API definition as well.
    """  
    psu_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('psuMessage'), 'exclude': lambda f: f is None }})
    r"""Text to be displayed to the PSU."""  
    