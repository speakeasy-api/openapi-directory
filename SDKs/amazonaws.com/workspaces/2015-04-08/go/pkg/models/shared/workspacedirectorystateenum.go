// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WorkspaceDirectoryStateEnum string

const (
	WorkspaceDirectoryStateEnumRegistering   WorkspaceDirectoryStateEnum = "REGISTERING"
	WorkspaceDirectoryStateEnumRegistered    WorkspaceDirectoryStateEnum = "REGISTERED"
	WorkspaceDirectoryStateEnumDeregistering WorkspaceDirectoryStateEnum = "DEREGISTERING"
	WorkspaceDirectoryStateEnumDeregistered  WorkspaceDirectoryStateEnum = "DEREGISTERED"
	WorkspaceDirectoryStateEnumError         WorkspaceDirectoryStateEnum = "ERROR"
)

func (e *WorkspaceDirectoryStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "REGISTERING":
		fallthrough
	case "REGISTERED":
		fallthrough
	case "DEREGISTERING":
		fallthrough
	case "DEREGISTERED":
		fallthrough
	case "ERROR":
		*e = WorkspaceDirectoryStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkspaceDirectoryStateEnum: %s", s)
	}
}
