// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type UpdatePipelinePathParams struct {
	// The ID of the pipeline that you want to update.
	ID string `pathParam:"style=simple,explode=false,name=Id"`
}

type UpdatePipelineHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// UpdatePipelineRequestBodyContentConfig - The <code>PipelineOutputConfig</code> structure.
type UpdatePipelineRequestBodyContentConfig struct {
	Bucket       *string             `json:"Bucket,omitempty"`
	Permissions  []shared.Permission `json:"Permissions,omitempty"`
	StorageClass *string             `json:"StorageClass,omitempty"`
}

// UpdatePipelineRequestBodyNotifications - <p>The Amazon Simple Notification Service (Amazon SNS) topic or topics to notify in order to report job status.</p> <important> <p>To receive notifications, you must also subscribe to the new topic in the Amazon SNS console.</p> </important>
type UpdatePipelineRequestBodyNotifications struct {
	Completed   *string `json:"Completed,omitempty"`
	Error       *string `json:"Error,omitempty"`
	Progressing *string `json:"Progressing,omitempty"`
	Warning     *string `json:"Warning,omitempty"`
}

// UpdatePipelineRequestBodyThumbnailConfig - The <code>PipelineOutputConfig</code> structure.
type UpdatePipelineRequestBodyThumbnailConfig struct {
	Bucket       *string             `json:"Bucket,omitempty"`
	Permissions  []shared.Permission `json:"Permissions,omitempty"`
	StorageClass *string             `json:"StorageClass,omitempty"`
}

type UpdatePipelineRequestBody struct {
	// <p>The AWS Key Management Service (AWS KMS) key that you want to use with this pipeline.</p> <p>If you use either <code>s3</code> or <code>s3-aws-kms</code> as your <code>Encryption:Mode</code>, you don't need to provide a key with your job because a default key, known as an AWS-KMS key, is created for you automatically. You need to provide an AWS-KMS key only if you want to use a non-default AWS-KMS key, or if you are using an <code>Encryption:Mode</code> of <code>aes-cbc-pkcs7</code>, <code>aes-ctr</code>, or <code>aes-gcm</code>.</p>
	AwsKmsKeyArn *string `json:"AwsKmsKeyArn,omitempty"`
	// The <code>PipelineOutputConfig</code> structure.
	ContentConfig *UpdatePipelineRequestBodyContentConfig `json:"ContentConfig,omitempty"`
	// The Amazon S3 bucket in which you saved the media files that you want to transcode and the graphics that you want to use as watermarks.
	InputBucket *string `json:"InputBucket,omitempty"`
	// <p>The name of the pipeline. We recommend that the name be unique within the AWS account, but uniqueness is not enforced.</p> <p>Constraints: Maximum 40 characters</p>
	Name *string `json:"Name,omitempty"`
	// <p>The Amazon Simple Notification Service (Amazon SNS) topic or topics to notify in order to report job status.</p> <important> <p>To receive notifications, you must also subscribe to the new topic in the Amazon SNS console.</p> </important>
	Notifications *UpdatePipelineRequestBodyNotifications `json:"Notifications,omitempty"`
	// The IAM Amazon Resource Name (ARN) for the role that you want Elastic Transcoder to use to transcode jobs for this pipeline.
	Role *string `json:"Role,omitempty"`
	// The <code>PipelineOutputConfig</code> structure.
	ThumbnailConfig *UpdatePipelineRequestBodyThumbnailConfig `json:"ThumbnailConfig,omitempty"`
}

type UpdatePipelineRequest struct {
	PathParams UpdatePipelinePathParams
	Headers    UpdatePipelineHeaders
	Request    UpdatePipelineRequestBody `request:"mediaType=application/json"`
}

type UpdatePipelineResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// IncompatibleVersionException
	IncompatibleVersionException interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// Success
	UpdatePipelineResponse *shared.UpdatePipelineResponse
	// ValidationException
	ValidationException interface{}
}
