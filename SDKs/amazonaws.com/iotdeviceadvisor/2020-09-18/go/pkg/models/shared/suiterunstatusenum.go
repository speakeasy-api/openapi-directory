// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SuiteRunStatusEnum string

const (
	SuiteRunStatusEnumPass             SuiteRunStatusEnum = "PASS"
	SuiteRunStatusEnumFail             SuiteRunStatusEnum = "FAIL"
	SuiteRunStatusEnumCanceled         SuiteRunStatusEnum = "CANCELED"
	SuiteRunStatusEnumPending          SuiteRunStatusEnum = "PENDING"
	SuiteRunStatusEnumRunning          SuiteRunStatusEnum = "RUNNING"
	SuiteRunStatusEnumStopping         SuiteRunStatusEnum = "STOPPING"
	SuiteRunStatusEnumStopped          SuiteRunStatusEnum = "STOPPED"
	SuiteRunStatusEnumPassWithWarnings SuiteRunStatusEnum = "PASS_WITH_WARNINGS"
	SuiteRunStatusEnumError            SuiteRunStatusEnum = "ERROR"
)

func (e *SuiteRunStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PASS":
		fallthrough
	case "FAIL":
		fallthrough
	case "CANCELED":
		fallthrough
	case "PENDING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "STOPPING":
		fallthrough
	case "STOPPED":
		fallthrough
	case "PASS_WITH_WARNINGS":
		fallthrough
	case "ERROR":
		*e = SuiteRunStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SuiteRunStatusEnum: %s", s)
	}
}
