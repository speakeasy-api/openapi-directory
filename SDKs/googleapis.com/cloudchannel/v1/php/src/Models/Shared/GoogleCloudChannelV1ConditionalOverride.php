<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudChannelV1ConditionalOverride - Specifies the override to conditionally apply.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudChannelV1ConditionalOverride
{
    /**
     * A type that represents the various adjustments you can apply to a bill.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudChannelV1RepricingAdjustment $adjustment
     */
	#[\JMS\Serializer\Annotation\SerializedName('adjustment')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudChannelV1RepricingAdjustment')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudChannelV1RepricingAdjustment $adjustment = null;
    
    /**
     * Required. The RebillingBasis to use for the applied override. Shows the relative cost based on your repricing costs.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudChannelV1ConditionalOverrideRebillingBasisEnum $rebillingBasis
     */
	#[\JMS\Serializer\Annotation\SerializedName('rebillingBasis')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleCloudChannelV1ConditionalOverrideRebillingBasisEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudChannelV1ConditionalOverrideRebillingBasisEnum $rebillingBasis = null;
    
    /**
     * Represents the various repricing conditions you can use for a conditional override.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudChannelV1RepricingCondition $repricingCondition
     */
	#[\JMS\Serializer\Annotation\SerializedName('repricingCondition')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudChannelV1RepricingCondition')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudChannelV1RepricingCondition $repricingCondition = null;
    
	public function __construct()
	{
		$this->adjustment = null;
		$this->rebillingBasis = null;
		$this->repricingCondition = null;
	}
}
