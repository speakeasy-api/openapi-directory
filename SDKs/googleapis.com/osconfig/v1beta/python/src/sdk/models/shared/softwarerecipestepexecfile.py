"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SoftwareRecipeStepExecFile:
    r"""Executes an artifact or local file."""
    
    allowed_exit_codes: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowedExitCodes'), 'exclude': lambda f: f is None }})
    r"""Defaults to [0]. A list of possible return values that the program can return to indicate a success."""  
    args: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('args'), 'exclude': lambda f: f is None }})
    r"""Arguments to be passed to the provided executable."""  
    artifact_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('artifactId'), 'exclude': lambda f: f is None }})
    r"""The id of the relevant artifact in the recipe."""  
    local_path: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('localPath'), 'exclude': lambda f: f is None }})
    r"""The absolute path of the file on the local filesystem."""  
    