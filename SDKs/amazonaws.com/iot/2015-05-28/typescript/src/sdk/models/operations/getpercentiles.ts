/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class GetPercentilesRequestBody extends SpeakeasyBase {
  /**
   * The field to aggregate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aggregationField" })
  aggregationField?: string;

  /**
   * The name of the index to search.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "indexName" })
  indexName?: string;

  /**
   * The percentile groups returned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "percents" })
  percents?: number[];

  /**
   * The search query string.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queryString" })
  queryString: string;

  /**
   * The query version.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "queryVersion" })
  queryVersion?: string;
}

export class GetPercentilesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: GetPercentilesRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GetPercentilesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  getPercentilesResponse?: shared.GetPercentilesResponse;

  /**
   * IndexNotReadyException
   */
  @SpeakeasyMetadata()
  indexNotReadyException?: any;

  /**
   * InternalFailureException
   */
  @SpeakeasyMetadata()
  internalFailureException?: any;

  /**
   * InvalidAggregationException
   */
  @SpeakeasyMetadata()
  invalidAggregationException?: any;

  /**
   * InvalidQueryException
   */
  @SpeakeasyMetadata()
  invalidQueryException?: any;

  /**
   * InvalidRequestException
   */
  @SpeakeasyMetadata()
  invalidRequestException?: any;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ServiceUnavailableException
   */
  @SpeakeasyMetadata()
  serviceUnavailableException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * UnauthorizedException
   */
  @SpeakeasyMetadata()
  unauthorizedException?: any;
}
