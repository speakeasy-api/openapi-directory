"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from datetime import date
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class ProductOrderUboSecurity:
    
    user_key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'user_key' }})  
    

@dataclasses.dataclass
class ProductOrderUboRequestBody:
    r"""Parameters for the UBO order"""
    
    subject_id: str = dataclasses.field(metadata={'form': { 'field_name': 'subjectId' }})
    r"""KYC API Id (32 byte hexid) of the company you want to place the order for"""  
    callback_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'callbackUrl' }})
    r"""An optional callback URL to which updates about the order will be sent (for instance if credits are exceeded)"""  
    credits: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'credits' }})
    r"""Specify a maximum amount of credits which should be used. To disable use -1"""  
    include_docs: Optional[bool] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'includeDocs' }})
    r"""Include purchase of register document to ubo report"""  
    levels: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'levels' }})
    r"""Define a threshold for different levels of crawling"""  
    strategy: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'strategy' }})
    r"""Choose a matching strategy. Available options (FULL,LEVELS)"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProductOrderUboDefaultApplicationJSON:
    r"""Detailed information about the error"""
    
    code: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    tag: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tag') }})  
    fault: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fault'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProductOrderUbo200ApplicationJSON:
    r"""Product order details"""
    
    identity: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('identity') }})  
    option: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('option') }})  
    ordered: date = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ordered'), 'encoder': utils.dateisoformat(False), 'decoder': utils.datefromisoformat, 'mm_field': fields.DateTime(format='iso') }})  
    owner: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('owner') }})  
    price: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price') }})  
    sku: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sku') }})  
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    subject_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subjectId') }})  
    subject_value: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subjectValue') }})  
    

@dataclasses.dataclass
class ProductOrderUboResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    product_order_ubo_200_application_json_object: Optional[ProductOrderUbo200ApplicationJSON] = dataclasses.field(default=None)
    r"""Product order details"""  
    product_order_ubo_default_application_json_object: Optional[ProductOrderUboDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Detailed information about the error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    