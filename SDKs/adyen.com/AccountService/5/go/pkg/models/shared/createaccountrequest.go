// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateAccountRequestPayoutScheduleEnum - The payout schedule of the prospective account.
// >Permitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.
type CreateAccountRequestPayoutScheduleEnum string

const (
	CreateAccountRequestPayoutScheduleEnumBiweeklyOn1StAnd15ThAtMidnight CreateAccountRequestPayoutScheduleEnum = "BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT"
	CreateAccountRequestPayoutScheduleEnumDaily                          CreateAccountRequestPayoutScheduleEnum = "DAILY"
	CreateAccountRequestPayoutScheduleEnumDailyAu                        CreateAccountRequestPayoutScheduleEnum = "DAILY_AU"
	CreateAccountRequestPayoutScheduleEnumDailyEu                        CreateAccountRequestPayoutScheduleEnum = "DAILY_EU"
	CreateAccountRequestPayoutScheduleEnumDailySg                        CreateAccountRequestPayoutScheduleEnum = "DAILY_SG"
	CreateAccountRequestPayoutScheduleEnumDailyUs                        CreateAccountRequestPayoutScheduleEnum = "DAILY_US"
	CreateAccountRequestPayoutScheduleEnumHold                           CreateAccountRequestPayoutScheduleEnum = "HOLD"
	CreateAccountRequestPayoutScheduleEnumMonthly                        CreateAccountRequestPayoutScheduleEnum = "MONTHLY"
	CreateAccountRequestPayoutScheduleEnumWeekly                         CreateAccountRequestPayoutScheduleEnum = "WEEKLY"
	CreateAccountRequestPayoutScheduleEnumWeeklyMonToFriAu               CreateAccountRequestPayoutScheduleEnum = "WEEKLY_MON_TO_FRI_AU"
	CreateAccountRequestPayoutScheduleEnumWeeklyMonToFriEu               CreateAccountRequestPayoutScheduleEnum = "WEEKLY_MON_TO_FRI_EU"
	CreateAccountRequestPayoutScheduleEnumWeeklyMonToFriUs               CreateAccountRequestPayoutScheduleEnum = "WEEKLY_MON_TO_FRI_US"
	CreateAccountRequestPayoutScheduleEnumWeeklyOnTueFriMidnight         CreateAccountRequestPayoutScheduleEnum = "WEEKLY_ON_TUE_FRI_MIDNIGHT"
	CreateAccountRequestPayoutScheduleEnumWeeklySunToThuAu               CreateAccountRequestPayoutScheduleEnum = "WEEKLY_SUN_TO_THU_AU"
	CreateAccountRequestPayoutScheduleEnumWeeklySunToThuUs               CreateAccountRequestPayoutScheduleEnum = "WEEKLY_SUN_TO_THU_US"
)

func (e CreateAccountRequestPayoutScheduleEnum) ToPointer() *CreateAccountRequestPayoutScheduleEnum {
	return &e
}

func (e *CreateAccountRequestPayoutScheduleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT":
		fallthrough
	case "DAILY":
		fallthrough
	case "DAILY_AU":
		fallthrough
	case "DAILY_EU":
		fallthrough
	case "DAILY_SG":
		fallthrough
	case "DAILY_US":
		fallthrough
	case "HOLD":
		fallthrough
	case "MONTHLY":
		fallthrough
	case "WEEKLY":
		fallthrough
	case "WEEKLY_MON_TO_FRI_AU":
		fallthrough
	case "WEEKLY_MON_TO_FRI_EU":
		fallthrough
	case "WEEKLY_MON_TO_FRI_US":
		fallthrough
	case "WEEKLY_ON_TUE_FRI_MIDNIGHT":
		fallthrough
	case "WEEKLY_SUN_TO_THU_AU":
		fallthrough
	case "WEEKLY_SUN_TO_THU_US":
		*e = CreateAccountRequestPayoutScheduleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAccountRequestPayoutScheduleEnum: %v", v)
	}
}

// CreateAccountRequestPayoutSpeedEnum - Speed with which payouts for this account are processed. Permitted values: `STANDARD`, `SAME_DAY`.
type CreateAccountRequestPayoutSpeedEnum string

const (
	CreateAccountRequestPayoutSpeedEnumInstant  CreateAccountRequestPayoutSpeedEnum = "INSTANT"
	CreateAccountRequestPayoutSpeedEnumSameDay  CreateAccountRequestPayoutSpeedEnum = "SAME_DAY"
	CreateAccountRequestPayoutSpeedEnumStandard CreateAccountRequestPayoutSpeedEnum = "STANDARD"
)

func (e CreateAccountRequestPayoutSpeedEnum) ToPointer() *CreateAccountRequestPayoutSpeedEnum {
	return &e
}

func (e *CreateAccountRequestPayoutSpeedEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INSTANT":
		fallthrough
	case "SAME_DAY":
		fallthrough
	case "STANDARD":
		*e = CreateAccountRequestPayoutSpeedEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAccountRequestPayoutSpeedEnum: %v", v)
	}
}

type CreateAccountRequest struct {
	// The code of Account Holder under which to create the account.
	AccountHolderCode string `json:"accountHolderCode"`
	// The bankAccountUUID of the bank account held by the account holder to couple the account with. Scheduled payouts in currencies matching the currency of this bank account will be sent to this bank account. Payouts in different currencies will be sent to a matching bank account of the account holder.
	BankAccountUUID *string `json:"bankAccountUUID,omitempty"`
	// A description of the account, maximum 256 characters. You can use alphanumeric characters (A-Z, a-z, 0-9), white spaces, and underscores `_`.
	Description *string `json:"description,omitempty"`
	// A set of key and value pairs for general use by the merchant.
	// The keys do not have specific names and may be used for storing miscellaneous data as desired.
	// > Note that during an update of metadata, the omission of existing key-value pairs will result in the deletion of those key-value pairs.
	Metadata map[string]string `json:"metadata,omitempty"`
	// The payout method code held by the account holder to couple the account with. Scheduled card payouts will be sent using this payout method code.
	PayoutMethodCode *string `json:"payoutMethodCode,omitempty"`
	// The payout schedule of the prospective account.
	// >Permitted values: `DEFAULT`, `HOLD`, `DAILY`, `WEEKLY`, `MONTHLY`.
	PayoutSchedule *CreateAccountRequestPayoutScheduleEnum `json:"payoutSchedule,omitempty"`
	// The reason for the payout schedule choice.
	// >Required if the payoutSchedule is `HOLD`.
	PayoutScheduleReason *string `json:"payoutScheduleReason,omitempty"`
	// Speed with which payouts for this account are processed. Permitted values: `STANDARD`, `SAME_DAY`.
	PayoutSpeed *CreateAccountRequestPayoutSpeedEnum `json:"payoutSpeed,omitempty"`
}
