/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * The targeting information of this custom channel, if activated.
 */
export class CustomChannelTargetingInfo extends SpeakeasyBase {
  /**
   * The name used to describe this channel externally.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "adsAppearOn" })
  adsAppearOn?: string;

  /**
   * The external description of the channel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The locations in which ads appear. (Only valid for content and mobile content ads (deprecated)). Acceptable values for content ads are: TOP_LEFT, TOP_CENTER, TOP_RIGHT, MIDDLE_LEFT, MIDDLE_CENTER, MIDDLE_RIGHT, BOTTOM_LEFT, BOTTOM_CENTER, BOTTOM_RIGHT, MULTIPLE_LOCATIONS. Acceptable values for mobile content ads (deprecated) are: TOP, MIDDLE, BOTTOM, MULTIPLE_LOCATIONS.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  /**
   * The language of the sites ads will be displayed on.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "siteLanguage" })
  siteLanguage?: string;
}

/**
 * Successful response
 */
export class CustomChannel extends SpeakeasyBase {
  /**
   * Code of this custom channel, not necessarily unique across ad clients.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * Unique identifier of this custom channel. This should be considered an opaque identifier; it is not safe to rely on it being in any particular format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Kind of resource this is, in this case adsense#customChannel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Name of this custom channel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The targeting information of this custom channel, if activated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targetingInfo" })
  @Type(() => CustomChannelTargetingInfo)
  targetingInfo?: CustomChannelTargetingInfo;
}
