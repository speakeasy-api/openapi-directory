"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accountref as shared_accountref
from ..shared import profileref as shared_profileref
from ..shared import userref as shared_userref
from ..shared import webpropertyref as shared_webpropertyref
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EntityUserLinkEntity:
    r"""Entity for this link. It can be an account, a web property, or a view (profile)."""
    
    account_ref: Optional[shared_accountref.AccountRef] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountRef'), 'exclude': lambda f: f is None }})
    r"""JSON template for a linked account."""  
    profile_ref: Optional[shared_profileref.ProfileRef] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('profileRef'), 'exclude': lambda f: f is None }})
    r"""JSON template for a linked view (profile)."""  
    web_property_ref: Optional[shared_webpropertyref.WebPropertyRef] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webPropertyRef'), 'exclude': lambda f: f is None }})
    r"""JSON template for a web property reference."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EntityUserLinkPermissionsInput:
    r"""Permissions the user has for this entity."""
    
    local: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('local'), 'exclude': lambda f: f is None }})
    r"""Permissions that a user has been assigned at this very level. Does not include any implied or inherited permissions. Local permissions are modifiable."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EntityUserLinkInput:
    r"""JSON template for an Analytics Entity-User Link. Returns permissions that a user has for an entity."""
    
    entity: Optional[EntityUserLinkEntity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('entity'), 'exclude': lambda f: f is None }})
    r"""Entity for this link. It can be an account, a web property, or a view (profile)."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Entity user link ID"""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Resource type for entity user link."""  
    permissions: Optional[EntityUserLinkPermissionsInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permissions'), 'exclude': lambda f: f is None }})
    r"""Permissions the user has for this entity."""  
    self_link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selfLink'), 'exclude': lambda f: f is None }})
    r"""Self link for this resource."""  
    user_ref: Optional[shared_userref.UserRef] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userRef'), 'exclude': lambda f: f is None }})
    r"""JSON template for a user reference."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EntityUserLinkPermissions:
    r"""Permissions the user has for this entity."""
    
    effective: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('effective'), 'exclude': lambda f: f is None }})
    r"""Effective permissions represent all the permissions that a user has for this entity. These include any implied permissions (e.g., EDIT implies VIEW) or inherited permissions from the parent entity. Effective permissions are read-only."""  
    local: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('local'), 'exclude': lambda f: f is None }})
    r"""Permissions that a user has been assigned at this very level. Does not include any implied or inherited permissions. Local permissions are modifiable."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EntityUserLink:
    r"""JSON template for an Analytics Entity-User Link. Returns permissions that a user has for an entity."""
    
    entity: Optional[EntityUserLinkEntity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('entity'), 'exclude': lambda f: f is None }})
    r"""Entity for this link. It can be an account, a web property, or a view (profile)."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Entity user link ID"""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})
    r"""Resource type for entity user link."""  
    permissions: Optional[EntityUserLinkPermissions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permissions'), 'exclude': lambda f: f is None }})
    r"""Permissions the user has for this entity."""  
    self_link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selfLink'), 'exclude': lambda f: f is None }})
    r"""Self link for this resource."""  
    user_ref: Optional[shared_userref.UserRef] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userRef'), 'exclude': lambda f: f is None }})
    r"""JSON template for a user reference."""  
    