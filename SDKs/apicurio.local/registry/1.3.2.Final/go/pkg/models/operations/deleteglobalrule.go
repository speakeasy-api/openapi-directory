// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteGlobalRuleRuleEnum - The unique name/type of a rule.
type DeleteGlobalRuleRuleEnum string

const (
	DeleteGlobalRuleRuleEnumValidity      DeleteGlobalRuleRuleEnum = "VALIDITY"
	DeleteGlobalRuleRuleEnumCompatibility DeleteGlobalRuleRuleEnum = "COMPATIBILITY"
)

func (e DeleteGlobalRuleRuleEnum) ToPointer() *DeleteGlobalRuleRuleEnum {
	return &e
}

func (e *DeleteGlobalRuleRuleEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VALIDITY":
		fallthrough
	case "COMPATIBILITY":
		*e = DeleteGlobalRuleRuleEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteGlobalRuleRuleEnum: %v", v)
	}
}

type DeleteGlobalRuleRequest struct {
	// The unique name/type of a rule.
	Rule DeleteGlobalRuleRuleEnum `pathParam:"style=simple,explode=false,name=rule"`
}

type DeleteGlobalRuleResponse struct {
	ContentType string
	// Common response for all operations that can return a `404` error.
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
}
