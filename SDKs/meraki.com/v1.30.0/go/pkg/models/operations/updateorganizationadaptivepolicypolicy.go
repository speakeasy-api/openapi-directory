// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type UpdateOrganizationAdaptivePolicyPolicyPathParams struct {
	ID             string `pathParam:"style=simple,explode=false,name=id"`
	OrganizationID string `pathParam:"style=simple,explode=false,name=organizationId"`
}

type UpdateOrganizationAdaptivePolicyPolicyRequestBodyAcls struct {
	// The ID of the adaptive policy ACL
	ID *string `json:"id,omitempty"`
	// The name of the adaptive policy ACL
	Name *string `json:"name,omitempty"`
}

// UpdateOrganizationAdaptivePolicyPolicyRequestBodyDestinationGroup - The destination adaptive policy group (requires one unique attribute)
type UpdateOrganizationAdaptivePolicyPolicyRequestBodyDestinationGroup struct {
	// The ID of the destination adaptive policy group
	ID *string `json:"id,omitempty"`
	// The name of the destination adaptive policy group
	Name *string `json:"name,omitempty"`
	// The SGT of the destination adaptive policy group
	Sgt *int64 `json:"sgt,omitempty"`
}

// UpdateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum - The rule to apply if there is no matching ACL
type UpdateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum string

const (
	UpdateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnumAllow   UpdateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum = "allow"
	UpdateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnumDefault UpdateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum = "default"
	UpdateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnumDeny    UpdateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum = "deny"
)

func (e *UpdateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "allow":
		fallthrough
	case "default":
		fallthrough
	case "deny":
		*e = UpdateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum: %s", s)
	}
}

// UpdateOrganizationAdaptivePolicyPolicyRequestBodySourceGroup - The source adaptive policy group (requires one unique attribute)
type UpdateOrganizationAdaptivePolicyPolicyRequestBodySourceGroup struct {
	// The ID of the source adaptive policy group
	ID *string `json:"id,omitempty"`
	// The name of the source adaptive policy group
	Name *string `json:"name,omitempty"`
	// The SGT of the source adaptive policy group
	Sgt *int64 `json:"sgt,omitempty"`
}

type UpdateOrganizationAdaptivePolicyPolicyRequestBody struct {
	// An ordered array of adaptive policy ACLs (each requires one unique attribute) that apply to this policy
	//
	Acls []UpdateOrganizationAdaptivePolicyPolicyRequestBodyAcls `json:"acls,omitempty"`
	// The destination adaptive policy group (requires one unique attribute)
	//
	DestinationGroup *UpdateOrganizationAdaptivePolicyPolicyRequestBodyDestinationGroup `json:"destinationGroup,omitempty"`
	// The rule to apply if there is no matching ACL
	//
	LastEntryRule *UpdateOrganizationAdaptivePolicyPolicyRequestBodyLastEntryRuleEnum `json:"lastEntryRule,omitempty"`
	// The source adaptive policy group (requires one unique attribute)
	//
	SourceGroup *UpdateOrganizationAdaptivePolicyPolicyRequestBodySourceGroup `json:"sourceGroup,omitempty"`
}

type UpdateOrganizationAdaptivePolicyPolicyRequest struct {
	PathParams UpdateOrganizationAdaptivePolicyPolicyPathParams
	Request    *UpdateOrganizationAdaptivePolicyPolicyRequestBody `request:"mediaType=application/json"`
}

type UpdateOrganizationAdaptivePolicyPolicyResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateOrganizationAdaptivePolicyPolicy200ApplicationJSONObject map[string]interface{}
}
