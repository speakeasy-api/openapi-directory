<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Capabilities - Your application can use multiple products. This contains the configuration for each product. This replaces the application `type` from version 1 of the Application API.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Capabilities
{
    /**
     * Meetings related configuration
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MeetingsCapability $meetings
     */
	#[\JMS\Serializer\Annotation\SerializedName('meetings')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MeetingsCapability')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MeetingsCapability $meetings = null;
    
    /**
     * Messages / Dispatch related configuration
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MessagesCapability $messages
     */
	#[\JMS\Serializer\Annotation\SerializedName('messages')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MessagesCapability')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MessagesCapability $messages = null;
    
    /**
     * RTC / Conversation Service related configuration
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RtcCapability $rtc
     */
	#[\JMS\Serializer\Annotation\SerializedName('rtc')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RtcCapability')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RtcCapability $rtc = null;
    
    /**
     * Specify the `vbc` capability to enable zero-rated calls for VBC number programmability service applications. This is always an empty object.
     * 
     * @var ?array<string, mixed> $vbc
     */
	#[\JMS\Serializer\Annotation\SerializedName('vbc')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $vbc = null;
    
    /**
     * Two factor authentication related configuration
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VerifyCapability $verify
     */
	#[\JMS\Serializer\Annotation\SerializedName('verify')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VerifyCapability')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VerifyCapability $verify = null;
    
    /**
     * Voice related configuration
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VoiceCapability $voice
     */
	#[\JMS\Serializer\Annotation\SerializedName('voice')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\VoiceCapability')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VoiceCapability $voice = null;
    
	public function __construct()
	{
		$this->meetings = null;
		$this->messages = null;
		$this->rtc = null;
		$this->vbc = null;
		$this->verify = null;
		$this->voice = null;
	}
}
