/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetClientProfileByEmailRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  /**
   * Client's email address to be searched.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=email" })
  email: string;
}

export class GetClientProfileByEmail200ApplicationJSONAvailableAddresses extends SpeakeasyBase {
  /**
   * Address ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressId" })
  addressId?: string;

  /**
   * Address type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addressType" })
  addressType?: string;

  /**
   * City of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city?: string;

  /**
   * Complement to the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "complement" })
  complement?: string;

  /**
   * Country of the address. ISO three-letter code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * Array containing two floats with geocoordinates, first longitude, then latitude.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "geoCoordinates" })
  geoCoordinates?: number[];

  /**
   * Indicates whether address is disposable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isDisposable" })
  isDisposable?: boolean;

  /**
   * Neighborhood of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "neighborhood" })
  neighborhood?: string;

  /**
   * Number of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * Name of the receiver.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "receiverName" })
  receiverName?: string;

  /**
   * Reference that may help in the location of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference?: string;

  /**
   * State of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * Street of the address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "street" })
  street?: string;
}

/**
 * Customer profile information.
 */
export class GetClientProfileByEmail200ApplicationJSONUserProfile extends SpeakeasyBase {
  /**
   * Document. Used for corporate clients.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "corporateDocument" })
  corporateDocument?: string;

  /**
   * Name of the company. Used for corporate clients.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "corporateName" })
  corporateName?: string;

  /**
   * Telephone number. Used for corporate clients.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "corporatePhone" })
  corporatePhone?: string;

  /**
   * Customer class.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customerClass" })
  customerClass?: string;

  /**
   * Document.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "document" })
  document?: string;

  /**
   * Document type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "documentType" })
  documentType?: string;

  /**
   * Email address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * First name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstName" })
  firstName?: string;

  /**
   * Indicates whether client is corporate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isCorporate" })
  isCorporate?: boolean;

  /**
   * Last name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastName" })
  lastName?: string;

  /**
   * Telephone number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone" })
  phone?: string;

  /**
   * Profile complete when loading.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "profileCompleteOnLoading" })
  profileCompleteOnLoading?: string;

  /**
   * Profile error when loading.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "profileErrorOnLoading" })
  profileErrorOnLoading?: string;

  /**
   * State inscription. Used for corporate clients.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stateInscription" })
  stateInscription?: string;

  /**
   * Trade name. Used for corporate clients.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tradeName" })
  tradeName?: string;
}

/**
 * OK
 */
export class GetClientProfileByEmail200ApplicationJSON extends SpeakeasyBase {
  /**
   * Available accounts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "availableAccounts" })
  availableAccounts?: string[];

  /**
   * Information on each available address.
   */
  @SpeakeasyMetadata({
    elemType: GetClientProfileByEmail200ApplicationJSONAvailableAddresses,
  })
  @Expose({ name: "availableAddresses" })
  @Type(() => GetClientProfileByEmail200ApplicationJSONAvailableAddresses)
  availableAddresses?: GetClientProfileByEmail200ApplicationJSONAvailableAddresses[];

  /**
   * Indicates whether customer profile is complete.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isComplete" })
  isComplete?: boolean;

  /**
   * Profile provider.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "profileProvider" })
  profileProvider?: string;

  /**
   * Customer profile information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userProfile" })
  @Type(() => GetClientProfileByEmail200ApplicationJSONUserProfile)
  userProfile?: GetClientProfileByEmail200ApplicationJSONUserProfile;

  /**
   * Unique ID associated with the customer profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userProfileId" })
  userProfileId?: string;
}

export class GetClientProfileByEmailResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  getClientProfileByEmail200ApplicationJSONObject?: GetClientProfileByEmail200ApplicationJSON;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
