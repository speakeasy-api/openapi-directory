/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleMonitoringV3Range } from "./googlemonitoringv3range";
import { Expose, Type } from "class-transformer";

/**
 * A MetricRange is used when each window is good when the value x of a single TimeSeries satisfies range.min <= x <= range.max. The provided TimeSeries must have ValueType = INT64 or ValueType = DOUBLE and MetricKind = GAUGE.
 */
export class MetricRange extends SpeakeasyBase {
  /**
   * Range of numerical values within min and max.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "range" })
  @Type(() => GoogleMonitoringV3Range)
  range?: GoogleMonitoringV3Range;

  /**
   * A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying the TimeSeries to use for evaluating window quality.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeSeries" })
  timeSeries?: string;
}
