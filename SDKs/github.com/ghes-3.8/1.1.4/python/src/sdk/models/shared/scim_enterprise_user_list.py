"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import scim_enterprise_user_response as shared_scim_enterprise_user_response
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class ScimEnterpriseUserListSchemasEnum(str, Enum):
    URN_IETF_PARAMS_SCIM_API_MESSAGES_2_0_LIST_RESPONSE = 'urn:ietf:params:scim:api:messages:2.0:ListResponse'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ScimEnterpriseUserList:
    r"""Success, either users were found or not found"""
    
    items_per_page: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('itemsPerPage') }})
    r"""Number of objects per page"""  
    resources: list[shared_scim_enterprise_user_response.ScimEnterpriseUserResponse] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Resources') }})
    r"""Information about each provisioned account."""  
    schemas: list[ScimEnterpriseUserListSchemasEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schemas') }})
    r"""The URIs that are used to indicate the namespaces of the list SCIM schemas."""  
    start_index: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startIndex') }})
    r"""A starting index for the returned page"""  
    total_results: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalResults') }})
    r"""Number of results found"""  
    