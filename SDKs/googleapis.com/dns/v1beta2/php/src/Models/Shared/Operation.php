<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Operation - An operation represents a successful mutation performed on a Cloud DNS resource. Operations provide: - An audit log of server resource mutations. - A way to recover/retry API calls in the case where the response is never received by the caller. Use the caller specified client_operation_id.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Operation
{
	#[\JMS\Serializer\Annotation\SerializedName('dnsKeyContext')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OperationDnsKeyContext')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OperationDnsKeyContext $dnsKeyContext = null;
    
    /**
     * Unique identifier for the resource. This is the client_operation_id if the client specified it when the mutation was initiated, otherwise, it is generated by the server. The name must be 1-63 characters long and match the regular expression [-a-z0-9]? (output only)
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * The time that this operation was started by the server. This is in RFC3339 text format (output only).
     * 
     * @var ?string $startTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('startTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startTime = null;
    
    /**
     * Status of the operation. Can be one of the following: "PENDING" or "DONE" (output only). A status of "DONE" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\OperationStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\OperationStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OperationStatusEnum $status = null;
    
    /**
     * Type of the operation. Operations include insert, update, and delete (output only).
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     * User who requested the operation, for example: user@example.com. cloud-dns-system for operations automatically done by the system. (output only)
     * 
     * @var ?string $user
     */
	#[\JMS\Serializer\Annotation\SerializedName('user')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $user = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('zoneContext')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\OperationManagedZoneContext')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?OperationManagedZoneContext $zoneContext = null;
    
	public function __construct()
	{
		$this->dnsKeyContext = null;
		$this->id = null;
		$this->kind = null;
		$this->startTime = null;
		$this->status = null;
		$this->type = null;
		$this->user = null;
		$this->zoneContext = null;
	}
}
