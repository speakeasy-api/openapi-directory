/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsQueryParams {
    /**
     * display all transactions, including deleted ones
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=all")
    public Boolean all;
    public GetUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsQueryParams withAll(Boolean all) {
        this.all = all;
        return this;
    }
    
    /**
     * display only deleted transactions
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=deleted")
    public Boolean deleted;
    public GetUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsQueryParams withDeleted(Boolean deleted) {
        this.deleted = deleted;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=expand")
    public String expand;
    public GetUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsQueryParams withExpand(String expand) {
        this.expand = expand;
        return this;
    }
    
    /**
     * filter on given category id(s) (comma separated) or "null"
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=id_category")
    public Long idCategory;
    public GetUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsQueryParams withIdCategory(Long idCategory) {
        this.idCategory = idCategory;
        return this;
    }
    
    /**
     * filter on income or expenditures
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=income")
    public Boolean income;
    public GetUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsQueryParams withIncome(Boolean income) {
        this.income = income;
        return this;
    }
    
    /**
     * get only transactions updated after the specified datetime
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=last_update")
    public OffsetDateTime lastUpdate;
    public GetUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsQueryParams withLastUpdate(OffsetDateTime lastUpdate) {
        this.lastUpdate = lastUpdate;
        return this;
    }
    
    /**
     * limit number of results
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;
    public GetUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsQueryParams withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * maximum (inclusive) date
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=max_date")
    public LocalDate maxDate;
    public GetUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsQueryParams withMaxDate(LocalDate maxDate) {
        this.maxDate = maxDate;
        return this;
    }
    
    /**
     * maximum (inclusive) value
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=max_value")
    public Float maxValue;
    public GetUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsQueryParams withMaxValue(Float maxValue) {
        this.maxValue = maxValue;
        return this;
    }
    
    /**
     * minimal (inclusive) date
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=min_date")
    public LocalDate minDate;
    public GetUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsQueryParams withMinDate(LocalDate minDate) {
        this.minDate = minDate;
        return this;
    }
    
    /**
     * minimal (inclusive) value
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=min_value")
    public Float minValue;
    public GetUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsQueryParams withMinValue(Float minValue) {
        this.minValue = minValue;
        return this;
    }
    
    /**
     * offset of first result
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Long offset;
    public GetUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsQueryParams withOffset(Long offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * search in labels, dates, values and categories
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=search")
    public String search;
    public GetUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsQueryParams withSearch(String search) {
        this.search = search;
        return this;
    }
    
    /**
     * "XX|-XX" or "\u00b1XX"
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=value")
    public String value;
    public GetUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsQueryParams withValue(String value) {
        this.value = value;
        return this;
    }
    
    /**
     * filter transactions containing the given string
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=wording")
    public String wording;
    public GetUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsQueryParams withWording(String wording) {
        this.wording = wording;
        return this;
    }
    
}
