// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GitCreateRefRequestBody struct {
	Key *string `json:"key,omitempty"`
	// The name of the fully qualified reference (ie: `refs/heads/master`). If it doesn't start with 'refs' and have at least two slashes, it will be rejected.
	Ref string `json:"ref"`
	// The SHA1 value for this reference.
	Sha string `json:"sha"`
}

type GitCreateRefRequest struct {
	RequestBody GitCreateRefRequestBody `request:"mediaType=application/json"`
	// The account owner of the repository. The name is not case sensitive.
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// The name of the repository. The name is not case sensitive.
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

type GitCreateRefResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Response
	GitRef *shared.GitRef
	// Validation failed
	ValidationError *shared.ValidationError
}
