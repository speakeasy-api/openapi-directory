/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * FlightEndPoint - departure or arrival information
 */
public class FlightEndPoint {
    /**
     * local date and time in [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) YYYY-MM-ddThh:mm:ss format, e.g. 2017-02-10T20:40:00
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("at")
    public OffsetDateTime at;
    public FlightEndPoint withAt(OffsetDateTime at) {
        this.at = at;
        return this;
    }
    
    /**
     * [IATA airline codes](http://www.iata.org/publications/Pages/code-search.aspx)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iataCode")
    public String iataCode;
    public FlightEndPoint withIataCode(String iataCode) {
        this.iataCode = iataCode;
        return this;
    }
    
    /**
     * terminal name / number
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("terminal")
    public String terminal;
    public FlightEndPoint withTerminal(String terminal) {
        this.terminal = terminal;
        return this;
    }
    
}
