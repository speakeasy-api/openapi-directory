"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import individual as shared_individual
from ..shared import not_found as shared_not_found
from ..shared import unauthenticated as shared_unauthenticated
from typing import Optional


@dataclasses.dataclass
class GetIndividualsRequest:
    
    api_key: str = dataclasses.field(metadata={'header': { 'field_name': 'apiKey', 'style': 'simple', 'explode': False }})
    r"""The API key."""  
    date_of_birth: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'dateOfBirth', 'style': 'form', 'explode': True }})
    r"""The individual's date of birth, for example, `1979-01-13` (in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format)."""  
    place_of_birth: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'placeOfBirth', 'style': 'form', 'explode': True }})
    r"""The individual's place of birth, for example, `Tamworth`."""  
    

@dataclasses.dataclass
class GetIndividualsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    individuals: Optional[list[shared_individual.Individual]] = dataclasses.field(default=None)
    r"""A list of individuals was retrieved successfully"""  
    not_found: Optional[shared_not_found.NotFound] = dataclasses.field(default=None)
    r"""The specified resource was not found"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    unauthenticated: Optional[shared_unauthenticated.Unauthenticated] = dataclasses.field(default=None)
    r"""Request not authenticated due to missing, invalid, or expired token"""  
    