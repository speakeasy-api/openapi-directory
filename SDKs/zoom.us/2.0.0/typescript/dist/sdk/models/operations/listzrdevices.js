"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListZRDevicesResponse = exports.ListZRDevices200ApplicationJSON = exports.ListZRDevices200ApplicationJSONDevices = exports.ListZRDevices200ApplicationJSONDevicesStatusEnum = exports.ListZRDevices200ApplicationJSONDevicesDeviceTypeEnum = exports.ListZRDevices200ApplicationXML = exports.ListZRDevices200ApplicationXMLDevices = exports.ListZRDevices200ApplicationXMLDevicesStatusEnum = exports.ListZRDevices200ApplicationXMLDevicesDeviceTypeEnum = exports.ListZRDevicesRequest = exports.ListZRDevicesSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var ListZRDevicesSecurity = /** @class */ (function (_super) {
    __extends(ListZRDevicesSecurity, _super);
    function ListZRDevicesSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], ListZRDevicesSecurity.prototype, "oAuth", void 0);
    return ListZRDevicesSecurity;
}(utils_1.SpeakeasyBase));
exports.ListZRDevicesSecurity = ListZRDevicesSecurity;
var ListZRDevicesRequest = /** @class */ (function (_super) {
    __extends(ListZRDevicesRequest, _super);
    function ListZRDevicesRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=roomId",
        }),
        __metadata("design:type", String)
    ], ListZRDevicesRequest.prototype, "roomId", void 0);
    return ListZRDevicesRequest;
}(utils_1.SpeakeasyBase));
exports.ListZRDevicesRequest = ListZRDevicesRequest;
/**
 * Type of the device. The value of this field can be one of the following:<br>`Zoom Rooms Computer`,<br> `Controller`, `Scheduling Display`, `Zoom Rooms Control System`, `Companion Whiteboard`
 */
var ListZRDevices200ApplicationXMLDevicesDeviceTypeEnum;
(function (ListZRDevices200ApplicationXMLDevicesDeviceTypeEnum) {
    ListZRDevices200ApplicationXMLDevicesDeviceTypeEnum["ZoomRoomsComputer"] = "Zoom Rooms Computer";
    ListZRDevices200ApplicationXMLDevicesDeviceTypeEnum["Controller"] = "Controller";
    ListZRDevices200ApplicationXMLDevicesDeviceTypeEnum["SchedulingDisplay"] = "Scheduling Display";
    ListZRDevices200ApplicationXMLDevicesDeviceTypeEnum["ZoomRoomsControlSystem"] = "Zoom Rooms Control System";
    ListZRDevices200ApplicationXMLDevicesDeviceTypeEnum["CompanionWhiteboard"] = "Companion Whiteboard";
})(ListZRDevices200ApplicationXMLDevicesDeviceTypeEnum = exports.ListZRDevices200ApplicationXMLDevicesDeviceTypeEnum || (exports.ListZRDevices200ApplicationXMLDevicesDeviceTypeEnum = {}));
/**
 * Status of the device. The value can be either `Online` or `Offline`.
 */
var ListZRDevices200ApplicationXMLDevicesStatusEnum;
(function (ListZRDevices200ApplicationXMLDevicesStatusEnum) {
    ListZRDevices200ApplicationXMLDevicesStatusEnum["Online"] = "Online";
    ListZRDevices200ApplicationXMLDevicesStatusEnum["Offline"] = "Offline";
})(ListZRDevices200ApplicationXMLDevicesStatusEnum = exports.ListZRDevices200ApplicationXMLDevicesStatusEnum || (exports.ListZRDevices200ApplicationXMLDevicesStatusEnum = {}));
var ListZRDevices200ApplicationXMLDevices = /** @class */ (function (_super) {
    __extends(ListZRDevices200ApplicationXMLDevices, _super);
    function ListZRDevices200ApplicationXMLDevices() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ListZRDevices200ApplicationXMLDevices.prototype, "appVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ListZRDevices200ApplicationXMLDevices.prototype, "deviceSystem", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ListZRDevices200ApplicationXMLDevices.prototype, "deviceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ListZRDevices200ApplicationXMLDevices.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ListZRDevices200ApplicationXMLDevices.prototype, "roomName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ListZRDevices200ApplicationXMLDevices.prototype, "status", void 0);
    return ListZRDevices200ApplicationXMLDevices;
}(utils_1.SpeakeasyBase));
exports.ListZRDevices200ApplicationXMLDevices = ListZRDevices200ApplicationXMLDevices;
/**
 * **HTTP Status Code:** `200` **OK**
 *
 * @remarks
 * Devices listed successfully.
 */
var ListZRDevices200ApplicationXML = /** @class */ (function (_super) {
    __extends(ListZRDevices200ApplicationXML, _super);
    function ListZRDevices200ApplicationXML() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: ListZRDevices200ApplicationXMLDevices }),
        __metadata("design:type", Array)
    ], ListZRDevices200ApplicationXML.prototype, "devices", void 0);
    return ListZRDevices200ApplicationXML;
}(utils_1.SpeakeasyBase));
exports.ListZRDevices200ApplicationXML = ListZRDevices200ApplicationXML;
/**
 * Type of the device. The value of this field can be one of the following:<br>`Zoom Rooms Computer`,<br> `Controller`, `Scheduling Display`, `Zoom Rooms Control System`, `Companion Whiteboard`
 */
var ListZRDevices200ApplicationJSONDevicesDeviceTypeEnum;
(function (ListZRDevices200ApplicationJSONDevicesDeviceTypeEnum) {
    ListZRDevices200ApplicationJSONDevicesDeviceTypeEnum["ZoomRoomsComputer"] = "Zoom Rooms Computer";
    ListZRDevices200ApplicationJSONDevicesDeviceTypeEnum["Controller"] = "Controller";
    ListZRDevices200ApplicationJSONDevicesDeviceTypeEnum["SchedulingDisplay"] = "Scheduling Display";
    ListZRDevices200ApplicationJSONDevicesDeviceTypeEnum["ZoomRoomsControlSystem"] = "Zoom Rooms Control System";
    ListZRDevices200ApplicationJSONDevicesDeviceTypeEnum["CompanionWhiteboard"] = "Companion Whiteboard";
})(ListZRDevices200ApplicationJSONDevicesDeviceTypeEnum = exports.ListZRDevices200ApplicationJSONDevicesDeviceTypeEnum || (exports.ListZRDevices200ApplicationJSONDevicesDeviceTypeEnum = {}));
/**
 * Status of the device. The value can be either `Online` or `Offline`.
 */
var ListZRDevices200ApplicationJSONDevicesStatusEnum;
(function (ListZRDevices200ApplicationJSONDevicesStatusEnum) {
    ListZRDevices200ApplicationJSONDevicesStatusEnum["Online"] = "Online";
    ListZRDevices200ApplicationJSONDevicesStatusEnum["Offline"] = "Offline";
})(ListZRDevices200ApplicationJSONDevicesStatusEnum = exports.ListZRDevices200ApplicationJSONDevicesStatusEnum || (exports.ListZRDevices200ApplicationJSONDevicesStatusEnum = {}));
var ListZRDevices200ApplicationJSONDevices = /** @class */ (function (_super) {
    __extends(ListZRDevices200ApplicationJSONDevices, _super);
    function ListZRDevices200ApplicationJSONDevices() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "app_version" }),
        __metadata("design:type", String)
    ], ListZRDevices200ApplicationJSONDevices.prototype, "appVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "device_system" }),
        __metadata("design:type", String)
    ], ListZRDevices200ApplicationJSONDevices.prototype, "deviceSystem", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "device_type" }),
        __metadata("design:type", String)
    ], ListZRDevices200ApplicationJSONDevices.prototype, "deviceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], ListZRDevices200ApplicationJSONDevices.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "room_name" }),
        __metadata("design:type", String)
    ], ListZRDevices200ApplicationJSONDevices.prototype, "roomName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], ListZRDevices200ApplicationJSONDevices.prototype, "status", void 0);
    return ListZRDevices200ApplicationJSONDevices;
}(utils_1.SpeakeasyBase));
exports.ListZRDevices200ApplicationJSONDevices = ListZRDevices200ApplicationJSONDevices;
/**
 * **HTTP Status Code:** `200` **OK**
 *
 * @remarks
 * Devices listed successfully.
 */
var ListZRDevices200ApplicationJSON = /** @class */ (function (_super) {
    __extends(ListZRDevices200ApplicationJSON, _super);
    function ListZRDevices200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: ListZRDevices200ApplicationJSONDevices }),
        (0, class_transformer_1.Expose)({ name: "devices" }),
        (0, class_transformer_1.Type)(function () { return ListZRDevices200ApplicationJSONDevices; }),
        __metadata("design:type", Array)
    ], ListZRDevices200ApplicationJSON.prototype, "devices", void 0);
    return ListZRDevices200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.ListZRDevices200ApplicationJSON = ListZRDevices200ApplicationJSON;
var ListZRDevicesResponse = /** @class */ (function (_super) {
    __extends(ListZRDevicesResponse, _super);
    function ListZRDevicesResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], ListZRDevicesResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ListZRDevicesResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ListZRDevicesResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], ListZRDevicesResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ListZRDevices200ApplicationJSON)
    ], ListZRDevicesResponse.prototype, "listZRDevices200ApplicationJSONObject", void 0);
    return ListZRDevicesResponse;
}(utils_1.SpeakeasyBase));
exports.ListZRDevicesResponse = ListZRDevicesResponse;
