// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateChannelRequestBodyLatencyModeEnum - Channel latency mode. Use <code>NORMAL</code> to broadcast and deliver live video up to Full HD. Use <code>LOW</code> for near-real-time interaction with viewers. (Note: In the Amazon IVS console, <code>LOW</code> and <code>NORMAL</code> correspond to Ultra-low and Standard, respectively.)
type UpdateChannelRequestBodyLatencyModeEnum string

const (
	UpdateChannelRequestBodyLatencyModeEnumNormal UpdateChannelRequestBodyLatencyModeEnum = "NORMAL"
	UpdateChannelRequestBodyLatencyModeEnumLow    UpdateChannelRequestBodyLatencyModeEnum = "LOW"
)

func (e *UpdateChannelRequestBodyLatencyModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "NORMAL":
		fallthrough
	case "LOW":
		*e = UpdateChannelRequestBodyLatencyModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateChannelRequestBodyLatencyModeEnum: %s", s)
	}
}

// UpdateChannelRequestBodyTypeEnum - <p>Channel type, which determines the allowable resolution and bitrate. <i>If you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately</i>. Valid values:</p> <ul> <li> <p> <code>STANDARD</code>: Video is transcoded: multiple qualities are generated from the original input, to automatically give viewers the best experience for their devices and network conditions. Transcoding allows higher playback quality across a range of download speeds. Resolution can be up to 1080p and bitrate can be up to 8.5 Mbps. Audio is transcoded only for renditions 360p and below; above that, audio is passed through. This is the default.</p> </li> <li> <p> <code>BASIC</code>: Video is transmuxed: Amazon IVS delivers the original input to viewers. The viewer’s video-quality choice is limited to the original input. Resolution can be up to 1080p and bitrate can be up to 1.5 Mbps for 480p and up to 3.5 Mbps for resolutions between 480p and 1080p.</p> </li> </ul>
type UpdateChannelRequestBodyTypeEnum string

const (
	UpdateChannelRequestBodyTypeEnumBasic    UpdateChannelRequestBodyTypeEnum = "BASIC"
	UpdateChannelRequestBodyTypeEnumStandard UpdateChannelRequestBodyTypeEnum = "STANDARD"
)

func (e *UpdateChannelRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BASIC":
		fallthrough
	case "STANDARD":
		*e = UpdateChannelRequestBodyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateChannelRequestBodyTypeEnum: %s", s)
	}
}

type UpdateChannelRequestBody struct {
	// ARN of the channel to be updated.
	Arn string `json:"arn"`
	// Whether the channel is private (enabled for playback authorization).
	Authorized *bool `json:"authorized,omitempty"`
	// Channel latency mode. Use <code>NORMAL</code> to broadcast and deliver live video up to Full HD. Use <code>LOW</code> for near-real-time interaction with viewers. (Note: In the Amazon IVS console, <code>LOW</code> and <code>NORMAL</code> correspond to Ultra-low and Standard, respectively.)
	LatencyMode *UpdateChannelRequestBodyLatencyModeEnum `json:"latencyMode,omitempty"`
	// Channel name.
	Name *string `json:"name,omitempty"`
	// Recording-configuration ARN. If this is set to an empty string, recording is disabled. A value other than an empty string indicates that recording is enabled
	RecordingConfigurationArn *string `json:"recordingConfigurationArn,omitempty"`
	// <p>Channel type, which determines the allowable resolution and bitrate. <i>If you exceed the allowable resolution or bitrate, the stream probably will disconnect immediately</i>. Valid values:</p> <ul> <li> <p> <code>STANDARD</code>: Video is transcoded: multiple qualities are generated from the original input, to automatically give viewers the best experience for their devices and network conditions. Transcoding allows higher playback quality across a range of download speeds. Resolution can be up to 1080p and bitrate can be up to 8.5 Mbps. Audio is transcoded only for renditions 360p and below; above that, audio is passed through. This is the default.</p> </li> <li> <p> <code>BASIC</code>: Video is transmuxed: Amazon IVS delivers the original input to viewers. The viewer’s video-quality choice is limited to the original input. Resolution can be up to 1080p and bitrate can be up to 1.5 Mbps for 480p and up to 3.5 Mbps for resolutions between 480p and 1080p.</p> </li> </ul>
	Type *UpdateChannelRequestBodyTypeEnum `json:"type,omitempty"`
}

type UpdateChannelRequest struct {
	RequestBody       UpdateChannelRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateChannelResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// PendingVerification
	PendingVerification interface{}
	StatusCode          int
	RawResponse         *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	UpdateChannelResponse *shared.UpdateChannelResponse
	// ValidationException
	ValidationException interface{}
}
