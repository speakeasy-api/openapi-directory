// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TransferParametersSupportedPrivacyEnum string

const (
	TransferParametersSupportedPrivacyEnumContactPrivacyUnspecified TransferParametersSupportedPrivacyEnum = "CONTACT_PRIVACY_UNSPECIFIED"
	TransferParametersSupportedPrivacyEnumPublicContactData         TransferParametersSupportedPrivacyEnum = "PUBLIC_CONTACT_DATA"
	TransferParametersSupportedPrivacyEnumPrivateContactData        TransferParametersSupportedPrivacyEnum = "PRIVATE_CONTACT_DATA"
	TransferParametersSupportedPrivacyEnumRedactedContactData       TransferParametersSupportedPrivacyEnum = "REDACTED_CONTACT_DATA"
)

func (e TransferParametersSupportedPrivacyEnum) ToPointer() *TransferParametersSupportedPrivacyEnum {
	return &e
}

func (e *TransferParametersSupportedPrivacyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CONTACT_PRIVACY_UNSPECIFIED":
		fallthrough
	case "PUBLIC_CONTACT_DATA":
		fallthrough
	case "PRIVATE_CONTACT_DATA":
		fallthrough
	case "REDACTED_CONTACT_DATA":
		*e = TransferParametersSupportedPrivacyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TransferParametersSupportedPrivacyEnum: %v", v)
	}
}

// TransferParametersTransferLockStateEnum - Indicates whether the domain is protected by a transfer lock. For a transfer to succeed, this must show `UNLOCKED`. To unlock a domain, go to its current registrar.
type TransferParametersTransferLockStateEnum string

const (
	TransferParametersTransferLockStateEnumTransferLockStateUnspecified TransferParametersTransferLockStateEnum = "TRANSFER_LOCK_STATE_UNSPECIFIED"
	TransferParametersTransferLockStateEnumUnlocked                     TransferParametersTransferLockStateEnum = "UNLOCKED"
	TransferParametersTransferLockStateEnumLocked                       TransferParametersTransferLockStateEnum = "LOCKED"
)

func (e TransferParametersTransferLockStateEnum) ToPointer() *TransferParametersTransferLockStateEnum {
	return &e
}

func (e *TransferParametersTransferLockStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TRANSFER_LOCK_STATE_UNSPECIFIED":
		fallthrough
	case "UNLOCKED":
		fallthrough
	case "LOCKED":
		*e = TransferParametersTransferLockStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TransferParametersTransferLockStateEnum: %v", v)
	}
}

// TransferParameters - Parameters required to transfer a domain from another registrar.
type TransferParameters struct {
	// The registrar that currently manages the domain.
	CurrentRegistrar *string `json:"currentRegistrar,omitempty"`
	// The URL of the registrar that currently manages the domain.
	CurrentRegistrarURI *string `json:"currentRegistrarUri,omitempty"`
	// The domain name. Unicode domain names are expressed in Punycode format.
	DomainName *string `json:"domainName,omitempty"`
	// The name servers that currently store the configuration of the domain.
	NameServers []string `json:"nameServers,omitempty"`
	// Contact privacy options that the domain supports.
	SupportedPrivacy []TransferParametersSupportedPrivacyEnum `json:"supportedPrivacy,omitempty"`
	// Indicates whether the domain is protected by a transfer lock. For a transfer to succeed, this must show `UNLOCKED`. To unlock a domain, go to its current registrar.
	TransferLockState *TransferParametersTransferLockStateEnum `json:"transferLockState,omitempty"`
	// Represents an amount of money with its currency type.
	YearlyPrice *Money `json:"yearlyPrice,omitempty"`
}
