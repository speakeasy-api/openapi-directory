/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * TSP account ID.
 */
export enum UserTSPTSPIDEnum {
  One = "1",
  Two = "2",
}

export class UserTSPRequest extends SpeakeasyBase {
  /**
   * TSP account ID.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=tspId",
  })
  tspId: UserTSPTSPIDEnum;

  /**
   * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userId",
  })
  userId: string;
}

/**
 * Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number. <br> `media_link` - Media link phone number. This is used for PSTN integration instead of a paid bridge number.
 */
export enum UserTSPTSPAccountDialInNumbersTypeEnum {
  Toll = "toll",
  Tollfree = "tollfree",
  MediaLink = "media_link",
}

export class UserTSPTSPAccountDialInNumbers extends SpeakeasyBase {
  /**
   * Country code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * Country Label, if passed, will display in place of code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country_label" })
  countryLabel?: string;

  /**
   * Dial-in number: length is less than 16.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;

  /**
   * Dial-in number types:<br>`toll` - Toll number.<br>`tollfree` -Toll free number. <br> `media_link` - Media link phone number. This is used for PSTN integration instead of a paid bridge number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: UserTSPTSPAccountDialInNumbersTypeEnum;
}

/**
 * Telephony bridge
 */
export enum UserTSPTSPAccountTSPBridgeEnum {
  UsTspTb = "US_TSP_TB",
  EuTspTb = "EU_TSP_TB",
}

/**
 * TSP account of the user.
 */
export class UserTSPTSPAccount extends SpeakeasyBase {
  /**
   * Conference code: numeric value, length is less than 16.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "conference_code" })
  conferenceCode: string;

  /**
   * List of dial in numbers.
   */
  @SpeakeasyMetadata({ elemType: UserTSPTSPAccountDialInNumbers })
  @Expose({ name: "dial_in_numbers" })
  @Type(() => UserTSPTSPAccountDialInNumbers)
  dialInNumbers?: UserTSPTSPAccountDialInNumbers[];

  /**
   * The ID of the TSP account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Leader PIN: numeric value, length is less than 16.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "leader_pin" })
  leaderPin: string;

  /**
   * Telephony bridge
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tsp_bridge" })
  tspBridge?: UserTSPTSPAccountTSPBridgeEnum;
}

export class UserTSPResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * TSP account retrieved successfully.
   */
  @SpeakeasyMetadata()
  tspAccount?: UserTSPTSPAccount;
}
