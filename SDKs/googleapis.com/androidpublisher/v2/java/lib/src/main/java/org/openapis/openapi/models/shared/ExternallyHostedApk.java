/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ExternallyHostedApk - Defines an APK available for this application that is hosted externally and not uploaded to Google Play. This function is only available to enterprises who are using Google Play for Work, and whos application is restricted to the enterprise private channel
 */
public class ExternallyHostedApk {
    /**
     * The application label.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applicationLabel")
    public String applicationLabel;
    public ExternallyHostedApk withApplicationLabel(String applicationLabel) {
        this.applicationLabel = applicationLabel;
        return this;
    }
    
    /**
     * A certificate (or array of certificates if a certificate-chain is used) used to signed this APK, represented as a base64 encoded byte array.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("certificateBase64s")
    public String[] certificateBase64s;
    public ExternallyHostedApk withCertificateBase64s(String[] certificateBase64s) {
        this.certificateBase64s = certificateBase64s;
        return this;
    }
    
    /**
     * The URL at which the APK is hosted. This must be an https URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("externallyHostedUrl")
    public String externallyHostedUrl;
    public ExternallyHostedApk withExternallyHostedUrl(String externallyHostedUrl) {
        this.externallyHostedUrl = externallyHostedUrl;
        return this;
    }
    
    /**
     * The SHA1 checksum of this APK, represented as a base64 encoded byte array.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileSha1Base64")
    public String fileSha1Base64;
    public ExternallyHostedApk withFileSha1Base64(String fileSha1Base64) {
        this.fileSha1Base64 = fileSha1Base64;
        return this;
    }
    
    /**
     * The SHA256 checksum of this APK, represented as a base64 encoded byte array.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileSha256Base64")
    public String fileSha256Base64;
    public ExternallyHostedApk withFileSha256Base64(String fileSha256Base64) {
        this.fileSha256Base64 = fileSha256Base64;
        return this;
    }
    
    /**
     * The file size in bytes of this APK.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileSize")
    public String fileSize;
    public ExternallyHostedApk withFileSize(String fileSize) {
        this.fileSize = fileSize;
        return this;
    }
    
    /**
     * The icon image from the APK, as a base64 encoded byte array.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iconBase64")
    public String iconBase64;
    public ExternallyHostedApk withIconBase64(String iconBase64) {
        this.iconBase64 = iconBase64;
        return this;
    }
    
    /**
     * The maximum SDK supported by this APK (optional).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maximumSdk")
    public Integer maximumSDK;
    public ExternallyHostedApk withMaximumSDK(Integer maximumSDK) {
        this.maximumSDK = maximumSDK;
        return this;
    }
    
    /**
     * The minimum SDK targeted by this APK.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minimumSdk")
    public Integer minimumSDK;
    public ExternallyHostedApk withMinimumSDK(Integer minimumSDK) {
        this.minimumSDK = minimumSDK;
        return this;
    }
    
    /**
     * The native code environments supported by this APK (optional).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nativeCodes")
    public String[] nativeCodes;
    public ExternallyHostedApk withNativeCodes(String[] nativeCodes) {
        this.nativeCodes = nativeCodes;
        return this;
    }
    
    /**
     * The package name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packageName")
    public String packageName;
    public ExternallyHostedApk withPackageName(String packageName) {
        this.packageName = packageName;
        return this;
    }
    
    /**
     * The features required by this APK (optional).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usesFeatures")
    public String[] usesFeatures;
    public ExternallyHostedApk withUsesFeatures(String[] usesFeatures) {
        this.usesFeatures = usesFeatures;
        return this;
    }
    
    /**
     * The permissions requested by this APK.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usesPermissions")
    public ExternallyHostedApkUsesPermission[] usesPermissions;
    public ExternallyHostedApk withUsesPermissions(ExternallyHostedApkUsesPermission[] usesPermissions) {
        this.usesPermissions = usesPermissions;
        return this;
    }
    
    /**
     * The version code of this APK.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("versionCode")
    public Integer versionCode;
    public ExternallyHostedApk withVersionCode(Integer versionCode) {
        this.versionCode = versionCode;
        return this;
    }
    
    /**
     * The version name of this APK.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("versionName")
    public String versionName;
    public ExternallyHostedApk withVersionName(String versionName) {
        this.versionName = versionName;
        return this;
    }
    
}
