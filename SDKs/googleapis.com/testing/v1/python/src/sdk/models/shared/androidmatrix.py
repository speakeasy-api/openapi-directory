"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AndroidMatrix:
    r"""A set of Android device configuration permutations is defined by the the cross-product of the given axes. Internally, the given AndroidMatrix will be expanded into a set of AndroidDevices. Only supported permutations will be instantiated. Invalid permutations (e.g., incompatible models/versions) are ignored."""
    
    android_model_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('androidModelIds'), 'exclude': lambda f: f is None }})
    r"""Required. The ids of the set of Android device to be used. Use the TestEnvironmentDiscoveryService to get supported options."""  
    android_version_ids: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('androidVersionIds'), 'exclude': lambda f: f is None }})
    r"""Required. The ids of the set of Android OS version to be used. Use the TestEnvironmentDiscoveryService to get supported options."""  
    locales: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locales'), 'exclude': lambda f: f is None }})
    r"""Required. The set of locales the test device will enable for testing. Use the TestEnvironmentDiscoveryService to get supported options."""  
    orientations: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orientations'), 'exclude': lambda f: f is None }})
    r"""Required. The set of orientations to test with. Use the TestEnvironmentDiscoveryService to get supported options."""  
    