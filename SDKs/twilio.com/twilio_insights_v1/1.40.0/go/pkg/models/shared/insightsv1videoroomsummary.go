// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// InsightsV1VideoRoomSummaryStatusCallbackMethodEnum - HTTP method provided for status callback URL.
type InsightsV1VideoRoomSummaryStatusCallbackMethodEnum string

const (
	InsightsV1VideoRoomSummaryStatusCallbackMethodEnumHead   InsightsV1VideoRoomSummaryStatusCallbackMethodEnum = "HEAD"
	InsightsV1VideoRoomSummaryStatusCallbackMethodEnumGet    InsightsV1VideoRoomSummaryStatusCallbackMethodEnum = "GET"
	InsightsV1VideoRoomSummaryStatusCallbackMethodEnumPost   InsightsV1VideoRoomSummaryStatusCallbackMethodEnum = "POST"
	InsightsV1VideoRoomSummaryStatusCallbackMethodEnumPatch  InsightsV1VideoRoomSummaryStatusCallbackMethodEnum = "PATCH"
	InsightsV1VideoRoomSummaryStatusCallbackMethodEnumPut    InsightsV1VideoRoomSummaryStatusCallbackMethodEnum = "PUT"
	InsightsV1VideoRoomSummaryStatusCallbackMethodEnumDelete InsightsV1VideoRoomSummaryStatusCallbackMethodEnum = "DELETE"
)

func (e *InsightsV1VideoRoomSummaryStatusCallbackMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "HEAD":
		fallthrough
	case "GET":
		fallthrough
	case "POST":
		fallthrough
	case "PATCH":
		fallthrough
	case "PUT":
		fallthrough
	case "DELETE":
		*e = InsightsV1VideoRoomSummaryStatusCallbackMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InsightsV1VideoRoomSummaryStatusCallbackMethodEnum: %s", s)
	}
}

// InsightsV1VideoRoomSummary - OK
type InsightsV1VideoRoomSummary struct {
	// Account SID associated with this room.
	AccountSid *string `json:"account_sid,omitempty"`
	// Codecs used by participants in the room. Can be `VP8`, `H264`, or `VP9`.
	Codecs []VideoRoomSummaryEnumCodecEnum `json:"codecs,omitempty"`
	// Actual number of concurrent participants.
	ConcurrentParticipants *int64 `json:"concurrent_participants,omitempty"`
	// Creation time of the room.
	CreateTime    *time.Time                             `json:"create_time,omitempty"`
	CreatedMethod *VideoRoomSummaryEnumCreatedMethodEnum `json:"created_method,omitempty"`
	// Total room duration from create time to end time.
	DurationSec  *int64                                `json:"duration_sec,omitempty"`
	EdgeLocation *VideoRoomSummaryEnumEdgeLocationEnum `json:"edge_location,omitempty"`
	EndReason    *VideoRoomSummaryEnumEndReasonEnum    `json:"end_reason,omitempty"`
	// End time for the room.
	EndTime *time.Time `json:"end_time,omitempty"`
	// Room subresources.
	Links map[string]interface{} `json:"links,omitempty"`
	// Maximum number of participants allowed in the room at the same time allowed by the application settings.
	MaxConcurrentParticipants *int64 `json:"max_concurrent_participants,omitempty"`
	// Max number of total participants allowed by the application settings.
	MaxParticipants *int64                                   `json:"max_participants,omitempty"`
	MediaRegion     *VideoRoomSummaryEnumTwilioRealmEnum     `json:"media_region,omitempty"`
	ProcessingState *VideoRoomSummaryEnumProcessingStateEnum `json:"processing_state,omitempty"`
	// Boolean indicating if recording is enabled for the room.
	RecordingEnabled *bool `json:"recording_enabled,omitempty"`
	// Room friendly name.
	RoomName *string `json:"room_name,omitempty"`
	// Unique identifier for the room.
	RoomSid    *string                             `json:"room_sid,omitempty"`
	RoomStatus *VideoRoomSummaryEnumRoomStatusEnum `json:"room_status,omitempty"`
	RoomType   *VideoRoomSummaryEnumRoomTypeEnum   `json:"room_type,omitempty"`
	// Webhook provided for status callbacks.
	StatusCallback *string `json:"status_callback,omitempty"`
	// HTTP method provided for status callback URL.
	StatusCallbackMethod *InsightsV1VideoRoomSummaryStatusCallbackMethodEnum `json:"status_callback_method,omitempty"`
	// Combined amount of participant time in the room.
	TotalParticipantDurationSec *int64 `json:"total_participant_duration_sec,omitempty"`
	// Combined amount of recorded seconds for participants in the room.
	TotalRecordingDurationSec *int64 `json:"total_recording_duration_sec,omitempty"`
	// Unique number of participant identities.
	UniqueParticipantIdentities *int64 `json:"unique_participant_identities,omitempty"`
	// Number of participants. May include duplicate identities for participants who left and rejoined.
	UniqueParticipants *int64 `json:"unique_participants,omitempty"`
	// URL for the room resource.
	URL *string `json:"url,omitempty"`
}
