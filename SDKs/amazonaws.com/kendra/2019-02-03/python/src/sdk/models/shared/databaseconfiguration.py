"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import aclconfiguration as shared_aclconfiguration
from ..shared import columnconfiguration as shared_columnconfiguration
from ..shared import connectionconfiguration as shared_connectionconfiguration
from ..shared import databaseenginetype_enum as shared_databaseenginetype_enum
from ..shared import datasourcevpcconfiguration as shared_datasourcevpcconfiguration
from ..shared import sqlconfiguration as shared_sqlconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DatabaseConfiguration:
    r"""Provides the configuration information to connect to a index."""
    
    column_configuration: shared_columnconfiguration.ColumnConfiguration = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ColumnConfiguration') }})  
    connection_configuration: shared_connectionconfiguration.ConnectionConfiguration = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConnectionConfiguration') }})  
    database_engine_type: shared_databaseenginetype_enum.DatabaseEngineTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DatabaseEngineType') }})  
    acl_configuration: Optional[shared_aclconfiguration.ACLConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AclConfiguration'), 'exclude': lambda f: f is None }})  
    sql_configuration: Optional[shared_sqlconfiguration.SQLConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SqlConfiguration'), 'exclude': lambda f: f is None }})  
    vpc_configuration: Optional[shared_datasourcevpcconfiguration.DataSourceVpcConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('VpcConfiguration'), 'exclude': lambda f: f is None }})
    r"""Provides the configuration information to connect to an Amazon VPC."""  
    