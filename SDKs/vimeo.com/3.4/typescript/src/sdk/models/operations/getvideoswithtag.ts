/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * The sort direction of the results.
 */
export enum GetVideosWithTagDirectionEnum {
  Asc = "asc",
  Desc = "desc",
}

/**
 * The way to sort the results.
 */
export enum GetVideosWithTagSortEnum {
  CreatedTime = "created_time",
  Duration = "duration",
  Name = "name",
}

export class GetVideosWithTagRequest extends SpeakeasyBase {
  /**
   * The sort direction of the results.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=direction",
  })
  direction?: GetVideosWithTagDirectionEnum;

  /**
   * The page number of the results to show.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * The number of items to show on each page of results, up to a maximum of 100.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=per_page",
  })
  perPage?: number;

  /**
   * The way to sort the results.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=sort" })
  sort?: GetVideosWithTagSortEnum;

  /**
   * The tag word.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=word",
  })
  word: string;
}

export class GetVideosWithTagResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * No such tag exists.
   */
  @SpeakeasyMetadata()
  legacyError?: shared.LegacyError;

  /**
   * The videos were returned.
   */
  @SpeakeasyMetadata({ elemType: shared.Video })
  videos?: shared.Video[];
}
