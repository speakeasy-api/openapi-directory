"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MethodMap:
    r"""Deployment Manager will call these methods during the events of creation/deletion/update/get/setIamPolicy"""
    
    create: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('create'), 'exclude': lambda f: f is None }})
    r"""The action identifier for the create method to be used for this collection"""  
    delete: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('delete'), 'exclude': lambda f: f is None }})
    r"""The action identifier for the delete method to be used for this collection"""  
    get: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('get'), 'exclude': lambda f: f is None }})
    r"""The action identifier for the get method to be used for this collection"""  
    set_iam_policy: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('setIamPolicy'), 'exclude': lambda f: f is None }})
    r"""The action identifier for the setIamPolicy method to be used for this collection"""  
    update: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('update'), 'exclude': lambda f: f is None }})
    r"""The action identifier for the update method to be used for this collection"""  
    