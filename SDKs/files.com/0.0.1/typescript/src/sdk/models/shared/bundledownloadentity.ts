/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BundleRegistrationEntity } from "./bundleregistrationentity";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Download method (file or full_zip)
 */
export enum BundleDownloadEntityDownloadMethodEnum {
  File = "file",
  FullZip = "full_zip",
}

/**
 * List Bundle Downloads
 */
export class BundleDownloadEntity extends SpeakeasyBase {
  /**
   * List Bundle Registrations
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bundle_registration" })
  @Type(() => BundleRegistrationEntity)
  bundleRegistration?: BundleRegistrationEntity;

  /**
   * Download date/time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * Download method (file or full_zip)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "download_method" })
  downloadMethod?: BundleDownloadEntityDownloadMethodEnum;

  /**
   * Download path
   */
  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path?: string;
}
