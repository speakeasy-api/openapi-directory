// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// TestInvokeAuthorizerRequestBodyHTTPContext - Specifies the HTTP context to use for the test authorizer request.
type TestInvokeAuthorizerRequestBodyHTTPContext struct {
	Headers     map[string]string `json:"headers,omitempty"`
	QueryString *string           `json:"queryString,omitempty"`
}

// TestInvokeAuthorizerRequestBodyMqttContext - Specifies the MQTT context to use for the test authorizer request
type TestInvokeAuthorizerRequestBodyMqttContext struct {
	ClientID *string `json:"clientId,omitempty"`
	Password *string `json:"password,omitempty"`
	Username *string `json:"username,omitempty"`
}

// TestInvokeAuthorizerRequestBodyTLSContext - Specifies the TLS context to use for the test authorizer request.
type TestInvokeAuthorizerRequestBodyTLSContext struct {
	ServerName *string `json:"serverName,omitempty"`
}

type TestInvokeAuthorizerRequestBody struct {
	// Specifies the HTTP context to use for the test authorizer request.
	HTTPContext *TestInvokeAuthorizerRequestBodyHTTPContext `json:"httpContext,omitempty"`
	// Specifies the MQTT context to use for the test authorizer request
	MqttContext *TestInvokeAuthorizerRequestBodyMqttContext `json:"mqttContext,omitempty"`
	// Specifies the TLS context to use for the test authorizer request.
	TLSContext *TestInvokeAuthorizerRequestBodyTLSContext `json:"tlsContext,omitempty"`
	// The token returned by your custom authentication service.
	Token *string `json:"token,omitempty"`
	// The signature made with the token and your custom authentication service's private key. This value must be Base-64-encoded.
	TokenSignature *string `json:"tokenSignature,omitempty"`
}

type TestInvokeAuthorizerRequest struct {
	RequestBody       TestInvokeAuthorizerRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The custom authorizer name.
	AuthorizerName string `pathParam:"style=simple,explode=false,name=authorizerName"`
}

type TestInvokeAuthorizerResponse struct {
	ContentType string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// InvalidResponseException
	InvalidResponseException interface{}
	StatusCode               int
	RawResponse              *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// Success
	TestInvokeAuthorizerResponse *shared.TestInvokeAuthorizerResponse
	// ThrottlingException
	ThrottlingException interface{}
	// UnauthorizedException
	UnauthorizedException interface{}
}
