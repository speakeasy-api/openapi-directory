/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateMonitorRequestBody {
    /**
     * A unique, case-sensitive string of up to 64 ASCII characters that you specify to make an idempotent API request. You should not reuse the same client token for other API requests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ClientToken")
    public String clientToken;
    public UpdateMonitorRequestBody withClientToken(String clientToken) {
        this.clientToken = clientToken;
        return this;
    }
    
    /**
     * The maximum number of city-network combinations (that is, combinations of a city location and network, such as an ISP) to be monitored for your resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxCityNetworksToMonitor")
    public Long maxCityNetworksToMonitor;
    public UpdateMonitorRequestBody withMaxCityNetworksToMonitor(Long maxCityNetworksToMonitor) {
        this.maxCityNetworksToMonitor = maxCityNetworksToMonitor;
        return this;
    }
    
    /**
     * &lt;p&gt;The resources to include in a monitor, which you provide as a set of Amazon Resource Names (ARNs).&lt;/p&gt; &lt;p&gt;You can add a combination of Amazon Virtual Private Clouds (VPCs) and Amazon CloudFront distributions, or you can add Amazon WorkSpaces directories. You can't add all three types of resources.&lt;/p&gt; &lt;note&gt; &lt;p&gt;If you add only VPC resources, at least one VPC must have an Internet Gateway attached to it, to make sure that it has internet connectivity.&lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ResourcesToAdd")
    public String[] resourcesToAdd;
    public UpdateMonitorRequestBody withResourcesToAdd(String[] resourcesToAdd) {
        this.resourcesToAdd = resourcesToAdd;
        return this;
    }
    
    /**
     * The resources to remove from a monitor, which you provide as a set of Amazon Resource Names (ARNs).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ResourcesToRemove")
    public String[] resourcesToRemove;
    public UpdateMonitorRequestBody withResourcesToRemove(String[] resourcesToRemove) {
        this.resourcesToRemove = resourcesToRemove;
        return this;
    }
    
    /**
     * The status for a monitor. The accepted values for &lt;code&gt;Status&lt;/code&gt; with the &lt;code&gt;UpdateMonitor&lt;/code&gt; API call are the following: &lt;code&gt;ACTIVE&lt;/code&gt; and &lt;code&gt;INACTIVE&lt;/code&gt;. The following values are &lt;i&gt;not&lt;/i&gt; accepted: &lt;code&gt;PENDING&lt;/code&gt;, and &lt;code&gt;ERROR&lt;/code&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public UpdateMonitorRequestBodyStatusEnum status;
    public UpdateMonitorRequestBody withStatus(UpdateMonitorRequestBodyStatusEnum status) {
        this.status = status;
        return this;
    }
    
}
