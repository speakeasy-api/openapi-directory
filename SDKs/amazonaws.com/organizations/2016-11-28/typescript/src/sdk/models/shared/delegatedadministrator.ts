/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountJoinedMethodEnum } from "./accountjoinedmethodenum";
import { AccountStatusEnum } from "./accountstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Contains information about the delegated administrator.
 */
export class DelegatedAdministrator extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Arn" })
  arn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DelegationEnabledDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  delegationEnabledDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "JoinedMethod" })
  joinedMethod?: AccountJoinedMethodEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "JoinedTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  joinedTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: AccountStatusEnum;
}
