"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import zoneoffsettransition as shared_zoneoffsettransition
from ..shared import zoneoffsettransitionrule as shared_zoneoffsettransitionrule
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ZoneRules:
    r"""~"""
    
    fixed_offset: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixedOffset'), 'exclude': lambda f: f is None }})
    r"""~"""  
    transition_rules: Optional[list[shared_zoneoffsettransitionrule.ZoneOffsetTransitionRule]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transitionRules'), 'exclude': lambda f: f is None }})
    r"""~"""  
    transitions: Optional[list[shared_zoneoffsettransition.ZoneOffsetTransition]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transitions'), 'exclude': lambda f: f is None }})
    r"""~"""  
    