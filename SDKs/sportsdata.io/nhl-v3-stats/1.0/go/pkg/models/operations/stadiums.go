// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StadiumsFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type StadiumsFormatEnum string

const (
	StadiumsFormatEnumXML  StadiumsFormatEnum = "xml"
	StadiumsFormatEnumJSON StadiumsFormatEnum = "json"
)

func (e StadiumsFormatEnum) ToPointer() *StadiumsFormatEnum {
	return &e
}

func (e *StadiumsFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "xml":
		fallthrough
	case "json":
		*e = StadiumsFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StadiumsFormatEnum: %v", v)
	}
}

type StadiumsRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format StadiumsFormatEnum `pathParam:"style=simple,explode=false,name=format"`
}

type StadiumsResponse struct {
	ContentType string
	Stadiums    []shared.Stadium
	StatusCode  int
	RawResponse *http.Response
}
