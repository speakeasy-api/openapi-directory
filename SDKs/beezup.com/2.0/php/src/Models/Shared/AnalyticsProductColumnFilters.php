<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class AnalyticsProductColumnFilters
{
    /**
     * Describes a filter on a product's column.
     * 
     * The key is the column identifier of your catalog or a custom column.
     * 
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\AnalyticsProductColumnFilter> $additionalAnalyticsProductColumnFilters
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalAnalyticsProductColumnFilters')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\AnalyticsProductColumnFilter>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalAnalyticsProductColumnFilters = null;
    
    /**
     * The product sku filter
     * 
     * @var ?string $sku
     */
	#[\JMS\Serializer\Annotation\SerializedName('sku')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sku = null;
    
    /**
     * The product title filter
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
	public function __construct()
	{
		$this->additionalAnalyticsProductColumnFilters = null;
		$this->sku = null;
		$this->title = null;
	}
}
