// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LicenseImageVectorFormatEnum - (Deprecated) Image format to download
type LicenseImageVectorFormatEnum string

const (
	LicenseImageVectorFormatEnumEps LicenseImageVectorFormatEnum = "eps"
)

func (e LicenseImageVectorFormatEnum) ToPointer() *LicenseImageVectorFormatEnum {
	return &e
}

func (e *LicenseImageVectorFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "eps":
		*e = LicenseImageVectorFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LicenseImageVectorFormatEnum: %v", v)
	}
}

// LicenseImageVectorSizeEnum - Image size to download
type LicenseImageVectorSizeEnum string

const (
	LicenseImageVectorSizeEnumVector LicenseImageVectorSizeEnum = "vector"
)

func (e LicenseImageVectorSizeEnum) ToPointer() *LicenseImageVectorSizeEnum {
	return &e
}

func (e *LicenseImageVectorSizeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "vector":
		*e = LicenseImageVectorSizeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LicenseImageVectorSizeEnum: %v", v)
	}
}

// LicenseImageVector - Data required to license an image
type LicenseImageVector struct {
	// Cookie object
	AuthCookie *Cookie `json:"auth_cookie,omitempty"`
	// Set to true to acknowledge the editorial agreement
	EditorialAcknowledgement *bool `json:"editorial_acknowledgement,omitempty"`
	// (Deprecated) Image format to download
	Format *LicenseImageVectorFormatEnum `json:"format,omitempty"`
	// Image ID
	ImageID string `json:"image_id"`
	// Additional information for license requests for enterprise accounts and API subscriptions, 4 fields maximum; which fields are required is set by the account holder
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// For revenue-sharing transactions, the final cost to the end customer as a floating-point number in the transaction currency, such as 12.34
	Price *float64 `json:"price,omitempty"`
	// ID of the search that led to this licensing transaction
	SearchID *string `json:"search_id,omitempty"`
	// (Deprecated)
	ShowModal *bool `json:"show_modal,omitempty"`
	// Image size to download
	Size *LicenseImageVectorSizeEnum `json:"size,omitempty"`
	// ID of the subscription to use for the download.
	SubscriptionID *string `json:"subscription_id,omitempty"`
	// (Deprecated)
	VerificationCode *string `json:"verification_code,omitempty"`
}
