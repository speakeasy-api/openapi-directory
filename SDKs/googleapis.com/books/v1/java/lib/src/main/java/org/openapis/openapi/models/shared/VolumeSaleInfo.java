/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VolumeSaleInfo - Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries).
 */
public class VolumeSaleInfo {
    /**
     * URL to purchase this volume on the Google Books site. (In LITE projection)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buyLink")
    public String buyLink;

    public VolumeSaleInfo withBuyLink(String buyLink) {
        this.buyLink = buyLink;
        return this;
    }
    
    /**
     * The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country")
    public String country;

    public VolumeSaleInfo withCountry(String country) {
        this.country = country;
        return this;
    }
    
    /**
     * Whether or not this volume is an eBook (can be added to the My eBooks shelf).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isEbook")
    public Boolean isEbook;

    public VolumeSaleInfo withIsEbook(Boolean isEbook) {
        this.isEbook = isEbook;
        return this;
    }
    
    /**
     * Suggested retail price. (In LITE projection.)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("listPrice")
    public VolumeSaleInfoListPrice listPrice;

    public VolumeSaleInfo withListPrice(VolumeSaleInfoListPrice listPrice) {
        this.listPrice = listPrice;
        return this;
    }
    
    /**
     * Offers available for this volume (sales and rentals).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offers")
    public VolumeSaleInfoOffers[] offers;

    public VolumeSaleInfo withOffers(VolumeSaleInfoOffers[] offers) {
        this.offers = offers;
        return this;
    }
    
    /**
     * The date on which this book is available for sale.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onSaleDate")
    public String onSaleDate;

    public VolumeSaleInfo withOnSaleDate(String onSaleDate) {
        this.onSaleDate = onSaleDate;
        return this;
    }
    
    /**
     * The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retailPrice")
    public VolumeSaleInfoRetailPrice retailPrice;

    public VolumeSaleInfo withRetailPrice(VolumeSaleInfoRetailPrice retailPrice) {
        this.retailPrice = retailPrice;
        return this;
    }
    
    /**
     * Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or FOR_PREORDER.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("saleability")
    public String saleability;

    public VolumeSaleInfo withSaleability(String saleability) {
        this.saleability = saleability;
        return this;
    }
    
    public VolumeSaleInfo(){}
}
