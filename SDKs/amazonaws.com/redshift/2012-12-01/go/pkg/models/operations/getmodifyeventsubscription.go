// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETModifyEventSubscriptionActionEnum
type GETModifyEventSubscriptionActionEnum string

const (
	GETModifyEventSubscriptionActionEnumModifyEventSubscription GETModifyEventSubscriptionActionEnum = "ModifyEventSubscription"
)

func (e *GETModifyEventSubscriptionActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ModifyEventSubscription":
		*e = GETModifyEventSubscriptionActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyEventSubscriptionActionEnum: %s", s)
	}
}

// GETModifyEventSubscriptionVersionEnum
type GETModifyEventSubscriptionVersionEnum string

const (
	GETModifyEventSubscriptionVersionEnumTwoThousandAndTwelve1201 GETModifyEventSubscriptionVersionEnum = "2012-12-01"
)

func (e *GETModifyEventSubscriptionVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = GETModifyEventSubscriptionVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyEventSubscriptionVersionEnum: %s", s)
	}
}

type GETModifyEventSubscriptionRequest struct {
	Action GETModifyEventSubscriptionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A Boolean value indicating if the subscription is enabled. <code>true</code> indicates the subscription is enabled
	Enabled *bool `queryParam:"style=form,explode=true,name=Enabled"`
	// <p>Specifies the Amazon Redshift event categories to be published by the event notification subscription.</p> <p>Values: configuration, management, monitoring, security, pending</p>
	EventCategories []string `queryParam:"style=form,explode=true,name=EventCategories"`
	// <p>Specifies the Amazon Redshift event severity to be published by the event notification subscription.</p> <p>Values: ERROR, INFO</p>
	Severity *string `queryParam:"style=form,explode=true,name=Severity"`
	// The Amazon Resource Name (ARN) of the SNS topic to be used by the event notification subscription.
	SnsTopicArn *string `queryParam:"style=form,explode=true,name=SnsTopicArn"`
	// <p>A list of one or more identifiers of Amazon Redshift source objects. All of the objects must be of the same type as was specified in the source type parameter. The event subscription will return only events generated by the specified objects. If not specified, then events are returned for all objects within the source type specified.</p> <p>Example: my-cluster-1, my-cluster-2</p> <p>Example: my-snapshot-20131010</p>
	SourceIds []string `queryParam:"style=form,explode=true,name=SourceIds"`
	// <p>The type of source that will be generating the events. For example, if you want to be notified of events generated by a cluster, you would set this parameter to cluster. If this value is not specified, events are returned for all Amazon Redshift objects in your Amazon Web Services account. You must specify a source type in order to specify source IDs.</p> <p>Valid values: cluster, cluster-parameter-group, cluster-security-group, cluster-snapshot, and scheduled-action.</p>
	SourceType *string `queryParam:"style=form,explode=true,name=SourceType"`
	// The name of the modified Amazon Redshift event notification subscription.
	SubscriptionName  string                                `queryParam:"style=form,explode=true,name=SubscriptionName"`
	Version           GETModifyEventSubscriptionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyEventSubscriptionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
