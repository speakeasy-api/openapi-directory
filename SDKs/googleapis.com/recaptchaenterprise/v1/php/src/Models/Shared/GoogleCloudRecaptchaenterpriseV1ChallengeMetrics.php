<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudRecaptchaenterpriseV1ChallengeMetrics - Metrics related to challenges.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudRecaptchaenterpriseV1ChallengeMetrics
{
    /**
     * Count of submitted challenge solutions that were incorrect or otherwise deemed suspicious such that a subsequent challenge was triggered.
     * 
     * @var ?string $failedCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('failedCount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $failedCount = null;
    
    /**
     * Count of nocaptchas (successful verification without a challenge) issued.
     * 
     * @var ?string $nocaptchaCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('nocaptchaCount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nocaptchaCount = null;
    
    /**
     * Count of reCAPTCHA checkboxes or badges rendered. This is mostly equivalent to a count of pageloads for pages that include reCAPTCHA.
     * 
     * @var ?string $pageloadCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('pageloadCount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $pageloadCount = null;
    
    /**
     * Count of nocaptchas (successful verification without a challenge) plus submitted challenge solutions that were correct and resulted in verification.
     * 
     * @var ?string $passedCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('passedCount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $passedCount = null;
    
	public function __construct()
	{
		$this->failedCount = null;
		$this->nocaptchaCount = null;
		$this->pageloadCount = null;
		$this->passedCount = null;
	}
}
