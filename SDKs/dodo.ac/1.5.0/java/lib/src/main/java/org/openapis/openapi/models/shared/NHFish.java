/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NHFish - A JSON object describing the fish.
 */
public class NHFish {
    /**
     * An array of possible catchphrases the player says after catching the fish. Most critters have just one, but some can have multiple.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("catchphrases")
    public String[] catchphrases;
    public NHFish withCatchphrases(String[] catchphrases) {
        this.catchphrases = catchphrases;
        return this;
    }
    
    /**
     * Image of the fish. dodo.ac is Nookipedia's CDN server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("image_url")
    public String imageUrl;
    public NHFish withImageUrl(String imageUrl) {
        this.imageUrl = imageUrl;
        return this;
    }
    
    /**
     * Short descriptor of where the fish can be found.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;
    public NHFish withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * Name of the fish.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public NHFish withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * When you can catch the fish in the Northern hemisphere.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("north")
    public NHFishNorth north;
    public NHFish withNorth(NHFishNorth north) {
        this.north = north;
        return this;
    }
    
    /**
     * In-game fish number, marking position in the Critterpedia.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    public Long number;
    public NHFish withNumber(Long number) {
        this.number = number;
        return this;
    }
    
    /**
     * How rare the fish is. Note that this field is currently empty for most fish as we do not yet know how exactly fish rarities are calculated in the game code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rarity")
    public String rarity;
    public NHFish withRarity(String rarity) {
        this.rarity = rarity;
        return this;
    }
    
    /**
     * Render of the fish. dodo.ac is Nookipedia's CDN server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("render_url")
    public String renderUrl;
    public NHFish withRenderUrl(String renderUrl) {
        this.renderUrl = renderUrl;
        return this;
    }
    
    /**
     * The number of Bells the fish can be sold to C.J. for. This value is always 1.5x that of `sell_nook`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sell_cj")
    public Long sellCj;
    public NHFish withSellCj(Long sellCj) {
        this.sellCj = sellCj;
        return this;
    }
    
    /**
     * The number of Bells the fish can be sold to Nook's store for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sell_nook")
    public Long sellNook;
    public NHFish withSellNook(Long sellNook) {
        this.sellNook = sellNook;
        return this;
    }
    
    /**
     * The size of the fish's shadow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shadow_size")
    public NHFishShadowSizeEnum shadowSize;
    public NHFish withShadowSize(NHFishShadowSizeEnum shadowSize) {
        this.shadowSize = shadowSize;
        return this;
    }
    
    /**
     * When you can catch the fish in the Southern hemisphere.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("south")
    public NHFishSouth south;
    public NHFish withSouth(NHFishSouth south) {
        this.south = south;
        return this;
    }
    
    /**
     * The length of the tank when the fish is placed as a furniture item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tank_length")
    public Float tankLength;
    public NHFish withTankLength(Float tankLength) {
        this.tankLength = tankLength;
        return this;
    }
    
    /**
     * The width of the tank when the fish is placed as a furniture item.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tank_width")
    public Float tankWidth;
    public NHFish withTankWidth(Float tankWidth) {
        this.tankWidth = tankWidth;
        return this;
    }
    
    /**
     * The total number of fish the player has to have caught before this fish will start spawning.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total_catch")
    public Long totalCatch;
    public NHFish withTotalCatch(Long totalCatch) {
        this.totalCatch = totalCatch;
        return this;
    }
    
    /**
     * Link to the respective Nookipedia article.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public NHFish withUrl(String url) {
        this.url = url;
        return this;
    }
    
}
