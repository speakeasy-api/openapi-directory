// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type AssociateRepositoryHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// AssociateRepositoryRequestBodyKMSKeyDetails - <p>An object that contains:</p> <ul> <li> <p>The encryption option for a repository association. It is either owned by Amazon Web Services Key Management Service (KMS) (<code>AWS_OWNED_CMK</code>) or customer managed (<code>CUSTOMER_MANAGED_CMK</code>).</p> </li> <li> <p>The ID of the Amazon Web Services KMS key that is associated with a repository association.</p> </li> </ul>
type AssociateRepositoryRequestBodyKMSKeyDetails struct {
	EncryptionOption *shared.EncryptionOptionEnum `json:"EncryptionOption,omitempty"`
	KMSKeyID         *string                      `json:"KMSKeyId,omitempty"`
}

// AssociateRepositoryRequestBodyRepository - Information about an associated Amazon Web Services CodeCommit repository or an associated repository that is managed by Amazon Web Services CodeStar Connections (for example, Bitbucket). This <code>Repository</code> object is not used if your source code is in an associated GitHub repository.
type AssociateRepositoryRequestBodyRepository struct {
	Bitbucket              *shared.ThirdPartySourceRepository `json:"Bitbucket,omitempty"`
	CodeCommit             *shared.CodeCommitRepository       `json:"CodeCommit,omitempty"`
	GitHubEnterpriseServer *shared.ThirdPartySourceRepository `json:"GitHubEnterpriseServer,omitempty"`
	// Information about a repository in an S3 bucket.
	S3Bucket *shared.S3Repository `json:"S3Bucket,omitempty"`
}

type AssociateRepositoryRequestBody struct {
	// Amazon CodeGuru Reviewer uses this value to prevent the accidental creation of duplicate repository associations if there are failures and retries.
	ClientRequestToken *string `json:"ClientRequestToken,omitempty"`
	// <p>An object that contains:</p> <ul> <li> <p>The encryption option for a repository association. It is either owned by Amazon Web Services Key Management Service (KMS) (<code>AWS_OWNED_CMK</code>) or customer managed (<code>CUSTOMER_MANAGED_CMK</code>).</p> </li> <li> <p>The ID of the Amazon Web Services KMS key that is associated with a repository association.</p> </li> </ul>
	KMSKeyDetails *AssociateRepositoryRequestBodyKMSKeyDetails `json:"KMSKeyDetails,omitempty"`
	// Information about an associated Amazon Web Services CodeCommit repository or an associated repository that is managed by Amazon Web Services CodeStar Connections (for example, Bitbucket). This <code>Repository</code> object is not used if your source code is in an associated GitHub repository.
	Repository AssociateRepositoryRequestBodyRepository `json:"Repository"`
	// <p>An array of key-value pairs used to tag an associated repository. A tag is a custom attribute label with two parts:</p> <ul> <li> <p>A <i>tag key</i> (for example, <code>CostCenter</code>, <code>Environment</code>, <code>Project</code>, or <code>Secret</code>). Tag keys are case sensitive.</p> </li> <li> <p>An optional field known as a <i>tag value</i> (for example, <code>111122223333</code>, <code>Production</code>, or a team name). Omitting the tag value is the same as using an empty string. Like tag keys, tag values are case sensitive.</p> </li> </ul>
	Tags map[string]string `json:"Tags,omitempty"`
}

type AssociateRepositoryRequest struct {
	Headers AssociateRepositoryHeaders
	Request AssociateRepositoryRequestBody `request:"mediaType=application/json"`
}

type AssociateRepositoryResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// Success
	AssociateRepositoryResponse *shared.AssociateRepositoryResponse
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
