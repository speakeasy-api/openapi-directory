/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MigratedAccounts } from "./migratedaccounts";
import { MigratedStores } from "./migratedstores";
import { Expose, Transform, Type } from "class-transformer";

export class MigrationData extends SpeakeasyBase {
  /**
   * The unique identifier of the account holder in the balance platform.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accountHolderId" })
  accountHolderId?: string;

  /**
   * The unique identifier of the balance platfrom to which the account holder was migrated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "balancePlatform" })
  balancePlatform?: string;

  /**
   * Set to **true** if the account holder has been migrated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "migrated" })
  migrated?: boolean;

  /**
   * Contains the mapping of virtual account codes (classic integration) to the balance account codes (balance platform) associated with the migrated account holder.
   */
  @SpeakeasyMetadata({ elemType: MigratedAccounts })
  @Expose({ name: "migratedAccounts" })
  @Type(() => MigratedAccounts)
  migratedAccounts?: MigratedAccounts[];

  /**
   * Contains the mapping of business lines and stores associated with the migrated account holder.
   */
  @SpeakeasyMetadata({ elemType: MigratedStores })
  @Expose({ name: "migratedStores" })
  @Type(() => MigratedStores)
  migratedStores?: MigratedStores[];

  /**
   * The date when account holder was migrated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "migrationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  migrationDate?: Date;
}
