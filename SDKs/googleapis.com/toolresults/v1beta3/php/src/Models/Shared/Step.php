<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Step - A Step represents a single operation performed as part of Execution. A step can be used to represent the execution of a tool ( for example a test runner execution or an execution of a compiler). Steps can overlap (for instance two steps might have the same start time if some operations are done in parallel). Here is an example, let's consider that we have a continuous build is executing a test runner for each iteration. The workflow would look like: - user creates a Execution with id 1 - user creates an TestExecutionStep with id 100 for Execution 1 - user update TestExecutionStep with id 100 to add a raw xml log + the service parses the xml logs and returns a TestExecutionStep with updated TestResult(s). - user update the status of TestExecutionStep with id 100 to COMPLETE A Step can be updated until its state is set to COMPLETE at which points it becomes immutable. Next tag: 27
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Step
{
    /**
     * A Timestamp represents a point in time independent of any time zone or local calendar, encoded as a count of seconds and fractions of seconds at nanosecond resolution. The count is relative to an epoch at UTC midnight on January 1, 1970, in the proleptic Gregorian calendar which extends the Gregorian calendar backwards to year one. All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap second table is needed for interpretation, using a [24-hour linear smear](https://developers.google.com/time/smear). The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By restricting to that range, we ensure that we can convert to and from [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Timestamp $completionTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('completionTime')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Timestamp')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Timestamp $completionTime = null;
    
    /**
     * A Timestamp represents a point in time independent of any time zone or local calendar, encoded as a count of seconds and fractions of seconds at nanosecond resolution. The count is relative to an epoch at UTC midnight on January 1, 1970, in the proleptic Gregorian calendar which extends the Gregorian calendar backwards to year one. All minutes are 60 seconds long. Leap seconds are "smeared" so that no leap second table is needed for interpretation, using a [24-hour linear smear](https://developers.google.com/time/smear). The range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By restricting to that range, we ensure that we can convert to and from [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Timestamp $creationTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('creationTime')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Timestamp')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Timestamp $creationTime = null;
    
    /**
     * A description of this tool For example: mvn clean package -D skipTests=true - In response: present if set by create/update request - In create/update request: optional
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     *  A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like "day" or "month". It is related to Timestamp in that the difference between two Timestamp values is a Duration and it can be added or subtracted from a Timestamp. Range is approximately +-10,000 years.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Duration $deviceUsageDuration
     */
	#[\JMS\Serializer\Annotation\SerializedName('deviceUsageDuration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Duration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Duration $deviceUsageDuration = null;
    
    /**
     * If the execution containing this step has any dimension_definition set, then this field allows the child to specify the values of the dimensions. The keys must exactly match the dimension_definition of the execution. For example, if the execution has `dimension_definition = ['attempt', 'device']` then a step must define values for those dimensions, eg. `dimension_value = ['attempt': '1', 'device': 'Nexus 6']` If a step does not participate in one dimension of the matrix, the value for that dimension should be empty string. For example, if one of the tests is executed by a runner which does not support retries, the step could have `dimension_value = ['attempt': '', 'device': 'Nexus 6']` If the step does not participate in any dimensions of the matrix, it may leave dimension_value unset. A PRECONDITION_FAILED will be returned if any of the keys do not exist in the dimension_definition of the execution. A PRECONDITION_FAILED will be returned if another step in this execution already has the same name and dimension_value, but differs on other data fields, for example, step field is different. A PRECONDITION_FAILED will be returned if dimension_value is set, and there is a dimension_definition in the execution which is not specified as one of the keys. - In response: present if set by create - In create request: optional - In update request: never set
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\StepDimensionValueEntry> $dimensionValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('dimensionValue')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\StepDimensionValueEntry>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $dimensionValue = null;
    
    /**
     * Whether any of the outputs of this step are images whose thumbnails can be fetched with ListThumbnails. - In response: always set - In create/update request: never set
     * 
     * @var ?bool $hasImages
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasImages')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasImages = null;
    
    /**
     * Arbitrary user-supplied key/value pairs that are associated with the step. Users are responsible for managing the key namespace such that keys don't accidentally collide. An INVALID_ARGUMENT will be returned if the number of labels exceeds 100 or if the length of any of the keys or values exceeds 100 characters. - In response: always set - In create request: optional - In update request: optional; any new key/value pair will be added to the map, and any new value for an existing key will update that key's value
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\StepLabelsEntry> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\StepLabelsEntry>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * Details when multiple steps are run with the same configuration as a group.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MultiStep $multiStep
     */
	#[\JMS\Serializer\Annotation\SerializedName('multiStep')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MultiStep')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MultiStep $multiStep = null;
    
    /**
     * A short human-readable name to display in the UI. Maximum of 100 characters. For example: Clean build A PRECONDITION_FAILED will be returned upon creating a new step if it shares its name and dimension_value with an existing step. If two steps represent a similar action, but have different dimension values, they should share the same name. For instance, if the same set of tests is run on two different platforms, the two steps should have the same name. - In response: always set - In create request: always set - In update request: never set
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Interprets a result so that humans and machines can act on it.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Outcome $outcome
     */
	#[\JMS\Serializer\Annotation\SerializedName('outcome')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Outcome')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Outcome $outcome = null;
    
    /**
     *  A Duration represents a signed, fixed-length span of time represented as a count of seconds and fractions of seconds at nanosecond resolution. It is independent of any calendar and concepts like "day" or "month". It is related to Timestamp in that the difference between two Timestamp values is a Duration and it can be added or subtracted from a Timestamp. Range is approximately +-10,000 years.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Duration $runDuration
     */
	#[\JMS\Serializer\Annotation\SerializedName('runDuration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Duration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Duration $runDuration = null;
    
    /**
     * The initial state is IN_PROGRESS. The only legal state transitions are * IN_PROGRESS -> COMPLETE A PRECONDITION_FAILED will be returned if an invalid transition is requested. It is valid to create Step with a state set to COMPLETE. The state can only be set to COMPLETE once. A PRECONDITION_FAILED will be returned if the state is set to COMPLETE multiple times. - In response: always set - In create/update request: optional
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StepStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\StepStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StepStateEnum $state = null;
    
    /**
     * A unique identifier within a Execution for this Step. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response: always set - In create/update request: never set
     * 
     * @var ?string $stepId
     */
	#[\JMS\Serializer\Annotation\SerializedName('stepId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stepId = null;
    
    /**
     * A step that represents running tests. It accepts ant-junit xml files which will be parsed into structured test results by the service. Xml file paths are updated in order to append more files, however they can't be deleted. Users can also add test results manually by using the test_result field.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TestExecutionStep $testExecutionStep
     */
	#[\JMS\Serializer\Annotation\SerializedName('testExecutionStep')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TestExecutionStep')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TestExecutionStep $testExecutionStep = null;
    
    /**
     * Generic tool step to be used for binaries we do not explicitly support. For example: running cp to copy artifacts from one location to another.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ToolExecutionStep $toolExecutionStep
     */
	#[\JMS\Serializer\Annotation\SerializedName('toolExecutionStep')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ToolExecutionStep')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ToolExecutionStep $toolExecutionStep = null;
    
	public function __construct()
	{
		$this->completionTime = null;
		$this->creationTime = null;
		$this->description = null;
		$this->deviceUsageDuration = null;
		$this->dimensionValue = null;
		$this->hasImages = null;
		$this->labels = null;
		$this->multiStep = null;
		$this->name = null;
		$this->outcome = null;
		$this->runDuration = null;
		$this->state = null;
		$this->stepId = null;
		$this->testExecutionStep = null;
		$this->toolExecutionStep = null;
	}
}
