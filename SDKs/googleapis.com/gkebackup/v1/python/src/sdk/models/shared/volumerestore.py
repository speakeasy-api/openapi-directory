"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import namespacedname as shared_namespacedname
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class VolumeRestoreStateEnum(str, Enum):
    r"""Output only. The current state of this VolumeRestore."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    CREATING = 'CREATING'
    RESTORING = 'RESTORING'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'
    DELETING = 'DELETING'

class VolumeRestoreVolumeTypeEnum(str, Enum):
    r"""Output only. The type of volume provisioned"""
    VOLUME_TYPE_UNSPECIFIED = 'VOLUME_TYPE_UNSPECIFIED'
    GCE_PERSISTENT_DISK = 'GCE_PERSISTENT_DISK'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VolumeRestore:
    r"""Represents the operation of restoring a volume from a VolumeBackup. Next id: 13"""
    
    complete_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('completeTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The timestamp when the associated underlying volume restoration completed."""  
    create_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('createTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The timestamp when this VolumeRestore resource was created."""  
    etag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('etag'), 'exclude': lambda f: f is None }})
    r"""Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a volume restore from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform volume restore updates in order to avoid race conditions."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. Full name of the VolumeRestore resource. Format: `projects/*/locations/*/restorePlans/*/restores/*/volumeRestores/*`"""  
    state: Optional[VolumeRestoreStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Output only. The current state of this VolumeRestore."""  
    state_message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stateMessage'), 'exclude': lambda f: f is None }})
    r"""Output only. A human readable message explaining why the VolumeRestore is in its current state."""  
    target_pvc: Optional[shared_namespacedname.NamespacedName] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('targetPvc'), 'exclude': lambda f: f is None }})
    r"""A reference to a namespaced resource in Kubernetes."""  
    uid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uid'), 'exclude': lambda f: f is None }})
    r"""Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Output only. The timestamp when this VolumeRestore resource was last updated."""  
    volume_backup: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('volumeBackup'), 'exclude': lambda f: f is None }})
    r"""Output only. The full name of the VolumeBackup from which the volume will be restored. Format: `projects/*/locations/*/backupPlans/*/backups/*/volumeBackups/*`."""  
    volume_handle: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('volumeHandle'), 'exclude': lambda f: f is None }})
    r"""Output only. A storage system-specific opaque handler to the underlying volume created for the target PVC from the volume backup."""  
    volume_type: Optional[VolumeRestoreVolumeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('volumeType'), 'exclude': lambda f: f is None }})
    r"""Output only. The type of volume provisioned"""  
    