// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateEntityPathParams struct {
	// The ID of the workspace that contains the entity.
	WorkspaceID string `pathParam:"style=simple,explode=false,name=workspaceId"`
}

type CreateEntityHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateEntityRequestBody struct {
	// An object that maps strings to the components in the entity. Each string in the mapping must be unique to this object.
	Components map[string]shared.ComponentRequest `json:"components,omitempty"`
	// The description of the entity.
	Description *string `json:"description,omitempty"`
	// The ID of the entity.
	EntityID *string `json:"entityId,omitempty"`
	// The name of the entity.
	EntityName string `json:"entityName"`
	// The ID of the entity's parent entity.
	ParentEntityID *string `json:"parentEntityId,omitempty"`
	// Metadata that you can use to manage the entity.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateEntityRequest struct {
	PathParams CreateEntityPathParams
	Headers    CreateEntityHeaders
	Request    CreateEntityRequestBody `request:"mediaType=application/json"`
}

type CreateEntityResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateEntityResponse *shared.CreateEntityResponse
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
