"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import priceamount as shared_priceamount
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ReturnPolicyOnlineRestockingFee:
    r"""The restocking fee. This can either be a fixed fee or a micro percent."""
    
    fixed_fee: Optional[shared_priceamount.PriceAmount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fixedFee'), 'exclude': lambda f: f is None }})
    r"""The price represented as a number and currency."""  
    micro_percent: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('microPercent'), 'exclude': lambda f: f is None }})
    r"""Percent of total price in micros. 15,000,000 means 15% of the total price would be charged."""  
    