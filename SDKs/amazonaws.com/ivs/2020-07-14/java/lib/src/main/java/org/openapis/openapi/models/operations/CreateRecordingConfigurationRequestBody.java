/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateRecordingConfigurationRequestBody {
    /**
     * A complex type that describes a location where recorded videos will be stored. Each member represents a type of destination configuration. For recording, you define one and only one type of destination configuration.
     */
    @JsonProperty("destinationConfiguration")
    public CreateRecordingConfigurationRequestBodyDestinationConfiguration destinationConfiguration;

    public CreateRecordingConfigurationRequestBody withDestinationConfiguration(CreateRecordingConfigurationRequestBodyDestinationConfiguration destinationConfiguration) {
        this.destinationConfiguration = destinationConfiguration;
        return this;
    }
    
    /**
     * Recording-configuration name. The value does not need to be unique.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public CreateRecordingConfigurationRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * If a broadcast disconnects and then reconnects within the specified interval, the multiple streams will be considered a single broadcast and merged together. Default: 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recordingReconnectWindowSeconds")
    public Long recordingReconnectWindowSeconds;

    public CreateRecordingConfigurationRequestBody withRecordingReconnectWindowSeconds(Long recordingReconnectWindowSeconds) {
        this.recordingReconnectWindowSeconds = recordingReconnectWindowSeconds;
        return this;
    }
    
    /**
     * Array of 1-50 maps, each of the form &lt;code&gt;string:string (key:value)&lt;/code&gt;. See &lt;a href="https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html"&gt;Tagging Amazon Web Services Resources&lt;/a&gt; for more information, including restrictions that apply to tags and "Tag naming limits and requirements"; Amazon IVS has no service-specific constraints beyond what is documented there.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public CreateRecordingConfigurationRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * An object representing a configuration of thumbnails for recorded video.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thumbnailConfiguration")
    public CreateRecordingConfigurationRequestBodyThumbnailConfiguration thumbnailConfiguration;

    public CreateRecordingConfigurationRequestBody withThumbnailConfiguration(CreateRecordingConfigurationRequestBodyThumbnailConfiguration thumbnailConfiguration) {
        this.thumbnailConfiguration = thumbnailConfiguration;
        return this;
    }
    
    public CreateRecordingConfigurationRequestBody(@JsonProperty("destinationConfiguration") CreateRecordingConfigurationRequestBodyDestinationConfiguration destinationConfiguration) {
        this.destinationConfiguration = destinationConfiguration;
  }
}
