"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OptCapProgramInPriceRequestBody:
    r"""Request fields"""
    
    subsidy_enrolled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subsidyEnrolled'), 'exclude': lambda f: f is None }})
    r"""A Boolean parameter that allows all sellers to completely enroll in or out of the Competitive Price Adjustment program"""  
    subsidy_preference: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subsidyPreference'), 'exclude': lambda f: f is None }})
    r"""A Boolean parameter that determines whether offer level subsidy setting override seller level subsidy setting"""  
    

@dataclasses.dataclass
class OptCapProgramInPriceRequest:
    
    request_body: OptCapProgramInPriceRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Request fields"""  
    wm_qos_correlation_id: str = dataclasses.field(metadata={'header': { 'field_name': 'WM_QOS.CORRELATION_ID', 'style': 'simple', 'explode': False }})
    r"""A unique ID which identifies each API call and used to track and debug issues; use a random generated GUID for this ID"""  
    wm_sec_access_token: str = dataclasses.field(metadata={'header': { 'field_name': 'WM_SEC.ACCESS_TOKEN', 'style': 'simple', 'explode': False }})
    r"""The access token retrieved in the Token API call"""  
    wm_svc_name: str = dataclasses.field(metadata={'header': { 'field_name': 'WM_SVC.NAME', 'style': 'simple', 'explode': False }})
    r"""Walmart Service Name"""  
    wm_consumer_channel_type: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'WM_CONSUMER.CHANNEL.TYPE', 'style': 'simple', 'explode': False }})
    r"""A unique ID to track the consumer request by channel. Use the Consumer Channel Type received during onboarding"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OptCapProgramInPrice200ApplicationJSONStatusInfo:
    
    subsidy_enrolled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subsidyEnrolled'), 'exclude': lambda f: f is None }})
    r"""A Boolean parameter that allows all sellers to completely enroll in or out of the Competitive Price Adjustment program"""  
    subsidy_preference: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subsidyPreference'), 'exclude': lambda f: f is None }})
    r"""A Boolean parameter that determines whether offer level subsidy setting override seller level subsidy setting"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OptCapProgramInPrice200ApplicationJSON:
    r"""Successful Operation"""
    
    mart_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('martId'), 'exclude': lambda f: f is None }})
    r"""A unique ID that a user or seller uses for a marketplace."""  
    status_info: Optional[OptCapProgramInPrice200ApplicationJSONStatusInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('statusInfo'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class OptCapProgramInPriceResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    opt_cap_program_in_price_200_application_json_object: Optional[OptCapProgramInPrice200ApplicationJSON] = dataclasses.field(default=None)
    r"""Successful Operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    