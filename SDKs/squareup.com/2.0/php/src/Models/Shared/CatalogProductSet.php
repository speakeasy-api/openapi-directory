<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CatalogProductSet - Represents a collection of catalog objects for the purpose of applying a
 * 
 * `PricingRule`. Including a catalog object will include all of its subtypes.
 * For example, including a category in a product set will include all of its
 * items and associated item variations in the product set. Including an item in
 * a product set will also include its item variations.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CatalogProductSet
{
    /**
     * If set to `true`, the product set will include every item in the catalog.
     * 
     * Only one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.
     * 
     * @var ?bool $allProducts
     */
	#[\JMS\Serializer\Annotation\SerializedName('all_products')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allProducts = null;
    
    /**
     * User-defined name for the product set. For example, "Clearance Items"
     * 
     * or "Winter Sale Items".
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Unique IDs for any `CatalogObject` included in this product set.
     * 
     * All objects in this set must be included in an order for a pricing rule to apply.
     * 
     * Only one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.
     * 
     * Max: 500 catalog object IDs.
     * 
     * @var ?array<string> $productIdsAll
     */
	#[\JMS\Serializer\Annotation\SerializedName('product_ids_all')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $productIdsAll = null;
    
    /**
     *  Unique IDs for any `CatalogObject` included in this product set. Any
     * 
     * number of these catalog objects can be in an order for a pricing rule to apply.
     * 
     * This can be used with `product_ids_all` in a parent `CatalogProductSet` to
     * match groups of products for a bulk discount, such as a discount for an
     * entree and side combo.
     * 
     * Only one of `product_ids_all`, `product_ids_any`, or `all_products` can be set.
     * 
     * Max: 500 catalog object IDs.
     * 
     * @var ?array<string> $productIdsAny
     */
	#[\JMS\Serializer\Annotation\SerializedName('product_ids_any')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $productIdsAny = null;
    
    /**
     * If set, there must be exactly this many items from `products_any` or `products_all`
     * 
     * in the cart for the discount to apply.
     * 
     * Cannot be combined with either `quantity_min` or `quantity_max`.
     * 
     * @var ?int $quantityExact
     */
	#[\JMS\Serializer\Annotation\SerializedName('quantity_exact')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $quantityExact = null;
    
    /**
     * If set, the pricing rule will apply to a maximum of this many items from
     * 
     * `products_any` or `products_all`.
     * 
     * @var ?int $quantityMax
     */
	#[\JMS\Serializer\Annotation\SerializedName('quantity_max')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $quantityMax = null;
    
    /**
     * If set, there must be at least this many items from `products_any` or `products_all`
     * 
     * in a cart for the discount to apply. See `quantity_exact`. Defaults to 0 if
     * `quantity_exact`, `quantity_min` and `quantity_max` are all unspecified.
     * 
     * @var ?int $quantityMin
     */
	#[\JMS\Serializer\Annotation\SerializedName('quantity_min')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $quantityMin = null;
    
	public function __construct()
	{
		$this->allProducts = null;
		$this->name = null;
		$this->productIdsAll = null;
		$this->productIdsAny = null;
		$this->quantityExact = null;
		$this->quantityMax = null;
		$this->quantityMin = null;
	}
}
