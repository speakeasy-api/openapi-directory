// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DimensionFilterOperatorEnum - How to match the dimension to the expression. The default is REGEXP.
type DimensionFilterOperatorEnum string

const (
	DimensionFilterOperatorEnumOperatorUnspecified DimensionFilterOperatorEnum = "OPERATOR_UNSPECIFIED"
	DimensionFilterOperatorEnumRegexp              DimensionFilterOperatorEnum = "REGEXP"
	DimensionFilterOperatorEnumBeginsWith          DimensionFilterOperatorEnum = "BEGINS_WITH"
	DimensionFilterOperatorEnumEndsWith            DimensionFilterOperatorEnum = "ENDS_WITH"
	DimensionFilterOperatorEnumPartial             DimensionFilterOperatorEnum = "PARTIAL"
	DimensionFilterOperatorEnumExact               DimensionFilterOperatorEnum = "EXACT"
	DimensionFilterOperatorEnumNumericEqual        DimensionFilterOperatorEnum = "NUMERIC_EQUAL"
	DimensionFilterOperatorEnumNumericGreaterThan  DimensionFilterOperatorEnum = "NUMERIC_GREATER_THAN"
	DimensionFilterOperatorEnumNumericLessThan     DimensionFilterOperatorEnum = "NUMERIC_LESS_THAN"
	DimensionFilterOperatorEnumInList              DimensionFilterOperatorEnum = "IN_LIST"
)

func (e *DimensionFilterOperatorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OPERATOR_UNSPECIFIED":
		fallthrough
	case "REGEXP":
		fallthrough
	case "BEGINS_WITH":
		fallthrough
	case "ENDS_WITH":
		fallthrough
	case "PARTIAL":
		fallthrough
	case "EXACT":
		fallthrough
	case "NUMERIC_EQUAL":
		fallthrough
	case "NUMERIC_GREATER_THAN":
		fallthrough
	case "NUMERIC_LESS_THAN":
		fallthrough
	case "IN_LIST":
		*e = DimensionFilterOperatorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DimensionFilterOperatorEnum: %s", s)
	}
}

// DimensionFilter - Dimension filter specifies the filtering options on a dimension.
type DimensionFilter struct {
	// Should the match be case sensitive? Default is false.
	CaseSensitive *bool `json:"caseSensitive,omitempty"`
	// The dimension to filter on. A DimensionFilter must contain a dimension.
	DimensionName *string `json:"dimensionName,omitempty"`
	// Strings or regular expression to match against. Only the first value of the list is used for comparison unless the operator is `IN_LIST`. If `IN_LIST` operator, then the entire list is used to filter the dimensions as explained in the description of the `IN_LIST` operator.
	Expressions []string `json:"expressions,omitempty"`
	// Logical `NOT` operator. If this boolean is set to true, then the matching dimension values will be excluded in the report. The default is false.
	Not *bool `json:"not,omitempty"`
	// How to match the dimension to the expression. The default is REGEXP.
	Operator *DimensionFilterOperatorEnum `json:"operator,omitempty"`
}
