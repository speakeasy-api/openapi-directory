/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * String type of the media element.
 */
export enum MediaTypeEnum {
  Youtube = "youtube",
  Cdphotothread = "cdphotothread",
  Imgur = "imgur",
  FacebookProfile = "facebook-profile",
  YoutubeChannel = "youtube-channel",
  TwitterProfile = "twitter-profile",
  GithubProfile = "github-profile",
  InstagramProfile = "instagram-profile",
  PeriscopeProfile = "periscope-profile",
  Grabcad = "grabcad",
  InstagramImage = "instagram-image",
  ExternalLink = "external-link",
  Avatar = "avatar",
}

/**
 * The `Media` object contains a reference for most any media associated with a team or event on TBA.
 */
export class Media extends SpeakeasyBase {
  /**
   * If required, a JSON dict of additional media information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "details" })
  details?: Record<string, any>;

  /**
   * Direct URL to the media.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direct_url" })
  directUrl?: string;

  /**
   * The key used to identify this media on the media site.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "foreign_key" })
  foreignKey: string;

  /**
   * True if the media is of high quality.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "preferred" })
  preferred?: boolean;

  /**
   * String type of the media element.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: MediaTypeEnum;

  /**
   * The URL that leads to the full web page for the media, if one exists.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "view_url" })
  viewUrl?: string;
}
