/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { GoogleCloudRecaptchaenterpriseV1ScoreDistribution } from "./googlecloudrecaptchaenterprisev1scoredistribution";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Metrics related to scoring.
 */
export class GoogleCloudRecaptchaenterpriseV1ScoreMetrics extends SpeakeasyBase {
  /**
   * Action-based metrics. The map key is the action name which specified by the site owners at time of the "execute" client-side call.
   */
  @SpeakeasyMetadata({
    elemType: GoogleCloudRecaptchaenterpriseV1ScoreDistribution,
  })
  @Expose({ name: "actionMetrics" })
  @Transform(
    ({ value }) => {
      const obj: Record<
        string,
        GoogleCloudRecaptchaenterpriseV1ScoreDistribution
      > = {};
      for (const key in value) {
        obj[key] = objectToClass(
          value[key],
          GoogleCloudRecaptchaenterpriseV1ScoreDistribution
        );
      }
      return obj;
    },
    { toClassOnly: true }
  )
  actionMetrics?: Record<
    string,
    GoogleCloudRecaptchaenterpriseV1ScoreDistribution
  >;

  /**
   * Score distribution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "overallMetrics" })
  @Type(() => GoogleCloudRecaptchaenterpriseV1ScoreDistribution)
  overallMetrics?: GoogleCloudRecaptchaenterpriseV1ScoreDistribution;
}
