/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class GsiBesthourRequest extends SpeakeasyBase {
  /**
   * How many hours in row do you need the device turned on?
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=hours" })
  hours?: number;

  /**
   * Any valid Stromkonto account (address).
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=key" })
  key?: string;

  /**
   * Number of hours to check (default 24 hours from now).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=timeframe",
  })
  timeframe?: number;

  /**
   * Zipcode (Postleitzahl) of a city in Germany.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=zip" })
  zip?: string;
}

export class GsiBesthourResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  gsiBesthour200ApplicationJSONBoolean?: boolean;
}
