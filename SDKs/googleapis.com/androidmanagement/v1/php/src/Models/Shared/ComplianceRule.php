<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ComplianceRule - A rule declaring which mitigating actions to take when a device is not compliant with its policy. For every rule, there is always an implicit mitigating action to set policy_compliant to false for the Device resource, and display a message on the device indicating that the device is not compliant with its policy. Other mitigating actions may optionally be taken as well, depending on the field values in the rule.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ComplianceRule
{
    /**
     * A compliance rule condition which is satisfied if the Android Framework API level on the device doesn't meet a minimum requirement. There can only be one rule with this type of condition per policy.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ApiLevelCondition $apiLevelCondition
     */
	#[\JMS\Serializer\Annotation\SerializedName('apiLevelCondition')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ApiLevelCondition')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ApiLevelCondition $apiLevelCondition = null;
    
    /**
     * If set to true, the rule includes a mitigating action to disable apps so that the device is effectively disabled, but app data is preserved. If the device is running an app in locked task mode, the app will be closed and a UI showing the reason for non-compliance will be displayed.
     * 
     * @var ?bool $disableApps
     */
	#[\JMS\Serializer\Annotation\SerializedName('disableApps')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $disableApps = null;
    
    /**
     * A compliance rule condition which is satisfied if there exists any matching NonComplianceDetail for the device. A NonComplianceDetail matches a NonComplianceDetailCondition if all the fields which are set within the NonComplianceDetailCondition match the corresponding NonComplianceDetail fields.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NonComplianceDetailCondition $nonComplianceDetailCondition
     */
	#[\JMS\Serializer\Annotation\SerializedName('nonComplianceDetailCondition')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NonComplianceDetailCondition')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NonComplianceDetailCondition $nonComplianceDetailCondition = null;
    
    /**
     * If set, the rule includes a mitigating action to disable apps specified in the list, but app data is preserved.
     * 
     * @var ?array<string> $packageNamesToDisable
     */
	#[\JMS\Serializer\Annotation\SerializedName('packageNamesToDisable')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $packageNamesToDisable = null;
    
	public function __construct()
	{
		$this->apiLevelCondition = null;
		$this->disableApps = null;
		$this->nonComplianceDetailCondition = null;
		$this->packageNamesToDisable = null;
	}
}
