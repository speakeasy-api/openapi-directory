// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// TagAPIGetTopTagsEntryTypeEnum - Tag usage entry type. Optional - if not specified, all entry types are included.
type TagAPIGetTopTagsEntryTypeEnum string

const (
	TagAPIGetTopTagsEntryTypeEnumUndefined          TagAPIGetTopTagsEntryTypeEnum = "Undefined"
	TagAPIGetTopTagsEntryTypeEnumAlbum              TagAPIGetTopTagsEntryTypeEnum = "Album"
	TagAPIGetTopTagsEntryTypeEnumArtist             TagAPIGetTopTagsEntryTypeEnum = "Artist"
	TagAPIGetTopTagsEntryTypeEnumDiscussionTopic    TagAPIGetTopTagsEntryTypeEnum = "DiscussionTopic"
	TagAPIGetTopTagsEntryTypeEnumPv                 TagAPIGetTopTagsEntryTypeEnum = "PV"
	TagAPIGetTopTagsEntryTypeEnumReleaseEvent       TagAPIGetTopTagsEntryTypeEnum = "ReleaseEvent"
	TagAPIGetTopTagsEntryTypeEnumReleaseEventSeries TagAPIGetTopTagsEntryTypeEnum = "ReleaseEventSeries"
	TagAPIGetTopTagsEntryTypeEnumSong               TagAPIGetTopTagsEntryTypeEnum = "Song"
	TagAPIGetTopTagsEntryTypeEnumSongList           TagAPIGetTopTagsEntryTypeEnum = "SongList"
	TagAPIGetTopTagsEntryTypeEnumTag                TagAPIGetTopTagsEntryTypeEnum = "Tag"
	TagAPIGetTopTagsEntryTypeEnumUser               TagAPIGetTopTagsEntryTypeEnum = "User"
	TagAPIGetTopTagsEntryTypeEnumVenue              TagAPIGetTopTagsEntryTypeEnum = "Venue"
)

func (e *TagAPIGetTopTagsEntryTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Undefined":
		fallthrough
	case "Album":
		fallthrough
	case "Artist":
		fallthrough
	case "DiscussionTopic":
		fallthrough
	case "PV":
		fallthrough
	case "ReleaseEvent":
		fallthrough
	case "ReleaseEventSeries":
		fallthrough
	case "Song":
		fallthrough
	case "SongList":
		fallthrough
	case "Tag":
		fallthrough
	case "User":
		fallthrough
	case "Venue":
		*e = TagAPIGetTopTagsEntryTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TagAPIGetTopTagsEntryTypeEnum: %s", s)
	}
}

// TagAPIGetTopTagsLangEnum - Content language preference (optional).
type TagAPIGetTopTagsLangEnum string

const (
	TagAPIGetTopTagsLangEnumDefault  TagAPIGetTopTagsLangEnum = "Default"
	TagAPIGetTopTagsLangEnumJapanese TagAPIGetTopTagsLangEnum = "Japanese"
	TagAPIGetTopTagsLangEnumRomaji   TagAPIGetTopTagsLangEnum = "Romaji"
	TagAPIGetTopTagsLangEnumEnglish  TagAPIGetTopTagsLangEnum = "English"
)

func (e *TagAPIGetTopTagsLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = TagAPIGetTopTagsLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TagAPIGetTopTagsLangEnum: %s", s)
	}
}

type TagAPIGetTopTagsQueryParams struct {
	// Tag category, for example "Genres". Optional - if not specified, no filtering is done.
	CategoryName *string `queryParam:"style=form,explode=true,name=categoryName"`
	// Tag usage entry type. Optional - if not specified, all entry types are included.
	EntryType *TagAPIGetTopTagsEntryTypeEnum `queryParam:"style=form,explode=true,name=entryType"`
	// Content language preference (optional).
	Lang *TagAPIGetTopTagsLangEnum `queryParam:"style=form,explode=true,name=lang"`
	// Maximum number of tags to return.
	MaxResults *int `queryParam:"style=form,explode=true,name=maxResults"`
}

type TagAPIGetTopTagsRequest struct {
	QueryParams TagAPIGetTopTagsQueryParams
}

type TagAPIGetTopTagsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	TagBaseContracts []shared.TagBaseContract
}
