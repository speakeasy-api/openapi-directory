"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import getpaymentsforpayoutresponsev4 as shared_getpaymentsforpayoutresponsev4
from ..shared import inline_response_400 as shared_inline_response_400
from ..shared import inline_response_401 as shared_inline_response_401
from ..shared import inline_response_403 as shared_inline_response_403
from ..shared import inline_response_404 as shared_inline_response_404
from datetime import date
from enum import Enum
from typing import Optional

class GetPaymentsForPayoutV4StatusEnum(str, Enum):
    r"""Payment Status"""
    ACCEPTED = 'ACCEPTED'
    AWAITING_FUNDS = 'AWAITING_FUNDS'
    FUNDED = 'FUNDED'
    UNFUNDED = 'UNFUNDED'
    BANK_PAYMENT_REQUESTED = 'BANK_PAYMENT_REQUESTED'
    REJECTED = 'REJECTED'
    ACCEPTED_BY_RAILS = 'ACCEPTED_BY_RAILS'
    CONFIRMED = 'CONFIRMED'
    FAILED = 'FAILED'
    RETURNED = 'RETURNED'
    WITHDRAWN = 'WITHDRAWN'

class GetPaymentsForPayoutV4TransmissionTypeEnum(str, Enum):
    r"""Transmission Type
    * ACH
    * SAME_DAY_ACH
    * WIRE
    * GACHO
    """
    ACH = 'ACH'
    SAME_DAY_ACH = 'SAME_DAY_ACH'
    WIRE = 'WIRE'
    LOCAL = 'LOCAL'
    GACHO = 'GACHO'


@dataclasses.dataclass
class GetPaymentsForPayoutV4Request:
    
    payout_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'payoutId', 'style': 'simple', 'explode': False }})
    r"""The id (UUID) of the payout."""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Page number. Default is 1."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'pageSize', 'style': 'form', 'explode': True }})
    r"""The number of results to return in a page"""  
    payment_amount_from: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'paymentAmountFrom', 'style': 'form', 'explode': True }})
    r"""The payment amount from range filter. Filters for paymentAmount >= paymentAmountFrom"""  
    payment_amount_to: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'paymentAmountTo', 'style': 'form', 'explode': True }})
    r"""The payment amount to range filter. Filters for paymentAmount ⇐ paymentAmountTo"""  
    remote_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'remoteId', 'style': 'form', 'explode': True }})
    r"""The remote id of the payees."""  
    remote_system_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'remoteSystemId', 'style': 'form', 'explode': True }})
    r"""The id of the remote system that is orchestrating payments"""  
    sensitive: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sensitive', 'style': 'form', 'explode': True }})
    r"""Optional. If omitted or set to false, any Personal Identifiable Information (PII) values are returned masked.
    If set to true, and you have permission, the PII values will be returned as their original unmasked values.
    """  
    sort: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""List of sort fields (e.g. ?sort=submittedDateTime:asc,status:asc). Default is sort by remoteId
    The supported sort fields are: sourceAmount, sourceCurrency, paymentAmount, paymentCurrency,
    routingNumber, accountNumber, remoteId, submittedDateTime and status
    """  
    source_amount_from: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sourceAmountFrom', 'style': 'form', 'explode': True }})
    r"""The source amount from range filter. Filters for sourceAmount >= sourceAmountFrom"""  
    source_amount_to: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sourceAmountTo', 'style': 'form', 'explode': True }})
    r"""The source amount to range filter. Filters for sourceAmount ⇐ sourceAmountTo"""  
    status: Optional[GetPaymentsForPayoutV4StatusEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})
    r"""Payment Status"""  
    submitted_date_from: Optional[date] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'submittedDateFrom', 'style': 'form', 'explode': True }})
    r"""The submitted date from range filter. Format is yyyy-MM-dd."""  
    submitted_date_to: Optional[date] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'submittedDateTo', 'style': 'form', 'explode': True }})
    r"""The submitted date to range filter. Format is yyyy-MM-dd."""  
    transmission_type: Optional[GetPaymentsForPayoutV4TransmissionTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'transmissionType', 'style': 'form', 'explode': True }})
    r"""Transmission Type
    * ACH
    * SAME_DAY_ACH
    * WIRE
    * GACHO
    """  
    

@dataclasses.dataclass
class GetPaymentsForPayoutV4Response:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_payments_for_payout_response_v4: Optional[shared_getpaymentsforpayoutresponsev4.GetPaymentsForPayoutResponseV4] = dataclasses.field(default=None)
    r"""200 response, data found okay"""  
    inline_response_400: Optional[shared_inline_response_400.InlineResponse400] = dataclasses.field(default=None)
    r"""Invalid request. See Error message payload for details of failure"""  
    inline_response_401: Optional[shared_inline_response_401.InlineResponse401] = dataclasses.field(default=None)
    r"""Invalid access token. May be expired or invalid"""  
    inline_response_403: Optional[shared_inline_response_403.InlineResponse403] = dataclasses.field(default=None)
    r"""The authentication does not have permissions to access the resource
    This usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions
    """  
    inline_response_404: Optional[shared_inline_response_404.InlineResponse404] = dataclasses.field(default=None)
    r"""The resource was not found or is no longer available"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    