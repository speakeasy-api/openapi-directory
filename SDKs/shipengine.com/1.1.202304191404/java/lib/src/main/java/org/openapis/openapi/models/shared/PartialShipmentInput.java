/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * PartialShipmentInput - The information necessary to ship a package, such as the origin, the destination, the carrier service, and the package dimensions and weight.
 * 
 */
public class PartialShipmentInput {
    /**
     * Advanced shipment options.  These are entirely optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advanced_options")
    public AdvancedShipmentOptions advancedOptions;

    public PartialShipmentInput withAdvancedOptions(AdvancedShipmentOptions advancedOptions) {
        this.advancedOptions = advancedOptions;
        return this;
    }
    
    /**
     * The carrier account that is billed for the shipping charges
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carrier_id")
    public String carrierId;

    public PartialShipmentInput withCarrierId(String carrierId) {
        this.carrierId = carrierId;
        return this;
    }
    
    /**
     * The type of delivery confirmation that is required for this shipment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confirmation")
    public PartialShipmentDeliveryConfirmationEnum confirmation;

    public PartialShipmentInput withConfirmation(PartialShipmentDeliveryConfirmationEnum confirmation) {
        this.confirmation = confirmation;
        return this;
    }
    
    /**
     * Customs information.  This is usually only needed for international shipments.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customs")
    public PartialShipmentInternationalShipmentOptionsInput customs;

    public PartialShipmentInput withCustoms(PartialShipmentInternationalShipmentOptionsInput customs) {
        this.customs = customs;
        return this;
    }
    
    /**
     * ID that the Order Source assigned
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("external_order_id")
    public String externalOrderId;

    public PartialShipmentInput withExternalOrderId(String externalOrderId) {
        this.externalOrderId = externalOrderId;
        return this;
    }
    
    /**
     * A unique user-defined key to identify a shipment.  This can be used to retrieve the shipment.
     * 
     * &gt; **Warning:** The `external_shipment_id` is limited to 50 characters. Any additional characters will be truncated.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("external_shipment_id")
    public String externalShipmentId;

    public PartialShipmentInput withExternalShipmentId(String externalShipmentId) {
        this.externalShipmentId = externalShipmentId;
        return this;
    }
    
    /**
     * The insurance provider to use for any insured packages in the shipment.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("insurance_provider")
    public PartialShipmentInsuranceProviderEnum insuranceProvider;

    public PartialShipmentInput withInsuranceProvider(PartialShipmentInsuranceProviderEnum insuranceProvider) {
        this.insuranceProvider = insuranceProvider;
        return this;
    }
    
    /**
     * An optional indicator if the shipment is intended to be a return. Defaults to false if not provided.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_return")
    public Boolean isReturn;

    public PartialShipmentInput withIsReturn(Boolean isReturn) {
        this.isReturn = isReturn;
        return this;
    }
    
    /**
     * Describe the packages included in this shipment as related to potential metadata that was imported from
     * external order sources
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("items")
    public ShipmentItem[] items;

    public PartialShipmentInput withItems(ShipmentItem[] items) {
        this.items = items;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("order_source_code")
    public OrderSourceNameEnum orderSourceCode;

    public PartialShipmentInput withOrderSourceCode(OrderSourceNameEnum orderSourceCode) {
        this.orderSourceCode = orderSourceCode;
        return this;
    }
    
    /**
     * Indicates if the package will be picked up or dropped off by the carrier
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("origin_type")
    public PartialShipmentOriginTypeEnum originType;

    public PartialShipmentInput withOriginType(PartialShipmentOriginTypeEnum originType) {
        this.originType = originType;
        return this;
    }
    
    /**
     * The packages in the shipment.
     * 
     * &gt; **Note:** Some carriers only allow one package per shipment.  If you attempt to create a multi-package shipment for a carrier that doesn't allow it, an error will be returned.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packages")
    public PackageInput[] packages;

    public PartialShipmentInput withPackages(PackageInput[] packages) {
        this.packages = packages;
        return this;
    }
    
    /**
     * The return address for this shipment.  Defaults to the `ship_from` address.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("return_to")
    public ShippingAddress returnTo;

    public PartialShipmentInput withReturnTo(ShippingAddress returnTo) {
        this.returnTo = returnTo;
        return this;
    }
    
    /**
     * The [carrier service](https://www.shipengine.com/docs/shipping/use-a-carrier-service/) used to ship the package, such as `fedex_ground`, `usps_first_class_mail`, `flat_rate_envelope`, etc.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service_code")
    public String serviceCode;

    public PartialShipmentInput withServiceCode(String serviceCode) {
        this.serviceCode = serviceCode;
        return this;
    }
    
    /**
     * The date that the shipment was (or will be) shippped.  ShipEngine will take the day of week into consideration. For example, if the carrier does not operate on Sundays, then a package that would have shipped on Sunday will ship on Monday instead.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("ship_date")
    public OffsetDateTime shipDate;

    public PartialShipmentInput withShipDate(OffsetDateTime shipDate) {
        this.shipDate = shipDate;
        return this;
    }
    
    /**
     * The shipment's origin address. If you frequently ship from the same location, consider [creating a warehouse](https://www.shipengine.com/docs/reference/create-warehouse/).  Then you can simply specify the `warehouse_id` rather than the complete address each time.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ship_from")
    public ShippingAddress shipFrom;

    public PartialShipmentInput withShipFrom(ShippingAddress shipFrom) {
        this.shipFrom = shipFrom;
        return this;
    }
    
    /**
     * The recipient's mailing address
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ship_to")
    public ShippingAddress shipTo;

    public PartialShipmentInput withShipTo(ShippingAddress shipTo) {
        this.shipTo = shipTo;
        return this;
    }
    
    /**
     * A non-unique user-defined number used to identify a shipment.  If undefined, this will match the external_shipment_id of the shipment.
     * 
     * &gt; **Warning:** The `shipment_number` is limited to 50 characters. Any additional characters will be truncated.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shipment_number")
    public String shipmentNumber;

    public PartialShipmentInput withShipmentNumber(String shipmentNumber) {
        this.shipmentNumber = shipmentNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_identifiers")
    public TaxIdentifier[] taxIdentifiers;

    public PartialShipmentInput withTaxIdentifiers(TaxIdentifier[] taxIdentifiers) {
        this.taxIdentifiers = taxIdentifiers;
        return this;
    }
    
    /**
     * The [warehouse](https://www.shipengine.com/docs/shipping/ship-from-a-warehouse/) that the shipment is being shipped from.  Either `warehouse_id` or `ship_from` must be specified.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warehouse_id")
    public String warehouseId;

    public PartialShipmentInput withWarehouseId(String warehouseId) {
        this.warehouseId = warehouseId;
        return this;
    }
    
    public PartialShipmentInput(){}
}
