// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type GetOrganizationCellularGatewayUplinkStatusesRequest struct {
	// A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `queryParam:"style=form,explode=true,name=endingBefore"`
	// A list of ICCIDs. The returned devices will be filtered to only include these ICCIDs.
	Iccids []string `queryParam:"style=form,explode=false,name=iccids"`
	// A list of network IDs. The returned devices will be filtered to only include these networks.
	NetworkIds     []string `queryParam:"style=form,explode=false,name=networkIds"`
	OrganizationID string   `pathParam:"style=simple,explode=false,name=organizationId"`
	// The number of entries per page returned. Acceptable range is 3 - 1000. Default is 1000.
	PerPage *int64 `queryParam:"style=form,explode=true,name=perPage"`
	// A list of serial numbers. The returned devices will be filtered to only include these serials.
	Serials []string `queryParam:"style=form,explode=false,name=serials"`
	// A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `queryParam:"style=form,explode=true,name=startingAfter"`
}

// GetOrganizationCellularGatewayUplinkStatuses200ApplicationJSONUplinksSignalStat - Tower Signal Status
type GetOrganizationCellularGatewayUplinkStatuses200ApplicationJSONUplinksSignalStat struct {
	// Reference Signal Received Power
	Rsrp *string `json:"rsrp,omitempty"`
	// Reference Signal Received Quality
	Rsrq *string `json:"rsrq,omitempty"`
}

type GetOrganizationCellularGatewayUplinkStatuses200ApplicationJSONUplinks struct {
	// Access Point Name
	Apn *string `json:"apn,omitempty"`
	// Connection Type
	ConnectionType *string `json:"connectionType,omitempty"`
	// Primary DNS IP
	Dns1 *string `json:"dns1,omitempty"`
	// Secondary DNS IP
	Dns2 *string `json:"dns2,omitempty"`
	// Gateway IP
	Gateway *string `json:"gateway,omitempty"`
	// Integrated Circuit Card Identification Number
	Iccid *string `json:"iccid,omitempty"`
	// Uplink interface
	Interface *string `json:"interface,omitempty"`
	// Uplink IP
	IP *string `json:"ip,omitempty"`
	// Uplink model
	Model *string `json:"model,omitempty"`
	// Network Provider
	Provider *string `json:"provider,omitempty"`
	// Public IP
	PublicIP *string `json:"publicIp,omitempty"`
	// Tower Signal Status
	SignalStat *GetOrganizationCellularGatewayUplinkStatuses200ApplicationJSONUplinksSignalStat `json:"signalStat,omitempty"`
	// Signal Type
	SignalType *string `json:"signalType,omitempty"`
	// Uplink status
	Status *string `json:"status,omitempty"`
}

type GetOrganizationCellularGatewayUplinkStatuses200ApplicationJSON struct {
	// Last reported time for the device
	LastReportedAt *time.Time `json:"lastReportedAt,omitempty"`
	// Device model
	Model *string `json:"model,omitempty"`
	// Network Id
	NetworkID *string `json:"networkId,omitempty"`
	// Serial number of the device
	Serial *string `json:"serial,omitempty"`
	// Uplinks info
	Uplinks []GetOrganizationCellularGatewayUplinkStatuses200ApplicationJSONUplinks `json:"uplinks,omitempty"`
}

type GetOrganizationCellularGatewayUplinkStatusesResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetOrganizationCellularGatewayUplinkStatuses200ApplicationJSONObjects []GetOrganizationCellularGatewayUplinkStatuses200ApplicationJSON
}
