"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import upsertredshifttargetoptions as shared_upsertredshifttargetoptions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RedshiftTarget:
    r"""Specifies a target that uses Amazon Redshift."""
    
    database: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Database') }})  
    inputs: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Inputs') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    table: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Table') }})  
    redshift_tmp_dir: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RedshiftTmpDir'), 'exclude': lambda f: f is None }})  
    tmp_dir_iam_role: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TmpDirIAMRole'), 'exclude': lambda f: f is None }})  
    upsert_redshift_options: Optional[shared_upsertredshifttargetoptions.UpsertRedshiftTargetOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpsertRedshiftOptions'), 'exclude': lambda f: f is None }})  
    