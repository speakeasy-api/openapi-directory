/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Video - A *video* resource represents a YouTube video.
 */
public class Video {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ageGating")
    public VideoAgeGating ageGating;
    public Video withAgeGating(VideoAgeGating ageGating) {
        this.ageGating = ageGating;
        return this;
    }
    
    /**
     * Details about the content of a YouTube Video.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentDetails")
    public VideoContentDetails contentDetails;
    public Video withContentDetails(VideoContentDetails contentDetails) {
        this.contentDetails = contentDetails;
        return this;
    }
    
    /**
     * Etag of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;
    public Video withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Describes original video file properties, including technical details about audio and video streams, but also metadata information like content length, digitization time, or geotagging information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileDetails")
    public VideoFileDetails fileDetails;
    public Video withFileDetails(VideoFileDetails fileDetails) {
        this.fileDetails = fileDetails;
        return this;
    }
    
    /**
     * The ID that YouTube uses to uniquely identify the video.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Video withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "youtube#video".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public Video withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Details about the live streaming metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("liveStreamingDetails")
    public VideoLiveStreamingDetails liveStreamingDetails;
    public Video withLiveStreamingDetails(VideoLiveStreamingDetails liveStreamingDetails) {
        this.liveStreamingDetails = liveStreamingDetails;
        return this;
    }
    
    /**
     * The localizations object contains localized versions of the basic details about the video, such as its title and description.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("localizations")
    public java.util.Map<String, VideoLocalization> localizations;
    public Video withLocalizations(java.util.Map<String, VideoLocalization> localizations) {
        this.localizations = localizations;
        return this;
    }
    
    /**
     * Details about monetization of a YouTube Video.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("monetizationDetails")
    public VideoMonetizationDetails monetizationDetails;
    public Video withMonetizationDetails(VideoMonetizationDetails monetizationDetails) {
        this.monetizationDetails = monetizationDetails;
        return this;
    }
    
    /**
     * Player to be used for a video playback.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("player")
    public VideoPlayer player;
    public Video withPlayer(VideoPlayer player) {
        this.player = player;
        return this;
    }
    
    /**
     * Describes processing status and progress and availability of some other Video resource parts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processingDetails")
    public VideoProcessingDetails processingDetails;
    public Video withProcessingDetails(VideoProcessingDetails processingDetails) {
        this.processingDetails = processingDetails;
        return this;
    }
    
    /**
     * DEPRECATED. b/157517979: This part was never populated after it was added. However, it sees non-zero traffic because there is generated client code in the wild that refers to it [1]. We keep this field and do NOT remove it because otherwise V3 would return an error when this part gets requested [2]. [1] https://developers.google.com/resources/api-libraries/documentation/youtube/v3/csharp/latest/classGoogle_1_1Apis_1_1YouTube_1_1v3_1_1Data_1_1VideoProjectDetails.html [2] http://google3/video/youtube/src/python/servers/data_api/common.py?l=1565-1569&amp;rcl=344141677
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("projectDetails")
    public java.util.Map<String, Object> projectDetails;
    public Video withProjectDetails(java.util.Map<String, Object> projectDetails) {
        this.projectDetails = projectDetails;
        return this;
    }
    
    /**
     * Recording information associated with the video.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recordingDetails")
    public VideoRecordingDetails recordingDetails;
    public Video withRecordingDetails(VideoRecordingDetails recordingDetails) {
        this.recordingDetails = recordingDetails;
        return this;
    }
    
    /**
     * Basic details about a video, including title, description, uploader, thumbnails and category.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("snippet")
    public VideoSnippet snippet;
    public Video withSnippet(VideoSnippet snippet) {
        this.snippet = snippet;
        return this;
    }
    
    /**
     * Statistics about the video, such as the number of times the video was viewed or liked.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("statistics")
    public VideoStatistics statistics;
    public Video withStatistics(VideoStatistics statistics) {
        this.statistics = statistics;
        return this;
    }
    
    /**
     * Basic details about a video category, such as its localized title. Next Id: 18
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public VideoStatus status;
    public Video withStatus(VideoStatus status) {
        this.status = status;
        return this;
    }
    
    /**
     * Specifies suggestions on how to improve video content, including encoding hints, tag suggestions, and editor suggestions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suggestions")
    public VideoSuggestions suggestions;
    public Video withSuggestions(VideoSuggestions suggestions) {
        this.suggestions = suggestions;
        return this;
    }
    
    /**
     * Freebase topic information related to the video.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("topicDetails")
    public VideoTopicDetails topicDetails;
    public Video withTopicDetails(VideoTopicDetails topicDetails) {
        this.topicDetails = topicDetails;
        return this;
    }
    
}
