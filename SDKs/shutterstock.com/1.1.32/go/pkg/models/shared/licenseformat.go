// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LicenseFormatMediaTypeEnum - Media type of the license
type LicenseFormatMediaTypeEnum string

const (
	LicenseFormatMediaTypeEnumImage     LicenseFormatMediaTypeEnum = "image"
	LicenseFormatMediaTypeEnumVideo     LicenseFormatMediaTypeEnum = "video"
	LicenseFormatMediaTypeEnumAudio     LicenseFormatMediaTypeEnum = "audio"
	LicenseFormatMediaTypeEnumEditorial LicenseFormatMediaTypeEnum = "editorial"
)

func (e *LicenseFormatMediaTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "image":
		fallthrough
	case "video":
		fallthrough
	case "audio":
		fallthrough
	case "editorial":
		*e = LicenseFormatMediaTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LicenseFormatMediaTypeEnum: %s", s)
	}
}

// LicenseFormat - Description of a license
type LicenseFormat struct {
	// Description of the license
	Description *string `json:"description,omitempty"`
	// Format or extension of the media, such as mpeg for videos or jpeg for images
	Format *string `json:"format,omitempty"`
	// Media type of the license
	MediaType *LicenseFormatMediaTypeEnum `json:"media_type,omitempty"`
	// Width of the media, in pixels, allowed by this license
	MinResolution *int64 `json:"min_resolution,omitempty"`
	// Keyword that details the size of the media, such as hd or sd for video, huge or vector for images
	Size *string `json:"size,omitempty"`
}
