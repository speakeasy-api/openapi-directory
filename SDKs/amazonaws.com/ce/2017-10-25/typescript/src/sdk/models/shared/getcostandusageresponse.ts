/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DimensionValuesWithAttributes } from "./dimensionvalueswithattributes";
import { GroupDefinition } from "./groupdefinition";
import { ResultByTime } from "./resultbytime";
import { Expose, Type } from "class-transformer";

/**
 * Success
 */
export class GetCostAndUsageResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: DimensionValuesWithAttributes })
  @Expose({ name: "DimensionValueAttributes" })
  @Type(() => DimensionValuesWithAttributes)
  dimensionValueAttributes?: DimensionValuesWithAttributes[];

  @SpeakeasyMetadata({ elemType: GroupDefinition })
  @Expose({ name: "GroupDefinitions" })
  @Type(() => GroupDefinition)
  groupDefinitions?: GroupDefinition[];

  @SpeakeasyMetadata()
  @Expose({ name: "NextPageToken" })
  nextPageToken?: string;

  @SpeakeasyMetadata({ elemType: ResultByTime })
  @Expose({ name: "ResultsByTime" })
  @Type(() => ResultByTime)
  resultsByTime?: ResultByTime[];
}
