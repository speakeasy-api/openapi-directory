"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dialogactiontype_enum as shared_dialogactiontype_enum
from ..shared import elicitsubslot as shared_elicitsubslot
from ..shared import styletype_enum as shared_styletype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DialogAction:
    r"""The next action that Amazon Lex V2 should take."""
    
    type: shared_dialogactiontype_enum.DialogActionTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})  
    slot_elicitation_style: Optional[shared_styletype_enum.StyleTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slotElicitationStyle'), 'exclude': lambda f: f is None }})  
    slot_to_elicit: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slotToElicit'), 'exclude': lambda f: f is None }})  
    sub_slot_to_elicit: Optional[shared_elicitsubslot.ElicitSubSlot] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subSlotToElicit'), 'exclude': lambda f: f is None }})  
    