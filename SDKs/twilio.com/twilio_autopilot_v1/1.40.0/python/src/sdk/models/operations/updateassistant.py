"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import autopilot_v1_assistant as shared_autopilot_v1_assistant
from typing import Any, Optional

UPDATE_ASSISTANT_SERVERS = [
	"https://autopilot.twilio.com",
]


@dataclasses.dataclass
class UpdateAssistantSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class UpdateAssistantUpdateAssistantRequest:
    
    callback_events: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'CallbackEvents' }})
    r"""Reserved."""  
    callback_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'CallbackUrl' }})
    r"""Reserved."""  
    defaults: Optional[Any] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Defaults' }})
    r"""A JSON object that defines the Assistant's [default tasks](https://www.twilio.com/docs/autopilot/api/assistant/defaults) for various scenarios, including initiation actions and fallback tasks."""  
    development_stage: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'DevelopmentStage' }})
    r"""A string describing the state of the assistant."""  
    friendly_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'FriendlyName' }})
    r"""A descriptive string that you create to describe the resource. It is not unique and can be up to 255 characters long."""  
    log_queries: Optional[bool] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'LogQueries' }})
    r"""Whether queries should be logged and kept after training. Can be: `true` or `false` and defaults to `true`. If `true`, queries are stored for 30 days, and then deleted. If `false`, no queries are stored."""  
    style_sheet: Optional[Any] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'StyleSheet' }})
    r"""The JSON string that defines the Assistant's [style sheet](https://www.twilio.com/docs/autopilot/api/assistant/stylesheet)"""  
    unique_name: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'UniqueName' }})
    r"""An application-defined string that uniquely identifies the resource. It can be used as an alternative to the `sid` in the URL path to address the resource. The first 64 characters must be unique."""  
    

@dataclasses.dataclass
class UpdateAssistantRequest:
    
    sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'Sid', 'style': 'simple', 'explode': False }})
    r"""The Twilio-provided string that uniquely identifies the Assistant resource to update."""  
    request_body: Optional[UpdateAssistantUpdateAssistantRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class UpdateAssistantResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    autopilot_v1_assistant: Optional[shared_autopilot_v1_assistant.AutopilotV1Assistant] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    