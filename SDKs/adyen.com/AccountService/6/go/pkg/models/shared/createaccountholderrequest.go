// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateAccountHolderRequestLegalEntityEnum - The legal entity type of the account holder. This determines the information that should be provided in the request.
//
// Possible values: **Business**, **Individual**, or **NonProfit**.
//
// * If set to **Business** or **NonProfit**, then `accountHolderDetails.businessDetails` must be provided, with at least one entry in the `accountHolderDetails.businessDetails.shareholders` list.
//
// * If set to **Individual**, then `accountHolderDetails.individualDetails` must be provided.
type CreateAccountHolderRequestLegalEntityEnum string

const (
	CreateAccountHolderRequestLegalEntityEnumBusiness      CreateAccountHolderRequestLegalEntityEnum = "Business"
	CreateAccountHolderRequestLegalEntityEnumIndividual    CreateAccountHolderRequestLegalEntityEnum = "Individual"
	CreateAccountHolderRequestLegalEntityEnumNonProfit     CreateAccountHolderRequestLegalEntityEnum = "NonProfit"
	CreateAccountHolderRequestLegalEntityEnumPartnership   CreateAccountHolderRequestLegalEntityEnum = "Partnership"
	CreateAccountHolderRequestLegalEntityEnumPublicCompany CreateAccountHolderRequestLegalEntityEnum = "PublicCompany"
)

func (e CreateAccountHolderRequestLegalEntityEnum) ToPointer() *CreateAccountHolderRequestLegalEntityEnum {
	return &e
}

func (e *CreateAccountHolderRequestLegalEntityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Business":
		fallthrough
	case "Individual":
		fallthrough
	case "NonProfit":
		fallthrough
	case "Partnership":
		fallthrough
	case "PublicCompany":
		*e = CreateAccountHolderRequestLegalEntityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateAccountHolderRequestLegalEntityEnum: %v", v)
	}
}

type CreateAccountHolderRequest struct {
	// Your unique identifier for the prospective account holder.
	// The length must be between three (3) and fifty (50) characters long. Only letters, digits, and hyphens (-) are allowed.
	AccountHolderCode    string               `json:"accountHolderCode"`
	AccountHolderDetails AccountHolderDetails `json:"accountHolderDetails"`
	// If set to **true**, an account with the default options is automatically created for the account holder.
	// By default, this field is set to **true**.
	CreateDefaultAccount *bool `json:"createDefaultAccount,omitempty"`
	// A description of the prospective account holder, maximum 256 characters. You can use alphanumeric characters (A-Z, a-z, 0-9), white spaces, and underscores `_`.
	Description *string `json:"description,omitempty"`
	// The legal entity type of the account holder. This determines the information that should be provided in the request.
	//
	// Possible values: **Business**, **Individual**, or **NonProfit**.
	//
	// * If set to **Business** or **NonProfit**, then `accountHolderDetails.businessDetails` must be provided, with at least one entry in the `accountHolderDetails.businessDetails.shareholders` list.
	//
	// * If set to **Individual**, then `accountHolderDetails.individualDetails` must be provided.
	LegalEntity CreateAccountHolderRequestLegalEntityEnum `json:"legalEntity"`
	// The three-character [ISO currency code](https://docs.adyen.com/development-resources/currency-codes), with which the prospective account holder primarily deals.
	PrimaryCurrency *string `json:"primaryCurrency,omitempty"`
	// The starting [processing tier](https://docs.adyen.com/marketplaces-and-platforms/classic/onboarding-and-verification/precheck-kyc-information) for the prospective account holder.
	ProcessingTier *int `json:"processingTier,omitempty"`
	// The identifier of the profile that applies to this entity.
	VerificationProfile *string `json:"verificationProfile,omitempty"`
}
