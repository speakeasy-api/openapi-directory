"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class IterationResult:
    
    duration_ms: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('durationMs'), 'exclude': lambda f: f is None }})
    r"""Time taken to run the iteration in milliseconds."""  
    eval_loss: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('evalLoss'), 'exclude': lambda f: f is None }})
    r"""Loss computed on the eval data at the end of iteration."""  
    index: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('index'), 'exclude': lambda f: f is None }})
    r"""Index of the iteration, 0 based."""  
    learn_rate: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('learnRate'), 'exclude': lambda f: f is None }})
    r"""Learn rate used for this iteration."""  
    training_loss: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trainingLoss'), 'exclude': lambda f: f is None }})
    r"""Loss computed on the training data at the end of iteration."""  
    