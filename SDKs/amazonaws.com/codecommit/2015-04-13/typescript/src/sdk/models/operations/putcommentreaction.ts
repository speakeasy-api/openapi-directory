/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum PutCommentReactionXAmzTargetEnum {
  CodeCommit20150413PutCommentReaction = "CodeCommit_20150413.PutCommentReaction",
}

export class PutCommentReactionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  putCommentReactionInput: shared.PutCommentReactionInput;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Target",
  })
  xAmzTarget: PutCommentReactionXAmzTargetEnum;
}

export class PutCommentReactionResponse extends SpeakeasyBase {
  /**
   * CommentDeletedException
   */
  @SpeakeasyMetadata()
  commentDeletedException?: any;

  /**
   * CommentDoesNotExistException
   */
  @SpeakeasyMetadata()
  commentDoesNotExistException?: any;

  /**
   * CommentIdRequiredException
   */
  @SpeakeasyMetadata()
  commentIdRequiredException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InvalidCommentIdException
   */
  @SpeakeasyMetadata()
  invalidCommentIdException?: any;

  /**
   * InvalidReactionValueException
   */
  @SpeakeasyMetadata()
  invalidReactionValueException?: any;

  /**
   * ReactionLimitExceededException
   */
  @SpeakeasyMetadata()
  reactionLimitExceededException?: any;

  /**
   * ReactionValueRequiredException
   */
  @SpeakeasyMetadata()
  reactionValueRequiredException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
