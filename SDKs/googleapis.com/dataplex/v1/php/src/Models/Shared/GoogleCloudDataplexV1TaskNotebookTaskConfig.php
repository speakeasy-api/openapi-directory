<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudDataplexV1TaskNotebookTaskConfig - Config for running scheduled notebooks.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudDataplexV1TaskNotebookTaskConfig
{
    /**
     * Optional. Cloud Storage URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip.
     * 
     * @var ?array<string> $archiveUris
     */
	#[\JMS\Serializer\Annotation\SerializedName('archiveUris')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $archiveUris = null;
    
    /**
     * Optional. Cloud Storage URIs of files to be placed in the working directory of each executor.
     * 
     * @var ?array<string> $fileUris
     */
	#[\JMS\Serializer\Annotation\SerializedName('fileUris')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fileUris = null;
    
    /**
     * Configuration for the underlying infrastructure used to run workloads.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudDataplexV1TaskInfrastructureSpec $infrastructureSpec
     */
	#[\JMS\Serializer\Annotation\SerializedName('infrastructureSpec')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudDataplexV1TaskInfrastructureSpec')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudDataplexV1TaskInfrastructureSpec $infrastructureSpec = null;
    
    /**
     * Required. Path to input notebook. This can be the Cloud Storage URI of the notebook file or the path to a Notebook Content. The execution args are accessible as environment variables (TASK_key=value).
     * 
     * @var ?string $notebook
     */
	#[\JMS\Serializer\Annotation\SerializedName('notebook')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notebook = null;
    
	public function __construct()
	{
		$this->archiveUris = null;
		$this->fileUris = null;
		$this->infrastructureSpec = null;
		$this->notebook = null;
	}
}
