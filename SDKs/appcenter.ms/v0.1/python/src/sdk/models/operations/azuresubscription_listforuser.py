"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AzureSubscriptionListForUserDefaultApplicationJSONErrorCodeEnum(str, Enum):
    BAD_REQUEST = 'BadRequest'
    CONFLICT = 'Conflict'
    NOT_ACCEPTABLE = 'NotAcceptable'
    NOT_FOUND = 'NotFound'
    INTERNAL_SERVER_ERROR = 'InternalServerError'
    UNAUTHORIZED = 'Unauthorized'
    TOO_MANY_REQUESTS = 'TooManyRequests'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AzureSubscriptionListForUserDefaultApplicationJSONError:
    
    code: AzureSubscriptionListForUserDefaultApplicationJSONErrorCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code') }})  
    message: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AzureSubscriptionListForUserDefaultApplicationJSON:
    r"""BadRequest"""
    
    error: AzureSubscriptionListForUserDefaultApplicationJSONError = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AzureSubscriptionListForUser200ApplicationJSON:
    
    subscription_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subscription_id') }})
    r"""The azure subscription id"""  
    subscription_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subscription_name') }})
    r"""The name of the azure subscription"""  
    tenant_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tenant_id') }})
    r"""The tenant id of the azure subscription belongs to"""  
    is_billable: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_billable'), 'exclude': lambda f: f is None }})
    r"""If the subscription can be used for billing"""  
    is_billing: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_billing'), 'exclude': lambda f: f is None }})
    r"""If the subscription is used for billing"""  
    is_microsoft_internal: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_microsoft_internal'), 'exclude': lambda f: f is None }})
    r"""If the subscription is internal Microsoft subscription"""  
    

@dataclasses.dataclass
class AzureSubscriptionListForUserResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    azure_subscription_list_for_user_200_application_json_objects: Optional[list[AzureSubscriptionListForUser200ApplicationJSON]] = dataclasses.field(default=None)
    r"""Success"""  
    azure_subscription_list_for_user_default_application_json_object: Optional[AzureSubscriptionListForUserDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""BadRequest"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    