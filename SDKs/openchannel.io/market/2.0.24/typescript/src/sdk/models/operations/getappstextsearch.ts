/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class GetAppsTextSearchRequest extends SpeakeasyBase {
  /**
   * A JSON array containing all the fields to be searched through. Example: ['name', 'customData.description']
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fields",
  })
  fields: string;

  /**
   * Whether this result should only contain apps that are owned by this user
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=isOwned",
  })
  isOwned?: boolean;

  /**
   * The maximum number of results to return per page
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * The result set page number to be returned
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pageNumber",
  })
  pageNumber?: number;

  /**
   * A query document. Example: {'name':'MyApp'} matches all the documents that have the name 'MyApp'
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=query" })
  query?: string;

  /**
   * The text to search for.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=text" })
  text: string;

  /**
   * The unique id of the user requesting this resource
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=userId",
  })
  userId?: string;
}

export class GetAppsTextSearchResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
