// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Format - The same asset can be represented in different formats, for example, a [WaveFront .obj](//en.wikipedia.org/wiki/Wavefront_.obj_file) file with its corresponding .mtl file or a [Khronos glTF](//www.khronos.org/gltf) file with its corresponding .glb binary data. A format refers to a specific representation of an asset and contains all information needed to retrieve and describe this representation.
type Format struct {
	// Information on the complexity of this Format.
	FormatComplexity *FormatComplexity `json:"formatComplexity,omitempty"`
	// A short string that identifies the format type of this representation. Possible values are: `FBX`, `GLTF`, `GLTF2`, `OBJ`, and `TILT`.
	FormatType *string `json:"formatType,omitempty"`
	// A list of dependencies of the root element. May include, but is not limited to, materials, textures, and shader programs.
	Resources []File `json:"resources,omitempty"`
	// Represents a file in Poly, which can be a root, resource, or thumbnail file.
	Root *File `json:"root,omitempty"`
}
