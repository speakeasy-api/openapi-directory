"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Instance = void 0;
var utils_1 = require("../../../internal/utils");
var architectureenum_1 = require("./architectureenum");
var autoscalingtypeenum_1 = require("./autoscalingtypeenum");
var blockdevicemapping_1 = require("./blockdevicemapping");
var reportedos_1 = require("./reportedos");
var rootdevicetypeenum_1 = require("./rootdevicetypeenum");
var virtualizationtypeenum_1 = require("./virtualizationtypeenum");
var class_transformer_1 = require("class-transformer");
/**
 * Describes an instance.
 */
var Instance = /** @class */ (function (_super) {
    __extends(Instance, _super);
    function Instance() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AgentVersion" }),
        __metadata("design:type", String)
    ], Instance.prototype, "agentVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AmiId" }),
        __metadata("design:type", String)
    ], Instance.prototype, "amiId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Architecture" }),
        __metadata("design:type", String)
    ], Instance.prototype, "architecture", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Arn" }),
        __metadata("design:type", String)
    ], Instance.prototype, "arn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AutoScalingType" }),
        __metadata("design:type", String)
    ], Instance.prototype, "autoScalingType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AvailabilityZone" }),
        __metadata("design:type", String)
    ], Instance.prototype, "availabilityZone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: blockdevicemapping_1.BlockDeviceMapping }),
        (0, class_transformer_1.Expose)({ name: "BlockDeviceMappings" }),
        (0, class_transformer_1.Type)(function () { return blockdevicemapping_1.BlockDeviceMapping; }),
        __metadata("design:type", Array)
    ], Instance.prototype, "blockDeviceMappings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "CreatedAt" }),
        __metadata("design:type", String)
    ], Instance.prototype, "createdAt", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EbsOptimized" }),
        __metadata("design:type", Boolean)
    ], Instance.prototype, "ebsOptimized", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Ec2InstanceId" }),
        __metadata("design:type", String)
    ], Instance.prototype, "ec2InstanceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EcsClusterArn" }),
        __metadata("design:type", String)
    ], Instance.prototype, "ecsClusterArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EcsContainerInstanceArn" }),
        __metadata("design:type", String)
    ], Instance.prototype, "ecsContainerInstanceArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ElasticIp" }),
        __metadata("design:type", String)
    ], Instance.prototype, "elasticIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Hostname" }),
        __metadata("design:type", String)
    ], Instance.prototype, "hostname", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "InfrastructureClass" }),
        __metadata("design:type", String)
    ], Instance.prototype, "infrastructureClass", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "InstallUpdatesOnBoot" }),
        __metadata("design:type", Boolean)
    ], Instance.prototype, "installUpdatesOnBoot", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "InstanceId" }),
        __metadata("design:type", String)
    ], Instance.prototype, "instanceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "InstanceProfileArn" }),
        __metadata("design:type", String)
    ], Instance.prototype, "instanceProfileArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "InstanceType" }),
        __metadata("design:type", String)
    ], Instance.prototype, "instanceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "LastServiceErrorId" }),
        __metadata("design:type", String)
    ], Instance.prototype, "lastServiceErrorId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "LayerIds" }),
        __metadata("design:type", Array)
    ], Instance.prototype, "layerIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Os" }),
        __metadata("design:type", String)
    ], Instance.prototype, "os", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Platform" }),
        __metadata("design:type", String)
    ], Instance.prototype, "platform", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "PrivateDns" }),
        __metadata("design:type", String)
    ], Instance.prototype, "privateDns", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "PrivateIp" }),
        __metadata("design:type", String)
    ], Instance.prototype, "privateIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "PublicDns" }),
        __metadata("design:type", String)
    ], Instance.prototype, "publicDns", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "PublicIp" }),
        __metadata("design:type", String)
    ], Instance.prototype, "publicIp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RegisteredBy" }),
        __metadata("design:type", String)
    ], Instance.prototype, "registeredBy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ReportedAgentVersion" }),
        __metadata("design:type", String)
    ], Instance.prototype, "reportedAgentVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ReportedOs" }),
        (0, class_transformer_1.Type)(function () { return reportedos_1.ReportedOs; }),
        __metadata("design:type", reportedos_1.ReportedOs)
    ], Instance.prototype, "reportedOs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RootDeviceType" }),
        __metadata("design:type", String)
    ], Instance.prototype, "rootDeviceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "RootDeviceVolumeId" }),
        __metadata("design:type", String)
    ], Instance.prototype, "rootDeviceVolumeId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SecurityGroupIds" }),
        __metadata("design:type", Array)
    ], Instance.prototype, "securityGroupIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SshHostDsaKeyFingerprint" }),
        __metadata("design:type", String)
    ], Instance.prototype, "sshHostDsaKeyFingerprint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SshHostRsaKeyFingerprint" }),
        __metadata("design:type", String)
    ], Instance.prototype, "sshHostRsaKeyFingerprint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SshKeyName" }),
        __metadata("design:type", String)
    ], Instance.prototype, "sshKeyName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "StackId" }),
        __metadata("design:type", String)
    ], Instance.prototype, "stackId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Status" }),
        __metadata("design:type", String)
    ], Instance.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SubnetId" }),
        __metadata("design:type", String)
    ], Instance.prototype, "subnetId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Tenancy" }),
        __metadata("design:type", String)
    ], Instance.prototype, "tenancy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "VirtualizationType" }),
        __metadata("design:type", String)
    ], Instance.prototype, "virtualizationType", void 0);
    return Instance;
}(utils_1.SpeakeasyBase));
exports.Instance = Instance;
