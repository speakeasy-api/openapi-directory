"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import detecteddatadetails as shared_detecteddatadetails
from ..shared import revealrequeststatus_enum as shared_revealrequeststatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetSensitiveDataOccurrencesResponse:
    r"""Success"""
    
    error: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})  
    sensitive_data_occurrences: Optional[dict[str, list[shared_detecteddatadetails.DetectedDataDetails]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sensitiveDataOccurrences'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_revealrequeststatus_enum.RevealRequestStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    