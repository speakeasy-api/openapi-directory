// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ClusterTelemetryTypeEnum - Type of the integration.
type ClusterTelemetryTypeEnum string

const (
	ClusterTelemetryTypeEnumUnspecified ClusterTelemetryTypeEnum = "UNSPECIFIED"
	ClusterTelemetryTypeEnumDisabled    ClusterTelemetryTypeEnum = "DISABLED"
	ClusterTelemetryTypeEnumEnabled     ClusterTelemetryTypeEnum = "ENABLED"
	ClusterTelemetryTypeEnumSystemOnly  ClusterTelemetryTypeEnum = "SYSTEM_ONLY"
)

func (e *ClusterTelemetryTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "UNSPECIFIED":
		fallthrough
	case "DISABLED":
		fallthrough
	case "ENABLED":
		fallthrough
	case "SYSTEM_ONLY":
		*e = ClusterTelemetryTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ClusterTelemetryTypeEnum: %s", s)
	}
}

// ClusterTelemetry - Telemetry integration for the cluster.
type ClusterTelemetry struct {
	// Type of the integration.
	Type *ClusterTelemetryTypeEnum `json:"type,omitempty"`
}
