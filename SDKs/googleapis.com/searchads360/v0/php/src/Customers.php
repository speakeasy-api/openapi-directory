<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Customers 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Returns all the custom columns associated with the customer in full detail.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersCustomColumnsListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersCustomColumnsListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersCustomColumnsListResponse
     */
	public function searchads360CustomersCustomColumnsList(
        \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersCustomColumnsListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersCustomColumnsListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersCustomColumnsListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v0/customers/{customerId}/customColumns', \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersCustomColumnsListRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersCustomColumnsListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersCustomColumnsListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->googleAdsSearchads360V0ServicesListCustomColumnsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GoogleAdsSearchads360V0ServicesListCustomColumnsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Returns all rows that match the search query. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]() [QueryError]() [QuotaError]() [RequestError]()
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersSearchAds360SearchRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersSearchAds360SearchSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersSearchAds360SearchResponse
     */
	public function searchads360CustomersSearchAds360Search(
        \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersSearchAds360SearchRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersSearchAds360SearchSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersSearchAds360SearchResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v0/customers/{customerId}/searchAds360:search', \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersSearchAds360SearchRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "googleAdsSearchads360V0ServicesSearchSearchAds360Request", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersSearchAds360SearchRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersSearchAds360SearchResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->googleAdsSearchads360V0ServicesSearchSearchAds360Response = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GoogleAdsSearchads360V0ServicesSearchSearchAds360Response', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Returns all rows that match the search stream query. List of thrown errors: [AuthenticationError]() [AuthorizationError]() [HeaderError]() [InternalError]() [QueryError]() [QuotaError]() [RequestError]()
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersSearchAds360SearchStreamRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersSearchAds360SearchStreamSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersSearchAds360SearchStreamResponse
     */
	public function searchads360CustomersSearchAds360SearchStream(
        \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersSearchAds360SearchStreamRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersSearchAds360SearchStreamSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersSearchAds360SearchStreamResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v0/customers/{customerId}/searchAds360:searchStream', \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersSearchAds360SearchStreamRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "googleAdsSearchads360V0ServicesSearchSearchAds360StreamRequest", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersSearchAds360SearchStreamRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\Searchads360CustomersSearchAds360SearchStreamResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->googleAdsSearchads360V0ServicesSearchSearchAds360StreamResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\GoogleAdsSearchads360V0ServicesSearchSearchAds360StreamResponse', 'json');
            }
        }

        return $response;
    }
}