/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Output only. Reason for failure of the authorization attempt for the domain.
 */
export enum AuthorizationAttemptInfoFailureReasonEnum {
  FailureReasonUnspecified = "FAILURE_REASON_UNSPECIFIED",
  Config = "CONFIG",
  Caa = "CAA",
  RateLimited = "RATE_LIMITED",
}

/**
 * Output only. State of the domain for managed certificate issuance.
 */
export enum AuthorizationAttemptInfoStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Authorizing = "AUTHORIZING",
  Authorized = "AUTHORIZED",
  Failed = "FAILED",
}

/**
 * State of the latest attempt to authorize a domain for certificate issuance.
 */
export class AuthorizationAttemptInfo extends SpeakeasyBase {
  /**
   * Output only. Human readable explanation for reaching the state. Provided to help address the configuration issues. Not guaranteed to be stable. For programmatic access use FailureReason enum.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "details" })
  details?: string;

  /**
   * Domain name of the authorization attempt.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  domain?: string;

  /**
   * Output only. Reason for failure of the authorization attempt for the domain.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "failureReason" })
  failureReason?: AuthorizationAttemptInfoFailureReasonEnum;

  /**
   * Output only. State of the domain for managed certificate issuance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: AuthorizationAttemptInfoStateEnum;
}
