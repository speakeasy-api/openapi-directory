/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class LicenseVideosSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  customerAccessCode: string;
}

/**
 * The size of the video to license
 */
export enum LicenseVideosSizeEnum {
  Web = "web",
  Sd = "sd",
  Hd = "hd",
  Fourk = "4k",
}

export class LicenseVideosRequest extends SpeakeasyBase {
  /**
   * List of videos to request licenses for and information about each license transaction; these values override the defaults in the query parameters
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  licenseVideoRequest: shared.LicenseVideoRequest;

  /**
   * The Search ID that led to this licensing event
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search_id",
  })
  searchId?: string;

  /**
   * The size of the video to license
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=size" })
  size?: LicenseVideosSizeEnum;

  /**
   * The subscription ID to use for licensing
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=subscription_id",
  })
  subscriptionId?: string;
}

export class LicenseVideosResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  licenseVideoResultDataList?: shared.LicenseVideoResultDataList;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
