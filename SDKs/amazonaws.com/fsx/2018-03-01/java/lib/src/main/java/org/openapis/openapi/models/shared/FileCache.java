/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * FileCache - A description of a specific Amazon File Cache resource, which is a response object from the &lt;code&gt;DescribeFileCaches&lt;/code&gt; operation.
 */
public class FileCache {
    /**
     * The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;

    public FileCache withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DNSName")
    public String dnsName;

    public FileCache withDNSName(String dnsName) {
        this.dnsName = dnsName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DataRepositoryAssociationIds")
    public String[] dataRepositoryAssociationIds;

    public FileCache withDataRepositoryAssociationIds(String[] dataRepositoryAssociationIds) {
        this.dataRepositoryAssociationIds = dataRepositoryAssociationIds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailureDetails")
    public FileCacheFailureDetails failureDetails;

    public FileCache withFailureDetails(FileCacheFailureDetails failureDetails) {
        this.failureDetails = failureDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FileCacheId")
    public String fileCacheId;

    public FileCache withFileCacheId(String fileCacheId) {
        this.fileCacheId = fileCacheId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FileCacheType")
    public FileCacheTypeEnum fileCacheType;

    public FileCache withFileCacheType(FileCacheTypeEnum fileCacheType) {
        this.fileCacheType = fileCacheType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FileCacheTypeVersion")
    public String fileCacheTypeVersion;

    public FileCache withFileCacheTypeVersion(String fileCacheTypeVersion) {
        this.fileCacheTypeVersion = fileCacheTypeVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("KmsKeyId")
    public String kmsKeyId;

    public FileCache withKmsKeyId(String kmsKeyId) {
        this.kmsKeyId = kmsKeyId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Lifecycle")
    public FileCacheLifecycleEnum lifecycle;

    public FileCache withLifecycle(FileCacheLifecycleEnum lifecycle) {
        this.lifecycle = lifecycle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LustreConfiguration")
    public FileCacheLustreConfiguration lustreConfiguration;

    public FileCache withLustreConfiguration(FileCacheLustreConfiguration lustreConfiguration) {
        this.lustreConfiguration = lustreConfiguration;
        return this;
    }
    
    /**
     * A list of network interface IDs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NetworkInterfaceIds")
    public String[] networkInterfaceIds;

    public FileCache withNetworkInterfaceIds(String[] networkInterfaceIds) {
        this.networkInterfaceIds = networkInterfaceIds;
        return this;
    }
    
    /**
     * An Amazon Web Services account ID. This ID is a 12-digit number that you use to construct Amazon Resource Names (ARNs) for resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OwnerId")
    public String ownerId;

    public FileCache withOwnerId(String ownerId) {
        this.ownerId = ownerId;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify Amazon Web Services resources. We require an ARN when you need to specify a resource unambiguously across all of Amazon Web Services. For more information, see &lt;a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"&gt;Amazon Resource Names (ARNs)&lt;/a&gt; in the &lt;i&gt;Amazon Web Services General Reference&lt;/i&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ResourceARN")
    public String resourceARN;

    public FileCache withResourceARN(String resourceARN) {
        this.resourceARN = resourceARN;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StorageCapacity")
    public Long storageCapacity;

    public FileCache withStorageCapacity(Long storageCapacity) {
        this.storageCapacity = storageCapacity;
        return this;
    }
    
    /**
     * A list of subnet IDs that the cache will be accessible from. You can specify only one subnet ID in a call to the &lt;code&gt;CreateFileCache&lt;/code&gt; operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SubnetIds")
    public String[] subnetIds;

    public FileCache withSubnetIds(String[] subnetIds) {
        this.subnetIds = subnetIds;
        return this;
    }
    
    /**
     * The ID of your virtual private cloud (VPC). For more information, see &lt;a href="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_Subnets.html"&gt;VPC and subnets&lt;/a&gt; in the &lt;i&gt;Amazon VPC User Guide&lt;/i&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VpcId")
    public String vpcId;

    public FileCache withVpcId(String vpcId) {
        this.vpcId = vpcId;
        return this;
    }
    
    public FileCache(){}
}
