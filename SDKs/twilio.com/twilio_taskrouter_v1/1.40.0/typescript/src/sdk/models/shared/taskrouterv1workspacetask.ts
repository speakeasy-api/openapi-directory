/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TaskEnumStatusEnum } from "./taskenumstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Created
 */
export class TaskrouterV1WorkspaceTask extends SpeakeasyBase {
  /**
   * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Task resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "account_sid" })
  accountSid?: string;

  /**
   * An object that contains the [addon](https://www.twilio.com/docs/taskrouter/marketplace) data for all installed addons.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "addons" })
  addons?: string;

  /**
   * The number of seconds since the Task was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "age" })
  age?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "assignment_status" })
  assignmentStatus?: TaskEnumStatusEnum;

  /**
   * The JSON string with custom attributes of the work. **Note** If this property has been assigned a value, it will only be displayed in FETCH action that returns a single resource. Otherwise, it will be null.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  attributes?: string;

  /**
   * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateCreated?: Date;

  /**
   * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateUpdated?: Date;

  /**
   * The URLs of related resources.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "links" })
  links?: Record<string, any>;

  /**
   * The current priority score of the Task as assigned to a Worker by the workflow. Tasks with higher priority values will be assigned before Tasks with lower values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "priority" })
  priority?: number;

  /**
   * The reason the Task was canceled or completed, if applicable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason?: string;

  /**
   * The unique string that we created to identify the Task resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sid" })
  sid?: string;

  /**
   * The SID of the TaskChannel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "task_channel_sid" })
  taskChannelSid?: string;

  /**
   * The unique name of the TaskChannel.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "task_channel_unique_name" })
  taskChannelUniqueName?: string;

  /**
   * The date and time in GMT when the Task entered the TaskQueue, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "task_queue_entered_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  taskQueueEnteredDate?: Date;

  /**
   * The friendly name of the TaskQueue.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "task_queue_friendly_name" })
  taskQueueFriendlyName?: string;

  /**
   * The SID of the TaskQueue.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "task_queue_sid" })
  taskQueueSid?: string;

  /**
   * The amount of time in seconds that the Task can live before being assigned.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeout" })
  timeout?: number;

  /**
   * The absolute URL of the Task resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * The friendly name of the Workflow that is controlling the Task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workflow_friendly_name" })
  workflowFriendlyName?: string;

  /**
   * The SID of the Workflow that is controlling the Task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workflow_sid" })
  workflowSid?: string;

  /**
   * The SID of the Workspace that contains the Task.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workspace_sid" })
  workspaceSid?: string;
}
