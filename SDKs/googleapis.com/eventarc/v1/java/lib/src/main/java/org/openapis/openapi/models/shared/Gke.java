/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Gke - Represents a GKE destination.
 */
public class Gke {
    /**
     * Required. The name of the cluster the GKE service is running in. The cluster must be running in the same project as the trigger being created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cluster")
    public String cluster;
    public Gke withCluster(String cluster) {
        this.cluster = cluster;
        return this;
    }
    
    /**
     * Required. The name of the Google Compute Engine in which the cluster resides, which can either be compute zone (for example, us-central1-a) for the zonal clusters or region (for example, us-central1) for regional clusters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;
    public Gke withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * Required. The namespace the GKE service is running in.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("namespace")
    public String namespace;
    public Gke withNamespace(String namespace) {
        this.namespace = namespace;
        return this;
    }
    
    /**
     * Optional. The relative path on the GKE service the events should be sent to. The value must conform to the definition of a URI path segment (section 3.3 of RFC2396). Examples: "/route", "route", "route/subroute".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public String path;
    public Gke withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * Required. Name of the GKE service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service")
    public String service;
    public Gke withService(String service) {
        this.service = service;
        return this;
    }
    
}
