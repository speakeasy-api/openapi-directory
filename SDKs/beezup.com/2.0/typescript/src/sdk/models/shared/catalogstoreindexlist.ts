/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { CatalogStoreIndex } from "./catalogstoreindex";
import { Expose, Transform } from "class-transformer";

export class CatalogStoreIndexList extends SpeakeasyBase {
  /**
   * The key is the store identifier.
   */
  @SpeakeasyMetadata({ elemType: CatalogStoreIndex })
  @Expose({ name: "links" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, CatalogStoreIndex> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], CatalogStoreIndex);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  links?: Record<string, CatalogStoreIndex>;
}
