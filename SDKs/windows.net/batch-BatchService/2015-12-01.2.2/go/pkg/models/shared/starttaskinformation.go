// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// StartTaskInformationStateEnum - Gets or sets the state of the start task on the compute node.
type StartTaskInformationStateEnum string

const (
	StartTaskInformationStateEnumRunning   StartTaskInformationStateEnum = "running"
	StartTaskInformationStateEnumCompleted StartTaskInformationStateEnum = "completed"
)

func (e StartTaskInformationStateEnum) ToPointer() *StartTaskInformationStateEnum {
	return &e
}

func (e *StartTaskInformationStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "running":
		fallthrough
	case "completed":
		*e = StartTaskInformationStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StartTaskInformationStateEnum: %v", v)
	}
}

// StartTaskInformation - Information about a start task running on a compute node.
type StartTaskInformation struct {
	// Gets or sets the time at which the start task stopped running.
	EndTime *time.Time `json:"endTime,omitempty"`
	// Gets or sets the exit code of the start task.
	ExitCode *int `json:"exitCode,omitempty"`
	// Gets or sets the most recent time at which a retry of the task started running.
	LastRetryTime *time.Time `json:"lastRetryTime,omitempty"`
	// Gets or sets the number of times the task has been retried by the Batch service.
	RetryCount int `json:"retryCount"`
	// Information about an error when scheduling a task.
	SchedulingError *TaskSchedulingError `json:"schedulingError,omitempty"`
	// Gets or sets the time at which the start task started running.
	StartTime time.Time `json:"startTime"`
	// Gets or sets the state of the start task on the compute node.
	State StartTaskInformationStateEnum `json:"state"`
}
