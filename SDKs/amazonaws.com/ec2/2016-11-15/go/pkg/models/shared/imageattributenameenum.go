// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ImageAttributeNameEnum string

const (
	ImageAttributeNameEnumDescription        ImageAttributeNameEnum = "description"
	ImageAttributeNameEnumKernel             ImageAttributeNameEnum = "kernel"
	ImageAttributeNameEnumRamdisk            ImageAttributeNameEnum = "ramdisk"
	ImageAttributeNameEnumLaunchPermission   ImageAttributeNameEnum = "launchPermission"
	ImageAttributeNameEnumProductCodes       ImageAttributeNameEnum = "productCodes"
	ImageAttributeNameEnumBlockDeviceMapping ImageAttributeNameEnum = "blockDeviceMapping"
	ImageAttributeNameEnumSriovNetSupport    ImageAttributeNameEnum = "sriovNetSupport"
	ImageAttributeNameEnumBootMode           ImageAttributeNameEnum = "bootMode"
	ImageAttributeNameEnumTpmSupport         ImageAttributeNameEnum = "tpmSupport"
	ImageAttributeNameEnumUefiData           ImageAttributeNameEnum = "uefiData"
	ImageAttributeNameEnumLastLaunchedTime   ImageAttributeNameEnum = "lastLaunchedTime"
	ImageAttributeNameEnumImdsSupport        ImageAttributeNameEnum = "imdsSupport"
)

func (e *ImageAttributeNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "description":
		fallthrough
	case "kernel":
		fallthrough
	case "ramdisk":
		fallthrough
	case "launchPermission":
		fallthrough
	case "productCodes":
		fallthrough
	case "blockDeviceMapping":
		fallthrough
	case "sriovNetSupport":
		fallthrough
	case "bootMode":
		fallthrough
	case "tpmSupport":
		fallthrough
	case "uefiData":
		fallthrough
	case "lastLaunchedTime":
		fallthrough
	case "imdsSupport":
		*e = ImageAttributeNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ImageAttributeNameEnum: %s", s)
	}
}
