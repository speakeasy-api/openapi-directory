"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import metricupdate as shared_metricupdate
from ..shared import progresstimeseries as shared_progresstimeseries
from ..shared import stragglersummary as shared_stragglersummary
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class StageSummaryStateEnum(str, Enum):
    r"""State of this stage."""
    EXECUTION_STATE_UNKNOWN = 'EXECUTION_STATE_UNKNOWN'
    EXECUTION_STATE_NOT_STARTED = 'EXECUTION_STATE_NOT_STARTED'
    EXECUTION_STATE_RUNNING = 'EXECUTION_STATE_RUNNING'
    EXECUTION_STATE_SUCCEEDED = 'EXECUTION_STATE_SUCCEEDED'
    EXECUTION_STATE_FAILED = 'EXECUTION_STATE_FAILED'
    EXECUTION_STATE_CANCELLED = 'EXECUTION_STATE_CANCELLED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StageSummary:
    r"""Information about a particular execution stage of a job."""
    
    end_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endTime'), 'exclude': lambda f: f is None }})
    r"""End time of this stage. If the work item is completed, this is the actual end time of the stage. Otherwise, it is the predicted end time."""  
    metrics: Optional[list[shared_metricupdate.MetricUpdate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metrics'), 'exclude': lambda f: f is None }})
    r"""Metrics for this stage."""  
    progress: Optional[shared_progresstimeseries.ProgressTimeseries] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('progress'), 'exclude': lambda f: f is None }})
    r"""Information about the progress of some component of job execution."""  
    stage_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stageId'), 'exclude': lambda f: f is None }})
    r"""ID of this stage"""  
    start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'exclude': lambda f: f is None }})
    r"""Start time of this stage."""  
    state: Optional[StageSummaryStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""State of this stage."""  
    straggler_summary: Optional[shared_stragglersummary.StragglerSummary] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stragglerSummary'), 'exclude': lambda f: f is None }})
    r"""Summarized straggler identification details."""  
    