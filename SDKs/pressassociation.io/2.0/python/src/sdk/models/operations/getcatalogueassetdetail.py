"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Any, Optional


@dataclasses.dataclass
class GetCatalogueAssetDetailSecurity:
    
    apikey: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'apikey' }})  
    

@dataclasses.dataclass
class GetCatalogueAssetDetailRequest:
    
    asset_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'assetId', 'style': 'simple', 'explode': False }})
    r"""The identifier for the selected catalogue asset."""  
    catalogue_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'catalogueId', 'style': 'simple', 'explode': False }})
    r"""The identifier for the selected catalogue."""  
    

@dataclasses.dataclass
class GetCatalogueAssetDetailResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_catalogue_asset_detail_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    