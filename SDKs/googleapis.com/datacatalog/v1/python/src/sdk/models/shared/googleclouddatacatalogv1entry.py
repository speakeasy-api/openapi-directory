"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddatacatalogv1bigquerydateshardedspec as shared_googleclouddatacatalogv1bigquerydateshardedspec
from ..shared import googleclouddatacatalogv1bigquerytablespec as shared_googleclouddatacatalogv1bigquerytablespec
from ..shared import googleclouddatacatalogv1businesscontext as shared_googleclouddatacatalogv1businesscontext
from ..shared import googleclouddatacatalogv1cloudbigtablesystemspec as shared_googleclouddatacatalogv1cloudbigtablesystemspec
from ..shared import googleclouddatacatalogv1databasetablespec as shared_googleclouddatacatalogv1databasetablespec
from ..shared import googleclouddatacatalogv1datasource as shared_googleclouddatacatalogv1datasource
from ..shared import googleclouddatacatalogv1datasourceconnectionspec as shared_googleclouddatacatalogv1datasourceconnectionspec
from ..shared import googleclouddatacatalogv1filesetspec as shared_googleclouddatacatalogv1filesetspec
from ..shared import googleclouddatacatalogv1gcsfilesetspec as shared_googleclouddatacatalogv1gcsfilesetspec
from ..shared import googleclouddatacatalogv1lookersystemspec as shared_googleclouddatacatalogv1lookersystemspec
from ..shared import googleclouddatacatalogv1personaldetails as shared_googleclouddatacatalogv1personaldetails
from ..shared import googleclouddatacatalogv1routinespec as shared_googleclouddatacatalogv1routinespec
from ..shared import googleclouddatacatalogv1schema as shared_googleclouddatacatalogv1schema
from ..shared import googleclouddatacatalogv1servicespec as shared_googleclouddatacatalogv1servicespec
from ..shared import googleclouddatacatalogv1sqldatabasesystemspec as shared_googleclouddatacatalogv1sqldatabasesystemspec
from ..shared import googleclouddatacatalogv1systemtimestamps as shared_googleclouddatacatalogv1systemtimestamps
from ..shared import googleclouddatacatalogv1usagesignal as shared_googleclouddatacatalogv1usagesignal
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDatacatalogV1EntryIntegratedSystemEnum(str, Enum):
    r"""Output only. Indicates the entry's source system that Data Catalog integrates with, such as BigQuery, Pub/Sub, or Dataproc Metastore."""
    INTEGRATED_SYSTEM_UNSPECIFIED = 'INTEGRATED_SYSTEM_UNSPECIFIED'
    BIGQUERY = 'BIGQUERY'
    CLOUD_PUBSUB = 'CLOUD_PUBSUB'
    DATAPROC_METASTORE = 'DATAPROC_METASTORE'
    DATAPLEX = 'DATAPLEX'
    CLOUD_SPANNER = 'CLOUD_SPANNER'
    CLOUD_BIGTABLE = 'CLOUD_BIGTABLE'
    CLOUD_SQL = 'CLOUD_SQL'
    LOOKER = 'LOOKER'

class GoogleCloudDatacatalogV1EntryTypeEnum(str, Enum):
    r"""The type of the entry. Only used for entries with types listed in the `EntryType` enum. Currently, only `FILESET` enum value is allowed. All other entries created in Data Catalog must use the `user_specified_type`."""
    ENTRY_TYPE_UNSPECIFIED = 'ENTRY_TYPE_UNSPECIFIED'
    TABLE = 'TABLE'
    MODEL = 'MODEL'
    DATA_STREAM = 'DATA_STREAM'
    FILESET = 'FILESET'
    CLUSTER = 'CLUSTER'
    DATABASE = 'DATABASE'
    DATA_SOURCE_CONNECTION = 'DATA_SOURCE_CONNECTION'
    ROUTINE = 'ROUTINE'
    LAKE = 'LAKE'
    ZONE = 'ZONE'
    SERVICE = 'SERVICE'
    DATABASE_SCHEMA = 'DATABASE_SCHEMA'
    DASHBOARD = 'DASHBOARD'
    EXPLORE = 'EXPLORE'
    LOOK = 'LOOK'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatacatalogV1Entry:
    r"""Entry metadata. A Data Catalog entry represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic) or outside of it. You can use the `linked_resource` field in the entry resource to refer to the original resource ID of the source system. An entry resource contains resource details, for example, its schema. Additionally, you can attach flexible metadata to an entry in the form of a Tag."""
    
    bigquery_date_sharded_spec: Optional[shared_googleclouddatacatalogv1bigquerydateshardedspec.GoogleCloudDatacatalogV1BigQueryDateShardedSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bigqueryDateShardedSpec'), 'exclude': lambda f: f is None }})
    r"""Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name pattern. For more information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding)."""  
    bigquery_table_spec: Optional[shared_googleclouddatacatalogv1bigquerytablespec.GoogleCloudDatacatalogV1BigQueryTableSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bigqueryTableSpec'), 'exclude': lambda f: f is None }})
    r"""Describes a BigQuery table."""  
    business_context: Optional[shared_googleclouddatacatalogv1businesscontext.GoogleCloudDatacatalogV1BusinessContext] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('businessContext'), 'exclude': lambda f: f is None }})
    r"""Business Context of the entry."""  
    cloud_bigtable_system_spec: Optional[shared_googleclouddatacatalogv1cloudbigtablesystemspec.GoogleCloudDatacatalogV1CloudBigtableSystemSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudBigtableSystemSpec'), 'exclude': lambda f: f is None }})
    r"""Specification that applies to all entries that are part of `CLOUD_BIGTABLE` system (user_specified_type)"""  
    database_table_spec: Optional[shared_googleclouddatacatalogv1databasetablespec.GoogleCloudDatacatalogV1DatabaseTableSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('databaseTableSpec'), 'exclude': lambda f: f is None }})
    r"""Specification that applies to a table resource. Valid only for entries with the `TABLE` type."""  
    data_source: Optional[shared_googleclouddatacatalogv1datasource.GoogleCloudDatacatalogV1DataSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataSource'), 'exclude': lambda f: f is None }})
    r"""Physical location of an entry."""  
    data_source_connection_spec: Optional[shared_googleclouddatacatalogv1datasourceconnectionspec.GoogleCloudDatacatalogV1DataSourceConnectionSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataSourceConnectionSpec'), 'exclude': lambda f: f is None }})
    r"""Specification that applies to a data source connection. Valid only for entries with the `DATA_SOURCE_CONNECTION` type. Only one of internal specs can be set at the time, and cannot be changed later."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Entry description that can consist of several sentences or paragraphs that describe entry contents. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). The maximum size is 2000 bytes when encoded in UTF-8. Default value is an empty string."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Display name of an entry. The maximum size is 500 bytes when encoded in UTF-8. Default value is an empty string."""  
    fileset_spec: Optional[shared_googleclouddatacatalogv1filesetspec.GoogleCloudDatacatalogV1FilesetSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filesetSpec'), 'exclude': lambda f: f is None }})
    r"""Specification that applies to a fileset. Valid only for entries with the 'FILESET' type."""  
    fully_qualified_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fullyQualifiedName'), 'exclude': lambda f: f is None }})
    r"""Fully qualified name (FQN) of the resource. Set automatically for entries representing resources from synced systems. Settable only during creation and read-only afterwards. Can be used for search and lookup of the entries. FQNs take two forms: * For non-regionalized resources: `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` * For regionalized resources: `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` Example for a DPMS table: `dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}`"""  
    gcs_fileset_spec: Optional[shared_googleclouddatacatalogv1gcsfilesetspec.GoogleCloudDatacatalogV1GcsFilesetSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gcsFilesetSpec'), 'exclude': lambda f: f is None }})
    r"""Describes a Cloud Storage fileset entry."""  
    integrated_system: Optional[GoogleCloudDatacatalogV1EntryIntegratedSystemEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('integratedSystem'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates the entry's source system that Data Catalog integrates with, such as BigQuery, Pub/Sub, or Dataproc Metastore."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Cloud labels attached to the entry. In Data Catalog, you can create and modify labels attached only to custom entries. Synced entries have unmodifiable labels that come from the source system."""  
    linked_resource: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('linkedResource'), 'exclude': lambda f: f is None }})
    r"""The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}` Output only when the entry is one of the types in the `EntryType` enum. For entries with a `user_specified_type`, this field is optional and defaults to an empty string. The resource string must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), periods (.), colons (:), slashes (/), dashes (-), and hashes (#). The maximum size is 200 bytes when encoded in UTF-8."""  
    looker_system_spec: Optional[shared_googleclouddatacatalogv1lookersystemspec.GoogleCloudDatacatalogV1LookerSystemSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lookerSystemSpec'), 'exclude': lambda f: f is None }})
    r"""Specification that applies to entries that are part `LOOKER` system (user_specified_type)"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. The resource name of an entry in URL format. Note: The entry itself and its child resources might not be stored in the location specified in its name."""  
    personal_details: Optional[shared_googleclouddatacatalogv1personaldetails.GoogleCloudDatacatalogV1PersonalDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('personalDetails'), 'exclude': lambda f: f is None }})
    r"""Entry metadata relevant only to the user and private to them."""  
    routine_spec: Optional[shared_googleclouddatacatalogv1routinespec.GoogleCloudDatacatalogV1RoutineSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('routineSpec'), 'exclude': lambda f: f is None }})
    r"""Specification that applies to a routine. Valid only for entries with the `ROUTINE` type."""  
    schema: Optional[shared_googleclouddatacatalogv1schema.GoogleCloudDatacatalogV1Schema] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schema'), 'exclude': lambda f: f is None }})
    r"""Represents a schema, for example, a BigQuery, GoogleSQL, or Avro schema."""  
    service_spec: Optional[shared_googleclouddatacatalogv1servicespec.GoogleCloudDatacatalogV1ServiceSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceSpec'), 'exclude': lambda f: f is None }})
    r"""Specification that applies to a Service resource. Valid only for entries with the `SERVICE` type."""  
    source_system_timestamps: Optional[shared_googleclouddatacatalogv1systemtimestamps.GoogleCloudDatacatalogV1SystemTimestamps] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceSystemTimestamps'), 'exclude': lambda f: f is None }})
    r"""Timestamps associated with this resource in a particular system."""  
    sql_database_system_spec: Optional[shared_googleclouddatacatalogv1sqldatabasesystemspec.GoogleCloudDatacatalogV1SQLDatabaseSystemSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sqlDatabaseSystemSpec'), 'exclude': lambda f: f is None }})
    r"""Specification that applies to entries that are part `SQL_DATABASE` system (user_specified_type)"""  
    type: Optional[GoogleCloudDatacatalogV1EntryTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of the entry. Only used for entries with types listed in the `EntryType` enum. Currently, only `FILESET` enum value is allowed. All other entries created in Data Catalog must use the `user_specified_type`."""  
    usage_signal: Optional[shared_googleclouddatacatalogv1usagesignal.GoogleCloudDatacatalogV1UsageSignal] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('usageSignal'), 'exclude': lambda f: f is None }})
    r"""The set of all usage signals that Data Catalog stores. Note: Usually, these signals are updated daily. In rare cases, an update may fail but will be performed again on the next day."""  
    user_specified_system: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userSpecifiedSystem'), 'exclude': lambda f: f is None }})
    r"""Indicates the entry's source system that Data Catalog doesn't automatically integrate with. The `user_specified_system` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long."""  
    user_specified_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userSpecifiedType'), 'exclude': lambda f: f is None }})
    r"""Custom entry type that doesn't match any of the values allowed for input and listed in the `EntryType` enum. When creating an entry, first check the type values in the enum. If there are no appropriate types for the new entry, provide a custom value, for example, `my_special_type`. The `user_specified_type` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDatacatalogV1EntryInput:
    r"""Entry metadata. A Data Catalog entry represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic) or outside of it. You can use the `linked_resource` field in the entry resource to refer to the original resource ID of the source system. An entry resource contains resource details, for example, its schema. Additionally, you can attach flexible metadata to an entry in the form of a Tag."""
    
    business_context: Optional[shared_googleclouddatacatalogv1businesscontext.GoogleCloudDatacatalogV1BusinessContext] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('businessContext'), 'exclude': lambda f: f is None }})
    r"""Business Context of the entry."""  
    cloud_bigtable_system_spec: Optional[shared_googleclouddatacatalogv1cloudbigtablesystemspec.GoogleCloudDatacatalogV1CloudBigtableSystemSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cloudBigtableSystemSpec'), 'exclude': lambda f: f is None }})
    r"""Specification that applies to all entries that are part of `CLOUD_BIGTABLE` system (user_specified_type)"""  
    database_table_spec: Optional[shared_googleclouddatacatalogv1databasetablespec.GoogleCloudDatacatalogV1DatabaseTableSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('databaseTableSpec'), 'exclude': lambda f: f is None }})
    r"""Specification that applies to a table resource. Valid only for entries with the `TABLE` type."""  
    data_source: Optional[shared_googleclouddatacatalogv1datasource.GoogleCloudDatacatalogV1DataSourceInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataSource'), 'exclude': lambda f: f is None }})
    r"""Physical location of an entry."""  
    data_source_connection_spec: Optional[shared_googleclouddatacatalogv1datasourceconnectionspec.GoogleCloudDatacatalogV1DataSourceConnectionSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dataSourceConnectionSpec'), 'exclude': lambda f: f is None }})
    r"""Specification that applies to a data source connection. Valid only for entries with the `DATA_SOURCE_CONNECTION` type. Only one of internal specs can be set at the time, and cannot be changed later."""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Entry description that can consist of several sentences or paragraphs that describe entry contents. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). The maximum size is 2000 bytes when encoded in UTF-8. Default value is an empty string."""  
    display_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayName'), 'exclude': lambda f: f is None }})
    r"""Display name of an entry. The maximum size is 500 bytes when encoded in UTF-8. Default value is an empty string."""  
    fileset_spec: Optional[shared_googleclouddatacatalogv1filesetspec.GoogleCloudDatacatalogV1FilesetSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filesetSpec'), 'exclude': lambda f: f is None }})
    r"""Specification that applies to a fileset. Valid only for entries with the 'FILESET' type."""  
    fully_qualified_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fullyQualifiedName'), 'exclude': lambda f: f is None }})
    r"""Fully qualified name (FQN) of the resource. Set automatically for entries representing resources from synced systems. Settable only during creation and read-only afterwards. Can be used for search and lookup of the entries. FQNs take two forms: * For non-regionalized resources: `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` * For regionalized resources: `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` Example for a DPMS table: `dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}`"""  
    gcs_fileset_spec: Optional[shared_googleclouddatacatalogv1gcsfilesetspec.GoogleCloudDatacatalogV1GcsFilesetSpecInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gcsFilesetSpec'), 'exclude': lambda f: f is None }})
    r"""Describes a Cloud Storage fileset entry."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Cloud labels attached to the entry. In Data Catalog, you can create and modify labels attached only to custom entries. Synced entries have unmodifiable labels that come from the source system."""  
    linked_resource: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('linkedResource'), 'exclude': lambda f: f is None }})
    r"""The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}` Output only when the entry is one of the types in the `EntryType` enum. For entries with a `user_specified_type`, this field is optional and defaults to an empty string. The resource string must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), periods (.), colons (:), slashes (/), dashes (-), and hashes (#). The maximum size is 200 bytes when encoded in UTF-8."""  
    looker_system_spec: Optional[shared_googleclouddatacatalogv1lookersystemspec.GoogleCloudDatacatalogV1LookerSystemSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lookerSystemSpec'), 'exclude': lambda f: f is None }})
    r"""Specification that applies to entries that are part `LOOKER` system (user_specified_type)"""  
    personal_details: Optional[shared_googleclouddatacatalogv1personaldetails.GoogleCloudDatacatalogV1PersonalDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('personalDetails'), 'exclude': lambda f: f is None }})
    r"""Entry metadata relevant only to the user and private to them."""  
    routine_spec: Optional[shared_googleclouddatacatalogv1routinespec.GoogleCloudDatacatalogV1RoutineSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('routineSpec'), 'exclude': lambda f: f is None }})
    r"""Specification that applies to a routine. Valid only for entries with the `ROUTINE` type."""  
    schema: Optional[shared_googleclouddatacatalogv1schema.GoogleCloudDatacatalogV1Schema] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schema'), 'exclude': lambda f: f is None }})
    r"""Represents a schema, for example, a BigQuery, GoogleSQL, or Avro schema."""  
    service_spec: Optional[shared_googleclouddatacatalogv1servicespec.GoogleCloudDatacatalogV1ServiceSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serviceSpec'), 'exclude': lambda f: f is None }})
    r"""Specification that applies to a Service resource. Valid only for entries with the `SERVICE` type."""  
    source_system_timestamps: Optional[shared_googleclouddatacatalogv1systemtimestamps.GoogleCloudDatacatalogV1SystemTimestampsInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceSystemTimestamps'), 'exclude': lambda f: f is None }})
    r"""Timestamps associated with this resource in a particular system."""  
    sql_database_system_spec: Optional[shared_googleclouddatacatalogv1sqldatabasesystemspec.GoogleCloudDatacatalogV1SQLDatabaseSystemSpec] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sqlDatabaseSystemSpec'), 'exclude': lambda f: f is None }})
    r"""Specification that applies to entries that are part `SQL_DATABASE` system (user_specified_type)"""  
    type: Optional[GoogleCloudDatacatalogV1EntryTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of the entry. Only used for entries with types listed in the `EntryType` enum. Currently, only `FILESET` enum value is allowed. All other entries created in Data Catalog must use the `user_specified_type`."""  
    usage_signal: Optional[shared_googleclouddatacatalogv1usagesignal.GoogleCloudDatacatalogV1UsageSignalInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('usageSignal'), 'exclude': lambda f: f is None }})
    r"""The set of all usage signals that Data Catalog stores. Note: Usually, these signals are updated daily. In rare cases, an update may fail but will be performed again on the next day."""  
    user_specified_system: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userSpecifiedSystem'), 'exclude': lambda f: f is None }})
    r"""Indicates the entry's source system that Data Catalog doesn't automatically integrate with. The `user_specified_system` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long."""  
    user_specified_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userSpecifiedType'), 'exclude': lambda f: f is None }})
    r"""Custom entry type that doesn't match any of the values allowed for input and listed in the `EntryType` enum. When creating an entry, first check the type values in the enum. If there are no appropriate types for the new entry, provide a custom value, for example, `my_special_type`. The `user_specified_type` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long."""  
    