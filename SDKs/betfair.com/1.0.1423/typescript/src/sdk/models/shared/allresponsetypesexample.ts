/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConnectionMessage } from "./connectionmessage";
import { MarketChangeMessage } from "./marketchangemessage";
import { OrderChangeMessage } from "./orderchangemessage";
import { StatusMessage } from "./statusmessage";
import { Expose, Type } from "class-transformer";

export enum AllResponseTypesExampleOpTypesEnum {
  Connection = "connection",
  Status = "status",
  Mcm = "mcm",
  Ocm = "ocm",
}

/**
 * Responses are received from socket
 */
export class AllResponseTypesExample extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "connection" })
  @Type(() => ConnectionMessage)
  connection?: ConnectionMessage;

  @SpeakeasyMetadata()
  @Expose({ name: "marketChangeMessage" })
  @Type(() => MarketChangeMessage)
  marketChangeMessage?: MarketChangeMessage;

  @SpeakeasyMetadata()
  @Expose({ name: "opTypes" })
  opTypes?: AllResponseTypesExampleOpTypesEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "orderChangeMessage" })
  @Type(() => OrderChangeMessage)
  orderChangeMessage?: OrderChangeMessage;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => StatusMessage)
  status?: StatusMessage;
}
