"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Detection:
    r"""Memory hash detection contributing to the binary family match."""
    
    binary: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('binary'), 'exclude': lambda f: f is None }})
    r"""The name of the binary associated with the memory hash signature detection."""  
    percent_pages_matched: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('percentPagesMatched'), 'exclude': lambda f: f is None }})
    r"""The percentage of memory page hashes in the signature that were matched."""  
    