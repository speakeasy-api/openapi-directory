// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETValidateTemplateActionEnum
type GETValidateTemplateActionEnum string

const (
	GETValidateTemplateActionEnumValidateTemplate GETValidateTemplateActionEnum = "ValidateTemplate"
)

func (e *GETValidateTemplateActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ValidateTemplate":
		*e = GETValidateTemplateActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETValidateTemplateActionEnum: %s", s)
	}
}

// GETValidateTemplateVersionEnum
type GETValidateTemplateVersionEnum string

const (
	GETValidateTemplateVersionEnumTwoThousandAndTen0515 GETValidateTemplateVersionEnum = "2010-05-15"
)

func (e *GETValidateTemplateVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-15":
		*e = GETValidateTemplateVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETValidateTemplateVersionEnum: %s", s)
	}
}

type GETValidateTemplateRequest struct {
	Action GETValidateTemplateActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>Structure containing the template body with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
	TemplateBody *string `queryParam:"style=form,explode=true,name=TemplateBody"`
	// <p>Location of file containing the template body. The URL must point to a template (max size: 460,800 bytes) that is located in an Amazon S3 bucket or a Systems Manager document. For more information, go to <a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html">Template Anatomy</a> in the CloudFormation User Guide.</p> <p>Conditional: You must pass <code>TemplateURL</code> or <code>TemplateBody</code>. If both are passed, only <code>TemplateBody</code> is used.</p>
	TemplateURL       *string                        `queryParam:"style=form,explode=true,name=TemplateURL"`
	Version           GETValidateTemplateVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETValidateTemplateResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
