/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DownloadShare - Download Share information
 */
public class DownloadShare {
    /**
     * Share access key to generate secure link
     */
    @JsonProperty("accessKey")
    public String accessKey;
    public DownloadShare withAccessKey(String accessKey) {
        this.accessKey = accessKey;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.11.0
     * 
     * Classification ID:
     * 
     * * `1` - public
     * 
     * * `2` - internal
     * 
     * * `3` - confidential
     * 
     * * `4` - strictly confidential
     * 
     * 
     * 
     * (default: classification from parent room)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("classification")
    public DownloadShareClassificationEnum classification;
    public DownloadShare withClassification(DownloadShareClassificationEnum classification) {
        this.classification = classification;
        return this;
    }
    
    /**
     * Downloads counter (incremented on each download)
     */
    @JsonProperty("cntDownloads")
    public Integer cntDownloads;
    public DownloadShare withCntDownloads(Integer cntDownloads) {
        this.cntDownloads = cntDownloads;
        return this;
    }
    
    /**
     * Creation date
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("createdAt")
    public OffsetDateTime createdAt;
    public DownloadShare withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * User information
     */
    @JsonProperty("createdBy")
    public UserInfo createdBy;
    public DownloadShare withCreatedBy(UserInfo createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * Path to shared download node
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataUrl")
    public String dataUrl;
    public DownloadShare withDataUrl(String dataUrl) {
        this.dataUrl = dataUrl;
        return this;
    }
    
    /**
     * Expiration date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("expireAt")
    public OffsetDateTime expireAt;
    public DownloadShare withExpireAt(OffsetDateTime expireAt) {
        this.expireAt = expireAt;
        return this;
    }
    
    /**
     * Share ID
     */
    @JsonProperty("id")
    public Long id;
    public DownloadShare withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.11.0
     * 
     * Internal notes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("internalNotes")
    public String internalNotes;
    public DownloadShare withInternalNotes(String internalNotes) {
        this.internalNotes = internalNotes;
        return this;
    }
    
    /**
     * Encrypted share
     * 
     * (this only applies to shared files, not folders)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isEncrypted")
    public Boolean isEncrypted;
    public DownloadShare withIsEncrypted(Boolean isEncrypted) {
        this.isEncrypted = isEncrypted;
        return this;
    }
    
    /**
     * Is share protected by password
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isProtected")
    public Boolean isProtected;
    public DownloadShare withIsProtected(Boolean isProtected) {
        this.isProtected = isProtected;
        return this;
    }
    
    /**
     * Max allowed downloads
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxDownloads")
    public Integer maxDownloads;
    public DownloadShare withMaxDownloads(Integer maxDownloads) {
        this.maxDownloads = maxDownloads;
        return this;
    }
    
    /**
     * Alias name
     */
    @JsonProperty("name")
    public String name;
    public DownloadShare withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Source node ID
     */
    @JsonProperty("nodeId")
    public Long nodeId;
    public DownloadShare withNodeId(Long nodeId) {
        this.nodeId = nodeId;
        return this;
    }
    
    /**
     * Path to shared download node
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodePath")
    public String nodePath;
    public DownloadShare withNodePath(String nodePath) {
        this.nodePath = nodePath;
        return this;
    }
    
    /**
     * Node type
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nodeType")
    public String nodeType;
    public DownloadShare withNodeType(String nodeType) {
        this.nodeType = nodeType;
        return this;
    }
    
    /**
     * User notes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public DownloadShare withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.20.0
     * 
     * Notify creator on every download.
     */
    @JsonProperty("notifyCreator")
    public Boolean notifyCreator;
    public DownloadShare withNotifyCreator(Boolean notifyCreator) {
        this.notifyCreator = notifyCreator;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.11.0
     * 
     * CSV string of recipient email addresses
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recipients")
    public String recipients;
    public DownloadShare withRecipients(String recipients) {
        this.recipients = recipients;
        return this;
    }
    
    /**
     * Show creator first and last name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("showCreatorName")
    public Boolean showCreatorName;
    public DownloadShare withShowCreatorName(Boolean showCreatorName) {
        this.showCreatorName = showCreatorName;
        return this;
    }
    
    /**
     * Show creator email address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("showCreatorUsername")
    public Boolean showCreatorUsername;
    public DownloadShare withShowCreatorUsername(Boolean showCreatorUsername) {
        this.showCreatorUsername = showCreatorUsername;
        return this;
    }
    
    /**
     * &amp;#128679; Deprecated since v4.11.0
     * 
     * CSV string of recipient MSISDNs
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("smsRecipients")
    public String smsRecipients;
    public DownloadShare withSmsRecipients(String smsRecipients) {
        this.smsRecipients = smsRecipients;
        return this;
    }
    
    /**
     * Modification date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updatedAt")
    public OffsetDateTime updatedAt;
    public DownloadShare withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * User information
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updatedBy")
    public UserInfo updatedBy;
    public DownloadShare withUpdatedBy(UserInfo updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }
    
}
