<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GlobalReplicationGroup - <p>Consists of a primary cluster that accepts writes and an associated secondary cluster that resides in a different Amazon region. The secondary cluster accepts only reads. The primary cluster automatically replicates updates to the secondary cluster.</p> <ul> <li> <p>The <b>GlobalReplicationGroupIdSuffix</b> represents the name of the Global datastore, which is what you use to associate a secondary cluster.</p> </li> </ul>
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GlobalReplicationGroup
{
	
    public ?string $arn = null;
    
	
    public ?bool $atRestEncryptionEnabled = null;
    
	
    public ?bool $authTokenEnabled = null;
    
	
    public ?string $cacheNodeType = null;
    
	
    public ?bool $clusterEnabled = null;
    
	
    public ?string $engine = null;
    
	
    public ?string $engineVersion = null;
    
    /**
     * $globalNodeGroups
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GlobalNodeGroupList> $globalNodeGroups
     */
	
    public ?array $globalNodeGroups = null;
    
	
    public ?string $globalReplicationGroupDescription = null;
    
	
    public ?string $globalReplicationGroupId = null;
    
    /**
     * $members
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GlobalReplicationGroupMemberList> $members
     */
	
    public ?array $members = null;
    
	
    public ?string $status = null;
    
	
    public ?bool $transitEncryptionEnabled = null;
    
	public function __construct()
	{
		$this->arn = null;
		$this->atRestEncryptionEnabled = null;
		$this->authTokenEnabled = null;
		$this->cacheNodeType = null;
		$this->clusterEnabled = null;
		$this->engine = null;
		$this->engineVersion = null;
		$this->globalNodeGroups = null;
		$this->globalReplicationGroupDescription = null;
		$this->globalReplicationGroupId = null;
		$this->members = null;
		$this->status = null;
		$this->transitEncryptionEnabled = null;
	}
}
