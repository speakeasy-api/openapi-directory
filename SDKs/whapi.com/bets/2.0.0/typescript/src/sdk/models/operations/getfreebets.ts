/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetFreeBetsRequest extends SpeakeasyBase {
  /**
   * A unique identifier of your application that is generated by the API portal.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=apiKey" })
  apiKey: string;

  /**
   * Another unique identifier for your application.
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=apiSecret",
  })
  apiSecret: string;

  /**
   * The ticket obtained from the sessions API
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=apiTicket",
  })
  apiTicket: string;

  /**
   * Specify fields from the default to exclude (Comma Separated List)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=exclude",
  })
  exclude?: string[];

  /**
   * Specify an absolute field list to return (Comma Separated List)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=fields",
  })
  fields?: string[];

  /**
   * Specify fields in addition to the default to return (Comma Separated List)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=include",
  })
  include?: string[];
}

export class GetFreeBetsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata({ elemType: shared.FreeBetDetail })
  freeBet?: shared.FreeBetDetail[];
}
