"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import agreementstatustype_enum as shared_agreementstatustype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateAgreementRequest:
    
    agreement_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AgreementId') }})  
    server_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ServerId') }})  
    access_role: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccessRole'), 'exclude': lambda f: f is None }})  
    base_directory: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BaseDirectory'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})  
    local_profile_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LocalProfileId'), 'exclude': lambda f: f is None }})  
    partner_profile_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PartnerProfileId'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_agreementstatustype_enum.AgreementStatusTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status'), 'exclude': lambda f: f is None }})  
    