// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
	"time"
)

// InvoiceStatusEnum - Invoice status
type InvoiceStatusEnum string

const (
	InvoiceStatusEnumDraft         InvoiceStatusEnum = "draft"
	InvoiceStatusEnumSubmitted     InvoiceStatusEnum = "submitted"
	InvoiceStatusEnumAuthorised    InvoiceStatusEnum = "authorised"
	InvoiceStatusEnumPartiallyPaid InvoiceStatusEnum = "partially_paid"
	InvoiceStatusEnumPaid          InvoiceStatusEnum = "paid"
	InvoiceStatusEnumVoid          InvoiceStatusEnum = "void"
	InvoiceStatusEnumCredit        InvoiceStatusEnum = "credit"
	InvoiceStatusEnumDeleted       InvoiceStatusEnum = "deleted"
)

func (e *InvoiceStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "draft":
		fallthrough
	case "submitted":
		fallthrough
	case "authorised":
		fallthrough
	case "partially_paid":
		fallthrough
	case "paid":
		fallthrough
	case "void":
		fallthrough
	case "credit":
		fallthrough
	case "deleted":
		*e = InvoiceStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceStatusEnum: %s", s)
	}
}

// InvoiceInvoiceTypeEnum - Invoice type
type InvoiceInvoiceTypeEnum string

const (
	InvoiceInvoiceTypeEnumStandard InvoiceInvoiceTypeEnum = "standard"
	InvoiceInvoiceTypeEnumCredit   InvoiceInvoiceTypeEnum = "credit"
	InvoiceInvoiceTypeEnumService  InvoiceInvoiceTypeEnum = "service"
	InvoiceInvoiceTypeEnumProduct  InvoiceInvoiceTypeEnum = "product"
	InvoiceInvoiceTypeEnumSupplier InvoiceInvoiceTypeEnum = "supplier"
	InvoiceInvoiceTypeEnumOther    InvoiceInvoiceTypeEnum = "other"
)

func (e *InvoiceInvoiceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "standard":
		fallthrough
	case "credit":
		fallthrough
	case "service":
		fallthrough
	case "product":
		fallthrough
	case "supplier":
		fallthrough
	case "other":
		*e = InvoiceInvoiceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceInvoiceTypeEnum: %s", s)
	}
}

type InvoiceInput struct {
	// Balance of invoice due.
	Balance        *float64 `json:"balance,omitempty"`
	BillingAddress *Address `json:"billing_address,omitempty"`
	// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	Currency *CurrencyEnum `json:"currency,omitempty"`
	// Currency Exchange Rate at the time entity was recorded/generated.
	CurrencyRate *float64 `json:"currency_rate,omitempty"`
	// The customer this entity is linked to.
	Customer *LinkedCustomerInput `json:"customer,omitempty"`
	// Customer memo
	CustomerMemo *string `json:"customer_memo,omitempty"`
	// Amount of deposit made to this invoice.
	Deposit *float64 `json:"deposit,omitempty"`
	// Discount percentage applied to this invoice.
	DiscountPercentage *float64 `json:"discount_percentage,omitempty"`
	// The invoice due date is the date on which a payment or invoice is scheduled to be received by the seller - YYYY-MM-DD.
	DueDate *types.Date `json:"due_date,omitempty"`
	// Date invoice was issued - YYYY-MM-DD.
	InvoiceDate *types.Date `json:"invoice_date,omitempty"`
	// Invoice sent to contact/customer.
	InvoiceSent *bool                  `json:"invoice_sent,omitempty"`
	LineItems   []InvoiceLineItemInput `json:"line_items,omitempty"`
	// Invoice number.
	Number *string `json:"number,omitempty"`
	// A PO Number uniquely identifies a purchase order and is generally defined by the buyer. The buyer will match the PO number in the invoice to the Purchase Order.
	PoNumber *string `json:"po_number,omitempty"`
	// Optional invoice reference.
	Reference *string `json:"reference,omitempty"`
	// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
	RowVersion      *string  `json:"row_version,omitempty"`
	ShippingAddress *Address `json:"shipping_address,omitempty"`
	// URL link to a source document - shown as 'Go to [appName]' in the downstream app. Currently only supported for Xero.
	SourceDocumentURL *string `json:"source_document_url,omitempty"`
	// Invoice status
	Status *InvoiceStatusEnum `json:"status,omitempty"`
	// Sub-total amount, normally before tax.
	SubTotal *float64 `json:"sub_total,omitempty"`
	// Applicable tax id/code override if tax is not supplied on a line item basis.
	TaxCode *string `json:"tax_code,omitempty"`
	// Amounts are including tax
	TaxInclusive *bool `json:"tax_inclusive,omitempty"`
	// Optional invoice template
	TemplateID *string `json:"template_id,omitempty"`
	// Terms of payment.
	Terms *string `json:"terms,omitempty"`
	// Total amount of invoice, including tax.
	Total *float64 `json:"total,omitempty"`
	// Total tax amount applied to this invoice.
	TotalTax *float64 `json:"total_tax,omitempty"`
	// Invoice type
	Type *InvoiceInvoiceTypeEnum `json:"type,omitempty"`
}

type Invoice struct {
	// Balance of invoice due.
	Balance        *float64 `json:"balance,omitempty"`
	BillingAddress *Address `json:"billing_address,omitempty"`
	// The date and time when the object was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The user who created the object.
	CreatedBy *string `json:"created_by,omitempty"`
	// Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
	Currency *CurrencyEnum `json:"currency,omitempty"`
	// Currency Exchange Rate at the time entity was recorded/generated.
	CurrencyRate *float64 `json:"currency_rate,omitempty"`
	// The customer this entity is linked to.
	Customer *LinkedCustomer `json:"customer,omitempty"`
	// Customer memo
	CustomerMemo *string `json:"customer_memo,omitempty"`
	// Amount of deposit made to this invoice.
	Deposit *float64 `json:"deposit,omitempty"`
	// Discount percentage applied to this invoice.
	DiscountPercentage *float64 `json:"discount_percentage,omitempty"`
	// The third-party API ID of original entity
	DownstreamID *string `json:"downstream_id,omitempty"`
	// The invoice due date is the date on which a payment or invoice is scheduled to be received by the seller - YYYY-MM-DD.
	DueDate *types.Date `json:"due_date,omitempty"`
	// A unique identifier for an object.
	ID *string `json:"id,omitempty"`
	// Date invoice was issued - YYYY-MM-DD.
	InvoiceDate *types.Date `json:"invoice_date,omitempty"`
	// Invoice sent to contact/customer.
	InvoiceSent *bool             `json:"invoice_sent,omitempty"`
	LineItems   []InvoiceLineItem `json:"line_items,omitempty"`
	// Invoice number.
	Number *string `json:"number,omitempty"`
	// A PO Number uniquely identifies a purchase order and is generally defined by the buyer. The buyer will match the PO number in the invoice to the Purchase Order.
	PoNumber *string `json:"po_number,omitempty"`
	// Optional invoice reference.
	Reference *string `json:"reference,omitempty"`
	// A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
	RowVersion      *string  `json:"row_version,omitempty"`
	ShippingAddress *Address `json:"shipping_address,omitempty"`
	// URL link to a source document - shown as 'Go to [appName]' in the downstream app. Currently only supported for Xero.
	SourceDocumentURL *string `json:"source_document_url,omitempty"`
	// Invoice status
	Status *InvoiceStatusEnum `json:"status,omitempty"`
	// Sub-total amount, normally before tax.
	SubTotal *float64 `json:"sub_total,omitempty"`
	// Applicable tax id/code override if tax is not supplied on a line item basis.
	TaxCode *string `json:"tax_code,omitempty"`
	// Amounts are including tax
	TaxInclusive *bool `json:"tax_inclusive,omitempty"`
	// Optional invoice template
	TemplateID *string `json:"template_id,omitempty"`
	// Terms of payment.
	Terms *string `json:"terms,omitempty"`
	// Total amount of invoice, including tax.
	Total *float64 `json:"total,omitempty"`
	// Total tax amount applied to this invoice.
	TotalTax *float64 `json:"total_tax,omitempty"`
	// Invoice type
	Type *InvoiceInvoiceTypeEnum `json:"type,omitempty"`
	// The date and time when the object was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The user who last updated the object.
	UpdatedBy *string `json:"updated_by,omitempty"`
}
