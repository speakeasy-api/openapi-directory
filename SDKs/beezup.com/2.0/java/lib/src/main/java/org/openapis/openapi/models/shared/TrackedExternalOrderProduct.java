/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class TrackedExternalOrderProduct {
    /**
     * The product's margin for the external order. This property is voluntarily a string because the value could be an invalid one
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("margin")
    public String margin;

    public TrackedExternalOrderProduct withMargin(String margin) {
        this.margin = margin;
        return this;
    }
    
    /**
     * We tried to get the catalog product if it's still active based on the product SKU. This property can be null, if we cannot found the product. This is possible if the product is not referenced in the imported catalog.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productActive")
    public Boolean productActive;

    public TrackedExternalOrderProduct withProductActive(Boolean productActive) {
        this.productActive = productActive;
        return this;
    }
    
    /**
     * We tried to get the catalog product identifier based on the product SKU. This property can be null, if we cannot found the product. This is possible if the product is not referenced in the imported catalog.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productId")
    public String productId;

    public TrackedExternalOrderProduct withProductId(String productId) {
        this.productId = productId;
        return this;
    }
    
    /**
     * We tried to get the catalog product image Url based on the product SKU. This property can be null, if we cannot found the product. This is possible if the product is not referenced in the imported catalog.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productImageUrl")
    public String productImageUrl;

    public TrackedExternalOrderProduct withProductImageUrl(String productImageUrl) {
        this.productImageUrl = productImageUrl;
        return this;
    }
    
    /**
     * The product sku received for the external order
     */
    @JsonProperty("productSku")
    public String productSku;

    public TrackedExternalOrderProduct withProductSku(String productSku) {
        this.productSku = productSku;
        return this;
    }
    
    /**
     * We tried to get the catalog product title based on the product SKU. This property can be null, if we cannot found the product. This is possible if the product is not referenced in the imported catalog.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productTitle")
    public String productTitle;

    public TrackedExternalOrderProduct withProductTitle(String productTitle) {
        this.productTitle = productTitle;
        return this;
    }
    
    /**
     * The quantity of this product for the external order. This property is voluntarily a string because the value could be an invalid one
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public String quantity;

    public TrackedExternalOrderProduct withQuantity(String quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * The product's unit price for the external order. This property is voluntarily a string because the value could be an invalid one.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitPrice")
    public String unitPrice;

    public TrackedExternalOrderProduct withUnitPrice(String unitPrice) {
        this.unitPrice = unitPrice;
        return this;
    }
    
    public TrackedExternalOrderProduct(@JsonProperty("productSku") String productSku) {
        this.productSku = productSku;
  }
}
