// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CreateVpcPeeringConnectionResultVpcPeeringConnectionAccepterVpcInfoCidrBlockSet - Describes an IPv4 CIDR block.
type CreateVpcPeeringConnectionResultVpcPeeringConnectionAccepterVpcInfoCidrBlockSet struct {
	CidrBlock *string
}

// CreateVpcPeeringConnectionResultVpcPeeringConnectionAccepterVpcInfoIpv6CidrBlockSet - Describes an IPv6 CIDR block.
type CreateVpcPeeringConnectionResultVpcPeeringConnectionAccepterVpcInfoIpv6CidrBlockSet struct {
	Ipv6CidrBlock *string
}

// CreateVpcPeeringConnectionResultVpcPeeringConnectionAccepterVpcInfoPeeringOptions - Information about the VPC peering connection options for the accepter or requester VPC.
type CreateVpcPeeringConnectionResultVpcPeeringConnectionAccepterVpcInfoPeeringOptions struct {
	AllowDNSResolutionFromRemoteVpc            *bool
	AllowEgressFromLocalClassicLinkToRemoteVpc *bool
	AllowEgressFromLocalVpcToRemoteClassicLink *bool
}

// CreateVpcPeeringConnectionResultVpcPeeringConnectionAccepterVpcInfo - Information about the accepter VPC. CIDR block information is only returned when describing an active VPC peering connection.
type CreateVpcPeeringConnectionResultVpcPeeringConnectionAccepterVpcInfo struct {
	CidrBlock        *string
	CidrBlockSet     []CreateVpcPeeringConnectionResultVpcPeeringConnectionAccepterVpcInfoCidrBlockSet
	Ipv6CidrBlockSet []CreateVpcPeeringConnectionResultVpcPeeringConnectionAccepterVpcInfoIpv6CidrBlockSet
	OwnerID          *string
	PeeringOptions   *CreateVpcPeeringConnectionResultVpcPeeringConnectionAccepterVpcInfoPeeringOptions
	Region           *string
	VpcID            *string
}

// CreateVpcPeeringConnectionResultVpcPeeringConnectionRequesterVpcInfoCidrBlockSet - Describes an IPv4 CIDR block.
type CreateVpcPeeringConnectionResultVpcPeeringConnectionRequesterVpcInfoCidrBlockSet struct {
	CidrBlock *string
}

// CreateVpcPeeringConnectionResultVpcPeeringConnectionRequesterVpcInfoIpv6CidrBlockSet - Describes an IPv6 CIDR block.
type CreateVpcPeeringConnectionResultVpcPeeringConnectionRequesterVpcInfoIpv6CidrBlockSet struct {
	Ipv6CidrBlock *string
}

// CreateVpcPeeringConnectionResultVpcPeeringConnectionRequesterVpcInfoPeeringOptions - Information about the VPC peering connection options for the accepter or requester VPC.
type CreateVpcPeeringConnectionResultVpcPeeringConnectionRequesterVpcInfoPeeringOptions struct {
	AllowDNSResolutionFromRemoteVpc            *bool
	AllowEgressFromLocalClassicLinkToRemoteVpc *bool
	AllowEgressFromLocalVpcToRemoteClassicLink *bool
}

// CreateVpcPeeringConnectionResultVpcPeeringConnectionRequesterVpcInfo - Information about the requester VPC. CIDR block information is only returned when describing an active VPC peering connection.
type CreateVpcPeeringConnectionResultVpcPeeringConnectionRequesterVpcInfo struct {
	CidrBlock        *string
	CidrBlockSet     []CreateVpcPeeringConnectionResultVpcPeeringConnectionRequesterVpcInfoCidrBlockSet
	Ipv6CidrBlockSet []CreateVpcPeeringConnectionResultVpcPeeringConnectionRequesterVpcInfoIpv6CidrBlockSet
	OwnerID          *string
	PeeringOptions   *CreateVpcPeeringConnectionResultVpcPeeringConnectionRequesterVpcInfoPeeringOptions
	Region           *string
	VpcID            *string
}

// CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnum - The status of the VPC peering connection.
type CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnum string

const (
	CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnumInitiatingRequest CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnum = "initiating-request"
	CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnumPendingAcceptance CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnum = "pending-acceptance"
	CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnumActive            CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnum = "active"
	CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnumDeleted           CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnum = "deleted"
	CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnumRejected          CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnum = "rejected"
	CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnumFailed            CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnum = "failed"
	CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnumExpired           CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnum = "expired"
	CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnumProvisioning      CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnum = "provisioning"
	CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnumDeleting          CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnum = "deleting"
)

func (e *CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "initiating-request":
		fallthrough
	case "pending-acceptance":
		fallthrough
	case "active":
		fallthrough
	case "deleted":
		fallthrough
	case "rejected":
		fallthrough
	case "failed":
		fallthrough
	case "expired":
		fallthrough
	case "provisioning":
		fallthrough
	case "deleting":
		*e = CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnum: %s", s)
	}
}

// CreateVpcPeeringConnectionResultVpcPeeringConnectionStatus - The status of the VPC peering connection.
type CreateVpcPeeringConnectionResultVpcPeeringConnectionStatus struct {
	Code    *CreateVpcPeeringConnectionResultVpcPeeringConnectionStatusCodeEnum
	Message *string
}

// CreateVpcPeeringConnectionResultVpcPeeringConnectionTags - Describes a tag.
type CreateVpcPeeringConnectionResultVpcPeeringConnectionTags struct {
	Key   *string
	Value *string
}

// CreateVpcPeeringConnectionResultVpcPeeringConnection - Information about the VPC peering connection.
type CreateVpcPeeringConnectionResultVpcPeeringConnection struct {
	AccepterVpcInfo        *CreateVpcPeeringConnectionResultVpcPeeringConnectionAccepterVpcInfo
	ExpirationTime         *time.Time
	RequesterVpcInfo       *CreateVpcPeeringConnectionResultVpcPeeringConnectionRequesterVpcInfo
	Status                 *CreateVpcPeeringConnectionResultVpcPeeringConnectionStatus
	Tags                   []CreateVpcPeeringConnectionResultVpcPeeringConnectionTags
	VpcPeeringConnectionID *string
}

// CreateVpcPeeringConnectionResult - Success
type CreateVpcPeeringConnectionResult struct {
	VpcPeeringConnection *CreateVpcPeeringConnectionResultVpcPeeringConnection
}
