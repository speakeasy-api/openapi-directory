"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class PaySchedulePaySchedulePayFrequencyEnum(str, Enum):
    r"""The pay schedules' pay frequency"""
    WEEKLY = 'Weekly'
    MONTHLY = 'Monthly'
    TWO_WEEKLY = 'TwoWeekly'
    FOUR_WEEKLY = 'FourWeekly'
    YEARLY = 'Yearly'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaySchedulePaySchedule:
    
    meta_data: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MetaData'), 'exclude': lambda f: f is None }})
    r"""The pay schedules' meta data"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})
    r"""The pay schedules' name"""  
    pay_frequency: Optional[PaySchedulePaySchedulePayFrequencyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PayFrequency'), 'exclude': lambda f: f is None }})
    r"""The pay schedules' pay frequency"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaySchedule:
    r"""The pay schedule object."""
    
    pay_schedule: Optional[PaySchedulePaySchedule] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PaySchedule'), 'exclude': lambda f: f is None }})  
    