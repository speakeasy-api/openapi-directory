/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * The permission to grant to the team for this project. Can be one of:
 *
 * @remarks
 * \* `read` - team members can read, but not write to or administer this project.
 * \* `write` - team members can read and write, but not administer this project.
 * \* `admin` - team members can read, write and administer this project.
 * Default: the team's `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/enterprise-server@2.19/rest/overview/resources-in-the-rest-api#http-verbs)."
 * **Note**: If you pass the `hellcat-preview` media type, you can promote—but not demote—a `permission` attribute inherited from a parent team.
 */
export enum TeamsAddOrUpdateProjectPermissionsRequestBodyPermissionEnum {
  Read = "read",
  Write = "write",
  Admin = "admin",
}

export class TeamsAddOrUpdateProjectPermissionsRequestBody extends SpeakeasyBase {
  /**
   * The permission to grant to the team for this project. Can be one of:
   *
   * @remarks
   * \* `read` - team members can read, but not write to or administer this project.
   * \* `write` - team members can read and write, but not administer this project.
   * \* `admin` - team members can read, write and administer this project.
   * Default: the team's `permission` attribute will be used to determine what permission to grant the team on this project. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see "[HTTP verbs](https://docs.github.com/enterprise-server@2.19/rest/overview/resources-in-the-rest-api#http-verbs)."
   * **Note**: If you pass the `hellcat-preview` media type, you can promote—but not demote—a `permission` attribute inherited from a parent team.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "permission" })
  permission?: TeamsAddOrUpdateProjectPermissionsRequestBodyPermissionEnum;
}

export class TeamsAddOrUpdateProjectPermissionsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: TeamsAddOrUpdateProjectPermissionsRequestBody;

  /**
   * This API is under preview and subject to change.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=accept" })
  accept: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=project_id",
  })
  projectId: number;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=team_id",
  })
  teamId: number;
}

/**
 * Forbidden if the project is not owned by the organization
 */
export class TeamsAddOrUpdateProjectPermissions403ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "documentation_url" })
  documentationUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;
}

export class TeamsAddOrUpdateProjectPermissionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Forbidden if the project is not owned by the organization
   */
  @SpeakeasyMetadata()
  teamsAddOrUpdateProjectPermissions403ApplicationJSONObject?: TeamsAddOrUpdateProjectPermissions403ApplicationJSON;
}
