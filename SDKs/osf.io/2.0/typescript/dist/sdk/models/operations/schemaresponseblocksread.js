"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchemaResponseBlocksReadResponse = exports.SchemaResponseBlocksReadRegistrationSchemaBlock = exports.SchemaResponseBlocksReadRegistrationSchemaBlockRelationships = exports.SchemaResponseBlocksReadRegistrationSchemaBlockLinks = exports.SchemaResponseBlocksReadRegistrationSchemaBlockAttributes = exports.SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum = exports.SchemaResponseBlocksReadRequest = void 0;
var utils_1 = require("../../../internal/utils");
var SchemaResponseBlocksReadRequest = /** @class */ (function (_super) {
    __extends(SchemaResponseBlocksReadRequest, _super);
    function SchemaResponseBlocksReadRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=schema_response_id",
        }),
        __metadata("design:type", String)
    ], SchemaResponseBlocksReadRequest.prototype, "schemaResponseId", void 0);
    return SchemaResponseBlocksReadRequest;
}(utils_1.SpeakeasyBase));
exports.SchemaResponseBlocksReadRequest = SchemaResponseBlocksReadRequest;
/**
 * A string that represents the type of input that the schema will take and the UI element that appears to the user on the frontend.
 */
var SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum;
(function (SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum) {
    SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum["PageHeading"] = "page-heading";
    SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum["SectionHeading"] = "section-heading";
    SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum["SubsectionHeading"] = "subsection-heading";
    SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum["Paragraph"] = "paragraph";
    SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum["QuestionLabel"] = "question-label";
    SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum["ShortTextInput"] = "short-text-input";
    SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum["LongTextInput"] = "long-text-input";
    SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum["FileInput"] = "file-input";
    SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum["ContributorsInput"] = "contributors-input";
    SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum["SingleSelectInput"] = "single-select-input";
    SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum["MultiSelectInput"] = "multi-select-input";
    SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum["SelectInputOption"] = "select-input-option";
    SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum["SelectOtherOption"] = "select-other-option";
})(SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum = exports.SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum || (exports.SchemaResponseBlocksReadRegistrationSchemaBlockAttributesBlockTypeEnum = {}));
/**
 * The attributes of the Registration Schema Block.
 */
var SchemaResponseBlocksReadRegistrationSchemaBlockAttributes = /** @class */ (function (_super) {
    __extends(SchemaResponseBlocksReadRegistrationSchemaBlockAttributes, _super);
    function SchemaResponseBlocksReadRegistrationSchemaBlockAttributes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponseBlocksReadRegistrationSchemaBlockAttributes.prototype, "blockType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponseBlocksReadRegistrationSchemaBlockAttributes.prototype, "displayText", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponseBlocksReadRegistrationSchemaBlockAttributes.prototype, "exampleText", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], SchemaResponseBlocksReadRegistrationSchemaBlockAttributes.prototype, "index", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponseBlocksReadRegistrationSchemaBlockAttributes.prototype, "registrationResponseKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], SchemaResponseBlocksReadRegistrationSchemaBlockAttributes.prototype, "required", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponseBlocksReadRegistrationSchemaBlockAttributes.prototype, "schemaBlockGroupKey", void 0);
    return SchemaResponseBlocksReadRegistrationSchemaBlockAttributes;
}(utils_1.SpeakeasyBase));
exports.SchemaResponseBlocksReadRegistrationSchemaBlockAttributes = SchemaResponseBlocksReadRegistrationSchemaBlockAttributes;
/**
 * URLs to alternative representations of the  Registration Schema Block.
 */
var SchemaResponseBlocksReadRegistrationSchemaBlockLinks = /** @class */ (function (_super) {
    __extends(SchemaResponseBlocksReadRegistrationSchemaBlockLinks, _super);
    function SchemaResponseBlocksReadRegistrationSchemaBlockLinks() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponseBlocksReadRegistrationSchemaBlockLinks.prototype, "self", void 0);
    return SchemaResponseBlocksReadRegistrationSchemaBlockLinks;
}(utils_1.SpeakeasyBase));
exports.SchemaResponseBlocksReadRegistrationSchemaBlockLinks = SchemaResponseBlocksReadRegistrationSchemaBlockLinks;
/**
 * Links to other entities or entity collections that have a relationship to the Schema Response Action.
 */
var SchemaResponseBlocksReadRegistrationSchemaBlockRelationships = /** @class */ (function (_super) {
    __extends(SchemaResponseBlocksReadRegistrationSchemaBlockRelationships, _super);
    function SchemaResponseBlocksReadRegistrationSchemaBlockRelationships() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponseBlocksReadRegistrationSchemaBlockRelationships.prototype, "schema", void 0);
    return SchemaResponseBlocksReadRegistrationSchemaBlockRelationships;
}(utils_1.SpeakeasyBase));
exports.SchemaResponseBlocksReadRegistrationSchemaBlockRelationships = SchemaResponseBlocksReadRegistrationSchemaBlockRelationships;
/**
 * OK
 */
var SchemaResponseBlocksReadRegistrationSchemaBlock = /** @class */ (function (_super) {
    __extends(SchemaResponseBlocksReadRegistrationSchemaBlock, _super);
    function SchemaResponseBlocksReadRegistrationSchemaBlock() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", SchemaResponseBlocksReadRegistrationSchemaBlockAttributes)
    ], SchemaResponseBlocksReadRegistrationSchemaBlock.prototype, "attributes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponseBlocksReadRegistrationSchemaBlock.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", SchemaResponseBlocksReadRegistrationSchemaBlockLinks)
    ], SchemaResponseBlocksReadRegistrationSchemaBlock.prototype, "links", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", SchemaResponseBlocksReadRegistrationSchemaBlockRelationships)
    ], SchemaResponseBlocksReadRegistrationSchemaBlock.prototype, "relationships", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponseBlocksReadRegistrationSchemaBlock.prototype, "type", void 0);
    return SchemaResponseBlocksReadRegistrationSchemaBlock;
}(utils_1.SpeakeasyBase));
exports.SchemaResponseBlocksReadRegistrationSchemaBlock = SchemaResponseBlocksReadRegistrationSchemaBlock;
var SchemaResponseBlocksReadResponse = /** @class */ (function (_super) {
    __extends(SchemaResponseBlocksReadResponse, _super);
    function SchemaResponseBlocksReadResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], SchemaResponseBlocksReadResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponseBlocksReadResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], SchemaResponseBlocksReadResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], SchemaResponseBlocksReadResponse.prototype, "rawResponse", void 0);
    return SchemaResponseBlocksReadResponse;
}(utils_1.SpeakeasyBase));
exports.SchemaResponseBlocksReadResponse = SchemaResponseBlocksReadResponse;
