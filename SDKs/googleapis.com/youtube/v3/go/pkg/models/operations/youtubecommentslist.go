// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type YoutubeCommentsListSecurity struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

// YoutubeCommentsListTextFormatEnum - The requested text format for the returned comments.
type YoutubeCommentsListTextFormatEnum string

const (
	YoutubeCommentsListTextFormatEnumTextFormatUnspecified YoutubeCommentsListTextFormatEnum = "textFormatUnspecified"
	YoutubeCommentsListTextFormatEnumHTML                  YoutubeCommentsListTextFormatEnum = "html"
	YoutubeCommentsListTextFormatEnumPlainText             YoutubeCommentsListTextFormatEnum = "plainText"
)

func (e *YoutubeCommentsListTextFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "textFormatUnspecified":
		fallthrough
	case "html":
		fallthrough
	case "plainText":
		*e = YoutubeCommentsListTextFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for YoutubeCommentsListTextFormatEnum: %s", s)
	}
}

type YoutubeCommentsListQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Returns the comments with the given IDs for One Platform.
	ID []string `queryParam:"style=form,explode=true,name=id"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// The *maxResults* parameter specifies the maximum number of items that should be returned in the result set.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The *pageToken* parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns replies to the specified comment. Note, currently YouTube features only one level of replies (ie replies to top level comments). However replies to replies may be supported in the future.
	ParentID *string `queryParam:"style=form,explode=true,name=parentId"`
	// The *part* parameter specifies a comma-separated list of one or more comment resource properties that the API response will include.
	Part []string `queryParam:"style=form,explode=true,name=part"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// The requested text format for the returned comments.
	TextFormat *YoutubeCommentsListTextFormatEnum `queryParam:"style=form,explode=true,name=textFormat"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type YoutubeCommentsListRequest struct {
	QueryParams YoutubeCommentsListQueryParams
	Security    YoutubeCommentsListSecurity
}

type YoutubeCommentsListResponse struct {
	// Successful response
	CommentListResponse *shared.CommentListResponse
	ContentType         string
	StatusCode          int
	RawResponse         *http.Response
}
