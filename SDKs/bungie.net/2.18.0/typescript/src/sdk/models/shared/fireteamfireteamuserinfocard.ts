/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

export class FireteamFireteamUserInfoCard extends SpeakeasyBase {
  @SpeakeasyMetadata()
  fireteamDisplayName?: string;

  @SpeakeasyMetadata()
  fireteamMembershipType?: number;

  /**
   * The list of Membership Types indicating the platforms on which this Membership can be used.
   *
   * @remarks
   *  Not in Cross Save = its original membership type. Cross Save Primary = Any membership types it is overridding, and its original membership type Cross Save Overridden = Empty list
   */
  @SpeakeasyMetadata()
  applicableMembershipTypes?: number[];

  /**
   * The bungie global display name, if set.
   */
  @SpeakeasyMetadata()
  bungieGlobalDisplayName?: string;

  /**
   * The bungie global display name code, if set.
   */
  @SpeakeasyMetadata()
  bungieGlobalDisplayNameCode?: number;

  /**
   * If there is a cross save override in effect, this value will tell you the type that is overridding this one.
   */
  @SpeakeasyMetadata()
  crossSaveOverride?: number;

  /**
   * Display Name the player has chosen for themselves. The display name is optional when the data type is used as input to a platform API.
   */
  @SpeakeasyMetadata()
  displayName?: string;

  /**
   * URL the Icon if available.
   */
  @SpeakeasyMetadata()
  iconPath?: string;

  /**
   * If True, this is a public user membership.
   */
  @SpeakeasyMetadata()
  isPublic?: boolean;

  /**
   * Membership ID as they user is known in the Accounts service
   */
  @SpeakeasyMetadata()
  membershipId?: number;

  /**
   * Type of the membership. Not necessarily the native type.
   */
  @SpeakeasyMetadata()
  membershipType?: number;

  /**
   * A platform specific additional display name - ex: psn Real Name, bnet Unique Name, etc.
   */
  @SpeakeasyMetadata()
  supplementalDisplayName?: string;
}
