"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PostAPIPagesRequestBodyTemplateEnum(str, Enum):
    r"""Controls what kind of layout the page is rendered in"""
    CONTAINED = 'contained'
    FULL_WITHIN_LAYOUT = 'full_within_layout'
    NAV_BAR_INCLUDED = 'nav_bar_included'
    JSON = 'json'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PostAPIPagesRequestBody:
    
    body_json: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('body_json'), 'exclude': lambda f: f is None }})
    r"""For JSON pages, the JSON body"""  
    body_markdown: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('body_markdown'), 'exclude': lambda f: f is None }})
    r"""The text (in markdown) of the ad (required)"""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""For internal use, helps similar pages from one another"""  
    is_top_level_path: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_top_level_path'), 'exclude': lambda f: f is None }})
    r"""If true, the page is available at '/{slug}' instead of '/page/{slug}', use with caution"""  
    slug: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('slug'), 'exclude': lambda f: f is None }})
    r"""Used to link to this page in URLs, must be unique and URL-safe"""  
    template: Optional[PostAPIPagesRequestBodyTemplateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('template'), 'exclude': lambda f: f is None }})
    r"""Controls what kind of layout the page is rendered in"""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""Title of the page"""  
    

@dataclasses.dataclass
class PostAPIPagesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    