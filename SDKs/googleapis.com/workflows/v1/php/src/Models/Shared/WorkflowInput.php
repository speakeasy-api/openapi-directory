<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * WorkflowInput - Workflow program to be executed by Workflows.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class WorkflowInput
{
    /**
     * Optional. Describes the level of platform logging to apply to calls and call responses during executions of this workflow. If both the workflow and the execution specify a logging level, the execution level takes precedence.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WorkflowCallLogLevelEnum $callLogLevel
     */
	#[\JMS\Serializer\Annotation\SerializedName('callLogLevel')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\WorkflowCallLogLevelEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?WorkflowCallLogLevelEnum $callLogLevel = null;
    
    /**
     * Optional. The resource name of a KMS crypto key used to encrypt or decrypt the data associated with the workflow. Format: projects/{project}/locations/{location}/keyRings/{keyRing}/cryptoKeys/{cryptoKey} Using `-` as a wildcard for the `{project}` or not providing one at all will infer the project from the account. If not provided, data associated with the workflow will not be CMEK-encrypted.
     * 
     * @var ?string $cryptoKeyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('cryptoKeyName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cryptoKeyName = null;
    
    /**
     * Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Labels associated with this workflow. Labels can contain at most 64 entries. Keys and values can be no longer than 63 characters and can only contain lowercase letters, numeric characters, underscores, and dashes. Label keys must start with a letter. International characters are allowed.
     * 
     * @var ?array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * The resource name of the workflow. Format: projects/{project}/locations/{location}/workflows/{workflow}
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The service account associated with the latest workflow version. This service account represents the identity of the workflow and determines what permissions the workflow has. Format: projects/{project}/serviceAccounts/{account} or {account} Using `-` as a wildcard for the `{project}` or not providing one at all will infer the project from the account. The `{account}` value can be the `email` address or the `unique_id` of the service account. If not provided, workflow will use the project's default service account. Modifying this field for an existing workflow results in a new workflow revision.
     * 
     * @var ?string $serviceAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceAccount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $serviceAccount = null;
    
    /**
     * Workflow code to be executed. The size limit is 128KB.
     * 
     * @var ?string $sourceContents
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceContents')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceContents = null;
    
    /**
     * Describes an error related to the current state of the workflow.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StateError $stateError
     */
	#[\JMS\Serializer\Annotation\SerializedName('stateError')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\StateError')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StateError $stateError = null;
    
	public function __construct()
	{
		$this->callLogLevel = null;
		$this->cryptoKeyName = null;
		$this->description = null;
		$this->labels = null;
		$this->name = null;
		$this->serviceAccount = null;
		$this->sourceContents = null;
		$this->stateError = null;
	}
}
