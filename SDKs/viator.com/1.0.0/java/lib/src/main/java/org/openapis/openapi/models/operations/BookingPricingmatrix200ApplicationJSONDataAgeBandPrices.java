/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BookingPricingmatrix200ApplicationJSONDataAgeBandPrices {
    /**
     * **unique numeric identifier** for the age band
     * - See: [Working with age bands](#section/Appendices/Working-with-age-bands)
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bandId")
    public Long bandId;
    public BookingPricingmatrix200ApplicationJSONDataAgeBandPrices withBandId(Long bandId) {
        this.bandId = bandId;
        return this;
    }
    
    /**
     * **maximum number of travelers** that this pricing schedule can be applied to
     * - use this field to specify the largest group size you are interested in making a booking for
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maximumCountRequired")
    public Long maximumCountRequired;
    public BookingPricingmatrix200ApplicationJSONDataAgeBandPrices withMaximumCountRequired(Long maximumCountRequired) {
        this.maximumCountRequired = maximumCountRequired;
        return this;
    }
    
    /**
     * **minimum number of travelers** that this pricing schedule can be applied to
     * - use this field to specify the smallest group size you are interested in making a booking for
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minimumCountRequired")
    public Long minimumCountRequired;
    public BookingPricingmatrix200ApplicationJSONDataAgeBandPrices withMinimumCountRequired(Long minimumCountRequired) {
        this.minimumCountRequired = minimumCountRequired;
        return this;
    }
    
    /**
     * **array** of prices available for *this* age band (based on the min and max count required)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("prices")
    public BookingPricingmatrix200ApplicationJSONDataAgeBandPricesPrices[] prices;
    public BookingPricingmatrix200ApplicationJSONDataAgeBandPrices withPrices(BookingPricingmatrix200ApplicationJSONDataAgeBandPricesPrices[] prices) {
        this.prices = prices;
        return this;
    }
    
    /**
     * **sort order** for *this* age band
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sortOrder")
    public Long sortOrder;
    public BookingPricingmatrix200ApplicationJSONDataAgeBandPrices withSortOrder(Long sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
}
