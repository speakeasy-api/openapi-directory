// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PatientPlanSummaryResourceAttributesWindowOrder struct {
	Actions []string `json:"_actions,omitempty"`
	Type    *string  `json:"type,omitempty"`
}

type PatientPlanSummaryResourceAttributesInput struct {
	Critical    map[string]interface{}                            `json:"critical,omitempty"`
	TimeZone    *string                                           `json:"time_zone,omitempty"`
	WindowOrder []PatientPlanSummaryResourceAttributesWindowOrder `json:"window_order,omitempty"`
}

type PatientPlanSummaryResourceRelationshipsActionsData struct {
	ID   string `json:"id"`
	Type string `json:"type"`
}

type PatientPlanSummaryResourceRelationshipsActionsLinks struct {
	Related *string `json:"related,omitempty"`
}

type PatientPlanSummaryResourceRelationshipsActions struct {
	Data  []PatientPlanSummaryResourceRelationshipsActionsData `json:"data,omitempty"`
	Links *PatientPlanSummaryResourceRelationshipsActionsLinks `json:"links,omitempty"`
}

type PatientPlanSummaryResourceRelationshipsBundlesData struct {
	ID   string `json:"id"`
	Type string `json:"type"`
}

type PatientPlanSummaryResourceRelationshipsBundlesLinks struct {
	Related *string `json:"related,omitempty"`
}

type PatientPlanSummaryResourceRelationshipsBundles struct {
	Data  []PatientPlanSummaryResourceRelationshipsBundlesData `json:"data,omitempty"`
	Links *PatientPlanSummaryResourceRelationshipsBundlesLinks `json:"links,omitempty"`
}

type PatientPlanSummaryResourceRelationshipsCurrentResultsData struct {
	ID   string `json:"id"`
	Type string `json:"type"`
}

type PatientPlanSummaryResourceRelationshipsCurrentResultsLinks struct {
	Related *string `json:"related,omitempty"`
}

type PatientPlanSummaryResourceRelationshipsCurrentResults struct {
	Data  []PatientPlanSummaryResourceRelationshipsCurrentResultsData `json:"data,omitempty"`
	Links *PatientPlanSummaryResourceRelationshipsCurrentResultsLinks `json:"links,omitempty"`
}

type PatientPlanSummaryResourceRelationshipsPatientData struct {
	ID   *string `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
}

type PatientPlanSummaryResourceRelationshipsPatientLinks struct {
	Related *string `json:"related,omitempty"`
}

type PatientPlanSummaryResourceRelationshipsPatient struct {
	Data  *PatientPlanSummaryResourceRelationshipsPatientData  `json:"data,omitempty"`
	Links *PatientPlanSummaryResourceRelationshipsPatientLinks `json:"links,omitempty"`
}

type PatientPlanSummaryResourceRelationships struct {
	Actions        PatientPlanSummaryResourceRelationshipsActions         `json:"actions"`
	Bundles        PatientPlanSummaryResourceRelationshipsBundles         `json:"bundles"`
	CurrentResults *PatientPlanSummaryResourceRelationshipsCurrentResults `json:"current_results,omitempty"`
	Patient        PatientPlanSummaryResourceRelationshipsPatient         `json:"patient"`
}

type PatientPlanSummaryResourceTypeEnum string

const (
	PatientPlanSummaryResourceTypeEnumPatientPlanSummary PatientPlanSummaryResourceTypeEnum = "patient_plan_summary"
)

func (e PatientPlanSummaryResourceTypeEnum) ToPointer() *PatientPlanSummaryResourceTypeEnum {
	return &e
}

func (e *PatientPlanSummaryResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "patient_plan_summary":
		*e = PatientPlanSummaryResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatientPlanSummaryResourceTypeEnum: %v", v)
	}
}

type PatientPlanSummaryResourceInput struct {
	Attributes    *PatientPlanSummaryResourceAttributesInput `json:"attributes,omitempty"`
	ID            string                                     `json:"id"`
	Relationships *PatientPlanSummaryResourceRelationships   `json:"relationships,omitempty"`
	Type          PatientPlanSummaryResourceTypeEnum         `json:"type"`
}

type PatientPlanSummaryResourceAttributesWindowNotificationTimes struct {
	Afternoon *int64 `json:"afternoon,omitempty"`
	Evening   *int64 `json:"evening,omitempty"`
	Morning   *int64 `json:"morning,omitempty"`
	Night     *int64 `json:"night,omitempty"`
}

type PatientPlanSummaryResourceAttributes struct {
	Adherence               map[string]interface{}                                       `json:"adherence,omitempty"`
	Critical                map[string]interface{}                                       `json:"critical,omitempty"`
	EffectiveFrom           *string                                                      `json:"effective_from,omitempty"`
	TimeZone                *string                                                      `json:"time_zone,omitempty"`
	WindowNotificationTimes *PatientPlanSummaryResourceAttributesWindowNotificationTimes `json:"window_notification_times,omitempty"`
	WindowOrder             []PatientPlanSummaryResourceAttributesWindowOrder            `json:"window_order,omitempty"`
}

type PatientPlanSummaryResourceLinks struct {
	Self string `json:"self"`
}

type PatientPlanSummaryResource struct {
	Attributes    *PatientPlanSummaryResourceAttributes    `json:"attributes,omitempty"`
	ID            string                                   `json:"id"`
	Links         *PatientPlanSummaryResourceLinks         `json:"links,omitempty"`
	Relationships *PatientPlanSummaryResourceRelationships `json:"relationships,omitempty"`
	Type          PatientPlanSummaryResourceTypeEnum       `json:"type"`
}
