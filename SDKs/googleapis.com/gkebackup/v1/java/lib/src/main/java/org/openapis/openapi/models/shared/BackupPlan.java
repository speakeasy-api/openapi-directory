/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * BackupPlan - Defines the configuration and scheduling for a "line" of Backups.
 */
public class BackupPlan {
    /**
     * BackupConfig defines the configuration of Backups created via this BackupPlan.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backupConfig")
    public BackupConfig backupConfig;
    public BackupPlan withBackupConfig(BackupConfig backupConfig) {
        this.backupConfig = backupConfig;
        return this;
    }
    
    /**
     * Schedule defines scheduling parameters for automatically creating Backups via this BackupPlan.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backupSchedule")
    public Schedule backupSchedule;
    public BackupPlan withBackupSchedule(Schedule backupSchedule) {
        this.backupSchedule = backupSchedule;
        return this;
    }
    
    /**
     * Required. Immutable. The source cluster from which Backups will be created via this BackupPlan. Valid formats: - `projects/* /locations/* /clusters/*` - `projects/* /zones/* /clusters/*`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cluster")
    public String cluster;
    public BackupPlan withCluster(String cluster) {
        this.cluster = cluster;
        return this;
    }
    
    /**
     * Output only. The timestamp when this BackupPlan resource was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public BackupPlan withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * This flag indicates whether this BackupPlan has been deactivated. Setting this field to True locks the BackupPlan such that no further updates will be allowed (except deletes), including the deactivated field itself. It also prevents any new Backups from being created via this BackupPlan (including scheduled Backups). Default: False
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deactivated")
    public Boolean deactivated;
    public BackupPlan withDeactivated(Boolean deactivated) {
        this.deactivated = deactivated;
        return this;
    }
    
    /**
     * User specified descriptive string for this BackupPlan.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public BackupPlan withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Output only. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a backup plan from overwriting each other. It is strongly suggested that systems make use of the 'etag' in the read-modify-write cycle to perform BackupPlan updates in order to avoid race conditions: An `etag` is returned in the response to `GetBackupPlan`, and systems are expected to put that etag in the request to `UpdateBackupPlan` or `DeleteBackupPlan` to ensure that their change will be applied to the same version of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;
    public BackupPlan withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * A set of custom labels supplied by user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public BackupPlan withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Output only. The full name of the BackupPlan resource. Format: `projects/* /locations/* /backupPlans/*`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public BackupPlan withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The number of Kubernetes Pods backed up in the last successful Backup created via this BackupPlan.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protectedPodCount")
    public Integer protectedPodCount;
    public BackupPlan withProtectedPodCount(Integer protectedPodCount) {
        this.protectedPodCount = protectedPodCount;
        return this;
    }
    
    /**
     * RetentionPolicy defines a Backup retention policy for a BackupPlan.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retentionPolicy")
    public RetentionPolicy retentionPolicy;
    public BackupPlan withRetentionPolicy(RetentionPolicy retentionPolicy) {
        this.retentionPolicy = retentionPolicy;
        return this;
    }
    
    /**
     * Output only. Server generated global unique identifier of [UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uid")
    public String uid;
    public BackupPlan withUid(String uid) {
        this.uid = uid;
        return this;
    }
    
    /**
     * Output only. The timestamp when this BackupPlan resource was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;
    public BackupPlan withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
}
