// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SearchArtifactsByContentOrderEnum - Sort order, ascending (`asc`) or descending (`desc`).
type SearchArtifactsByContentOrderEnum string

const (
	SearchArtifactsByContentOrderEnumAsc  SearchArtifactsByContentOrderEnum = "asc"
	SearchArtifactsByContentOrderEnumDesc SearchArtifactsByContentOrderEnum = "desc"
)

func (e *SearchArtifactsByContentOrderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = SearchArtifactsByContentOrderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchArtifactsByContentOrderEnum: %s", s)
	}
}

// SearchArtifactsByContentOrderbyEnum - The field to sort by.  Can be one of:
//
// * `name`
// * `createdOn`
type SearchArtifactsByContentOrderbyEnum string

const (
	SearchArtifactsByContentOrderbyEnumName      SearchArtifactsByContentOrderbyEnum = "name"
	SearchArtifactsByContentOrderbyEnumCreatedOn SearchArtifactsByContentOrderbyEnum = "createdOn"
)

func (e *SearchArtifactsByContentOrderbyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "name":
		fallthrough
	case "createdOn":
		*e = SearchArtifactsByContentOrderbyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchArtifactsByContentOrderbyEnum: %s", s)
	}
}

type SearchArtifactsByContentRequest struct {
	// The content to search for.
	RequestBody []byte `request:"mediaType=*/*"`
	// Indicates the type of artifact represented by the content being used for the search.  This is only needed when using the `canonical` query parameter, so that the server knows how to canonicalize the content prior to searching for matching artifacts.
	ArtifactType *string `queryParam:"style=form,explode=true,name=artifactType"`
	// Parameter that can be set to `true` to indicate that the server should "canonicalize" the content when searching for matching artifacts.  Canonicalization is unique to each artifact type, but typically involves removing any extra whitespace and formatting the content in a consistent manner.  Must be used along with the `artifactType` query parameter.
	Canonical *bool `queryParam:"style=form,explode=true,name=canonical"`
	// The number of artifacts to return.  Defaults to 20.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// The number of artifacts to skip before starting to collect the result set.  Defaults to 0.
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Sort order, ascending (`asc`) or descending (`desc`).
	Order *SearchArtifactsByContentOrderEnum `queryParam:"style=form,explode=true,name=order"`
	// The field to sort by.  Can be one of:
	//
	// * `name`
	// * `createdOn`
	//
	Orderby *SearchArtifactsByContentOrderbyEnum `queryParam:"style=form,explode=true,name=orderby"`
}

type SearchArtifactsByContentResponse struct {
	// On a successful response, returns a result set of artifacts - one for each artifact
	// in the registry that matches the criteria.
	ArtifactSearchResults *shared.ArtifactSearchResults
	ContentType           string
	// Common response for all operations that can fail with an unexpected server error.
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
}
