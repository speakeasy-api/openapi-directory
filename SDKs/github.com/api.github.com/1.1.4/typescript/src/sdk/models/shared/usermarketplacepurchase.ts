/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MarketplaceAccount } from "./marketplaceaccount";
import { MarketplaceListingPlan } from "./marketplacelistingplan";
import { Expose, Transform, Type } from "class-transformer";

/**
 * User Marketplace Purchase
 */
export class UserMarketplacePurchase extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "account" })
  @Type(() => MarketplaceAccount)
  account: MarketplaceAccount;

  @SpeakeasyMetadata()
  @Expose({ name: "billing_cycle" })
  billingCycle: string;

  @SpeakeasyMetadata()
  @Expose({ name: "free_trial_ends_on" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  freeTrialEndsOn: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "next_billing_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  nextBillingDate: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "on_free_trial" })
  onFreeTrial: boolean;

  /**
   * Marketplace Listing Plan
   */
  @SpeakeasyMetadata()
  @Expose({ name: "plan" })
  @Type(() => MarketplaceListingPlan)
  plan: MarketplaceListingPlan;

  @SpeakeasyMetadata()
  @Expose({ name: "unit_count" })
  unitCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;
}
