"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import finding as shared_finding
from ..shared import resource as shared_resource
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ListFindingsResultStateChangeEnum(str, Enum):
    r"""State change of the finding between the points in time."""
    UNUSED = 'UNUSED'
    CHANGED = 'CHANGED'
    UNCHANGED = 'UNCHANGED'
    ADDED = 'ADDED'
    REMOVED = 'REMOVED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListFindingsResult:
    r"""Result containing the Finding and its StateChange."""
    
    finding: Optional[shared_finding.Finding] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('finding'), 'exclude': lambda f: f is None }})
    r"""Security Command Center finding. A finding is a record of assessment data like security, risk, health, or privacy, that is ingested into Security Command Center for presentation, notification, analysis, policy testing, and enforcement. For example, a cross-site scripting (XSS) vulnerability in an App Engine application is a finding."""  
    resource: Optional[shared_resource.Resource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resource'), 'exclude': lambda f: f is None }})
    r"""Information related to the Google Cloud resource that is associated with this finding."""  
    state_change: Optional[ListFindingsResultStateChangeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stateChange'), 'exclude': lambda f: f is None }})
    r"""State change of the finding between the points in time."""  
    