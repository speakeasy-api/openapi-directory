/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class EventSubscriptionsResponseMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "httpStatus" })
  httpStatus?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "requestId" })
  requestId?: string;
}

export class EventSubscriptionsResponseResultMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "httpStatus" })
  httpStatus?: string;
}

export class EventSubscriptionsResponseResultResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;
}

export class EventSubscriptionsResponseResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => EventSubscriptionsResponseResultMeta)
  meta?: EventSubscriptionsResponseResultMeta;

  @SpeakeasyMetadata()
  @Expose({ name: "result" })
  @Type(() => EventSubscriptionsResponseResultResult)
  result?: EventSubscriptionsResponseResultResult;
}

/**
 * OK - web hook registered
 */
export class EventSubscriptionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => EventSubscriptionsResponseMeta)
  meta?: EventSubscriptionsResponseMeta;

  @SpeakeasyMetadata()
  @Expose({ name: "result" })
  @Type(() => EventSubscriptionsResponseResult)
  result?: EventSubscriptionsResponseResult;
}
