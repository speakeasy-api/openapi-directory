"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SslPolicy = exports.SslPolicyWarnings = exports.SslPolicyWarningsData = exports.SslPolicyWarningsCodeEnum = exports.SslPolicyProfileEnum = exports.SslPolicyMinTlsVersionEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * The minimum version of SSL protocol that can be used by the clients to establish a connection with the load balancer. This can be one of TLS_1_0, TLS_1_1, TLS_1_2.
 */
var SslPolicyMinTlsVersionEnum;
(function (SslPolicyMinTlsVersionEnum) {
    SslPolicyMinTlsVersionEnum["Tls10"] = "TLS_1_0";
    SslPolicyMinTlsVersionEnum["Tls11"] = "TLS_1_1";
    SslPolicyMinTlsVersionEnum["Tls12"] = "TLS_1_2";
})(SslPolicyMinTlsVersionEnum = exports.SslPolicyMinTlsVersionEnum || (exports.SslPolicyMinTlsVersionEnum = {}));
/**
 * Profile specifies the set of SSL features that can be used by the load balancer when negotiating SSL with clients. This can be one of COMPATIBLE, MODERN, RESTRICTED, or CUSTOM. If using CUSTOM, the set of SSL features to enable must be specified in the customFeatures field.
 */
var SslPolicyProfileEnum;
(function (SslPolicyProfileEnum) {
    SslPolicyProfileEnum["Compatible"] = "COMPATIBLE";
    SslPolicyProfileEnum["Custom"] = "CUSTOM";
    SslPolicyProfileEnum["Modern"] = "MODERN";
    SslPolicyProfileEnum["Restricted"] = "RESTRICTED";
})(SslPolicyProfileEnum = exports.SslPolicyProfileEnum || (exports.SslPolicyProfileEnum = {}));
/**
 * [Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
 */
var SslPolicyWarningsCodeEnum;
(function (SslPolicyWarningsCodeEnum) {
    SslPolicyWarningsCodeEnum["CleanupFailed"] = "CLEANUP_FAILED";
    SslPolicyWarningsCodeEnum["DeprecatedResourceUsed"] = "DEPRECATED_RESOURCE_USED";
    SslPolicyWarningsCodeEnum["DeprecatedTypeUsed"] = "DEPRECATED_TYPE_USED";
    SslPolicyWarningsCodeEnum["DiskSizeLargerThanImageSize"] = "DISK_SIZE_LARGER_THAN_IMAGE_SIZE";
    SslPolicyWarningsCodeEnum["ExperimentalTypeUsed"] = "EXPERIMENTAL_TYPE_USED";
    SslPolicyWarningsCodeEnum["ExternalApiWarning"] = "EXTERNAL_API_WARNING";
    SslPolicyWarningsCodeEnum["FieldValueOverriden"] = "FIELD_VALUE_OVERRIDEN";
    SslPolicyWarningsCodeEnum["InjectedKernelsDeprecated"] = "INJECTED_KERNELS_DEPRECATED";
    SslPolicyWarningsCodeEnum["InvalidHealthCheckForDynamicWieghtedLb"] = "INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB";
    SslPolicyWarningsCodeEnum["LargeDeploymentWarning"] = "LARGE_DEPLOYMENT_WARNING";
    SslPolicyWarningsCodeEnum["MissingTypeDependency"] = "MISSING_TYPE_DEPENDENCY";
    SslPolicyWarningsCodeEnum["NextHopAddressNotAssigned"] = "NEXT_HOP_ADDRESS_NOT_ASSIGNED";
    SslPolicyWarningsCodeEnum["NextHopCannotIpForward"] = "NEXT_HOP_CANNOT_IP_FORWARD";
    SslPolicyWarningsCodeEnum["NextHopInstanceHasNoIpv6Interface"] = "NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE";
    SslPolicyWarningsCodeEnum["NextHopInstanceNotFound"] = "NEXT_HOP_INSTANCE_NOT_FOUND";
    SslPolicyWarningsCodeEnum["NextHopInstanceNotOnNetwork"] = "NEXT_HOP_INSTANCE_NOT_ON_NETWORK";
    SslPolicyWarningsCodeEnum["NextHopNotRunning"] = "NEXT_HOP_NOT_RUNNING";
    SslPolicyWarningsCodeEnum["NotCriticalError"] = "NOT_CRITICAL_ERROR";
    SslPolicyWarningsCodeEnum["NoResultsOnPage"] = "NO_RESULTS_ON_PAGE";
    SslPolicyWarningsCodeEnum["PartialSuccess"] = "PARTIAL_SUCCESS";
    SslPolicyWarningsCodeEnum["RequiredTosAgreement"] = "REQUIRED_TOS_AGREEMENT";
    SslPolicyWarningsCodeEnum["ResourceInUseByOtherResourceWarning"] = "RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING";
    SslPolicyWarningsCodeEnum["ResourceNotDeleted"] = "RESOURCE_NOT_DELETED";
    SslPolicyWarningsCodeEnum["SchemaValidationIgnored"] = "SCHEMA_VALIDATION_IGNORED";
    SslPolicyWarningsCodeEnum["SingleInstancePropertyTemplate"] = "SINGLE_INSTANCE_PROPERTY_TEMPLATE";
    SslPolicyWarningsCodeEnum["UndeclaredProperties"] = "UNDECLARED_PROPERTIES";
    SslPolicyWarningsCodeEnum["Unreachable"] = "UNREACHABLE";
})(SslPolicyWarningsCodeEnum = exports.SslPolicyWarningsCodeEnum || (exports.SslPolicyWarningsCodeEnum = {}));
var SslPolicyWarningsData = /** @class */ (function (_super) {
    __extends(SslPolicyWarningsData, _super);
    function SslPolicyWarningsData() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "key" }),
        __metadata("design:type", String)
    ], SslPolicyWarningsData.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", String)
    ], SslPolicyWarningsData.prototype, "value", void 0);
    return SslPolicyWarningsData;
}(utils_1.SpeakeasyBase));
exports.SslPolicyWarningsData = SslPolicyWarningsData;
var SslPolicyWarnings = /** @class */ (function (_super) {
    __extends(SslPolicyWarnings, _super);
    function SslPolicyWarnings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "code" }),
        __metadata("design:type", String)
    ], SslPolicyWarnings.prototype, "code", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: SslPolicyWarningsData }),
        (0, class_transformer_1.Expose)({ name: "data" }),
        (0, class_transformer_1.Type)(function () { return SslPolicyWarningsData; }),
        __metadata("design:type", Array)
    ], SslPolicyWarnings.prototype, "data", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message" }),
        __metadata("design:type", String)
    ], SslPolicyWarnings.prototype, "message", void 0);
    return SslPolicyWarnings;
}(utils_1.SpeakeasyBase));
exports.SslPolicyWarnings = SslPolicyWarnings;
/**
 * Represents an SSL Policy resource. Use SSL policies to control the SSL features, such as versions and cipher suites, offered by an HTTPS or SSL Proxy load balancer. For more information, read SSL Policy Concepts.
 */
var SslPolicy = /** @class */ (function (_super) {
    __extends(SslPolicy, _super);
    function SslPolicy() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTimestamp" }),
        __metadata("design:type", String)
    ], SslPolicy.prototype, "creationTimestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "customFeatures" }),
        __metadata("design:type", Array)
    ], SslPolicy.prototype, "customFeatures", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], SslPolicy.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabledFeatures" }),
        __metadata("design:type", Array)
    ], SslPolicy.prototype, "enabledFeatures", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fingerprint" }),
        __metadata("design:type", String)
    ], SslPolicy.prototype, "fingerprint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], SslPolicy.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], SslPolicy.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "minTlsVersion" }),
        __metadata("design:type", String)
    ], SslPolicy.prototype, "minTlsVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], SslPolicy.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "profile" }),
        __metadata("design:type", String)
    ], SslPolicy.prototype, "profile", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "region" }),
        __metadata("design:type", String)
    ], SslPolicy.prototype, "region", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLink" }),
        __metadata("design:type", String)
    ], SslPolicy.prototype, "selfLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: SslPolicyWarnings }),
        (0, class_transformer_1.Expose)({ name: "warnings" }),
        (0, class_transformer_1.Type)(function () { return SslPolicyWarnings; }),
        __metadata("design:type", Array)
    ], SslPolicy.prototype, "warnings", void 0);
    return SslPolicy;
}(utils_1.SpeakeasyBase));
exports.SslPolicy = SslPolicy;
