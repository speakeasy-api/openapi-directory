// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PayoutStatusEnum string

const (
	PayoutStatusEnumAccepted   PayoutStatusEnum = "ACCEPTED"
	PayoutStatusEnumRejected   PayoutStatusEnum = "REJECTED"
	PayoutStatusEnumSubmitted  PayoutStatusEnum = "SUBMITTED"
	PayoutStatusEnumQuoted     PayoutStatusEnum = "QUOTED"
	PayoutStatusEnumInstructed PayoutStatusEnum = "INSTRUCTED"
	PayoutStatusEnumCompleted  PayoutStatusEnum = "COMPLETED"
	PayoutStatusEnumIncomplete PayoutStatusEnum = "INCOMPLETE"
	PayoutStatusEnumConfirmed  PayoutStatusEnum = "CONFIRMED"
	PayoutStatusEnumWithdrawn  PayoutStatusEnum = "WITHDRAWN"
)

func (e *PayoutStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACCEPTED":
		fallthrough
	case "REJECTED":
		fallthrough
	case "SUBMITTED":
		fallthrough
	case "QUOTED":
		fallthrough
	case "INSTRUCTED":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "INCOMPLETE":
		fallthrough
	case "CONFIRMED":
		fallthrough
	case "WITHDRAWN":
		*e = PayoutStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PayoutStatusEnum: %s", s)
	}
}
