/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * KeyValue - A UI element contains a key (label) and a value (content). And this element may also contain some actions such as onclick button.
 */
public class KeyValue {
    /**
     * The text of the bottom label. Formatted text supported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bottomLabel")
    public String bottomLabel;
    public KeyValue withBottomLabel(String bottomLabel) {
        this.bottomLabel = bottomLabel;
        return this;
    }
    
    /**
     * A button. Can be a text button or an image button.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("button")
    public Button button;
    public KeyValue withButton(Button button) {
        this.button = button;
        return this;
    }
    
    /**
     * The text of the content. Formatted text supported and always required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content")
    public String content;
    public KeyValue withContent(String content) {
        this.content = content;
        return this;
    }
    
    /**
     * If the content should be multiline.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentMultiline")
    public Boolean contentMultiline;
    public KeyValue withContentMultiline(Boolean contentMultiline) {
        this.contentMultiline = contentMultiline;
        return this;
    }
    
    /**
     * An enum value that will be replaced by the Chat API with the corresponding icon image.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("icon")
    public KeyValueIconEnum icon;
    public KeyValue withIcon(KeyValueIconEnum icon) {
        this.icon = icon;
        return this;
    }
    
    /**
     * The icon specified by a URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iconUrl")
    public String iconUrl;
    public KeyValue withIconUrl(String iconUrl) {
        this.iconUrl = iconUrl;
        return this;
    }
    
    /**
     * An onclick action (e.g. open a link).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onClick")
    public OnClick onClick;
    public KeyValue withOnClick(OnClick onClick) {
        this.onClick = onClick;
        return this;
    }
    
    /**
     * The text of the top label. Formatted text supported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("topLabel")
    public String topLabel;
    public KeyValue withTopLabel(String topLabel) {
        this.topLabel = topLabel;
        return this;
    }
    
}
