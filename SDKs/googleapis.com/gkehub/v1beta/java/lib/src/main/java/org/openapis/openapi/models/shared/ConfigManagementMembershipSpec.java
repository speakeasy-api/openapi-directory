/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ConfigManagementMembershipSpec - **Anthos Config Management**: Configuration for a single cluster. Intended to parallel the ConfigManagement CR.
 */
public class ConfigManagementMembershipSpec {
    /**
     * Configuration for Binauthz
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("binauthz")
    public ConfigManagementBinauthzConfig binauthz;

    public ConfigManagementMembershipSpec withBinauthz(ConfigManagementBinauthzConfig binauthz) {
        this.binauthz = binauthz;
        return this;
    }
    
    /**
     * Configuration for Config Sync
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configSync")
    public ConfigManagementConfigSync configSync;

    public ConfigManagementMembershipSpec withConfigSync(ConfigManagementConfigSync configSync) {
        this.configSync = configSync;
        return this;
    }
    
    /**
     * Configuration for Hierarchy Controller
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hierarchyController")
    public ConfigManagementHierarchyControllerConfig hierarchyController;

    public ConfigManagementMembershipSpec withHierarchyController(ConfigManagementHierarchyControllerConfig hierarchyController) {
        this.hierarchyController = hierarchyController;
        return this;
    }
    
    /**
     * Configuration for Policy Controller
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policyController")
    public ConfigManagementPolicyController policyController;

    public ConfigManagementMembershipSpec withPolicyController(ConfigManagementPolicyController policyController) {
        this.policyController = policyController;
        return this;
    }
    
    /**
     * Version of ACM installed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public String version;

    public ConfigManagementMembershipSpec withVersion(String version) {
        this.version = version;
        return this;
    }
    
    public ConfigManagementMembershipSpec(){}
}
