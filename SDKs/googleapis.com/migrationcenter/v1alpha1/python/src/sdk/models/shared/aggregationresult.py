"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import aggregationresultcount as shared_aggregationresultcount
from ..shared import aggregationresultfrequency as shared_aggregationresultfrequency
from ..shared import aggregationresulthistogram as shared_aggregationresulthistogram
from ..shared import aggregationresultsum as shared_aggregationresultsum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AggregationResult:
    r"""Message describing a result of an aggregation."""
    
    count: Optional[shared_aggregationresultcount.AggregationResultCount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('count'), 'exclude': lambda f: f is None }})
    r"""The result of a count aggregation."""  
    field: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('field'), 'exclude': lambda f: f is None }})  
    frequency: Optional[shared_aggregationresultfrequency.AggregationResultFrequency] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('frequency'), 'exclude': lambda f: f is None }})
    r"""The result of a frequency distribution aggregation."""  
    histogram: Optional[shared_aggregationresulthistogram.AggregationResultHistogram] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('histogram'), 'exclude': lambda f: f is None }})
    r"""The result of a bucketed histogram aggregation."""  
    sum: Optional[shared_aggregationresultsum.AggregationResultSum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sum'), 'exclude': lambda f: f is None }})
    r"""The result of a sum aggregation."""  
    