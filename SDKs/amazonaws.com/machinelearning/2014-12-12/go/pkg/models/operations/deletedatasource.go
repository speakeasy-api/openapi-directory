// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteDataSourceXAmzTargetEnum
type DeleteDataSourceXAmzTargetEnum string

const (
	DeleteDataSourceXAmzTargetEnumAmazonMl20141212DeleteDataSource DeleteDataSourceXAmzTargetEnum = "AmazonML_20141212.DeleteDataSource"
)

func (e DeleteDataSourceXAmzTargetEnum) ToPointer() *DeleteDataSourceXAmzTargetEnum {
	return &e
}

func (e *DeleteDataSourceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonML_20141212.DeleteDataSource":
		*e = DeleteDataSourceXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteDataSourceXAmzTargetEnum: %v", v)
	}
}

type DeleteDataSourceRequest struct {
	DeleteDataSourceInput shared.DeleteDataSourceInput   `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            DeleteDataSourceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteDataSourceResponse struct {
	ContentType string
	// Success
	DeleteDataSourceOutput *shared.DeleteDataSourceOutput
	// InternalServerException
	InternalServerException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
