/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class ConsentArtifactSchemaConsentData extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;
}

export class ConsentArtifactSchemaConsentDataConsumer extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;
}

export class ConsentArtifactSchemaConsentDataProvider extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;
}

export class ConsentArtifactSchemaConsentPermissionDateRange extends SpeakeasyBase {
  /**
   * Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  from: Date;

  /**
   * Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  to: Date;
}

export class ConsentArtifactSchemaConsentPermissionFrequency extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "repeats" })
  repeats: number;

  @SpeakeasyMetadata()
  @Expose({ name: "unit" })
  unit: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: number;
}

export class ConsentArtifactSchemaConsentPermission extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "access" })
  access: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dateRange" })
  @Type(() => ConsentArtifactSchemaConsentPermissionDateRange)
  dateRange: ConsentArtifactSchemaConsentPermissionDateRange;

  @SpeakeasyMetadata()
  @Expose({ name: "frequency" })
  @Type(() => ConsentArtifactSchemaConsentPermissionFrequency)
  frequency: ConsentArtifactSchemaConsentPermissionFrequency;
}

export class ConsentArtifactSchemaConsentPurpose extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;
}

export class ConsentArtifactSchemaConsentUser extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  @SpeakeasyMetadata()
  @Expose({ name: "idNumber" })
  idNumber: string;

  @SpeakeasyMetadata()
  @Expose({ name: "idType" })
  idType: string;

  @SpeakeasyMetadata()
  @Expose({ name: "mobile" })
  mobile: string;
}

export class ConsentArtifactSchemaConsent extends SpeakeasyBase {
  /**
   * A unique consent id in UUID format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "consentId" })
  consentId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ConsentArtifactSchemaConsentData)
  data: ConsentArtifactSchemaConsentData;

  @SpeakeasyMetadata()
  @Expose({ name: "dataConsumer" })
  @Type(() => ConsentArtifactSchemaConsentDataConsumer)
  dataConsumer: ConsentArtifactSchemaConsentDataConsumer;

  @SpeakeasyMetadata()
  @Expose({ name: "dataProvider" })
  @Type(() => ConsentArtifactSchemaConsentDataProvider)
  dataProvider: ConsentArtifactSchemaConsentDataProvider;

  @SpeakeasyMetadata()
  @Expose({ name: "permission" })
  @Type(() => ConsentArtifactSchemaConsentPermission)
  permission: ConsentArtifactSchemaConsentPermission;

  @SpeakeasyMetadata()
  @Expose({ name: "purpose" })
  @Type(() => ConsentArtifactSchemaConsentPurpose)
  purpose: ConsentArtifactSchemaConsentPurpose;

  /**
   * Date time format in UTC, includes miliseconds YYYY-MM-DDThh:mm:ss.vZ
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  @Type(() => ConsentArtifactSchemaConsentUser)
  user: ConsentArtifactSchemaConsentUser;
}

export class ConsentArtifactSchemaSignature extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "signature" })
  signature: string;
}

export class ConsentArtifactSchema extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "consent" })
  @Type(() => ConsentArtifactSchemaConsent)
  consent: ConsentArtifactSchemaConsent;

  @SpeakeasyMetadata()
  @Expose({ name: "signature" })
  @Type(() => ConsentArtifactSchemaSignature)
  signature: ConsentArtifactSchemaSignature;
}
