// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeviceStateAccountStateEnum - The state of the Google account on the device. "enabled" indicates that the Google account on the device can be used to access Google services (including Google Play), while "disabled" means that it cannot. A new device is initially in the "disabled" state.
type DeviceStateAccountStateEnum string

const (
	DeviceStateAccountStateEnumEnabled  DeviceStateAccountStateEnum = "enabled"
	DeviceStateAccountStateEnumDisabled DeviceStateAccountStateEnum = "disabled"
)

func (e DeviceStateAccountStateEnum) ToPointer() *DeviceStateAccountStateEnum {
	return &e
}

func (e *DeviceStateAccountStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "enabled":
		fallthrough
	case "disabled":
		*e = DeviceStateAccountStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeviceStateAccountStateEnum: %v", v)
	}
}

// DeviceState - The state of a user's device, as accessed by the getState and setState methods on device resources.
type DeviceState struct {
	// The state of the Google account on the device. "enabled" indicates that the Google account on the device can be used to access Google services (including Google Play), while "disabled" means that it cannot. A new device is initially in the "disabled" state.
	AccountState *DeviceStateAccountStateEnum `json:"accountState,omitempty"`
}
