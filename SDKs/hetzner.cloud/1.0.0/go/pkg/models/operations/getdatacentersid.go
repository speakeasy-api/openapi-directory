// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetDatacentersIDRequest struct {
	// ID of Datacenter
	ID int64 `pathParam:"style=simple,explode=false,name=id"`
}

type GetDatacentersID200ApplicationJSONDatacenterLocation struct {
	// City the Location is closest to
	City string `json:"city"`
	// ISO 3166-1 alpha-2 code of the country the Location resides in
	Country string `json:"country"`
	// Description of the Location
	Description string `json:"description"`
	// ID of the Location
	ID float64 `json:"id"`
	// Latitude of the city closest to the Location
	Latitude float64 `json:"latitude"`
	// Longitude of the city closest to the Location
	Longitude float64 `json:"longitude"`
	// Unique identifier of the Location
	Name string `json:"name"`
	// Name of network zone this Location resides in
	NetworkZone string `json:"network_zone"`
}

// GetDatacentersID200ApplicationJSONDatacenterServerTypes - The Server types the Datacenter can handle
type GetDatacentersID200ApplicationJSONDatacenterServerTypes struct {
	// IDs of Server types that are supported and for which the Datacenter has enough resources left
	Available []float64 `json:"available"`
	// IDs of Server types that are supported and for which the Datacenter has enough resources left
	AvailableForMigration []float64 `json:"available_for_migration"`
	// IDs of Server types that are supported in the Datacenter
	Supported []float64 `json:"supported"`
}

type GetDatacentersID200ApplicationJSONDatacenter struct {
	// Description of the Datacenter
	Description string `json:"description"`
	// ID of the Resource
	ID       int64                                                `json:"id"`
	Location GetDatacentersID200ApplicationJSONDatacenterLocation `json:"location"`
	// Unique identifier of the Datacenter
	Name string `json:"name"`
	// The Server types the Datacenter can handle
	ServerTypes GetDatacentersID200ApplicationJSONDatacenterServerTypes `json:"server_types"`
}

// GetDatacentersID200ApplicationJSON - The `datacenter` key in the reply contains a Datacenter object with this structure
type GetDatacentersID200ApplicationJSON struct {
	Datacenter GetDatacentersID200ApplicationJSONDatacenter `json:"datacenter"`
}

type GetDatacentersIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The `datacenter` key in the reply contains a Datacenter object with this structure
	GetDatacentersID200ApplicationJSONObject *GetDatacentersID200ApplicationJSON
}
