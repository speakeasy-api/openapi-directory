// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// PostCreatePathwayFormatEnum
type PostCreatePathwayFormatEnum string

const (
	PostCreatePathwayFormatEnumJSON PostCreatePathwayFormatEnum = "json"
	PostCreatePathwayFormatEnumXML  PostCreatePathwayFormatEnum = "xml"
	PostCreatePathwayFormatEnumHTML PostCreatePathwayFormatEnum = "html"
	PostCreatePathwayFormatEnumDump PostCreatePathwayFormatEnum = "dump"
	PostCreatePathwayFormatEnumJpg  PostCreatePathwayFormatEnum = "jpg"
	PostCreatePathwayFormatEnumPdf  PostCreatePathwayFormatEnum = "pdf"
)

func (e *PostCreatePathwayFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "xml":
		fallthrough
	case "html":
		fallthrough
	case "dump":
		fallthrough
	case "jpg":
		fallthrough
	case "pdf":
		*e = PostCreatePathwayFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostCreatePathwayFormatEnum: %s", s)
	}
}

type PostCreatePathwayRequest struct {
	// The authentication info
	Auth   string                       `queryParam:"style=form,explode=true,name=auth"`
	Format *PostCreatePathwayFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// The GPML code for the new pathway
	Gpml string `queryParam:"style=form,explode=true,name=gpml"`
	// The user name
	Username string `queryParam:"style=form,explode=true,name=username"`
}

type PostCreatePathwayResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
