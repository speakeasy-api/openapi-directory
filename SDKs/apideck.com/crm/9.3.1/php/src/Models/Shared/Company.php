<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Company
{
    /**
     * An ABN Branch (also known as a GST Branch) is used if part of your business needs to account for GST separately from its parent entity.
     * 
     * @var ?string $abnBranch
     */
	#[\JMS\Serializer\Annotation\SerializedName('abn_branch')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $abnBranch = null;
    
    /**
     * An ABN is necessary for operating a business, while a TFN (Tax File Number) is required for any person working in Australia.
     * 
     * @var ?string $abnOrTfn
     */
	#[\JMS\Serializer\Annotation\SerializedName('abn_or_tfn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $abnOrTfn = null;
    
    /**
     * The Australian Company Number (ACN) is a nine digit number with the last digit being a check digit calculated using a modified modulus 10 calculation. ASIC has adopted a convention of always printing and displaying the ACN in the format XXX XXX XXX; three blocks of three characters, each block separated by a blank.
     * 
     * @var ?string $acn
     */
	#[\JMS\Serializer\Annotation\SerializedName('acn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $acn = null;
    
    /**
     * $addresses
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Address> $addresses
     */
	#[\JMS\Serializer\Annotation\SerializedName('addresses')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Address>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $addresses = null;
    
    /**
     * Annual revenue
     * 
     * @var ?string $annualRevenue
     */
	#[\JMS\Serializer\Annotation\SerializedName('annual_revenue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $annualRevenue = null;
    
    /**
     * $bankAccounts
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\BankAccount> $bankAccounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('bank_accounts')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\BankAccount>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $bankAccounts = null;
    
    /**
     * The date of birth of the person.
     * 
     * @var ?\DateTime $birthday
     */
	#[\JMS\Serializer\Annotation\SerializedName('birthday')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $birthday = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_by')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdBy = null;
    
    /**
     * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CurrencyEnum $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CurrencyEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CurrencyEnum $currency = null;
    
    /**
     * $customFields
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CustomField> $customFields
     */
	#[\JMS\Serializer\Annotation\SerializedName('custom_fields')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CustomField>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $customFields = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('deleted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $deleted = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * $emails
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Email> $emails
     */
	#[\JMS\Serializer\Annotation\SerializedName('emails')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Email>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $emails = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('fax')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fax = null;
    
    /**
     * The first name of the person.
     * 
     * @var ?string $firstName
     */
	#[\JMS\Serializer\Annotation\SerializedName('first_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $firstName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('image')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $image = null;
    
    /**
     * Industry
     * 
     * @var ?string $industry
     */
	#[\JMS\Serializer\Annotation\SerializedName('industry')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $industry = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('interaction_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $interactionCount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('last_activity_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastActivityAt = null;
    
    /**
     * The last name of the person.
     * 
     * @var ?string $lastName
     */
	#[\JMS\Serializer\Annotation\SerializedName('last_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $lastName = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Number of employees
     * 
     * @var ?string $numberOfEmployees
     */
	#[\JMS\Serializer\Annotation\SerializedName('number_of_employees')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $numberOfEmployees = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('owner_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ownerId = null;
    
    /**
     * Ownership
     * 
     * @var ?string $ownership
     */
	#[\JMS\Serializer\Annotation\SerializedName('ownership')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ownership = null;
    
    /**
     * Parent ID
     * 
     * @var ?string $parentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('parent_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $parentId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('payee_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $payeeNumber = null;
    
    /**
     * $phoneNumbers
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PhoneNumber> $phoneNumbers
     */
	#[\JMS\Serializer\Annotation\SerializedName('phone_numbers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PhoneNumber>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $phoneNumbers = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('read_only')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $readOnly = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('row_type')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CompanyCompanyRowType')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CompanyCompanyRowType $rowType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('sales_tax_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $salesTaxNumber = null;
    
    /**
     * A formal salutation for the person. For example, 'Mr', 'Mrs'
     * 
     * @var ?string $salutation
     */
	#[\JMS\Serializer\Annotation\SerializedName('salutation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $salutation = null;
    
    /**
     * $socialLinks
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SocialLink> $socialLinks
     */
	#[\JMS\Serializer\Annotation\SerializedName('social_links')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SocialLink>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $socialLinks = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $status = null;
    
    /**
     * $tags
     * 
     * @var ?array<string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedAt = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_by')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedBy = null;
    
    /**
     * VAT number
     * 
     * @var ?string $vatNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('vat_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $vatNumber = null;
    
    /**
     * $websites
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Website> $websites
     */
	#[\JMS\Serializer\Annotation\SerializedName('websites')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Website>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $websites = null;
    
	public function __construct()
	{
		$this->abnBranch = null;
		$this->abnOrTfn = null;
		$this->acn = null;
		$this->addresses = null;
		$this->annualRevenue = null;
		$this->bankAccounts = null;
		$this->birthday = null;
		$this->createdAt = null;
		$this->createdBy = null;
		$this->currency = null;
		$this->customFields = null;
		$this->deleted = null;
		$this->description = null;
		$this->emails = null;
		$this->fax = null;
		$this->firstName = null;
		$this->id = null;
		$this->image = null;
		$this->industry = null;
		$this->interactionCount = null;
		$this->lastActivityAt = null;
		$this->lastName = null;
		$this->name = "";
		$this->numberOfEmployees = null;
		$this->ownerId = null;
		$this->ownership = null;
		$this->parentId = null;
		$this->payeeNumber = null;
		$this->phoneNumbers = null;
		$this->readOnly = null;
		$this->rowType = null;
		$this->salesTaxNumber = null;
		$this->salutation = null;
		$this->socialLinks = null;
		$this->status = null;
		$this->tags = null;
		$this->updatedAt = null;
		$this->updatedBy = null;
		$this->vatNumber = null;
		$this->websites = null;
	}
}
