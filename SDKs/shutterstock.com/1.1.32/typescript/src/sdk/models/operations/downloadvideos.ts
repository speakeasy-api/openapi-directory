/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class DownloadVideosSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  customerAccessCode: string;
}

export class DownloadVideosRequest extends SpeakeasyBase {
  /**
   * Information about the videos to redownload
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  redownloadVideo: shared.RedownloadVideo;

  /**
   * The license ID of the item to (re)download. The download links in the response are valid for 8 hours.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;
}

export class DownloadVideosResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  url?: shared.Url;
}
