/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ErrorT } from "./error";
import { Status } from "./status";
import { Expose, Type } from "class-transformer";

/**
 * The call logging level associated to this execution.
 */
export enum ExecutionCallLogLevelEnum {
  CallLogLevelUnspecified = "CALL_LOG_LEVEL_UNSPECIFIED",
  LogAllCalls = "LOG_ALL_CALLS",
  LogErrorsOnly = "LOG_ERRORS_ONLY",
}

/**
 * Output only. Current state of the execution.
 */
export enum ExecutionStateEnum {
  StateUnspecified = "STATE_UNSPECIFIED",
  Active = "ACTIVE",
  Succeeded = "SUCCEEDED",
  Failed = "FAILED",
  Cancelled = "CANCELLED",
}

/**
 * A running instance of a [Workflow](/workflows/docs/reference/rest/v1beta/projects.locations.workflows).
 */
export class Execution extends SpeakeasyBase {
  /**
   * Input parameters of the execution represented as a JSON string. The size limit is 32KB. *Note*: If you are using the REST API directly to run your workflow, you must escape any JSON string value of `argument`. Example: `'{"argument":"{\"firstName\":\"FIRST\",\"lastName\":\"LAST\"}"}'`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "argument" })
  argument?: string;

  /**
   * The call logging level associated to this execution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callLogLevel" })
  callLogLevel?: ExecutionCallLogLevelEnum;

  /**
   * Output only. Marks the end of execution, successful or not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endTime" })
  endTime?: string;

  /**
   * Error describes why the execution was abnormally terminated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => ErrorT)
  error?: ErrorT;

  /**
   * Output only. The resource name of the execution. Format: projects/{project}/locations/{location}/workflows/{workflow}/executions/{execution}
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. Output of the execution represented as a JSON string. The value can only be present if the execution's state is `SUCCEEDED`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "result" })
  result?: string;

  /**
   * Output only. Marks the beginning of execution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startTime" })
  startTime?: string;

  /**
   * Output only. Current state of the execution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: ExecutionStateEnum;

  /**
   * Represents the current status of this execution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => Status)
  status?: Status;

  /**
   * Output only. Revision of the workflow this execution is using.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workflowRevisionId" })
  workflowRevisionId?: string;
}

/**
 * A running instance of a [Workflow](/workflows/docs/reference/rest/v1beta/projects.locations.workflows).
 */
export class ExecutionInput extends SpeakeasyBase {
  /**
   * Input parameters of the execution represented as a JSON string. The size limit is 32KB. *Note*: If you are using the REST API directly to run your workflow, you must escape any JSON string value of `argument`. Example: `'{"argument":"{\"firstName\":\"FIRST\",\"lastName\":\"LAST\"}"}'`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "argument" })
  argument?: string;

  /**
   * The call logging level associated to this execution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "callLogLevel" })
  callLogLevel?: ExecutionCallLogLevelEnum;

  /**
   * Error describes why the execution was abnormally terminated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => ErrorT)
  error?: ErrorT;

  /**
   * Represents the current status of this execution.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => Status)
  status?: Status;
}
