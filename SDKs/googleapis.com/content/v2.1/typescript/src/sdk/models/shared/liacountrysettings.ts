/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LiaAboutPageSettings } from "./liaaboutpagesettings";
import { LiaInventorySettings } from "./liainventorysettings";
import { LiaOnDisplayToOrderSettings } from "./liaondisplaytoordersettings";
import { LiaPosDataProvider } from "./liaposdataprovider";
import { Expose, Type } from "class-transformer";

export class LiaCountrySettings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "about" })
  @Type(() => LiaAboutPageSettings)
  about?: LiaAboutPageSettings;

  /**
   * Required. CLDR country code (for example, "US").
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * The status of the "Merchant hosted local storefront" feature.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hostedLocalStorefrontActive" })
  hostedLocalStorefrontActive?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "inventory" })
  @Type(() => LiaInventorySettings)
  inventory?: LiaInventorySettings;

  @SpeakeasyMetadata()
  @Expose({ name: "onDisplayToOrder" })
  @Type(() => LiaOnDisplayToOrderSettings)
  onDisplayToOrder?: LiaOnDisplayToOrderSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "posDataProvider" })
  @Type(() => LiaPosDataProvider)
  posDataProvider?: LiaPosDataProvider;

  /**
   * The status of the "Store pickup" feature.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storePickupActive" })
  storePickupActive?: boolean;
}
