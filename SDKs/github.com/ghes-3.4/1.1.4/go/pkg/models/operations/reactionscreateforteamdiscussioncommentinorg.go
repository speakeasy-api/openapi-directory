// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnum - The [reaction type](https://docs.github.com/enterprise-server@3.4/rest/reference/reactions#reaction-types) to add to the team discussion comment.
type ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnum string

const (
	ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnumPlus1    ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnum = "+1"
	ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnumMinus1   ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnum = "-1"
	ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnumLaugh    ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnum = "laugh"
	ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnumConfused ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnum = "confused"
	ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnumHeart    ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnum = "heart"
	ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnumHooray   ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnum = "hooray"
	ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnumRocket   ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnum = "rocket"
	ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnumEyes     ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnum = "eyes"
)

func (e *ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "+1":
		fallthrough
	case "-1":
		fallthrough
	case "laugh":
		fallthrough
	case "confused":
		fallthrough
	case "heart":
		fallthrough
	case "hooray":
		fallthrough
	case "rocket":
		fallthrough
	case "eyes":
		*e = ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnum: %s", s)
	}
}

type ReactionsCreateForTeamDiscussionCommentInOrgRequestBody struct {
	// The [reaction type](https://docs.github.com/enterprise-server@3.4/rest/reference/reactions#reaction-types) to add to the team discussion comment.
	Content ReactionsCreateForTeamDiscussionCommentInOrgRequestBodyContentEnum `json:"content"`
}

type ReactionsCreateForTeamDiscussionCommentInOrgRequest struct {
	RequestBody ReactionsCreateForTeamDiscussionCommentInOrgRequestBody `request:"mediaType=application/json"`
	// The number that identifies the comment.
	CommentNumber int64 `pathParam:"style=simple,explode=false,name=comment_number"`
	// The number that identifies the discussion.
	DiscussionNumber int64 `pathParam:"style=simple,explode=false,name=discussion_number"`
	// The organization name. The name is not case sensitive.
	Org string `pathParam:"style=simple,explode=false,name=org"`
	// The slug of the team name.
	TeamSlug string `pathParam:"style=simple,explode=false,name=team_slug"`
}

type ReactionsCreateForTeamDiscussionCommentInOrgResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Response when the reaction type has already been added to this team discussion comment
	Reaction *shared.Reaction
}
