/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export enum PatchSpacesSpaceIdPersonsMemberIdFoldersIdRequestBodyLevelEnum {
  Confidential = "confidential",
  Regular = "regular",
  Public = "public",
}

export enum PatchSpacesSpaceIdPersonsMemberIdFoldersIdRequestBodyRightEnum {
  Write = "write",
  Read = "read",
  None = "none",
}

/**
 * Access to modify
 */
export class PatchSpacesSpaceIdPersonsMemberIdFoldersIdRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "About" })
  about?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Home" })
  home?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Keywords" })
  keywords?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Level" })
  level?: PatchSpacesSpaceIdPersonsMemberIdFoldersIdRequestBodyLevelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Right" })
  right?: PatchSpacesSpaceIdPersonsMemberIdFoldersIdRequestBodyRightEnum;
}

export class PatchSpacesSpaceIdPersonsMemberIdFoldersIdRequest extends SpeakeasyBase {
  /**
   * Access to modify
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PatchSpacesSpaceIdPersonsMemberIdFoldersIdRequestBody;

  /**
   * Id of the folder
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * memberId of the person
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=memberId",
  })
  memberId: string;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=spaceId",
  })
  spaceId: string;
}

export class PatchSpacesSpaceIdPersonsMemberIdFoldersIdResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
