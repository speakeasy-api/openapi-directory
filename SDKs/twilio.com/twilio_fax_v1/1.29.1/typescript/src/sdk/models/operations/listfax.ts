/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";
export const ListFaxServerList = ["https://fax.twilio.com"] as const;

export class ListFaxSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class ListFaxRequest extends SpeakeasyBase {
  /**
   * Retrieve only those faxes with a `date_created` that is later than this value, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DateCreatedAfter;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateCreatedAfter?: Date;

  /**
   * Retrieve only those faxes with a `date_created` that is before or equal to this value, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DateCreatedOnOrBefore;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateCreatedOnOrBefore?: Date;

  /**
   * Retrieve only those faxes sent from this phone number, specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=From" })
  from?: string;

  /**
   * How many resources to return in each list page. The default is 50, and the maximum is 1000.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageSize",
  })
  pageSize?: number;

  /**
   * Retrieve only those faxes sent to this phone number, specified in [E.164](https://www.twilio.com/docs/glossary/what-e164) format.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=To" })
  to?: string;
}

export class ListFaxListFaxResponseMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "first_page_url" })
  firstPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_url" })
  nextPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "previous_page_url" })
  previousPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * OK
 */
export class ListFaxListFaxResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.FaxV1Fax })
  @Expose({ name: "faxes" })
  @Type(() => shared.FaxV1Fax)
  faxes?: shared.FaxV1Fax[];

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => ListFaxListFaxResponseMeta)
  meta?: ListFaxListFaxResponseMeta;
}

export class ListFaxResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listFaxResponse?: ListFaxListFaxResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
