// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETRegisterDBProxyTargetsActionEnum
type GETRegisterDBProxyTargetsActionEnum string

const (
	GETRegisterDBProxyTargetsActionEnumRegisterDbProxyTargets GETRegisterDBProxyTargetsActionEnum = "RegisterDBProxyTargets"
)

func (e GETRegisterDBProxyTargetsActionEnum) ToPointer() *GETRegisterDBProxyTargetsActionEnum {
	return &e
}

func (e *GETRegisterDBProxyTargetsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RegisterDBProxyTargets":
		*e = GETRegisterDBProxyTargetsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRegisterDBProxyTargetsActionEnum: %v", v)
	}
}

// GETRegisterDBProxyTargetsVersionEnum
type GETRegisterDBProxyTargetsVersionEnum string

const (
	GETRegisterDBProxyTargetsVersionEnumTwoThousandAndFourteen1031 GETRegisterDBProxyTargetsVersionEnum = "2014-10-31"
)

func (e GETRegisterDBProxyTargetsVersionEnum) ToPointer() *GETRegisterDBProxyTargetsVersionEnum {
	return &e
}

func (e *GETRegisterDBProxyTargetsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2014-10-31":
		*e = GETRegisterDBProxyTargetsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETRegisterDBProxyTargetsVersionEnum: %v", v)
	}
}

type GETRegisterDBProxyTargetsRequest struct {
	Action GETRegisterDBProxyTargetsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// One or more DB cluster identifiers.
	DBClusterIdentifiers []string `queryParam:"style=form,explode=true,name=DBClusterIdentifiers"`
	// One or more DB instance identifiers.
	DBInstanceIdentifiers []string `queryParam:"style=form,explode=true,name=DBInstanceIdentifiers"`
	// The identifier of the <code>DBProxy</code> that is associated with the <code>DBProxyTargetGroup</code>.
	DBProxyName string `queryParam:"style=form,explode=true,name=DBProxyName"`
	// The identifier of the <code>DBProxyTargetGroup</code>.
	TargetGroupName   *string                              `queryParam:"style=form,explode=true,name=TargetGroupName"`
	Version           GETRegisterDBProxyTargetsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETRegisterDBProxyTargetsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
