<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CreateParallelDataRequest
{
	#[\JMS\Serializer\Annotation\SerializedName('ClientToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $clientToken;
    
	#[\JMS\Serializer\Annotation\SerializedName('Description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The encryption key used to encrypt this object.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EncryptionKey $encryptionKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('EncryptionKey')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EncryptionKey')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EncryptionKey $encryptionKey = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
	#[\JMS\Serializer\Annotation\SerializedName('ParallelDataConfig')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ParallelDataConfig')]
    public ParallelDataConfig $parallelDataConfig;
    
    /**
     * $tags
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Tag> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('Tags')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Tag>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
	public function __construct()
	{
		$this->clientToken = "";
		$this->description = null;
		$this->encryptionKey = null;
		$this->name = "";
		$this->parallelDataConfig = new \OpenAPI\OpenAPI\Models\Shared\ParallelDataConfig();
		$this->tags = null;
	}
}
