// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StackDriftDetectionStatusEnum string

const (
	StackDriftDetectionStatusEnumDetectionInProgress StackDriftDetectionStatusEnum = "DETECTION_IN_PROGRESS"
	StackDriftDetectionStatusEnumDetectionFailed     StackDriftDetectionStatusEnum = "DETECTION_FAILED"
	StackDriftDetectionStatusEnumDetectionComplete   StackDriftDetectionStatusEnum = "DETECTION_COMPLETE"
)

func (e StackDriftDetectionStatusEnum) ToPointer() *StackDriftDetectionStatusEnum {
	return &e
}

func (e *StackDriftDetectionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DETECTION_IN_PROGRESS":
		fallthrough
	case "DETECTION_FAILED":
		fallthrough
	case "DETECTION_COMPLETE":
		*e = StackDriftDetectionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StackDriftDetectionStatusEnum: %v", v)
	}
}
