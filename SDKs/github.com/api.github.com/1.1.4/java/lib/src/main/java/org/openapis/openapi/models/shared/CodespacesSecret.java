/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CodespacesSecret - Secrets for a GitHub Codespace.
 */
public class CodespacesSecret {
    /**
     * The date and time at which the secret was created, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public CodespacesSecret withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The name of the secret
     */
    @JsonProperty("name")
    public String name;
    public CodespacesSecret withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The API URL at which the list of repositories this secret is visible to can be retrieved
     */
    @JsonProperty("selected_repositories_url")
    public String selectedRepositoriesUrl;
    public CodespacesSecret withSelectedRepositoriesUrl(String selectedRepositoriesUrl) {
        this.selectedRepositoriesUrl = selectedRepositoriesUrl;
        return this;
    }
    
    /**
     * The date and time at which the secret was last updated, in ISO 8601 format':' YYYY-MM-DDTHH:MM:SSZ.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public CodespacesSecret withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * The type of repositories in the organization that the secret is visible to
     */
    @JsonProperty("visibility")
    public CodespacesSecretVisibilityEnum visibility;
    public CodespacesSecret withVisibility(CodespacesSecretVisibilityEnum visibility) {
        this.visibility = visibility;
        return this;
    }
    
}
