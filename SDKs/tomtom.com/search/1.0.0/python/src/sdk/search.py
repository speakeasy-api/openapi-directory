"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations

class Search:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_search_version_number_c_s_category_ext_(self, request: operations.GetSearchVersionNumberCSCategoryExtRequest) -> operations.GetSearchVersionNumberCSCategoryExtResponse:
        r"""Low Bandwith Category Search"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetSearchVersionNumberCSCategoryExtRequest, base_url, '/search/{versionNumber}/cS/{category}.{ext}', request)
        
        query_params = utils.get_query_params(operations.GetSearchVersionNumberCSCategoryExtRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetSearchVersionNumberCSCategoryExtResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_search_version_number_category_search_query_ext_(self, request: operations.GetSearchVersionNumberCategorySearchQueryExtRequest) -> operations.GetSearchVersionNumberCategorySearchQueryExtResponse:
        r"""Category Search"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetSearchVersionNumberCategorySearchQueryExtRequest, base_url, '/search/{versionNumber}/categorySearch/{query}.{ext}', request)
        
        query_params = utils.get_query_params(operations.GetSearchVersionNumberCategorySearchQueryExtRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetSearchVersionNumberCategorySearchQueryExtResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_search_version_number_geometry_search_query_ext_(self, request: operations.GetSearchVersionNumberGeometrySearchQueryExtRequest) -> operations.GetSearchVersionNumberGeometrySearchQueryExtResponse:
        r"""Geometry Search"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetSearchVersionNumberGeometrySearchQueryExtRequest, base_url, '/search/{versionNumber}/geometrySearch/{query}.{ext}', request)
        
        query_params = utils.get_query_params(operations.GetSearchVersionNumberGeometrySearchQueryExtRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetSearchVersionNumberGeometrySearchQueryExtResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_search_version_number_nearby_search_ext_(self, request: operations.GetSearchVersionNumberNearbySearchExtRequest) -> operations.GetSearchVersionNumberNearbySearchExtResponse:
        r"""Nearby Search"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetSearchVersionNumberNearbySearchExtRequest, base_url, '/search/{versionNumber}/nearbySearch/.{ext}', request)
        
        query_params = utils.get_query_params(operations.GetSearchVersionNumberNearbySearchExtRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetSearchVersionNumberNearbySearchExtResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_search_version_number_poi_search_query_ext_(self, request: operations.GetSearchVersionNumberPoiSearchQueryExtRequest) -> operations.GetSearchVersionNumberPoiSearchQueryExtResponse:
        r"""Points of Interest Search"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetSearchVersionNumberPoiSearchQueryExtRequest, base_url, '/search/{versionNumber}/poiSearch/{query}.{ext}', request)
        
        query_params = utils.get_query_params(operations.GetSearchVersionNumberPoiSearchQueryExtRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetSearchVersionNumberPoiSearchQueryExtResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_search_version_number_routed_search_query_position_heading_ext_(self, request: operations.GetSearchVersionNumberRoutedSearchQueryPositionHeadingExtRequest) -> operations.GetSearchVersionNumberRoutedSearchQueryPositionHeadingExtResponse:
        r"""Routed Search"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetSearchVersionNumberRoutedSearchQueryPositionHeadingExtRequest, base_url, '/search/{versionNumber}/routedSearch/{query}/{position}/{heading}.{ext}', request)
        
        query_params = utils.get_query_params(operations.GetSearchVersionNumberRoutedSearchQueryPositionHeadingExtRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetSearchVersionNumberRoutedSearchQueryPositionHeadingExtResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_search_version_number_s_query_ext_(self, request: operations.GetSearchVersionNumberSQueryExtRequest) -> operations.GetSearchVersionNumberSQueryExtResponse:
        r"""Low bandwith Search"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetSearchVersionNumberSQueryExtRequest, base_url, '/search/{versionNumber}/s/{query}.{ext}', request)
        
        query_params = utils.get_query_params(operations.GetSearchVersionNumberSQueryExtRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetSearchVersionNumberSQueryExtResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def get_search_version_number_search_query_ext_(self, request: operations.GetSearchVersionNumberSearchQueryExtRequest) -> operations.GetSearchVersionNumberSearchQueryExtResponse:
        r"""Fuzzy Search"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetSearchVersionNumberSearchQueryExtRequest, base_url, '/search/{versionNumber}/search/{query}.{ext}', request)
        
        query_params = utils.get_query_params(operations.GetSearchVersionNumberSearchQueryExtRequest, request)
        
        client = self._security_client
        
        http_res = client.request('GET', url, params=query_params)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetSearchVersionNumberSearchQueryExtResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def post_search_version_number_geometry_search_query_ext_(self, request: operations.PostSearchVersionNumberGeometrySearchQueryExtRequest) -> operations.PostSearchVersionNumberGeometrySearchQueryExtResponse:
        r"""Geometry Search"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.PostSearchVersionNumberGeometrySearchQueryExtRequest, base_url, '/search/{versionNumber}/geometrySearch/{query}.{ext}', request)
        
        headers = {}
        req_content_type, data, form = utils.serialize_request_body(request, "request_body", 'json')
        if req_content_type not in ('multipart/form-data', 'multipart/mixed'):
            headers['content-type'] = req_content_type
        query_params = utils.get_query_params(operations.PostSearchVersionNumberGeometrySearchQueryExtRequest, request)
        
        client = self._security_client
        
        http_res = client.request('POST', url, params=query_params, data=data, files=form, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.PostSearchVersionNumberGeometrySearchQueryExtResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    def post_search_version_number_search_along_route_query_ext_(self, request: operations.PostSearchVersionNumberSearchAlongRouteQueryExtRequest) -> operations.PostSearchVersionNumberSearchAlongRouteQueryExtResponse:
        r"""Along Route Search"""
        base_url = self._server_url
        
        url = utils.generate_url(operations.PostSearchVersionNumberSearchAlongRouteQueryExtRequest, base_url, '/search/{versionNumber}/searchAlongRoute/{query}.{ext}', request)
        
        headers = {}
        req_content_type, data, form = utils.serialize_request_body(request, "request_body", 'json')
        if req_content_type not in ('multipart/form-data', 'multipart/mixed'):
            headers['content-type'] = req_content_type
        query_params = utils.get_query_params(operations.PostSearchVersionNumberSearchAlongRouteQueryExtRequest, request)
        
        client = self._security_client
        
        http_res = client.request('POST', url, params=query_params, data=data, files=form, headers=headers)
        content_type = http_res.headers.get('Content-Type')

        res = operations.PostSearchVersionNumberSearchAlongRouteQueryExtResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        

        return res

    