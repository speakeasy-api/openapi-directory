/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * OK
 */
export class OauthV1OpenidDiscovery extends SpeakeasyBase {
  /**
   * The endpoint that validates all authorization requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "authorization_endpoint" })
  authorizationEndpoint?: string;

  /**
   * A collection of claims supported by authorization server for identity token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "claims_supported" })
  claimsSupported?: string[];

  /**
   * The endpoint that validates all device code related authorization requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "device_authorization_endpoint" })
  deviceAuthorizationEndpoint?: string;

  /**
   * A collection of JWS signing algorithms supported by authorization server to sign identity token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id_token_signing_alg_values_supported" })
  idTokenSigningAlgValuesSupported?: string[];

  /**
   * The URL of the party that will create the token and sign it with its private key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "issuer" })
  issuer?: string;

  /**
   * The URL of your JSON Web Key Set. This set is a collection of JSON Web Keys, a standard method for representing cryptographic keys in a JSON structure.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jwk_uri" })
  jwkUri?: string;

  /**
   * A collection of response type supported by authorization server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "response_type_supported" })
  responseTypeSupported?: string[];

  /**
   * The endpoint used to revoke access or refresh tokens issued by the authorization server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "revocation_endpoint" })
  revocationEndpoint?: string;

  /**
   * A collection of scopes supported by authorization server for identity token
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scopes_supported" })
  scopesSupported?: string[];

  /**
   * A collection of subject by authorization server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subject_type_supported" })
  subjectTypeSupported?: string[];

  /**
   * The URL of the token endpoint. After a client has received an authorization code, that code is presented to the token endpoint and exchanged for an identity token, an access token, and a refresh token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "token_endpoint" })
  tokenEndpoint?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * The URL of the user info endpoint, which returns user profile information to a client. Keep in mind that the user info endpoint returns only the information that has been requested.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userinfo_endpoint" })
  userinfoEndpoint?: string;
}
