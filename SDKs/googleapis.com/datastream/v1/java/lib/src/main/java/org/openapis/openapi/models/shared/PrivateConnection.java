/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PrivateConnection - The PrivateConnection resource is used to establish private connectivity between Datastream and a customer's network.
 */
public class PrivateConnection {
    /**
     * Output only. The create time of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public PrivateConnection withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Required. Display name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public PrivateConnection withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Represent a user-facing Error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public Error error;

    public PrivateConnection withError(Error error) {
        this.error = error;
        return this;
    }
    
    /**
     * Labels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public PrivateConnection withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Output only. The resource's name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public PrivateConnection withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The state of the Private Connection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public PrivateConnectionStateEnum state;

    public PrivateConnection withState(PrivateConnectionStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Output only. The update time of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public PrivateConnection withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * The VPC Peering configuration is used to create VPC peering between Datastream and the consumer's VPC.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vpcPeeringConfig")
    public VpcPeeringConfig vpcPeeringConfig;

    public PrivateConnection withVpcPeeringConfig(VpcPeeringConfig vpcPeeringConfig) {
        this.vpcPeeringConfig = vpcPeeringConfig;
        return this;
    }
    
    public PrivateConnection(){}
}
