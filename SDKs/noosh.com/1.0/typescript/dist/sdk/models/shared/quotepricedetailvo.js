"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.QuotePriceDetailVO = void 0;
var utils_1 = require("../../../internal/utils");
var breakoutvo_1 = require("./breakoutvo");
var propertypaandattvo_1 = require("./propertypaandattvo");
var class_transformer_1 = require("class-transformer");
/**
 * Java type: com.noosh.nooshapi.vo.QuotePriceDetailVO
 */
var QuotePriceDetailVO = /** @class */ (function (_super) {
    __extends(QuotePriceDetailVO, _super);
    function QuotePriceDetailVO() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: breakoutvo_1.BreakoutVO }),
        (0, class_transformer_1.Expose)({ name: "breakouts" }),
        (0, class_transformer_1.Type)(function () { return breakoutvo_1.BreakoutVO; }),
        __metadata("design:type", Array)
    ], QuotePriceDetailVO.prototype, "breakouts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cost" }),
        __metadata("design:type", Object)
    ], QuotePriceDetailVO.prototype, "cost", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: propertypaandattvo_1.PropertyPaAndAttVO }),
        (0, class_transformer_1.Expose)({ name: "custom_fields" }),
        (0, class_transformer_1.Type)(function () { return propertypaandattvo_1.PropertyPaAndAttVO; }),
        __metadata("design:type", Array)
    ], QuotePriceDetailVO.prototype, "customFields", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "fixed" }),
        __metadata("design:type", Object)
    ], QuotePriceDetailVO.prototype, "fixed", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "is_chosen" }),
        __metadata("design:type", Boolean)
    ], QuotePriceDetailVO.prototype, "isChosen", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "is_included" }),
        __metadata("design:type", Boolean)
    ], QuotePriceDetailVO.prototype, "isIncluded", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "is_quoted" }),
        __metadata("design:type", Boolean)
    ], QuotePriceDetailVO.prototype, "isQuoted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "parent_price_id" }),
        __metadata("design:type", Number)
    ], QuotePriceDetailVO.prototype, "parentPriceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "price_id" }),
        __metadata("design:type", Number)
    ], QuotePriceDetailVO.prototype, "priceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "quantity" }),
        __metadata("design:type", Object)
    ], QuotePriceDetailVO.prototype, "quantity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "sell_price" }),
        __metadata("design:type", Object)
    ], QuotePriceDetailVO.prototype, "sellPrice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "shipping" }),
        __metadata("design:type", Object)
    ], QuotePriceDetailVO.prototype, "shipping", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "source" }),
        __metadata("design:type", Object)
    ], QuotePriceDetailVO.prototype, "source", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "supplier" }),
        __metadata("design:type", String)
    ], QuotePriceDetailVO.prototype, "supplier", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "tax" }),
        __metadata("design:type", Object)
    ], QuotePriceDetailVO.prototype, "tax", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "total" }),
        __metadata("design:type", Object)
    ], QuotePriceDetailVO.prototype, "total", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transactional_cost" }),
        __metadata("design:type", Object)
    ], QuotePriceDetailVO.prototype, "transactionalCost", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transactional_fixed" }),
        __metadata("design:type", Object)
    ], QuotePriceDetailVO.prototype, "transactionalFixed", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transactional_sell_price" }),
        __metadata("design:type", Object)
    ], QuotePriceDetailVO.prototype, "transactionalSellPrice", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transactional_shipping" }),
        __metadata("design:type", Object)
    ], QuotePriceDetailVO.prototype, "transactionalShipping", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transactional_tax" }),
        __metadata("design:type", Object)
    ], QuotePriceDetailVO.prototype, "transactionalTax", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transactional_total" }),
        __metadata("design:type", Object)
    ], QuotePriceDetailVO.prototype, "transactionalTotal", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transactional_variable" }),
        __metadata("design:type", Object)
    ], QuotePriceDetailVO.prototype, "transactionalVariable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "variable" }),
        __metadata("design:type", Object)
    ], QuotePriceDetailVO.prototype, "variable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "variable_percent" }),
        __metadata("design:type", Object)
    ], QuotePriceDetailVO.prototype, "variablePercent", void 0);
    return QuotePriceDetailVO;
}(utils_1.SpeakeasyBase));
exports.QuotePriceDetailVO = QuotePriceDetailVO;
