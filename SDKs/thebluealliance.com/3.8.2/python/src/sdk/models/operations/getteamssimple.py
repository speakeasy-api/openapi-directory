"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import team_simple as shared_team_simple
from typing import Optional


@dataclasses.dataclass
class GetTeamsSimpleSecurity:
    
    api_key: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-TBA-Auth-Key' }})  
    

@dataclasses.dataclass
class GetTeamsSimpleRequest:
    
    page_num: int = dataclasses.field(metadata={'path_param': { 'field_name': 'page_num', 'style': 'simple', 'explode': False }})
    r"""Page number of results to return, zero-indexed"""  
    if_none_match: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'If-None-Match', 'style': 'simple', 'explode': False }})
    r"""Value of the `ETag` header in the most recently cached response by the client."""  
    

@dataclasses.dataclass
class GetTeamsSimpleResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    team_simples: Optional[list[shared_team_simple.TeamSimple]] = dataclasses.field(default=None)
    r"""Successful response"""  
    