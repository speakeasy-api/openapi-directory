"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RechnungsdruckWebAppControllersAPIWebHookAPIModel:
    r"""The webhook to create. Attach ?noecho to the uri to prevent echo test."""
    
    secret: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Secret') }, 'form': { 'field_name': 'Secret' }})  
    web_hook_uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WebHookUri') }, 'form': { 'field_name': 'WebHookUri' }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Description' }})  
    filters: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Filters'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Filters' }})  
    headers: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Headers'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Headers', 'json': True }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Id' }})  
    is_paused: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsPaused'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'IsPaused' }})  
    properties: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Properties'), 'exclude': lambda f: f is None }, 'form': { 'field_name': 'Properties', 'json': True }})  
    