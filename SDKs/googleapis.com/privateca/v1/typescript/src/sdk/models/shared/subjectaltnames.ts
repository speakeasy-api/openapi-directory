/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { X509Extension } from "./x509extension";
import { Expose, Type } from "class-transformer";

/**
 * SubjectAltNames corresponds to a more modern way of listing what the asserted identity is in a certificate (i.e., compared to the "common name" in the distinguished name).
 */
export class SubjectAltNames extends SpeakeasyBase {
  /**
   * Contains additional subject alternative name values. For each custom_san, the `value` field must contain an ASN.1 encoded UTF8String.
   */
  @SpeakeasyMetadata({ elemType: X509Extension })
  @Expose({ name: "customSans" })
  @Type(() => X509Extension)
  customSans?: X509Extension[];

  /**
   * Contains only valid, fully-qualified host names.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dnsNames" })
  dnsNames?: string[];

  /**
   * Contains only valid RFC 2822 E-mail addresses.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emailAddresses" })
  emailAddresses?: string[];

  /**
   * Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ipAddresses" })
  ipAddresses?: string[];

  /**
   * Contains only valid RFC 3986 URIs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uris" })
  uris?: string[];
}
