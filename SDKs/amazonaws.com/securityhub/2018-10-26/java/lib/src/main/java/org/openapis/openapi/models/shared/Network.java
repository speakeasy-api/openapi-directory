/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Network - The details of network-related information about a finding.
 */
public class Network {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DestinationDomain")
    public String destinationDomain;
    public Network withDestinationDomain(String destinationDomain) {
        this.destinationDomain = destinationDomain;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DestinationIpV4")
    public String destinationIpV4;
    public Network withDestinationIpV4(String destinationIpV4) {
        this.destinationIpV4 = destinationIpV4;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DestinationIpV6")
    public String destinationIpV6;
    public Network withDestinationIpV6(String destinationIpV6) {
        this.destinationIpV6 = destinationIpV6;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DestinationPort")
    public Long destinationPort;
    public Network withDestinationPort(Long destinationPort) {
        this.destinationPort = destinationPort;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Direction")
    public NetworkDirectionEnum direction;
    public Network withDirection(NetworkDirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OpenPortRange")
    public PortRange openPortRange;
    public Network withOpenPortRange(PortRange openPortRange) {
        this.openPortRange = openPortRange;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Protocol")
    public String protocol;
    public Network withProtocol(String protocol) {
        this.protocol = protocol;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceDomain")
    public String sourceDomain;
    public Network withSourceDomain(String sourceDomain) {
        this.sourceDomain = sourceDomain;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceIpV4")
    public String sourceIpV4;
    public Network withSourceIpV4(String sourceIpV4) {
        this.sourceIpV4 = sourceIpV4;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceIpV6")
    public String sourceIpV6;
    public Network withSourceIpV6(String sourceIpV6) {
        this.sourceIpV6 = sourceIpV6;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourceMac")
    public String sourceMac;
    public Network withSourceMac(String sourceMac) {
        this.sourceMac = sourceMac;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SourcePort")
    public Long sourcePort;
    public Network withSourcePort(Long sourcePort) {
        this.sourcePort = sourcePort;
        return this;
    }
    
}
