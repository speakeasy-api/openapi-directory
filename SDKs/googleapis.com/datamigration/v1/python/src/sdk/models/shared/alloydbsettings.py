"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import primaryinstancesettings as shared_primaryinstancesettings
from ..shared import userpassword as shared_userpassword
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AlloyDbSettings:
    r"""Settings for creating an AlloyDB cluster."""
    
    initial_user: Optional[shared_userpassword.UserPassword] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('initialUser'), 'exclude': lambda f: f is None }})
    r"""The username/password for a database user. Used for specifying initial users at cluster creation time."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Labels for the AlloyDB cluster created by DMS. An object containing a list of 'key', 'value' pairs."""  
    primary_instance_settings: Optional[shared_primaryinstancesettings.PrimaryInstanceSettings] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primaryInstanceSettings'), 'exclude': lambda f: f is None }})
    r"""Settings for the cluster's primary instance"""  
    vpc_network: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vpcNetwork'), 'exclude': lambda f: f is None }})
    r"""Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: \\"projects/{project_number}/global/networks/{network_id}\\". This is required to create a cluster."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AlloyDbSettingsInput:
    r"""Settings for creating an AlloyDB cluster."""
    
    initial_user: Optional[shared_userpassword.UserPasswordInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('initialUser'), 'exclude': lambda f: f is None }})
    r"""The username/password for a database user. Used for specifying initial users at cluster creation time."""  
    labels: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labels'), 'exclude': lambda f: f is None }})
    r"""Labels for the AlloyDB cluster created by DMS. An object containing a list of 'key', 'value' pairs."""  
    primary_instance_settings: Optional[shared_primaryinstancesettings.PrimaryInstanceSettingsInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primaryInstanceSettings'), 'exclude': lambda f: f is None }})
    r"""Settings for the cluster's primary instance"""  
    vpc_network: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vpcNetwork'), 'exclude': lambda f: f is None }})
    r"""Required. The resource link for the VPC network in which cluster resources are created and from which they are accessible via Private IP. The network must belong to the same project as the cluster. It is specified in the form: \\"projects/{project_number}/global/networks/{network_id}\\". This is required to create a cluster."""  
    