"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import historicallisting as shared_historicallisting
from ..shared import sort_order_enum as shared_sort_order_enum
from typing import Optional


@dataclasses.dataclass
class GetHistoryCarUkVrmRequest:
    
    vrm: str = dataclasses.field(metadata={'path_param': { 'field_name': 'vrm', 'style': 'simple', 'explode': False }})
    r"""The VRM to identify the car."""  
    api_key: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'api_key', 'style': 'form', 'explode': True }})
    r"""The API Authentication Key. Mandatory with all API calls."""  
    include_duplicates: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include_duplicates', 'style': 'form', 'explode': True }})
    r"""Flag to indicate whether to include duplicate historical records as well in the response"""  
    page: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Page number to fetch the results for the given criteria. Default is 1."""  
    sort_order: Optional[shared_sort_order_enum.SortOrderEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort_order', 'style': 'form', 'explode': True }})
    r"""Sort order - asc or desc. Default sort order is asc"""  
    

@dataclasses.dataclass
class GetHistoryCarUkVrmResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Error"""  
    historical_listings: Optional[list[shared_historicallisting.HistoricalListing]] = dataclasses.field(default=None)
    r"""Online listing history for the given vrm"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    