"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GETListPoliciesResponse = exports.GETListPoliciesRequest = exports.GETListPoliciesVersionEnum = exports.GETListPoliciesScopeEnum = exports.GETListPoliciesPolicyUsageFilterEnum = exports.GETListPoliciesActionEnum = void 0;
var utils_1 = require("../../../internal/utils");
var GETListPoliciesActionEnum;
(function (GETListPoliciesActionEnum) {
    GETListPoliciesActionEnum["ListPolicies"] = "ListPolicies";
})(GETListPoliciesActionEnum = exports.GETListPoliciesActionEnum || (exports.GETListPoliciesActionEnum = {}));
/**
 * <p>The policy usage type that indicates whether the policy is used as a permissions policy or as the permissions boundary for an entity.</p> <p>For more information about permissions boundaries, see <a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html">Permissions boundaries for IAM identities </a> in the <i>IAM User Guide</i>.</p>
 */
var GETListPoliciesPolicyUsageFilterEnum;
(function (GETListPoliciesPolicyUsageFilterEnum) {
    GETListPoliciesPolicyUsageFilterEnum["PermissionsPolicy"] = "PermissionsPolicy";
    GETListPoliciesPolicyUsageFilterEnum["PermissionsBoundary"] = "PermissionsBoundary";
})(GETListPoliciesPolicyUsageFilterEnum = exports.GETListPoliciesPolicyUsageFilterEnum || (exports.GETListPoliciesPolicyUsageFilterEnum = {}));
/**
 * <p>The scope to use for filtering the results.</p> <p>To list only Amazon Web Services managed policies, set <code>Scope</code> to <code>AWS</code>. To list only the customer managed policies in your Amazon Web Services account, set <code>Scope</code> to <code>Local</code>.</p> <p>This parameter is optional. If it is not included, or if it is set to <code>All</code>, all policies are returned.</p>
 */
var GETListPoliciesScopeEnum;
(function (GETListPoliciesScopeEnum) {
    GETListPoliciesScopeEnum["All"] = "All";
    GETListPoliciesScopeEnum["Aws"] = "AWS";
    GETListPoliciesScopeEnum["Local"] = "Local";
})(GETListPoliciesScopeEnum = exports.GETListPoliciesScopeEnum || (exports.GETListPoliciesScopeEnum = {}));
var GETListPoliciesVersionEnum;
(function (GETListPoliciesVersionEnum) {
    GETListPoliciesVersionEnum["TwoThousandAndTen0508"] = "2010-05-08";
})(GETListPoliciesVersionEnum = exports.GETListPoliciesVersionEnum || (exports.GETListPoliciesVersionEnum = {}));
var GETListPoliciesRequest = /** @class */ (function (_super) {
    __extends(GETListPoliciesRequest, _super);
    function GETListPoliciesRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Action",
        }),
        __metadata("design:type", String)
    ], GETListPoliciesRequest.prototype, "action", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Marker",
        }),
        __metadata("design:type", String)
    ], GETListPoliciesRequest.prototype, "marker", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=MaxItems",
        }),
        __metadata("design:type", Number)
    ], GETListPoliciesRequest.prototype, "maxItems", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=OnlyAttached",
        }),
        __metadata("design:type", Boolean)
    ], GETListPoliciesRequest.prototype, "onlyAttached", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=PathPrefix",
        }),
        __metadata("design:type", String)
    ], GETListPoliciesRequest.prototype, "pathPrefix", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=PolicyUsageFilter",
        }),
        __metadata("design:type", String)
    ], GETListPoliciesRequest.prototype, "policyUsageFilter", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "queryParam, style=form;explode=true;name=Scope" }),
        __metadata("design:type", String)
    ], GETListPoliciesRequest.prototype, "scope", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Version",
        }),
        __metadata("design:type", String)
    ], GETListPoliciesRequest.prototype, "version", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], GETListPoliciesRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], GETListPoliciesRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], GETListPoliciesRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], GETListPoliciesRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], GETListPoliciesRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], GETListPoliciesRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], GETListPoliciesRequest.prototype, "xAmzSignedHeaders", void 0);
    return GETListPoliciesRequest;
}(utils_1.SpeakeasyBase));
exports.GETListPoliciesRequest = GETListPoliciesRequest;
var GETListPoliciesResponse = /** @class */ (function (_super) {
    __extends(GETListPoliciesResponse, _super);
    function GETListPoliciesResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], GETListPoliciesResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GETListPoliciesResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GETListPoliciesResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GETListPoliciesResponse.prototype, "rawResponse", void 0);
    return GETListPoliciesResponse;
}(utils_1.SpeakeasyBase));
exports.GETListPoliciesResponse = GETListPoliciesResponse;
