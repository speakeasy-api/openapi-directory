// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LineItemEntityStatusEnum - Required. Controls whether or not the line item can spend its budget and bid on inventory. * For CreateLineItem method, only `ENTITY_STATUS_DRAFT` is allowed. To activate a line item, use UpdateLineItem method and update the status to `ENTITY_STATUS_ACTIVE` after creation. * A line item cannot be changed back to `ENTITY_STATUS_DRAFT` status from any other status. * If the line item's parent insertion order is not active, the line item can't spend its budget even if its own status is `ENTITY_STATUS_ACTIVE`.
type LineItemEntityStatusEnum string

const (
	LineItemEntityStatusEnumEntityStatusUnspecified          LineItemEntityStatusEnum = "ENTITY_STATUS_UNSPECIFIED"
	LineItemEntityStatusEnumEntityStatusActive               LineItemEntityStatusEnum = "ENTITY_STATUS_ACTIVE"
	LineItemEntityStatusEnumEntityStatusArchived             LineItemEntityStatusEnum = "ENTITY_STATUS_ARCHIVED"
	LineItemEntityStatusEnumEntityStatusDraft                LineItemEntityStatusEnum = "ENTITY_STATUS_DRAFT"
	LineItemEntityStatusEnumEntityStatusPaused               LineItemEntityStatusEnum = "ENTITY_STATUS_PAUSED"
	LineItemEntityStatusEnumEntityStatusScheduledForDeletion LineItemEntityStatusEnum = "ENTITY_STATUS_SCHEDULED_FOR_DELETION"
)

func (e LineItemEntityStatusEnum) ToPointer() *LineItemEntityStatusEnum {
	return &e
}

func (e *LineItemEntityStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ENTITY_STATUS_UNSPECIFIED":
		fallthrough
	case "ENTITY_STATUS_ACTIVE":
		fallthrough
	case "ENTITY_STATUS_ARCHIVED":
		fallthrough
	case "ENTITY_STATUS_DRAFT":
		fallthrough
	case "ENTITY_STATUS_PAUSED":
		fallthrough
	case "ENTITY_STATUS_SCHEDULED_FOR_DELETION":
		*e = LineItemEntityStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LineItemEntityStatusEnum: %v", v)
	}
}

// LineItemLineItemTypeEnum - Required. Immutable. The type of the line item.
type LineItemLineItemTypeEnum string

const (
	LineItemLineItemTypeEnumLineItemTypeUnspecified               LineItemLineItemTypeEnum = "LINE_ITEM_TYPE_UNSPECIFIED"
	LineItemLineItemTypeEnumLineItemTypeDisplayDefault            LineItemLineItemTypeEnum = "LINE_ITEM_TYPE_DISPLAY_DEFAULT"
	LineItemLineItemTypeEnumLineItemTypeDisplayMobileAppInstall   LineItemLineItemTypeEnum = "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL"
	LineItemLineItemTypeEnumLineItemTypeVideoDefault              LineItemLineItemTypeEnum = "LINE_ITEM_TYPE_VIDEO_DEFAULT"
	LineItemLineItemTypeEnumLineItemTypeVideoMobileAppInstall     LineItemLineItemTypeEnum = "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL"
	LineItemLineItemTypeEnumLineItemTypeDisplayMobileAppInventory LineItemLineItemTypeEnum = "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INVENTORY"
	LineItemLineItemTypeEnumLineItemTypeVideoMobileAppInventory   LineItemLineItemTypeEnum = "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INVENTORY"
	LineItemLineItemTypeEnumLineItemTypeAudioDefault              LineItemLineItemTypeEnum = "LINE_ITEM_TYPE_AUDIO_DEFAULT"
	LineItemLineItemTypeEnumLineItemTypeVideoOverTheTop           LineItemLineItemTypeEnum = "LINE_ITEM_TYPE_VIDEO_OVER_THE_TOP"
)

func (e LineItemLineItemTypeEnum) ToPointer() *LineItemLineItemTypeEnum {
	return &e
}

func (e *LineItemLineItemTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LINE_ITEM_TYPE_UNSPECIFIED":
		fallthrough
	case "LINE_ITEM_TYPE_DISPLAY_DEFAULT":
		fallthrough
	case "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL":
		fallthrough
	case "LINE_ITEM_TYPE_VIDEO_DEFAULT":
		fallthrough
	case "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL":
		fallthrough
	case "LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INVENTORY":
		fallthrough
	case "LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INVENTORY":
		fallthrough
	case "LINE_ITEM_TYPE_AUDIO_DEFAULT":
		fallthrough
	case "LINE_ITEM_TYPE_VIDEO_OVER_THE_TOP":
		*e = LineItemLineItemTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LineItemLineItemTypeEnum: %v", v)
	}
}

// LineItemInput - A single line item.
type LineItemInput struct {
	// Settings that control the bid strategy. Bid strategy determines the bid price.
	BidStrategy *BiddingStrategy `json:"bidStrategy,omitempty"`
	// Settings that control how budget is allocated.
	Budget *LineItemBudgetInput `json:"budget,omitempty"`
	// Settings that control how conversions are counted. All post-click conversions will be counted. A percentage value can be set for post-view conversions counting.
	ConversionCounting *ConversionCountingConfig `json:"conversionCounting,omitempty"`
	// The IDs of the creatives associated with the line item.
	CreativeIds []string `json:"creativeIds,omitempty"`
	// Required. The display name of the line item. Must be UTF-8 encoded with a maximum size of 240 bytes.
	DisplayName *string `json:"displayName,omitempty"`
	// Required. Controls whether or not the line item can spend its budget and bid on inventory. * For CreateLineItem method, only `ENTITY_STATUS_DRAFT` is allowed. To activate a line item, use UpdateLineItem method and update the status to `ENTITY_STATUS_ACTIVE` after creation. * A line item cannot be changed back to `ENTITY_STATUS_DRAFT` status from any other status. * If the line item's parent insertion order is not active, the line item can't spend its budget even if its own status is `ENTITY_STATUS_ACTIVE`.
	EntityStatus *LineItemEntityStatusEnum `json:"entityStatus,omitempty"`
	// Whether to exclude new exchanges from automatically being targeted by the line item. This field is false by default.
	ExcludeNewExchanges *bool `json:"excludeNewExchanges,omitempty"`
	// Settings that control the active duration of a line item.
	Flight *LineItemFlight `json:"flight,omitempty"`
	// Settings that control the number of times a user may be shown with the same ad during a given time period.
	FrequencyCap *FrequencyCap `json:"frequencyCap,omitempty"`
	// Required. Immutable. The unique ID of the insertion order that the line item belongs to.
	InsertionOrderID *string `json:"insertionOrderId,omitempty"`
	// Integration details of an entry.
	IntegrationDetails *IntegrationDetails `json:"integrationDetails,omitempty"`
	// The IDs of the private inventory sources assigned to the line item.
	InventorySourceIds []string `json:"inventorySourceIds,omitempty"`
	// Required. Immutable. The type of the line item.
	LineItemType *LineItemLineItemTypeEnum `json:"lineItemType,omitempty"`
	// A mobile app promoted by a mobile app install line item.
	MobileApp *MobileAppInput `json:"mobileApp,omitempty"`
	// Settings that control the rate at which a budget is spent.
	Pacing *Pacing `json:"pacing,omitempty"`
	// The partner costs associated with the line item. If absent or empty in CreateLineItem method, the newly created line item will inherit partner costs from its parent insertion order.
	PartnerCosts []PartnerCost `json:"partnerCosts,omitempty"`
	// Settings that control how partner revenue is calculated.
	PartnerRevenueModel *PartnerRevenueModel `json:"partnerRevenueModel,omitempty"`
	// Settings that control the targeting expansion of the line item. Targeting expansion allows the line item to reach a larger audience based on the original audience list and the targeting expansion level. Beginning **March 25, 2023**, these settings may represent the [optimized targeting feature](//support.google.com/displayvideo/answer/12060859) in place of targeting expansion. This feature will be rolled out to all partners by early May 2023.
	TargetingExpansion *TargetingExpansionConfig `json:"targetingExpansion,omitempty"`
}

// LineItemReservationTypeEnum - Output only. The reservation type of the line item.
type LineItemReservationTypeEnum string

const (
	LineItemReservationTypeEnumReservationTypeUnspecified            LineItemReservationTypeEnum = "RESERVATION_TYPE_UNSPECIFIED"
	LineItemReservationTypeEnumReservationTypeNotGuaranteed          LineItemReservationTypeEnum = "RESERVATION_TYPE_NOT_GUARANTEED"
	LineItemReservationTypeEnumReservationTypeProgrammaticGuaranteed LineItemReservationTypeEnum = "RESERVATION_TYPE_PROGRAMMATIC_GUARANTEED"
	LineItemReservationTypeEnumReservationTypeTagGuaranteed          LineItemReservationTypeEnum = "RESERVATION_TYPE_TAG_GUARANTEED"
)

func (e LineItemReservationTypeEnum) ToPointer() *LineItemReservationTypeEnum {
	return &e
}

func (e *LineItemReservationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RESERVATION_TYPE_UNSPECIFIED":
		fallthrough
	case "RESERVATION_TYPE_NOT_GUARANTEED":
		fallthrough
	case "RESERVATION_TYPE_PROGRAMMATIC_GUARANTEED":
		fallthrough
	case "RESERVATION_TYPE_TAG_GUARANTEED":
		*e = LineItemReservationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LineItemReservationTypeEnum: %v", v)
	}
}

type LineItemWarningMessagesEnum string

const (
	LineItemWarningMessagesEnumLineItemWarningMessageUnspecified            LineItemWarningMessagesEnum = "LINE_ITEM_WARNING_MESSAGE_UNSPECIFIED"
	LineItemWarningMessagesEnumInvalidFlightDates                           LineItemWarningMessagesEnum = "INVALID_FLIGHT_DATES"
	LineItemWarningMessagesEnumExpired                                      LineItemWarningMessagesEnum = "EXPIRED"
	LineItemWarningMessagesEnumPendingFlight                                LineItemWarningMessagesEnum = "PENDING_FLIGHT"
	LineItemWarningMessagesEnumAllPartnerEnabledExchangesNegativelyTargeted LineItemWarningMessagesEnum = "ALL_PARTNER_ENABLED_EXCHANGES_NEGATIVELY_TARGETED"
	LineItemWarningMessagesEnumInvalidInventorySource                       LineItemWarningMessagesEnum = "INVALID_INVENTORY_SOURCE"
	LineItemWarningMessagesEnumAppInventoryInvalidSiteTargeting             LineItemWarningMessagesEnum = "APP_INVENTORY_INVALID_SITE_TARGETING"
	LineItemWarningMessagesEnumAppInventoryInvalidAudienceLists             LineItemWarningMessagesEnum = "APP_INVENTORY_INVALID_AUDIENCE_LISTS"
	LineItemWarningMessagesEnumNoValidCreative                              LineItemWarningMessagesEnum = "NO_VALID_CREATIVE"
	LineItemWarningMessagesEnumParentInsertionOrderPaused                   LineItemWarningMessagesEnum = "PARENT_INSERTION_ORDER_PAUSED"
	LineItemWarningMessagesEnumParentInsertionOrderExpired                  LineItemWarningMessagesEnum = "PARENT_INSERTION_ORDER_EXPIRED"
	LineItemWarningMessagesEnumNoPositiveAudienceListTargeted               LineItemWarningMessagesEnum = "NO_POSITIVE_AUDIENCE_LIST_TARGETED"
	LineItemWarningMessagesEnumAppInstallNoConversionPixel                  LineItemWarningMessagesEnum = "APP_INSTALL_NO_CONVERSION_PIXEL"
	LineItemWarningMessagesEnumTargetingRevokedOrClosedUserList             LineItemWarningMessagesEnum = "TARGETING_REVOKED_OR_CLOSED_USER_LIST"
	LineItemWarningMessagesEnumAppInstallNoOptimalBiddingStrategy           LineItemWarningMessagesEnum = "APP_INSTALL_NO_OPTIMAL_BIDDING_STRATEGY"
	LineItemWarningMessagesEnumCreativeSizeNotInUseForTargetedDeals         LineItemWarningMessagesEnum = "CREATIVE_SIZE_NOT_IN_USE_FOR_TARGETED_DEALS"
	LineItemWarningMessagesEnumNoCreativeForTargetedDeals                   LineItemWarningMessagesEnum = "NO_CREATIVE_FOR_TARGETED_DEALS"
	LineItemWarningMessagesEnumTargetingDeprecatedGeoTarget                 LineItemWarningMessagesEnum = "TARGETING_DEPRECATED_GEO_TARGET"
	LineItemWarningMessagesEnumDeprecatedFirstPartyAudienceExclusion        LineItemWarningMessagesEnum = "DEPRECATED_FIRST_PARTY_AUDIENCE_EXCLUSION"
)

func (e LineItemWarningMessagesEnum) ToPointer() *LineItemWarningMessagesEnum {
	return &e
}

func (e *LineItemWarningMessagesEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "LINE_ITEM_WARNING_MESSAGE_UNSPECIFIED":
		fallthrough
	case "INVALID_FLIGHT_DATES":
		fallthrough
	case "EXPIRED":
		fallthrough
	case "PENDING_FLIGHT":
		fallthrough
	case "ALL_PARTNER_ENABLED_EXCHANGES_NEGATIVELY_TARGETED":
		fallthrough
	case "INVALID_INVENTORY_SOURCE":
		fallthrough
	case "APP_INVENTORY_INVALID_SITE_TARGETING":
		fallthrough
	case "APP_INVENTORY_INVALID_AUDIENCE_LISTS":
		fallthrough
	case "NO_VALID_CREATIVE":
		fallthrough
	case "PARENT_INSERTION_ORDER_PAUSED":
		fallthrough
	case "PARENT_INSERTION_ORDER_EXPIRED":
		fallthrough
	case "NO_POSITIVE_AUDIENCE_LIST_TARGETED":
		fallthrough
	case "APP_INSTALL_NO_CONVERSION_PIXEL":
		fallthrough
	case "TARGETING_REVOKED_OR_CLOSED_USER_LIST":
		fallthrough
	case "APP_INSTALL_NO_OPTIMAL_BIDDING_STRATEGY":
		fallthrough
	case "CREATIVE_SIZE_NOT_IN_USE_FOR_TARGETED_DEALS":
		fallthrough
	case "NO_CREATIVE_FOR_TARGETED_DEALS":
		fallthrough
	case "TARGETING_DEPRECATED_GEO_TARGET":
		fallthrough
	case "DEPRECATED_FIRST_PARTY_AUDIENCE_EXCLUSION":
		*e = LineItemWarningMessagesEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LineItemWarningMessagesEnum: %v", v)
	}
}

// LineItem - A single line item.
type LineItem struct {
	// Output only. The unique ID of the advertiser the line item belongs to.
	AdvertiserID *string `json:"advertiserId,omitempty"`
	// Settings that control the bid strategy. Bid strategy determines the bid price.
	BidStrategy *BiddingStrategy `json:"bidStrategy,omitempty"`
	// Settings that control how budget is allocated.
	Budget *LineItemBudget `json:"budget,omitempty"`
	// Output only. The unique ID of the campaign that the line item belongs to.
	CampaignID *string `json:"campaignId,omitempty"`
	// Settings that control how conversions are counted. All post-click conversions will be counted. A percentage value can be set for post-view conversions counting.
	ConversionCounting *ConversionCountingConfig `json:"conversionCounting,omitempty"`
	// The IDs of the creatives associated with the line item.
	CreativeIds []string `json:"creativeIds,omitempty"`
	// Required. The display name of the line item. Must be UTF-8 encoded with a maximum size of 240 bytes.
	DisplayName *string `json:"displayName,omitempty"`
	// Required. Controls whether or not the line item can spend its budget and bid on inventory. * For CreateLineItem method, only `ENTITY_STATUS_DRAFT` is allowed. To activate a line item, use UpdateLineItem method and update the status to `ENTITY_STATUS_ACTIVE` after creation. * A line item cannot be changed back to `ENTITY_STATUS_DRAFT` status from any other status. * If the line item's parent insertion order is not active, the line item can't spend its budget even if its own status is `ENTITY_STATUS_ACTIVE`.
	EntityStatus *LineItemEntityStatusEnum `json:"entityStatus,omitempty"`
	// Whether to exclude new exchanges from automatically being targeted by the line item. This field is false by default.
	ExcludeNewExchanges *bool `json:"excludeNewExchanges,omitempty"`
	// Settings that control the active duration of a line item.
	Flight *LineItemFlight `json:"flight,omitempty"`
	// Settings that control the number of times a user may be shown with the same ad during a given time period.
	FrequencyCap *FrequencyCap `json:"frequencyCap,omitempty"`
	// Required. Immutable. The unique ID of the insertion order that the line item belongs to.
	InsertionOrderID *string `json:"insertionOrderId,omitempty"`
	// Integration details of an entry.
	IntegrationDetails *IntegrationDetails `json:"integrationDetails,omitempty"`
	// The IDs of the private inventory sources assigned to the line item.
	InventorySourceIds []string `json:"inventorySourceIds,omitempty"`
	// Output only. The unique ID of the line item. Assigned by the system.
	LineItemID *string `json:"lineItemId,omitempty"`
	// Required. Immutable. The type of the line item.
	LineItemType *LineItemLineItemTypeEnum `json:"lineItemType,omitempty"`
	// A mobile app promoted by a mobile app install line item.
	MobileApp *MobileApp `json:"mobileApp,omitempty"`
	// Output only. The resource name of the line item.
	Name *string `json:"name,omitempty"`
	// Settings that control the rate at which a budget is spent.
	Pacing *Pacing `json:"pacing,omitempty"`
	// The partner costs associated with the line item. If absent or empty in CreateLineItem method, the newly created line item will inherit partner costs from its parent insertion order.
	PartnerCosts []PartnerCost `json:"partnerCosts,omitempty"`
	// Settings that control how partner revenue is calculated.
	PartnerRevenueModel *PartnerRevenueModel `json:"partnerRevenueModel,omitempty"`
	// Output only. The reservation type of the line item.
	ReservationType *LineItemReservationTypeEnum `json:"reservationType,omitempty"`
	// Settings that control the targeting expansion of the line item. Targeting expansion allows the line item to reach a larger audience based on the original audience list and the targeting expansion level. Beginning **March 25, 2023**, these settings may represent the [optimized targeting feature](//support.google.com/displayvideo/answer/12060859) in place of targeting expansion. This feature will be rolled out to all partners by early May 2023.
	TargetingExpansion *TargetingExpansionConfig `json:"targetingExpansion,omitempty"`
	// Output only. The timestamp when the line item was last updated. Assigned by the system.
	UpdateTime *string `json:"updateTime,omitempty"`
	// Output only. The warning messages generated by the line item. These warnings do not block saving the line item, but some may block the line item from running.
	WarningMessages []LineItemWarningMessagesEnum `json:"warningMessages,omitempty"`
}
