"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateChannelTypeRequest = exports.CreateChannelTypeRequestBlocklistBehaviorEnum = exports.CreateChannelTypeRequestAutoModerationBehaviorEnum = exports.CreateChannelTypeRequestAutoModerationEnum = void 0;
var utils_1 = require("../../../internal/utils");
var policyrequest_1 = require("./policyrequest");
var class_transformer_1 = require("class-transformer");
/**
 * Enables automatic message moderation
 */
var CreateChannelTypeRequestAutoModerationEnum;
(function (CreateChannelTypeRequestAutoModerationEnum) {
    CreateChannelTypeRequestAutoModerationEnum["Disabled"] = "disabled";
    CreateChannelTypeRequestAutoModerationEnum["Simple"] = "simple";
    CreateChannelTypeRequestAutoModerationEnum["Ai"] = "AI";
})(CreateChannelTypeRequestAutoModerationEnum = exports.CreateChannelTypeRequestAutoModerationEnum || (exports.CreateChannelTypeRequestAutoModerationEnum = {}));
/**
 * Sets behavior of automatic moderation
 */
var CreateChannelTypeRequestAutoModerationBehaviorEnum;
(function (CreateChannelTypeRequestAutoModerationBehaviorEnum) {
    CreateChannelTypeRequestAutoModerationBehaviorEnum["Flag"] = "flag";
    CreateChannelTypeRequestAutoModerationBehaviorEnum["Block"] = "block";
})(CreateChannelTypeRequestAutoModerationBehaviorEnum = exports.CreateChannelTypeRequestAutoModerationBehaviorEnum || (exports.CreateChannelTypeRequestAutoModerationBehaviorEnum = {}));
/**
 * Sets behavior of blocklist
 */
var CreateChannelTypeRequestBlocklistBehaviorEnum;
(function (CreateChannelTypeRequestBlocklistBehaviorEnum) {
    CreateChannelTypeRequestBlocklistBehaviorEnum["Flag"] = "flag";
    CreateChannelTypeRequestBlocklistBehaviorEnum["Block"] = "block";
})(CreateChannelTypeRequestBlocklistBehaviorEnum = exports.CreateChannelTypeRequestBlocklistBehaviorEnum || (exports.CreateChannelTypeRequestBlocklistBehaviorEnum = {}));
var CreateChannelTypeRequest = /** @class */ (function (_super) {
    __extends(CreateChannelTypeRequest, _super);
    function CreateChannelTypeRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "automod" }),
        __metadata("design:type", String)
    ], CreateChannelTypeRequest.prototype, "automod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "automod_behavior" }),
        __metadata("design:type", String)
    ], CreateChannelTypeRequest.prototype, "automodBehavior", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "blocklist" }),
        __metadata("design:type", String)
    ], CreateChannelTypeRequest.prototype, "blocklist", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "blocklist_behavior" }),
        __metadata("design:type", String)
    ], CreateChannelTypeRequest.prototype, "blocklistBehavior", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "commands" }),
        __metadata("design:type", Array)
    ], CreateChannelTypeRequest.prototype, "commands", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "connect_events" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeRequest.prototype, "connectEvents", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "custom_events" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeRequest.prototype, "customEvents", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "grants" }),
        __metadata("design:type", Object)
    ], CreateChannelTypeRequest.prototype, "grants", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "max_message_length" }),
        __metadata("design:type", Number)
    ], CreateChannelTypeRequest.prototype, "maxMessageLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "message_retention" }),
        __metadata("design:type", String)
    ], CreateChannelTypeRequest.prototype, "messageRetention", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mutes" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeRequest.prototype, "mutes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], CreateChannelTypeRequest.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: policyrequest_1.PolicyRequest }),
        (0, class_transformer_1.Expose)({ name: "permissions" }),
        (0, class_transformer_1.Type)(function () { return policyrequest_1.PolicyRequest; }),
        __metadata("design:type", Array)
    ], CreateChannelTypeRequest.prototype, "permissions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "push_notifications" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeRequest.prototype, "pushNotifications", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reactions" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeRequest.prototype, "reactions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "read_events" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeRequest.prototype, "readEvents", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "replies" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeRequest.prototype, "replies", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "search" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeRequest.prototype, "search", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "typing_events" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeRequest.prototype, "typingEvents", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uploads" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeRequest.prototype, "uploads", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url_enrichment" }),
        __metadata("design:type", Boolean)
    ], CreateChannelTypeRequest.prototype, "urlEnrichment", void 0);
    return CreateChannelTypeRequest;
}(utils_1.SpeakeasyBase));
exports.CreateChannelTypeRequest = CreateChannelTypeRequest;
