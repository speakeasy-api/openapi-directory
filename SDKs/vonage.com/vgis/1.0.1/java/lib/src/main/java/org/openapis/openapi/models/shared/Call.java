/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * Call - Successful
 */
public class Call {
    /**
     * Unique identifier of the account
     */
    @JsonProperty("accountId")
    public Long accountId;

    public Call withAccountId(Long accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Time to answer the call
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("answerTime")
    public LocalDate answerTime;

    public Call withAnswerTime(LocalDate answerTime) {
        this.answerTime = answerTime;
        return this;
    }
    
    /**
     * Remote caller ID
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("callerId")
    public String callerId;

    public Call withCallerId(String callerId) {
        this.callerId = callerId;
        return this;
    }
    
    /**
     * Direction of the call
     */
    @JsonProperty("direction")
    public CallDirectionEnum direction;

    public Call withDirection(CallDirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * Duration of the call in milliseconds
     */
    @JsonProperty("duration")
    public Long duration;

    public Call withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * End time of the call
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("endTime")
    public LocalDate endTime;

    public Call withEndTime(LocalDate endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * External identifier of the call
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("externalId")
    public String externalId;

    public Call withExternalId(String externalId) {
        this.externalId = externalId;
        return this;
    }
    
    /**
     * Unique identifier of the call
     */
    @JsonProperty("id")
    public Long id;

    public Call withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Unique identifier of the account
     */
    @JsonProperty("phoneNumber")
    public String phoneNumber;

    public Call withPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }
    
    /**
     * Start time of the call
     */
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("startTime")
    public LocalDate startTime;

    public Call withStartTime(LocalDate startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * Status of the call
     */
    @JsonProperty("state")
    public CallStateEnum state;

    public Call withState(CallStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Record type
     */
    @JsonProperty("type")
    public CallTypeEnum type;

    public Call withType(CallTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Unique identifier of communications provider
     */
    @JsonProperty("uciId")
    public Long uciId;

    public Call withUciId(Long uciId) {
        this.uciId = uciId;
        return this;
    }
    
    /**
     * Unique identifier of the user
     */
    @JsonProperty("userId")
    public Long userId;

    public Call withUserId(Long userId) {
        this.userId = userId;
        return this;
    }
    
    public Call(@JsonProperty("accountId") Long accountId, @JsonProperty("direction") CallDirectionEnum direction, @JsonProperty("duration") Long duration, @JsonProperty("id") Long id, @JsonProperty("phoneNumber") String phoneNumber, @JsonProperty("startTime") LocalDate startTime, @JsonProperty("state") CallStateEnum state, @JsonProperty("type") CallTypeEnum type, @JsonProperty("uciId") Long uciId, @JsonProperty("userId") Long userId) {
        this.accountId = accountId;
        this.direction = direction;
        this.duration = duration;
        this.id = id;
        this.phoneNumber = phoneNumber;
        this.startTime = startTime;
        this.state = state;
        this.type = type;
        this.uciId = uciId;
        this.userId = userId;
  }
}
