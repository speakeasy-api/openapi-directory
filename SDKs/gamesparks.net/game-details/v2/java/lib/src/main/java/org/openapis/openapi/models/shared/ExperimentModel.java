/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ExperimentModel - input
 */
public class ExperimentModel {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;
    public ExperimentModel withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("changedFieldsAndInitialValues")
    public java.util.Map<String, Object> changedFieldsAndInitialValues;
    public ExperimentModel withChangedFieldsAndInitialValues(java.util.Map<String, Object> changedFieldsAndInitialValues) {
        this.changedFieldsAndInitialValues = changedFieldsAndInitialValues;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("complete")
    public Boolean complete;
    public ExperimentModel withComplete(Boolean complete) {
        this.complete = complete;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("config")
    public ExperimentConfigModel config;
    public ExperimentModel withConfig(ExperimentConfigModel config) {
        this.config = config;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endDate")
    public OffsetDateTime endDate;
    public ExperimentModel withEndDate(OffsetDateTime endDate) {
        this.endDate = endDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public ExperimentModel withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("measurements")
    public String measurements;
    public ExperimentModel withMeasurements(String measurements) {
        this.measurements = measurements;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("measurementsEsQuery")
    public String measurementsEsQuery;
    public ExperimentModel withMeasurementsEsQuery(String measurementsEsQuery) {
        this.measurementsEsQuery = measurementsEsQuery;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public ExperimentModel withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("percentHash")
    public String percentHash;
    public ExperimentModel withPercentHash(String percentHash) {
        this.percentHash = percentHash;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publishedStages")
    public String[] publishedStages;
    public ExperimentModel withPublishedStages(String[] publishedStages) {
        this.publishedStages = publishedStages;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startDate")
    public OffsetDateTime startDate;
    public ExperimentModel withStartDate(OffsetDateTime startDate) {
        this.startDate = startDate;
        return this;
    }
    
}
