"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import getsubscriptionproductfeaturetype as shared_getsubscriptionproductfeaturetype
from ..shared import getsubscriptionrateplanchargestype as shared_getsubscriptionrateplanchargestype
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GETSubscriptionRatePlanType:
    r"""Container for custom fields of a Rate Plan object."""
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Rate plan ID."""  
    last_change_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastChangeType'), 'exclude': lambda f: f is None }})
    r"""The last amendment on the rate plan.
    
    Possible Values:
    
    * `Add`
    * `Update`
    * `Remove`
    """  
    product_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productId'), 'exclude': lambda f: f is None }})  
    product_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productName'), 'exclude': lambda f: f is None }})  
    product_rate_plan_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productRatePlanId'), 'exclude': lambda f: f is None }})  
    product_sku: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productSku'), 'exclude': lambda f: f is None }})
    r"""The unique SKU for the product."""  
    rate_plan_charges: Optional[list[shared_getsubscriptionrateplanchargestype.GETSubscriptionRatePlanChargesType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ratePlanCharges'), 'exclude': lambda f: f is None }})
    r"""Container for one or more charges."""  
    rate_plan_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ratePlanName'), 'exclude': lambda f: f is None }})
    r"""Name of the rate plan."""  
    subscription_product_features: Optional[list[shared_getsubscriptionproductfeaturetype.GETSubscriptionProductFeatureType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subscriptionProductFeatures'), 'exclude': lambda f: f is None }})
    r"""Container for one or more features.
    
    Only available when the following settings are enabled:
    
    * The Entitlements feature in your tenant.
    
    * The Enable Feature Specification in Product and Subscriptions setting in Zuora Billing Settings
    """  
    