<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * StartTask - A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class StartTask
{
    /**
     * The command line of the start task.
     * 
     * @var ?string $commandLine
     */
	#[\JMS\Serializer\Annotation\SerializedName('commandLine')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $commandLine = null;
    
    /**
     * A list of environment variable settings for the start task.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EnvironmentSetting> $environmentSettings
     */
	#[\JMS\Serializer\Annotation\SerializedName('environmentSettings')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\EnvironmentSetting>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $environmentSettings = null;
    
    /**
     * The maximum number of times the task may be retried.
     * 
     * @var ?int $maxTaskRetryCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxTaskRetryCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxTaskRetryCount = null;
    
    /**
     * A list of files that the Batch service will download to the compute node before running the command line.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ResourceFile> $resourceFiles
     */
	#[\JMS\Serializer\Annotation\SerializedName('resourceFiles')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ResourceFile>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $resourceFiles = null;
    
    /**
     * Whether to run the start task in elevated mode. The default value is false.
     * 
     * @var ?bool $runElevated
     */
	#[\JMS\Serializer\Annotation\SerializedName('runElevated')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $runElevated = null;
    
    /**
     * Whether the Batch service should wait for the start task to complete successfully (that is, to exit with exit code 0) before scheduling any tasks on the compute node.
     * 
     * @var ?bool $waitForSuccess
     */
	#[\JMS\Serializer\Annotation\SerializedName('waitForSuccess')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $waitForSuccess = null;
    
	public function __construct()
	{
		$this->commandLine = null;
		$this->environmentSettings = null;
		$this->maxTaskRetryCount = null;
		$this->resourceFiles = null;
		$this->runElevated = null;
		$this->waitForSuccess = null;
	}
}
