<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RenameField - Specifies a transform that renames a single data property key.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RenameField
{
    /**
     * $inputs
     * 
     * @var array<string> $inputs
     */
	#[\JMS\Serializer\Annotation\SerializedName('Inputs')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $inputs;
    
	#[\JMS\Serializer\Annotation\SerializedName('Name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * $sourcePath
     * 
     * @var array<string> $sourcePath
     */
	#[\JMS\Serializer\Annotation\SerializedName('SourcePath')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $sourcePath;
    
    /**
     * $targetPath
     * 
     * @var array<string> $targetPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('TargetPath')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $targetPath;
    
	public function __construct()
	{
		$this->inputs = [];
		$this->name = "";
		$this->sourcePath = [];
		$this->targetPath = [];
	}
}
