/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DomainControllerStatusEnum } from "./domaincontrollerstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Contains information about the domain controllers for a specified directory.
 */
export class DomainController extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AvailabilityZone" })
  availabilityZone?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DirectoryId" })
  directoryId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DnsIpAddr" })
  dnsIpAddr?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DomainControllerId" })
  domainControllerId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LaunchTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  launchTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: DomainControllerStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusLastUpdatedDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  statusLastUpdatedDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusReason" })
  statusReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SubnetId" })
  subnetId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "VpcId" })
  vpcId?: string;
}
