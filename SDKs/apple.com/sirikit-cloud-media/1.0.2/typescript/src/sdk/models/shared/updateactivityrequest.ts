/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Constraints } from "./constraints";
import { PlayerContext } from "./playercontext";
import { QueueActivityReportEventEnum } from "./queueactivityreporteventenum";
import { UserActivity } from "./useractivity";
import { Expose, Transform, Type } from "class-transformer";

export class UpdateActivityRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "constraints" })
  @Type(() => Constraints)
  constraints?: Constraints;

  @SpeakeasyMetadata()
  @Expose({ name: "nowPlaying" })
  @Type(() => PlayerContext)
  nowPlaying?: PlayerContext;

  @SpeakeasyMetadata()
  @Expose({ name: "previouslyPlaying" })
  @Type(() => PlayerContext)
  previouslyPlaying?: PlayerContext;

  @SpeakeasyMetadata()
  @Expose({ name: "report" })
  report: QueueActivityReportEventEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timestamp: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "userActivity" })
  @Type(() => UserActivity)
  userActivity: UserActivity;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version: string;
}
