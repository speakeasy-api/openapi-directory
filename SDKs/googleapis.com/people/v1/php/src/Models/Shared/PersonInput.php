<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * PersonInput - Information about a person merged from various data sources such as the authenticated user's contacts and profile data. Most fields can have multiple items. The items in a field have no guaranteed order, but each non-empty field is guaranteed to have exactly one field with `metadata.primary` set to true.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class PersonInput
{
    /**
     * The person's street addresses.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AddressInput> $addresses
     */
	#[\JMS\Serializer\Annotation\SerializedName('addresses')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\AddressInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $addresses = null;
    
    /**
     * The person's biographies. This field is a singleton for contact sources.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\BiographyInput> $biographies
     */
	#[\JMS\Serializer\Annotation\SerializedName('biographies')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\BiographyInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $biographies = null;
    
    /**
     * The person's birthdays. This field is a singleton for contact sources.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\BirthdayInput> $birthdays
     */
	#[\JMS\Serializer\Annotation\SerializedName('birthdays')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\BirthdayInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $birthdays = null;
    
    /**
     * **DEPRECATED**: No data will be returned The person's bragging rights.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\BraggingRightsInput> $braggingRights
     */
	#[\JMS\Serializer\Annotation\SerializedName('braggingRights')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\BraggingRightsInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $braggingRights = null;
    
    /**
     * The person's calendar URLs.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CalendarUrlInput> $calendarUrls
     */
	#[\JMS\Serializer\Annotation\SerializedName('calendarUrls')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CalendarUrlInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $calendarUrls = null;
    
    /**
     * The person's client data.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ClientDataInput> $clientData
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientData')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ClientDataInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $clientData = null;
    
    /**
     * The person's email addresses. For `people.connections.list` and `otherContacts.list` the number of email addresses is limited to 100. If a Person has more email addresses the entire set can be obtained by calling GetPeople.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EmailAddressInput> $emailAddresses
     */
	#[\JMS\Serializer\Annotation\SerializedName('emailAddresses')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\EmailAddressInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $emailAddresses = null;
    
    /**
     * The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the resource. Used for web cache validation.
     * 
     * @var ?string $etag
     */
	#[\JMS\Serializer\Annotation\SerializedName('etag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $etag = null;
    
    /**
     * The person's events.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EventInput> $events
     */
	#[\JMS\Serializer\Annotation\SerializedName('events')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\EventInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $events = null;
    
    /**
     * The person's external IDs.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ExternalIdInput> $externalIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('externalIds')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ExternalIdInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $externalIds = null;
    
    /**
     * The person's file-ases.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\FileAsInput> $fileAses
     */
	#[\JMS\Serializer\Annotation\SerializedName('fileAses')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\FileAsInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fileAses = null;
    
    /**
     * The person's genders. This field is a singleton for contact sources.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GenderInput> $genders
     */
	#[\JMS\Serializer\Annotation\SerializedName('genders')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GenderInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $genders = null;
    
    /**
     * The person's instant messaging clients.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ImClientInput> $imClients
     */
	#[\JMS\Serializer\Annotation\SerializedName('imClients')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ImClientInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $imClients = null;
    
    /**
     * The person's interests.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\InterestInput> $interests
     */
	#[\JMS\Serializer\Annotation\SerializedName('interests')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\InterestInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $interests = null;
    
    /**
     * The person's locale preferences.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\LocaleInput> $locales
     */
	#[\JMS\Serializer\Annotation\SerializedName('locales')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\LocaleInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $locales = null;
    
    /**
     * The person's locations.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\LocationInput> $locations
     */
	#[\JMS\Serializer\Annotation\SerializedName('locations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\LocationInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $locations = null;
    
    /**
     * The person's group memberships.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\MembershipInput> $memberships
     */
	#[\JMS\Serializer\Annotation\SerializedName('memberships')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\MembershipInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $memberships = null;
    
    /**
     * The metadata about a person.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PersonMetadataInput $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PersonMetadataInput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PersonMetadataInput $metadata = null;
    
    /**
     * The person's miscellaneous keywords.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\MiscKeywordInput> $miscKeywords
     */
	#[\JMS\Serializer\Annotation\SerializedName('miscKeywords')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\MiscKeywordInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $miscKeywords = null;
    
    /**
     * The person's names. This field is a singleton for contact sources.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\NameInput> $names
     */
	#[\JMS\Serializer\Annotation\SerializedName('names')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\NameInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $names = null;
    
    /**
     * The person's nicknames.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\NicknameInput> $nicknames
     */
	#[\JMS\Serializer\Annotation\SerializedName('nicknames')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\NicknameInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $nicknames = null;
    
    /**
     * The person's occupations.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OccupationInput> $occupations
     */
	#[\JMS\Serializer\Annotation\SerializedName('occupations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OccupationInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $occupations = null;
    
    /**
     * The person's past or current organizations.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\OrganizationInput> $organizations
     */
	#[\JMS\Serializer\Annotation\SerializedName('organizations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\OrganizationInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $organizations = null;
    
    /**
     * The person's phone numbers. For `people.connections.list` and `otherContacts.list` the number of phone numbers is limited to 100. If a Person has more phone numbers the entire set can be obtained by calling GetPeople.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PhoneNumberInput> $phoneNumbers
     */
	#[\JMS\Serializer\Annotation\SerializedName('phoneNumbers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PhoneNumberInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $phoneNumbers = null;
    
    /**
     * The person's relations.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\RelationInput> $relations
     */
	#[\JMS\Serializer\Annotation\SerializedName('relations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\RelationInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $relations = null;
    
    /**
     * **DEPRECATED**: (Please use `person.locations` instead) The person's residences.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ResidenceInput> $residences
     */
	#[\JMS\Serializer\Annotation\SerializedName('residences')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ResidenceInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $residences = null;
    
    /**
     * The resource name for the person, assigned by the server. An ASCII string in the form of `people/{person_id}`.
     * 
     * @var ?string $resourceName
     */
	#[\JMS\Serializer\Annotation\SerializedName('resourceName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $resourceName = null;
    
    /**
     * The person's SIP addresses.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SipAddressInput> $sipAddresses
     */
	#[\JMS\Serializer\Annotation\SerializedName('sipAddresses')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SipAddressInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $sipAddresses = null;
    
    /**
     * The person's skills.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SkillInput> $skills
     */
	#[\JMS\Serializer\Annotation\SerializedName('skills')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SkillInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $skills = null;
    
    /**
     * The person's associated URLs.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\UrlInput> $urls
     */
	#[\JMS\Serializer\Annotation\SerializedName('urls')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\UrlInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $urls = null;
    
    /**
     * The person's user defined data.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\UserDefinedInput> $userDefined
     */
	#[\JMS\Serializer\Annotation\SerializedName('userDefined')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\UserDefinedInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $userDefined = null;
    
	public function __construct()
	{
		$this->addresses = null;
		$this->biographies = null;
		$this->birthdays = null;
		$this->braggingRights = null;
		$this->calendarUrls = null;
		$this->clientData = null;
		$this->emailAddresses = null;
		$this->etag = null;
		$this->events = null;
		$this->externalIds = null;
		$this->fileAses = null;
		$this->genders = null;
		$this->imClients = null;
		$this->interests = null;
		$this->locales = null;
		$this->locations = null;
		$this->memberships = null;
		$this->metadata = null;
		$this->miscKeywords = null;
		$this->names = null;
		$this->nicknames = null;
		$this->occupations = null;
		$this->organizations = null;
		$this->phoneNumbers = null;
		$this->relations = null;
		$this->residences = null;
		$this->resourceName = null;
		$this->sipAddresses = null;
		$this->skills = null;
		$this->urls = null;
		$this->userDefined = null;
	}
}
