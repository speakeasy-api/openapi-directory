/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * History - A History represents a sorted list of Executions ordered by the start_timestamp_millis field (descending). It can be used to group all the Executions of a continuous build. Note that the ordering only operates on one-dimension. If a repository has multiple branches, it means that multiple histories will need to be used in order to order Executions per branch.
 */
public class History {
    /**
     * A short human-readable (plain text) name to display in the UI. Maximum of 100 characters. - In response: present if set during create. - In create request: optional
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;

    public History withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * A unique identifier within a project for this History. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response always set - In create request: never set
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("historyId")
    public String historyId;

    public History withHistoryId(String historyId) {
        this.historyId = historyId;
        return this;
    }
    
    /**
     * A name to uniquely identify a history within a project. Maximum of 200 characters. - In response always set - In create request: always set
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public History withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The platform of the test history. - In response: always set. Returns the platform of the last execution if unknown.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("testPlatform")
    public HistoryTestPlatformEnum testPlatform;

    public History withTestPlatform(HistoryTestPlatformEnum testPlatform) {
        this.testPlatform = testPlatform;
        return this;
    }
    
    public History(){}
}
