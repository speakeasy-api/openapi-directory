"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import eventticketclass as shared_eventticketclass
from ..shared import eventticketobject as shared_eventticketobject
from ..shared import flightclass as shared_flightclass
from ..shared import flightobject as shared_flightobject
from ..shared import giftcardclass as shared_giftcardclass
from ..shared import giftcardobject as shared_giftcardobject
from ..shared import loyaltyclass as shared_loyaltyclass
from ..shared import loyaltyobject as shared_loyaltyobject
from ..shared import offerclass as shared_offerclass
from ..shared import offerobject as shared_offerobject
from ..shared import transitclass as shared_transitclass
from ..shared import transitobject as shared_transitobject
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Resources:
    
    event_ticket_classes: Optional[list[shared_eventticketclass.EventTicketClass]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventTicketClasses'), 'exclude': lambda f: f is None }})  
    event_ticket_objects: Optional[list[shared_eventticketobject.EventTicketObject]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eventTicketObjects'), 'exclude': lambda f: f is None }})  
    flight_classes: Optional[list[shared_flightclass.FlightClass]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('flightClasses'), 'exclude': lambda f: f is None }})  
    flight_objects: Optional[list[shared_flightobject.FlightObject]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('flightObjects'), 'exclude': lambda f: f is None }})  
    gift_card_classes: Optional[list[shared_giftcardclass.GiftCardClass]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('giftCardClasses'), 'exclude': lambda f: f is None }})  
    gift_card_objects: Optional[list[shared_giftcardobject.GiftCardObject]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('giftCardObjects'), 'exclude': lambda f: f is None }})  
    loyalty_classes: Optional[list[shared_loyaltyclass.LoyaltyClass]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('loyaltyClasses'), 'exclude': lambda f: f is None }})  
    loyalty_objects: Optional[list[shared_loyaltyobject.LoyaltyObject]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('loyaltyObjects'), 'exclude': lambda f: f is None }})  
    offer_classes: Optional[list[shared_offerclass.OfferClass]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offerClasses'), 'exclude': lambda f: f is None }})  
    offer_objects: Optional[list[shared_offerobject.OfferObject]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('offerObjects'), 'exclude': lambda f: f is None }})  
    transit_classes: Optional[list[shared_transitclass.TransitClass]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transitClasses'), 'exclude': lambda f: f is None }})  
    transit_objects: Optional[list[shared_transitobject.TransitObject]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transitObjects'), 'exclude': lambda f: f is None }})  
    