/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Contact } from "./contact";
import { Expose, Type } from "class-transformer";

export class ContactUploadResponseData extends SpeakeasyBase {
  /**
   * Uploaded contacts
   */
  @SpeakeasyMetadata({ elemType: Contact })
  @Expose({ name: "contacts" })
  @Type(() => Contact)
  contacts?: Contact[];

  /**
   * Contacts that failed validation
   */
  @SpeakeasyMetadata({ elemType: Contact })
  @Expose({ name: "errors" })
  @Type(() => Contact)
  errors?: Contact[];

  @SpeakeasyMetadata()
  @Expose({ name: "inserted" })
  inserted?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "submitted" })
  submitted?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  updated?: number;
}

export class ContactUploadResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ContactUploadResponseData)
  data?: ContactUploadResponseData;

  @SpeakeasyMetadata()
  @Expose({ name: "success" })
  success?: boolean;
}
