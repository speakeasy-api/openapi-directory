/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetNetworkFirmwareUpgradesStagedEventsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=networkId",
  })
  networkId: string;
}

/**
 * Details of the version the device will upgrade to
 */
export class GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitchNextUpgradeToVersion extends SpeakeasyBase {
  /**
   * Id of the Version being upgraded to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Firmware version short name
   */
  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;
}

/**
 * Details of the next firmware upgrade
 */
export class GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitchNextUpgrade extends SpeakeasyBase {
  /**
   * Details of the version the device will upgrade to
   */
  @SpeakeasyMetadata()
  @Expose({ name: "toVersion" })
  @Type(
    () =>
      GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitchNextUpgradeToVersion
  )
  toVersion?: GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitchNextUpgradeToVersion;
}

/**
 * The Switch network to be updated
 */
export class GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitch extends SpeakeasyBase {
  /**
   * Details of the next firmware upgrade
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextUpgrade" })
  @Type(
    () =>
      GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitchNextUpgrade
  )
  nextUpgrade?: GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitchNextUpgrade;
}

/**
 * The network devices to be updated
 */
export class GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProducts extends SpeakeasyBase {
  /**
   * The Switch network to be updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "switch" })
  @Type(
    () => GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitch
  )
  switch?: GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProductsSwitch;
}

/**
 * Reason for the rollback
 */
export enum GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnum {
  BrokeOldFeatures = "broke old features",
  Other = "other",
  Performance = "performance",
  Stability = "stability",
  Testing = "testing",
  UnifyingNetworksVersions = "unifying networks versions",
}

export class GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasons extends SpeakeasyBase {
  /**
   * Reason for the rollback
   */
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category?: GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasonsCategoryEnum;

  /**
   * Additional comment about the rollback
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;
}

/**
 * The staged upgrade group
 */
export class GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStagesGroup extends SpeakeasyBase {
  /**
   * Description of the Staged Upgrade Group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Id of the Staged Upgrade Group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Name of the Staged Upgrade Group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

/**
 * The Staged Upgrade Milestones for the stage
 */
export class GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStagesMilestones extends SpeakeasyBase {
  /**
   * Time that the group was canceled
   */
  @SpeakeasyMetadata()
  @Expose({ name: "canceledAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  canceledAt?: Date;

  /**
   * Finish time for the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "completedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  completedAt?: Date;

  /**
   * Scheduled start time for the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scheduledFor" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  scheduledFor?: Date;

  /**
   * Start time for the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startedAt?: Date;
}

export class GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStages extends SpeakeasyBase {
  /**
   * The staged upgrade group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  @Type(
    () => GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStagesGroup
  )
  group?: GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStagesGroup;

  /**
   * The Staged Upgrade Milestones for the stage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "milestones" })
  @Type(
    () =>
      GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStagesMilestones
  )
  milestones?: GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStagesMilestones;

  /**
   * Current upgrade status of the group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}

/**
 * Successful operation
 */
export class GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSON extends SpeakeasyBase {
  /**
   * The network devices to be updated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "products" })
  @Type(() => GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProducts)
  products?: GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONProducts;

  /**
   * Reasons for the rollback
   */
  @SpeakeasyMetadata({
    elemType: GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasons,
  })
  @Expose({ name: "reasons" })
  @Type(() => GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasons)
  reasons?: GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONReasons[];

  /**
   * The ordered stages in the network
   */
  @SpeakeasyMetadata({
    elemType: GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStages,
  })
  @Expose({ name: "stages" })
  @Type(() => GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStages)
  stages?: GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSONStages[];
}

export class GetNetworkFirmwareUpgradesStagedEventsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  getNetworkFirmwareUpgradesStagedEvents200ApplicationJSONObject?: GetNetworkFirmwareUpgradesStagedEvents200ApplicationJSON;
}
