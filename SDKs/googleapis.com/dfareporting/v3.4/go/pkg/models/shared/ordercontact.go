// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// OrderContactContactTypeEnum - Type of this contact.
type OrderContactContactTypeEnum string

const (
	OrderContactContactTypeEnumPlanningOrderContactBuyerContact        OrderContactContactTypeEnum = "PLANNING_ORDER_CONTACT_BUYER_CONTACT"
	OrderContactContactTypeEnumPlanningOrderContactBuyerBillingContact OrderContactContactTypeEnum = "PLANNING_ORDER_CONTACT_BUYER_BILLING_CONTACT"
	OrderContactContactTypeEnumPlanningOrderContactSellerContact       OrderContactContactTypeEnum = "PLANNING_ORDER_CONTACT_SELLER_CONTACT"
)

func (e *OrderContactContactTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PLANNING_ORDER_CONTACT_BUYER_CONTACT":
		fallthrough
	case "PLANNING_ORDER_CONTACT_BUYER_BILLING_CONTACT":
		fallthrough
	case "PLANNING_ORDER_CONTACT_SELLER_CONTACT":
		*e = OrderContactContactTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OrderContactContactTypeEnum: %s", s)
	}
}

// OrderContact - Contact of an order.
type OrderContact struct {
	// Free-form information about this contact. It could be any information related to this contact in addition to type, title, name, and signature user profile ID.
	ContactInfo *string `json:"contactInfo,omitempty"`
	// Name of this contact.
	ContactName *string `json:"contactName,omitempty"`
	// Title of this contact.
	ContactTitle *string `json:"contactTitle,omitempty"`
	// Type of this contact.
	ContactType *OrderContactContactTypeEnum `json:"contactType,omitempty"`
	// ID of the user profile containing the signature that will be embedded into order documents.
	SignatureUserProfileID *string `json:"signatureUserProfileId,omitempty"`
}
