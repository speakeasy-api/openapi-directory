// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CutoverJobStateEnum - Output only. State of the cutover job.
type CutoverJobStateEnum string

const (
	CutoverJobStateEnumStateUnspecified CutoverJobStateEnum = "STATE_UNSPECIFIED"
	CutoverJobStateEnumPending          CutoverJobStateEnum = "PENDING"
	CutoverJobStateEnumFailed           CutoverJobStateEnum = "FAILED"
	CutoverJobStateEnumSucceeded        CutoverJobStateEnum = "SUCCEEDED"
	CutoverJobStateEnumCancelled        CutoverJobStateEnum = "CANCELLED"
	CutoverJobStateEnumCancelling       CutoverJobStateEnum = "CANCELLING"
	CutoverJobStateEnumActive           CutoverJobStateEnum = "ACTIVE"
	CutoverJobStateEnumAdaptingOs       CutoverJobStateEnum = "ADAPTING_OS"
)

func (e CutoverJobStateEnum) ToPointer() *CutoverJobStateEnum {
	return &e
}

func (e *CutoverJobStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "PENDING":
		fallthrough
	case "FAILED":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "CANCELLING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "ADAPTING_OS":
		*e = CutoverJobStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CutoverJobStateEnum: %v", v)
	}
}

// CutoverJob - CutoverJob message describes a cutover of a migrating VM. The CutoverJob is the operation of shutting down the VM, creating a snapshot and clonning the VM using the replicated snapshot.
type CutoverJob struct {
	// ComputeEngineTargetDetails is a collection of details for creating a VM in a target Compute Engine project.
	ComputeEngineTargetDetails *ComputeEngineTargetDetails `json:"computeEngineTargetDetails,omitempty"`
	// TargetVMDetails is a collection of details for creating a VM in a target Compute Engine project.
	ComputeEngineVMDetails *TargetVMDetails `json:"computeEngineVmDetails,omitempty"`
	// Output only. The time the cutover job was created (as an API call, not when it was actually created in the target).
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. The time the cutover job had finished.
	EndTime *string `json:"endTime,omitempty"`
	// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	Error *Status `json:"error,omitempty"`
	// Output only. The name of the cutover job.
	Name *string `json:"name,omitempty"`
	// Output only. The current progress in percentage of the cutover job.
	Progress *int `json:"progress,omitempty"`
	// Output only. The current progress in percentage of the cutover job.
	ProgressPercent *int `json:"progressPercent,omitempty"`
	// Output only. State of the cutover job.
	State *CutoverJobStateEnum `json:"state,omitempty"`
	// Output only. A message providing possible extra details about the current state.
	StateMessage *string `json:"stateMessage,omitempty"`
	// Output only. The time the state was last updated.
	StateTime *string `json:"stateTime,omitempty"`
	// Output only. The cutover steps list representing its progress.
	Steps []CutoverStep `json:"steps,omitempty"`
	// TargetVMDetails is a collection of details for creating a VM in a target Compute Engine project.
	TargetDetails *TargetVMDetails `json:"targetDetails,omitempty"`
}

// CutoverJobInput - CutoverJob message describes a cutover of a migrating VM. The CutoverJob is the operation of shutting down the VM, creating a snapshot and clonning the VM using the replicated snapshot.
type CutoverJobInput struct {
	// ComputeEngineTargetDetails is a collection of details for creating a VM in a target Compute Engine project.
	ComputeEngineTargetDetails *ComputeEngineTargetDetails `json:"computeEngineTargetDetails,omitempty"`
	// TargetVMDetails is a collection of details for creating a VM in a target Compute Engine project.
	ComputeEngineVMDetails *TargetVMDetailsInput `json:"computeEngineVmDetails,omitempty"`
	// The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
	Error *Status `json:"error,omitempty"`
	// TargetVMDetails is a collection of details for creating a VM in a target Compute Engine project.
	TargetDetails *TargetVMDetailsInput `json:"targetDetails,omitempty"`
}
