// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETBatchModifyClusterSnapshotsActionEnum
type GETBatchModifyClusterSnapshotsActionEnum string

const (
	GETBatchModifyClusterSnapshotsActionEnumBatchModifyClusterSnapshots GETBatchModifyClusterSnapshotsActionEnum = "BatchModifyClusterSnapshots"
)

func (e *GETBatchModifyClusterSnapshotsActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "BatchModifyClusterSnapshots":
		*e = GETBatchModifyClusterSnapshotsActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETBatchModifyClusterSnapshotsActionEnum: %s", s)
	}
}

// GETBatchModifyClusterSnapshotsVersionEnum
type GETBatchModifyClusterSnapshotsVersionEnum string

const (
	GETBatchModifyClusterSnapshotsVersionEnumTwoThousandAndTwelve1201 GETBatchModifyClusterSnapshotsVersionEnum = "2012-12-01"
)

func (e *GETBatchModifyClusterSnapshotsVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = GETBatchModifyClusterSnapshotsVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETBatchModifyClusterSnapshotsVersionEnum: %s", s)
	}
}

type GETBatchModifyClusterSnapshotsQueryParams struct {
	Action GETBatchModifyClusterSnapshotsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// A boolean value indicating whether to override an exception if the retention period has passed.
	Force *bool `queryParam:"style=form,explode=true,name=Force"`
	// <p>The number of days that a manual snapshot is retained. If you specify the value -1, the manual snapshot is retained indefinitely.</p> <p>The number must be either -1 or an integer between 1 and 3,653.</p> <p>If you decrease the manual snapshot retention period from its current value, existing manual snapshots that fall outside of the new retention period will return an error. If you want to suppress the errors and delete the snapshots, use the force option. </p>
	ManualSnapshotRetentionPeriod *int64 `queryParam:"style=form,explode=true,name=ManualSnapshotRetentionPeriod"`
	// A list of snapshot identifiers you want to modify.
	SnapshotIdentifierList []string                                  `queryParam:"style=form,explode=true,name=SnapshotIdentifierList"`
	Version                GETBatchModifyClusterSnapshotsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETBatchModifyClusterSnapshotsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETBatchModifyClusterSnapshotsRequest struct {
	QueryParams GETBatchModifyClusterSnapshotsQueryParams
	Headers     GETBatchModifyClusterSnapshotsHeaders
}

type GETBatchModifyClusterSnapshotsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
