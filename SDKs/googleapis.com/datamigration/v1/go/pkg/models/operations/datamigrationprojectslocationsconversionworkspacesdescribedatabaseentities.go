// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesSecurity struct {
	Oauth2  shared.SchemeOauth2  `security:"scheme,type=oauth2"`
	Oauth2c shared.SchemeOauth2c `security:"scheme,type=oauth2"`
}

type DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesPathParams struct {
	// Required. Name of the conversion workspace resource whose database entities are described. Must be in the form of: projects/{project}/locations/{location}/conversionWorkspaces/{conversion_workspace}.
	ConversionWorkspace string `pathParam:"style=simple,explode=false,name=conversionWorkspace"`
}

// DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesTreeEnum - The tree to fetch.
type DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesTreeEnum string

const (
	DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesTreeEnumDbTreeTypeUnspecified DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesTreeEnum = "DB_TREE_TYPE_UNSPECIFIED"
	DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesTreeEnumSourceTree            DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesTreeEnum = "SOURCE_TREE"
	DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesTreeEnumDraftTree             DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesTreeEnum = "DRAFT_TREE"
	DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesTreeEnumDestinationTree       DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesTreeEnum = "DESTINATION_TREE"
)

func (e *DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesTreeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DB_TREE_TYPE_UNSPECIFIED":
		fallthrough
	case "SOURCE_TREE":
		fallthrough
	case "DRAFT_TREE":
		fallthrough
	case "DESTINATION_TREE":
		*e = DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesTreeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesTreeEnum: %s", s)
	}
}

type DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesQueryParams struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Request a specific commit ID. If not specified, the entities from the latest commit are returned.
	CommitID *string `queryParam:"style=form,explode=true,name=commitId"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Filter the returned entities based on AIP-160 standard.
	Filter *string `queryParam:"style=form,explode=true,name=filter"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// The maximum number of entities to return. The service may return fewer entities than the value specifies.
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
	// The nextPageToken value received in the previous call to conversionWorkspace.describeDatabaseEntities, used in the subsequent request to retrieve the next page of results. On first call this should be left blank. When paginating, all other parameters provided to conversionWorkspace.describeDatabaseEntities must match the call that provided the page token.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// The tree to fetch.
	Tree *DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesTreeEnum `queryParam:"style=form,explode=true,name=tree"`
	// Whether to retrieve the latest committed version of the entities or the latest version. This field is ignored if a specific commit_id is specified.
	Uncommitted *bool `queryParam:"style=form,explode=true,name=uncommitted"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesRequest struct {
	PathParams  DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesPathParams
	QueryParams DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesQueryParams
	Security    DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesSecurity
}

type DatamigrationProjectsLocationsConversionWorkspacesDescribeDatabaseEntitiesResponse struct {
	ContentType string
	// Successful response
	DescribeDatabaseEntitiesResponse *shared.DescribeDatabaseEntitiesResponse
	StatusCode                       int
	RawResponse                      *http.Response
}
