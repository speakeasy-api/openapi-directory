/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRecommenderV1beta1Recommendation - A recommendation along with a suggested action. E.g., a rightsizing recommendation for an underutilized VM, IAM role recommendations, etc
 */
public class GoogleCloudRecommenderV1beta1Recommendation {
    /**
     * Optional set of additional impact that this recommendation may have when trying to optimize for the primary category. These may be positive or negative.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalImpact")
    public GoogleCloudRecommenderV1beta1Impact[] additionalImpact;

    public GoogleCloudRecommenderV1beta1Recommendation withAdditionalImpact(GoogleCloudRecommenderV1beta1Impact[] additionalImpact) {
        this.additionalImpact = additionalImpact;
        return this;
    }
    
    /**
     * Insights that led to this recommendation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("associatedInsights")
    public GoogleCloudRecommenderV1beta1RecommendationInsightReference[] associatedInsights;

    public GoogleCloudRecommenderV1beta1Recommendation withAssociatedInsights(GoogleCloudRecommenderV1beta1RecommendationInsightReference[] associatedInsights) {
        this.associatedInsights = associatedInsights;
        return this;
    }
    
    /**
     * Contains what resources are changing and how they are changing.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("content")
    public GoogleCloudRecommenderV1beta1RecommendationContent content;

    public GoogleCloudRecommenderV1beta1Recommendation withContent(GoogleCloudRecommenderV1beta1RecommendationContent content) {
        this.content = content;
        return this;
    }
    
    /**
     * Free-form human readable summary in English. The maximum length is 500 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public GoogleCloudRecommenderV1beta1Recommendation withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Fingerprint of the Recommendation. Provides optimistic locking when updating states.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public GoogleCloudRecommenderV1beta1Recommendation withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Last time this recommendation was refreshed by the system that created it in the first place.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastRefreshTime")
    public String lastRefreshTime;

    public GoogleCloudRecommenderV1beta1Recommendation withLastRefreshTime(String lastRefreshTime) {
        this.lastRefreshTime = lastRefreshTime;
        return this;
    }
    
    /**
     * Name of recommendation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public GoogleCloudRecommenderV1beta1Recommendation withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Contains the impact a recommendation can have for a given category.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryImpact")
    public GoogleCloudRecommenderV1beta1Impact primaryImpact;

    public GoogleCloudRecommenderV1beta1Recommendation withPrimaryImpact(GoogleCloudRecommenderV1beta1Impact primaryImpact) {
        this.primaryImpact = primaryImpact;
        return this;
    }
    
    /**
     * Recommendation's priority.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priority")
    public GoogleCloudRecommenderV1beta1RecommendationPriorityEnum priority;

    public GoogleCloudRecommenderV1beta1Recommendation withPriority(GoogleCloudRecommenderV1beta1RecommendationPriorityEnum priority) {
        this.priority = priority;
        return this;
    }
    
    /**
     * Contains an identifier for a subtype of recommendations produced for the same recommender. Subtype is a function of content and impact, meaning a new subtype might be added when significant changes to `content` or `primary_impact.category` are introduced. See the Recommenders section to see a list of subtypes for a given Recommender. Examples: For recommender = "google.iam.policy.Recommender", recommender_subtype can be one of "REMOVE_ROLE"/"REPLACE_ROLE"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recommenderSubtype")
    public String recommenderSubtype;

    public GoogleCloudRecommenderV1beta1Recommendation withRecommenderSubtype(String recommenderSubtype) {
        this.recommenderSubtype = recommenderSubtype;
        return this;
    }
    
    /**
     * Information for state. Contains state and metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stateInfo")
    public GoogleCloudRecommenderV1beta1RecommendationStateInfo stateInfo;

    public GoogleCloudRecommenderV1beta1Recommendation withStateInfo(GoogleCloudRecommenderV1beta1RecommendationStateInfo stateInfo) {
        this.stateInfo = stateInfo;
        return this;
    }
    
    /**
     * Corresponds to a mutually exclusive group ID within a recommender. A non-empty ID indicates that the recommendation belongs to a mutually exclusive group. This means that only one recommendation within the group is suggested to be applied.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("xorGroupId")
    public String xorGroupId;

    public GoogleCloudRecommenderV1beta1Recommendation withXorGroupId(String xorGroupId) {
        this.xorGroupId = xorGroupId;
        return this;
    }
    
    public GoogleCloudRecommenderV1beta1Recommendation(){}
}
