/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

public class PUTSubscriptionResponseType {
    /**
     * Invoice amount. Preview mode only.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Double amount;
    public PUTSubscriptionResponseType withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * Invoice amount minus tax. Preview mode only.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amountWithoutTax")
    public Double amountWithoutTax;
    public PUTSubscriptionResponseType withAmountWithoutTax(Double amountWithoutTax) {
        this.amountWithoutTax = amountWithoutTax;
        return this;
    }
    
    /**
     * Container for charge metrics.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeMetrics")
    public PUTSubscriptionResponseTypeChargeMetrics chargeMetrics;
    public PUTSubscriptionResponseType withChargeMetrics(PUTSubscriptionResponseTypeChargeMetrics chargeMetrics) {
        this.chargeMetrics = chargeMetrics;
        return this;
    }
    
    /**
     * Container for credit memos.
     * 
     * **Note:** This container is only available if you set the Zuora REST API minor version to 207.0 or later in the request header, and you have  [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement) enabled. The Invoice Settlement feature is generally available as of Zuora Billing Release 296 (March 2021). This feature includes Unapplied Payments, Credit and Debit Memo, and Invoice Item Settlement. If you want to enable Invoice Settlement, see [Invoice Settlement Enablement and Checklist Guide](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement/Invoice_Settlement_Migration_Checklist_and_Guide) for more information. 
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditMemo")
    public PUTSubscriptionResponseTypeCreditMemo creditMemo;
    public PUTSubscriptionResponseType withCreditMemo(PUTSubscriptionResponseTypeCreditMemo creditMemo) {
        this.creditMemo = creditMemo;
        return this;
    }
    
    /**
     * The credit memo ID, if a credit memo is generated during the subscription process.
     * 
     * **Note:** This container is only available if you set the Zuora REST API minor version to 207.0 or later in the request header, and you have  [Invoice Settlement](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement) enabled. The Invoice Settlement feature is generally available as of Zuora Billing Release 296 (March 2021). This feature includes Unapplied Payments, Credit and Debit Memo, and Invoice Item Settlement. If you want to enable Invoice Settlement, see [Invoice Settlement Enablement and Checklist Guide](https://knowledgecenter.zuora.com/Billing/Billing_and_Payments/Invoice_Settlement/Invoice_Settlement_Migration_Checklist_and_Guide) for more information.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creditMemoId")
    public String creditMemoId;
    public PUTSubscriptionResponseType withCreditMemoId(String creditMemoId) {
        this.creditMemoId = creditMemoId;
        return this;
    }
    
    /**
     * Container for invoices.
     * 
     * 
     *  **Note:** This field is only available if you set the Zuora REST API minor version to 207.0 or later in the request header. Also, the response structure is changed and the following invoice related response fields are moved to this **invoice** container:
     *   
     *    * amount
     *    * amountWithoutTax
     *    * taxAmount
     *    * invoiceItems
     *    * targetDate
     *    * chargeMetrics
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoice")
    public java.util.Map<String, Object> invoice;
    public PUTSubscriptionResponseType withInvoice(java.util.Map<String, Object> invoice) {
        this.invoice = invoice;
        return this;
    }
    
    /**
     * Invoice ID, if an invoice is generated during the update.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceId")
    public String invoiceId;
    public PUTSubscriptionResponseType withInvoiceId(String invoiceId) {
        this.invoiceId = invoiceId;
        return this;
    }
    
    /**
     * Container for invoice items.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("invoiceItems")
    public PUTSubscriptionPreviewInvoiceItemsType[] invoiceItems;
    public PUTSubscriptionResponseType withInvoiceItems(PUTSubscriptionPreviewInvoiceItemsType[] invoiceItems) {
        this.invoiceItems = invoiceItems;
        return this;
    }
    
    /**
     * Date through which charges are calculated on the invoice, as yyyy-mm-dd. Preview mode only.
     * 
     * **Note:** This field is only available if you do not specify the Zuora REST API minor version or specify the minor version to 186.0, 187.0, 188.0, 189.0, and 196.0. See [Zuora REST API Versions](https://www.zuora.com/developer/api-reference/#section/API-Versions) for more information.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("invoiceTargetDate")
    public LocalDate invoiceTargetDate;
    public PUTSubscriptionResponseType withInvoiceTargetDate(LocalDate invoiceTargetDate) {
        this.invoiceTargetDate = invoiceTargetDate;
        return this;
    }
    
    /**
     * Payment amount, if a payment is collected
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paidAmount")
    public Double paidAmount;
    public PUTSubscriptionResponseType withPaidAmount(Double paidAmount) {
        this.paidAmount = paidAmount;
        return this;
    }
    
    /**
     * Payment ID, if a payment is collected.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentId")
    public String paymentId;
    public PUTSubscriptionResponseType withPaymentId(String paymentId) {
        this.paymentId = paymentId;
        return this;
    }
    
    /**
     * The ID of the resulting new subscription.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionId")
    public String subscriptionId;
    public PUTSubscriptionResponseType withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }
    
    /**
     * Returns `true` if the request was processed successfully.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("success")
    public Boolean success;
    public PUTSubscriptionResponseType withSuccess(Boolean success) {
        this.success = success;
        return this;
    }
    
    /**
     * Date through which to calculate charges if an invoice is generated, as yyyy-mm-dd. Default is current date.
     * 
     * **Note:** This field is only available if you set the Zuora REST API minor version to 207.0 or later in the request header. See [Zuora REST API Versions](https://www.zuora.com/developer/api-reference/#section/API-Versions) for more information.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("targetDate")
    public LocalDate targetDate;
    public PUTSubscriptionResponseType withTargetDate(LocalDate targetDate) {
        this.targetDate = targetDate;
        return this;
    }
    
    /**
     * Tax amount on the invoice.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("taxAmount")
    public Double taxAmount;
    public PUTSubscriptionResponseType withTaxAmount(Double taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    /**
     * Change in the subscription monthly recurring revenue as a result of the update.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalDeltaMrr")
    public Double totalDeltaMrr;
    public PUTSubscriptionResponseType withTotalDeltaMrr(Double totalDeltaMrr) {
        this.totalDeltaMrr = totalDeltaMrr;
        return this;
    }
    
    /**
     * Change in the total contracted value of the subscription as a result of the update.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalDeltaTcv")
    public Double totalDeltaTcv;
    public PUTSubscriptionResponseType withTotalDeltaTcv(Double totalDeltaTcv) {
        this.totalDeltaTcv = totalDeltaTcv;
        return this;
    }
    
}
