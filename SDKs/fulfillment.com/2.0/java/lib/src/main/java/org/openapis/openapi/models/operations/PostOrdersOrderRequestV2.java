/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PostOrdersOrderRequestV2 - The order to create
 */
public class PostOrdersOrderRequestV2 {
    /**
     * Use of this property requires special permission and must be discussed with your account executive; values are restricted while custom values need to be accepted by your AE.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("integrator")
    public PostOrdersOrderRequestV2IntegratorEnum integrator;
    public PostOrdersOrderRequestV2 withIntegrator(PostOrdersOrderRequestV2IntegratorEnum integrator) {
        this.integrator = integrator;
        return this;
    }
    
    @JsonProperty("items")
    public PostOrdersOrderRequestV2Items[] items;
    public PostOrdersOrderRequestV2 withItems(PostOrdersOrderRequestV2Items[] items) {
        this.items = items;
        return this;
    }
    
    /**
     * Necessary if you have a multitenancy account, otherwise we will associate the order with your account
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("merchantId")
    public Long merchantId;
    public PostOrdersOrderRequestV2 withMerchantId(Long merchantId) {
        this.merchantId = merchantId;
        return this;
    }
    
    /**
     * Unique ID provided by the merchant
     */
    @JsonProperty("merchantOrderId")
    public String merchantOrderId;
    public PostOrdersOrderRequestV2 withMerchantOrderId(String merchantOrderId) {
        this.merchantOrderId = merchantOrderId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public PostOrdersOrderRequestV2 withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    @JsonProperty("recipient")
    public PostOrdersOrderRequestV2ConsigneeNewV2 recipient;
    public PostOrdersOrderRequestV2 withRecipient(PostOrdersOrderRequestV2ConsigneeNewV2 recipient) {
        this.recipient = recipient;
        return this;
    }
    
    /**
     * Custom for you, it will be mapped to an actual method within the OMS UI
     */
    @JsonProperty("shippingMethod")
    public String shippingMethod;
    public PostOrdersOrderRequestV2 withShippingMethod(String shippingMethod) {
        this.shippingMethod = shippingMethod;
        return this;
    }
    
    /**
     * We automatically select a warehouse based on inventory availability, requested carrier and delivery schedule, and carrier cost. You may however override this process. Because this is not recommended please inform your AE prior to using so they may enable this feature.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("warehouse")
    public PostOrdersOrderRequestV2Warehouse warehouse;
    public PostOrdersOrderRequestV2 withWarehouse(PostOrdersOrderRequestV2Warehouse warehouse) {
        this.warehouse = warehouse;
        return this;
    }
    
}
