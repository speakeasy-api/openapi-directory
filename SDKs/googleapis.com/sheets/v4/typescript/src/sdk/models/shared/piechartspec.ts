/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ChartData } from "./chartdata";
import { Expose, Type } from "class-transformer";

/**
 * Where the legend of the pie chart should be drawn.
 */
export enum PieChartSpecLegendPositionEnum {
  PieChartLegendPositionUnspecified = "PIE_CHART_LEGEND_POSITION_UNSPECIFIED",
  BottomLegend = "BOTTOM_LEGEND",
  LeftLegend = "LEFT_LEGEND",
  RightLegend = "RIGHT_LEGEND",
  TopLegend = "TOP_LEGEND",
  NoLegend = "NO_LEGEND",
  LabeledLegend = "LABELED_LEGEND",
}

/**
 * A pie chart.
 */
export class PieChartSpec extends SpeakeasyBase {
  /**
   * The data included in a domain or series.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  @Type(() => ChartData)
  domain?: ChartData;

  /**
   * Where the legend of the pie chart should be drawn.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "legendPosition" })
  legendPosition?: PieChartSpecLegendPositionEnum;

  /**
   * The size of the hole in the pie chart.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pieHole" })
  pieHole?: number;

  /**
   * The data included in a domain or series.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "series" })
  @Type(() => ChartData)
  series?: ChartData;

  /**
   * True if the pie is three dimensional.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "threeDimensional" })
  threeDimensional?: boolean;
}
