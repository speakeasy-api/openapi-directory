/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Activity {
    /**
     * The type of activity - what action was done by the member. This is a legacy field, use activity_type_key instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activity_type")
    public String activityType;
    public Activity withActivityType(String activityType) {
        this.activityType = activityType;
        return this;
    }
    
    /**
     * The key for a custom activity type for the workspace. Will create a new activity type if it does not exist.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activity_type_key")
    public String activityTypeKey;
    public Activity withActivityTypeKey(String activityTypeKey) {
        this.activityTypeKey = activityTypeKey;
        return this;
    }
    
    /**
     * A description of the activity; displayed in the timeline
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public Activity withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Supply a key that must be unique or leave blank to have one generated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("key")
    public String key;
    public Activity withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * A URL for the activity; displayed in the timeline
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("link")
    public String link;
    public Activity withLink(String link) {
        this.link = link;
        return this;
    }
    
    /**
     * The text for the timeline link
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("link_text")
    public String linkText;
    public Activity withLinkText(String linkText) {
        this.linkText = linkText;
        return this;
    }
    
    /**
     * The date and time the activity occurred; defaults to now
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("occurred_at")
    public String occurredAt;
    public Activity withOccurredAt(String occurredAt) {
        this.occurredAt = occurredAt;
        return this;
    }
    
    /**
     * Key-value pairs to provide contextual metadata about an activity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    public java.util.Map<String, Object> properties;
    public Activity withProperties(java.util.Map<String, Object> properties) {
        this.properties = properties;
        return this;
    }
    
    /**
     * A title for the activity; displayed in the timeline
     */
    @JsonProperty("title")
    public String title;
    public Activity withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * A custom weight to be used in filters and reports; defaults to 1.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("weight")
    public String weight;
    public Activity withWeight(String weight) {
        this.weight = weight;
        return this;
    }
    
}
