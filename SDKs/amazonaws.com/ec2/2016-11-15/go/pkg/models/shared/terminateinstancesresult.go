// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TerminateInstancesResultTerminatingInstancesCurrentStateNameEnum - The current state of the instance.
type TerminateInstancesResultTerminatingInstancesCurrentStateNameEnum string

const (
	TerminateInstancesResultTerminatingInstancesCurrentStateNameEnumPending      TerminateInstancesResultTerminatingInstancesCurrentStateNameEnum = "pending"
	TerminateInstancesResultTerminatingInstancesCurrentStateNameEnumRunning      TerminateInstancesResultTerminatingInstancesCurrentStateNameEnum = "running"
	TerminateInstancesResultTerminatingInstancesCurrentStateNameEnumShuttingDown TerminateInstancesResultTerminatingInstancesCurrentStateNameEnum = "shutting-down"
	TerminateInstancesResultTerminatingInstancesCurrentStateNameEnumTerminated   TerminateInstancesResultTerminatingInstancesCurrentStateNameEnum = "terminated"
	TerminateInstancesResultTerminatingInstancesCurrentStateNameEnumStopping     TerminateInstancesResultTerminatingInstancesCurrentStateNameEnum = "stopping"
	TerminateInstancesResultTerminatingInstancesCurrentStateNameEnumStopped      TerminateInstancesResultTerminatingInstancesCurrentStateNameEnum = "stopped"
)

func (e *TerminateInstancesResultTerminatingInstancesCurrentStateNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "running":
		fallthrough
	case "shutting-down":
		fallthrough
	case "terminated":
		fallthrough
	case "stopping":
		fallthrough
	case "stopped":
		*e = TerminateInstancesResultTerminatingInstancesCurrentStateNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TerminateInstancesResultTerminatingInstancesCurrentStateNameEnum: %s", s)
	}
}

// TerminateInstancesResultTerminatingInstancesCurrentState - The current state of the instance.
type TerminateInstancesResultTerminatingInstancesCurrentState struct {
	Code *int64
	Name *TerminateInstancesResultTerminatingInstancesCurrentStateNameEnum
}

// TerminateInstancesResultTerminatingInstancesPreviousStateNameEnum - The current state of the instance.
type TerminateInstancesResultTerminatingInstancesPreviousStateNameEnum string

const (
	TerminateInstancesResultTerminatingInstancesPreviousStateNameEnumPending      TerminateInstancesResultTerminatingInstancesPreviousStateNameEnum = "pending"
	TerminateInstancesResultTerminatingInstancesPreviousStateNameEnumRunning      TerminateInstancesResultTerminatingInstancesPreviousStateNameEnum = "running"
	TerminateInstancesResultTerminatingInstancesPreviousStateNameEnumShuttingDown TerminateInstancesResultTerminatingInstancesPreviousStateNameEnum = "shutting-down"
	TerminateInstancesResultTerminatingInstancesPreviousStateNameEnumTerminated   TerminateInstancesResultTerminatingInstancesPreviousStateNameEnum = "terminated"
	TerminateInstancesResultTerminatingInstancesPreviousStateNameEnumStopping     TerminateInstancesResultTerminatingInstancesPreviousStateNameEnum = "stopping"
	TerminateInstancesResultTerminatingInstancesPreviousStateNameEnumStopped      TerminateInstancesResultTerminatingInstancesPreviousStateNameEnum = "stopped"
)

func (e *TerminateInstancesResultTerminatingInstancesPreviousStateNameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "running":
		fallthrough
	case "shutting-down":
		fallthrough
	case "terminated":
		fallthrough
	case "stopping":
		fallthrough
	case "stopped":
		*e = TerminateInstancesResultTerminatingInstancesPreviousStateNameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TerminateInstancesResultTerminatingInstancesPreviousStateNameEnum: %s", s)
	}
}

// TerminateInstancesResultTerminatingInstancesPreviousState - The previous state of the instance.
type TerminateInstancesResultTerminatingInstancesPreviousState struct {
	Code *int64
	Name *TerminateInstancesResultTerminatingInstancesPreviousStateNameEnum
}

// TerminateInstancesResultTerminatingInstances - Describes an instance state change.
type TerminateInstancesResultTerminatingInstances struct {
	CurrentState  *TerminateInstancesResultTerminatingInstancesCurrentState
	InstanceID    *string
	PreviousState *TerminateInstancesResultTerminatingInstancesPreviousState
}

// TerminateInstancesResult - Success
type TerminateInstancesResult struct {
	TerminatingInstances []TerminateInstancesResultTerminatingInstances
}
