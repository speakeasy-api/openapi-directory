// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DeletePolicyModulePathParams struct {
	// The name of a policy module
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

type DeletePolicyModuleQueryParams struct {
	// If true, response will be in a human-readable format.
	Pretty *bool `queryParam:"style=form,explode=true,name=pretty"`
}

type DeletePolicyModuleRequest struct {
	PathParams  DeletePolicyModulePathParams
	QueryParams DeletePolicyModuleQueryParams
}

type DeletePolicyModule200ApplicationJSONExplanationLocalsKey struct {
	Type  *string `json:"type,omitempty"`
	Value *string `json:"value,omitempty"`
}

type DeletePolicyModule200ApplicationJSONExplanationLocalsValue struct {
	Type  *string `json:"type,omitempty"`
	Value *string `json:"value,omitempty"`
}

type DeletePolicyModule200ApplicationJSONExplanationLocals struct {
	Key   *DeletePolicyModule200ApplicationJSONExplanationLocalsKey   `json:"key,omitempty"`
	Value *DeletePolicyModule200ApplicationJSONExplanationLocalsValue `json:"value,omitempty"`
}

type DeletePolicyModule200ApplicationJSONExplanationNodeTerms struct {
	Type  *string `json:"type,omitempty"`
	Value *string `json:"value,omitempty"`
}

// DeletePolicyModule200ApplicationJSONExplanationNode - The AST element associated with the evaluation step.
// https://godoc.org/github.com/open-policy-agent/opa/ast - AST
type DeletePolicyModule200ApplicationJSONExplanationNode struct {
	// Node number
	Index *float64                                                   `json:"index,omitempty"`
	Terms []DeletePolicyModule200ApplicationJSONExplanationNodeTerms `json:"terms,omitempty"`
}

// DeletePolicyModule200ApplicationJSONExplanationOpEnum - The kind of *trace event*
//
// Each trace event represents a step in the query evaluation process. Trace events are emitted at the following points:
// - enter - before a body or rule is evaluated
// - exit - after a body or rule has evaluated successfully
// - eval - before an expression is evaluated
// - fail - after an expression has evaluated to false.
// - redo - before evaluation restarts from a body, rule, or expression.
//
// By default, OPA searches for all sets of term bindings that make all expressions in the query evaluate to true. Because there may be multiple answers, the search can restart when OPA determines the query is true or false. When the search restarts, a *redo trace event* is emitted.
type DeletePolicyModule200ApplicationJSONExplanationOpEnum string

const (
	DeletePolicyModule200ApplicationJSONExplanationOpEnumEnter DeletePolicyModule200ApplicationJSONExplanationOpEnum = "enter"
	DeletePolicyModule200ApplicationJSONExplanationOpEnumExit  DeletePolicyModule200ApplicationJSONExplanationOpEnum = "exit"
	DeletePolicyModule200ApplicationJSONExplanationOpEnumEval  DeletePolicyModule200ApplicationJSONExplanationOpEnum = "eval"
	DeletePolicyModule200ApplicationJSONExplanationOpEnumFail  DeletePolicyModule200ApplicationJSONExplanationOpEnum = "fail"
	DeletePolicyModule200ApplicationJSONExplanationOpEnumRedo  DeletePolicyModule200ApplicationJSONExplanationOpEnum = "redo"
)

func (e *DeletePolicyModule200ApplicationJSONExplanationOpEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enter":
		fallthrough
	case "exit":
		fallthrough
	case "eval":
		fallthrough
	case "fail":
		fallthrough
	case "redo":
		*e = DeletePolicyModule200ApplicationJSONExplanationOpEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeletePolicyModule200ApplicationJSONExplanationOpEnum: %s", s)
	}
}

// DeletePolicyModule200ApplicationJSONExplanationTypeEnum - The type of the **node** field
type DeletePolicyModule200ApplicationJSONExplanationTypeEnum string

const (
	DeletePolicyModule200ApplicationJSONExplanationTypeEnumExpr DeletePolicyModule200ApplicationJSONExplanationTypeEnum = "expr"
	DeletePolicyModule200ApplicationJSONExplanationTypeEnumRule DeletePolicyModule200ApplicationJSONExplanationTypeEnum = "rule"
	DeletePolicyModule200ApplicationJSONExplanationTypeEnumBody DeletePolicyModule200ApplicationJSONExplanationTypeEnum = "body"
)

func (e *DeletePolicyModule200ApplicationJSONExplanationTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "expr":
		fallthrough
	case "rule":
		fallthrough
	case "body":
		*e = DeletePolicyModule200ApplicationJSONExplanationTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeletePolicyModule200ApplicationJSONExplanationTypeEnum: %s", s)
	}
}

type DeletePolicyModule200ApplicationJSONExplanation struct {
	// The query's term bindings at the point when the trace event was emitted.
	Locals []DeletePolicyModule200ApplicationJSONExplanationLocals `json:"locals,omitempty"`
	// The AST element associated with the evaluation step.
	Node *DeletePolicyModule200ApplicationJSONExplanationNode `json:"node,omitempty"`
	// The kind of *trace event*
	//
	// Each trace event represents a step in the query evaluation process. Trace events are emitted at the following points:
	// - enter - before a body or rule is evaluated
	// - exit - after a body or rule has evaluated successfully
	// - eval - before an expression is evaluated
	// - fail - after an expression has evaluated to false.
	// - redo - before evaluation restarts from a body, rule, or expression.
	//
	// By default, OPA searches for all sets of term bindings that make all expressions in the query evaluate to true. Because there may be multiple answers, the search can restart when OPA determines the query is true or false. When the search restarts, a *redo trace event* is emitted.
	Op *DeletePolicyModule200ApplicationJSONExplanationOpEnum `json:"op,omitempty"`
	// The parent query. Use this field to identify trace events from related queries.
	//
	// For example, if query A references rule R, trace events emitted when evaluating rule R will have the *parent_id* field set to query Aâ€™s *query_id*.
	ParentID *float64 `json:"parent_id,omitempty"`
	// The query that the trace event was emitted for. Use this field to distinguish trace events emitted by from different queries.
	QueryID *float64 `json:"query_id,omitempty"`
	// The type of the **node** field
	Type *DeletePolicyModule200ApplicationJSONExplanationTypeEnum `json:"type,omitempty"`
}

type DeletePolicyModule200ApplicationJSONMetrics struct {
	// *Description is forthcoming*
	CounterServerQueryCacheHit *float64 `json:"counter_server_query_cache_hit,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageBuildComprehensionIndexNs *float64 `json:"timer_query_compile_stage_build_comprehension_index_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageCheckSafetyNs *float64 `json:"timer_query_compile_stage_check_safety_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageCheckTypesNs *float64 `json:"timer_query_compile_stage_check_types_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageCheckUndefinedFuncsNs *float64 `json:"timer_query_compile_stage_check_undefined_funcs_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageCheckUnsafeBuiltinsNs *float64 `json:"timer_query_compile_stage_check_unsafe_builtins_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageResolveRefsNs *float64 `json:"timer_query_compile_stage_resolve_refs_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageRewriteComprehensionTermsNs *float64 `json:"timer_query_compile_stage_rewrite_comprehension_terms_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageRewriteDynamicTermsNs *float64 `json:"timer_query_compile_stage_rewrite_dynamic_terms_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageRewriteExprTermsNs *float64 `json:"timer_query_compile_stage_rewrite_expr_terms_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageRewriteLocalVarsNs *float64 `json:"timer_query_compile_stage_rewrite_local_vars_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageRewriteToCaptureValueNs *float64 `json:"timer_query_compile_stage_rewrite_to_capture_value_ns,omitempty"`
	// (Only returned if `instrument` is true.) *Description is forthcoming*
	TimerQueryCompileStageRewriteWithValuesNs *float64 `json:"timer_query_compile_stage_rewrite_with_values_ns,omitempty"`
	// Time taken (in nanonseconds) to parse the input
	TimerRegoInputParseNs *float64 `json:"timer_rego_input_parse_ns,omitempty"`
	// Time taken (in nanonseconds) to compile the loaded policy modules
	TimerRegoModuleCompileNs *float64 `json:"timer_rego_module_compile_ns,omitempty"`
	// Time taken (in nanoseconds) to parse the input policy module
	TimerRegoModuleParseNs *float64 `json:"timer_rego_module_parse_ns,omitempty"`
	// Time taken (in nanoseconds) to compile the query
	TimerRegoQueryCompileNs *float64 `json:"timer_rego_query_compile_ns,omitempty"`
	// Time taken (in nanonseconds) to evaluate the query
	TimerRegoQueryEvalNs *float64 `json:"timer_rego_query_eval_ns,omitempty"`
	// Time taken (in nanoseconds) to parse the query
	TimerRegoQueryParseNs *float64 `json:"timer_rego_query_parse_ns,omitempty"`
	// Time taken (in nanoseconds) to handle the API request
	TimerServerHandlerNs *float64 `json:"timer_server_handler_ns,omitempty"`
	// *Description is forthcoming*
	TimerServerReadBytesNs *float64 `json:"timer_server_read_bytes_ns,omitempty"`
}

type DeletePolicyModule200ApplicationJSONProvenance struct {
	// The Git commit id of this OPA build.
	BuildCommit *string `json:"build_commit,omitempty"`
	// The hostname where this instance was built.
	BuildHostname *string `json:"build_hostname,omitempty"`
	// When this OPA instance was built (in [ISO8601 format](https://www.w3.org/TR/NOTE-datetime))
	BuildTimestamp *string `json:"build_timestamp,omitempty"`
	// A set of key-value pairs describing each bundle activated on the server.
	Bundles map[string]interface{} `json:"bundles,omitempty"`
	// The version of this OPA instance
	Version *string `json:"version,omitempty"`
}

// DeletePolicyModule200ApplicationJSONResultAstPackagePathTypeEnum - The type of the path operation
type DeletePolicyModule200ApplicationJSONResultAstPackagePathTypeEnum string

const (
	DeletePolicyModule200ApplicationJSONResultAstPackagePathTypeEnumImport  DeletePolicyModule200ApplicationJSONResultAstPackagePathTypeEnum = "import"
	DeletePolicyModule200ApplicationJSONResultAstPackagePathTypeEnumPackage DeletePolicyModule200ApplicationJSONResultAstPackagePathTypeEnum = "package"
)

func (e *DeletePolicyModule200ApplicationJSONResultAstPackagePathTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "import":
		fallthrough
	case "package":
		*e = DeletePolicyModule200ApplicationJSONResultAstPackagePathTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeletePolicyModule200ApplicationJSONResultAstPackagePathTypeEnum: %s", s)
	}
}

type DeletePolicyModule200ApplicationJSONResultAstPackagePath struct {
	// The type of the path operation
	Type *DeletePolicyModule200ApplicationJSONResultAstPackagePathTypeEnum `json:"type,omitempty"`
	// The path variable
	Value *string `json:"value,omitempty"`
}

type DeletePolicyModule200ApplicationJSONResultAstPackage struct {
	// The path to the package
	Path []DeletePolicyModule200ApplicationJSONResultAstPackagePath `json:"path,omitempty"`
}

type DeletePolicyModule200ApplicationJSONResultAstRulesBodyTermsValue struct {
	Type  *string `json:"type,omitempty"`
	Value *string `json:"value,omitempty"`
}

type DeletePolicyModule200ApplicationJSONResultAstRulesBodyTerms struct {
	// The type of the term variable
	Type *string `json:"type,omitempty"`
	// The list of types and values for the term variable
	Value []DeletePolicyModule200ApplicationJSONResultAstRulesBodyTermsValue `json:"value,omitempty"`
}

type DeletePolicyModule200ApplicationJSONResultAstRulesBody struct {
	// The location of this term in the list (starts at 0)
	Index *float64 `json:"index,omitempty"`
	// The type/value pairing for this term
	Terms []DeletePolicyModule200ApplicationJSONResultAstRulesBodyTerms `json:"terms,omitempty"`
}

// DeletePolicyModule200ApplicationJSONResultAstRulesHeadKey - The type/value pairing for this rule's head
type DeletePolicyModule200ApplicationJSONResultAstRulesHeadKey struct {
	// The type of the head
	Type *string `json:"type,omitempty"`
	// The value of the head
	Value *string `json:"value,omitempty"`
}

type DeletePolicyModule200ApplicationJSONResultAstRulesHead struct {
	// The type/value pairing for this rule's head
	Key *DeletePolicyModule200ApplicationJSONResultAstRulesHeadKey `json:"key,omitempty"`
	// The head of the rule
	Name *string `json:"name,omitempty"`
}

type DeletePolicyModule200ApplicationJSONResultAstRules struct {
	// A list of the terms in this rule
	Body []DeletePolicyModule200ApplicationJSONResultAstRulesBody `json:"body,omitempty"`
	Head *DeletePolicyModule200ApplicationJSONResultAstRulesHead  `json:"head,omitempty"`
}

// DeletePolicyModule200ApplicationJSONResultAst - The types for declarations and runtime objects passed to your implementation. This consists of an abstract syntax tree (AST) of policy modules, package and import declarations, rules, expressions, and terms.
// https://godoc.org/github.com/open-policy-agent/opa/ast - AST
type DeletePolicyModule200ApplicationJSONResultAst struct {
	Package *DeletePolicyModule200ApplicationJSONResultAstPackage `json:"package,omitempty"`
	// When OPA evaluates a rule, it generates the content of a [virtual documents](https://www.openpolicyagent.org/docs/latest/philosophy/#the-opa-document-model)
	Rules []DeletePolicyModule200ApplicationJSONResultAstRules `json:"rules,omitempty"`
}

type DeletePolicyModule200ApplicationJSONResult struct {
	// The types for declarations and runtime objects passed to your implementation. This consists of an abstract syntax tree (AST) of policy modules, package and import declarations, rules, expressions, and terms.
	Ast *DeletePolicyModule200ApplicationJSONResultAst `json:"ast,omitempty"`
	// The name of a policy module
	ID *string `json:"id,omitempty"`
	// A string representation of the full Rego policy
	Raw *string `json:"raw,omitempty"`
}

// DeletePolicyModule200ApplicationJSON - Success
type DeletePolicyModule200ApplicationJSON struct {
	Explanation []DeletePolicyModule200ApplicationJSONExplanation `json:"explanation,omitempty"`
	Metrics     *DeletePolicyModule200ApplicationJSONMetrics      `json:"metrics,omitempty"`
	Provenance  *DeletePolicyModule200ApplicationJSONProvenance   `json:"provenance,omitempty"`
	Result      []DeletePolicyModule200ApplicationJSONResult      `json:"result,omitempty"`
}

type DeletePolicyModuleResponse struct {
	// Bad request
	FourHundred *shared.FourHundred
	// Not found (for example, a requested policy module or document does not exist)
	FourHundredAndFour *shared.FourHundredAndFour
	ContentType        string
	StatusCode         int
	RawResponse        *http.Response
	// Success
	DeletePolicyModule200ApplicationJSONObject *DeletePolicyModule200ApplicationJSON
}
