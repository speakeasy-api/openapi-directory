/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Locale } from "./locale";
import { QualificationStatusEnum } from "./qualificationstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The Qualification data structure represents a Qualification assigned to a user, including the Qualification type and the value (score).
 */
export class Qualification extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "GrantTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  grantTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "IntegerValue" })
  integerValue?: number;

  /**
   * The Locale data structure represents a geographical region or location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LocaleValue" })
  @Type(() => Locale)
  localeValue?: Locale;

  @SpeakeasyMetadata()
  @Expose({ name: "QualificationTypeId" })
  qualificationTypeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: QualificationStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkerId" })
  workerId?: string;
}
