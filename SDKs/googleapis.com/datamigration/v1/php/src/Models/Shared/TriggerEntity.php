<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TriggerEntity - Trigger is not used as an independent entity, it is retrieved as part of a Table entity.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TriggerEntity
{
    /**
     * Custom engine specific features.
     * 
     * @var ?array<string, mixed> $customFeatures
     */
	#[\JMS\Serializer\Annotation\SerializedName('customFeatures')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $customFeatures = null;
    
    /**
     * The name of the trigger.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The SQL code which creates the trigger.
     * 
     * @var ?string $sqlCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('sqlCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sqlCode = null;
    
    /**
     * Indicates when the trigger fires, for example BEFORE STATEMENT, AFTER EACH ROW.
     * 
     * @var ?string $triggerType
     */
	#[\JMS\Serializer\Annotation\SerializedName('triggerType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $triggerType = null;
    
    /**
     * The DML, DDL, or database events that fire the trigger, for example INSERT, UPDATE.
     * 
     * @var ?array<string> $triggeringEvents
     */
	#[\JMS\Serializer\Annotation\SerializedName('triggeringEvents')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $triggeringEvents = null;
    
	public function __construct()
	{
		$this->customFeatures = null;
		$this->name = null;
		$this->sqlCode = null;
		$this->triggerType = null;
		$this->triggeringEvents = null;
	}
}
