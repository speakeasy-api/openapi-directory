// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetDeviceSensorRelationshipsRequest struct {
	Serial string `pathParam:"style=simple,explode=false,name=serial"`
}

// GetDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnum - The product type of the related device
type GetDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnum string

const (
	GetDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnumCamera GetDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnum = "camera"
	GetDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnumSensor GetDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnum = "sensor"
)

func (e *GetDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "camera":
		fallthrough
	case "sensor":
		*e = GetDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnum: %s", s)
	}
}

type GetDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevices struct {
	// The product type of the related device
	ProductType *GetDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevicesProductTypeEnum `json:"productType,omitempty"`
	// The serial of the related device
	Serial *string `json:"serial,omitempty"`
}

// GetDeviceSensorRelationships200ApplicationJSONLivestream - A role defined between an MT sensor and an MV camera that adds the camera's livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
type GetDeviceSensorRelationships200ApplicationJSONLivestream struct {
	// An array of the related devices for the role
	RelatedDevices []GetDeviceSensorRelationships200ApplicationJSONLivestreamRelatedDevices `json:"relatedDevices,omitempty"`
}

type GetDeviceSensorRelationships200ApplicationJSON struct {
	// A role defined between an MT sensor and an MV camera that adds the camera's livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
	Livestream *GetDeviceSensorRelationships200ApplicationJSONLivestream `json:"livestream,omitempty"`
}

type GetDeviceSensorRelationshipsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetDeviceSensorRelationships200ApplicationJSONObjects []GetDeviceSensorRelationships200ApplicationJSON
}
