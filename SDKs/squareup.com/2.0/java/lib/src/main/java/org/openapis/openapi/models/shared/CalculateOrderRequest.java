/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CalculateOrderRequest - An object containing the fields to POST for the request.
 * 
 * See the corresponding object definition for field details.
 */
public class CalculateOrderRequest {
    /**
     * Contains all information related to a single order to process with Square,
     * including line items that specify the products to purchase. `Order` objects also
     * include information about any associated tenders, refunds, and returns.
     * 
     * All Connect V2 Transactions have all been converted to Orders including all associated
     * itemization data.
     */
    @JsonProperty("order")
    public Order order;
    public CalculateOrderRequest withOrder(Order order) {
        this.order = order;
        return this;
    }
    
    /**
     * Identifies one or more loyalty reward tiers to apply during the order calculation.
     * The discounts defined by the reward tiers are added to the order only to preview the
     * effect of applying the specified rewards. The rewards do not correspond to actual
     * redemptions; that is, no `reward`s are created. Therefore, the reward `id`s are
     * random strings used only to reference the reward tier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("proposed_rewards")
    public OrderReward[] proposedRewards;
    public CalculateOrderRequest withProposedRewards(OrderReward[] proposedRewards) {
        this.proposedRewards = proposedRewards;
        return this;
    }
    
}
