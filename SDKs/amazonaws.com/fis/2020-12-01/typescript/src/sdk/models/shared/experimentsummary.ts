/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExperimentState } from "./experimentstate";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Provides a summary of an experiment.
 */
export class ExperimentSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "experimentTemplateId" })
  experimentTemplateId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  @Type(() => ExperimentState)
  state?: ExperimentState;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}
