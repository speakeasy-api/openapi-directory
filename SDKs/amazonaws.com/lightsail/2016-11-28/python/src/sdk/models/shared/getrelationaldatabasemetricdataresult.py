"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import metricdatapoint as shared_metricdatapoint
from ..shared import relationaldatabasemetricname_enum as shared_relationaldatabasemetricname_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetRelationalDatabaseMetricDataResult:
    r"""Success"""
    
    metric_data: Optional[list[shared_metricdatapoint.MetricDatapoint]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metricData'), 'exclude': lambda f: f is None }})  
    metric_name: Optional[shared_relationaldatabasemetricname_enum.RelationalDatabaseMetricNameEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metricName'), 'exclude': lambda f: f is None }})  
    