// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTModifyTrafficMirrorSessionActionEnum
type POSTModifyTrafficMirrorSessionActionEnum string

const (
	POSTModifyTrafficMirrorSessionActionEnumModifyTrafficMirrorSession POSTModifyTrafficMirrorSessionActionEnum = "ModifyTrafficMirrorSession"
)

func (e POSTModifyTrafficMirrorSessionActionEnum) ToPointer() *POSTModifyTrafficMirrorSessionActionEnum {
	return &e
}

func (e *POSTModifyTrafficMirrorSessionActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ModifyTrafficMirrorSession":
		*e = POSTModifyTrafficMirrorSessionActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTModifyTrafficMirrorSessionActionEnum: %v", v)
	}
}

// POSTModifyTrafficMirrorSessionVersionEnum
type POSTModifyTrafficMirrorSessionVersionEnum string

const (
	POSTModifyTrafficMirrorSessionVersionEnumTwoThousandAndSixteen1115 POSTModifyTrafficMirrorSessionVersionEnum = "2016-11-15"
)

func (e POSTModifyTrafficMirrorSessionVersionEnum) ToPointer() *POSTModifyTrafficMirrorSessionVersionEnum {
	return &e
}

func (e *POSTModifyTrafficMirrorSessionVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTModifyTrafficMirrorSessionVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTModifyTrafficMirrorSessionVersionEnum: %v", v)
	}
}

type POSTModifyTrafficMirrorSessionRequest struct {
	Action            POSTModifyTrafficMirrorSessionActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                                    `request:"mediaType=text/xml"`
	Version           POSTModifyTrafficMirrorSessionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTModifyTrafficMirrorSessionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
