/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetContainersJsonQueryParams {
    /**
     * By default, the `GET /containers/json` endpoint returns a list of all single containers in a space that are in a running state. To request a list of all containers independent of their current state, set the `all` query parameter to true. Allowed values are: `all=true`, `all=True`, and `all=1`. 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=all")
    public String all;
    public GetContainersJsonQueryParams withAll(String all) {
        this.all = all;
        return this;
    }
    
    /**
     * You can filter your containers by any environment variable key or value that is listed in the `Env` section of your CLI/ API response when you run the `cf ic inspect &lt;container&gt;` command, or call the `GET /containers/{id}/json` endpoint. Your search criteria does not need to be an exact match. It can also be a part of the key or value you are looking for. For example, to filter all containers with an environment variable that contains `id` in one of their environment variables, use `filter=id`.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=filters")
    public String filters;
    public GetContainersJsonQueryParams withFilters(String filters) {
        this.filters = filters;
        return this;
    }
    
}
