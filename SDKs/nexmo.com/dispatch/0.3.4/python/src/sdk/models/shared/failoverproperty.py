"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class FailoverPropertyConditionStatusEnum(str, Enum):
    r"""Set the status the message must reach in the expiry_time before failing over. Options are delivered or read."""
    DELIVERED = 'delivered'
    READ = 'read'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FailoverProperty:
    r"""Please note that last message does not have failover attribute inside it. All other messages must contain a failover attribute."""
    
    condition_status: Optional[FailoverPropertyConditionStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('condition_status'), 'exclude': lambda f: f is None }})
    r"""Set the status the message must reach in the expiry_time before failing over. Options are delivered or read."""  
    expiry_time: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expiry_time'), 'exclude': lambda f: f is None }})
    r"""In seconds. Minimum value is 15 and maximum value is 86,400 seconds (1 day)."""  
    