// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LayoutReferencePredefinedLayoutEnum - Predefined layout.
type LayoutReferencePredefinedLayoutEnum string

const (
	LayoutReferencePredefinedLayoutEnumPredefinedLayoutUnspecified LayoutReferencePredefinedLayoutEnum = "PREDEFINED_LAYOUT_UNSPECIFIED"
	LayoutReferencePredefinedLayoutEnumBlank                       LayoutReferencePredefinedLayoutEnum = "BLANK"
	LayoutReferencePredefinedLayoutEnumCaptionOnly                 LayoutReferencePredefinedLayoutEnum = "CAPTION_ONLY"
	LayoutReferencePredefinedLayoutEnumTitle                       LayoutReferencePredefinedLayoutEnum = "TITLE"
	LayoutReferencePredefinedLayoutEnumTitleAndBody                LayoutReferencePredefinedLayoutEnum = "TITLE_AND_BODY"
	LayoutReferencePredefinedLayoutEnumTitleAndTwoColumns          LayoutReferencePredefinedLayoutEnum = "TITLE_AND_TWO_COLUMNS"
	LayoutReferencePredefinedLayoutEnumTitleOnly                   LayoutReferencePredefinedLayoutEnum = "TITLE_ONLY"
	LayoutReferencePredefinedLayoutEnumSectionHeader               LayoutReferencePredefinedLayoutEnum = "SECTION_HEADER"
	LayoutReferencePredefinedLayoutEnumSectionTitleAndDescription  LayoutReferencePredefinedLayoutEnum = "SECTION_TITLE_AND_DESCRIPTION"
	LayoutReferencePredefinedLayoutEnumOneColumnText               LayoutReferencePredefinedLayoutEnum = "ONE_COLUMN_TEXT"
	LayoutReferencePredefinedLayoutEnumMainPoint                   LayoutReferencePredefinedLayoutEnum = "MAIN_POINT"
	LayoutReferencePredefinedLayoutEnumBigNumber                   LayoutReferencePredefinedLayoutEnum = "BIG_NUMBER"
)

func (e LayoutReferencePredefinedLayoutEnum) ToPointer() *LayoutReferencePredefinedLayoutEnum {
	return &e
}

func (e *LayoutReferencePredefinedLayoutEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PREDEFINED_LAYOUT_UNSPECIFIED":
		fallthrough
	case "BLANK":
		fallthrough
	case "CAPTION_ONLY":
		fallthrough
	case "TITLE":
		fallthrough
	case "TITLE_AND_BODY":
		fallthrough
	case "TITLE_AND_TWO_COLUMNS":
		fallthrough
	case "TITLE_ONLY":
		fallthrough
	case "SECTION_HEADER":
		fallthrough
	case "SECTION_TITLE_AND_DESCRIPTION":
		fallthrough
	case "ONE_COLUMN_TEXT":
		fallthrough
	case "MAIN_POINT":
		fallthrough
	case "BIG_NUMBER":
		*e = LayoutReferencePredefinedLayoutEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LayoutReferencePredefinedLayoutEnum: %v", v)
	}
}

// LayoutReference - Slide layout reference. This may reference either: - A predefined layout - One of the layouts in the presentation.
type LayoutReference struct {
	// Layout ID: the object ID of one of the layouts in the presentation.
	LayoutID *string `json:"layoutId,omitempty"`
	// Predefined layout.
	PredefinedLayout *LayoutReferencePredefinedLayoutEnum `json:"predefinedLayout,omitempty"`
}
