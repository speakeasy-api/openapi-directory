// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LoadBalancerTLSCertificateRenewalStatusEnum string

const (
	LoadBalancerTLSCertificateRenewalStatusEnumPendingAutoRenewal LoadBalancerTLSCertificateRenewalStatusEnum = "PENDING_AUTO_RENEWAL"
	LoadBalancerTLSCertificateRenewalStatusEnumPendingValidation  LoadBalancerTLSCertificateRenewalStatusEnum = "PENDING_VALIDATION"
	LoadBalancerTLSCertificateRenewalStatusEnumSuccess            LoadBalancerTLSCertificateRenewalStatusEnum = "SUCCESS"
	LoadBalancerTLSCertificateRenewalStatusEnumFailed             LoadBalancerTLSCertificateRenewalStatusEnum = "FAILED"
)

func (e LoadBalancerTLSCertificateRenewalStatusEnum) ToPointer() *LoadBalancerTLSCertificateRenewalStatusEnum {
	return &e
}

func (e *LoadBalancerTLSCertificateRenewalStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING_AUTO_RENEWAL":
		fallthrough
	case "PENDING_VALIDATION":
		fallthrough
	case "SUCCESS":
		fallthrough
	case "FAILED":
		*e = LoadBalancerTLSCertificateRenewalStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LoadBalancerTLSCertificateRenewalStatusEnum: %v", v)
	}
}
