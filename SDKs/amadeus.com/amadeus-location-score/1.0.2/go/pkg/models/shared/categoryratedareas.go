// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// CategoryRatedAreasCategoryScoresNightLife - night life category
type CategoryRatedAreasCategoryScoresNightLife struct {
	// score of nigh life possibility from 0 (nothing to do at night) to 100 (many night activities to enjoy)
	Overall *float64 `json:"overall,omitempty"`
}

// CategoryRatedAreasCategoryScoresRestaurant - restaurant category
type CategoryRatedAreasCategoryScoresRestaurant struct {
	// score of eating possibility from 0 (no place to eat) to 100 (many restaurants to enjoy)
	Overall *float64 `json:"overall,omitempty"`
	// score of vegetatian eating possibility from 0 (no place to eat vegetatian) to 100 (many restaurants to enjoy)
	Vegetarian *float64 `json:"vegetarian,omitempty"`
}

// CategoryRatedAreasCategoryScoresShopping - shopping category
type CategoryRatedAreasCategoryScoresShopping struct {
	// score of luxury shopping possibility from 0 (no luxury shop) to 100 (many luxury shops to enjoy)
	Luxury *float64 `json:"luxury,omitempty"`
	// score of shopping possibility from 0 (no shop) to 100 (many shops to enjoy)
	Overall *float64 `json:"overall,omitempty"`
}

// CategoryRatedAreasCategoryScoresSight - sight category
type CategoryRatedAreasCategoryScoresSight struct {
	// score of outdoor activity possibility from 0 (no outdoor spaces) to 100 (many parks or beaches to enjoy)
	BeachAndPark *int64 `json:"beachAndPark,omitempty"`
	// score of historical discovery possibility from 0 (no historical site) to 100 (many historical site to enjoy)
	Historical *int64 `json:"historical,omitempty"`
	// score of sight seeing possibility from 0 (nothing to see) to 100 (many sceneries to enjoy)
	Overall *int64 `json:"overall,omitempty"`
}

// CategoryRatedAreasCategoryScores - category scoring of the location
type CategoryRatedAreasCategoryScores struct {
	// night life category
	NightLife *CategoryRatedAreasCategoryScoresNightLife `json:"nightLife,omitempty"`
	// restaurant category
	Restaurant *CategoryRatedAreasCategoryScoresRestaurant `json:"restaurant,omitempty"`
	// shopping category
	Shopping *CategoryRatedAreasCategoryScoresShopping `json:"shopping,omitempty"`
	// sight category
	Sight *CategoryRatedAreasCategoryScoresSight `json:"sight,omitempty"`
}

// CategoryRatedAreasGeoCode - Geographic coordinates describing the position of any location on the surface of Earth
type CategoryRatedAreasGeoCode struct {
	// Latitude of the position expressed in decimal degrees (WSG 84), e.g. 6.244203. A positive value denotes northern hemisphere or the equator, and a negative value denotes southern hemisphere. The number of digits to represent the precision of the coordinate.
	Latitude *float32 `json:"latitude,omitempty"`
	// Longitude of the position expressed in decimal degrees (WSG 84), e.g. -75.581211. A positive value denotes east longitude or the prime meridian, and a negative value denotes west longitude.  The number of digits to represent the precision of the coordinate.
	Longitude *float32 `json:"longitude,omitempty"`
}

// CategoryRatedAreas - Identification of a specific version of a resource
type CategoryRatedAreas struct {
	// category scoring of the location
	CategoryScores *CategoryRatedAreasCategoryScores `json:"categoryScores,omitempty"`
	// Geographic coordinates describing the position of any location on the surface of Earth
	GeoCode *CategoryRatedAreasGeoCode `json:"geoCode,omitempty"`
	// Radius of the area in meters
	Radius *int64 `json:"radius,omitempty"`
	// Type of the manipulatd resource
	Type *string `json:"type,omitempty"`
}
