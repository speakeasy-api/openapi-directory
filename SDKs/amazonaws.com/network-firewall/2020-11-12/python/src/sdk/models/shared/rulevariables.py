"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ipset as shared_ipset
from ..shared import portset as shared_portset
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RuleVariables:
    r"""Settings that are available for use in the rules in the <a>RuleGroup</a> where this is defined."""
    
    ip_sets: Optional[dict[str, shared_ipset.IPSet]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IPSets'), 'exclude': lambda f: f is None }})  
    port_sets: Optional[dict[str, shared_portset.PortSet]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PortSets'), 'exclude': lambda f: f is None }})  
    