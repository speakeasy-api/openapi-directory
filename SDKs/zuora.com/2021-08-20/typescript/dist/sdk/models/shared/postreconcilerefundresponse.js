"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.POSTReconcileRefundResponse = exports.POSTReconcileRefundResponseTypeEnum = exports.POSTReconcileRefundResponseMethodTypeEnum = exports.POSTReconcileRefundResponseGatewayStateEnum = exports.POSTReconcileRefundResponseFinanceInformation = exports.POSTReconcileRefundResponseFinanceInformationTransferredToAccountingEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Whether the refund was transferred to an external accounting system. Use this field for integration with accounting systems, such as NetSuite.
 *
 * @remarks
 *
 */
var POSTReconcileRefundResponseFinanceInformationTransferredToAccountingEnum;
(function (POSTReconcileRefundResponseFinanceInformationTransferredToAccountingEnum) {
    POSTReconcileRefundResponseFinanceInformationTransferredToAccountingEnum["Processing"] = "Processing";
    POSTReconcileRefundResponseFinanceInformationTransferredToAccountingEnum["Yes"] = "Yes";
    POSTReconcileRefundResponseFinanceInformationTransferredToAccountingEnum["No"] = "No";
    POSTReconcileRefundResponseFinanceInformationTransferredToAccountingEnum["Error"] = "Error";
    POSTReconcileRefundResponseFinanceInformationTransferredToAccountingEnum["Ignore"] = "Ignore";
})(POSTReconcileRefundResponseFinanceInformationTransferredToAccountingEnum = exports.POSTReconcileRefundResponseFinanceInformationTransferredToAccountingEnum || (exports.POSTReconcileRefundResponseFinanceInformationTransferredToAccountingEnum = {}));
/**
 * Container for the finance information related to the refund.
 *
 * @remarks
 *
 */
var POSTReconcileRefundResponseFinanceInformation = /** @class */ (function (_super) {
    __extends(POSTReconcileRefundResponseFinanceInformation, _super);
    function POSTReconcileRefundResponseFinanceInformation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bankAccountAccountingCode" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponseFinanceInformation.prototype, "bankAccountAccountingCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bankAccountAccountingCodeType" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponseFinanceInformation.prototype, "bankAccountAccountingCodeType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "transferredToAccounting" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponseFinanceInformation.prototype, "transferredToAccounting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "unappliedPaymentAccountingCode" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponseFinanceInformation.prototype, "unappliedPaymentAccountingCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "unappliedPaymentAccountingCodeType" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponseFinanceInformation.prototype, "unappliedPaymentAccountingCodeType", void 0);
    return POSTReconcileRefundResponseFinanceInformation;
}(utils_1.SpeakeasyBase));
exports.POSTReconcileRefundResponseFinanceInformation = POSTReconcileRefundResponseFinanceInformation;
/**
 * The status of the refund in the gateway; used for reconciliation.
 *
 * @remarks
 *
 */
var POSTReconcileRefundResponseGatewayStateEnum;
(function (POSTReconcileRefundResponseGatewayStateEnum) {
    POSTReconcileRefundResponseGatewayStateEnum["Settled"] = "Settled";
    POSTReconcileRefundResponseGatewayStateEnum["FailedToSettle"] = "FailedToSettle";
})(POSTReconcileRefundResponseGatewayStateEnum = exports.POSTReconcileRefundResponseGatewayStateEnum || (exports.POSTReconcileRefundResponseGatewayStateEnum = {}));
/**
 * How an external refund was issued to a customer.
 *
 * @remarks
 *
 */
var POSTReconcileRefundResponseMethodTypeEnum;
(function (POSTReconcileRefundResponseMethodTypeEnum) {
    POSTReconcileRefundResponseMethodTypeEnum["Ach"] = "ACH";
    POSTReconcileRefundResponseMethodTypeEnum["Cash"] = "Cash";
    POSTReconcileRefundResponseMethodTypeEnum["Check"] = "Check";
    POSTReconcileRefundResponseMethodTypeEnum["CreditCard"] = "CreditCard";
    POSTReconcileRefundResponseMethodTypeEnum["PayPal"] = "PayPal";
    POSTReconcileRefundResponseMethodTypeEnum["WireTransfer"] = "WireTransfer";
    POSTReconcileRefundResponseMethodTypeEnum["DebitCard"] = "DebitCard";
    POSTReconcileRefundResponseMethodTypeEnum["CreditCardReferenceTransaction"] = "CreditCardReferenceTransaction";
    POSTReconcileRefundResponseMethodTypeEnum["BankTransfer"] = "BankTransfer";
    POSTReconcileRefundResponseMethodTypeEnum["Other"] = "Other";
})(POSTReconcileRefundResponseMethodTypeEnum = exports.POSTReconcileRefundResponseMethodTypeEnum || (exports.POSTReconcileRefundResponseMethodTypeEnum = {}));
/**
 * The type of the refund.
 *
 * @remarks
 *
 */
var POSTReconcileRefundResponseTypeEnum;
(function (POSTReconcileRefundResponseTypeEnum) {
    POSTReconcileRefundResponseTypeEnum["External"] = "External";
    POSTReconcileRefundResponseTypeEnum["Electronic"] = "Electronic";
})(POSTReconcileRefundResponseTypeEnum = exports.POSTReconcileRefundResponseTypeEnum || (exports.POSTReconcileRefundResponseTypeEnum = {}));
var POSTReconcileRefundResponse = /** @class */ (function (_super) {
    __extends(POSTReconcileRefundResponse, _super);
    function POSTReconcileRefundResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accountId" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "accountId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "amount" }),
        __metadata("design:type", Number)
    ], POSTReconcileRefundResponse.prototype, "amount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cancelledOn" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], POSTReconcileRefundResponse.prototype, "cancelledOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "comment" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "comment", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createdById" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "createdById", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createdDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], POSTReconcileRefundResponse.prototype, "createdDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creditMemoId" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "creditMemoId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "financeInformation" }),
        (0, class_transformer_1.Type)(function () { return POSTReconcileRefundResponseFinanceInformation; }),
        __metadata("design:type", POSTReconcileRefundResponseFinanceInformation)
    ], POSTReconcileRefundResponse.prototype, "financeInformation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayId" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "gatewayId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayReconciliationReason" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "gatewayReconciliationReason", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayReconciliationStatus" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "gatewayReconciliationStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayResponse" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "gatewayResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayResponseCode" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "gatewayResponseCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "gatewayState" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "gatewayState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "markedForSubmissionOn" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], POSTReconcileRefundResponse.prototype, "markedForSubmissionOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "methodType" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "methodType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "number" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "number", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paymentId" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "paymentId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paymentMethodId" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "paymentMethodId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paymentMethodSnapshotId" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "paymentMethodSnapshotId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "payoutId" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "payoutId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "reasonCode" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "reasonCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "referenceId" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "referenceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "refundDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], POSTReconcileRefundResponse.prototype, "refundDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "refundTransactionTime" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], POSTReconcileRefundResponse.prototype, "refundTransactionTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "secondRefundReferenceId" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "secondRefundReferenceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "settledOn" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], POSTReconcileRefundResponse.prototype, "settledOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "softDescriptor" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "softDescriptor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "softDescriptorPhone" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "softDescriptorPhone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "submittedOn" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], POSTReconcileRefundResponse.prototype, "submittedOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "success" }),
        __metadata("design:type", Boolean)
    ], POSTReconcileRefundResponse.prototype, "success", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updatedById" }),
        __metadata("design:type", String)
    ], POSTReconcileRefundResponse.prototype, "updatedById", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updatedDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], POSTReconcileRefundResponse.prototype, "updatedDate", void 0);
    return POSTReconcileRefundResponse;
}(utils_1.SpeakeasyBase));
exports.POSTReconcileRefundResponse = POSTReconcileRefundResponse;
