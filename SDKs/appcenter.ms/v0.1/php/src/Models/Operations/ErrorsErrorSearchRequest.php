<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ErrorsErrorSearchRequest
{
    /**
     * The offset (starting at 0) of the first result to return. This parameter along with limit is used to perform pagination.
     * 
     * @var ?int $dollarSkip
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=$skip')]
    public ?int $dollarSkip = null;
    
    /**
     * The maximum number of results to return
     * 
     * @var ?int $dollarTop
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=$top')]
    public ?int $dollarTop = null;
    
    /**
     * The name of the application
     * 
     * @var string $appName
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=app_name')]
    public string $appName;
    
    /**
     * A filter as specified in OData notation
     * 
     * @var ?string $filter
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=filter')]
    public ?string $filter = null;
    
    /**
     * It controls the order of sorting
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ErrorsErrorSearchOrderEnum $order
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=order')]
    public ?ErrorsErrorSearchOrderEnum $order = null;
    
    /**
     * The name of the owner
     * 
     * @var string $ownerName
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=owner_name')]
    public string $ownerName;
    
    /**
     * A query string
     * 
     * @var ?string $q
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=q')]
    public ?string $q = null;
    
    /**
     * It controls the sort based on specified field
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ErrorsErrorSearchSortEnum $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?ErrorsErrorSearchSortEnum $sort = null;
    
	public function __construct()
	{
		$this->dollarSkip = null;
		$this->dollarTop = null;
		$this->appName = "";
		$this->filter = null;
		$this->order = null;
		$this->ownerName = "";
		$this->q = null;
		$this->sort = null;
	}
}
