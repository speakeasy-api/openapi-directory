/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SpeakerStatusEnum } from "./speakerstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * Contains all the information about a speaker.
 */
export class Speaker extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CustomerSpeakerId" })
  customerSpeakerId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DomainId" })
  domainId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GeneratedSpeakerId" })
  generatedSpeakerId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastAccessedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastAccessedAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: SpeakerStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}
