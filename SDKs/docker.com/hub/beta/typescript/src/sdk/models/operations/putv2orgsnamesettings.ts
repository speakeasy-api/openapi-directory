/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PutV2OrgsNameSettingsRequestBodyRestrictedImages extends SpeakeasyBase {
  /**
   * Allow usage of official images if "enabled" is `true`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allow_official_images" })
  allowOfficialImages: boolean;

  /**
   * Allow usage of verified publisher images if "enabled" is `true`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "allow_verified_publishers" })
  allowVerifiedPublishers: boolean;

  /**
   * Whether or not to restrict image usage for users in the organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled: boolean;
}

export class PutV2OrgsNameSettingsRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "restricted_images" })
  @Type(() => PutV2OrgsNameSettingsRequestBodyRestrictedImages)
  restrictedImages: PutV2OrgsNameSettingsRequestBodyRestrictedImages;
}

export class PutV2OrgsNameSettingsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PutV2OrgsNameSettingsRequestBody;

  /**
   * Name of the organization.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=name",
  })
  name: string;
}

export class PutV2OrgsNameSettingsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  orgSettings?: shared.OrgSettings;
}
