// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnum - The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
type EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnum string

const (
	EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnumVpc                  EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnum = "vpc"
	EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnumVpn                  EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnum = "vpn"
	EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnumDirectConnectGateway EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnum = "direct-connect-gateway"
	EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnumConnect              EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnum = "connect"
	EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnumPeering              EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnum = "peering"
	EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnumTgwPeering           EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnum = "tgw-peering"
)

func (e EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnum) ToPointer() *EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnum {
	return &e
}

func (e *EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "vpc":
		fallthrough
	case "vpn":
		fallthrough
	case "direct-connect-gateway":
		fallthrough
	case "connect":
		fallthrough
	case "peering":
		fallthrough
	case "tgw-peering":
		*e = EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnum: %v", v)
	}
}

// EnableTransitGatewayRouteTablePropagationResultPropagationStateEnum - The state.
type EnableTransitGatewayRouteTablePropagationResultPropagationStateEnum string

const (
	EnableTransitGatewayRouteTablePropagationResultPropagationStateEnumEnabling  EnableTransitGatewayRouteTablePropagationResultPropagationStateEnum = "enabling"
	EnableTransitGatewayRouteTablePropagationResultPropagationStateEnumEnabled   EnableTransitGatewayRouteTablePropagationResultPropagationStateEnum = "enabled"
	EnableTransitGatewayRouteTablePropagationResultPropagationStateEnumDisabling EnableTransitGatewayRouteTablePropagationResultPropagationStateEnum = "disabling"
	EnableTransitGatewayRouteTablePropagationResultPropagationStateEnumDisabled  EnableTransitGatewayRouteTablePropagationResultPropagationStateEnum = "disabled"
)

func (e EnableTransitGatewayRouteTablePropagationResultPropagationStateEnum) ToPointer() *EnableTransitGatewayRouteTablePropagationResultPropagationStateEnum {
	return &e
}

func (e *EnableTransitGatewayRouteTablePropagationResultPropagationStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "enabling":
		fallthrough
	case "enabled":
		fallthrough
	case "disabling":
		fallthrough
	case "disabled":
		*e = EnableTransitGatewayRouteTablePropagationResultPropagationStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnableTransitGatewayRouteTablePropagationResultPropagationStateEnum: %v", v)
	}
}

// EnableTransitGatewayRouteTablePropagationResultPropagation - Information about route propagation.
type EnableTransitGatewayRouteTablePropagationResultPropagation struct {
	ResourceID                             *string
	ResourceType                           *EnableTransitGatewayRouteTablePropagationResultPropagationResourceTypeEnum
	State                                  *EnableTransitGatewayRouteTablePropagationResultPropagationStateEnum
	TransitGatewayAttachmentID             *string
	TransitGatewayRouteTableAnnouncementID *string
	TransitGatewayRouteTableID             *string
}

// EnableTransitGatewayRouteTablePropagationResult - Success
type EnableTransitGatewayRouteTablePropagationResult struct {
	Propagation *EnableTransitGatewayRouteTablePropagationResultPropagation
}
