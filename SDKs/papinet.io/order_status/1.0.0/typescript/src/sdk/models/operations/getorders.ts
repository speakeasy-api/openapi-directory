/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Filter by status
 */
export enum GetOrdersOrderStatusEnum {
  Active = "Active",
  Cancelled = "Cancelled",
  Completed = "Completed",
}

export class GetOrdersRequest extends SpeakeasyBase {
  /**
   * The maximum number of items to return. If the value exceeds the maximum, then the maximum value will be used.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: string;

  /**
   * The number of items to skip before starting to collect the result set.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: string;

  /**
   * Filter by status
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=orderStatus",
  })
  orderStatus?: GetOrdersOrderStatusEnum;
}

export class GetOrdersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listOfOrders?: shared.ListOfOrders;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
