<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class CreateCompositionSettingsCreateCompositionSettingsRequest
{
    /**
     * The SID of the stored Credential resource.
     * 
     * @var ?string $awsCredentialsSid
     */
	#[SpeakeasyMetadata('form:name=AwsCredentialsSid')]
    public ?string $awsCredentialsSid = null;
    
    /**
     * The URL of the AWS S3 bucket where the compositions should be stored. We only support DNS-compliant URLs like `https://documentation-example-twilio-bucket/compositions`, where `compositions` is the path in which you want the compositions to be stored. This URL accepts only URI-valid characters, as described in the <a href='https://tools.ietf.org/html/rfc3986#section-2'>RFC 3986</a>.
     * 
     * @var ?string $awsS3Url
     */
	#[SpeakeasyMetadata('form:name=AwsS3Url')]
    public ?string $awsS3Url = null;
    
    /**
     * Whether all compositions should be written to the `aws_s3_url`. When `false`, all compositions are stored in our cloud.
     * 
     * @var ?bool $awsStorageEnabled
     */
	#[SpeakeasyMetadata('form:name=AwsStorageEnabled')]
    public ?bool $awsStorageEnabled = null;
    
    /**
     * Whether all compositions should be stored in an encrypted form. The default is `false`.
     * 
     * @var ?bool $encryptionEnabled
     */
	#[SpeakeasyMetadata('form:name=EncryptionEnabled')]
    public ?bool $encryptionEnabled = null;
    
    /**
     * The SID of the Public Key resource to use for encryption.
     * 
     * @var ?string $encryptionKeySid
     */
	#[SpeakeasyMetadata('form:name=EncryptionKeySid')]
    public ?string $encryptionKeySid = null;
    
    /**
     * A descriptive string that you create to describe the resource and show to the user in the console
     * 
     * @var string $friendlyName
     */
	#[SpeakeasyMetadata('form:name=FriendlyName')]
    public string $friendlyName;
    
	public function __construct()
	{
		$this->awsCredentialsSid = null;
		$this->awsS3Url = null;
		$this->awsStorageEnabled = null;
		$this->encryptionEnabled = null;
		$this->encryptionKeySid = null;
		$this->friendlyName = "";
	}
}
