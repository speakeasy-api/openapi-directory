// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type SetVaultNotificationsPathParams struct {
	// The <code>AccountId</code> value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single '<code>-</code>' (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens ('-') in the ID.
	AccountID string `pathParam:"style=simple,explode=false,name=accountId"`
	// The name of the vault.
	VaultName string `pathParam:"style=simple,explode=false,name=vaultName"`
}

type SetVaultNotificationsHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// SetVaultNotificationsRequestBodyVaultNotificationConfig - Represents a vault's notification configuration.
type SetVaultNotificationsRequestBodyVaultNotificationConfig struct {
	Events   []string `json:"Events,omitempty"`
	SNSTopic *string  `json:"SNSTopic,omitempty"`
}

type SetVaultNotificationsRequestBody struct {
	// Represents a vault's notification configuration.
	VaultNotificationConfig *SetVaultNotificationsRequestBodyVaultNotificationConfig `json:"vaultNotificationConfig,omitempty"`
}

type SetVaultNotificationsRequest struct {
	PathParams SetVaultNotificationsPathParams
	Headers    SetVaultNotificationsHeaders
	Request    SetVaultNotificationsRequestBody `request:"mediaType=application/json"`
}

type SetVaultNotificationsResponse struct {
	ContentType string
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// MissingParameterValueException
	MissingParameterValueException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
}
