<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GETCreateVpcEndpointConnectionNotificationRequest
{
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Action')]
    public GETCreateVpcEndpointConnectionNotificationActionEnum $action;
    
    /**
     * Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">How to ensure idempotency</a>.
     * 
     * @var ?string $clientToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ClientToken')]
    public ?string $clientToken = null;
    
    /**
     * The endpoint events for which to receive notifications. Valid values are <code>Accept</code>, <code>Connect</code>, <code>Delete</code>, and <code>Reject</code>.
     * 
     * @var array<string> $connectionEvents
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ConnectionEvents')]
    public array $connectionEvents;
    
    /**
     * The ARN of the SNS topic for the notifications.
     * 
     * @var string $connectionNotificationArn
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ConnectionNotificationArn')]
    public string $connectionNotificationArn;
    
    /**
     * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
     * 
     * @var ?bool $dryRun
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=DryRun')]
    public ?bool $dryRun = null;
    
    /**
     * The ID of the endpoint service.
     * 
     * @var ?string $serviceId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ServiceId')]
    public ?string $serviceId = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Version')]
    public GETCreateVpcEndpointConnectionNotificationVersionEnum $version;
    
    /**
     * The ID of the endpoint.
     * 
     * @var ?string $vpcEndpointId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=VpcEndpointId')]
    public ?string $vpcEndpointId = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Algorithm')]
    public ?string $xAmzAlgorithm = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Content-Sha256')]
    public ?string $xAmzContentSha256 = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Credential')]
    public ?string $xAmzCredential = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Date')]
    public ?string $xAmzDate = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Security-Token')]
    public ?string $xAmzSecurityToken = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-Signature')]
    public ?string $xAmzSignature = null;
    
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Amz-SignedHeaders')]
    public ?string $xAmzSignedHeaders = null;
    
	public function __construct()
	{
		$this->action = \OpenAPI\OpenAPI\Models\Operations\GETCreateVpcEndpointConnectionNotificationActionEnum::CREATE_VPC_ENDPOINT_CONNECTION_NOTIFICATION;
		$this->clientToken = null;
		$this->connectionEvents = [];
		$this->connectionNotificationArn = "";
		$this->dryRun = null;
		$this->serviceId = null;
		$this->version = \OpenAPI\OpenAPI\Models\Operations\GETCreateVpcEndpointConnectionNotificationVersionEnum::TWO_THOUSAND_AND_SIXTEEN1115;
		$this->vpcEndpointId = null;
		$this->xAmzAlgorithm = null;
		$this->xAmzContentSha256 = null;
		$this->xAmzCredential = null;
		$this->xAmzDate = null;
		$this->xAmzSecurityToken = null;
		$this->xAmzSignature = null;
		$this->xAmzSignedHeaders = null;
	}
}
