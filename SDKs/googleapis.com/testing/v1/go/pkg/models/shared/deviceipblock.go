// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeviceIPBlockFormEnum - Whether this block is used by physical or virtual devices
type DeviceIPBlockFormEnum string

const (
	DeviceIPBlockFormEnumDeviceFormUnspecified DeviceIPBlockFormEnum = "DEVICE_FORM_UNSPECIFIED"
	DeviceIPBlockFormEnumVirtual               DeviceIPBlockFormEnum = "VIRTUAL"
	DeviceIPBlockFormEnumPhysical              DeviceIPBlockFormEnum = "PHYSICAL"
	DeviceIPBlockFormEnumEmulator              DeviceIPBlockFormEnum = "EMULATOR"
)

func (e DeviceIPBlockFormEnum) ToPointer() *DeviceIPBlockFormEnum {
	return &e
}

func (e *DeviceIPBlockFormEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DEVICE_FORM_UNSPECIFIED":
		fallthrough
	case "VIRTUAL":
		fallthrough
	case "PHYSICAL":
		fallthrough
	case "EMULATOR":
		*e = DeviceIPBlockFormEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeviceIPBlockFormEnum: %v", v)
	}
}

// DeviceIPBlock - A single device IP block
type DeviceIPBlock struct {
	// Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp
	AddedDate *Date `json:"addedDate,omitempty"`
	// An IP address block in CIDR notation eg: 34.68.194.64/29
	Block *string `json:"block,omitempty"`
	// Whether this block is used by physical or virtual devices
	Form *DeviceIPBlockFormEnum `json:"form,omitempty"`
}
