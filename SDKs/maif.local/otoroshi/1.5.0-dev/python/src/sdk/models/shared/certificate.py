"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Certificate:
    r"""A SSL/TLS X509 certificate"""
    
    auto_renew: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('autoRenew') }})
    r"""Allow Otoroshi to renew the certificate (if self signed)"""  
    ca: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ca') }})
    r"""Certificate is a CA (read only)"""  
    ca_ref: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('caRef') }})
    r"""Reference for a CA certificate in otoroshi"""  
    chain: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('chain') }})
    r"""Certificate chain of trust in PEM format"""  
    domain: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domain') }})
    r"""Domain of the certificate (read only)"""  
    from_: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('from') }})
    r"""Start date of validity"""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Id of the certificate"""  
    private_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('privateKey') }})
    r"""PKCS8 private key in PEM format"""  
    self_signed: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('selfSigned') }})
    r"""Certificate is self signed  read only)"""  
    subject: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subject') }})
    r"""Subject of the certificate (read only)"""  
    to: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to') }})
    r"""End date of validity"""  
    valid: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('valid') }})
    r"""Certificate is valid (read only)"""  
    