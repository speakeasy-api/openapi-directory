// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TechnicalCueTypeEnum string

const (
	TechnicalCueTypeEnumColorBars      TechnicalCueTypeEnum = "ColorBars"
	TechnicalCueTypeEnumEndCredits     TechnicalCueTypeEnum = "EndCredits"
	TechnicalCueTypeEnumBlackFrames    TechnicalCueTypeEnum = "BlackFrames"
	TechnicalCueTypeEnumOpeningCredits TechnicalCueTypeEnum = "OpeningCredits"
	TechnicalCueTypeEnumStudioLogo     TechnicalCueTypeEnum = "StudioLogo"
	TechnicalCueTypeEnumSlate          TechnicalCueTypeEnum = "Slate"
	TechnicalCueTypeEnumContent        TechnicalCueTypeEnum = "Content"
)

func (e TechnicalCueTypeEnum) ToPointer() *TechnicalCueTypeEnum {
	return &e
}

func (e *TechnicalCueTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ColorBars":
		fallthrough
	case "EndCredits":
		fallthrough
	case "BlackFrames":
		fallthrough
	case "OpeningCredits":
		fallthrough
	case "StudioLogo":
		fallthrough
	case "Slate":
		fallthrough
	case "Content":
		*e = TechnicalCueTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TechnicalCueTypeEnum: %v", v)
	}
}
