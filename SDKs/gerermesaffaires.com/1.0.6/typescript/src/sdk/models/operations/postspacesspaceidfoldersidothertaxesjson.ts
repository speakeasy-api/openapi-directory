/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PostSpacesSpaceIdFoldersIdOtherTaxesJsonSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  gmaAuth: string;
}

export enum PostSpacesSpaceIdFoldersIdOtherTaxesApplicationJson2AccountingWorkbookEnum {
  Customer = "customer",
  Provider = "provider",
  Bank = "bank",
  CashWoucher = "cashWoucher",
  Fiscal = "fiscal",
  Insurance = "insurance",
  Social = "social",
  Other = "other",
  Permanent = "permanent",
}

export class PostSpacesSpaceIdFoldersIdOtherTaxesApplicationJson2Accounting extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AccountedOn" })
  accountedOn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Workbook" })
  workbook?: PostSpacesSpaceIdFoldersIdOtherTaxesApplicationJson2AccountingWorkbookEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "YearMonth" })
  yearMonth?: string;
}

export class PostSpacesSpaceIdFoldersIdOtherTaxesApplicationJson2File extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Content64Encoded" })
  content64Encoded?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;
}

export class PostSpacesSpaceIdFoldersIdOtherTaxesApplicationJson2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Accounting" })
  @Type(() => PostSpacesSpaceIdFoldersIdOtherTaxesApplicationJson2Accounting)
  accounting?: PostSpacesSpaceIdFoldersIdOtherTaxesApplicationJson2Accounting;

  @SpeakeasyMetadata()
  @Expose({ name: "Amount" })
  amount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Author" })
  author?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Code" })
  code?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Comment" })
  comment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Date" })
  date?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DeclarationDate" })
  declarationDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "File" })
  @Type(() => PostSpacesSpaceIdFoldersIdOtherTaxesApplicationJson2File)
  file: PostSpacesSpaceIdFoldersIdOtherTaxesApplicationJson2File;

  @SpeakeasyMetadata()
  @Expose({ name: "Reference" })
  reference?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Title" })
  title: string;
}

export class PostSpacesSpaceIdFoldersIdOtherTaxesApplicationJson1 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Amount" })
  amount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "DeclarationDate" })
  declarationDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DocumentId" })
  documentId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Reference" })
  reference?: string;
}

export class PostSpacesSpaceIdFoldersIdOtherTaxesJsonRequest extends SpeakeasyBase {
  /**
   * Other tax declaration to add (either (Reference,DocumentId) either (File,Name,Content64Encoded,Title,Reference) is mandatory)
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: any;

  /**
   * Id of the folder tax contract
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=spaceId",
  })
  spaceId: string;
}

/**
 * Id of document created
 */
export class PostSpacesSpaceIdFoldersIdOtherTaxesJson201ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;
}

export class PostSpacesSpaceIdFoldersIdOtherTaxesJsonResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Id of document created
   */
  @SpeakeasyMetadata()
  postSpacesSpaceIdFoldersIdOtherTaxesJSON201ApplicationJSONObject?: PostSpacesSpaceIdFoldersIdOtherTaxesJson201ApplicationJSON;
}
