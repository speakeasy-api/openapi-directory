// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateGroupCategoryRequest struct {
	Request shared.GroupCategory `request:"mediaType=application/json"`
}

// CreateGroupCategory200ApplicationJSONActionEnum - The id of the action
type CreateGroupCategory200ApplicationJSONActionEnum string

const (
	CreateGroupCategory200ApplicationJSONActionEnumCreateGroupCategory CreateGroupCategory200ApplicationJSONActionEnum = "CreateGroupCategory"
)

func (e *CreateGroupCategory200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CreateGroupCategory":
		*e = CreateGroupCategory200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateGroupCategory200ApplicationJSONActionEnum: %s", s)
	}
}

type CreateGroupCategory200ApplicationJSONData struct {
	GroupCategories []shared.GroupCategory `json:"groupCategories"`
}

// CreateGroupCategory200ApplicationJSONResultEnum - Result of the request
type CreateGroupCategory200ApplicationJSONResultEnum string

const (
	CreateGroupCategory200ApplicationJSONResultEnumSuccess CreateGroupCategory200ApplicationJSONResultEnum = "success"
	CreateGroupCategory200ApplicationJSONResultEnumError   CreateGroupCategory200ApplicationJSONResultEnum = "error"
)

func (e *CreateGroupCategory200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = CreateGroupCategory200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateGroupCategory200ApplicationJSONResultEnum: %s", s)
	}
}

// CreateGroupCategory200ApplicationJSON - Groups category information
type CreateGroupCategory200ApplicationJSON struct {
	// The id of the action
	Action CreateGroupCategory200ApplicationJSONActionEnum `json:"action"`
	Data   CreateGroupCategory200ApplicationJSONData       `json:"data"`
	// Result of the request
	Result CreateGroupCategory200ApplicationJSONResultEnum `json:"result"`
}

type CreateGroupCategoryResponse struct {
	ContentType string
	// Groups category information
	CreateGroupCategory200ApplicationJSONObject *CreateGroupCategory200ApplicationJSON
	StatusCode                                  int
	RawResponse                                 *http.Response
}
