"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetSchemaResponsesSchemaResponseIDSchemaBlocksSchemaResponseBlockIDRequest:
    
    schema_response_block_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'schema_response_block_id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the Schema Response Block example `61b79f9eadbb5701424a2d5e`."""  
    schema_response_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'schema_response_id', 'style': 'simple', 'explode': False }})
    r"""The unique identifier of the Registration Schema example `6176c9d45e01f100091d4f94`."""  
    
class GetSchemaResponsesSchemaResponseIDSchemaBlocksSchemaResponseBlockIDRegistrationSchemaBlockAttributesBlockTypeEnum(str, Enum):
    r"""A string that represents the type of input that the schema will take and the UI element that appears to the user on the frontend."""
    PAGE_HEADING = 'page-heading'
    SECTION_HEADING = 'section-heading'
    SUBSECTION_HEADING = 'subsection-heading'
    PARAGRAPH = 'paragraph'
    QUESTION_LABEL = 'question-label'
    SHORT_TEXT_INPUT = 'short-text-input'
    LONG_TEXT_INPUT = 'long-text-input'
    FILE_INPUT = 'file-input'
    CONTRIBUTORS_INPUT = 'contributors-input'
    SINGLE_SELECT_INPUT = 'single-select-input'
    MULTI_SELECT_INPUT = 'multi-select-input'
    SELECT_INPUT_OPTION = 'select-input-option'
    SELECT_OTHER_OPTION = 'select-other-option'


@dataclasses.dataclass
class GetSchemaResponsesSchemaResponseIDSchemaBlocksSchemaResponseBlockIDRegistrationSchemaBlockAttributes:
    r"""The attributes of the Registration Schema Block."""
    
    block_type: Optional[GetSchemaResponsesSchemaResponseIDSchemaBlocksSchemaResponseBlockIDRegistrationSchemaBlockAttributesBlockTypeEnum] = dataclasses.field(default=None)
    r"""A string that represents the type of input that the schema will take and the UI element that appears to the user on the frontend."""  
    display_text: Optional[str] = dataclasses.field(default=None)
    r"""The text that will accompany the UI element displayed on this Registration Schema Block."""  
    example_text: Optional[str] = dataclasses.field(default=None)
    r"""The text that will accompany the UI element displayed on this Registration Schema Block."""  
    index: Optional[int] = dataclasses.field(default=None)
    r"""Integer beginning at zero that represents the order of Registration Schema Block in the Registration Schema."""  
    registration_response_key: Optional[str] = dataclasses.field(default=None)
    r"""This string is the the block key for the Registration Schema Block's corresponding block on the Schema Response."""  
    required: Optional[bool] = dataclasses.field(default=None)
    r"""Bool that represents if this field is required for creation of a Schema Response."""  
    schema_block_group_key: Optional[str] = dataclasses.field(default=None)
    r"""This string indicates if a block is part of a block group, block groups may contain the different options dropdown menu or a group of inputs and display elements that are validated together."""  
    

@dataclasses.dataclass
class GetSchemaResponsesSchemaResponseIDSchemaBlocksSchemaResponseBlockIDRegistrationSchemaBlockLinks:
    r"""URLs to alternative representations of the  Registration Schema Block."""
    
    self_: Optional[str] = dataclasses.field(default=None)
    r"""A link to the detail page for a Registration Schema Block."""  
    

@dataclasses.dataclass
class GetSchemaResponsesSchemaResponseIDSchemaBlocksSchemaResponseBlockIDRegistrationSchemaBlockRelationships:
    r"""Links to other entities or entity collections that have a relationship to the Schema Response Action."""
    
    schema: Optional[str] = dataclasses.field(default=None)
    r"""A link to the schema the the Registration Schema Block is on."""  
    

@dataclasses.dataclass
class GetSchemaResponsesSchemaResponseIDSchemaBlocksSchemaResponseBlockIDRegistrationSchemaBlock:
    r"""OK"""
    
    attributes: Optional[GetSchemaResponsesSchemaResponseIDSchemaBlocksSchemaResponseBlockIDRegistrationSchemaBlockAttributes] = dataclasses.field(default=None)
    r"""The attributes of the Registration Schema Block."""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""The unique identifier of the Registration Schema Block."""  
    links: Optional[GetSchemaResponsesSchemaResponseIDSchemaBlocksSchemaResponseBlockIDRegistrationSchemaBlockLinks] = dataclasses.field(default=None)
    r"""URLs to alternative representations of the  Registration Schema Block."""  
    relationships: Optional[GetSchemaResponsesSchemaResponseIDSchemaBlocksSchemaResponseBlockIDRegistrationSchemaBlockRelationships] = dataclasses.field(default=None)
    r"""Links to other entities or entity collections that have a relationship to the Schema Response Action."""  
    type: Optional[str] = dataclasses.field(default=None)
    r"""The type identifier of the Registration Schema Block (`schema-blocks`)."""  
    

@dataclasses.dataclass
class GetSchemaResponsesSchemaResponseIDSchemaBlocksSchemaResponseBlockIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    