/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IpMapping - Database instance IP Mapping.
 */
public class IpMapping {
    /**
     * The IP address assigned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipAddress")
    public String ipAddress;

    public IpMapping withIpAddress(String ipAddress) {
        this.ipAddress = ipAddress;
        return this;
    }
    
    /**
     * The due time for this IP to be retired in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. This field is only available when the IP is scheduled to be retired.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeToRetire")
    public String timeToRetire;

    public IpMapping withTimeToRetire(String timeToRetire) {
        this.timeToRetire = timeToRetire;
        return this;
    }
    
    /**
     * The type of this IP address. A `PRIMARY` address is a public address that can accept incoming connections. A `PRIVATE` address is a private address that can accept incoming connections. An `OUTGOING` address is the source address of connections originating from the instance, if supported.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public IpMappingTypeEnum type;

    public IpMapping withType(IpMappingTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public IpMapping(){}
}
