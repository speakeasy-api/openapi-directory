/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Key/value pairs to provide settings for this webhook.
 */
export class EnterpriseAdminUpdateGlobalWebhookRequestBodyConfig extends SpeakeasyBase {
  /**
   * The media type used to serialize the payloads. Supported values include `json` and `form`. The default is `form`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "content_type" })
  contentType?: string;

  /**
   * Determines whether the SSL certificate of the host for `url` will be verified when delivering payloads. Supported values include `0` (verification is performed) and `1` (verification is not performed). The default is `0`. **We strongly recommend not setting this to `1` as you are subject to man-in-the-middle and other attacks.**
   */
  @SpeakeasyMetadata()
  @Expose({ name: "insecure_ssl" })
  insecureSsl?: string;

  /**
   * If provided, the `secret` will be used as the `key` to generate the HMAC hex digest value in the [`X-Hub-Signature`](https://docs.github.com/enterprise-server@3.2/webhooks/event-payloads/#delivery-headers) header.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secret" })
  secret?: string;

  /**
   * The URL to which the payloads will be delivered.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}

export class EnterpriseAdminUpdateGlobalWebhookRequestBody extends SpeakeasyBase {
  /**
   * Determines if notifications are sent when the webhook is triggered. Set to `true` to send notifications.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  /**
   * Key/value pairs to provide settings for this webhook.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "config" })
  @Type(() => EnterpriseAdminUpdateGlobalWebhookRequestBodyConfig)
  config?: EnterpriseAdminUpdateGlobalWebhookRequestBodyConfig;

  /**
   * The [events](https://docs.github.com/enterprise-server@3.2/webhooks/event-payloads) that trigger this webhook. A global webhook can be triggered by `user` and `organization` events. Default: `user` and `organization`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "events" })
  events?: string[];
}

export class EnterpriseAdminUpdateGlobalWebhookRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: EnterpriseAdminUpdateGlobalWebhookRequestBody;

  /**
   * This API is under preview and subject to change.
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=accept" })
  accept: string;

  /**
   * The unique identifier of the hook.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=hook_id",
  })
  hookId: number;
}

export class EnterpriseAdminUpdateGlobalWebhookResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  globalHook2?: shared.GlobalHook2;
}
