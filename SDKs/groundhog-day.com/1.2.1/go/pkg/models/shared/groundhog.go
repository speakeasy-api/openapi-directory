// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GroundhogActiveEnum string

const (
	GroundhogActiveEnumZero GroundhogActiveEnum = "0"
	GroundhogActiveEnumOne  GroundhogActiveEnum = "1"
)

func (e *GroundhogActiveEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "0":
		fallthrough
	case "1":
		*e = GroundhogActiveEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GroundhogActiveEnum: %s", s)
	}
}

// Groundhog - An animal that makes an annual prediction on Groundhog Day.
type Groundhog struct {
	Active            GroundhogActiveEnum `json:"active"`
	City              string              `json:"city"`
	Contact           string              `json:"contact"`
	Coordinates       string              `json:"coordinates"`
	Country           string              `json:"country"`
	CurrentPrediction string              `json:"currentPrediction"`
	Description       string              `json:"description"`
	ID                int64               `json:"id"`
	Image             string              `json:"image"`
	IsGroundhog       int64               `json:"isGroundhog"`
	Name              string              `json:"name"`
	Predictions       []Prediction        `json:"predictions,omitempty"`
	// All predictions, excluding nulls.
	PredictionsCount *int64 `json:"predictionsCount,omitempty"`
	Region           string `json:"region"`
	Shortname        string `json:"shortname"`
	Slug             string `json:"slug"`
	Source           string `json:"source"`
	Type             string `json:"type"`
}
