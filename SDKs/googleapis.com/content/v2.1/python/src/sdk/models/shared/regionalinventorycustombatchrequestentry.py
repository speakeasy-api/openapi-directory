"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import regionalinventory as shared_regionalinventory
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RegionalinventoryCustomBatchRequestEntry:
    r"""A batch entry encoding a single non-batch regional inventory request."""
    
    batch_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batchId'), 'exclude': lambda f: f is None }})
    r"""An entry ID, unique within the batch request."""  
    merchant_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merchantId'), 'exclude': lambda f: f is None }})
    r"""The ID of the managing account."""  
    method: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('method'), 'exclude': lambda f: f is None }})
    r"""Method of the batch request entry. Acceptable values are: - \\"`insert`\\" """  
    product_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productId'), 'exclude': lambda f: f is None }})
    r"""The ID of the product for which to update price and availability."""  
    regional_inventory: Optional[shared_regionalinventory.RegionalInventory] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('regionalInventory'), 'exclude': lambda f: f is None }})
    r"""Regional inventory resource. contains the regional name and all attributes which are overridden for the specified region."""  
    