/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BranchProtection } from "./branchprotection";
import { Commit } from "./commit";
import { Expose, Type } from "class-transformer";

export class BranchWithProtectionLinks extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "html" })
  html: string;

  @SpeakeasyMetadata()
  @Expose({ name: "self" })
  self: string;
}

/**
 * Branch With Protection
 */
export class BranchWithProtection extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "_links" })
  @Type(() => BranchWithProtectionLinks)
  links: BranchWithProtectionLinks;

  /**
   * Commit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "commit" })
  @Type(() => Commit)
  commit: Commit;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pattern" })
  pattern?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "protected" })
  protected: boolean;

  /**
   * Branch Protection
   */
  @SpeakeasyMetadata()
  @Expose({ name: "protection" })
  @Type(() => BranchProtection)
  protection: BranchProtection;

  @SpeakeasyMetadata()
  @Expose({ name: "protection_url" })
  protectionUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "required_approving_review_count" })
  requiredApprovingReviewCount?: number;
}
