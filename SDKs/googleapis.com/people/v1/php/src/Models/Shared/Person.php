<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Person - Information about a person merged from various data sources such as the authenticated user's contacts and profile data. Most fields can have multiple items. The items in a field have no guaranteed order, but each non-empty field is guaranteed to have exactly one field with `metadata.primary` set to true.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Person
{
    /**
     * The person's street addresses.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Address> $addresses
     */
	#[\JMS\Serializer\Annotation\SerializedName('addresses')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Address>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $addresses = null;
    
    /**
     * Output only. **DEPRECATED** (Please use `person.ageRanges` instead) The person's age range.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PersonAgeRangeEnum $ageRange
     */
	#[\JMS\Serializer\Annotation\SerializedName('ageRange')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PersonAgeRangeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PersonAgeRangeEnum $ageRange = null;
    
    /**
     * Output only. The person's age ranges.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AgeRangeType> $ageRanges
     */
	#[\JMS\Serializer\Annotation\SerializedName('ageRanges')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\AgeRangeType>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $ageRanges = null;
    
    /**
     * The person's biographies. This field is a singleton for contact sources.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Biography> $biographies
     */
	#[\JMS\Serializer\Annotation\SerializedName('biographies')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Biography>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $biographies = null;
    
    /**
     * The person's birthdays. This field is a singleton for contact sources.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Birthday> $birthdays
     */
	#[\JMS\Serializer\Annotation\SerializedName('birthdays')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Birthday>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $birthdays = null;
    
    /**
     * **DEPRECATED**: No data will be returned The person's bragging rights.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\BraggingRights> $braggingRights
     */
	#[\JMS\Serializer\Annotation\SerializedName('braggingRights')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\BraggingRights>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $braggingRights = null;
    
    /**
     * The person's calendar URLs.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CalendarUrl> $calendarUrls
     */
	#[\JMS\Serializer\Annotation\SerializedName('calendarUrls')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CalendarUrl>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $calendarUrls = null;
    
    /**
     * The person's client data.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ClientData> $clientData
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientData')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ClientData>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $clientData = null;
    
    /**
     * Output only. The person's cover photos.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\CoverPhoto> $coverPhotos
     */
	#[\JMS\Serializer\Annotation\SerializedName('coverPhotos')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\CoverPhoto>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $coverPhotos = null;
    
    /**
     * The person's email addresses. For `people.connections.list` and `otherContacts.list` the number of email addresses is limited to 100. If a Person has more email addresses the entire set can be obtained by calling GetPeople.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EmailAddress> $emailAddresses
     */
	#[\JMS\Serializer\Annotation\SerializedName('emailAddresses')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\EmailAddress>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $emailAddresses = null;
    
    /**
     * The [HTTP entity tag](https://en.wikipedia.org/wiki/HTTP_ETag) of the resource. Used for web cache validation.
     * 
     * @var ?string $etag
     */
	#[\JMS\Serializer\Annotation\SerializedName('etag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $etag = null;
    
    /**
     * The person's events.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Event> $events
     */
	#[\JMS\Serializer\Annotation\SerializedName('events')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Event>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $events = null;
    
    /**
     * The person's external IDs.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ExternalId> $externalIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('externalIds')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ExternalId>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $externalIds = null;
    
    /**
     * The person's file-ases.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\FileAs> $fileAses
     */
	#[\JMS\Serializer\Annotation\SerializedName('fileAses')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\FileAs>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fileAses = null;
    
    /**
     * The person's genders. This field is a singleton for contact sources.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Gender> $genders
     */
	#[\JMS\Serializer\Annotation\SerializedName('genders')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Gender>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $genders = null;
    
    /**
     * The person's instant messaging clients.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ImClient> $imClients
     */
	#[\JMS\Serializer\Annotation\SerializedName('imClients')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ImClient>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $imClients = null;
    
    /**
     * The person's interests.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Interest> $interests
     */
	#[\JMS\Serializer\Annotation\SerializedName('interests')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Interest>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $interests = null;
    
    /**
     * The person's locale preferences.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Locale> $locales
     */
	#[\JMS\Serializer\Annotation\SerializedName('locales')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Locale>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $locales = null;
    
    /**
     * The person's locations.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Location> $locations
     */
	#[\JMS\Serializer\Annotation\SerializedName('locations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Location>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $locations = null;
    
    /**
     * The person's group memberships.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Membership> $memberships
     */
	#[\JMS\Serializer\Annotation\SerializedName('memberships')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Membership>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $memberships = null;
    
    /**
     * The metadata about a person.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PersonMetadata $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PersonMetadata')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PersonMetadata $metadata = null;
    
    /**
     * The person's miscellaneous keywords.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\MiscKeyword> $miscKeywords
     */
	#[\JMS\Serializer\Annotation\SerializedName('miscKeywords')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\MiscKeyword>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $miscKeywords = null;
    
    /**
     * The person's names. This field is a singleton for contact sources.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Name> $names
     */
	#[\JMS\Serializer\Annotation\SerializedName('names')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Name>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $names = null;
    
    /**
     * The person's nicknames.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Nickname> $nicknames
     */
	#[\JMS\Serializer\Annotation\SerializedName('nicknames')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Nickname>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $nicknames = null;
    
    /**
     * The person's occupations.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Occupation> $occupations
     */
	#[\JMS\Serializer\Annotation\SerializedName('occupations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Occupation>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $occupations = null;
    
    /**
     * The person's past or current organizations.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Organization> $organizations
     */
	#[\JMS\Serializer\Annotation\SerializedName('organizations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Organization>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $organizations = null;
    
    /**
     * The person's phone numbers. For `people.connections.list` and `otherContacts.list` the number of phone numbers is limited to 100. If a Person has more phone numbers the entire set can be obtained by calling GetPeople.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PhoneNumber> $phoneNumbers
     */
	#[\JMS\Serializer\Annotation\SerializedName('phoneNumbers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PhoneNumber>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $phoneNumbers = null;
    
    /**
     * Output only. The person's photos.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Photo> $photos
     */
	#[\JMS\Serializer\Annotation\SerializedName('photos')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Photo>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $photos = null;
    
    /**
     * The person's relations.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Relation> $relations
     */
	#[\JMS\Serializer\Annotation\SerializedName('relations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Relation>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $relations = null;
    
    /**
     * Output only. **DEPRECATED**: No data will be returned The person's relationship interests.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\RelationshipInterest> $relationshipInterests
     */
	#[\JMS\Serializer\Annotation\SerializedName('relationshipInterests')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\RelationshipInterest>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $relationshipInterests = null;
    
    /**
     * Output only. **DEPRECATED**: No data will be returned The person's relationship statuses.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\RelationshipStatus> $relationshipStatuses
     */
	#[\JMS\Serializer\Annotation\SerializedName('relationshipStatuses')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\RelationshipStatus>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $relationshipStatuses = null;
    
    /**
     * **DEPRECATED**: (Please use `person.locations` instead) The person's residences.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Residence> $residences
     */
	#[\JMS\Serializer\Annotation\SerializedName('residences')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Residence>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $residences = null;
    
    /**
     * The resource name for the person, assigned by the server. An ASCII string in the form of `people/{person_id}`.
     * 
     * @var ?string $resourceName
     */
	#[\JMS\Serializer\Annotation\SerializedName('resourceName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $resourceName = null;
    
    /**
     * The person's SIP addresses.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SipAddress> $sipAddresses
     */
	#[\JMS\Serializer\Annotation\SerializedName('sipAddresses')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SipAddress>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $sipAddresses = null;
    
    /**
     * The person's skills.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Skill> $skills
     */
	#[\JMS\Serializer\Annotation\SerializedName('skills')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Skill>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $skills = null;
    
    /**
     * Output only. **DEPRECATED**: No data will be returned The person's taglines.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Tagline> $taglines
     */
	#[\JMS\Serializer\Annotation\SerializedName('taglines')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Tagline>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $taglines = null;
    
    /**
     * The person's associated URLs.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Url> $urls
     */
	#[\JMS\Serializer\Annotation\SerializedName('urls')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Url>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $urls = null;
    
    /**
     * The person's user defined data.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\UserDefined> $userDefined
     */
	#[\JMS\Serializer\Annotation\SerializedName('userDefined')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\UserDefined>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $userDefined = null;
    
	public function __construct()
	{
		$this->addresses = null;
		$this->ageRange = null;
		$this->ageRanges = null;
		$this->biographies = null;
		$this->birthdays = null;
		$this->braggingRights = null;
		$this->calendarUrls = null;
		$this->clientData = null;
		$this->coverPhotos = null;
		$this->emailAddresses = null;
		$this->etag = null;
		$this->events = null;
		$this->externalIds = null;
		$this->fileAses = null;
		$this->genders = null;
		$this->imClients = null;
		$this->interests = null;
		$this->locales = null;
		$this->locations = null;
		$this->memberships = null;
		$this->metadata = null;
		$this->miscKeywords = null;
		$this->names = null;
		$this->nicknames = null;
		$this->occupations = null;
		$this->organizations = null;
		$this->phoneNumbers = null;
		$this->photos = null;
		$this->relations = null;
		$this->relationshipInterests = null;
		$this->relationshipStatuses = null;
		$this->residences = null;
		$this->resourceName = null;
		$this->sipAddresses = null;
		$this->skills = null;
		$this->taglines = null;
		$this->urls = null;
		$this->userDefined = null;
	}
}
