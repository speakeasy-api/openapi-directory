<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BetweenFilter - To express that the result needs to be between two numbers (inclusive).
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BetweenFilter
{
    /**
     * To represent a number.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NumericValue $fromValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('fromValue')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NumericValue')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NumericValue $fromValue = null;
    
    /**
     * To represent a number.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\NumericValue $toValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('toValue')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NumericValue')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?NumericValue $toValue = null;
    
	public function __construct()
	{
		$this->fromValue = null;
		$this->toValue = null;
	}
}
