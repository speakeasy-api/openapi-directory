/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataDestination } from "./datadestination";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeForecastExportJobResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Destination" })
  @Type(() => DataDestination)
  destination?: DataDestination;

  @SpeakeasyMetadata()
  @Expose({ name: "ForecastArn" })
  forecastArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ForecastExportJobArn" })
  forecastExportJobArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ForecastExportJobName" })
  forecastExportJobName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Format" })
  format?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModificationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModificationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: string;
}
