// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ExecStepConfigInterpreterEnum - The script interpreter to use to run the script. If no interpreter is specified the script will be executed directly, which will likely only succeed for scripts with [shebang lines] (https://en.wikipedia.org/wiki/Shebang_\(Unix\)).
type ExecStepConfigInterpreterEnum string

const (
	ExecStepConfigInterpreterEnumInterpreterUnspecified ExecStepConfigInterpreterEnum = "INTERPRETER_UNSPECIFIED"
	ExecStepConfigInterpreterEnumNone                   ExecStepConfigInterpreterEnum = "NONE"
	ExecStepConfigInterpreterEnumShell                  ExecStepConfigInterpreterEnum = "SHELL"
	ExecStepConfigInterpreterEnumPowershell             ExecStepConfigInterpreterEnum = "POWERSHELL"
)

func (e *ExecStepConfigInterpreterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INTERPRETER_UNSPECIFIED":
		fallthrough
	case "NONE":
		fallthrough
	case "SHELL":
		fallthrough
	case "POWERSHELL":
		*e = ExecStepConfigInterpreterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExecStepConfigInterpreterEnum: %s", s)
	}
}

// ExecStepConfig - Common configurations for an ExecStep.
type ExecStepConfig struct {
	// Defaults to [0]. A list of possible return values that the execution can return to indicate a success.
	AllowedSuccessCodes []int `json:"allowedSuccessCodes,omitempty"`
	// Google Cloud Storage object representation.
	GcsObject *GcsObject `json:"gcsObject,omitempty"`
	// The script interpreter to use to run the script. If no interpreter is specified the script will be executed directly, which will likely only succeed for scripts with [shebang lines] (https://en.wikipedia.org/wiki/Shebang_\(Unix\)).
	Interpreter *ExecStepConfigInterpreterEnum `json:"interpreter,omitempty"`
	// An absolute path to the executable on the VM.
	LocalPath *string `json:"localPath,omitempty"`
}
