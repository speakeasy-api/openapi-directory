/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Read-replica configuration specific to MySQL databases.
 */
export class MySqlReplicaConfiguration extends SpeakeasyBase {
  /**
   * PEM representation of the trusted CA's x509 certificate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "caCertificate" })
  caCertificate?: string;

  /**
   * PEM representation of the replica's x509 certificate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientCertificate" })
  clientCertificate?: string;

  /**
   * PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "clientKey" })
  clientKey?: string;

  /**
   * Seconds to wait between connect retries. MySQL's default is 60 seconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connectRetryInterval" })
  connectRetryInterval?: number;

  /**
   * Path to a SQL dump file in Google Cloud Storage from which the replica instance is to be created. The URI is in the form gs://bucketName/fileName. Compressed gzip files (.gz) are also supported. Dumps have the binlog co-ordinates from which replication begins. This can be accomplished by setting --master-data to 1 when using mysqldump.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dumpFilePath" })
  dumpFilePath?: string;

  /**
   * This is always `sql#mysqlReplicaConfiguration`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Interval in milliseconds between replication heartbeats.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "masterHeartbeatPeriod" })
  masterHeartbeatPeriod?: string;

  /**
   * The password for the replication connection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password?: string;

  /**
   * A list of permissible ciphers to use for SSL encryption.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sslCipher" })
  sslCipher?: string;

  /**
   * The username for the replication connection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username?: string;

  /**
   * Whether or not to check the primary instance's Common Name value in the certificate that it sends during the SSL handshake.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "verifyServerCertificate" })
  verifyServerCertificate?: boolean;
}
