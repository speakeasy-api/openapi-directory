<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class PaymentInput
{
	#[\JMS\Serializer\Annotation\SerializedName('account')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LinkedLedgerAccountInput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LinkedLedgerAccountInput $account = null;
    
    /**
     * Unique identifier for the account to allocate payment to.
     * 
     * @var ?string $accountsReceivableAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('accounts_receivable_account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountsReceivableAccountId = null;
    
    /**
     * Type of accounts receivable account.
     * 
     * @var ?string $accountsReceivableAccountType
     */
	#[\JMS\Serializer\Annotation\SerializedName('accounts_receivable_account_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountsReceivableAccountType = null;
    
    /**
     * $allocations
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PaymentAllocationsInput> $allocations
     */
	#[\JMS\Serializer\Annotation\SerializedName('allocations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PaymentAllocationsInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $allocations = null;
    
    /**
     * Indicates the associated currency for an amount of money. Values correspond to [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CurrencyEnum $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CurrencyEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CurrencyEnum $currency = null;
    
    /**
     * Currency Exchange Rate at the time entity was recorded/generated.
     * 
     * @var ?float $currencyRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency_rate')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $currencyRate = null;
    
    /**
     * The customer this entity is linked to.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LinkedCustomerInput $customer
     */
	#[\JMS\Serializer\Annotation\SerializedName('customer')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LinkedCustomerInput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LinkedCustomerInput $customer = null;
    
    /**
     * Payment id to be displayed.
     * 
     * @var ?string $displayId
     */
	#[\JMS\Serializer\Annotation\SerializedName('display_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayId = null;
    
    /**
     * Optional note to be associated with the payment.
     * 
     * @var ?string $note
     */
	#[\JMS\Serializer\Annotation\SerializedName('note')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $note = null;
    
    /**
     * Payment method name
     * 
     * @var ?string $paymentMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('payment_method')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentMethod = null;
    
    /**
     * Unique identifier for the payment method.
     * 
     * @var ?string $paymentMethodId
     */
	#[\JMS\Serializer\Annotation\SerializedName('payment_method_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentMethodId = null;
    
    /**
     * Optional reference message returned by payment method on processing
     * 
     * @var ?string $paymentMethodReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('payment_method_reference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentMethodReference = null;
    
    /**
     * Payment has been reconciled
     * 
     * @var ?bool $reconciled
     */
	#[\JMS\Serializer\Annotation\SerializedName('reconciled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $reconciled = null;
    
    /**
     * Optional payment reference message ie: Debit remittance detail.
     * 
     * @var ?string $reference
     */
	#[\JMS\Serializer\Annotation\SerializedName('reference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reference = null;
    
    /**
     * A binary value used to detect updates to a object and prevent data conflicts. It is incremented each time an update is made to the object.
     * 
     * @var ?string $rowVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('row_version')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rowVersion = null;
    
    /**
     * Status of payment
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PaymentPaymentStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PaymentPaymentStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PaymentPaymentStatusEnum $status = null;
    
    /**
     * The supplier this entity is linked to.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LinkedSupplierInput $supplier
     */
	#[\JMS\Serializer\Annotation\SerializedName('supplier')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LinkedSupplierInput')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LinkedSupplierInput $supplier = null;
    
    /**
     * Amount of payment
     * 
     * @var float $totalAmount
     */
	#[\JMS\Serializer\Annotation\SerializedName('total_amount')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $totalAmount;
    
    /**
     * Date transaction was entered - YYYY:MM::DDThh:mm:ss.sTZD
     * 
     * @var \DateTime $transactionDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('transaction_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $transactionDate;
    
    /**
     * Type of payment
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PaymentPaymentTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PaymentPaymentTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PaymentPaymentTypeEnum $type = null;
    
	public function __construct()
	{
		$this->account = null;
		$this->accountsReceivableAccountId = null;
		$this->accountsReceivableAccountType = null;
		$this->allocations = null;
		$this->currency = null;
		$this->currencyRate = null;
		$this->customer = null;
		$this->displayId = null;
		$this->note = null;
		$this->paymentMethod = null;
		$this->paymentMethodId = null;
		$this->paymentMethodReference = null;
		$this->reconciled = null;
		$this->reference = null;
		$this->rowVersion = null;
		$this->status = null;
		$this->supplier = null;
		$this->totalAmount = 0;
		$this->transactionDate = new \DateTime();
		$this->type = null;
	}
}
