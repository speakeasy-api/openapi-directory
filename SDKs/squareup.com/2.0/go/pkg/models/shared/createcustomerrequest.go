// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// CreateCustomerRequest - Defines the body parameters that can be included in a request to the
// `CreateCustomer` endpoint.
type CreateCustomerRequest struct {
	// Represents a postal address in a country. The address format is based
	// on an [open-source library from Google](https://github.com/google/libaddressinput). For more information,
	// see [AddressValidationMetadata](https://github.com/google/libaddressinput/wiki/AddressValidationMetadata).
	// This format has dedicated fields for four address components: postal code,
	// locality (city), administrative district (state, prefecture, or province), and
	// sublocality (town or village). These components have dedicated fields in the
	// `Address` object because software sometimes behaves differently based on them.
	// For example, sales tax software may charge different amounts of sales tax
	// based on the postal code, and some software is only available in
	// certain states due to compliance reasons.
	//
	// For the remaining address components, the `Address` type provides the
	// `address_line_1` and `address_line_2` fields for free-form data entry.
	// These fields are free-form because the remaining address components have
	// too many variations around the world and typical software does not parse
	// these components. These fields enable users to enter anything they want.
	//
	// Note that, in the current implementation, all other `Address` type fields are blank.
	// These include `address_line_3`, `sublocality_2`, `sublocality_3`,
	// `administrative_district_level_2`, `administrative_district_level_3`,
	// `first_name`, `last_name`, and `organization`.
	//
	// When it comes to localization, the seller's language preferences
	// (see [Language preferences](https://developer.squareup.com/docs/locations-api#location-specific-and-seller-level-language-preferences))
	// are ignored for addresses. Even though Square products (such as Square Point of Sale
	// and the Seller Dashboard) mostly use a seller's language preference in
	// communication, when it comes to addresses, they will use English for a US address,
	// Japanese for an address in Japan, and so on.
	Address *Address `json:"address,omitempty"`
	// The birthday associated with the customer profile, in RFC 3339 format. The year is optional. The timezone and time are not allowed.
	// For example, `0000-09-21T00:00:00-00:00` represents a birthday on September 21 and `1998-09-21T00:00:00-00:00` represents a birthday on September 21, 1998.
	// You can also specify this value in `YYYY-MM-DD` format.
	Birthday *string `json:"birthday,omitempty"`
	// A business name associated with the customer profile.
	CompanyName *string `json:"company_name,omitempty"`
	// The email address associated with the customer profile.
	EmailAddress *string `json:"email_address,omitempty"`
	// The family name (that is, the last name) associated with the customer profile.
	FamilyName *string `json:"family_name,omitempty"`
	// The given name (that is, the first name) associated with the customer profile.
	GivenName *string `json:"given_name,omitempty"`
	// The idempotency key for the request.	For more information, see
	// [Idempotency](https://developer.squareup.com/docs/working-with-apis/idempotency).
	IdempotencyKey *string `json:"idempotency_key,omitempty"`
	// A nickname for the customer profile.
	Nickname *string `json:"nickname,omitempty"`
	// A custom note associated with the customer profile.
	Note *string `json:"note,omitempty"`
	// The 11-digit phone number associated with the customer profile.
	PhoneNumber *string `json:"phone_number,omitempty"`
	// An optional second ID used to associate the customer profile with an
	// entity in another system.
	ReferenceID *string `json:"reference_id,omitempty"`
}
