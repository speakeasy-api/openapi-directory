/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProviderTypeEnum } from "./providertypeenum";
import { RepositoryAssociationStateEnum } from "./repositoryassociationstateenum";
import { Expose, Transform } from "class-transformer";

/**
 * Summary information about a repository association. The <a href="https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html">ListRepositoryAssociations</a> operation returns a list of <code>RepositoryAssociationSummary</code> objects.
 */
export class RepositoryAssociationSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AssociationArn" })
  associationArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AssociationId" })
  associationId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ConnectionArn" })
  connectionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedTimeStamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTimeStamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Owner" })
  owner?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProviderType" })
  providerType?: ProviderTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: RepositoryAssociationStateEnum;
}
