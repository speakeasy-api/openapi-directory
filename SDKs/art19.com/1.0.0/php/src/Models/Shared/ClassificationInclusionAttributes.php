<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class ClassificationInclusionAttributes
{
    /**
     * This will be replaced by the relationship `classification` in a future update.<br/>
     * 
     * The ID of the classification linked to the entity
     * 
     * 
     * @var ?string $classificationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('classification_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $classificationId = null;
    
    /**
     * This will be replaced by the relationship `classification` in a future update.<br/>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ClassificationInclusionAttributesClassificationTypeEnum $classificationType
     */
	#[\JMS\Serializer\Annotation\SerializedName('classification_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ClassificationInclusionAttributesClassificationTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ClassificationInclusionAttributesClassificationTypeEnum $classificationType = null;
    
    /**
     * This will be replaced by the relationship `classified` in a future update.<br/>
     * 
     * The ID of the entity linked to the classification
     * 
     * 
     * @var ?string $classifiedId
     */
	#[\JMS\Serializer\Annotation\SerializedName('classified_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $classifiedId = null;
    
    /**
     * This will be replaced by the relationship `classified` in a future update.<br/>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ClassificationInclusionAttributesClassifiedTypeEnum $classifiedType
     */
	#[\JMS\Serializer\Annotation\SerializedName('classified_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ClassificationInclusionAttributesClassifiedTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ClassificationInclusionAttributesClassifiedTypeEnum $classifiedType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
    /**
     * The position or order of the linked classification within the classified resource
     * 
     * @var ?int $position
     */
	#[\JMS\Serializer\Annotation\SerializedName('position')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $position = null;
    
    /**
     * When `true` it describes the best classification of a specific type for a given
     * 
     * classified item
     * 
     * 
     * @var ?bool $primary
     */
	#[\JMS\Serializer\Annotation\SerializedName('primary')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $primary = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedAt = null;
    
	public function __construct()
	{
		$this->classificationId = null;
		$this->classificationType = null;
		$this->classifiedId = null;
		$this->classifiedType = null;
		$this->createdAt = null;
		$this->position = null;
		$this->primary = null;
		$this->updatedAt = null;
	}
}
