/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * PodcastEpisode model
 */
export class PodcastEpisode extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "author" })
  author?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "block" })
  block?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "episode" })
  episode?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "episodeType" })
  episodeType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "explicit" })
  explicit?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "fileUrl" })
  fileUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "image" })
  image?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "publishDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  publishDate: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "season" })
  season?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "subtitle" })
  subtitle?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "summary" })
  summary: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title: string;
}
