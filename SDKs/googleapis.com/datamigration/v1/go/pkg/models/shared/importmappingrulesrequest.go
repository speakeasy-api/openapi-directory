// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ImportMappingRulesRequestRulesFormatEnum - The format of the rules content file.
type ImportMappingRulesRequestRulesFormatEnum string

const (
	ImportMappingRulesRequestRulesFormatEnumImportRulesFileFormatUnspecified              ImportMappingRulesRequestRulesFormatEnum = "IMPORT_RULES_FILE_FORMAT_UNSPECIFIED"
	ImportMappingRulesRequestRulesFormatEnumImportRulesFileFormatHarbourBridgeSessionFile ImportMappingRulesRequestRulesFormatEnum = "IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE"
	ImportMappingRulesRequestRulesFormatEnumImportRulesFileFormatOratopgConfigFile        ImportMappingRulesRequestRulesFormatEnum = "IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE"
)

func (e ImportMappingRulesRequestRulesFormatEnum) ToPointer() *ImportMappingRulesRequestRulesFormatEnum {
	return &e
}

func (e *ImportMappingRulesRequestRulesFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IMPORT_RULES_FILE_FORMAT_UNSPECIFIED":
		fallthrough
	case "IMPORT_RULES_FILE_FORMAT_HARBOUR_BRIDGE_SESSION_FILE":
		fallthrough
	case "IMPORT_RULES_FILE_FORMAT_ORATOPG_CONFIG_FILE":
		*e = ImportMappingRulesRequestRulesFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ImportMappingRulesRequestRulesFormatEnum: %v", v)
	}
}

// ImportMappingRulesRequest - Request message for 'ImportMappingRules' request.
type ImportMappingRulesRequest struct {
	// Should the conversion workspace be committed automatically after the import operation.
	AutoCommit *bool `json:"autoCommit,omitempty"`
	// One or more rules files.
	RulesFiles []RulesFile `json:"rulesFiles,omitempty"`
	// The format of the rules content file.
	RulesFormat *ImportMappingRulesRequestRulesFormatEnum `json:"rulesFormat,omitempty"`
}
