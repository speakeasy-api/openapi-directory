/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetExamplesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  bearerToken: string;
}

/**
 * return examples that were created in the dataset as feedback
 */
export enum GetExamplesSourceEnum {
  All = "all",
  Feedback = "feedback",
  Upload = "upload",
}

export class GetExamplesRequest extends SpeakeasyBase {
  /**
   * Number of examples to return.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=count" })
  count?: string;

  /**
   * Dataset Id
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=datasetId",
  })
  datasetId: string;

  /**
   * Index of the example from which you want to start paging.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=offset",
  })
  offset?: string;

  /**
   * return examples that were created in the dataset as feedback
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=source",
  })
  source?: GetExamplesSourceEnum;
}

export class GetExamplesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  exampleList?: shared.ExampleList;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
