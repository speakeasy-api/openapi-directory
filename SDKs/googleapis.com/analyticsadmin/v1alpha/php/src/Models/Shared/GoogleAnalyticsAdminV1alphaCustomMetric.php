<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleAnalyticsAdminV1alphaCustomMetric - A definition for a custom metric.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleAnalyticsAdminV1alphaCustomMetric
{
    /**
     * Optional. Description for this custom dimension. Max length of 150 characters.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Required. Display name for this custom metric as shown in the Analytics UI. Max length of 82 characters, alphanumeric plus space and underscore starting with a letter. Legacy system-generated display names may contain square brackets, but updates to this field will never permit square brackets.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * Required. The type for the custom metric's value.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAnalyticsAdminV1alphaCustomMetricMeasurementUnitEnum $measurementUnit
     */
	#[\JMS\Serializer\Annotation\SerializedName('measurementUnit')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleAnalyticsAdminV1alphaCustomMetricMeasurementUnitEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAnalyticsAdminV1alphaCustomMetricMeasurementUnitEnum $measurementUnit = null;
    
    /**
     * Output only. Resource name for this CustomMetric resource. Format: properties/{property}/customMetrics/{customMetric}
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Required. Immutable. Tagging name for this custom metric. If this is an event-scoped metric, then this is the event parameter name. May only contain alphanumeric and underscore charactes, starting with a letter. Max length of 40 characters for event-scoped metrics.
     * 
     * @var ?string $parameterName
     */
	#[\JMS\Serializer\Annotation\SerializedName('parameterName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $parameterName = null;
    
    /**
     * Optional. Types of restricted data that this metric may contain. Required for metrics with CURRENCY measurement unit. Must be empty for metrics with a non-CURRENCY measurement unit.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GoogleAnalyticsAdminV1alphaCustomMetricRestrictedMetricTypeEnum> $restrictedMetricType
     */
	#[\JMS\Serializer\Annotation\SerializedName('restrictedMetricType')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\GoogleAnalyticsAdminV1alphaCustomMetricRestrictedMetricTypeEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $restrictedMetricType = null;
    
    /**
     * Required. Immutable. The scope of this custom metric.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleAnalyticsAdminV1alphaCustomMetricScopeEnum $scope
     */
	#[\JMS\Serializer\Annotation\SerializedName('scope')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\GoogleAnalyticsAdminV1alphaCustomMetricScopeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleAnalyticsAdminV1alphaCustomMetricScopeEnum $scope = null;
    
	public function __construct()
	{
		$this->description = null;
		$this->displayName = null;
		$this->measurementUnit = null;
		$this->name = null;
		$this->parameterName = null;
		$this->restrictedMetricType = null;
		$this->scope = null;
	}
}
