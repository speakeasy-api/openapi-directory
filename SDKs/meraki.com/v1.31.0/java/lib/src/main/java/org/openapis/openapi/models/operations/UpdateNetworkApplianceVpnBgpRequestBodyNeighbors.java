/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateNetworkApplianceVpnBgpRequestBodyNeighbors {
    /**
     * When this feature is on, the Meraki device will advertise routes learned from other Autonomous Systems, thereby allowing traffic between Autonomous Systems to transit this AS. When absent, it defaults to false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowTransit")
    public Boolean allowTransit;
    public UpdateNetworkApplianceVpnBgpRequestBodyNeighbors withAllowTransit(Boolean allowTransit) {
        this.allowTransit = allowTransit;
        return this;
    }
    
    /**
     * The EBGP hold timer in seconds for each neighbor. The EBGP hold timer must be an integer between 12 and 240.
     */
    @JsonProperty("ebgpHoldTimer")
    public Long ebgpHoldTimer;
    public UpdateNetworkApplianceVpnBgpRequestBodyNeighbors withEbgpHoldTimer(Long ebgpHoldTimer) {
        this.ebgpHoldTimer = ebgpHoldTimer;
        return this;
    }
    
    /**
     * Configure this if the neighbor is not adjacent. The EBGP multi-hop must be an integer between 1 and 255.
     */
    @JsonProperty("ebgpMultihop")
    public Long ebgpMultihop;
    public UpdateNetworkApplianceVpnBgpRequestBodyNeighbors withEbgpMultihop(Long ebgpMultihop) {
        this.ebgpMultihop = ebgpMultihop;
        return this;
    }
    
    /**
     * The IPv4 address of the neighbor
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ip")
    public String ip;
    public UpdateNetworkApplianceVpnBgpRequestBodyNeighbors withIp(String ip) {
        this.ip = ip;
        return this;
    }
    
    /**
     * Information regarding IPv6 address of the neighbor, Required if `ip` is not present.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipv6")
    public UpdateNetworkApplianceVpnBgpRequestBodyNeighborsIpv6 ipv6;
    public UpdateNetworkApplianceVpnBgpRequestBodyNeighbors withIpv6(UpdateNetworkApplianceVpnBgpRequestBodyNeighborsIpv6 ipv6) {
        this.ipv6 = ipv6;
        return this;
    }
    
    /**
     * The receive limit is the maximum number of routes that can be received from any BGP peer. The receive limit must be an integer between 0 and 4294967295. When absent, it defaults to 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("receiveLimit")
    public Long receiveLimit;
    public UpdateNetworkApplianceVpnBgpRequestBodyNeighbors withReceiveLimit(Long receiveLimit) {
        this.receiveLimit = receiveLimit;
        return this;
    }
    
    /**
     * Remote ASN of the neighbor. The remote ASN must be an integer between 1 and 4294967295.
     */
    @JsonProperty("remoteAsNumber")
    public Long remoteAsNumber;
    public UpdateNetworkApplianceVpnBgpRequestBodyNeighbors withRemoteAsNumber(Long remoteAsNumber) {
        this.remoteAsNumber = remoteAsNumber;
        return this;
    }
    
}
