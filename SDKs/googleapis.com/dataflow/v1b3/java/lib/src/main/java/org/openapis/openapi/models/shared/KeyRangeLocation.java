/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * KeyRangeLocation - Location information for a specific key-range of a sharded computation. Currently we only support UTF-8 character splits to simplify encoding into JSON.
 */
public class KeyRangeLocation {
    /**
     * The name of the data disk where data for this range is stored. This name is local to the Google Cloud Platform project and uniquely identifies the disk within that project, for example "myproject-1014-104817-4c2-harness-0-disk-1".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataDisk")
    public String dataDisk;
    public KeyRangeLocation withDataDisk(String dataDisk) {
        this.dataDisk = dataDisk;
        return this;
    }
    
    /**
     * The physical location of this range assignment to be used for streaming computation cross-worker message delivery.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliveryEndpoint")
    public String deliveryEndpoint;
    public KeyRangeLocation withDeliveryEndpoint(String deliveryEndpoint) {
        this.deliveryEndpoint = deliveryEndpoint;
        return this;
    }
    
    /**
     * DEPRECATED. The location of the persistent state for this range, as a persistent directory in the worker local filesystem.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deprecatedPersistentDirectory")
    public String deprecatedPersistentDirectory;
    public KeyRangeLocation withDeprecatedPersistentDirectory(String deprecatedPersistentDirectory) {
        this.deprecatedPersistentDirectory = deprecatedPersistentDirectory;
        return this;
    }
    
    /**
     * The end (exclusive) of the key range.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("end")
    public String end;
    public KeyRangeLocation withEnd(String end) {
        this.end = end;
        return this;
    }
    
    /**
     * The start (inclusive) of the key range.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("start")
    public String start;
    public KeyRangeLocation withStart(String start) {
        this.start = start;
        return this;
    }
    
}
