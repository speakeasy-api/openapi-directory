"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateNetworkSwitchDhcpServerPolicyResponse = exports.UpdateNetworkSwitchDhcpServerPolicyRequest = exports.UpdateNetworkSwitchDhcpServerPolicyRequestBody = exports.UpdateNetworkSwitchDhcpServerPolicyRequestBodyDefaultPolicyEnum = exports.UpdateNetworkSwitchDhcpServerPolicyRequestBodyArpInspection = exports.UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlerts = exports.UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlertsEmail = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * Email alert settings for DHCP servers
 */
var UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlertsEmail = /** @class */ (function (_super) {
    __extends(UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlertsEmail, _super);
    function UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlertsEmail() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlertsEmail.prototype, "enabled", void 0);
    return UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlertsEmail;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlertsEmail = UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlertsEmail;
/**
 * Alert settings for DHCP servers
 */
var UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlerts = /** @class */ (function (_super) {
    __extends(UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlerts, _super);
    function UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlerts() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "email" }),
        (0, class_transformer_1.Type)(function () { return UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlertsEmail; }),
        __metadata("design:type", UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlertsEmail)
    ], UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlerts.prototype, "email", void 0);
    return UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlerts;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlerts = UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlerts;
/**
 * Dynamic ARP Inspection settings
 */
var UpdateNetworkSwitchDhcpServerPolicyRequestBodyArpInspection = /** @class */ (function (_super) {
    __extends(UpdateNetworkSwitchDhcpServerPolicyRequestBodyArpInspection, _super);
    function UpdateNetworkSwitchDhcpServerPolicyRequestBodyArpInspection() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "enabled" }),
        __metadata("design:type", Boolean)
    ], UpdateNetworkSwitchDhcpServerPolicyRequestBodyArpInspection.prototype, "enabled", void 0);
    return UpdateNetworkSwitchDhcpServerPolicyRequestBodyArpInspection;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkSwitchDhcpServerPolicyRequestBodyArpInspection = UpdateNetworkSwitchDhcpServerPolicyRequestBodyArpInspection;
/**
 * 'allow' or 'block' new DHCP servers. Default value is 'allow'.
 */
var UpdateNetworkSwitchDhcpServerPolicyRequestBodyDefaultPolicyEnum;
(function (UpdateNetworkSwitchDhcpServerPolicyRequestBodyDefaultPolicyEnum) {
    UpdateNetworkSwitchDhcpServerPolicyRequestBodyDefaultPolicyEnum["Allow"] = "allow";
    UpdateNetworkSwitchDhcpServerPolicyRequestBodyDefaultPolicyEnum["Block"] = "block";
})(UpdateNetworkSwitchDhcpServerPolicyRequestBodyDefaultPolicyEnum = exports.UpdateNetworkSwitchDhcpServerPolicyRequestBodyDefaultPolicyEnum || (exports.UpdateNetworkSwitchDhcpServerPolicyRequestBodyDefaultPolicyEnum = {}));
var UpdateNetworkSwitchDhcpServerPolicyRequestBody = /** @class */ (function (_super) {
    __extends(UpdateNetworkSwitchDhcpServerPolicyRequestBody, _super);
    function UpdateNetworkSwitchDhcpServerPolicyRequestBody() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "alerts" }),
        (0, class_transformer_1.Type)(function () { return UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlerts; }),
        __metadata("design:type", UpdateNetworkSwitchDhcpServerPolicyRequestBodyAlerts)
    ], UpdateNetworkSwitchDhcpServerPolicyRequestBody.prototype, "alerts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "allowedServers" }),
        __metadata("design:type", Array)
    ], UpdateNetworkSwitchDhcpServerPolicyRequestBody.prototype, "allowedServers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "arpInspection" }),
        (0, class_transformer_1.Type)(function () { return UpdateNetworkSwitchDhcpServerPolicyRequestBodyArpInspection; }),
        __metadata("design:type", UpdateNetworkSwitchDhcpServerPolicyRequestBodyArpInspection)
    ], UpdateNetworkSwitchDhcpServerPolicyRequestBody.prototype, "arpInspection", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "blockedServers" }),
        __metadata("design:type", Array)
    ], UpdateNetworkSwitchDhcpServerPolicyRequestBody.prototype, "blockedServers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "defaultPolicy" }),
        __metadata("design:type", String)
    ], UpdateNetworkSwitchDhcpServerPolicyRequestBody.prototype, "defaultPolicy", void 0);
    return UpdateNetworkSwitchDhcpServerPolicyRequestBody;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkSwitchDhcpServerPolicyRequestBody = UpdateNetworkSwitchDhcpServerPolicyRequestBody;
var UpdateNetworkSwitchDhcpServerPolicyRequest = /** @class */ (function (_super) {
    __extends(UpdateNetworkSwitchDhcpServerPolicyRequest, _super);
    function UpdateNetworkSwitchDhcpServerPolicyRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ data: "request, media_type=application/json" }),
        __metadata("design:type", UpdateNetworkSwitchDhcpServerPolicyRequestBody)
    ], UpdateNetworkSwitchDhcpServerPolicyRequest.prototype, "requestBody", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=networkId",
        }),
        __metadata("design:type", String)
    ], UpdateNetworkSwitchDhcpServerPolicyRequest.prototype, "networkId", void 0);
    return UpdateNetworkSwitchDhcpServerPolicyRequest;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkSwitchDhcpServerPolicyRequest = UpdateNetworkSwitchDhcpServerPolicyRequest;
var UpdateNetworkSwitchDhcpServerPolicyResponse = /** @class */ (function (_super) {
    __extends(UpdateNetworkSwitchDhcpServerPolicyResponse, _super);
    function UpdateNetworkSwitchDhcpServerPolicyResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], UpdateNetworkSwitchDhcpServerPolicyResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], UpdateNetworkSwitchDhcpServerPolicyResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateNetworkSwitchDhcpServerPolicyResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], UpdateNetworkSwitchDhcpServerPolicyResponse.prototype, "updateNetworkSwitchDhcpServerPolicy200ApplicationJSONObject", void 0);
    return UpdateNetworkSwitchDhcpServerPolicyResponse;
}(utils_1.SpeakeasyBase));
exports.UpdateNetworkSwitchDhcpServerPolicyResponse = UpdateNetworkSwitchDhcpServerPolicyResponse;
