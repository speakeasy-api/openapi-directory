/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { QuotaStatus } from "./quotastatus";
import { Expose, Type } from "class-transformer";

/**
 * Current state of all quotas for this Analytics Property. If any quota for a property is exhausted, all requests to that property will return Resource Exhausted errors.
 */
export class PropertyQuota extends SpeakeasyBase {
  /**
   * Current state for a particular quota group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "concurrentRequests" })
  @Type(() => QuotaStatus)
  concurrentRequests?: QuotaStatus;

  /**
   * Current state for a particular quota group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "potentiallyThresholdedRequestsPerHour" })
  @Type(() => QuotaStatus)
  potentiallyThresholdedRequestsPerHour?: QuotaStatus;

  /**
   * Current state for a particular quota group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serverErrorsPerProjectPerHour" })
  @Type(() => QuotaStatus)
  serverErrorsPerProjectPerHour?: QuotaStatus;

  /**
   * Current state for a particular quota group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tokensPerDay" })
  @Type(() => QuotaStatus)
  tokensPerDay?: QuotaStatus;

  /**
   * Current state for a particular quota group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tokensPerHour" })
  @Type(() => QuotaStatus)
  tokensPerHour?: QuotaStatus;

  /**
   * Current state for a particular quota group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tokensPerProjectPerHour" })
  @Type(() => QuotaStatus)
  tokensPerProjectPerHour?: QuotaStatus;
}
