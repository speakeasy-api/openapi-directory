// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeviceInfoDeviceTypeEnum - Optional. Type of the device.
type DeviceInfoDeviceTypeEnum string

const (
	DeviceInfoDeviceTypeEnumDeviceTypeUnspecified DeviceInfoDeviceTypeEnum = "DEVICE_TYPE_UNSPECIFIED"
	DeviceInfoDeviceTypeEnumWeb                   DeviceInfoDeviceTypeEnum = "WEB"
	DeviceInfoDeviceTypeEnumMobileWeb             DeviceInfoDeviceTypeEnum = "MOBILE_WEB"
	DeviceInfoDeviceTypeEnumAndroid               DeviceInfoDeviceTypeEnum = "ANDROID"
	DeviceInfoDeviceTypeEnumIos                   DeviceInfoDeviceTypeEnum = "IOS"
	DeviceInfoDeviceTypeEnumBot                   DeviceInfoDeviceTypeEnum = "BOT"
	DeviceInfoDeviceTypeEnumOther                 DeviceInfoDeviceTypeEnum = "OTHER"
)

func (e *DeviceInfoDeviceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DEVICE_TYPE_UNSPECIFIED":
		fallthrough
	case "WEB":
		fallthrough
	case "MOBILE_WEB":
		fallthrough
	case "ANDROID":
		fallthrough
	case "IOS":
		fallthrough
	case "BOT":
		fallthrough
	case "OTHER":
		*e = DeviceInfoDeviceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeviceInfoDeviceTypeEnum: %s", s)
	}
}

// DeviceInfo - Device information collected from the job seeker, candidate, or other entity conducting the job search. Providing this information improves the quality of the search results across devices.
type DeviceInfo struct {
	// Optional. Type of the device.
	DeviceType *DeviceInfoDeviceTypeEnum `json:"deviceType,omitempty"`
	// Optional. A device-specific ID. The ID must be a unique identifier that distinguishes the device from other devices.
	ID *string `json:"id,omitempty"`
}
