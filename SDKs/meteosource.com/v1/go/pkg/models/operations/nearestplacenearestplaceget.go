// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type NearestPlaceNearestPlaceGetSecurity struct {
	APIKeyHeader string `security:"scheme,type=apiKey,subtype=header,name=X-API-Key"`
}

// NearestPlaceNearestPlaceGetLanguageLanguageEnum - An enumeration.
type NearestPlaceNearestPlaceGetLanguageLanguageEnum string

const (
	NearestPlaceNearestPlaceGetLanguageLanguageEnumCs NearestPlaceNearestPlaceGetLanguageLanguageEnum = "cs"
	NearestPlaceNearestPlaceGetLanguageLanguageEnumEn NearestPlaceNearestPlaceGetLanguageLanguageEnum = "en"
	NearestPlaceNearestPlaceGetLanguageLanguageEnumDe NearestPlaceNearestPlaceGetLanguageLanguageEnum = "de"
	NearestPlaceNearestPlaceGetLanguageLanguageEnumEs NearestPlaceNearestPlaceGetLanguageLanguageEnum = "es"
	NearestPlaceNearestPlaceGetLanguageLanguageEnumFr NearestPlaceNearestPlaceGetLanguageLanguageEnum = "fr"
	NearestPlaceNearestPlaceGetLanguageLanguageEnumPl NearestPlaceNearestPlaceGetLanguageLanguageEnum = "pl"
	NearestPlaceNearestPlaceGetLanguageLanguageEnumPt NearestPlaceNearestPlaceGetLanguageLanguageEnum = "pt"
)

func (e NearestPlaceNearestPlaceGetLanguageLanguageEnum) ToPointer() *NearestPlaceNearestPlaceGetLanguageLanguageEnum {
	return &e
}

func (e *NearestPlaceNearestPlaceGetLanguageLanguageEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "cs":
		fallthrough
	case "en":
		fallthrough
	case "de":
		fallthrough
	case "es":
		fallthrough
	case "fr":
		fallthrough
	case "pl":
		fallthrough
	case "pt":
		*e = NearestPlaceNearestPlaceGetLanguageLanguageEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NearestPlaceNearestPlaceGetLanguageLanguageEnum: %v", v)
	}
}

type NearestPlaceNearestPlaceGetRequest struct {
	// Your unique API key. You can either specify it in this parameter, or set it in `X-API-Key` header.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// The language of text summaries and place names (variable names are never translated). Available languages are:
	//
	//    * ``en``: English
	//    * ``es``: Spanish
	//    * ``fr``: French
	//    * ``de``: German
	//    * ``pl``: Polish
	//    * ``pt``: Portuguese
	//    * ``cs``: Czech
	//
	Language *NearestPlaceNearestPlaceGetLanguageLanguageEnum `queryParam:"style=form,explode=true,name=language"`
	// Latitude in format 12N, 12.3N, 12.3, or 13S, 13.2S, -13.4
	Lat string `queryParam:"style=form,explode=true,name=lat"`
	// Longitude in format 12E, 12.3E, 12.3, or 13W, 13.2W, -13.4
	Lon string `queryParam:"style=form,explode=true,name=lon"`
}

type NearestPlaceNearestPlaceGetResponse struct {
	ContentType string
	// Successful Response
	FindPlacesModel *shared.FindPlacesModel
	// Error in passed parameter.
	GeneralRequestError *shared.GeneralRequestError
	// Validation Error
	HTTPValidationError *shared.HTTPValidationError
	StatusCode          int
	RawResponse         *http.Response
}
