// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DynamicLinkEventStatEventEnum - Link event.
type DynamicLinkEventStatEventEnum string

const (
	DynamicLinkEventStatEventEnumDynamicLinkEventUnspecified DynamicLinkEventStatEventEnum = "DYNAMIC_LINK_EVENT_UNSPECIFIED"
	DynamicLinkEventStatEventEnumClick                       DynamicLinkEventStatEventEnum = "CLICK"
	DynamicLinkEventStatEventEnumRedirect                    DynamicLinkEventStatEventEnum = "REDIRECT"
	DynamicLinkEventStatEventEnumAppInstall                  DynamicLinkEventStatEventEnum = "APP_INSTALL"
	DynamicLinkEventStatEventEnumAppFirstOpen                DynamicLinkEventStatEventEnum = "APP_FIRST_OPEN"
	DynamicLinkEventStatEventEnumAppReOpen                   DynamicLinkEventStatEventEnum = "APP_RE_OPEN"
)

func (e DynamicLinkEventStatEventEnum) ToPointer() *DynamicLinkEventStatEventEnum {
	return &e
}

func (e *DynamicLinkEventStatEventEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DYNAMIC_LINK_EVENT_UNSPECIFIED":
		fallthrough
	case "CLICK":
		fallthrough
	case "REDIRECT":
		fallthrough
	case "APP_INSTALL":
		fallthrough
	case "APP_FIRST_OPEN":
		fallthrough
	case "APP_RE_OPEN":
		*e = DynamicLinkEventStatEventEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DynamicLinkEventStatEventEnum: %v", v)
	}
}

// DynamicLinkEventStatPlatformEnum - Requested platform.
type DynamicLinkEventStatPlatformEnum string

const (
	DynamicLinkEventStatPlatformEnumDynamicLinkPlatformUnspecified DynamicLinkEventStatPlatformEnum = "DYNAMIC_LINK_PLATFORM_UNSPECIFIED"
	DynamicLinkEventStatPlatformEnumAndroid                        DynamicLinkEventStatPlatformEnum = "ANDROID"
	DynamicLinkEventStatPlatformEnumIos                            DynamicLinkEventStatPlatformEnum = "IOS"
	DynamicLinkEventStatPlatformEnumDesktop                        DynamicLinkEventStatPlatformEnum = "DESKTOP"
	DynamicLinkEventStatPlatformEnumOther                          DynamicLinkEventStatPlatformEnum = "OTHER"
)

func (e DynamicLinkEventStatPlatformEnum) ToPointer() *DynamicLinkEventStatPlatformEnum {
	return &e
}

func (e *DynamicLinkEventStatPlatformEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DYNAMIC_LINK_PLATFORM_UNSPECIFIED":
		fallthrough
	case "ANDROID":
		fallthrough
	case "IOS":
		fallthrough
	case "DESKTOP":
		fallthrough
	case "OTHER":
		*e = DynamicLinkEventStatPlatformEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DynamicLinkEventStatPlatformEnum: %v", v)
	}
}

// DynamicLinkEventStat - Dynamic Link event stat.
type DynamicLinkEventStat struct {
	// The number of times this event occurred.
	Count *string `json:"count,omitempty"`
	// Link event.
	Event *DynamicLinkEventStatEventEnum `json:"event,omitempty"`
	// Requested platform.
	Platform *DynamicLinkEventStatPlatformEnum `json:"platform,omitempty"`
}
