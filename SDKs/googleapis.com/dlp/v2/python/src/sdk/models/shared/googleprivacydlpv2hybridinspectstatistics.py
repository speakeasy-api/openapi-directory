"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GooglePrivacyDlpV2HybridInspectStatistics:
    r"""Statistics related to processing hybrid inspect requests."""
    
    aborted_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('abortedCount'), 'exclude': lambda f: f is None }})
    r"""The number of hybrid inspection requests aborted because the job ran out of quota or was ended before they could be processed."""  
    pending_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pendingCount'), 'exclude': lambda f: f is None }})
    r"""The number of hybrid requests currently being processed. Only populated when called via method `getDlpJob`. A burst of traffic may cause hybrid inspect requests to be enqueued. Processing will take place as quickly as possible, but resource limitations may impact how long a request is enqueued for."""  
    processed_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('processedCount'), 'exclude': lambda f: f is None }})
    r"""The number of hybrid inspection requests processed within this job."""  
    