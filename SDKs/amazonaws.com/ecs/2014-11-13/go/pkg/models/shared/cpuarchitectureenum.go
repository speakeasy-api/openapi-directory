// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CPUArchitectureEnum string

const (
	CPUArchitectureEnumX8664 CPUArchitectureEnum = "X86_64"
	CPUArchitectureEnumArm64 CPUArchitectureEnum = "ARM64"
)

func (e CPUArchitectureEnum) ToPointer() *CPUArchitectureEnum {
	return &e
}

func (e *CPUArchitectureEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "X86_64":
		fallthrough
	case "ARM64":
		*e = CPUArchitectureEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CPUArchitectureEnum: %v", v)
	}
}
