/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export class UsersAddonAccountsListRequest extends SpeakeasyBase {
  /**
   * The unique identifier of the addon provider.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=provider",
  })
  provider: string;

  /**
   * The unique identifier of the user.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=user_id",
  })
  userId: string;
}

/**
 * The properties of the addon account entity.
 */
export class UsersAddonAccountsListAddonAccountAttributes extends SpeakeasyBase {
  /**
   * The user's display name on the third-party service
   */
  @SpeakeasyMetadata()
  displayName: string;

  /**
   * The link to user's profile on third-party service
   */
  @SpeakeasyMetadata()
  profileUrl?: string;

  /**
   * The short name of the third-party service
   */
  @SpeakeasyMetadata()
  provider: string;
}

/**
 * URLs to alternative representations of the addon account entity.
 */
export class UsersAddonAccountsListAddonAccountLinks extends SpeakeasyBase {
  /**
   * The canonical api endpoint of this addon account
   */
  @SpeakeasyMetadata()
  self?: string;
}

export class UsersAddonAccountsListAddonAccount extends SpeakeasyBase {
  /**
   * The properties of the addon account entity.
   */
  @SpeakeasyMetadata()
  attributes: UsersAddonAccountsListAddonAccountAttributes;

  /**
   * The unique identifier of the addon account entity.
   */
  @SpeakeasyMetadata()
  id: string;

  /**
   * URLs to alternative representations of the addon account entity.
   */
  @SpeakeasyMetadata()
  links: UsersAddonAccountsListAddonAccountLinks;

  /**
   * The type identifier of the addon account entity (`external_accounts`).
   */
  @SpeakeasyMetadata()
  type: string;
}

export class UsersAddonAccountsListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
