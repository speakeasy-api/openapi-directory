/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AnnotateTextResponse - The text annotations response message.
 */
public class AnnotateTextResponse {
    /**
     * Represents the feeling associated with the entire text or entities in the text.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("documentSentiment")
    public Sentiment documentSentiment;
    public AnnotateTextResponse withDocumentSentiment(Sentiment documentSentiment) {
        this.documentSentiment = documentSentiment;
        return this;
    }
    
    /**
     * Entities, along with their semantic information, in the input document. Populated if the user enables AnnotateTextRequest.Features.extract_entities.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entities")
    public Entity[] entities;
    public AnnotateTextResponse withEntities(Entity[] entities) {
        this.entities = entities;
        return this;
    }
    
    /**
     * The language of the text, which will be the same as the language specified in the request or, if not specified, the automatically-detected language. See Document.language field for more details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("language")
    public String language;
    public AnnotateTextResponse withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    /**
     * Sentences in the input document. Populated if the user enables AnnotateTextRequest.Features.extract_syntax.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sentences")
    public Sentence[] sentences;
    public AnnotateTextResponse withSentences(Sentence[] sentences) {
        this.sentences = sentences;
        return this;
    }
    
    /**
     * Tokens, along with their syntactic information, in the input document. Populated if the user enables AnnotateTextRequest.Features.extract_syntax.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tokens")
    public Token[] tokens;
    public AnnotateTextResponse withTokens(Token[] tokens) {
        this.tokens = tokens;
        return this;
    }
    
}
