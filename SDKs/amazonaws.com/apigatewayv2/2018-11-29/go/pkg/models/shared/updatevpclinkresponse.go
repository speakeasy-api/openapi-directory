// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// UpdateVpcLinkResponseVpcLinkStatusEnum - The status of the VPC link.
type UpdateVpcLinkResponseVpcLinkStatusEnum string

const (
	UpdateVpcLinkResponseVpcLinkStatusEnumPending   UpdateVpcLinkResponseVpcLinkStatusEnum = "PENDING"
	UpdateVpcLinkResponseVpcLinkStatusEnumAvailable UpdateVpcLinkResponseVpcLinkStatusEnum = "AVAILABLE"
	UpdateVpcLinkResponseVpcLinkStatusEnumDeleting  UpdateVpcLinkResponseVpcLinkStatusEnum = "DELETING"
	UpdateVpcLinkResponseVpcLinkStatusEnumFailed    UpdateVpcLinkResponseVpcLinkStatusEnum = "FAILED"
	UpdateVpcLinkResponseVpcLinkStatusEnumInactive  UpdateVpcLinkResponseVpcLinkStatusEnum = "INACTIVE"
)

func (e *UpdateVpcLinkResponseVpcLinkStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING":
		fallthrough
	case "AVAILABLE":
		fallthrough
	case "DELETING":
		fallthrough
	case "FAILED":
		fallthrough
	case "INACTIVE":
		*e = UpdateVpcLinkResponseVpcLinkStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateVpcLinkResponseVpcLinkStatusEnum: %s", s)
	}
}

// UpdateVpcLinkResponseVpcLinkVersionEnum - The version of the VPC link.
type UpdateVpcLinkResponseVpcLinkVersionEnum string

const (
	UpdateVpcLinkResponseVpcLinkVersionEnumV2 UpdateVpcLinkResponseVpcLinkVersionEnum = "V2"
)

func (e *UpdateVpcLinkResponseVpcLinkVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "V2":
		*e = UpdateVpcLinkResponseVpcLinkVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateVpcLinkResponseVpcLinkVersionEnum: %s", s)
	}
}

// UpdateVpcLinkResponse - Success
type UpdateVpcLinkResponse struct {
	CreatedDate          *time.Time                               `json:"CreatedDate,omitempty"`
	Name                 *string                                  `json:"Name,omitempty"`
	SecurityGroupIds     []string                                 `json:"SecurityGroupIds,omitempty"`
	SubnetIds            []string                                 `json:"SubnetIds,omitempty"`
	Tags                 map[string]string                        `json:"Tags,omitempty"`
	VpcLinkID            *string                                  `json:"VpcLinkId,omitempty"`
	VpcLinkStatus        *UpdateVpcLinkResponseVpcLinkStatusEnum  `json:"VpcLinkStatus,omitempty"`
	VpcLinkStatusMessage *string                                  `json:"VpcLinkStatusMessage,omitempty"`
	VpcLinkVersion       *UpdateVpcLinkResponseVpcLinkVersionEnum `json:"VpcLinkVersion,omitempty"`
}
