/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudDocumentaiV1beta2DocumentEntity - An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.
 */
public class GoogleCloudDocumentaiV1beta2DocumentEntity {
    /**
     * Optional. Confidence of detected Schema entity. Range `[0, 1]`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confidence")
    public Float confidence;
    public GoogleCloudDocumentaiV1beta2DocumentEntity withConfidence(Float confidence) {
        this.confidence = confidence;
        return this;
    }
    
    /**
     * Optional. Canonical id. This will be a unique value in the entity list for this document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public GoogleCloudDocumentaiV1beta2DocumentEntity withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Optional. Deprecated. Use `id` field instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mentionId")
    public String mentionId;
    public GoogleCloudDocumentaiV1beta2DocumentEntity withMentionId(String mentionId) {
        this.mentionId = mentionId;
        return this;
    }
    
    /**
     * Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mentionText")
    public String mentionText;
    public GoogleCloudDocumentaiV1beta2DocumentEntity withMentionText(String mentionText) {
        this.mentionText = mentionText;
        return this;
    }
    
    /**
     * Parsed and normalized entity value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("normalizedValue")
    public GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue normalizedValue;
    public GoogleCloudDocumentaiV1beta2DocumentEntity withNormalizedValue(GoogleCloudDocumentaiV1beta2DocumentEntityNormalizedValue normalizedValue) {
        this.normalizedValue = normalizedValue;
        return this;
    }
    
    /**
     * Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pageAnchor")
    public GoogleCloudDocumentaiV1beta2DocumentPageAnchor pageAnchor;
    public GoogleCloudDocumentaiV1beta2DocumentEntity withPageAnchor(GoogleCloudDocumentaiV1beta2DocumentPageAnchor pageAnchor) {
        this.pageAnchor = pageAnchor;
        return this;
    }
    
    /**
     * Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    public GoogleCloudDocumentaiV1beta2DocumentEntity[] properties;
    public GoogleCloudDocumentaiV1beta2DocumentEntity withProperties(GoogleCloudDocumentaiV1beta2DocumentEntity[] properties) {
        this.properties = properties;
        return this;
    }
    
    /**
     * Structure to identify provenance relationships between annotations in different revisions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("provenance")
    public GoogleCloudDocumentaiV1beta2DocumentProvenance provenance;
    public GoogleCloudDocumentaiV1beta2DocumentEntity withProvenance(GoogleCloudDocumentaiV1beta2DocumentProvenance provenance) {
        this.provenance = provenance;
        return this;
    }
    
    /**
     * Optional. Whether the entity will be redacted for de-identification purposes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redacted")
    public Boolean redacted;
    public GoogleCloudDocumentaiV1beta2DocumentEntity withRedacted(Boolean redacted) {
        this.redacted = redacted;
        return this;
    }
    
    /**
     * Text reference indexing into the Document.text.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textAnchor")
    public GoogleCloudDocumentaiV1beta2DocumentTextAnchor textAnchor;
    public GoogleCloudDocumentaiV1beta2DocumentEntity withTextAnchor(GoogleCloudDocumentaiV1beta2DocumentTextAnchor textAnchor) {
        this.textAnchor = textAnchor;
        return this;
    }
    
    /**
     * Required. Entity type from a schema e.g. `Address`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public GoogleCloudDocumentaiV1beta2DocumentEntity withType(String type) {
        this.type = type;
        return this;
    }
    
}
