/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class ReplacePermissionAssociationsResponse {
    
    public String contentType;

    public ReplacePermissionAssociationsResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * IdempotentParameterMismatchException
     */
    
    public Object idempotentParameterMismatchException;

    public ReplacePermissionAssociationsResponse withIdempotentParameterMismatchException(Object idempotentParameterMismatchException) {
        this.idempotentParameterMismatchException = idempotentParameterMismatchException;
        return this;
    }
    
    /**
     * InvalidClientTokenException
     */
    
    public Object invalidClientTokenException;

    public ReplacePermissionAssociationsResponse withInvalidClientTokenException(Object invalidClientTokenException) {
        this.invalidClientTokenException = invalidClientTokenException;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public ReplacePermissionAssociationsResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    /**
     * MalformedArnException
     */
    
    public Object malformedArnException;

    public ReplacePermissionAssociationsResponse withMalformedArnException(Object malformedArnException) {
        this.malformedArnException = malformedArnException;
        return this;
    }
    
    /**
     * OperationNotPermittedException
     */
    
    public Object operationNotPermittedException;

    public ReplacePermissionAssociationsResponse withOperationNotPermittedException(Object operationNotPermittedException) {
        this.operationNotPermittedException = operationNotPermittedException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.ReplacePermissionAssociationsResponse replacePermissionAssociationsResponse;

    public ReplacePermissionAssociationsResponse withReplacePermissionAssociationsResponse(org.openapis.openapi.models.shared.ReplacePermissionAssociationsResponse replacePermissionAssociationsResponse) {
        this.replacePermissionAssociationsResponse = replacePermissionAssociationsResponse;
        return this;
    }
    
    
    public Integer statusCode;

    public ReplacePermissionAssociationsResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public ReplacePermissionAssociationsResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ServerInternalException
     */
    
    public Object serverInternalException;

    public ReplacePermissionAssociationsResponse withServerInternalException(Object serverInternalException) {
        this.serverInternalException = serverInternalException;
        return this;
    }
    
    /**
     * ServiceUnavailableException
     */
    
    public Object serviceUnavailableException;

    public ReplacePermissionAssociationsResponse withServiceUnavailableException(Object serviceUnavailableException) {
        this.serviceUnavailableException = serviceUnavailableException;
        return this;
    }
    
    /**
     * UnknownResourceException
     */
    
    public Object unknownResourceException;

    public ReplacePermissionAssociationsResponse withUnknownResourceException(Object unknownResourceException) {
        this.unknownResourceException = unknownResourceException;
        return this;
    }
    
    public ReplacePermissionAssociationsResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
