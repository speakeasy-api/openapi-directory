"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class BatchGetAmpUrlsRequestLookupStrategyEnum(str, Enum):
    r"""The lookup_strategy being requested."""
    FETCH_LIVE_DOC = 'FETCH_LIVE_DOC'
    IN_INDEX_DOC = 'IN_INDEX_DOC'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BatchGetAmpUrlsRequest:
    r"""AMP URL request for a batch of URLs."""
    
    lookup_strategy: Optional[BatchGetAmpUrlsRequestLookupStrategyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lookupStrategy'), 'exclude': lambda f: f is None }})
    r"""The lookup_strategy being requested."""  
    urls: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('urls'), 'exclude': lambda f: f is None }})
    r"""List of URLs to look up for the paired AMP URLs. The URLs are case-sensitive. Up to 50 URLs per lookup (see [Usage Limits](/amp/cache/reference/limits))."""  
    