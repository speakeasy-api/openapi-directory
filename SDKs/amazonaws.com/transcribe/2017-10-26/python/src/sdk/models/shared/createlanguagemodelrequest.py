"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import basemodelname_enum as shared_basemodelname_enum
from ..shared import clmlanguagecode_enum as shared_clmlanguagecode_enum
from ..shared import inputdataconfig as shared_inputdataconfig
from ..shared import tag as shared_tag
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateLanguageModelRequest:
    
    base_model_name: shared_basemodelname_enum.BaseModelNameEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BaseModelName') }})  
    input_data_config: shared_inputdataconfig.InputDataConfig = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('InputDataConfig') }})  
    language_code: shared_clmlanguagecode_enum.CLMLanguageCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LanguageCode') }})  
    model_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelName') }})  
    tags: Optional[list[shared_tag.Tag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Tags'), 'exclude': lambda f: f is None }})  
    