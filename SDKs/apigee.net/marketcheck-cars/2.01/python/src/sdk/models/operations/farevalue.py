"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import error as shared_error
from ..shared import farevalue as shared_farevalue
from typing import Optional


@dataclasses.dataclass
class FareValueRequest:
    
    api_key: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'api_key', 'style': 'form', 'explode': True }})
    r"""The API Authentication Key. Mandatory with all API calls."""  
    make: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'make', 'style': 'form', 'explode': True }})
    r"""Car's make"""  
    miles: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'miles', 'style': 'form', 'explode': True }})
    r"""miles vehicle has driven in total"""  
    model: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'model', 'style': 'form', 'explode': True }})
    r"""Car's model"""  
    postal_code: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'postal_code', 'style': 'form', 'explode': True }})
    r"""Postal code of the car"""  
    radius: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'radius', 'style': 'form', 'explode': True }})
    r"""Radius around postal code"""  
    variant: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'variant', 'style': 'form', 'explode': True }})
    r"""Car's variant"""  
    vrm: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'vrm', 'style': 'form', 'explode': True }})
    r"""Predict price for a VRM"""  
    year: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'year', 'style': 'form', 'explode': True }})
    r"""Car manufacturing year"""  
    

@dataclasses.dataclass
class FareValueResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""Error"""  
    fare_value: Optional[shared_farevalue.FareValue] = dataclasses.field(default=None)
    r"""Predict fare value of car for UK based on YMMT & miles"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    