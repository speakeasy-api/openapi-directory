<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class MarketChange
{
    /**
     * Conflated - have more than a single change been combined (or null if not conflated)
     * 
     * @var ?bool $con
     */
	#[\JMS\Serializer\Annotation\SerializedName('con')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $con = null;
    
    /**
     * Market Id - the id of the market
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Image - replace existing prices / data with the data supplied: it is not a delta (or null if delta)
     * 
     * @var ?bool $img
     */
	#[\JMS\Serializer\Annotation\SerializedName('img')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $img = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('marketDefinition')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MarketDefinition')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MarketDefinition $marketDefinition = null;
    
    /**
     * Runner Changes - a list of changes to runners (or null if un-changed)
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\RunnerChange> $rc
     */
	#[\JMS\Serializer\Annotation\SerializedName('rc')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\RunnerChange>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $rc = null;
    
    /**
     * The total amount matched across the market. This value is truncated at 2dp (or null if un-changed)
     * 
     * @var ?float $tv
     */
	#[\JMS\Serializer\Annotation\SerializedName('tv')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $tv = null;
    
	public function __construct()
	{
		$this->con = null;
		$this->id = null;
		$this->img = null;
		$this->marketDefinition = null;
		$this->rc = null;
		$this->tv = null;
	}
}
