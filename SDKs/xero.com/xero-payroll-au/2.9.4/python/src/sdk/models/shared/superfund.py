"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import superfundtype_enum as shared_superfundtype_enum
from ..shared import validationerror as shared_validationerror
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SuperFundInput:
    
    type: shared_superfundtype_enum.SuperFundTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type') }})  
    abn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ABN'), 'exclude': lambda f: f is None }})
    r"""ABN of the self managed super fund"""  
    account_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccountName'), 'exclude': lambda f: f is None }})
    r"""The account name for the self managed super fund."""  
    account_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccountNumber'), 'exclude': lambda f: f is None }})
    r"""The account number for the self managed super fund."""  
    bsb: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BSB'), 'exclude': lambda f: f is None }})
    r"""BSB of the self managed super fund"""  
    electronic_service_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ElectronicServiceAddress'), 'exclude': lambda f: f is None }})
    r"""The electronic service address for the self managed super fund."""  
    employer_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmployerNumber'), 'exclude': lambda f: f is None }})
    r"""Some funds assign a unique number to each employer"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})
    r"""Name of the super fund"""  
    spin: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SPIN'), 'exclude': lambda f: f is None }})
    r"""The SPIN of the Regulated SuperFund. This field has been deprecated. It will only be present for legacy superfunds. New superfunds will not have a SPIN value. The USI field should be used instead of SPIN."""  
    super_fund_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SuperFundID'), 'exclude': lambda f: f is None }})
    r"""Xero identifier for a super fund"""  
    usi: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('USI'), 'exclude': lambda f: f is None }})
    r"""The USI of the Regulated SuperFund"""  
    validation_errors: Optional[list[shared_validationerror.ValidationError]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ValidationErrors'), 'exclude': lambda f: f is None }})
    r"""Displays array of validation error messages from the API"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SuperFund:
    
    type: shared_superfundtype_enum.SuperFundTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Type') }})  
    abn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ABN'), 'exclude': lambda f: f is None }})
    r"""ABN of the self managed super fund"""  
    account_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccountName'), 'exclude': lambda f: f is None }})
    r"""The account name for the self managed super fund."""  
    account_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AccountNumber'), 'exclude': lambda f: f is None }})
    r"""The account number for the self managed super fund."""  
    bsb: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BSB'), 'exclude': lambda f: f is None }})
    r"""BSB of the self managed super fund"""  
    electronic_service_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ElectronicServiceAddress'), 'exclude': lambda f: f is None }})
    r"""The electronic service address for the self managed super fund."""  
    employer_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EmployerNumber'), 'exclude': lambda f: f is None }})
    r"""Some funds assign a unique number to each employer"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name'), 'exclude': lambda f: f is None }})
    r"""Name of the super fund"""  
    spin: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SPIN'), 'exclude': lambda f: f is None }})
    r"""The SPIN of the Regulated SuperFund. This field has been deprecated. It will only be present for legacy superfunds. New superfunds will not have a SPIN value. The USI field should be used instead of SPIN."""  
    super_fund_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SuperFundID'), 'exclude': lambda f: f is None }})
    r"""Xero identifier for a super fund"""  
    updated_date_utc: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UpdatedDateUTC'), 'exclude': lambda f: f is None }})
    r"""Last modified timestamp"""  
    usi: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('USI'), 'exclude': lambda f: f is None }})
    r"""The USI of the Regulated SuperFund"""  
    validation_errors: Optional[list[shared_validationerror.ValidationError]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ValidationErrors'), 'exclude': lambda f: f is None }})
    r"""Displays array of validation error messages from the API"""  
    