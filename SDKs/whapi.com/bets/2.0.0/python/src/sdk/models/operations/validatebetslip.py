"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import betsliprequest as shared_betsliprequest
from ..shared import betslipresponse as shared_betslipresponse
from typing import Optional


@dataclasses.dataclass
class ValidateBetslipRequest:
    
    api_key: str = dataclasses.field(metadata={'header': { 'field_name': 'apiKey', 'style': 'simple', 'explode': False }})
    r"""A unique identifier of your application that is generated by the API portal."""  
    api_secret: str = dataclasses.field(metadata={'header': { 'field_name': 'apiSecret', 'style': 'simple', 'explode': False }})
    r"""Another unique identifier for your application."""  
    bet_slip_request: shared_betsliprequest.BetSlipRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Betslip Body"""  
    expanded: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'expanded', 'style': 'form', 'explode': True }})
    r"""Allows for all bets for given selections to be returned - not just the specified type"""  
    

@dataclasses.dataclass
class ValidateBetslipResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    bet_slip_response: Optional[shared_betslipresponse.BetSlipResponse] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    