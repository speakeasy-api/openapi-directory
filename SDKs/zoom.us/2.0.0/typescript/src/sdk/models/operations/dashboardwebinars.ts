/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class DashboardWebinarsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth: string;
}

/**
 * The webinar type.
 */
export enum DashboardWebinarsTypeEnum {
  Past = "past",
  Live = "live",
}

export class DashboardWebinarsRequest extends SpeakeasyBase {
  /**
   * Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=from;dateTimeFormat=YYYY-MM-DD",
  })
  from: Date;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next_page_token",
  })
  nextPageToken?: string;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=page_size",
  })
  pageSize?: number;

  /**
   * End date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=to;dateTimeFormat=YYYY-MM-DD",
  })
  to: Date;

  /**
   * The webinar type.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: DashboardWebinarsTypeEnum;
}

export class DashboardWebinars200ApplicationXMLWebinarMetricsCustomKeys extends SpeakeasyBase {
  /**
   * Custom key associated with the Webinar.
   */
  @SpeakeasyMetadata()
  key?: string;

  /**
   * Value of the custom key associated with the Webinar.
   */
  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Webinar metric details.
 */
export class DashboardWebinars200ApplicationXMLWebinarMetrics extends SpeakeasyBase {
  /**
   * Custom keys and values assigned to the Webinar.
   */
  @SpeakeasyMetadata({
    elemType: DashboardWebinars200ApplicationXMLWebinarMetricsCustomKeys,
  })
  customKeys?: DashboardWebinars200ApplicationXMLWebinarMetricsCustomKeys[];

  /**
   * Department of the host.
   */
  @SpeakeasyMetadata()
  dept?: string;

  /**
   * Webinar duration, formatted as hh:mm:ss, for example: `10:00` for ten minutes.
   */
  @SpeakeasyMetadata()
  duration?: string;

  /**
   * User email.
   */
  @SpeakeasyMetadata()
  email?: string;

  /**
   * Webinar end time.
   */
  @SpeakeasyMetadata()
  endTime?: Date;

  /**
   * Indicates whether or not TSP was used for the Webinar.
   */
  @SpeakeasyMetadata()
  has3rdPartyAudio?: boolean;

  /**
   * Indicates whether or not PSTN was used for the Webinar.
   */
  @SpeakeasyMetadata()
  hasPstn?: boolean;

  /**
   * Indicates whether or not recording was used for the Webinar.
   */
  @SpeakeasyMetadata()
  hasRecording?: boolean;

  /**
   * Indicates whether or not screen sharing was used for the Webinar.
   */
  @SpeakeasyMetadata()
  hasScreenShare?: boolean;

  /**
   * Indicates whether or not SIP was used for the Webinar.
   */
  @SpeakeasyMetadata()
  hasSip?: boolean;

  /**
   * Indicates whether or not video was used for the Webinar.
   */
  @SpeakeasyMetadata()
  hasVideo?: boolean;

  /**
   * Indicates whether or not VoIP was used for the Webinar.
   */
  @SpeakeasyMetadata()
  hasVoip?: boolean;

  /**
   * User display name.
   */
  @SpeakeasyMetadata()
  host?: string;

  /**
   * Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
   */
  @SpeakeasyMetadata()
  id?: number;

  /**
   * Webinar participant count.
   */
  @SpeakeasyMetadata()
  participants?: number;

  /**
   * Webinar start time.
   */
  @SpeakeasyMetadata()
  startTime?: Date;

  /**
   * Webinar topic.
   */
  @SpeakeasyMetadata()
  topic?: string;

  /**
   * User type.
   */
  @SpeakeasyMetadata()
  userType?: string;

  /**
   * Webinar UUID.
   */
  @SpeakeasyMetadata()
  uuid?: string;
}

/**
 * Pagination object.
 */
export class DashboardWebinars200ApplicationXML extends SpeakeasyBase {
  /**
   * Start date for this report in 'yyyy-mm-dd' format.
   */
  @SpeakeasyMetadata()
  from?: Date;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  nextPageToken?: string;

  /**
   * The number of pages returned for the request made.
   */
  @SpeakeasyMetadata()
  pageCount?: number;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata()
  pageSize?: number;

  /**
   * End date for this report in 'yyyy-mm-dd' format.
   */
  @SpeakeasyMetadata()
  to?: Date;

  /**
   * The number of all records available across pages.
   */
  @SpeakeasyMetadata()
  totalRecords?: number;

  /**
   * Array of webinar objects.
   */
  @SpeakeasyMetadata({
    elemType: DashboardWebinars200ApplicationXMLWebinarMetrics,
  })
  webinars?: DashboardWebinars200ApplicationXMLWebinarMetrics[];
}

export class DashboardWebinars200ApplicationJSONWebinarMetricsCustomKeys extends SpeakeasyBase {
  /**
   * Custom key associated with the Webinar.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  /**
   * Value of the custom key associated with the Webinar.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * Webinar metric details.
 */
export class DashboardWebinars200ApplicationJSONWebinarMetrics extends SpeakeasyBase {
  /**
   * Custom keys and values assigned to the Webinar.
   */
  @SpeakeasyMetadata({
    elemType: DashboardWebinars200ApplicationJSONWebinarMetricsCustomKeys,
  })
  @Expose({ name: "custom_keys" })
  @Type(() => DashboardWebinars200ApplicationJSONWebinarMetricsCustomKeys)
  customKeys?: DashboardWebinars200ApplicationJSONWebinarMetricsCustomKeys[];

  /**
   * Department of the host.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dept" })
  dept?: string;

  /**
   * Webinar duration, formatted as hh:mm:ss, for example: `10:00` for ten minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration?: string;

  /**
   * User email.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Webinar end time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  /**
   * Indicates whether or not TSP was used for the Webinar.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "has_3rd_party_audio" })
  has3rdPartyAudio?: boolean;

  /**
   * Indicates whether or not PSTN was used for the Webinar.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "has_pstn" })
  hasPstn?: boolean;

  /**
   * Indicates whether or not recording was used for the Webinar.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "has_recording" })
  hasRecording?: boolean;

  /**
   * Indicates whether or not screen sharing was used for the Webinar.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "has_screen_share" })
  hasScreenShare?: boolean;

  /**
   * Indicates whether or not SIP was used for the Webinar.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "has_sip" })
  hasSip?: boolean;

  /**
   * Indicates whether or not video was used for the Webinar.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "has_video" })
  hasVideo?: boolean;

  /**
   * Indicates whether or not VoIP was used for the Webinar.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "has_voip" })
  hasVoip?: boolean;

  /**
   * User display name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "host" })
  host?: string;

  /**
   * Webinar ID in "**long**" format(represented as int64 data type in JSON), also known as the webinar number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Webinar participant count.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "participants" })
  participants?: number;

  /**
   * Webinar start time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_time" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  /**
   * Webinar topic.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "topic" })
  topic?: string;

  /**
   * User type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_type" })
  userType?: string;

  /**
   * Webinar UUID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uuid" })
  uuid?: string;
}

/**
 * Pagination object.
 */
export class DashboardWebinars200ApplicationJSON extends SpeakeasyBase {
  /**
   * Start date for this report in 'yyyy-mm-dd' format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  from?: Date;

  /**
   * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next_page_token" })
  nextPageToken?: string;

  /**
   * The number of pages returned for the request made.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_count" })
  pageCount?: number;

  /**
   * The number of records returned within a single API call.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  /**
   * End date for this report in 'yyyy-mm-dd' format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "to" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  to?: Date;

  /**
   * The number of all records available across pages.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total_records" })
  totalRecords?: number;

  /**
   * Array of webinar objects.
   */
  @SpeakeasyMetadata({
    elemType: DashboardWebinars200ApplicationJSONWebinarMetrics,
  })
  @Expose({ name: "webinars" })
  @Type(() => DashboardWebinars200ApplicationJSONWebinarMetrics)
  webinars?: DashboardWebinars200ApplicationJSONWebinarMetrics[];
}

export class DashboardWebinarsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * **HTTP Status Code:** `200`<br>
   *
   * @remarks
   * Meetings returned.<br>
   * Only available for paid accounts that have enabled the Dashboard feature.
   */
  @SpeakeasyMetadata()
  dashboardWebinars200ApplicationJSONObject?: DashboardWebinars200ApplicationJSON;
}
