// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SplitTypeEnum string

const (
	SplitTypeEnumNone     SplitTypeEnum = "None"
	SplitTypeEnumLine     SplitTypeEnum = "Line"
	SplitTypeEnumRecordIo SplitTypeEnum = "RecordIO"
	SplitTypeEnumTfRecord SplitTypeEnum = "TFRecord"
)

func (e SplitTypeEnum) ToPointer() *SplitTypeEnum {
	return &e
}

func (e *SplitTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "None":
		fallthrough
	case "Line":
		fallthrough
	case "RecordIO":
		fallthrough
	case "TFRecord":
		*e = SplitTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SplitTypeEnum: %v", v)
	}
}
