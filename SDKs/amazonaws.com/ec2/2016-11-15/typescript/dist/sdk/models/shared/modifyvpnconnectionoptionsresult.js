"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ModifyVpnConnectionOptionsResult = exports.ModifyVpnConnectionOptionsResultVpnConnection = exports.ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetry = exports.ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetryStatusEnum = exports.ModifyVpnConnectionOptionsResultVpnConnectionTypeEnum = exports.ModifyVpnConnectionOptionsResultVpnConnectionTags = exports.ModifyVpnConnectionOptionsResultVpnConnectionStateEnum = exports.ModifyVpnConnectionOptionsResultVpnConnectionRoutes = exports.ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum = exports.ModifyVpnConnectionOptionsResultVpnConnectionRoutesSourceEnum = exports.ModifyVpnConnectionOptionsResultVpnConnectionOptions = exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions = exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2IntegrityAlgorithms = exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2EncryptionAlgorithms = exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2DHGroupNumbers = exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1IntegrityAlgorithms = exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1EncryptionAlgorithms = exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1DHGroupNumbers = exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptions = exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions = exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsIkeVersions = exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelInsideIpVersionEnum = exports.ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The current state of the gateway association.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum;
(function (ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum) {
    ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum["Associated"] = "associated";
    ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum["NotAssociated"] = "not-associated";
    ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum["Associating"] = "associating";
    ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum["Disassociating"] = "disassociating";
})(ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum = exports.ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum || (exports.ModifyVpnConnectionOptionsResultVpnConnectionGatewayAssociationStateEnum = {}));
/**
 * Indicates whether the VPN tunnels process IPv4 or IPv6 traffic.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelInsideIpVersionEnum;
(function (ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelInsideIpVersionEnum) {
    ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelInsideIpVersionEnum["Ipv4"] = "ipv4";
    ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelInsideIpVersionEnum["Ipv6"] = "ipv6";
})(ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelInsideIpVersionEnum = exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelInsideIpVersionEnum || (exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelInsideIpVersionEnum = {}));
/**
 * The internet key exchange (IKE) version permitted for the VPN tunnel.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsIkeVersions = /** @class */ (function (_super) {
    __extends(ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsIkeVersions, _super);
    function ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsIkeVersions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsIkeVersions.prototype, "value", void 0);
    return ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsIkeVersions;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsIkeVersions = ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsIkeVersions;
/**
 * Options for sending VPN tunnel logs to CloudWatch.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions = /** @class */ (function (_super) {
    __extends(ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions, _super);
    function ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions.prototype, "logEnabled", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions.prototype, "logGroupArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions.prototype, "logOutputFormat", void 0);
    return ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions = ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions;
/**
 * Options for logging VPN tunnel activity.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptions = /** @class */ (function (_super) {
    __extends(ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptions, _super);
    function ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptions.prototype, "cloudWatchLogOptions", void 0);
    return ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptions;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptions = ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptions;
/**
 * The Diffie-Hellmann group number for phase 1 IKE negotiations.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1DHGroupNumbers = /** @class */ (function (_super) {
    __extends(ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1DHGroupNumbers, _super);
    function ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1DHGroupNumbers() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1DHGroupNumbers.prototype, "value", void 0);
    return ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1DHGroupNumbers;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1DHGroupNumbers = ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1DHGroupNumbers;
/**
 * The encryption algorithm for phase 1 IKE negotiations.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1EncryptionAlgorithms = /** @class */ (function (_super) {
    __extends(ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1EncryptionAlgorithms, _super);
    function ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1EncryptionAlgorithms() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1EncryptionAlgorithms.prototype, "value", void 0);
    return ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1EncryptionAlgorithms;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1EncryptionAlgorithms = ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1EncryptionAlgorithms;
/**
 * The integrity algorithm for phase 1 IKE negotiations.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1IntegrityAlgorithms = /** @class */ (function (_super) {
    __extends(ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1IntegrityAlgorithms, _super);
    function ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1IntegrityAlgorithms() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1IntegrityAlgorithms.prototype, "value", void 0);
    return ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1IntegrityAlgorithms;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1IntegrityAlgorithms = ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1IntegrityAlgorithms;
/**
 * The Diffie-Hellmann group number for phase 2 IKE negotiations.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2DHGroupNumbers = /** @class */ (function (_super) {
    __extends(ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2DHGroupNumbers, _super);
    function ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2DHGroupNumbers() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2DHGroupNumbers.prototype, "value", void 0);
    return ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2DHGroupNumbers;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2DHGroupNumbers = ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2DHGroupNumbers;
/**
 * The encryption algorithm for phase 2 IKE negotiations.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2EncryptionAlgorithms = /** @class */ (function (_super) {
    __extends(ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2EncryptionAlgorithms, _super);
    function ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2EncryptionAlgorithms() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2EncryptionAlgorithms.prototype, "value", void 0);
    return ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2EncryptionAlgorithms;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2EncryptionAlgorithms = ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2EncryptionAlgorithms;
/**
 * The integrity algorithm for phase 2 IKE negotiations.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2IntegrityAlgorithms = /** @class */ (function (_super) {
    __extends(ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2IntegrityAlgorithms, _super);
    function ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2IntegrityAlgorithms() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2IntegrityAlgorithms.prototype, "value", void 0);
    return ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2IntegrityAlgorithms;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2IntegrityAlgorithms = ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2IntegrityAlgorithms;
/**
 * The VPN tunnel options.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions = /** @class */ (function (_super) {
    __extends(ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions, _super);
    function ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "dpdTimeoutAction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "dpdTimeoutSeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsIkeVersions,
        }),
        __metadata("design:type", Array)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "ikeVersions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsLogOptions)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "logOptions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "outsideIpAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1DHGroupNumbers,
        }),
        __metadata("design:type", Array)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "phase1DHGroupNumbers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1EncryptionAlgorithms,
        }),
        __metadata("design:type", Array)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "phase1EncryptionAlgorithms", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase1IntegrityAlgorithms,
        }),
        __metadata("design:type", Array)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "phase1IntegrityAlgorithms", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "phase1LifetimeSeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2DHGroupNumbers,
        }),
        __metadata("design:type", Array)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "phase2DHGroupNumbers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2EncryptionAlgorithms,
        }),
        __metadata("design:type", Array)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "phase2EncryptionAlgorithms", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptionsPhase2IntegrityAlgorithms,
        }),
        __metadata("design:type", Array)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "phase2IntegrityAlgorithms", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "phase2LifetimeSeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "preSharedKey", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "rekeyFuzzPercentage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "rekeyMarginTimeSeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "replayWindowSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "startupAction", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "tunnelInsideCidr", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions.prototype, "tunnelInsideIpv6Cidr", void 0);
    return ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions = ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions;
/**
 * The VPN connection options.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionOptions = /** @class */ (function (_super) {
    __extends(ModifyVpnConnectionOptionsResultVpnConnectionOptions, _super);
    function ModifyVpnConnectionOptionsResultVpnConnectionOptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptions.prototype, "enableAcceleration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptions.prototype, "localIpv4NetworkCidr", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptions.prototype, "localIpv6NetworkCidr", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptions.prototype, "outsideIpAddressType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptions.prototype, "remoteIpv4NetworkCidr", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptions.prototype, "remoteIpv6NetworkCidr", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptions.prototype, "staticRoutesOnly", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptions.prototype, "transportTransitGatewayAttachmentId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptions.prototype, "tunnelInsideIpVersion", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyVpnConnectionOptionsResultVpnConnectionOptionsTunnelOptions,
        }),
        __metadata("design:type", Array)
    ], ModifyVpnConnectionOptionsResultVpnConnectionOptions.prototype, "tunnelOptions", void 0);
    return ModifyVpnConnectionOptionsResultVpnConnectionOptions;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnConnectionOptionsResultVpnConnectionOptions = ModifyVpnConnectionOptionsResultVpnConnectionOptions;
/**
 * Indicates how the routes were provided.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionRoutesSourceEnum;
(function (ModifyVpnConnectionOptionsResultVpnConnectionRoutesSourceEnum) {
    ModifyVpnConnectionOptionsResultVpnConnectionRoutesSourceEnum["Static"] = "Static";
})(ModifyVpnConnectionOptionsResultVpnConnectionRoutesSourceEnum = exports.ModifyVpnConnectionOptionsResultVpnConnectionRoutesSourceEnum || (exports.ModifyVpnConnectionOptionsResultVpnConnectionRoutesSourceEnum = {}));
/**
 * The current state of the static route.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum;
(function (ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum) {
    ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum["Pending"] = "pending";
    ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum["Available"] = "available";
    ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum["Deleting"] = "deleting";
    ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum["Deleted"] = "deleted";
})(ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum = exports.ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum || (exports.ModifyVpnConnectionOptionsResultVpnConnectionRoutesStateEnum = {}));
/**
 * Describes a static route for a VPN connection.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionRoutes = /** @class */ (function (_super) {
    __extends(ModifyVpnConnectionOptionsResultVpnConnectionRoutes, _super);
    function ModifyVpnConnectionOptionsResultVpnConnectionRoutes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionRoutes.prototype, "destinationCidrBlock", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionRoutes.prototype, "source", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionRoutes.prototype, "state", void 0);
    return ModifyVpnConnectionOptionsResultVpnConnectionRoutes;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnConnectionOptionsResultVpnConnectionRoutes = ModifyVpnConnectionOptionsResultVpnConnectionRoutes;
/**
 * The current state of the VPN connection.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionStateEnum;
(function (ModifyVpnConnectionOptionsResultVpnConnectionStateEnum) {
    ModifyVpnConnectionOptionsResultVpnConnectionStateEnum["Pending"] = "pending";
    ModifyVpnConnectionOptionsResultVpnConnectionStateEnum["Available"] = "available";
    ModifyVpnConnectionOptionsResultVpnConnectionStateEnum["Deleting"] = "deleting";
    ModifyVpnConnectionOptionsResultVpnConnectionStateEnum["Deleted"] = "deleted";
})(ModifyVpnConnectionOptionsResultVpnConnectionStateEnum = exports.ModifyVpnConnectionOptionsResultVpnConnectionStateEnum || (exports.ModifyVpnConnectionOptionsResultVpnConnectionStateEnum = {}));
/**
 * Describes a tag.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionTags = /** @class */ (function (_super) {
    __extends(ModifyVpnConnectionOptionsResultVpnConnectionTags, _super);
    function ModifyVpnConnectionOptionsResultVpnConnectionTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionTags.prototype, "value", void 0);
    return ModifyVpnConnectionOptionsResultVpnConnectionTags;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnConnectionOptionsResultVpnConnectionTags = ModifyVpnConnectionOptionsResultVpnConnectionTags;
/**
 * The type of VPN connection.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionTypeEnum;
(function (ModifyVpnConnectionOptionsResultVpnConnectionTypeEnum) {
    ModifyVpnConnectionOptionsResultVpnConnectionTypeEnum["Ipsec1"] = "ipsec.1";
})(ModifyVpnConnectionOptionsResultVpnConnectionTypeEnum = exports.ModifyVpnConnectionOptionsResultVpnConnectionTypeEnum || (exports.ModifyVpnConnectionOptionsResultVpnConnectionTypeEnum = {}));
/**
 * The status of the VPN tunnel.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetryStatusEnum;
(function (ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetryStatusEnum) {
    ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetryStatusEnum["Up"] = "UP";
    ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetryStatusEnum["Down"] = "DOWN";
})(ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetryStatusEnum = exports.ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetryStatusEnum || (exports.ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetryStatusEnum = {}));
/**
 * Describes telemetry for a VPN tunnel.
 */
var ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetry = /** @class */ (function (_super) {
    __extends(ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetry, _super);
    function ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetry() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetry.prototype, "acceptedRouteCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetry.prototype, "certificateArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Date)
    ], ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetry.prototype, "lastStatusChange", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetry.prototype, "outsideIpAddress", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetry.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetry.prototype, "statusMessage", void 0);
    return ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetry;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetry = ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetry;
/**
 * Information about the VPN connection.
 */
var ModifyVpnConnectionOptionsResultVpnConnection = /** @class */ (function (_super) {
    __extends(ModifyVpnConnectionOptionsResultVpnConnection, _super);
    function ModifyVpnConnectionOptionsResultVpnConnection() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnection.prototype, "category", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnection.prototype, "coreNetworkArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnection.prototype, "coreNetworkAttachmentArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnection.prototype, "customerGatewayConfiguration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnection.prototype, "customerGatewayId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnection.prototype, "gatewayAssociationState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ModifyVpnConnectionOptionsResultVpnConnectionOptions)
    ], ModifyVpnConnectionOptionsResultVpnConnection.prototype, "options", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyVpnConnectionOptionsResultVpnConnectionRoutes,
        }),
        __metadata("design:type", Array)
    ], ModifyVpnConnectionOptionsResultVpnConnection.prototype, "routes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnection.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyVpnConnectionOptionsResultVpnConnectionTags,
        }),
        __metadata("design:type", Array)
    ], ModifyVpnConnectionOptionsResultVpnConnection.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnection.prototype, "transitGatewayId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnection.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: ModifyVpnConnectionOptionsResultVpnConnectionVgwTelemetry,
        }),
        __metadata("design:type", Array)
    ], ModifyVpnConnectionOptionsResultVpnConnection.prototype, "vgwTelemetry", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnection.prototype, "vpnConnectionId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ModifyVpnConnectionOptionsResultVpnConnection.prototype, "vpnGatewayId", void 0);
    return ModifyVpnConnectionOptionsResultVpnConnection;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnConnectionOptionsResultVpnConnection = ModifyVpnConnectionOptionsResultVpnConnection;
/**
 * Success
 */
var ModifyVpnConnectionOptionsResult = /** @class */ (function (_super) {
    __extends(ModifyVpnConnectionOptionsResult, _super);
    function ModifyVpnConnectionOptionsResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ModifyVpnConnectionOptionsResultVpnConnection)
    ], ModifyVpnConnectionOptionsResult.prototype, "vpnConnection", void 0);
    return ModifyVpnConnectionOptionsResult;
}(utils_1.SpeakeasyBase));
exports.ModifyVpnConnectionOptionsResult = ModifyVpnConnectionOptionsResult;
