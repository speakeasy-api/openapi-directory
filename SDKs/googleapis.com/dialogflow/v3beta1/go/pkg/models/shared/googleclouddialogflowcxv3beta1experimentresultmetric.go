// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountTypeEnum - Count-based metric type. Only one of type or count_type is specified in each Metric.
type GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountTypeEnum string

const (
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountTypeEnumCountTypeUnspecified GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountTypeEnum = "COUNT_TYPE_UNSPECIFIED"
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountTypeEnumTotalNoMatchCount    GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountTypeEnum = "TOTAL_NO_MATCH_COUNT"
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountTypeEnumTotalTurnCount       GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountTypeEnum = "TOTAL_TURN_COUNT"
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountTypeEnumAverageTurnCount     GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountTypeEnum = "AVERAGE_TURN_COUNT"
)

func (e *GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COUNT_TYPE_UNSPECIFIED":
		fallthrough
	case "TOTAL_NO_MATCH_COUNT":
		fallthrough
	case "TOTAL_TURN_COUNT":
		fallthrough
	case "AVERAGE_TURN_COUNT":
		*e = GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountTypeEnum: %s", s)
	}
}

// GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeEnum - Ratio-based metric type. Only one of type or count_type is specified in each Metric.
type GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeEnum string

const (
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeEnumMetricUnspecified              GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeEnum = "METRIC_UNSPECIFIED"
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeEnumContainedSessionNoCallbackRate GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeEnum = "CONTAINED_SESSION_NO_CALLBACK_RATE"
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeEnumLiveAgentHandoffRate           GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeEnum = "LIVE_AGENT_HANDOFF_RATE"
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeEnumCallbackSessionRate            GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeEnum = "CALLBACK_SESSION_RATE"
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeEnumAbandonedSessionRate           GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeEnum = "ABANDONED_SESSION_RATE"
	GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeEnumSessionEndRate                 GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeEnum = "SESSION_END_RATE"
)

func (e *GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "METRIC_UNSPECIFIED":
		fallthrough
	case "CONTAINED_SESSION_NO_CALLBACK_RATE":
		fallthrough
	case "LIVE_AGENT_HANDOFF_RATE":
		fallthrough
	case "CALLBACK_SESSION_RATE":
		fallthrough
	case "ABANDONED_SESSION_RATE":
		fallthrough
	case "SESSION_END_RATE":
		*e = GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeEnum: %s", s)
	}
}

// GoogleCloudDialogflowCxV3beta1ExperimentResultMetric - Metric and corresponding confidence intervals.
type GoogleCloudDialogflowCxV3beta1ExperimentResultMetric struct {
	// A confidence interval is a range of possible values for the experiment objective you are trying to measure.
	ConfidenceInterval *GoogleCloudDialogflowCxV3beta1ExperimentResultConfidenceInterval `json:"confidenceInterval,omitempty"`
	// Count value of a metric.
	Count *float64 `json:"count,omitempty"`
	// Count-based metric type. Only one of type or count_type is specified in each Metric.
	CountType *GoogleCloudDialogflowCxV3beta1ExperimentResultMetricCountTypeEnum `json:"countType,omitempty"`
	// Ratio value of a metric.
	Ratio *float64 `json:"ratio,omitempty"`
	// Ratio-based metric type. Only one of type or count_type is specified in each Metric.
	Type *GoogleCloudDialogflowCxV3beta1ExperimentResultMetricTypeEnum `json:"type,omitempty"`
}
