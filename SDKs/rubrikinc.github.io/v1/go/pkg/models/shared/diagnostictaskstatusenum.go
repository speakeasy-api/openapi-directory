// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DiagnosticTaskStatusEnum - Status of the task.
type DiagnosticTaskStatusEnum string

const (
	DiagnosticTaskStatusEnumQueued    DiagnosticTaskStatusEnum = "Queued"
	DiagnosticTaskStatusEnumStarted   DiagnosticTaskStatusEnum = "Started"
	DiagnosticTaskStatusEnumRetried   DiagnosticTaskStatusEnum = "Retried"
	DiagnosticTaskStatusEnumSucceeded DiagnosticTaskStatusEnum = "Succeeded"
	DiagnosticTaskStatusEnumFailed    DiagnosticTaskStatusEnum = "Failed"
	DiagnosticTaskStatusEnumCanceled  DiagnosticTaskStatusEnum = "Canceled"
)

func (e DiagnosticTaskStatusEnum) ToPointer() *DiagnosticTaskStatusEnum {
	return &e
}

func (e *DiagnosticTaskStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Queued":
		fallthrough
	case "Started":
		fallthrough
	case "Retried":
		fallthrough
	case "Succeeded":
		fallthrough
	case "Failed":
		fallthrough
	case "Canceled":
		*e = DiagnosticTaskStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DiagnosticTaskStatusEnum: %v", v)
	}
}
