<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Transactions - Transaction details.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Transactions
{
    /**
     * $links
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\HrefType> $links
     */
	#[\JMS\Serializer\Annotation\SerializedName('_links')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\HrefType>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $links = null;
    
    /**
     * Might be used by the ASPSP to transport additional transaction related information to the PSU
     * 
     * 
     * 
     * @var ?string $additionalInformation
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalInformation')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $additionalInformation = null;
    
    /**
     * Is used if and only if the bookingStatus entry equals "information". 
     * 
     * Every active standing order related to the dedicated payment account result into one entry.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AdditionalInformationStructured $additionalInformationStructured
     */
	#[\JMS\Serializer\Annotation\SerializedName('additionalInformationStructured')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AdditionalInformationStructured')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AdditionalInformationStructured $additionalInformationStructured = null;
    
    /**
     * A single balance element.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Balance $balanceAfterTransaction
     */
	#[\JMS\Serializer\Annotation\SerializedName('balanceAfterTransaction')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Balance')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Balance $balanceAfterTransaction = null;
    
    /**
     * Bank transaction code as used by the ASPSP and using the sub elements of this structured code defined by ISO 20022.
     * 
     * 
     * This code type is concatenating the three ISO20022 Codes
     *   * Domain Code,
     *   * Family Code, and
     *   * SubFamiliy Code
     * by hyphens, resulting in 'DomainCode'-'FamilyCode'-'SubFamilyCode'.
     * 
     * 
     * @var ?string $bankTransactionCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankTransactionCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bankTransactionCode = null;
    
    /**
     * If this indicator equals true, then the related entry is a batch entry.
     * 
     * 
     * 
     * @var ?bool $batchIndicator
     */
	#[\JMS\Serializer\Annotation\SerializedName('batchIndicator')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $batchIndicator = null;
    
    /**
     * Shall be used if and only if the batchIndicator is contained and equals true.
     * 
     * 
     * 
     * @var ?int $batchNumberOfTransactions
     */
	#[\JMS\Serializer\Annotation\SerializedName('batchNumberOfTransactions')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $batchNumberOfTransactions = null;
    
    /**
     * The date when an entry is posted to an account on the ASPSPs books.
     * 
     * 
     * 
     * @var ?\DateTime $bookingDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('bookingDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $bookingDate = null;
    
    /**
     * Identification of a Cheque.
     * 
     * @var ?string $checkId
     */
	#[\JMS\Serializer\Annotation\SerializedName('checkId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $checkId = null;
    
    /**
     * Reference to an account by either
     * 
     *   * IBAN, of a payment accounts, or
     *   * otherAccountIdentification, for payment accounts if there is no IBAN
     * adapted from ISO pain.001.001.03.ch.02 CashAccount16-CH_IdTpCcy
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AccountReference16CH $creditorAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('creditorAccount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AccountReference16CH')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AccountReference16CH $creditorAccount = null;
    
    /**
     * BICFI
     * 
     * 
     * 
     * @var ?string $creditorAgent
     */
	#[\JMS\Serializer\Annotation\SerializedName('creditorAgent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creditorAgent = null;
    
    /**
     * Identification of Creditors, e.g. a SEPA Creditor ID.
     * 
     * @var ?string $creditorId
     */
	#[\JMS\Serializer\Annotation\SerializedName('creditorId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creditorId = null;
    
    /**
     * Creditor name.
     * 
     * @var ?string $creditorName
     */
	#[\JMS\Serializer\Annotation\SerializedName('creditorName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $creditorName = null;
    
    /**
     * Array of exchange rates.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ReportExchangeRate> $currencyExchange
     */
	#[\JMS\Serializer\Annotation\SerializedName('currencyExchange')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ReportExchangeRate>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $currencyExchange = null;
    
    /**
     * Reference to an account by either
     * 
     *   * IBAN, of a payment accounts, or
     *   * otherAccountIdentification, for payment accounts if there is no IBAN
     * adapted from ISO pain.001.001.03.ch.02 CashAccount16-CH_IdTpCcy
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AccountReference16CH $debtorAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('debtorAccount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AccountReference16CH')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AccountReference16CH $debtorAccount = null;
    
    /**
     * BICFI
     * 
     * 
     * 
     * @var ?string $debtorAgent
     */
	#[\JMS\Serializer\Annotation\SerializedName('debtorAgent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $debtorAgent = null;
    
    /**
     * Debtor name.
     * 
     * @var ?string $debtorName
     */
	#[\JMS\Serializer\Annotation\SerializedName('debtorName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $debtorName = null;
    
    /**
     * Unique end to end identity.
     * 
     * @var ?string $endToEndId
     */
	#[\JMS\Serializer\Annotation\SerializedName('endToEndId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $endToEndId = null;
    
    /**
     * Might be used by the ASPSP to transport details about transactions within a batch.
     * 
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EntryDetailsElement> $entryDetails
     */
	#[\JMS\Serializer\Annotation\SerializedName('entryDetails')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\EntryDetailsElement>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $entryDetails = null;
    
    /**
     * Is the identification of the transaction as used e.g. for reference for deltafunction on application level.
     * 
     * The same identification as for example used within camt.05x messages.
     * 
     * 
     * @var ?string $entryReference
     */
	#[\JMS\Serializer\Annotation\SerializedName('entryReference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $entryReference = null;
    
    /**
     * Identification of Mandates, e.g. a SEPA Mandate ID.
     * 
     * @var ?string $mandateId
     */
	#[\JMS\Serializer\Annotation\SerializedName('mandateId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mandateId = null;
    
    /**
     * Proprietary bank transaction code as used within a community or within an ASPSP e.g.
     * 
     * for MT94x based transaction reports.
     * 
     * 
     * @var ?string $proprietaryBankTransactionCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('proprietaryBankTransactionCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $proprietaryBankTransactionCode = null;
    
    /**
     * ExternalPurpose1Code from ISO 20022.
     * 
     * 
     * Values from ISO 20022 External Code List ExternalCodeSets_1Q2018 June 2018.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PurposeCodeEnum $purposeCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('purposeCode')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\PurposeCodeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PurposeCodeEnum $purposeCode = null;
    
    /**
     * Structured remittance information Max
     * 
     * 
     * 
     * @var ?string $remittanceInformationStructured
     */
	#[\JMS\Serializer\Annotation\SerializedName('remittanceInformationStructured')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $remittanceInformationStructured = null;
    
    /**
     * Array of structured remittance information.
     * 
     * 
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\RemittanceInformationStructured> $remittanceInformationStructuredArray
     */
	#[\JMS\Serializer\Annotation\SerializedName('remittanceInformationStructuredArray')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\RemittanceInformationStructured>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $remittanceInformationStructuredArray = null;
    
    /**
     * Unstructured remittance information.
     * 
     * 
     * 
     * @var ?string $remittanceInformationUnstructured
     */
	#[\JMS\Serializer\Annotation\SerializedName('remittanceInformationUnstructured')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $remittanceInformationUnstructured = null;
    
    /**
     * Array of unstructured remittance information.
     * 
     * 
     * 
     * @var ?array<string> $remittanceInformationUnstructuredArray
     */
	#[\JMS\Serializer\Annotation\SerializedName('remittanceInformationUnstructuredArray')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $remittanceInformationUnstructuredArray = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('transactionAmount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    public Amount $transactionAmount;
    
    /**
     * This identification is given by the attribute transactionId of the corresponding entry of a transaction list.
     * 
     * 
     * 
     * @var ?string $transactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('transactionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $transactionId = null;
    
    /**
     * Ultimate creditor.
     * 
     * @var ?string $ultimateCreditor
     */
	#[\JMS\Serializer\Annotation\SerializedName('ultimateCreditor')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ultimateCreditor = null;
    
    /**
     * Ultimate debtor.
     * 
     * @var ?string $ultimateDebtor
     */
	#[\JMS\Serializer\Annotation\SerializedName('ultimateDebtor')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ultimateDebtor = null;
    
    /**
     * The Date at which assets become available to the account owner in case of a credit.
     * 
     * @var ?\DateTime $valueDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('valueDate')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $valueDate = null;
    
	public function __construct()
	{
		$this->links = null;
		$this->additionalInformation = null;
		$this->additionalInformationStructured = null;
		$this->balanceAfterTransaction = null;
		$this->bankTransactionCode = null;
		$this->batchIndicator = null;
		$this->batchNumberOfTransactions = null;
		$this->bookingDate = null;
		$this->checkId = null;
		$this->creditorAccount = null;
		$this->creditorAgent = null;
		$this->creditorId = null;
		$this->creditorName = null;
		$this->currencyExchange = null;
		$this->debtorAccount = null;
		$this->debtorAgent = null;
		$this->debtorName = null;
		$this->endToEndId = null;
		$this->entryDetails = null;
		$this->entryReference = null;
		$this->mandateId = null;
		$this->proprietaryBankTransactionCode = null;
		$this->purposeCode = null;
		$this->remittanceInformationStructured = null;
		$this->remittanceInformationStructuredArray = null;
		$this->remittanceInformationUnstructured = null;
		$this->remittanceInformationUnstructuredArray = null;
		$this->transactionAmount = new \OpenAPI\OpenAPI\Models\Shared\Amount();
		$this->transactionId = null;
		$this->ultimateCreditor = null;
		$this->ultimateDebtor = null;
		$this->valueDate = null;
	}
}
