// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ElectoralDistrictScopeEnum - The geographic scope of this district. If unspecified the district's geography is not known. One of: national, statewide, congressional, stateUpper, stateLower, countywide, judicial, schoolBoard, cityWide, township, countyCouncil, cityCouncil, ward, special
type ElectoralDistrictScopeEnum string

const (
	ElectoralDistrictScopeEnumStatewide     ElectoralDistrictScopeEnum = "statewide"
	ElectoralDistrictScopeEnumCongressional ElectoralDistrictScopeEnum = "congressional"
	ElectoralDistrictScopeEnumStateUpper    ElectoralDistrictScopeEnum = "stateUpper"
	ElectoralDistrictScopeEnumStateLower    ElectoralDistrictScopeEnum = "stateLower"
	ElectoralDistrictScopeEnumCountywide    ElectoralDistrictScopeEnum = "countywide"
	ElectoralDistrictScopeEnumJudicial      ElectoralDistrictScopeEnum = "judicial"
	ElectoralDistrictScopeEnumSchoolBoard   ElectoralDistrictScopeEnum = "schoolBoard"
	ElectoralDistrictScopeEnumCitywide      ElectoralDistrictScopeEnum = "citywide"
	ElectoralDistrictScopeEnumSpecial       ElectoralDistrictScopeEnum = "special"
	ElectoralDistrictScopeEnumCountyCouncil ElectoralDistrictScopeEnum = "countyCouncil"
	ElectoralDistrictScopeEnumTownship      ElectoralDistrictScopeEnum = "township"
	ElectoralDistrictScopeEnumWard          ElectoralDistrictScopeEnum = "ward"
	ElectoralDistrictScopeEnumCityCouncil   ElectoralDistrictScopeEnum = "cityCouncil"
	ElectoralDistrictScopeEnumNational      ElectoralDistrictScopeEnum = "national"
)

func (e ElectoralDistrictScopeEnum) ToPointer() *ElectoralDistrictScopeEnum {
	return &e
}

func (e *ElectoralDistrictScopeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "statewide":
		fallthrough
	case "congressional":
		fallthrough
	case "stateUpper":
		fallthrough
	case "stateLower":
		fallthrough
	case "countywide":
		fallthrough
	case "judicial":
		fallthrough
	case "schoolBoard":
		fallthrough
	case "citywide":
		fallthrough
	case "special":
		fallthrough
	case "countyCouncil":
		fallthrough
	case "township":
		fallthrough
	case "ward":
		fallthrough
	case "cityCouncil":
		fallthrough
	case "national":
		*e = ElectoralDistrictScopeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ElectoralDistrictScopeEnum: %v", v)
	}
}

// ElectoralDistrict - Describes the geographic scope of a contest.
type ElectoralDistrict struct {
	// An identifier for this district, relative to its scope. For example, the 34th State Senate district would have id "34" and a scope of stateUpper.
	ID *string `json:"id,omitempty"`
	// The name of the district.
	Name *string `json:"name,omitempty"`
	// The geographic scope of this district. If unspecified the district's geography is not known. One of: national, statewide, congressional, stateUpper, stateLower, countywide, judicial, schoolBoard, cityWide, township, countyCouncil, cityCouncil, ward, special
	Scope *ElectoralDistrictScopeEnum `json:"scope,omitempty"`
}
