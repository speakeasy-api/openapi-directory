/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ContactIdentifiers } from "./contactidentifiers";
import { Message } from "./message";
import { PhoneNumber } from "./phonenumber";
import { Updated } from "./updated";
import { Expose, Type } from "class-transformer";

export class Conversation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "closed" })
  closed?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "contact" })
  @Type(() => ContactIdentifiers)
  contact?: ContactIdentifiers;

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Type(() => Updated)
  created?: Updated;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastMessage" })
  @Type(() => Message)
  lastMessage?: Message;

  @SpeakeasyMetadata()
  @Expose({ name: "phoneNumber" })
  @Type(() => PhoneNumber)
  phoneNumber?: PhoneNumber;

  @SpeakeasyMetadata()
  @Expose({ name: "unread" })
  unread?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  @Type(() => Updated)
  updated?: Updated;
}
