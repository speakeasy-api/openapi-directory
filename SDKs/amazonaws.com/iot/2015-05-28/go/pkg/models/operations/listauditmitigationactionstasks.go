// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// ListAuditMitigationActionsTasksTaskStatusEnum - Specify this filter to limit results to tasks that are in a specific state.
type ListAuditMitigationActionsTasksTaskStatusEnum string

const (
	ListAuditMitigationActionsTasksTaskStatusEnumInProgress ListAuditMitigationActionsTasksTaskStatusEnum = "IN_PROGRESS"
	ListAuditMitigationActionsTasksTaskStatusEnumCompleted  ListAuditMitigationActionsTasksTaskStatusEnum = "COMPLETED"
	ListAuditMitigationActionsTasksTaskStatusEnumFailed     ListAuditMitigationActionsTasksTaskStatusEnum = "FAILED"
	ListAuditMitigationActionsTasksTaskStatusEnumCanceled   ListAuditMitigationActionsTasksTaskStatusEnum = "CANCELED"
)

func (e *ListAuditMitigationActionsTasksTaskStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "IN_PROGRESS":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "FAILED":
		fallthrough
	case "CANCELED":
		*e = ListAuditMitigationActionsTasksTaskStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAuditMitigationActionsTasksTaskStatusEnum: %s", s)
	}
}

type ListAuditMitigationActionsTasksRequest struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// Specify this filter to limit results to tasks that were applied to results for a specific audit.
	AuditTaskID *string `queryParam:"style=form,explode=true,name=auditTaskId"`
	// Specify this filter to limit results to tasks that were completed or canceled on or before a specific date and time.
	EndTime time.Time `queryParam:"style=form,explode=true,name=endTime"`
	// Specify this filter to limit results to tasks that were applied to a specific audit finding.
	FindingID *string `queryParam:"style=form,explode=true,name=findingId"`
	// The maximum number of results to return at one time. The default is 25.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// The token for the next set of results.
	NextToken *string `queryParam:"style=form,explode=true,name=nextToken"`
	// Specify this filter to limit results to tasks that began on or after a specific date and time.
	StartTime time.Time `queryParam:"style=form,explode=true,name=startTime"`
	// Specify this filter to limit results to tasks that are in a specific state.
	TaskStatus *ListAuditMitigationActionsTasksTaskStatusEnum `queryParam:"style=form,explode=true,name=taskStatus"`
}

type ListAuditMitigationActionsTasksResponse struct {
	ContentType string
	// InternalFailureException
	InternalFailureException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	ListAuditMitigationActionsTasksResponse *shared.ListAuditMitigationActionsTasksResponse
	StatusCode                              int
	RawResponse                             *http.Response
	// ThrottlingException
	ThrottlingException interface{}
}
