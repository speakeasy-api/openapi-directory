<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TestRequest - Test request is a minimalist wrapper for requesting the launch of a new test
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TestRequest
{
    /**
     * A restriction on service operations to test
     * 
     * @var ?array<string> $filteredOperations
     */
	#[\JMS\Serializer\Annotation\SerializedName('filteredOperations')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $filteredOperations = null;
    
    /**
     * Specification of additional headers for a Service/API operations. Keys are operation name or "globals" (if header applies to all), values are Header objects DTO.
     * 
     * @var ?array<string, array<\OpenAPI\OpenAPI\Models\Shared\HeaderDTO>> $operationHeaders
     */
	#[\JMS\Serializer\Annotation\SerializedName('operationHeaders')]
    #[\JMS\Serializer\Annotation\Type('array<string, array<OpenAPI\OpenAPI\Models\Shared\HeaderDTO>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $operationHeaders = null;
    
    /**
     * Type of test strategy (different strategies are implemented by different runners)
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\TestRunnerTypeEnum $runnerType
     */
	#[\JMS\Serializer\Annotation\SerializedName('runnerType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TestRunnerTypeEnum>')]
    public TestRunnerTypeEnum $runnerType;
    
    /**
     * The name of Secret to use for connecting the test endpoint
     * 
     * @var ?string $secretName
     */
	#[\JMS\Serializer\Annotation\SerializedName('secretName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $secretName = null;
    
    /**
     * Unique identifier of service to test
     * 
     * @var string $serviceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('serviceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $serviceId;
    
    /**
     * Endpoint to test for this service
     * 
     * @var string $testEndpoint
     */
	#[\JMS\Serializer\Annotation\SerializedName('testEndpoint')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $testEndpoint;
    
    /**
     * The maximum time (in milliseconds) to wait for this test ends
     * 
     * @var int $timeout
     */
	#[\JMS\Serializer\Annotation\SerializedName('timeout')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $timeout;
    
	public function __construct()
	{
		$this->filteredOperations = null;
		$this->operationHeaders = null;
		$this->runnerType = \OpenAPI\OpenAPI\Models\Shared\TestRunnerTypeEnum::HTTP;
		$this->secretName = null;
		$this->serviceId = "";
		$this->testEndpoint = "";
		$this->timeout = 0;
	}
}
