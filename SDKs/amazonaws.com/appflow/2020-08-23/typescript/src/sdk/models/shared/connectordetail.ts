/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConnectorProvisioningTypeEnum } from "./connectorprovisioningtypeenum";
import { ConnectorTypeEnum } from "./connectortypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Information about the registered connector.
 */
export class ConnectorDetail extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "applicationType" })
  applicationType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorDescription" })
  connectorDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorLabel" })
  connectorLabel?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorModes" })
  connectorModes?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "connectorName" })
  connectorName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorOwner" })
  connectorOwner?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorProvisioningType" })
  connectorProvisioningType?: ConnectorProvisioningTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorType" })
  connectorType?: ConnectorTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "connectorVersion" })
  connectorVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "registeredAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  registeredAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "registeredBy" })
  registeredBy?: string;
}
