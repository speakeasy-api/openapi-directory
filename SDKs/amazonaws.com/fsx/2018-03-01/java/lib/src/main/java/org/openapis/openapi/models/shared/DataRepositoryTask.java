/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DataRepositoryTask - A description of the data repository task. You use data repository tasks to perform bulk transfer operations between an Amazon FSx for Lustre file system and a linked data repository. An Amazon File Cache resource uses a task to automatically release files from the cache.
 */
public class DataRepositoryTask {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CapacityToRelease")
    public Long capacityToRelease;
    public DataRepositoryTask withCapacityToRelease(Long capacityToRelease) {
        this.capacityToRelease = capacityToRelease;
        return this;
    }
    
    /**
     * The time that the resource was created, in seconds (since 1970-01-01T00:00:00Z), also known as Unix time.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;
    public DataRepositoryTask withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("EndTime")
    public OffsetDateTime endTime;
    public DataRepositoryTask withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailureDetails")
    public DataRepositoryTaskFailureDetails failureDetails;
    public DataRepositoryTask withFailureDetails(DataRepositoryTaskFailureDetails failureDetails) {
        this.failureDetails = failureDetails;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FileCacheId")
    public String fileCacheId;
    public DataRepositoryTask withFileCacheId(String fileCacheId) {
        this.fileCacheId = fileCacheId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FileSystemId")
    public String fileSystemId;
    public DataRepositoryTask withFileSystemId(String fileSystemId) {
        this.fileSystemId = fileSystemId;
        return this;
    }
    
    @JsonProperty("Lifecycle")
    public DataRepositoryTaskLifecycleEnum lifecycle;
    public DataRepositoryTask withLifecycle(DataRepositoryTaskLifecycleEnum lifecycle) {
        this.lifecycle = lifecycle;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Paths")
    public String[] paths;
    public DataRepositoryTask withPaths(String[] paths) {
        this.paths = paths;
        return this;
    }
    
    /**
     * Provides a report detailing the data repository task results of the files processed that match the criteria specified in the report &lt;code&gt;Scope&lt;/code&gt; parameter. FSx delivers the report to the file system's linked data repository in Amazon S3, using the path specified in the report &lt;code&gt;Path&lt;/code&gt; parameter. You can specify whether or not a report gets generated for a task using the &lt;code&gt;Enabled&lt;/code&gt; parameter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Report")
    public CompletionReport report;
    public DataRepositoryTask withReport(CompletionReport report) {
        this.report = report;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) for a given resource. ARNs uniquely identify Amazon Web Services resources. We require an ARN when you need to specify a resource unambiguously across all of Amazon Web Services. For more information, see &lt;a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"&gt;Amazon Resource Names (ARNs)&lt;/a&gt; in the &lt;i&gt;Amazon Web Services General Reference&lt;/i&gt;.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ResourceARN")
    public String resourceARN;
    public DataRepositoryTask withResourceARN(String resourceARN) {
        this.resourceARN = resourceARN;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartTime")
    public OffsetDateTime startTime;
    public DataRepositoryTask withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public DataRepositoryTaskStatus status;
    public DataRepositoryTask withStatus(DataRepositoryTaskStatus status) {
        this.status = status;
        return this;
    }
    
    /**
     * A list of &lt;code&gt;Tag&lt;/code&gt; values, with a maximum of 50 elements.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public Tag[] tags;
    public DataRepositoryTask withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    @JsonProperty("TaskId")
    public String taskId;
    public DataRepositoryTask withTaskId(String taskId) {
        this.taskId = taskId;
        return this;
    }
    
    @JsonProperty("Type")
    public DataRepositoryTaskTypeEnum type;
    public DataRepositoryTask withType(DataRepositoryTaskTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
