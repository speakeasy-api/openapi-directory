// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// HitsGetHitsFilterEnum - Filter event type ("spiders"/"uniques"/"nonuniques"/"conversions")
type HitsGetHitsFilterEnum string

const (
	HitsGetHitsFilterEnumSpiders     HitsGetHitsFilterEnum = "spiders"
	HitsGetHitsFilterEnumUniques     HitsGetHitsFilterEnum = "uniques"
	HitsGetHitsFilterEnumNonuniques  HitsGetHitsFilterEnum = "nonuniques"
	HitsGetHitsFilterEnumConversions HitsGetHitsFilterEnum = "conversions"
)

func (e HitsGetHitsFilterEnum) ToPointer() *HitsGetHitsFilterEnum {
	return &e
}

func (e *HitsGetHitsFilterEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "spiders":
		fallthrough
	case "uniques":
		fallthrough
	case "nonuniques":
		fallthrough
	case "conversions":
		*e = HitsGetHitsFilterEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HitsGetHitsFilterEnum: %v", v)
	}
}

// HitsGetHitsTimeframeEnum - Timeframe of the request. See list at $timeframeList
type HitsGetHitsTimeframeEnum string

const (
	HitsGetHitsTimeframeEnumYesterday     HitsGetHitsTimeframeEnum = "yesterday"
	HitsGetHitsTimeframeEnumLast7         HitsGetHitsTimeframeEnum = "last7"
	HitsGetHitsTimeframeEnumLast30        HitsGetHitsTimeframeEnum = "last30"
	HitsGetHitsTimeframeEnumLastmonth     HitsGetHitsTimeframeEnum = "lastmonth"
	HitsGetHitsTimeframeEnumCurrentmonth  HitsGetHitsTimeframeEnum = "currentmonth"
	HitsGetHitsTimeframeEnumPreviousmonth HitsGetHitsTimeframeEnum = "previousmonth"
	HitsGetHitsTimeframeEnumLast90        HitsGetHitsTimeframeEnum = "last90"
	HitsGetHitsTimeframeEnumLast120       HitsGetHitsTimeframeEnum = "last120"
	HitsGetHitsTimeframeEnumLast180       HitsGetHitsTimeframeEnum = "last180"
	HitsGetHitsTimeframeEnumCustom        HitsGetHitsTimeframeEnum = "custom"
)

func (e HitsGetHitsTimeframeEnum) ToPointer() *HitsGetHitsTimeframeEnum {
	return &e
}

func (e *HitsGetHitsTimeframeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "yesterday":
		fallthrough
	case "last7":
		fallthrough
	case "last30":
		fallthrough
	case "lastmonth":
		fallthrough
	case "currentmonth":
		fallthrough
	case "previousmonth":
		fallthrough
	case "last90":
		fallthrough
	case "last120":
		fallthrough
	case "last180":
		fallthrough
	case "custom":
		*e = HitsGetHitsTimeframeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for HitsGetHitsTimeframeEnum: %v", v)
	}
}

type HitsGetHitsRequest struct {
	// Filter event type ("spiders"/"uniques"/"nonuniques"/"conversions")
	Filter *HitsGetHitsFilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// If using a "custom" timeFrame you can specify the starting day (YYYYMMDD)
	FromDay *string `queryParam:"style=form,explode=true,name=fromDay"`
	// Limit results to this number
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Offset where to start from (it's the lastKey field in the response object)
	Offset *string `queryParam:"style=form,explode=true,name=offset"`
	// Timeframe of the request. See list at $timeframeList
	Timeframe HitsGetHitsTimeframeEnum `queryParam:"style=form,explode=true,name=timeframe"`
	// If using a "custom" timeFrame you can specify the ending day (YYYYMMDD)
	ToDay *string `queryParam:"style=form,explode=true,name=toDay"`
}

type HitsGetHitsResponse struct {
	APICoreDtoClickStreamHitListPage *shared.APICoreDtoClickStreamHitListPage
	ContentType                      string
	StatusCode                       int
	RawResponse                      *http.Response
}
