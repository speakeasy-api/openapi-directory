/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Represents the data for a typed attribute. You can set one, and only one, of the elements. Each attribute in an item is a name-value pair. Attributes have a single value.
 */
export class TypedAttributeValue extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "BinaryValue" })
  binaryValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "BooleanValue" })
  booleanValue?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "DatetimeValue" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  datetimeValue?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "NumberValue" })
  numberValue?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StringValue" })
  stringValue?: string;
}
