// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FraudsterRegistrationJobStatusEnum string

const (
	FraudsterRegistrationJobStatusEnumSubmitted           FraudsterRegistrationJobStatusEnum = "SUBMITTED"
	FraudsterRegistrationJobStatusEnumInProgress          FraudsterRegistrationJobStatusEnum = "IN_PROGRESS"
	FraudsterRegistrationJobStatusEnumCompleted           FraudsterRegistrationJobStatusEnum = "COMPLETED"
	FraudsterRegistrationJobStatusEnumCompletedWithErrors FraudsterRegistrationJobStatusEnum = "COMPLETED_WITH_ERRORS"
	FraudsterRegistrationJobStatusEnumFailed              FraudsterRegistrationJobStatusEnum = "FAILED"
)

func (e FraudsterRegistrationJobStatusEnum) ToPointer() *FraudsterRegistrationJobStatusEnum {
	return &e
}

func (e *FraudsterRegistrationJobStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUBMITTED":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "COMPLETED_WITH_ERRORS":
		fallthrough
	case "FAILED":
		*e = FraudsterRegistrationJobStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FraudsterRegistrationJobStatusEnum: %v", v)
	}
}
