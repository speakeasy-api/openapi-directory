/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ChannelConversionPing - Pings that the app shall fire (authenticated by biscotti cookie). Each ping has a context, in which the app must fire the ping, and a url identifying the ping.
 */
public class ChannelConversionPing {
    /**
     * Defines the context of the ping.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("context")
    public ChannelConversionPingContextEnum context;

    public ChannelConversionPing withContext(ChannelConversionPingContextEnum context) {
        this.context = context;
        return this;
    }
    
    /**
     * The url (without the schema) that the player shall send the ping to. It's at caller's descretion to decide which schema to use (http vs https) Example of a returned url: //googleads.g.doubleclick.net/pagead/ viewthroughconversion/962985656/?data=path%3DtHe_path%3Btype%3D cview%3Butuid%3DGISQtTNGYqaYl4sKxoVvKA&amp;labe=default The caller must append biscotti authentication (ms param in case of mobile, for example) to this ping.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conversionUrl")
    public String conversionUrl;

    public ChannelConversionPing withConversionUrl(String conversionUrl) {
        this.conversionUrl = conversionUrl;
        return this;
    }
    
    public ChannelConversionPing(){}
}
