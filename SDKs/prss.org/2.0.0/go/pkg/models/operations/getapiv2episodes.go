// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type GetAPIV2EpisodesSecurity struct {
	CdOauth2 string `security:"scheme,type=oauth2,name=Authorization"`
}

// GetAPIV2EpisodesOrderByIDEnum - The sort order of the list of episodes, based on episode ID. If unspecified, the episodes are returned in random order. If using paging to iterate through the results, sort order should be specified.
type GetAPIV2EpisodesOrderByIDEnum string

const (
	GetAPIV2EpisodesOrderByIDEnumAsc  GetAPIV2EpisodesOrderByIDEnum = "asc"
	GetAPIV2EpisodesOrderByIDEnumDesc GetAPIV2EpisodesOrderByIDEnum = "desc"
)

func (e *GetAPIV2EpisodesOrderByIDEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetAPIV2EpisodesOrderByIDEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAPIV2EpisodesOrderByIDEnum: %s", s)
	}
}

type GetAPIV2EpisodesRequest struct {
	// Matches on the begin air date of the episode (inclusive).
	BeginAirDateAfter *time.Time `queryParam:"style=form,explode=true,name=beginAirDateAfter"`
	// Matches on the end air date of the episode (inclusive).
	EndAirDateBefore *time.Time `queryParam:"style=form,explode=true,name=endAirDateBefore"`
	// Matches on the ID of the episode.
	ID *int64 `queryParam:"style=form,explode=true,name=id"`
	// The sort order of the list of episodes, based on episode ID. If unspecified, the episodes are returned in random order. If using paging to iterate through the results, sort order should be specified.
	OrderByID *GetAPIV2EpisodesOrderByIDEnum `queryParam:"style=form,explode=true,name=orderById"`
	// The number of items to return. Must be between 0 and 500, inclusive.
	PageSize *int `queryParam:"style=form,explode=true,name=pageSize"`
	// The start page of the results to return. The first item is indexed at 0.
	PageStart *int `queryParam:"style=form,explode=true,name=pageStart"`
	// Matches on the ID of the program that owns the episode.
	ProgramID int64 `queryParam:"style=form,explode=true,name=programId"`
}

type GetAPIV2EpisodesResponse struct {
	ContentType string
	// The matching episode.
	Episodes []shared.Episode
	// The request is missing required data or invalid.
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
}
