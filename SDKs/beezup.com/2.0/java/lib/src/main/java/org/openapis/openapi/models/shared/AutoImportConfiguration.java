/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * AutoImportConfiguration - Auto import configuration
 */
public class AutoImportConfiguration {
    /**
     * Describe how you want to manage the duplication of the product value
     */
    @JsonProperty("duplicateProductConfiguration")
    public DuplicateProductValueConfiguration duplicateProductConfiguration;

    public AutoImportConfiguration withDuplicateProductConfiguration(DuplicateProductValueConfiguration duplicateProductConfiguration) {
        this.duplicateProductConfiguration = duplicateProductConfiguration;
        return this;
    }
    
    /**
     * Describe the input configuration
     */
    @JsonProperty("input")
    public InputConfiguration input;

    public AutoImportConfiguration withInput(InputConfiguration input) {
        this.input = input;
        return this;
    }
    
    /**
     * The user identifier
     */
    @JsonProperty("inputConfiguredByUserId")
    public String inputConfiguredByUserId;

    public AutoImportConfiguration withInputConfiguredByUserId(String inputConfiguredByUserId) {
        this.inputConfiguredByUserId = inputConfiguredByUserId;
        return this;
    }
    
    /**
     * The user identifier
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pauseStatusChangedByUserId")
    public String pauseStatusChangedByUserId;

    public AutoImportConfiguration withPauseStatusChangedByUserId(String pauseStatusChangedByUserId) {
        this.pauseStatusChangedByUserId = pauseStatusChangedByUserId;
        return this;
    }
    
    /**
     * Indicate when the pause status has changed in UTC date.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("pauseStatusChangedUtcDate")
    public OffsetDateTime pauseStatusChangedUtcDate;

    public AutoImportConfiguration withPauseStatusChangedUtcDate(OffsetDateTime pauseStatusChangedUtcDate) {
        this.pauseStatusChangedUtcDate = pauseStatusChangedUtcDate;
        return this;
    }
    
    /**
     * Indicate if the auto import is in pause or not.
     */
    @JsonProperty("paused")
    public Boolean paused;

    public AutoImportConfiguration withPaused(Boolean paused) {
        this.paused = paused;
        return this;
    }
    
    /**
     * The user identifier
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scheduledByUserId")
    public String scheduledByUserId;

    public AutoImportConfiguration withScheduledByUserId(String scheduledByUserId) {
        this.scheduledByUserId = scheduledByUserId;
        return this;
    }
    
    /**
     * Indicate the time zone name of the scheduling. If the scheduling type is "Schedule"
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("schedulingLocalTimeZoneName")
    public String schedulingLocalTimeZoneName;

    public AutoImportConfiguration withSchedulingLocalTimeZoneName(String schedulingLocalTimeZoneName) {
        this.schedulingLocalTimeZoneName = schedulingLocalTimeZoneName;
        return this;
    }
    
    /**
     * Indicate the scheduling type. Schedule or Interval. We recommand you to use interval for a better reporting.
     */
    @JsonProperty("schedulingType")
    public SchedulingTypeEnum schedulingType;

    public AutoImportConfiguration withSchedulingType(SchedulingTypeEnum schedulingType) {
        this.schedulingType = schedulingType;
        return this;
    }
    
    /**
     * Indicate the scheduling value. If the scheduling type is Interval then the value will be a duration otherwise the values will be the time.
     */
    @JsonProperty("schedulingValue")
    public String[] schedulingValue;

    public AutoImportConfiguration withSchedulingValue(String[] schedulingValue) {
        this.schedulingValue = schedulingValue;
        return this;
    }
    
    public AutoImportConfiguration(@JsonProperty("duplicateProductConfiguration") DuplicateProductValueConfiguration duplicateProductConfiguration, @JsonProperty("input") InputConfiguration input, @JsonProperty("inputConfiguredByUserId") String inputConfiguredByUserId, @JsonProperty("paused") Boolean paused, @JsonProperty("schedulingType") SchedulingTypeEnum schedulingType, @JsonProperty("schedulingValue") String[] schedulingValue) {
        this.duplicateProductConfiguration = duplicateProductConfiguration;
        this.input = input;
        this.inputConfiguredByUserId = inputConfiguredByUserId;
        this.paused = paused;
        this.schedulingType = schedulingType;
        this.schedulingValue = schedulingValue;
  }
}
