/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum PostOauthV1TokenCreateRequestBodyGrantTypeEnum {
  AuthorizationCode = "authorization_code",
  RefreshToken = "refresh_token",
}

export class PostOauthV1TokenCreateRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "form, name=client_id" })
  clientId?: string;

  @SpeakeasyMetadata({ data: "form, name=client_secret" })
  clientSecret?: string;

  @SpeakeasyMetadata({ data: "form, name=code" })
  code?: string;

  @SpeakeasyMetadata({ data: "form, name=grant_type" })
  grantType?: PostOauthV1TokenCreateRequestBodyGrantTypeEnum;

  @SpeakeasyMetadata({ data: "form, name=redirect_uri" })
  redirectUri?: string;

  @SpeakeasyMetadata({ data: "form, name=refresh_token" })
  refreshToken?: string;
}

export class PostOauthV1TokenCreateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * successful operation
   */
  @SpeakeasyMetadata()
  tokenResponseIF?: shared.TokenResponseIF;
}
