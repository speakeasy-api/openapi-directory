// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CustomerCustomerContractTypeEnum - Customer type
type CustomerCustomerContractTypeEnum string

const (
	CustomerCustomerContractTypeEnumDemo CustomerCustomerContractTypeEnum = "demo"
	CustomerCustomerContractTypeEnumFree CustomerCustomerContractTypeEnum = "free"
	CustomerCustomerContractTypeEnumPay  CustomerCustomerContractTypeEnum = "pay"
)

func (e *CustomerCustomerContractTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "demo":
		fallthrough
	case "free":
		fallthrough
	case "pay":
		*e = CustomerCustomerContractTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomerCustomerContractTypeEnum: %s", s)
	}
}

// Customer - Customer information
type Customer struct {
	// &#128679; Deprecated since v4.8.0
	//
	// Customer activation code string:
	//
	// * valid only for types `free` and `demo`
	//
	// * for `pay` customers it is empty
	ActivationCode *string `json:"activationCode,omitempty"`
	// Number of guest user accounts
	CntGuestUser int `json:"cntGuestUser"`
	// Number of internal user accounts
	CntInternalUser int `json:"cntInternalUser"`
	// Company name
	CompanyName string `json:"companyName"`
	// Creation date
	CreatedAt time.Time `json:"createdAt"`
	// List of customer attributes
	CustomerAttributes *CustomerAttributes `json:"customerAttributes,omitempty"`
	// Customer type
	CustomerContractType CustomerCustomerContractTypeEnum `json:"customerContractType"`
	// &#128640; Since v4.21.0
	//
	// Customer UUID
	CustomerUUID string `json:"customerUuid"`
	// Unique identifier for the customer
	ID int64 `json:"id"`
	// Customer is locked:
	//
	// * `false` - unlocked
	//
	// * `true` - locked
	//
	//
	//
	// All users of this customer will be blocked and can not login anymore.
	IsLocked *bool `json:"isLocked,omitempty"`
	// Date of last seen login for the customer
	LastLoginAt *time.Time `json:"lastLoginAt,omitempty"`
	// &#128679; Deprecated since v4.7.0
	//
	// Customer lock status:
	//
	// * `false` - unlocked
	//
	// * `true` - locked
	//
	//
	//
	// Please use `isLocked` instead.
	//
	// All users of this customer will be blocked and can not login anymore.
	LockStatus bool `json:"lockStatus"`
	// Provider customer ID
	ProviderCustomerID *string `json:"providerCustomerId,omitempty"`
	// Maximal disc space which can be allocated by customer in bytes. -1 for unlimited
	QuotaMax int64 `json:"quotaMax"`
	// Used amount of disc space in bytes
	QuotaUsed int64 `json:"quotaUsed"`
	// Number of days left for trial period (relevant only for type `demo`)
	//
	// (not used)
	TrialDaysLeft *int `json:"trialDaysLeft,omitempty"`
	// Modification date
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	// Maximal number of users
	UserMax int `json:"userMax"`
	// Number of users which are already allocated.
	UserUsed int `json:"userUsed"`
	// &#128640; Since v4.19.0
	//
	// Maximal number of webhooks
	WebhooksMax *int64 `json:"webhooksMax,omitempty"`
}
