"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleapiserviceusagev1serviceconfig as shared_googleapiserviceusagev1serviceconfig
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleAPIServiceusageV1ServiceStateEnum(str, Enum):
    r"""Whether or not the service has been enabled for use by the consumer."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    DISABLED = 'DISABLED'
    ENABLED = 'ENABLED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleAPIServiceusageV1Service:
    r"""A service that is available for use by the consumer."""
    
    config: Optional[shared_googleapiserviceusagev1serviceconfig.GoogleAPIServiceusageV1ServiceConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('config'), 'exclude': lambda f: f is None }})
    r"""The configuration of the service."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name of the consumer and service. A valid name would be: - projects/123/services/serviceusage.googleapis.com"""  
    parent: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parent'), 'exclude': lambda f: f is None }})
    r"""The resource name of the consumer. A valid name would be: - projects/123"""  
    state: Optional[GoogleAPIServiceusageV1ServiceStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Whether or not the service has been enabled for use by the consumer."""  
    