<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class UpdateAccountUpdateAccountRequestBodyAccountQuotaValues
{
    /**
     * Whether the system should email the account owner if the account storage exceeds the noticeThreshold value. Storage notice emails are sent no mo once per day.
     * 
     * @var ?bool $noticeEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('noticeEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $noticeEnabled = null;
    
    /**
     * Percent of account storage that would trigger a notice email. Must be a whole number between 70 and 100 (inclusive).
     * 
     * @var ?int $noticeThreshold
     */
	#[\JMS\Serializer\Annotation\SerializedName('noticeThreshold')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $noticeThreshold = null;
    
    /**
     * Whether the system should email the account owner if the daily transaction usage exceeds the transactionsNoticeThreshold value. Transaction notice emails are sent no more than once per day.
     * 
     * @var ?bool $transactionsNoticeEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('transactionsNoticeEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $transactionsNoticeEnabled = null;
    
    /**
     * Percent of daily transaction usage that would trigger a notice email. Must be a whole number between 70 and 100 (inclusive).
     * 
     * @var ?int $transactionsNoticeThreshold
     */
	#[\JMS\Serializer\Annotation\SerializedName('transactionsNoticeThreshold')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $transactionsNoticeThreshold = null;
    
	public function __construct()
	{
		$this->noticeEnabled = null;
		$this->noticeThreshold = null;
		$this->transactionsNoticeEnabled = null;
		$this->transactionsNoticeThreshold = null;
	}
}
