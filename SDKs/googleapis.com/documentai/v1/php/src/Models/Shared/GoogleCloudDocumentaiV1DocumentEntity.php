<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudDocumentaiV1DocumentEntity - An entity that could be a phrase in the text or a property that belongs to the document. It is a known entity type, such as a person, an organization, or location.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudDocumentaiV1DocumentEntity
{
    /**
     * Optional. Confidence of detected Schema entity. Range `[0, 1]`.
     * 
     * @var ?float $confidence
     */
	#[\JMS\Serializer\Annotation\SerializedName('confidence')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $confidence = null;
    
    /**
     * Optional. Canonical id. This will be a unique value in the entity list for this document.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Optional. Deprecated. Use `id` field instead.
     * 
     * @var ?string $mentionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('mentionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mentionId = null;
    
    /**
     * Optional. Text value of the entity e.g. `1600 Amphitheatre Pkwy`.
     * 
     * @var ?string $mentionText
     */
	#[\JMS\Serializer\Annotation\SerializedName('mentionText')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mentionText = null;
    
    /**
     * Parsed and normalized entity value.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudDocumentaiV1DocumentEntityNormalizedValue $normalizedValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('normalizedValue')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudDocumentaiV1DocumentEntityNormalizedValue')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudDocumentaiV1DocumentEntityNormalizedValue $normalizedValue = null;
    
    /**
     * Referencing the visual context of the entity in the Document.pages. Page anchors can be cross-page, consist of multiple bounding polygons and optionally reference specific layout element types.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudDocumentaiV1DocumentPageAnchor $pageAnchor
     */
	#[\JMS\Serializer\Annotation\SerializedName('pageAnchor')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudDocumentaiV1DocumentPageAnchor')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudDocumentaiV1DocumentPageAnchor $pageAnchor = null;
    
    /**
     * Optional. Entities can be nested to form a hierarchical data structure representing the content in the document.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\GoogleCloudDocumentaiV1DocumentEntity> $properties
     */
	#[\JMS\Serializer\Annotation\SerializedName('properties')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\GoogleCloudDocumentaiV1DocumentEntity>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $properties = null;
    
    /**
     * Structure to identify provenance relationships between annotations in different revisions.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudDocumentaiV1DocumentProvenance $provenance
     */
	#[\JMS\Serializer\Annotation\SerializedName('provenance')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudDocumentaiV1DocumentProvenance')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudDocumentaiV1DocumentProvenance $provenance = null;
    
    /**
     * Optional. Whether the entity will be redacted for de-identification purposes.
     * 
     * @var ?bool $redacted
     */
	#[\JMS\Serializer\Annotation\SerializedName('redacted')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $redacted = null;
    
    /**
     * Text reference indexing into the Document.text.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudDocumentaiV1DocumentTextAnchor $textAnchor
     */
	#[\JMS\Serializer\Annotation\SerializedName('textAnchor')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudDocumentaiV1DocumentTextAnchor')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudDocumentaiV1DocumentTextAnchor $textAnchor = null;
    
    /**
     * Required. Entity type from a schema e.g. `Address`.
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->confidence = null;
		$this->id = null;
		$this->mentionId = null;
		$this->mentionText = null;
		$this->normalizedValue = null;
		$this->pageAnchor = null;
		$this->properties = null;
		$this->provenance = null;
		$this->redacted = null;
		$this->textAnchor = null;
		$this->type = null;
	}
}
