// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CapabilityHealthReasonEnum string

const (
	CapabilityHealthReasonEnumNoRegisteredAgent        CapabilityHealthReasonEnum = "NO_REGISTERED_AGENT"
	CapabilityHealthReasonEnumInvalidIPOwnership       CapabilityHealthReasonEnum = "INVALID_IP_OWNERSHIP"
	CapabilityHealthReasonEnumNotAuthorizedToCreateSlr CapabilityHealthReasonEnum = "NOT_AUTHORIZED_TO_CREATE_SLR"
	CapabilityHealthReasonEnumUnverifiedIPOwnership    CapabilityHealthReasonEnum = "UNVERIFIED_IP_OWNERSHIP"
	CapabilityHealthReasonEnumInitializingDataplane    CapabilityHealthReasonEnum = "INITIALIZING_DATAPLANE"
	CapabilityHealthReasonEnumDataplaneFailure         CapabilityHealthReasonEnum = "DATAPLANE_FAILURE"
	CapabilityHealthReasonEnumHealthy                  CapabilityHealthReasonEnum = "HEALTHY"
)

func (e CapabilityHealthReasonEnum) ToPointer() *CapabilityHealthReasonEnum {
	return &e
}

func (e *CapabilityHealthReasonEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "NO_REGISTERED_AGENT":
		fallthrough
	case "INVALID_IP_OWNERSHIP":
		fallthrough
	case "NOT_AUTHORIZED_TO_CREATE_SLR":
		fallthrough
	case "UNVERIFIED_IP_OWNERSHIP":
		fallthrough
	case "INITIALIZING_DATAPLANE":
		fallthrough
	case "DATAPLANE_FAILURE":
		fallthrough
	case "HEALTHY":
		*e = CapabilityHealthReasonEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CapabilityHealthReasonEnum: %v", v)
	}
}
