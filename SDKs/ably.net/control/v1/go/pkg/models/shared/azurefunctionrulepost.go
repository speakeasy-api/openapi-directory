// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AzureFunctionRulePostRuleTypeEnum string

const (
	AzureFunctionRulePostRuleTypeEnumHTTPAzureFunction AzureFunctionRulePostRuleTypeEnum = "http/azure-function"
)

func (e AzureFunctionRulePostRuleTypeEnum) ToPointer() *AzureFunctionRulePostRuleTypeEnum {
	return &e
}

func (e *AzureFunctionRulePostRuleTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "http/azure-function":
		*e = AzureFunctionRulePostRuleTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AzureFunctionRulePostRuleTypeEnum: %v", v)
	}
}

type AzureFunctionRulePostTargetHeaders struct {
	Name  *string `json:"name,omitempty"`
	Value *string `json:"value,omitempty"`
}

type AzureFunctionRulePostTarget struct {
	AzureAppID        string                               `json:"azureAppId"`
	AzureFunctionName string                               `json:"azureFunctionName"`
	Enveloped         *bool                                `json:"enveloped,omitempty"`
	Format            *string                              `json:"format,omitempty"`
	Headers           []AzureFunctionRulePostTargetHeaders `json:"headers,omitempty"`
	SigningKeyID      *string                              `json:"signingKeyId,omitempty"`
}

type AzureFunctionRulePost struct {
	RequestMode string                            `json:"requestMode"`
	RuleType    AzureFunctionRulePostRuleTypeEnum `json:"ruleType"`
	Source      RuleSource                        `json:"source"`
	Status      *string                           `json:"status,omitempty"`
	Target      AzureFunctionRulePostTarget       `json:"target"`
}
