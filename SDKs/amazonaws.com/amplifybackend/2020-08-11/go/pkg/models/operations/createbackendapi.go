// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateBackendAPIPathParams struct {
	// The app ID.
	AppID string `pathParam:"style=simple,explode=false,name=appId"`
}

type CreateBackendAPIHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum - The strategy for conflict resolution.
type CreateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum string

const (
	CreateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnumOptimisticConcurrency CreateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum = "OPTIMISTIC_CONCURRENCY"
	CreateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnumLambda                CreateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum = "LAMBDA"
	CreateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnumAutomerge             CreateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum = "AUTOMERGE"
	CreateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnumNone                  CreateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum = "NONE"
)

func (e *CreateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "OPTIMISTIC_CONCURRENCY":
		fallthrough
	case "LAMBDA":
		fallthrough
	case "AUTOMERGE":
		fallthrough
	case "NONE":
		*e = CreateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum: %s", s)
	}
}

// CreateBackendAPIRequestBodyResourceConfigConflictResolution - The conflict resolution strategy for your data stored in the data models.
type CreateBackendAPIRequestBodyResourceConfigConflictResolution struct {
	ResolutionStrategy *CreateBackendAPIRequestBodyResourceConfigConflictResolutionResolutionStrategyEnum `json:"ResolutionStrategy,omitempty"`
}

// CreateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum - Describes the authentication mode.
type CreateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum string

const (
	CreateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnumAPIKey                 CreateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum = "API_KEY"
	CreateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnumAwsIam                 CreateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum = "AWS_IAM"
	CreateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnumAmazonCognitoUserPools CreateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum = "AMAZON_COGNITO_USER_POOLS"
	CreateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnumOpenidConnect          CreateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum = "OPENID_CONNECT"
)

func (e *CreateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "API_KEY":
		fallthrough
	case "AWS_IAM":
		fallthrough
	case "AMAZON_COGNITO_USER_POOLS":
		fallthrough
	case "OPENID_CONNECT":
		*e = CreateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum: %s", s)
	}
}

// CreateBackendAPIRequestBodyResourceConfigDefaultAuthTypeSettings - Describes settings for the authentication mode.
type CreateBackendAPIRequestBodyResourceConfigDefaultAuthTypeSettings struct {
	CognitoUserPoolID  *string  `json:"CognitoUserPoolId,omitempty"`
	Description        *string  `json:"Description,omitempty"`
	ExpirationTime     *float64 `json:"ExpirationTime,omitempty"`
	OpenIDAuthTTL      *string  `json:"OpenIDAuthTTL,omitempty"`
	OpenIDClientID     *string  `json:"OpenIDClientId,omitempty"`
	OpenIDIatTTL       *string  `json:"OpenIDIatTTL,omitempty"`
	OpenIDIssueURL     *string  `json:"OpenIDIssueURL,omitempty"`
	OpenIDProviderName *string  `json:"OpenIDProviderName,omitempty"`
}

// CreateBackendAPIRequestBodyResourceConfigDefaultAuthType - The default authentication type for interacting with the configured data models in your Amplify project.
type CreateBackendAPIRequestBodyResourceConfigDefaultAuthType struct {
	Mode     *CreateBackendAPIRequestBodyResourceConfigDefaultAuthTypeModeEnum `json:"Mode,omitempty"`
	Settings *CreateBackendAPIRequestBodyResourceConfigDefaultAuthTypeSettings `json:"Settings,omitempty"`
}

// CreateBackendAPIRequestBodyResourceConfig - The resource config for the data model, configured as a part of the Amplify project.
type CreateBackendAPIRequestBodyResourceConfig struct {
	AdditionalAuthTypes []shared.BackendAPIAuthType                                  `json:"AdditionalAuthTypes,omitempty"`
	APIName             *string                                                      `json:"ApiName,omitempty"`
	ConflictResolution  *CreateBackendAPIRequestBodyResourceConfigConflictResolution `json:"ConflictResolution,omitempty"`
	DefaultAuthType     *CreateBackendAPIRequestBodyResourceConfigDefaultAuthType    `json:"DefaultAuthType,omitempty"`
	Service             *string                                                      `json:"Service,omitempty"`
	TransformSchema     *string                                                      `json:"TransformSchema,omitempty"`
}

type CreateBackendAPIRequestBody struct {
	// The name of the backend environment.
	BackendEnvironmentName string `json:"backendEnvironmentName"`
	// The resource config for the data model, configured as a part of the Amplify project.
	ResourceConfig CreateBackendAPIRequestBodyResourceConfig `json:"resourceConfig"`
	// The name of this resource.
	ResourceName string `json:"resourceName"`
}

type CreateBackendAPIRequest struct {
	PathParams CreateBackendAPIPathParams
	Headers    CreateBackendAPIHeaders
	Request    CreateBackendAPIRequestBody `request:"mediaType=application/json"`
}

type CreateBackendAPIResponse struct {
	// BadRequestException
	BadRequestException interface{}
	ContentType         string
	// Success
	CreateBackendAPIResponse *shared.CreateBackendAPIResponse
	// GatewayTimeoutException
	GatewayTimeoutException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
