/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { StreamingSessionStreamStateEnum } from "./streamingsessionstreamstateenum";
import { StreamingSessionStreamStatusCodeEnum } from "./streamingsessionstreamstatuscodeenum";
import { Expose, Transform } from "class-transformer";

/**
 * A stream is an active connection to a streaming session, enabling a studio user to control the streaming session using a compatible client. Streaming session streams are compatible with the NICE DCV web client, included in the Nimble Studio portal, or the NICE DCV desktop client.
 */
export class StreamingSessionStream extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "createdBy" })
  createdBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "expiresAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiresAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ownedBy" })
  ownedBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: StreamingSessionStreamStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "statusCode" })
  statusCode?: StreamingSessionStreamStatusCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "streamId" })
  streamId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}
