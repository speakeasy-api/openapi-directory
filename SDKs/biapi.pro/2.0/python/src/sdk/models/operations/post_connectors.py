"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import connector as shared_connector
from typing import Optional


@dataclasses.dataclass
class PostConnectorsRequestBody:
    
    login: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'login' }})
    r"""Users login"""  
    name: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'name' }})
    r"""Name of the bank or provider"""  
    password: str = dataclasses.field(metadata={'multipart_form': { 'field_name': 'password' }})
    r"""Users password"""  
    comment: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'comment' }})
    r"""Optionnal comment"""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'email' }})
    r"""Email of the user"""  
    sendmail: Optional[bool] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'sendmail' }})
    r"""if set, send an email to user"""  
    types: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'types' }})
    r"""Type of connector, eg. banks or providers"""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'url' }})
    r"""Url of the bank"""  
    

@dataclasses.dataclass
class PostConnectorsRequest:
    
    request_body: PostConnectorsRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'multipart/form-data' }})  
    expand: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'expand', 'style': 'form', 'explode': True }})  
    

@dataclasses.dataclass
class PostConnectorsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    connector: Optional[shared_connector.Connector] = dataclasses.field(default=None)
    r"""Successful POST on Connector resource"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    