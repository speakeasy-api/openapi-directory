"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import getpaymentrunsummarytotalvalues as shared_getpaymentrunsummarytotalvalues
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GETPaymentRunSummaryResponse:
    
    number_of_credit_balance_adjustments: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfCreditBalanceAdjustments'), 'exclude': lambda f: f is None }})
    r"""**Note:** This field is only available if you have the Credit Balance feature enabled.
    
    The number of credit balance adjustments that are successfully processed in the payment run.
    """  
    number_of_credit_memos: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfCreditMemos'), 'exclude': lambda f: f is None }})
    r"""**Note:** This field is only available if you have the Invoice Settlement feature enabled.
    
    The total number of credit memos that are successfully processed in the payment run.
    """  
    number_of_debit_memos: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfDebitMemos'), 'exclude': lambda f: f is None }})
    r"""**Note:** This field is only available if you have the Invoice Settlement feature enabled.
    
    The total number of debit memos that are picked up for processing in the payment run.
    """  
    number_of_error_input_data: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfErrorInputData'), 'exclude': lambda f: f is None }})
    r"""The number of input data that are processed with errors."""  
    number_of_errors: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfErrors'), 'exclude': lambda f: f is None }})
    r"""The number of payments with the status of `Error` and `Processing`."""  
    number_of_input_data: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfInputData'), 'exclude': lambda f: f is None }})
    r"""The total number of input data."""  
    number_of_invoices: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfInvoices'), 'exclude': lambda f: f is None }})
    r"""**Note:** This field is only available if you have the Invoice Settlement feature enabled.
    
    The total number of invoices that are picked up for processing in the payment run.
    """  
    number_of_payments: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfPayments'), 'exclude': lambda f: f is None }})
    r"""The number of payments that are successfully processed in the payment run."""  
    number_of_processed_input_data: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfProcessedInputData'), 'exclude': lambda f: f is None }})
    r"""The number of input data that are successfully processed."""  
    number_of_receivables: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfReceivables'), 'exclude': lambda f: f is None }})
    r"""The total number of receivables that are picked up for processing in the payment run.
    
    The value of this field is the sum of the value of the `numberOfInvoices` field and that of the `numberOfDebitMemos` field.
    """  
    number_of_unapplied_payments: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfUnappliedPayments'), 'exclude': lambda f: f is None }})
    r"""**Note:** This field is only available if you have the Invoice Settlement feature enabled.
    
    The number of unapplied payments that are successfully processed in the payment run.
    """  
    number_of_unprocessed_debit_memos: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfUnprocessedDebitMemos'), 'exclude': lambda f: f is None }})
    r"""**Note:** This field is only available if you have the Invoice Settlement feature enabled.
    
    The number of debit memos with remaining positive balances after the payment run is completed.
    """  
    number_of_unprocessed_invoices: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfUnprocessedInvoices'), 'exclude': lambda f: f is None }})
    r"""**Note:** This field is only available if you have the Invoice Settlement feature enabled.
    
    The number of invoices with remaining positive balances after the payment run is completed.
    """  
    number_of_unprocessed_receivables: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numberOfUnprocessedReceivables'), 'exclude': lambda f: f is None }})
    r"""The number of receivables with remaining positive balances after the payment run is completed."""  
    success: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success'), 'exclude': lambda f: f is None }})
    r"""Returns `true` if the request was processed successfully."""  
    total_values: Optional[list[shared_getpaymentrunsummarytotalvalues.GETPaymentRunSummaryTotalValues]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('totalValues'), 'exclude': lambda f: f is None }})
    r"""Container for total values."""  
    