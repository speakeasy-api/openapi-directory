/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * StartTalkRequest - Action to perform
 */
public class StartTalkRequest {
    /**
     * The language to use
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("language")
    public LanguageEnum language;

    public StartTalkRequest withLanguage(LanguageEnum language) {
        this.language = language;
        return this;
    }
    
    /**
     * The volume level that the speech is played. This can be any value between `-1` to `1` in `0.1` increments, with `0` being the default.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("level")
    public String level;

    public StartTalkRequest withLevel(String level) {
        this.level = level;
        return this;
    }
    
    /**
     * The number of times to repeat the text the file, 0 for infinite
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loop")
    public Long loop;

    public StartTalkRequest withLoop(Long loop) {
        this.loop = loop;
        return this;
    }
    
    /**
     * Set to true to use the premium version of the specified style if available, otherwise the standard version will be used. The default value is false. You can find more information about Premium Voices in the [Text-To-Speech guide](/voice/voice-api/guides/text-to-speech#premium-voices).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("premium")
    public Boolean premium;

    public StartTalkRequest withPremium(Boolean premium) {
        this.premium = premium;
        return this;
    }
    
    /**
     * The vocal style (vocal range, tessitura, and timbre) to use
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("style")
    public Long style;

    public StartTalkRequest withStyle(Long style) {
        this.style = style;
        return this;
    }
    
    /**
     * The text to read
     */
    @JsonProperty("text")
    public String text;

    public StartTalkRequest withText(String text) {
        this.text = text;
        return this;
    }
    
    /**
     * &lt;strong&gt;DEPRECATED&lt;/strong&gt; The voice &amp; language to use
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("voice_name")
    public VoiceNameEnum voiceName;

    public StartTalkRequest withVoiceName(VoiceNameEnum voiceName) {
        this.voiceName = voiceName;
        return this;
    }
    
    public StartTalkRequest(@JsonProperty("text") String text) {
        this.text = text;
  }
}
