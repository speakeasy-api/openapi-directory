/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PolicyTopicEntry - Each policy topic entry will represent a violation of a policy topic for a creative, with the policy topic information and optional evidence for the policy violation.
 */
public class PolicyTopicEntry {
    /**
     * Pieces of evidence associated with this policy topic entry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("evidences")
    public PolicyTopicEvidence[] evidences;
    public PolicyTopicEntry withEvidences(PolicyTopicEvidence[] evidences) {
        this.evidences = evidences;
        return this;
    }
    
    /**
     * URL of the help center article describing this policy topic.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("helpCenterUrl")
    public String helpCenterUrl;
    public PolicyTopicEntry withHelpCenterUrl(String helpCenterUrl) {
        this.helpCenterUrl = helpCenterUrl;
        return this;
    }
    
    /**
     * Whether or not the policy topic is missing a certificate. Some policy topics require a certificate to unblock serving in some regions. For more information about creative certification, refer to: https://support.google.com/authorizedbuyers/answer/7450776
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("missingCertificate")
    public Boolean missingCertificate;
    public PolicyTopicEntry withMissingCertificate(Boolean missingCertificate) {
        this.missingCertificate = missingCertificate;
        return this;
    }
    
    /**
     * Policy topic this entry refers to. For example, "ALCOHOL", "TRADEMARKS_IN_AD_TEXT", or "DESTINATION_NOT_WORKING". The set of possible policy topics is not fixed for a particular API version and may change at any time. Can be used to filter the response of the creatives.list method
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policyTopic")
    public String policyTopic;
    public PolicyTopicEntry withPolicyTopic(String policyTopic) {
        this.policyTopic = policyTopic;
        return this;
    }
    
}
