"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclasses.dataclass
class GetCMSpageRequest:
    
    builder_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'builderId', 'style': 'simple', 'explode': False }})
    r"""Builder ID specified in the settings of the CMS app."""  
    content_type: str = dataclasses.field(metadata={'path_param': { 'field_name': 'content-type', 'style': 'simple', 'explode': False }})
    r"""Content Type ID defined in the FastStore project."""  
    document_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'document-id', 'style': 'simple', 'explode': False }})
    r"""Document ID presented in the URL path of a CMS preview."""  
    release_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'releaseId', 'style': 'form', 'explode': True }})
    r"""Release ID presented in the URL path of a CMS preview."""  
    version_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'versionId', 'style': 'form', 'explode': True }})
    r"""Version ID presented in the URL path of a CMS preview."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCMSpage200ApplicationJSONSections:
    r"""Object with data about a specific section."""
    
    data: dict[str, Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data') }})
    r"""Content of the Section. Varies depending on the Section schema defined in the FastStore project."""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Section ID."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Section name."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCMSpage200ApplicationJSON:
    r"""Object containing the data related to a specific page."""
    
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Document ID."""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Name of the page created in the CMS app."""  
    status: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Current status of the page."""  
    type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""Name of the Content Type defined in the FastStore project."""  
    sections: Optional[list[GetCMSpage200ApplicationJSONSections]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sections'), 'exclude': lambda f: f is None }})
    r"""Sections that compose the page."""  
    version_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('versionId'), 'exclude': lambda f: f is None }})
    r"""Version ID."""  
    version_status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('versionStatus'), 'exclude': lambda f: f is None }})
    r"""Version status"""  
    

@dataclasses.dataclass
class GetCMSpageResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_cm_spage_200_application_json_object: Optional[GetCMSpage200ApplicationJSON] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    