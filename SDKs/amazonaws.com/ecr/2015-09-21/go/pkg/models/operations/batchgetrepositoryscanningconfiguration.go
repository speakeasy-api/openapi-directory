// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// BatchGetRepositoryScanningConfigurationXAmzTargetEnum
type BatchGetRepositoryScanningConfigurationXAmzTargetEnum string

const (
	BatchGetRepositoryScanningConfigurationXAmzTargetEnumAmazonEc2ContainerRegistryV20150921BatchGetRepositoryScanningConfiguration BatchGetRepositoryScanningConfigurationXAmzTargetEnum = "AmazonEC2ContainerRegistry_V20150921.BatchGetRepositoryScanningConfiguration"
)

func (e BatchGetRepositoryScanningConfigurationXAmzTargetEnum) ToPointer() *BatchGetRepositoryScanningConfigurationXAmzTargetEnum {
	return &e
}

func (e *BatchGetRepositoryScanningConfigurationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AmazonEC2ContainerRegistry_V20150921.BatchGetRepositoryScanningConfiguration":
		*e = BatchGetRepositoryScanningConfigurationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchGetRepositoryScanningConfigurationXAmzTargetEnum: %v", v)
	}
}

type BatchGetRepositoryScanningConfigurationRequest struct {
	BatchGetRepositoryScanningConfigurationRequest shared.BatchGetRepositoryScanningConfigurationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                                  *string                                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                              *string                                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                                 *string                                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                       *string                                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                              *string                                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                                  *string                                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                              *string                                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                     BatchGetRepositoryScanningConfigurationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type BatchGetRepositoryScanningConfigurationResponse struct {
	// Success
	BatchGetRepositoryScanningConfigurationResponse *shared.BatchGetRepositoryScanningConfigurationResponse
	ContentType                                     string
	// InvalidParameterException
	InvalidParameterException interface{}
	// RepositoryNotFoundException
	RepositoryNotFoundException interface{}
	// ServerException
	ServerException interface{}
	StatusCode      int
	RawResponse     *http.Response
	// ValidationException
	ValidationException interface{}
}
