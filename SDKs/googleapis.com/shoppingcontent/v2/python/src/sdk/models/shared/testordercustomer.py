"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import testordercustomermarketingrightsinfo as shared_testordercustomermarketingrightsinfo
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TestOrderCustomer:
    
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('email'), 'exclude': lambda f: f is None }})
    r"""Required. Email address of the customer. Acceptable values are: - \\"`pog.dwight.schrute@gmail.com`\\" - \\"`pog.jim.halpert@gmail.com`\\" - \\"`penpog.pam.beesly@gmail.comding`\\" """  
    explicit_marketing_preference: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('explicitMarketingPreference'), 'exclude': lambda f: f is None }})
    r"""Deprecated. Please use marketingRightsInfo instead."""  
    full_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fullName'), 'exclude': lambda f: f is None }})
    r"""Full name of the customer."""  
    marketing_rights_info: Optional[shared_testordercustomermarketingrightsinfo.TestOrderCustomerMarketingRightsInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('marketingRightsInfo'), 'exclude': lambda f: f is None }})  
    