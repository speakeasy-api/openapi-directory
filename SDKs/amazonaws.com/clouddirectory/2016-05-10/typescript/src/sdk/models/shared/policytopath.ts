/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { PolicyAttachment } from "./policyattachment";
import { Expose, Type } from "class-transformer";

/**
 * Used when a regular object exists in a <a>Directory</a> and you want to find all of the policies that are associated with that object and the parent to that object.
 */
export class PolicyToPath extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Path" })
  path?: string;

  @SpeakeasyMetadata({ elemType: PolicyAttachment })
  @Expose({ name: "Policies" })
  @Type(() => PolicyAttachment)
  policies?: PolicyAttachment[];
}
