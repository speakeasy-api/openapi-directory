// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// RegisterClusterRequestBodyConnectorConfig - The configuration sent to a cluster for configuration.
type RegisterClusterRequestBodyConnectorConfig struct {
	Provider *shared.ConnectorConfigProviderEnum `json:"provider,omitempty"`
	RoleArn  *string                             `json:"roleArn,omitempty"`
}

type RegisterClusterRequestBody struct {
	// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.
	ClientRequestToken *string `json:"clientRequestToken,omitempty"`
	// The configuration sent to a cluster for configuration.
	ConnectorConfig RegisterClusterRequestBodyConnectorConfig `json:"connectorConfig"`
	// Define a unique name for this cluster for your Region.
	Name string `json:"name"`
	// The metadata that you apply to the cluster to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Cluster tags do not propagate to any other resources associated with the cluster.
	Tags map[string]string `json:"tags,omitempty"`
}

type RegisterClusterRequest struct {
	RequestBody       RegisterClusterRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type RegisterClusterResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ClientException
	ClientException interface{}
	ContentType     string
	// InvalidParameterException
	InvalidParameterException interface{}
	// Success
	RegisterClusterResponse *shared.RegisterClusterResponse
	// ResourceInUseException
	ResourceInUseException interface{}
	// ResourceLimitExceededException
	ResourceLimitExceededException interface{}
	// ResourcePropagationDelayException
	ResourcePropagationDelayException interface{}
	// ServerException
	ServerException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
}
