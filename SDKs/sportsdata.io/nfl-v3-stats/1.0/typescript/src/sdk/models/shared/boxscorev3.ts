/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FantasyDefenseGame } from "./fantasydefensegame";
import { PlayerGame } from "./playergame";
import { Quarter } from "./quarter";
import { Score } from "./score";
import { ScoringDetail } from "./scoringdetail";
import { ScoringPlay } from "./scoringplay";
import { TeamGame } from "./teamgame";
import { Expose, Type } from "class-transformer";

export class BoxScoreV3 extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: FantasyDefenseGame })
  @Expose({ name: "FantasyDefenseGames" })
  @Type(() => FantasyDefenseGame)
  fantasyDefenseGames?: FantasyDefenseGame[];

  @SpeakeasyMetadata({ elemType: PlayerGame })
  @Expose({ name: "PlayerGames" })
  @Type(() => PlayerGame)
  playerGames?: PlayerGame[];

  @SpeakeasyMetadata({ elemType: Quarter })
  @Expose({ name: "Quarters" })
  @Type(() => Quarter)
  quarters?: Quarter[];

  @SpeakeasyMetadata()
  @Expose({ name: "Score" })
  @Type(() => Score)
  score?: Score;

  @SpeakeasyMetadata({ elemType: ScoringDetail })
  @Expose({ name: "ScoringDetails" })
  @Type(() => ScoringDetail)
  scoringDetails?: ScoringDetail[];

  @SpeakeasyMetadata({ elemType: ScoringPlay })
  @Expose({ name: "ScoringPlays" })
  @Type(() => ScoringPlay)
  scoringPlays?: ScoringPlay[];

  @SpeakeasyMetadata({ elemType: TeamGame })
  @Expose({ name: "TeamGames" })
  @Type(() => TeamGame)
  teamGames?: TeamGame[];
}
