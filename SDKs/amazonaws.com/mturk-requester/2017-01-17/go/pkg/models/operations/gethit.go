// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetHITXAmzTargetEnum
type GetHITXAmzTargetEnum string

const (
	GetHITXAmzTargetEnumMTurkRequesterServiceV20170117GetHit GetHITXAmzTargetEnum = "MTurkRequesterServiceV20170117.GetHIT"
)

func (e GetHITXAmzTargetEnum) ToPointer() *GetHITXAmzTargetEnum {
	return &e
}

func (e *GetHITXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MTurkRequesterServiceV20170117.GetHIT":
		*e = GetHITXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetHITXAmzTargetEnum: %v", v)
	}
}

type GetHITRequest struct {
	GetHITRequest     shared.GetHITRequest `request:"mediaType=application/json"`
	XAmzAlgorithm     *string              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetHITXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetHITResponse struct {
	ContentType string
	// Success
	GetHITResponse *shared.GetHITResponse
	// RequestError
	RequestError interface{}
	// ServiceFault
	ServiceFault interface{}
	StatusCode   int
	RawResponse  *http.Response
}
