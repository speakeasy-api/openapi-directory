// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// POSTRevenueScheduleByChargeTypeOverrideChargeAccountingCodesEnum - When overriding accounting codes from a charge, `recognizedRevenueAccountingCode` and `deferredRevenue AccountingCode` must be in the request body and can have the empty value.
type POSTRevenueScheduleByChargeTypeOverrideChargeAccountingCodesEnum string

const (
	POSTRevenueScheduleByChargeTypeOverrideChargeAccountingCodesEnumTrue  POSTRevenueScheduleByChargeTypeOverrideChargeAccountingCodesEnum = "true"
	POSTRevenueScheduleByChargeTypeOverrideChargeAccountingCodesEnumFalse POSTRevenueScheduleByChargeTypeOverrideChargeAccountingCodesEnum = "false"
)

func (e *POSTRevenueScheduleByChargeTypeOverrideChargeAccountingCodesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "true":
		fallthrough
	case "false":
		*e = POSTRevenueScheduleByChargeTypeOverrideChargeAccountingCodesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTRevenueScheduleByChargeTypeOverrideChargeAccountingCodesEnum: %s", s)
	}
}

// POSTRevenueScheduleByChargeType - Container for custom fields of a Revenue Schedule object.
type POSTRevenueScheduleByChargeType struct {
	// The revenue schedule amount, which is the sum of all revenue items. This field cannot be null and must be formatted based on the currency, such as `JPY 30` or `USD 30.15`. Test out the currency to ensure you are using the proper formatting otherwise, the response will fail and this error message is returned: `Allocation amount with wrong decimal places.`
	//
	Amount string `json:"amount"`
	// The accounting code for deferred revenue, such as Monthly Recurring Liability. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise, this value is ignored.
	//
	DeferredRevenueAccountingCode *string `json:"deferredRevenueAccountingCode,omitempty"`
	// The type of the deferred revenue accounting code, such as Deferred Revenue. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise, this value is ignored.
	//
	DeferredRevenueAccountingCodeType *string `json:"deferredRevenueAccountingCodeType,omitempty"`
	// Additional information about this record.
	//
	// Character Limit: 2,000
	//
	Notes *string `json:"notes,omitempty"`
	// When overriding accounting codes from a charge, `recognizedRevenueAccountingCode` and `deferredRevenue AccountingCode` must be in the request body and can have the empty value.
	//
	OverrideChargeAccountingCodes *POSTRevenueScheduleByChargeTypeOverrideChargeAccountingCodesEnum `json:"overrideChargeAccountingCodes,omitempty"`
	// The accounting code for recognized revenue, such as Monthly Recurring Charges or Overage Charges. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise, the value is ignored.
	//
	RecognizedRevenueAccountingCode *string `json:"recognizedRevenueAccountingCode,omitempty"`
	// The type of the recognized revenue accounting code, such as Sales Revenue or Sales Discount. Required only when `overrideChargeAccountingCodes` is `true`. Otherwise, this value is ignored.
	//
	RecognizedRevenueAccountingCodeType *string `json:"recognizedRevenueAccountingCodeType,omitempty"`
	// Reference ID is used only in the custom unlimited rule to create a revenue schedule. In this scenario, the revenue schedule is not linked to an invoice item or invoice item adjustment.
	//
	// Character Limit: 100
	//
	ReferenceID *string `json:"referenceId,omitempty"`
	// An array of revenue distributions. Represents how you want to distribute revenue for this revenue schedule. You can distribute revenue into a maximum of 250 accounting periods with one revenue schedule.
	//
	// The sum of the newAmount fields must be equal to the amount field.
	//
	RevenueDistributions []POSTDistributionItemType `json:"revenueDistributions,omitempty"`
	// Represents a change to a revenue schedule, such as posting an invoice or distributing revenue.
	//
	RevenueEvent *POSTRevenueScheduleByChargeTypeRevenueEvent `json:"revenueEvent,omitempty"`
	// The effective date of the revenue schedule. For example, the revenue schedule date for bookings-based revenue recognition is typically set to the order date or contract date.
	//
	// The date cannot be in a closed accounting period. The date must be in `yyyy-mm-dd` format.
	//
	RevenueScheduleDate types.Date `json:"revenueScheduleDate"`
}
