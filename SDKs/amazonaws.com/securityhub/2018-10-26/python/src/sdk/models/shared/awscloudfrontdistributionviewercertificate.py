"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsCloudFrontDistributionViewerCertificate:
    r"""Provides information about the TLS/SSL configuration that the CloudFront distribution uses to communicate with viewers."""
    
    acm_certificate_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AcmCertificateArn'), 'exclude': lambda f: f is None }})  
    certificate: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Certificate'), 'exclude': lambda f: f is None }})  
    certificate_source: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CertificateSource'), 'exclude': lambda f: f is None }})  
    cloud_front_default_certificate: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CloudFrontDefaultCertificate'), 'exclude': lambda f: f is None }})  
    iam_certificate_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IamCertificateId'), 'exclude': lambda f: f is None }})  
    minimum_protocol_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MinimumProtocolVersion'), 'exclude': lambda f: f is None }})  
    ssl_support_method: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SslSupportMethod'), 'exclude': lambda f: f is None }})  
    