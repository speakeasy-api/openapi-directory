/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AcknowledgmentStatusEnum } from "./acknowledgmentstatusenum";
import { Address } from "./address";
import { TrackingInformation } from "./trackinginformation";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about an order.
 */
export class Order extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "acknowledgmentStatus" })
  acknowledgmentStatus?: AcknowledgmentStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "createdAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "networkArn" })
  networkArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "networkSiteArn" })
  networkSiteArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "orderArn" })
  orderArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "shippingAddress" })
  @Type(() => Address)
  shippingAddress?: Address;

  @SpeakeasyMetadata({ elemType: TrackingInformation })
  @Expose({ name: "trackingInformation" })
  @Type(() => TrackingInformation)
  trackingInformation?: TrackingInformation[];
}
