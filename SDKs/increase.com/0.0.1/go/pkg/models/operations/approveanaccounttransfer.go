// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ApproveAnAccountTransferRequest struct {
	AccountTransferID string `pathParam:"style=simple,explode=false,name=account_transfer_id"`
}

type ApproveAnAccountTransferDefaultApplicationJSON13StatusEnum int64

const (
	ApproveAnAccountTransferDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ApproveAnAccountTransferDefaultApplicationJSON13StatusEnum = 429
)

func (e ApproveAnAccountTransferDefaultApplicationJSON13StatusEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = ApproveAnAccountTransferDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON13TypeEnum string

const (
	ApproveAnAccountTransferDefaultApplicationJSON13TypeEnumRateLimitedError ApproveAnAccountTransferDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e ApproveAnAccountTransferDefaultApplicationJSON13TypeEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = ApproveAnAccountTransferDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON13 struct {
	Detail     string                                                     `json:"detail"`
	RetryAfter *int64                                                     `json:"retry_after,omitempty"`
	Status     ApproveAnAccountTransferDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                     `json:"title"`
	Type       ApproveAnAccountTransferDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ApproveAnAccountTransferDefaultApplicationJSON12StatusEnum int64

const (
	ApproveAnAccountTransferDefaultApplicationJSON12StatusEnumFourHundredAndThree ApproveAnAccountTransferDefaultApplicationJSON12StatusEnum = 403
)

func (e ApproveAnAccountTransferDefaultApplicationJSON12StatusEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ApproveAnAccountTransferDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON12TypeEnum string

const (
	ApproveAnAccountTransferDefaultApplicationJSON12TypeEnumPrivateFeatureError ApproveAnAccountTransferDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e ApproveAnAccountTransferDefaultApplicationJSON12TypeEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = ApproveAnAccountTransferDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON12 struct {
	Detail string                                                     `json:"detail"`
	Status ApproveAnAccountTransferDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ApproveAnAccountTransferDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ApproveAnAccountTransferDefaultApplicationJSON11StatusEnum int64

const (
	ApproveAnAccountTransferDefaultApplicationJSON11StatusEnumFourHundredAndFour ApproveAnAccountTransferDefaultApplicationJSON11StatusEnum = 404
)

func (e ApproveAnAccountTransferDefaultApplicationJSON11StatusEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ApproveAnAccountTransferDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON11TypeEnum string

const (
	ApproveAnAccountTransferDefaultApplicationJSON11TypeEnumObjectNotFoundError ApproveAnAccountTransferDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e ApproveAnAccountTransferDefaultApplicationJSON11TypeEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = ApproveAnAccountTransferDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON11 struct {
	Detail string                                                     `json:"detail"`
	Status ApproveAnAccountTransferDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ApproveAnAccountTransferDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ApproveAnAccountTransferDefaultApplicationJSON10StatusEnum int64

const (
	ApproveAnAccountTransferDefaultApplicationJSON10StatusEnumFourHundred ApproveAnAccountTransferDefaultApplicationJSON10StatusEnum = 400
)

func (e ApproveAnAccountTransferDefaultApplicationJSON10StatusEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ApproveAnAccountTransferDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON10TypeEnum string

const (
	ApproveAnAccountTransferDefaultApplicationJSON10TypeEnumMalformedRequestError ApproveAnAccountTransferDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e ApproveAnAccountTransferDefaultApplicationJSON10TypeEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = ApproveAnAccountTransferDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON10 struct {
	Detail string                                                     `json:"detail"`
	Status ApproveAnAccountTransferDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ApproveAnAccountTransferDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ApproveAnAccountTransferDefaultApplicationJSON9StatusEnum int64

const (
	ApproveAnAccountTransferDefaultApplicationJSON9StatusEnumFourHundred ApproveAnAccountTransferDefaultApplicationJSON9StatusEnum = 400
)

func (e ApproveAnAccountTransferDefaultApplicationJSON9StatusEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ApproveAnAccountTransferDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON9TypeEnum string

const (
	ApproveAnAccountTransferDefaultApplicationJSON9TypeEnumInvalidParametersError ApproveAnAccountTransferDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e ApproveAnAccountTransferDefaultApplicationJSON9TypeEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = ApproveAnAccountTransferDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                  `json:"errors"`
	Status ApproveAnAccountTransferDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ApproveAnAccountTransferDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ApproveAnAccountTransferDefaultApplicationJSON8StatusEnum int64

const (
	ApproveAnAccountTransferDefaultApplicationJSON8StatusEnumFourHundredAndNine ApproveAnAccountTransferDefaultApplicationJSON8StatusEnum = 409
)

func (e ApproveAnAccountTransferDefaultApplicationJSON8StatusEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ApproveAnAccountTransferDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON8TypeEnum string

const (
	ApproveAnAccountTransferDefaultApplicationJSON8TypeEnumInvalidOperationError ApproveAnAccountTransferDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e ApproveAnAccountTransferDefaultApplicationJSON8TypeEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = ApproveAnAccountTransferDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON8 struct {
	Detail string                                                    `json:"detail"`
	Status ApproveAnAccountTransferDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ApproveAnAccountTransferDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ApproveAnAccountTransferDefaultApplicationJSON7StatusEnum int64

const (
	ApproveAnAccountTransferDefaultApplicationJSON7StatusEnumFourHundredAndOne ApproveAnAccountTransferDefaultApplicationJSON7StatusEnum = 401
)

func (e ApproveAnAccountTransferDefaultApplicationJSON7StatusEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = ApproveAnAccountTransferDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON7TypeEnum string

const (
	ApproveAnAccountTransferDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ApproveAnAccountTransferDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e ApproveAnAccountTransferDefaultApplicationJSON7TypeEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = ApproveAnAccountTransferDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON7 struct {
	Detail string                                                    `json:"detail"`
	Status ApproveAnAccountTransferDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ApproveAnAccountTransferDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ApproveAnAccountTransferDefaultApplicationJSON6StatusEnum int64

const (
	ApproveAnAccountTransferDefaultApplicationJSON6StatusEnumFiveHundred ApproveAnAccountTransferDefaultApplicationJSON6StatusEnum = 500
)

func (e ApproveAnAccountTransferDefaultApplicationJSON6StatusEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = ApproveAnAccountTransferDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON6TypeEnum string

const (
	ApproveAnAccountTransferDefaultApplicationJSON6TypeEnumInternalServerError ApproveAnAccountTransferDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e ApproveAnAccountTransferDefaultApplicationJSON6TypeEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = ApproveAnAccountTransferDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON6 struct {
	Detail string                                                    `json:"detail"`
	Status ApproveAnAccountTransferDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ApproveAnAccountTransferDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ApproveAnAccountTransferDefaultApplicationJSON5StatusEnum int64

const (
	ApproveAnAccountTransferDefaultApplicationJSON5StatusEnumFourHundredAndThree ApproveAnAccountTransferDefaultApplicationJSON5StatusEnum = 403
)

func (e ApproveAnAccountTransferDefaultApplicationJSON5StatusEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ApproveAnAccountTransferDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON5TypeEnum string

const (
	ApproveAnAccountTransferDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ApproveAnAccountTransferDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e ApproveAnAccountTransferDefaultApplicationJSON5TypeEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = ApproveAnAccountTransferDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON5 struct {
	Detail string                                                    `json:"detail"`
	Status ApproveAnAccountTransferDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ApproveAnAccountTransferDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ApproveAnAccountTransferDefaultApplicationJSON4StatusEnum int64

const (
	ApproveAnAccountTransferDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ApproveAnAccountTransferDefaultApplicationJSON4StatusEnum = 422
)

func (e ApproveAnAccountTransferDefaultApplicationJSON4StatusEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = ApproveAnAccountTransferDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON4TypeEnum string

const (
	ApproveAnAccountTransferDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ApproveAnAccountTransferDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e ApproveAnAccountTransferDefaultApplicationJSON4TypeEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = ApproveAnAccountTransferDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON4 struct {
	Detail string                                                    `json:"detail"`
	Status ApproveAnAccountTransferDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ApproveAnAccountTransferDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ApproveAnAccountTransferDefaultApplicationJSON3StatusEnum int64

const (
	ApproveAnAccountTransferDefaultApplicationJSON3StatusEnumFourHundredAndNine ApproveAnAccountTransferDefaultApplicationJSON3StatusEnum = 409
)

func (e ApproveAnAccountTransferDefaultApplicationJSON3StatusEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ApproveAnAccountTransferDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON3TypeEnum string

const (
	ApproveAnAccountTransferDefaultApplicationJSON3TypeEnumIdempotencyConflictError ApproveAnAccountTransferDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e ApproveAnAccountTransferDefaultApplicationJSON3TypeEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = ApproveAnAccountTransferDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON3 struct {
	Detail string                                                    `json:"detail"`
	Status ApproveAnAccountTransferDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ApproveAnAccountTransferDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ApproveAnAccountTransferDefaultApplicationJSON2StatusEnum int64

const (
	ApproveAnAccountTransferDefaultApplicationJSON2StatusEnumFourHundredAndThree ApproveAnAccountTransferDefaultApplicationJSON2StatusEnum = 403
)

func (e ApproveAnAccountTransferDefaultApplicationJSON2StatusEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ApproveAnAccountTransferDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON2TypeEnum string

const (
	ApproveAnAccountTransferDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ApproveAnAccountTransferDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e ApproveAnAccountTransferDefaultApplicationJSON2TypeEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = ApproveAnAccountTransferDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON2 struct {
	Detail string                                                    `json:"detail"`
	Status ApproveAnAccountTransferDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ApproveAnAccountTransferDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ApproveAnAccountTransferDefaultApplicationJSON1StatusEnum int64

const (
	ApproveAnAccountTransferDefaultApplicationJSON1StatusEnumFourHundredAndFour ApproveAnAccountTransferDefaultApplicationJSON1StatusEnum = 404
)

func (e ApproveAnAccountTransferDefaultApplicationJSON1StatusEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ApproveAnAccountTransferDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON1TypeEnum string

const (
	ApproveAnAccountTransferDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ApproveAnAccountTransferDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e ApproveAnAccountTransferDefaultApplicationJSON1TypeEnum) ToPointer() *ApproveAnAccountTransferDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *ApproveAnAccountTransferDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = ApproveAnAccountTransferDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAnAccountTransferDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type ApproveAnAccountTransferDefaultApplicationJSON1 struct {
	Detail string                                                    `json:"detail"`
	Status ApproveAnAccountTransferDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                    `json:"title"`
	Type   ApproveAnAccountTransferDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ApproveAnAccountTransferResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Account Transfer
	AccountTransfer *shared.AccountTransfer
	// Error
	Error interface{}
}
