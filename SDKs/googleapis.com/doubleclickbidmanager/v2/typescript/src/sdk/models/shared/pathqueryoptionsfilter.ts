/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Match logic of the filter.
 */
export enum PathQueryOptionsFilterMatchEnum {
  Unknown = "UNKNOWN",
  Exact = "EXACT",
  Partial = "PARTIAL",
  BeginsWith = "BEGINS_WITH",
  WildcardExpression = "WILDCARD_EXPRESSION",
}

/**
 * Dimension filter on path events.
 */
export class PathQueryOptionsFilter extends SpeakeasyBase {
  /**
   * Dimension the filter is applied to.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filter" })
  filter?: string;

  /**
   * Match logic of the filter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "match" })
  match?: PathQueryOptionsFilterMatchEnum;

  /**
   * Values to filter on.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "values" })
  values?: string[];
}
