"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateDeviceSwitchWarmSpareRequestBody:
    
    enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled') }})
    r"""Enable or disable warm spare for a switch"""  
    spare_serial: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spareSerial'), 'exclude': lambda f: f is None }})
    r"""Serial number of the warm spare switch"""  
    

@dataclasses.dataclass
class UpdateDeviceSwitchWarmSpareRequest:
    
    request_body: UpdateDeviceSwitchWarmSpareRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    serial: str = dataclasses.field(metadata={'path_param': { 'field_name': 'serial', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class UpdateDeviceSwitchWarmSpareResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_device_switch_warm_spare_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    