"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Any, Optional

class GetDeviceCameraAnalyticsRecentObjectTypeEnum(str, Enum):
    r"""[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."""
    PERSON = 'person'
    VEHICLE = 'vehicle'


@dataclasses.dataclass
class GetDeviceCameraAnalyticsRecentRequest:
    
    serial: str = dataclasses.field(metadata={'path_param': { 'field_name': 'serial', 'style': 'simple', 'explode': False }})  
    object_type: Optional[GetDeviceCameraAnalyticsRecentObjectTypeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'objectType', 'style': 'form', 'explode': True }})
    r"""[optional] The object type for which analytics will be retrieved. The default object type is person. The available types are [person, vehicle]."""  
    

@dataclasses.dataclass
class GetDeviceCameraAnalyticsRecentResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_device_camera_analytics_recent_200_application_json_objects: Optional[list[dict[str, Any]]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    