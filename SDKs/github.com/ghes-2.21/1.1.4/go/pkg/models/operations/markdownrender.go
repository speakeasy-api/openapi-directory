// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// MarkdownRenderRequestBodyModeEnum - The rendering mode.
type MarkdownRenderRequestBodyModeEnum string

const (
	MarkdownRenderRequestBodyModeEnumMarkdown MarkdownRenderRequestBodyModeEnum = "markdown"
	MarkdownRenderRequestBodyModeEnumGfm      MarkdownRenderRequestBodyModeEnum = "gfm"
)

func (e MarkdownRenderRequestBodyModeEnum) ToPointer() *MarkdownRenderRequestBodyModeEnum {
	return &e
}

func (e *MarkdownRenderRequestBodyModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "markdown":
		fallthrough
	case "gfm":
		*e = MarkdownRenderRequestBodyModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MarkdownRenderRequestBodyModeEnum: %v", v)
	}
}

type MarkdownRenderRequestBody struct {
	// The repository context to use when creating references in `gfm` mode.
	Context *string `json:"context,omitempty"`
	// The rendering mode.
	Mode *MarkdownRenderRequestBodyModeEnum `json:"mode,omitempty"`
	// The Markdown text to render in HTML.
	Text string `json:"text"`
}

type MarkdownRenderResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Response
	MarkdownRender200TextHTMLString *string
}
