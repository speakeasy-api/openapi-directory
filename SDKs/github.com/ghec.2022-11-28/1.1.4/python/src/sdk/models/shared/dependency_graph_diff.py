"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils

class DependencyGraphDiffChangeTypeEnum(str, Enum):
    ADDED = 'added'
    REMOVED = 'removed'

class DependencyGraphDiffScopeEnum(str, Enum):
    r"""Where the dependency is utilized. `development` means that the dependency is only utilized in the development environment. `runtime` means that the dependency is utilized at runtime and in the development environment."""
    UNKNOWN = 'unknown'
    RUNTIME = 'runtime'
    DEVELOPMENT = 'development'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DependencyGraphDiffVulnerabilities:
    
    advisory_ghsa_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advisory_ghsa_id') }})  
    advisory_summary: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advisory_summary') }})  
    advisory_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advisory_url') }})  
    severity: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('severity') }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DependencyGraphDiff:
    
    change_type: DependencyGraphDiffChangeTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('change_type') }})  
    ecosystem: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ecosystem') }})  
    license: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('license') }})  
    manifest: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('manifest') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    package_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('package_url') }})  
    scope: DependencyGraphDiffScopeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scope') }})
    r"""Where the dependency is utilized. `development` means that the dependency is only utilized in the development environment. `runtime` means that the dependency is utilized at runtime and in the development environment."""  
    source_repository_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source_repository_url') }})  
    version: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version') }})  
    vulnerabilities: list[DependencyGraphDiffVulnerabilities] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vulnerabilities') }})  
    