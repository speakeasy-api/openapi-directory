"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import post as shared_post
from ..shared import topicsentimentoutput as shared_topicsentimentoutput
from enum import Enum
from typing import Optional

class TopicSentimentDomainEnum(str, Enum):
    r"""Provide analysis domain for better extraction (optional)"""
    ECOM = 'Ecom'
    EMPLOYEE = 'Employee'
    HOTEL = 'Hotel'
    RESTAURANT = 'Restaurant'


@dataclasses.dataclass
class TopicSentimentRequest:
    
    domain: Optional[TopicSentimentDomainEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'domain', 'style': 'form', 'explode': True }})
    r"""Provide analysis domain for better extraction (optional)"""  
    request_body: Optional[list[shared_post.Post]] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class TopicSentimentResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    topic_sentiment_response: Optional[list[shared_topicsentimentoutput.TopicSentimentOutput]] = dataclasses.field(default=None)  
    