// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// CommentAPIDeleteCommentEntryTypeEnum - Entry type.
type CommentAPIDeleteCommentEntryTypeEnum string

const (
	CommentAPIDeleteCommentEntryTypeEnumUndefined          CommentAPIDeleteCommentEntryTypeEnum = "Undefined"
	CommentAPIDeleteCommentEntryTypeEnumAlbum              CommentAPIDeleteCommentEntryTypeEnum = "Album"
	CommentAPIDeleteCommentEntryTypeEnumArtist             CommentAPIDeleteCommentEntryTypeEnum = "Artist"
	CommentAPIDeleteCommentEntryTypeEnumDiscussionTopic    CommentAPIDeleteCommentEntryTypeEnum = "DiscussionTopic"
	CommentAPIDeleteCommentEntryTypeEnumPv                 CommentAPIDeleteCommentEntryTypeEnum = "PV"
	CommentAPIDeleteCommentEntryTypeEnumReleaseEvent       CommentAPIDeleteCommentEntryTypeEnum = "ReleaseEvent"
	CommentAPIDeleteCommentEntryTypeEnumReleaseEventSeries CommentAPIDeleteCommentEntryTypeEnum = "ReleaseEventSeries"
	CommentAPIDeleteCommentEntryTypeEnumSong               CommentAPIDeleteCommentEntryTypeEnum = "Song"
	CommentAPIDeleteCommentEntryTypeEnumSongList           CommentAPIDeleteCommentEntryTypeEnum = "SongList"
	CommentAPIDeleteCommentEntryTypeEnumTag                CommentAPIDeleteCommentEntryTypeEnum = "Tag"
	CommentAPIDeleteCommentEntryTypeEnumUser               CommentAPIDeleteCommentEntryTypeEnum = "User"
	CommentAPIDeleteCommentEntryTypeEnumVenue              CommentAPIDeleteCommentEntryTypeEnum = "Venue"
)

func (e *CommentAPIDeleteCommentEntryTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Undefined":
		fallthrough
	case "Album":
		fallthrough
	case "Artist":
		fallthrough
	case "DiscussionTopic":
		fallthrough
	case "PV":
		fallthrough
	case "ReleaseEvent":
		fallthrough
	case "ReleaseEventSeries":
		fallthrough
	case "Song":
		fallthrough
	case "SongList":
		fallthrough
	case "Tag":
		fallthrough
	case "User":
		fallthrough
	case "Venue":
		*e = CommentAPIDeleteCommentEntryTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CommentAPIDeleteCommentEntryTypeEnum: %s", s)
	}
}

type CommentAPIDeleteCommentPathParams struct {
	// ID of the comment to be deleted.
	CommentID int `pathParam:"style=simple,explode=false,name=commentId"`
	// Entry type.
	EntryType CommentAPIDeleteCommentEntryTypeEnum `pathParam:"style=simple,explode=false,name=entryType"`
}

type CommentAPIDeleteCommentRequest struct {
	PathParams CommentAPIDeleteCommentPathParams
}

type CommentAPIDeleteCommentResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
