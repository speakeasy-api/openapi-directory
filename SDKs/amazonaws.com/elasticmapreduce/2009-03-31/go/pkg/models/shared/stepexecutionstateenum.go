// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type StepExecutionStateEnum string

const (
	StepExecutionStateEnumPending     StepExecutionStateEnum = "PENDING"
	StepExecutionStateEnumRunning     StepExecutionStateEnum = "RUNNING"
	StepExecutionStateEnumContinue    StepExecutionStateEnum = "CONTINUE"
	StepExecutionStateEnumCompleted   StepExecutionStateEnum = "COMPLETED"
	StepExecutionStateEnumCancelled   StepExecutionStateEnum = "CANCELLED"
	StepExecutionStateEnumFailed      StepExecutionStateEnum = "FAILED"
	StepExecutionStateEnumInterrupted StepExecutionStateEnum = "INTERRUPTED"
)

func (e StepExecutionStateEnum) ToPointer() *StepExecutionStateEnum {
	return &e
}

func (e *StepExecutionStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "CONTINUE":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "FAILED":
		fallthrough
	case "INTERRUPTED":
		*e = StepExecutionStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StepExecutionStateEnum: %v", v)
	}
}
