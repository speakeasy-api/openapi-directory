/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Identity } from "./identity";
import { OperationTypeEnum } from "./operationtypeenum";
import { StreamRecord } from "./streamrecord";
import { Expose, Type } from "class-transformer";

/**
 * A description of a unique event within a stream.
 */
export class RecordT extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "awsRegion" })
  awsRegion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dynamodb" })
  @Type(() => StreamRecord)
  dynamodb?: StreamRecord;

  @SpeakeasyMetadata()
  @Expose({ name: "eventID" })
  eventID?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "eventName" })
  eventName?: OperationTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "eventSource" })
  eventSource?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "eventVersion" })
  eventVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "userIdentity" })
  @Type(() => Identity)
  userIdentity?: Identity;
}
