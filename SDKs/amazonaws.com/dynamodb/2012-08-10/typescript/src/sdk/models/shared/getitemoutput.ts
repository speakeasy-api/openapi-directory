/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { AttributeValue } from "./attributevalue";
import { ConsumedCapacity } from "./consumedcapacity";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents the output of a <code>GetItem</code> operation.
 */
export class GetItemOutput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ConsumedCapacity" })
  @Type(() => ConsumedCapacity)
  consumedCapacity?: ConsumedCapacity;

  @SpeakeasyMetadata({ elemType: AttributeValue })
  @Expose({ name: "Item" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, AttributeValue> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], AttributeValue);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  item?: Record<string, AttributeValue>;
}
