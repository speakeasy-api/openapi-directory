/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class ImportProjectChoices extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "human_name" })
  humanName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tfvc_project" })
  tfvcProject?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "vcs" })
  vcs?: string;
}

export enum ImportStatusEnum {
  Auth = "auth",
  Error = "error",
  None = "none",
  Detecting = "detecting",
  Choose = "choose",
  AuthFailed = "auth_failed",
  Importing = "importing",
  Mapping = "mapping",
  WaitingToPush = "waiting_to_push",
  Pushing = "pushing",
  Complete = "complete",
  Setup = "setup",
  Unknown = "unknown",
  DetectionFoundMultiple = "detection_found_multiple",
  DetectionFoundNothing = "detection_found_nothing",
  DetectionNeedsAuth = "detection_needs_auth",
}

/**
 * A repository import from an external source.
 */
export class Import extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "authors_count" })
  authorsCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "authors_url" })
  authorsUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "commit_count" })
  commitCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "error_message" })
  errorMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "failed_step" })
  failedStep?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "has_large_files" })
  hasLargeFiles?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "import_percent" })
  importPercent?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "large_files_count" })
  largeFilesCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "large_files_size" })
  largeFilesSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata({ elemType: ImportProjectChoices })
  @Expose({ name: "project_choices" })
  @Type(() => ImportProjectChoices)
  projectChoices?: ImportProjectChoices[];

  @SpeakeasyMetadata()
  @Expose({ name: "push_percent" })
  pushPercent?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "repository_url" })
  repositoryUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: ImportStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "status_text" })
  statusText?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "svc_root" })
  svcRoot?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "svn_root" })
  svnRoot?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tfvc_project" })
  tfvcProject?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;

  @SpeakeasyMetadata()
  @Expose({ name: "use_lfs" })
  useLfs?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "vcs" })
  vcs: string;

  /**
   * The URL of the originating repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vcs_url" })
  vcsUrl: string;
}
