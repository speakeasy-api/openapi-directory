// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DynatraceConnectorOperatorEnum string

const (
	DynatraceConnectorOperatorEnumProjection          DynatraceConnectorOperatorEnum = "PROJECTION"
	DynatraceConnectorOperatorEnumBetween             DynatraceConnectorOperatorEnum = "BETWEEN"
	DynatraceConnectorOperatorEnumEqualTo             DynatraceConnectorOperatorEnum = "EQUAL_TO"
	DynatraceConnectorOperatorEnumAddition            DynatraceConnectorOperatorEnum = "ADDITION"
	DynatraceConnectorOperatorEnumMultiplication      DynatraceConnectorOperatorEnum = "MULTIPLICATION"
	DynatraceConnectorOperatorEnumDivision            DynatraceConnectorOperatorEnum = "DIVISION"
	DynatraceConnectorOperatorEnumSubtraction         DynatraceConnectorOperatorEnum = "SUBTRACTION"
	DynatraceConnectorOperatorEnumMaskAll             DynatraceConnectorOperatorEnum = "MASK_ALL"
	DynatraceConnectorOperatorEnumMaskFirstN          DynatraceConnectorOperatorEnum = "MASK_FIRST_N"
	DynatraceConnectorOperatorEnumMaskLastN           DynatraceConnectorOperatorEnum = "MASK_LAST_N"
	DynatraceConnectorOperatorEnumValidateNonNull     DynatraceConnectorOperatorEnum = "VALIDATE_NON_NULL"
	DynatraceConnectorOperatorEnumValidateNonZero     DynatraceConnectorOperatorEnum = "VALIDATE_NON_ZERO"
	DynatraceConnectorOperatorEnumValidateNonNegative DynatraceConnectorOperatorEnum = "VALIDATE_NON_NEGATIVE"
	DynatraceConnectorOperatorEnumValidateNumeric     DynatraceConnectorOperatorEnum = "VALIDATE_NUMERIC"
	DynatraceConnectorOperatorEnumNoOp                DynatraceConnectorOperatorEnum = "NO_OP"
)

func (e DynatraceConnectorOperatorEnum) ToPointer() *DynatraceConnectorOperatorEnum {
	return &e
}

func (e *DynatraceConnectorOperatorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PROJECTION":
		fallthrough
	case "BETWEEN":
		fallthrough
	case "EQUAL_TO":
		fallthrough
	case "ADDITION":
		fallthrough
	case "MULTIPLICATION":
		fallthrough
	case "DIVISION":
		fallthrough
	case "SUBTRACTION":
		fallthrough
	case "MASK_ALL":
		fallthrough
	case "MASK_FIRST_N":
		fallthrough
	case "MASK_LAST_N":
		fallthrough
	case "VALIDATE_NON_NULL":
		fallthrough
	case "VALIDATE_NON_ZERO":
		fallthrough
	case "VALIDATE_NON_NEGATIVE":
		fallthrough
	case "VALIDATE_NUMERIC":
		fallthrough
	case "NO_OP":
		*e = DynatraceConnectorOperatorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DynatraceConnectorOperatorEnum: %v", v)
	}
}
