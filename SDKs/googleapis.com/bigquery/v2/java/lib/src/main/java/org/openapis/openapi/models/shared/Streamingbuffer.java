/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Streamingbuffer {
    /**
     * [Output-only] A lower-bound estimate of the number of bytes currently in the streaming buffer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("estimatedBytes")
    public String estimatedBytes;
    public Streamingbuffer withEstimatedBytes(String estimatedBytes) {
        this.estimatedBytes = estimatedBytes;
        return this;
    }
    
    /**
     * [Output-only] A lower-bound estimate of the number of rows currently in the streaming buffer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("estimatedRows")
    public String estimatedRows;
    public Streamingbuffer withEstimatedRows(String estimatedRows) {
        this.estimatedRows = estimatedRows;
        return this;
    }
    
    /**
     * [Output-only] Contains the timestamp of the oldest entry in the streaming buffer, in milliseconds since the epoch, if the streaming buffer is available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("oldestEntryTime")
    public String oldestEntryTime;
    public Streamingbuffer withOldestEntryTime(String oldestEntryTime) {
        this.oldestEntryTime = oldestEntryTime;
        return this;
    }
    
}
