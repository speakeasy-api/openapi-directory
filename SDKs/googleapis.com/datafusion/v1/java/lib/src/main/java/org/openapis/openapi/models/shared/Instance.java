/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Instance - Represents a Data Fusion instance.
 */
public class Instance {
    /**
     * Output only. List of accelerators enabled for this CDF instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accelerators")
    public Accelerator[] accelerators;
    public Instance withAccelerators(Accelerator[] accelerators) {
        this.accelerators = accelerators;
        return this;
    }
    
    /**
     * Output only. Endpoint on which the REST APIs is accessible.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiEndpoint")
    public String apiEndpoint;
    public Instance withApiEndpoint(String apiEndpoint) {
        this.apiEndpoint = apiEndpoint;
        return this;
    }
    
    /**
     * Output only. Available versions that the instance can be upgraded to using UpdateInstanceRequest.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availableVersion")
    public Version[] availableVersion;
    public Instance withAvailableVersion(Version[] availableVersion) {
        this.availableVersion = availableVersion;
        return this;
    }
    
    /**
     * Output only. The time the instance was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public Instance withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * The crypto key configuration. This field is used by the Customer-managed encryption keys (CMEK) feature.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cryptoKeyConfig")
    public CryptoKeyConfig cryptoKeyConfig;
    public Instance withCryptoKeyConfig(CryptoKeyConfig cryptoKeyConfig) {
        this.cryptoKeyConfig = cryptoKeyConfig;
        return this;
    }
    
    /**
     * User-managed service account to set on Dataproc when Cloud Data Fusion creates Dataproc to run data processing pipelines. This allows users to have fine-grained access control on Dataproc's accesses to cloud resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataprocServiceAccount")
    public String dataprocServiceAccount;
    public Instance withDataprocServiceAccount(String dataprocServiceAccount) {
        this.dataprocServiceAccount = dataprocServiceAccount;
        return this;
    }
    
    /**
     * A description of this instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public Instance withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Output only. If the instance state is DISABLED, the reason for disabling the instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disabledReason")
    public InstanceDisabledReasonEnum[] disabledReason;
    public Instance withDisabledReason(InstanceDisabledReasonEnum[] disabledReason) {
        this.disabledReason = disabledReason;
        return this;
    }
    
    /**
     * Display name for an instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public Instance withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Option to enable granular role-based access control.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableRbac")
    public Boolean enableRbac;
    public Instance withEnableRbac(Boolean enableRbac) {
        this.enableRbac = enableRbac;
        return this;
    }
    
    /**
     * Option to enable Stackdriver Logging.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableStackdriverLogging")
    public Boolean enableStackdriverLogging;
    public Instance withEnableStackdriverLogging(Boolean enableStackdriverLogging) {
        this.enableStackdriverLogging = enableStackdriverLogging;
        return this;
    }
    
    /**
     * Option to enable Stackdriver Monitoring.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableStackdriverMonitoring")
    public Boolean enableStackdriverMonitoring;
    public Instance withEnableStackdriverMonitoring(Boolean enableStackdriverMonitoring) {
        this.enableStackdriverMonitoring = enableStackdriverMonitoring;
        return this;
    }
    
    /**
     * Option to enable granular zone separation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableZoneSeparation")
    public Boolean enableZoneSeparation;
    public Instance withEnableZoneSeparation(Boolean enableZoneSeparation) {
        this.enableZoneSeparation = enableZoneSeparation;
        return this;
    }
    
    /**
     * Confirguration of PubSubEventWriter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventPublishConfig")
    public EventPublishConfig eventPublishConfig;
    public Instance withEventPublishConfig(EventPublishConfig eventPublishConfig) {
        this.eventPublishConfig = eventPublishConfig;
        return this;
    }
    
    /**
     * Output only. Cloud Storage bucket generated by Data Fusion in the customer project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gcsBucket")
    public String gcsBucket;
    public Instance withGcsBucket(String gcsBucket) {
        this.gcsBucket = gcsBucket;
        return this;
    }
    
    /**
     * The resource labels for instance to use to annotate any related underlying resources such as Compute Engine VMs. The character '=' is not allowed to be used within the labels.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public Instance withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Output only. The name of this instance is in the form of projects/{project}/locations/{location}/instances/{instance}.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Instance withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Network configuration for a Data Fusion instance. These configurations are used for peering with the customer network. Configurations are optional when a public Data Fusion instance is to be created. However, providing these configurations allows several benefits, such as reduced network latency while accessing the customer resources from managed Data Fusion instance nodes, as well as access to the customer on-prem resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkConfig")
    public NetworkConfig networkConfig;
    public Instance withNetworkConfig(NetworkConfig networkConfig) {
        this.networkConfig = networkConfig;
        return this;
    }
    
    /**
     * Map of additional options used to configure the behavior of Data Fusion instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("options")
    public java.util.Map<String, String> options;
    public Instance withOptions(java.util.Map<String, String> options) {
        this.options = options;
        return this;
    }
    
    /**
     * Output only. P4 service account for the customer project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("p4ServiceAccount")
    public String p4ServiceAccount;
    public Instance withP4ServiceAccount(String p4ServiceAccount) {
        this.p4ServiceAccount = p4ServiceAccount;
        return this;
    }
    
    /**
     * Specifies whether the Data Fusion instance should be private. If set to true, all Data Fusion nodes will have private IP addresses and will not be able to access the public internet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateInstance")
    public Boolean privateInstance;
    public Instance withPrivateInstance(Boolean privateInstance) {
        this.privateInstance = privateInstance;
        return this;
    }
    
    /**
     * Output only. Deprecated. Use tenant_project_id instead to extract the tenant project ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccount")
    public String serviceAccount;
    public Instance withServiceAccount(String serviceAccount) {
        this.serviceAccount = serviceAccount;
        return this;
    }
    
    /**
     * Output only. Endpoint on which the Data Fusion UI is accessible.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceEndpoint")
    public String serviceEndpoint;
    public Instance withServiceEndpoint(String serviceEndpoint) {
        this.serviceEndpoint = serviceEndpoint;
        return this;
    }
    
    /**
     * Output only. The current state of this Data Fusion instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public InstanceStateEnum state;
    public Instance withState(InstanceStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Output only. Additional information about the current state of this Data Fusion instance if available.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stateMessage")
    public String stateMessage;
    public Instance withStateMessage(String stateMessage) {
        this.stateMessage = stateMessage;
        return this;
    }
    
    /**
     * Output only. The name of the tenant project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tenantProjectId")
    public String tenantProjectId;
    public Instance withTenantProjectId(String tenantProjectId) {
        this.tenantProjectId = tenantProjectId;
        return this;
    }
    
    /**
     * Required. Instance type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public InstanceTypeEnum type;
    public Instance withType(InstanceTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Output only. The time the instance was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;
    public Instance withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * Current version of the Data Fusion. Only specifiable in Update.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public String version;
    public Instance withVersion(String version) {
        this.version = version;
        return this;
    }
    
    /**
     * Name of the zone in which the Data Fusion instance will be created. Only DEVELOPER instances use this field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zone")
    public String zone;
    public Instance withZone(String zone) {
        this.zone = zone;
        return this;
    }
    
}
