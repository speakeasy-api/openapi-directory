"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RiskValueReadV1 = exports.RiskValueReadV1RequiredForEnum = exports.RiskValueReadV1InputTypeEnum = exports.RiskValueReadV1ConditionalOn = void 0;
var utils_1 = require("../../../internal/utils");
var parametertextv1_1 = require("./parametertextv1");
var class_transformer_1 = require("class-transformer");
/**
 * Array of risk parameters that triggered this question. Only returned by /applications endpoint.
 */
var RiskValueReadV1ConditionalOn = /** @class */ (function (_super) {
    __extends(RiskValueReadV1ConditionalOn, _super);
    function RiskValueReadV1ConditionalOn() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "risk_parameter_id" }),
        __metadata("design:type", Array)
    ], RiskValueReadV1ConditionalOn.prototype, "riskParameterId", void 0);
    return RiskValueReadV1ConditionalOn;
}(utils_1.SpeakeasyBase));
exports.RiskValueReadV1ConditionalOn = RiskValueReadV1ConditionalOn;
/**
 * Recommended input type. Only returned by `/applications` endpoint. [Full list of input types](https://www.heraldapi.com/docs/input-types).
 */
var RiskValueReadV1InputTypeEnum;
(function (RiskValueReadV1InputTypeEnum) {
    RiskValueReadV1InputTypeEnum["Date"] = "date";
    RiskValueReadV1InputTypeEnum["Number"] = "number";
    RiskValueReadV1InputTypeEnum["Integer"] = "integer";
    RiskValueReadV1InputTypeEnum["SelectOne"] = "select_one";
    RiskValueReadV1InputTypeEnum["SelectMany"] = "select_many";
    RiskValueReadV1InputTypeEnum["Address"] = "address";
    RiskValueReadV1InputTypeEnum["ClaimEvent"] = "claim_event";
    RiskValueReadV1InputTypeEnum["Email"] = "email";
    RiskValueReadV1InputTypeEnum["Phone"] = "phone";
    RiskValueReadV1InputTypeEnum["Year"] = "year";
    RiskValueReadV1InputTypeEnum["ShortText"] = "short_text";
    RiskValueReadV1InputTypeEnum["LongText"] = "long_text";
    RiskValueReadV1InputTypeEnum["Website"] = "website";
    RiskValueReadV1InputTypeEnum["File"] = "file";
})(RiskValueReadV1InputTypeEnum = exports.RiskValueReadV1InputTypeEnum || (exports.RiskValueReadV1InputTypeEnum = {}));
var RiskValueReadV1RequiredForEnum;
(function (RiskValueReadV1RequiredForEnum) {
    RiskValueReadV1RequiredForEnum["Quote"] = "quote";
    RiskValueReadV1RequiredForEnum["Bind"] = "bind";
    RiskValueReadV1RequiredForEnum["Null"] = "null";
})(RiskValueReadV1RequiredForEnum = exports.RiskValueReadV1RequiredForEnum || (exports.RiskValueReadV1RequiredForEnum = {}));
/**
 * Risk values assign specific values to risk parameters.
 */
var RiskValueReadV1 = /** @class */ (function (_super) {
    __extends(RiskValueReadV1, _super);
    function RiskValueReadV1() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "affects_conditions" }),
        __metadata("design:type", Boolean)
    ], RiskValueReadV1.prototype, "affectsConditions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: RiskValueReadV1 }),
        (0, class_transformer_1.Expose)({ name: "child_risk_values" }),
        (0, class_transformer_1.Type)(function () { return RiskValueReadV1; }),
        __metadata("design:type", Array)
    ], RiskValueReadV1.prototype, "childRiskValues", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "conditional_on" }),
        (0, class_transformer_1.Type)(function () { return RiskValueReadV1ConditionalOn; }),
        __metadata("design:type", RiskValueReadV1ConditionalOn)
    ], RiskValueReadV1.prototype, "conditionalOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creates_array" }),
        __metadata("design:type", Boolean)
    ], RiskValueReadV1.prototype, "createsArray", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "input_type" }),
        __metadata("design:type", String)
    ], RiskValueReadV1.prototype, "inputType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "instance" }),
        __metadata("design:type", String)
    ], RiskValueReadV1.prototype, "instance", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "parameter_text" }),
        (0, class_transformer_1.Type)(function () { return parametertextv1_1.ParameterTextV1; }),
        __metadata("design:type", parametertextv1_1.ParameterTextV1)
    ], RiskValueReadV1.prototype, "parameterText", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "relevant_products" }),
        __metadata("design:type", Array)
    ], RiskValueReadV1.prototype, "relevantProducts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "required_for" }),
        __metadata("design:type", Array)
    ], RiskValueReadV1.prototype, "requiredFor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "risk_parameter_id" }),
        __metadata("design:type", String)
    ], RiskValueReadV1.prototype, "riskParameterId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "schema" }),
        __metadata("design:type", Object)
    ], RiskValueReadV1.prototype, "schema", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "text" }),
        __metadata("design:type", String)
    ], RiskValueReadV1.prototype, "text", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "value" }),
        __metadata("design:type", Object)
    ], RiskValueReadV1.prototype, "value", void 0);
    return RiskValueReadV1;
}(utils_1.SpeakeasyBase));
exports.RiskValueReadV1 = RiskValueReadV1;
