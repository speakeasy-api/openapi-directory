// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteLaunchTemplateVersionsActionEnum
type GETDeleteLaunchTemplateVersionsActionEnum string

const (
	GETDeleteLaunchTemplateVersionsActionEnumDeleteLaunchTemplateVersions GETDeleteLaunchTemplateVersionsActionEnum = "DeleteLaunchTemplateVersions"
)

func (e GETDeleteLaunchTemplateVersionsActionEnum) ToPointer() *GETDeleteLaunchTemplateVersionsActionEnum {
	return &e
}

func (e *GETDeleteLaunchTemplateVersionsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteLaunchTemplateVersions":
		*e = GETDeleteLaunchTemplateVersionsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteLaunchTemplateVersionsActionEnum: %v", v)
	}
}

// GETDeleteLaunchTemplateVersionsVersionEnum
type GETDeleteLaunchTemplateVersionsVersionEnum string

const (
	GETDeleteLaunchTemplateVersionsVersionEnumTwoThousandAndSixteen1115 GETDeleteLaunchTemplateVersionsVersionEnum = "2016-11-15"
)

func (e GETDeleteLaunchTemplateVersionsVersionEnum) ToPointer() *GETDeleteLaunchTemplateVersionsVersionEnum {
	return &e
}

func (e *GETDeleteLaunchTemplateVersionsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDeleteLaunchTemplateVersionsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteLaunchTemplateVersionsVersionEnum: %v", v)
	}
}

type GETDeleteLaunchTemplateVersionsRequest struct {
	Action GETDeleteLaunchTemplateVersionsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// <p>The ID of the launch template.</p> <p>You must specify either the <code>LaunchTemplateId</code> or the <code>LaunchTemplateName</code>, but not both.</p>
	LaunchTemplateID *string `queryParam:"style=form,explode=true,name=LaunchTemplateId"`
	// <p>The name of the launch template.</p> <p>You must specify either the <code>LaunchTemplateName</code> or the <code>LaunchTemplateId</code>, but not both.</p>
	LaunchTemplateName *string `queryParam:"style=form,explode=true,name=LaunchTemplateName"`
	// The version numbers of one or more launch template versions to delete.
	LaunchTemplateVersion []string                                   `queryParam:"style=form,explode=true,name=LaunchTemplateVersion"`
	Version               GETDeleteLaunchTemplateVersionsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm         *string                                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteLaunchTemplateVersionsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
