// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AssociateCustomDomainXAmzTargetEnum
type AssociateCustomDomainXAmzTargetEnum string

const (
	AssociateCustomDomainXAmzTargetEnumAppRunnerAssociateCustomDomain AssociateCustomDomainXAmzTargetEnum = "AppRunner.AssociateCustomDomain"
)

func (e AssociateCustomDomainXAmzTargetEnum) ToPointer() *AssociateCustomDomainXAmzTargetEnum {
	return &e
}

func (e *AssociateCustomDomainXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AppRunner.AssociateCustomDomain":
		*e = AssociateCustomDomainXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AssociateCustomDomainXAmzTargetEnum: %v", v)
	}
}

type AssociateCustomDomainRequest struct {
	AssociateCustomDomainRequest shared.AssociateCustomDomainRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   AssociateCustomDomainXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AssociateCustomDomainResponse struct {
	// Success
	AssociateCustomDomainResponse *shared.AssociateCustomDomainResponse
	ContentType                   string
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// InvalidStateException
	InvalidStateException interface{}
	StatusCode            int
	RawResponse           *http.Response
}
