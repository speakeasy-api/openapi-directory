/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EnterpriseCrmEventbusProtoEventParameters } from "./enterprisecrmeventbusprotoeventparameters";
import { Expose, Type } from "class-transformer";

export class EnterpriseCrmEventbusProtoTriggerCriteria extends SpeakeasyBase {
  /**
   * Required. Standard filter expression, when true the workflow will be executed. If there's no trigger_criteria_task_implementation_class_name specified, the condition will be validated directly.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "condition" })
  condition?: string;

  /**
   * LINT.IfChange This message is used for processing and persisting (when applicable) key value pair parameters for each event in the event bus. Please see
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parameters" })
  @Type(() => EnterpriseCrmEventbusProtoEventParameters)
  parameters?: EnterpriseCrmEventbusProtoEventParameters;

  /**
   * Optional. Implementation class name. The class should implement the “TypedTask” interface.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "triggerCriteriaTaskImplementationClassName" })
  triggerCriteriaTaskImplementationClassName?: string;
}
