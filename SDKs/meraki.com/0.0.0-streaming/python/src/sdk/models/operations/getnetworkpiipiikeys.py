"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Any, Optional


@dataclasses.dataclass
class GetNetworkPiiPiiKeysRequest:
    
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    bluetooth_mac: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'bluetoothMac', 'style': 'form', 'explode': True }})
    r"""The MAC of a Bluetooth client"""  
    email: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'email', 'style': 'form', 'explode': True }})
    r"""The email of a network user account or a Systems Manager device"""  
    imei: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'imei', 'style': 'form', 'explode': True }})
    r"""The IMEI of a Systems Manager device"""  
    mac: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'mac', 'style': 'form', 'explode': True }})
    r"""The MAC of a network client device or a Systems Manager device"""  
    serial: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'serial', 'style': 'form', 'explode': True }})
    r"""The serial of a Systems Manager device"""  
    username: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'username', 'style': 'form', 'explode': True }})
    r"""The username of a Systems Manager user"""  
    

@dataclasses.dataclass
class GetNetworkPiiPiiKeysResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_network_pii_pii_keys_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    