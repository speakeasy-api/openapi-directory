/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Subscription } from "./subscription";
import { Expose, Type } from "class-transformer";

/**
 * This type is used by the response payload for the <b>getSubscription</b> method.<br /><br /><span class="tablenote"><b>Note</b>: Pagination has not yet been enabled for <b>getSubscription</b>, so all of the pagination-related fields are for future use.</span>
 */
export class SubscriptionResponse extends SpeakeasyBase {
  /**
   * This field is for future use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;

  /**
   * This field is for future use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;

  /**
   * This field is for future use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "next" })
  next?: string;

  /**
   * An array of subscriptions associated with the seller account.
   */
  @SpeakeasyMetadata({ elemType: Subscription })
  @Expose({ name: "subscriptions" })
  @Type(() => Subscription)
  subscriptions?: Subscription[];

  /**
   * The total number of subscriptions displayed on the current page of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total?: number;
}
