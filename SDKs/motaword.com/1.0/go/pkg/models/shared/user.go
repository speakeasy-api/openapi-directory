// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"openapi/pkg/types"
)

type UserClientCorporate struct {
	Email *string `json:"email,omitempty"`
	ID    *int64  `json:"id,omitempty"`
	Logo  *string `json:"logo,omitempty"`
	Name  *string `json:"name,omitempty"`
}

type UserClient struct {
	Corporate *UserClientCorporate `json:"corporate,omitempty"`
	Nps       *float32             `json:"nps,omitempty"`
	Subjects  map[string]int64     `json:"subjects,omitempty"`
}

type UserVendor struct {
	CanWorkManualFiles *bool          `json:"can_work_manual_files,omitempty"`
	IsFrozen           *bool          `json:"is_frozen,omitempty"`
	IsProofreader      *bool          `json:"is_proofreader,omitempty"`
	LanguagePairs      []LanguagePair `json:"language_pairs,omitempty"`
	// Native language of user
	NativeLanguage *string  `json:"native_language,omitempty"`
	PaypalEmail    *string  `json:"paypal_email,omitempty"`
	Require1099    *bool    `json:"require_1099,omitempty"`
	Tags           []string `json:"tags,omitempty"`
	TmsUserName    *string  `json:"tms_user_name,omitempty"`
}

// User - Created or updated user
type User struct {
	Billing  *BillingAddress `json:"billing,omitempty"`
	Birthday *types.Date     `json:"birthday,omitempty"`
	// \@deprecated. use `vendor` key
	CanWorkManualFiles *bool `json:"can_work_manual_files,omitempty"`
	// \@deprecated. use mailing or billing key.
	City        *string     `json:"city,omitempty"`
	Client      *UserClient `json:"client,omitempty"`
	CorporateID *int64      `json:"corporate_id,omitempty"`
	// \@deprecated. use mailing or billing key.
	Country *string `json:"country,omitempty"`
	// Unix epoch time
	CreatedAt    *int64  `json:"created_at,omitempty"`
	DoNotContact *bool   `json:"do_not_contact,omitempty"`
	Email        *string `json:"email,omitempty"`
	FirstName    *string `json:"first_name,omitempty"`
	HasPwd       *bool   `json:"has_pwd,omitempty"`
	ID           *int64  `json:"id,omitempty"`
	IsClient     *bool   `json:"is_client,omitempty"`
	IsDeveloper  *bool   `json:"is_developer,omitempty"`
	// \@deprecated. use `vendor` key
	IsProofreader *bool `json:"is_proofreader,omitempty"`
	IsProspect    *bool `json:"is_prospect,omitempty"`
	IsSalesPerson *bool `json:"is_sales_person,omitempty"`
	IsVendor      *bool `json:"is_vendor,omitempty"`
	// \@deprecated. use `vendor` key
	LanguagePairs []LanguagePair `json:"language_pairs,omitempty"`
	LastName      *string        `json:"last_name,omitempty"`
	// Unix epoch time
	LastSeenOnlineAt *int64     `json:"last_seen_online_at,omitempty"`
	Links            *UserLinks `json:"links,omitempty"`
	// User Locale
	Locale  *string  `json:"locale,omitempty"`
	Mailing *Address `json:"mailing,omitempty"`
	Name    *string  `json:"name,omitempty"`
	// \@deprecated. Native language of user
	NativeLanguage *string `json:"native_language,omitempty"`
	// \@deprecated. use /stats endpoint for the current nps value.
	Nps                *float32     `json:"nps,omitempty"`
	PhoneNumber        *string      `json:"phone_number,omitempty"`
	ProfilePicturePath *string      `json:"profile_picture_path,omitempty"`
	SocialMedia        *SocialMedia `json:"social_media,omitempty"`
	// \@deprecated. use mailing or billing key.
	State  *string `json:"state,omitempty"`
	Status *string `json:"status,omitempty"`
	// \@deprecated. use mailing or billing key.
	Street   *string `json:"street,omitempty"`
	Timezone *string `json:"timezone,omitempty"`
	// \@deprecated. use `vendor` key
	TmsUserName *string     `json:"tms_user_name,omitempty"`
	UserGroups  []UserGroup `json:"user_groups,omitempty"`
	Vendor      *UserVendor `json:"vendor,omitempty"`
	// \@deprecated. use mailing or billing key. new key name is "zip".
	ZipCode *string `json:"zip_code,omitempty"`
}
