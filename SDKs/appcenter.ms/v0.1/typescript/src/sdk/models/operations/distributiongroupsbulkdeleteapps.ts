/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class DistributionGroupsBulkDeleteAppsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class DistributionGroupsBulkDeleteAppsRequestBodyApps extends SpeakeasyBase {
  /**
   * The name of the app to be deleted from the distribution group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

/**
 * The name of the apps to be deleted from the distribution group. The apps have to be owned by the organization.
 */
export class DistributionGroupsBulkDeleteAppsRequestBody extends SpeakeasyBase {
  /**
   * The list of apps to delete from the distribution group
   */
  @SpeakeasyMetadata({
    elemType: DistributionGroupsBulkDeleteAppsRequestBodyApps,
  })
  @Expose({ name: "apps" })
  @Type(() => DistributionGroupsBulkDeleteAppsRequestBodyApps)
  apps?: DistributionGroupsBulkDeleteAppsRequestBodyApps[];
}

export class DistributionGroupsBulkDeleteAppsRequest extends SpeakeasyBase {
  /**
   * The name of the apps to be deleted from the distribution group. The apps have to be owned by the organization.
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: DistributionGroupsBulkDeleteAppsRequestBody;

  /**
   * The name of the distribution group
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=distribution_group_name",
  })
  distributionGroupName: string;

  /**
   * The organization's name
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=org_name",
  })
  orgName: string;
}

export class DistributionGroupsBulkDeleteAppsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
