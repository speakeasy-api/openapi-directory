// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// PostAppsAppIDVersionsVersionStatusModifiedByEnum - The role initiating this status change. Can be either 'developer' or 'administrator' (default)
type PostAppsAppIDVersionsVersionStatusModifiedByEnum string

const (
	PostAppsAppIDVersionsVersionStatusModifiedByEnumDeveloper     PostAppsAppIDVersionsVersionStatusModifiedByEnum = "developer"
	PostAppsAppIDVersionsVersionStatusModifiedByEnumAdministrator PostAppsAppIDVersionsVersionStatusModifiedByEnum = "administrator"
)

func (e PostAppsAppIDVersionsVersionStatusModifiedByEnum) ToPointer() *PostAppsAppIDVersionsVersionStatusModifiedByEnum {
	return &e
}

func (e *PostAppsAppIDVersionsVersionStatusModifiedByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "developer":
		fallthrough
	case "administrator":
		*e = PostAppsAppIDVersionsVersionStatusModifiedByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostAppsAppIDVersionsVersionStatusModifiedByEnum: %v", v)
	}
}

// PostAppsAppIDVersionsVersionStatusStatusEnum - The new status for this app. Can be either 'inReview', 'approved', 'suspended' or 'rejected'
type PostAppsAppIDVersionsVersionStatusStatusEnum string

const (
	PostAppsAppIDVersionsVersionStatusStatusEnumInReview  PostAppsAppIDVersionsVersionStatusStatusEnum = "inReview"
	PostAppsAppIDVersionsVersionStatusStatusEnumApproved  PostAppsAppIDVersionsVersionStatusStatusEnum = "approved"
	PostAppsAppIDVersionsVersionStatusStatusEnumSuspended PostAppsAppIDVersionsVersionStatusStatusEnum = "suspended"
	PostAppsAppIDVersionsVersionStatusStatusEnumRejected  PostAppsAppIDVersionsVersionStatusStatusEnum = "rejected"
)

func (e PostAppsAppIDVersionsVersionStatusStatusEnum) ToPointer() *PostAppsAppIDVersionsVersionStatusStatusEnum {
	return &e
}

func (e *PostAppsAppIDVersionsVersionStatusStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "inReview":
		fallthrough
	case "approved":
		fallthrough
	case "suspended":
		fallthrough
	case "rejected":
		*e = PostAppsAppIDVersionsVersionStatusStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostAppsAppIDVersionsVersionStatusStatusEnum: %v", v)
	}
}

type PostAppsAppIDVersionsVersionStatusRequest struct {
	// The id of the App to be updated
	AppID string `pathParam:"style=simple,explode=false,name=appId"`
	// The unique id of the developer that is modifying this app
	DeveloperID *string `queryParam:"style=form,explode=true,name=developerId"`
	// The role initiating this status change. Can be either 'developer' or 'administrator' (default)
	ModifiedBy *PostAppsAppIDVersionsVersionStatusModifiedByEnum `queryParam:"style=form,explode=true,name=modifiedBy"`
	// The reason for this status change
	Reason *string `queryParam:"style=form,explode=true,name=reason"`
	// The new status for this app. Can be either 'inReview', 'approved', 'suspended' or 'rejected'
	Status *PostAppsAppIDVersionsVersionStatusStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// The version of the App to be updated
	Version int64 `pathParam:"style=simple,explode=false,name=version"`
}

type PostAppsAppIDVersionsVersionStatusResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
