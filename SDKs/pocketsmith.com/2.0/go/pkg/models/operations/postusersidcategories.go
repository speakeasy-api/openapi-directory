// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PostUsersIDCategoriesRequestBodyRefundBehaviourEnum - Set the refund behaviour of the category.
type PostUsersIDCategoriesRequestBodyRefundBehaviourEnum string

const (
	PostUsersIDCategoriesRequestBodyRefundBehaviourEnumDebitsAreDeductions    PostUsersIDCategoriesRequestBodyRefundBehaviourEnum = "debits_are_deductions"
	PostUsersIDCategoriesRequestBodyRefundBehaviourEnumCreditsAreRefunds      PostUsersIDCategoriesRequestBodyRefundBehaviourEnum = "credits_are_refunds"
	PostUsersIDCategoriesRequestBodyRefundBehaviourEnumLessThanNilGreaterThan PostUsersIDCategoriesRequestBodyRefundBehaviourEnum = "<nil>"
)

func (e PostUsersIDCategoriesRequestBodyRefundBehaviourEnum) ToPointer() *PostUsersIDCategoriesRequestBodyRefundBehaviourEnum {
	return &e
}

func (e *PostUsersIDCategoriesRequestBodyRefundBehaviourEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "debits_are_deductions":
		fallthrough
	case "credits_are_refunds":
		fallthrough
	case "<nil>":
		*e = PostUsersIDCategoriesRequestBodyRefundBehaviourEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostUsersIDCategoriesRequestBodyRefundBehaviourEnum: %v", v)
	}
}

type PostUsersIDCategoriesRequestBody struct {
	// A CSS-style hex colour for the category.
	Colour *string `json:"colour,omitempty"`
	// Set the category as a bill category.
	IsBill *bool `json:"is_bill,omitempty"`
	// Set the category as a transfer category.
	IsTransfer *bool `json:"is_transfer,omitempty"`
	// The unique identifier of a category to be the parent of this category.
	ParentID *int64 `json:"parent_id,omitempty"`
	// Set the refund behaviour of the category.
	RefundBehaviour *PostUsersIDCategoriesRequestBodyRefundBehaviourEnum `json:"refund_behaviour,omitempty"`
	// Set the category to be rolled up into its parent category.
	RollUp *bool `json:"roll_up,omitempty"`
	// A title for the category.
	Title string `json:"title"`
}

type PostUsersIDCategoriesRequest struct {
	RequestBody *PostUsersIDCategoriesRequestBody `request:"mediaType=application/json"`
	// The unique identifier of the user.
	ID int64 `pathParam:"style=simple,explode=false,name=id"`
}

type PostUsersIDCategoriesResponse struct {
	// Success
	Category    *shared.Category
	ContentType string
	// Not Allowed
	Error       *shared.Error
	StatusCode  int
	RawResponse *http.Response
}
