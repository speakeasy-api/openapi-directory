"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PromotionPromotionStatusDestinationStatusStatusEnum(str, Enum):
    r"""The status for the specified destination."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    IN_REVIEW = 'IN_REVIEW'
    REJECTED = 'REJECTED'
    LIVE = 'LIVE'
    STOPPED = 'STOPPED'
    EXPIRED = 'EXPIRED'
    PENDING = 'PENDING'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PromotionPromotionStatusDestinationStatus:
    r"""The destination status of the promotion."""
    
    destination: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destination'), 'exclude': lambda f: f is None }})
    r"""The name of the destination."""  
    status: Optional[PromotionPromotionStatusDestinationStatusStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The status for the specified destination."""  
    