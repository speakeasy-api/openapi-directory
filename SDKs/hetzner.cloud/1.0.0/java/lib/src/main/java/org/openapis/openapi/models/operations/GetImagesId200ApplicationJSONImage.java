/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetImagesId200ApplicationJSONImage {
    /**
     * ID of Server the Image is bound to. Only set for Images of type `backup`.
     */
    @JsonProperty("bound_to")
    public Long boundTo;

    public GetImagesId200ApplicationJSONImage withBoundTo(Long boundTo) {
        this.boundTo = boundTo;
        return this;
    }
    
    /**
     * Point in time when the Resource was created (in ISO-8601 format)
     */
    @JsonProperty("created")
    public String created;

    public GetImagesId200ApplicationJSONImage withCreated(String created) {
        this.created = created;
        return this;
    }
    
    /**
     * Information about the Server the Image was created from
     */
    @JsonProperty("created_from")
    public GetImagesId200ApplicationJSONImageCreatedFrom createdFrom;

    public GetImagesId200ApplicationJSONImage withCreatedFrom(GetImagesId200ApplicationJSONImageCreatedFrom createdFrom) {
        this.createdFrom = createdFrom;
        return this;
    }
    
    /**
     * Point in time where the Image was deleted (in ISO-8601 format)
     */
    @JsonProperty("deleted")
    public String deleted;

    public GetImagesId200ApplicationJSONImage withDeleted(String deleted) {
        this.deleted = deleted;
        return this;
    }
    
    /**
     * Point in time when the Image is considered to be deprecated (in ISO-8601 format)
     */
    @JsonProperty("deprecated")
    public String deprecated;

    public GetImagesId200ApplicationJSONImage withDeprecated(String deprecated) {
        this.deprecated = deprecated;
        return this;
    }
    
    /**
     * Description of the Image
     */
    @JsonProperty("description")
    public String description;

    public GetImagesId200ApplicationJSONImage withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Size of the disk contained in the Image in GB
     */
    @JsonProperty("disk_size")
    public Double diskSize;

    public GetImagesId200ApplicationJSONImage withDiskSize(Double diskSize) {
        this.diskSize = diskSize;
        return this;
    }
    
    /**
     * ID of the Resource
     */
    @JsonProperty("id")
    public Long id;

    public GetImagesId200ApplicationJSONImage withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.
     */
    @JsonProperty("image_size")
    public Double imageSize;

    public GetImagesId200ApplicationJSONImage withImageSize(Double imageSize) {
        this.imageSize = imageSize;
        return this;
    }
    
    /**
     * User-defined labels (key-value pairs)
     */
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public GetImagesId200ApplicationJSONImage withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Unique identifier of the Image. This value is only set for system Images.
     */
    @JsonProperty("name")
    public String name;

    public GetImagesId200ApplicationJSONImage withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Flavor of operating system contained in the Image
     */
    @JsonProperty("os_flavor")
    public GetImagesId200ApplicationJSONImageOsFlavorEnum osFlavor;

    public GetImagesId200ApplicationJSONImage withOsFlavor(GetImagesId200ApplicationJSONImageOsFlavorEnum osFlavor) {
        this.osFlavor = osFlavor;
        return this;
    }
    
    /**
     * Operating system version
     */
    @JsonProperty("os_version")
    public String osVersion;

    public GetImagesId200ApplicationJSONImage withOsVersion(String osVersion) {
        this.osVersion = osVersion;
        return this;
    }
    
    /**
     * Protection configuration for the Resource
     */
    @JsonProperty("protection")
    public GetImagesId200ApplicationJSONImageProtection protection;

    public GetImagesId200ApplicationJSONImage withProtection(GetImagesId200ApplicationJSONImageProtection protection) {
        this.protection = protection;
        return this;
    }
    
    /**
     * Indicates that rapid deploy of the Image is available
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rapid_deploy")
    public Boolean rapidDeploy;

    public GetImagesId200ApplicationJSONImage withRapidDeploy(Boolean rapidDeploy) {
        this.rapidDeploy = rapidDeploy;
        return this;
    }
    
    /**
     * Whether the Image can be used or if it's still being created or unavailable
     */
    @JsonProperty("status")
    public GetImagesId200ApplicationJSONImageStatusEnum status;

    public GetImagesId200ApplicationJSONImage withStatus(GetImagesId200ApplicationJSONImageStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Type of the Image
     */
    @JsonProperty("type")
    public GetImagesId200ApplicationJSONImageTypeEnum type;

    public GetImagesId200ApplicationJSONImage withType(GetImagesId200ApplicationJSONImageTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public GetImagesId200ApplicationJSONImage(@JsonProperty("bound_to") Long boundTo, @JsonProperty("created") String created, @JsonProperty("created_from") GetImagesId200ApplicationJSONImageCreatedFrom createdFrom, @JsonProperty("deleted") String deleted, @JsonProperty("deprecated") String deprecated, @JsonProperty("description") String description, @JsonProperty("disk_size") Double diskSize, @JsonProperty("id") Long id, @JsonProperty("image_size") Double imageSize, @JsonProperty("labels") java.util.Map<String, String> labels, @JsonProperty("name") String name, @JsonProperty("os_flavor") GetImagesId200ApplicationJSONImageOsFlavorEnum osFlavor, @JsonProperty("os_version") String osVersion, @JsonProperty("protection") GetImagesId200ApplicationJSONImageProtection protection, @JsonProperty("status") GetImagesId200ApplicationJSONImageStatusEnum status, @JsonProperty("type") GetImagesId200ApplicationJSONImageTypeEnum type) {
        this.boundTo = boundTo;
        this.created = created;
        this.createdFrom = createdFrom;
        this.deleted = deleted;
        this.deprecated = deprecated;
        this.description = description;
        this.diskSize = diskSize;
        this.id = id;
        this.imageSize = imageSize;
        this.labels = labels;
        this.name = name;
        this.osFlavor = osFlavor;
        this.osVersion = osVersion;
        this.protection = protection;
        this.status = status;
        this.type = type;
  }
}
