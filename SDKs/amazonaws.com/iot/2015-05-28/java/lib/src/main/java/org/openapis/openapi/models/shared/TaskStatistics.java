/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TaskStatistics - Statistics for the checks performed during the audit.
 */
public class TaskStatistics {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canceledChecks")
    public Long canceledChecks;
    public TaskStatistics withCanceledChecks(Long canceledChecks) {
        this.canceledChecks = canceledChecks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compliantChecks")
    public Long compliantChecks;
    public TaskStatistics withCompliantChecks(Long compliantChecks) {
        this.compliantChecks = compliantChecks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failedChecks")
    public Long failedChecks;
    public TaskStatistics withFailedChecks(Long failedChecks) {
        this.failedChecks = failedChecks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inProgressChecks")
    public Long inProgressChecks;
    public TaskStatistics withInProgressChecks(Long inProgressChecks) {
        this.inProgressChecks = inProgressChecks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nonCompliantChecks")
    public Long nonCompliantChecks;
    public TaskStatistics withNonCompliantChecks(Long nonCompliantChecks) {
        this.nonCompliantChecks = nonCompliantChecks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalChecks")
    public Long totalChecks;
    public TaskStatistics withTotalChecks(Long totalChecks) {
        this.totalChecks = totalChecks;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("waitingForDataCollectionChecks")
    public Long waitingForDataCollectionChecks;
    public TaskStatistics withWaitingForDataCollectionChecks(Long waitingForDataCollectionChecks) {
        this.waitingForDataCollectionChecks = waitingForDataCollectionChecks;
        return this;
    }
    
}
