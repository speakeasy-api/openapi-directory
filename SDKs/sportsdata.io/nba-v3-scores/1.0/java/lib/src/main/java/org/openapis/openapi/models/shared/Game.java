/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Game {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AlternateID")
    public Long alternateID;
    public Game withAlternateID(Long alternateID) {
        this.alternateID = alternateID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Attendance")
    public Long attendance;
    public Game withAttendance(Long attendance) {
        this.attendance = attendance;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayRotationNumber")
    public Long awayRotationNumber;
    public Game withAwayRotationNumber(Long awayRotationNumber) {
        this.awayRotationNumber = awayRotationNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayTeam")
    public String awayTeam;
    public Game withAwayTeam(String awayTeam) {
        this.awayTeam = awayTeam;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayTeamID")
    public Long awayTeamID;
    public Game withAwayTeamID(Long awayTeamID) {
        this.awayTeamID = awayTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayTeamMoneyLine")
    public Long awayTeamMoneyLine;
    public Game withAwayTeamMoneyLine(Long awayTeamMoneyLine) {
        this.awayTeamMoneyLine = awayTeamMoneyLine;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayTeamScore")
    public Long awayTeamScore;
    public Game withAwayTeamScore(Long awayTeamScore) {
        this.awayTeamScore = awayTeamScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Channel")
    public String channel;
    public Game withChannel(String channel) {
        this.channel = channel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CrewChiefID")
    public Long crewChiefID;
    public Game withCrewChiefID(Long crewChiefID) {
        this.crewChiefID = crewChiefID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DateTime")
    public String dateTime;
    public Game withDateTime(String dateTime) {
        this.dateTime = dateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DateTimeUTC")
    public String dateTimeUTC;
    public Game withDateTimeUTC(String dateTimeUTC) {
        this.dateTimeUTC = dateTimeUTC;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Day")
    public String day;
    public Game withDay(String day) {
        this.day = day;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameEndDateTime")
    public String gameEndDateTime;
    public Game withGameEndDateTime(String gameEndDateTime) {
        this.gameEndDateTime = gameEndDateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameID")
    public Long gameID;
    public Game withGameID(Long gameID) {
        this.gameID = gameID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalAwayTeamID")
    public Long globalAwayTeamID;
    public Game withGlobalAwayTeamID(Long globalAwayTeamID) {
        this.globalAwayTeamID = globalAwayTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalGameID")
    public Long globalGameID;
    public Game withGlobalGameID(Long globalGameID) {
        this.globalGameID = globalGameID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GlobalHomeTeamID")
    public Long globalHomeTeamID;
    public Game withGlobalHomeTeamID(Long globalHomeTeamID) {
        this.globalHomeTeamID = globalHomeTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeRotationNumber")
    public Long homeRotationNumber;
    public Game withHomeRotationNumber(Long homeRotationNumber) {
        this.homeRotationNumber = homeRotationNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeTeam")
    public String homeTeam;
    public Game withHomeTeam(String homeTeam) {
        this.homeTeam = homeTeam;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeTeamID")
    public Long homeTeamID;
    public Game withHomeTeamID(Long homeTeamID) {
        this.homeTeamID = homeTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeTeamMoneyLine")
    public Long homeTeamMoneyLine;
    public Game withHomeTeamMoneyLine(Long homeTeamMoneyLine) {
        this.homeTeamMoneyLine = homeTeamMoneyLine;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeTeamScore")
    public Long homeTeamScore;
    public Game withHomeTeamScore(Long homeTeamScore) {
        this.homeTeamScore = homeTeamScore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("IsClosed")
    public Boolean isClosed;
    public Game withIsClosed(Boolean isClosed) {
        this.isClosed = isClosed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LastPlay")
    public String lastPlay;
    public Game withLastPlay(String lastPlay) {
        this.lastPlay = lastPlay;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NeutralVenue")
    public Boolean neutralVenue;
    public Game withNeutralVenue(Boolean neutralVenue) {
        this.neutralVenue = neutralVenue;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OverPayout")
    public Long overPayout;
    public Game withOverPayout(Long overPayout) {
        this.overPayout = overPayout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OverUnder")
    public Double overUnder;
    public Game withOverUnder(Double overUnder) {
        this.overUnder = overUnder;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PointSpread")
    public Double pointSpread;
    public Game withPointSpread(Double pointSpread) {
        this.pointSpread = pointSpread;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PointSpreadAwayTeamMoneyLine")
    public Long pointSpreadAwayTeamMoneyLine;
    public Game withPointSpreadAwayTeamMoneyLine(Long pointSpreadAwayTeamMoneyLine) {
        this.pointSpreadAwayTeamMoneyLine = pointSpreadAwayTeamMoneyLine;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PointSpreadHomeTeamMoneyLine")
    public Long pointSpreadHomeTeamMoneyLine;
    public Game withPointSpreadHomeTeamMoneyLine(Long pointSpreadHomeTeamMoneyLine) {
        this.pointSpreadHomeTeamMoneyLine = pointSpreadHomeTeamMoneyLine;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Quarter")
    public String quarter;
    public Game withQuarter(String quarter) {
        this.quarter = quarter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Quarters")
    public Quarter[] quarters;
    public Game withQuarters(Quarter[] quarters) {
        this.quarters = quarters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RefereeID")
    public Long refereeID;
    public Game withRefereeID(Long refereeID) {
        this.refereeID = refereeID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Season")
    public Long season;
    public Game withSeason(Long season) {
        this.season = season;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SeasonType")
    public Long seasonType;
    public Game withSeasonType(Long seasonType) {
        this.seasonType = seasonType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SeriesInfo")
    public Series seriesInfo;
    public Game withSeriesInfo(Series seriesInfo) {
        this.seriesInfo = seriesInfo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StadiumID")
    public Long stadiumID;
    public Game withStadiumID(Long stadiumID) {
        this.stadiumID = stadiumID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public String status;
    public Game withStatus(String status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TimeRemainingMinutes")
    public Long timeRemainingMinutes;
    public Game withTimeRemainingMinutes(Long timeRemainingMinutes) {
        this.timeRemainingMinutes = timeRemainingMinutes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TimeRemainingSeconds")
    public Long timeRemainingSeconds;
    public Game withTimeRemainingSeconds(Long timeRemainingSeconds) {
        this.timeRemainingSeconds = timeRemainingSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UmpireID")
    public Long umpireID;
    public Game withUmpireID(Long umpireID) {
        this.umpireID = umpireID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UnderPayout")
    public Long underPayout;
    public Game withUnderPayout(Long underPayout) {
        this.underPayout = underPayout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Updated")
    public String updated;
    public Game withUpdated(String updated) {
        this.updated = updated;
        return this;
    }
    
}
