<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ListTaskRequest
{
    /**
     * The `assignment_status` of the Tasks you want to read. Can be: `pending`, `reserved`, `assigned`, `canceled`, `wrapping`, or `completed`. Returns all Tasks in the Workspace with the specified `assignment_status`.
     * 
     * @var ?array<string> $assignmentStatus
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=AssignmentStatus')]
    public ?array $assignmentStatus = null;
    
    /**
     * The attributes of the Tasks to read. Returns the Tasks that match the attributes specified in this parameter.
     * 
     * @var ?string $evaluateTaskAttributes
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=EvaluateTaskAttributes')]
    public ?string $evaluateTaskAttributes = null;
    
    /**
     * Whether to read Tasks with addons. If `true`, returns only Tasks with addons. If `false`, returns only Tasks without addons.
     * 
     * @var ?bool $hasAddons
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=HasAddons')]
    public ?bool $hasAddons = null;
    
    /**
     * How to order the returned Task resources. y default, Tasks are sorted by ascending DateCreated. This value is specified as: `Attribute:Order`, where `Attribute` can be either `Priority` or `DateCreated` and `Order` can be either `asc` or `desc`. For example, `Priority:desc` returns Tasks ordered in descending order of their Priority. Multiple sort orders can be specified in a comma-separated list such as `Priority:desc,DateCreated:asc`, which returns the Tasks in descending Priority order and ascending DateCreated Order.
     * 
     * @var ?string $ordering
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Ordering')]
    public ?string $ordering = null;
    
    /**
     * The page index. This value is simply for client state.
     * 
     * @var ?int $page
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Page')]
    public ?int $page = null;
    
    /**
     * How many resources to return in each list page. The default is 50, and the maximum is 1000.
     * 
     * @var ?int $pageSize
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=PageSize')]
    public ?int $pageSize = null;
    
    /**
     * The page token. This is provided by the API.
     * 
     * @var ?string $pageToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=PageToken')]
    public ?string $pageToken = null;
    
    /**
     * The priority value of the Tasks to read. Returns the list of all Tasks in the Workspace with the specified priority.
     * 
     * @var ?int $priority
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=Priority')]
    public ?int $priority = null;
    
    /**
     * The `friendly_name` of the TaskQueue with the Tasks to read. Returns the Tasks waiting in the TaskQueue identified by this friendly name.
     * 
     * @var ?string $taskQueueName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=TaskQueueName')]
    public ?string $taskQueueName = null;
    
    /**
     * The SID of the TaskQueue with the Tasks to read. Returns the Tasks waiting in the TaskQueue identified by this SID.
     * 
     * @var ?string $taskQueueSid
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=TaskQueueSid')]
    public ?string $taskQueueSid = null;
    
    /**
     * The friendly name of the Workflow with the Tasks to read. Returns the Tasks controlled by the Workflow identified by this friendly name.
     * 
     * @var ?string $workflowName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=WorkflowName')]
    public ?string $workflowName = null;
    
    /**
     * The SID of the Workflow with the Tasks to read. Returns the Tasks controlled by the Workflow identified by this SID.
     * 
     * @var ?string $workflowSid
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=WorkflowSid')]
    public ?string $workflowSid = null;
    
    /**
     * The SID of the Workspace with the Tasks to read.
     * 
     * @var string $workspaceSid
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=WorkspaceSid')]
    public string $workspaceSid;
    
	public function __construct()
	{
		$this->assignmentStatus = null;
		$this->evaluateTaskAttributes = null;
		$this->hasAddons = null;
		$this->ordering = null;
		$this->page = null;
		$this->pageSize = null;
		$this->pageToken = null;
		$this->priority = null;
		$this->taskQueueName = null;
		$this->taskQueueSid = null;
		$this->workflowName = null;
		$this->workflowSid = null;
		$this->workspaceSid = "";
	}
}
