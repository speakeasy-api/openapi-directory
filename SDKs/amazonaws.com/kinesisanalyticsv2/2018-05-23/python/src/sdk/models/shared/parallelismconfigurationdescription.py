"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import configurationtype_enum as shared_configurationtype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ParallelismConfigurationDescription:
    r"""Describes parameters for how a Flink-based Kinesis Data Analytics application executes multiple tasks simultaneously."""
    
    auto_scaling_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AutoScalingEnabled'), 'exclude': lambda f: f is None }})  
    configuration_type: Optional[shared_configurationtype_enum.ConfigurationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConfigurationType'), 'exclude': lambda f: f is None }})  
    current_parallelism: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CurrentParallelism'), 'exclude': lambda f: f is None }})  
    parallelism: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Parallelism'), 'exclude': lambda f: f is None }})  
    parallelism_per_kpu: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ParallelismPerKPU'), 'exclude': lambda f: f is None }})  
    