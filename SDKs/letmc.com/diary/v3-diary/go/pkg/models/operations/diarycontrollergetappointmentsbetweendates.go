// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type DiaryControllerGetAppointmentsBetweenDatesRequest struct {
	// The appointment IDs to search for
	AppointmentTypesToSearch []string `queryParam:"style=form,explode=true,name=appointmentTypesToSearch"`
	// The unique ID of the Branch
	BranchID string `queryParam:"style=form,explode=true,name=branchID"`
	// The maximum number of items to return (up to 1000 per request)
	Count int `queryParam:"style=form,explode=true,name=count"`
	// The search to date
	EndDate time.Time `queryParam:"style=form,explode=true,name=endDate"`
	// The index of the first item to return
	Offset int `queryParam:"style=form,explode=true,name=offset"`
	// The unique client short-name
	ShortName string `pathParam:"style=simple,explode=false,name=shortName"`
	// The search from date
	StartDate time.Time `queryParam:"style=form,explode=true,name=startDate"`
}

type DiaryControllerGetAppointmentsBetweenDatesResponse struct {
	Body        []byte
	ContentType string
	// OK
	DiaryAppointmentModelResults *shared.DiaryAppointmentModelResults
	StatusCode                   int
	RawResponse                  *http.Response
}
