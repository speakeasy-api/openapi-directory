"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import assignee as shared_assignee
from ..shared import follower as shared_follower
from ..shared import target as shared_target
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NewTaskRequest:
    
    assignee: shared_assignee.Assignee = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assignee') }})  
    context: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('context') }})  
    description: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description') }})  
    domain: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domain') }})  
    due_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dueDate') }})  
    followers: list[shared_follower.Follower] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('followers') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    parent_task_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentTaskId') }})  
    priority: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priority') }})  
    surrogate_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('surrogateKey') }})  
    target: list[shared_target.Target] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('target') }})  
    