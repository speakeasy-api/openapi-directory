/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class EcommerceStore {
    /**
     * The store's admin login URL
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("admin_url")
    public String adminUrl;
    public EcommerceStore withAdminUrl(String adminUrl) {
        this.adminUrl = adminUrl;
        return this;
    }
    
    /**
     * The date and time when the object was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public EcommerceStore withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * A unique identifier for an object.
     */
    @JsonProperty("id")
    public String id;
    public EcommerceStore withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The store's name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public EcommerceStore withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The store's website URL
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("store_url")
    public String storeUrl;
    public EcommerceStore withStoreUrl(String storeUrl) {
        this.storeUrl = storeUrl;
        return this;
    }
    
    /**
     * The date and time when the object was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public EcommerceStore withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
}
