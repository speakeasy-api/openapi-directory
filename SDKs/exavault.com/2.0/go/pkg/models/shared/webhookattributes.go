// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// WebhookAttributesResponseVersionEnum - The version of webhook request to send to the endpoint URL
type WebhookAttributesResponseVersionEnum string

const (
	WebhookAttributesResponseVersionEnumV1 WebhookAttributesResponseVersionEnum = "v1"
	WebhookAttributesResponseVersionEnumV2 WebhookAttributesResponseVersionEnum = "v2"
)

func (e WebhookAttributesResponseVersionEnum) ToPointer() *WebhookAttributesResponseVersionEnum {
	return &e
}

func (e *WebhookAttributesResponseVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "v1":
		fallthrough
	case "v2":
		*e = WebhookAttributesResponseVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WebhookAttributesResponseVersionEnum: %v", v)
	}
}

type WebhookAttributes struct {
	// Timestamp when webhook configuration was added to system.
	Created *time.Time `json:"created,omitempty"`
	// The endpoint is where the webhook request will be sent.
	EndpointURL *string `json:"endpointUrl,omitempty"`
	// Whether webhook has been disabled for too many consecutive failures
	Failed *bool `json:"failed,omitempty"`
	// Timestamp when webhook configuration was last modified
	Modified *time.Time `json:"modified,omitempty"`
	// The version of webhook request to send to the endpoint URL
	ResponseVersion *WebhookAttributesResponseVersionEnum `json:"responseVersion,omitempty"`
	Triggers        *WebhookTriggers                      `json:"triggers,omitempty"`
	// Token for verifying sender is ExaVault
	VerificationToken *string `json:"verificationToken,omitempty"`
}
