/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Release - A `Release` resource in the Google Cloud Deploy API. A `Release` defines a specific Skaffold configuration instance that can be deployed.
 */
public class Release {
    /**
     * Output only. Indicates whether this is an abandoned release.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("abandoned")
    public Boolean abandoned;

    public Release withAbandoned(Boolean abandoned) {
        this.abandoned = abandoned;
        return this;
    }
    
    /**
     * User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotations")
    public java.util.Map<String, String> annotations;

    public Release withAnnotations(java.util.Map<String, String> annotations) {
        this.annotations = annotations;
        return this;
    }
    
    /**
     * List of artifacts to pass through to Skaffold command.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buildArtifacts")
    public BuildArtifact[] buildArtifacts;

    public Release withBuildArtifacts(BuildArtifact[] buildArtifacts) {
        this.buildArtifacts = buildArtifacts;
        return this;
    }
    
    /**
     * ReleaseCondition contains all conditions relevant to a Release.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("condition")
    public ReleaseCondition condition;

    public Release withCondition(ReleaseCondition condition) {
        this.condition = condition;
        return this;
    }
    
    /**
     * Output only. Time at which the `Release` was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Release withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * A `DeliveryPipeline` resource in the Google Cloud Deploy API. A `DeliveryPipeline` defines a pipeline through which a Skaffold configuration can progress.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliveryPipelineSnapshot")
    public DeliveryPipeline deliveryPipelineSnapshot;

    public Release withDeliveryPipelineSnapshot(DeliveryPipeline deliveryPipelineSnapshot) {
        this.deliveryPipelineSnapshot = deliveryPipelineSnapshot;
        return this;
    }
    
    /**
     * Description of the `Release`. Max length is 255 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Release withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public Release withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be &lt;= 128 bytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public Release withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Optional. Name of the `Release`. Format is projects/{project}/ locations/{location}/deliveryPipelines/{deliveryPipeline}/ releases/a-z{0,62}.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Release withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. Time at which the render completed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("renderEndTime")
    public String renderEndTime;

    public Release withRenderEndTime(String renderEndTime) {
        this.renderEndTime = renderEndTime;
        return this;
    }
    
    /**
     * Output only. Time at which the render began.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("renderStartTime")
    public String renderStartTime;

    public Release withRenderStartTime(String renderStartTime) {
        this.renderStartTime = renderStartTime;
        return this;
    }
    
    /**
     * Output only. Current state of the render operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("renderState")
    public ReleaseRenderStateEnum renderState;

    public Release withRenderState(ReleaseRenderStateEnum renderState) {
        this.renderState = renderState;
        return this;
    }
    
    /**
     * Filepath of the Skaffold config inside of the config URI.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skaffoldConfigPath")
    public String skaffoldConfigPath;

    public Release withSkaffoldConfigPath(String skaffoldConfigPath) {
        this.skaffoldConfigPath = skaffoldConfigPath;
        return this;
    }
    
    /**
     * Cloud Storage URI of tar.gz archive containing Skaffold configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skaffoldConfigUri")
    public String skaffoldConfigUri;

    public Release withSkaffoldConfigUri(String skaffoldConfigUri) {
        this.skaffoldConfigUri = skaffoldConfigUri;
        return this;
    }
    
    /**
     * The Skaffold version to use when operating on this release, such as "1.20.0". Not all versions are valid; Google Cloud Deploy supports a specific set of versions. If unset, the most recent supported Skaffold version will be used.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skaffoldVersion")
    public String skaffoldVersion;

    public Release withSkaffoldVersion(String skaffoldVersion) {
        this.skaffoldVersion = skaffoldVersion;
        return this;
    }
    
    /**
     * Output only. Map from target ID to the target artifacts created during the render operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetArtifacts")
    public java.util.Map<String, TargetArtifact> targetArtifacts;

    public Release withTargetArtifacts(java.util.Map<String, TargetArtifact> targetArtifacts) {
        this.targetArtifacts = targetArtifacts;
        return this;
    }
    
    /**
     * Output only. Map from target ID to details of the render operation for that target.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetRenders")
    public java.util.Map<String, TargetRender> targetRenders;

    public Release withTargetRenders(java.util.Map<String, TargetRender> targetRenders) {
        this.targetRenders = targetRenders;
        return this;
    }
    
    /**
     * Output only. Snapshot of the targets taken at release creation time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetSnapshots")
    public Target[] targetSnapshots;

    public Release withTargetSnapshots(Target[] targetSnapshots) {
        this.targetSnapshots = targetSnapshots;
        return this;
    }
    
    /**
     * Output only. Unique identifier of the `Release`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uid")
    public String uid;

    public Release withUid(String uid) {
        this.uid = uid;
        return this;
    }
    
    public Release(){}
}
