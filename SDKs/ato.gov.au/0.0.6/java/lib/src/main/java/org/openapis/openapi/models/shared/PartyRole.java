/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * PartyRole - The Party Role resource.
 */
public class PartyRole {
    /**
     * The date and time the resource became active in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("fromDate")
    public OffsetDateTime fromDate;

    public PartyRole withFromDate(OffsetDateTime fromDate) {
        this.fromDate = fromDate;
        return this;
    }
    
    /**
     * The resource's unique identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public PartyRole withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The party's role type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("partyRoleType")
    public PartyRolePartyRoleTypeEnum partyRoleType;

    public PartyRole withPartyRoleType(PartyRolePartyRoleTypeEnum partyRoleType) {
        this.partyRoleType = partyRoleType;
        return this;
    }
    
    /**
     * The related party's unique identifier.
     */
    @JsonProperty("relatedPartyId")
    public String relatedPartyId;

    public PartyRole withRelatedPartyId(String relatedPartyId) {
        this.relatedPartyId = relatedPartyId;
        return this;
    }
    
    /**
     * The related party's role type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relatedPartyRoleType")
    public PartyRoleRelatedPartyRoleTypeEnum relatedPartyRoleType;

    public PartyRole withRelatedPartyRoleType(PartyRoleRelatedPartyRoleTypeEnum relatedPartyRoleType) {
        this.relatedPartyRoleType = relatedPartyRoleType;
        return this;
    }
    
    /**
     * The relationship type.
     */
    @JsonProperty("relationshipType")
    public PartyRoleRelationshipTypeEnum relationshipType;

    public PartyRole withRelationshipType(PartyRoleRelationshipTypeEnum relationshipType) {
        this.relationshipType = relationshipType;
        return this;
    }
    
    /**
     * The date and time the resource became inactive in the format defined by [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("toDate")
    public OffsetDateTime toDate;

    public PartyRole withToDate(OffsetDateTime toDate) {
        this.toDate = toDate;
        return this;
    }
    
    public PartyRole(@JsonProperty("relatedPartyId") String relatedPartyId, @JsonProperty("relationshipType") PartyRoleRelationshipTypeEnum relationshipType) {
        this.relatedPartyId = relatedPartyId;
        this.relationshipType = relationshipType;
  }
}
