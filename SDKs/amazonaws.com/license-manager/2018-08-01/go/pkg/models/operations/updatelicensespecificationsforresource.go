// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateLicenseSpecificationsForResourceXAmzTargetEnum
type UpdateLicenseSpecificationsForResourceXAmzTargetEnum string

const (
	UpdateLicenseSpecificationsForResourceXAmzTargetEnumAwsLicenseManagerUpdateLicenseSpecificationsForResource UpdateLicenseSpecificationsForResourceXAmzTargetEnum = "AWSLicenseManager.UpdateLicenseSpecificationsForResource"
)

func (e UpdateLicenseSpecificationsForResourceXAmzTargetEnum) ToPointer() *UpdateLicenseSpecificationsForResourceXAmzTargetEnum {
	return &e
}

func (e *UpdateLicenseSpecificationsForResourceXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSLicenseManager.UpdateLicenseSpecificationsForResource":
		*e = UpdateLicenseSpecificationsForResourceXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateLicenseSpecificationsForResourceXAmzTargetEnum: %v", v)
	}
}

type UpdateLicenseSpecificationsForResourceRequest struct {
	UpdateLicenseSpecificationsForResourceRequest shared.UpdateLicenseSpecificationsForResourceRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                                 *string                                              `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                             *string                                              `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                                *string                                              `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                      *string                                              `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                             *string                                              `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                                 *string                                              `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                             *string                                              `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                    UpdateLicenseSpecificationsForResourceXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateLicenseSpecificationsForResourceResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// AuthorizationException
	AuthorizationException interface{}
	ContentType            string
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// InvalidResourceStateException
	InvalidResourceStateException interface{}
	// LicenseUsageException
	LicenseUsageException interface{}
	// RateLimitExceededException
	RateLimitExceededException interface{}
	StatusCode                 int
	RawResponse                *http.Response
	// ServerInternalException
	ServerInternalException interface{}
	// Success
	UpdateLicenseSpecificationsForResourceResponse map[string]interface{}
}
