/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AudioRenderTimelineSpanRegionKey - The key signature active at the beginning of the region
 */
public class AudioRenderTimelineSpanRegionKey {
    /**
     * A text representation of the accidental; if this field is specified, the tonic_note field should also be specified
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tonic_accidental")
    public AudioRenderTimelineSpanRegionKeyTonicAccidentalEnum tonicAccidental;

    public AudioRenderTimelineSpanRegionKey withTonicAccidental(AudioRenderTimelineSpanRegionKeyTonicAccidentalEnum tonicAccidental) {
        this.tonicAccidental = tonicAccidental;
        return this;
    }
    
    /**
     * A text representation of the musical note; if this field is specified, the tonic_accidental field should also be specified
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tonic_note")
    public AudioRenderTimelineSpanRegionKeyTonicNoteEnum tonicNote;

    public AudioRenderTimelineSpanRegionKey withTonicNote(AudioRenderTimelineSpanRegionKeyTonicNoteEnum tonicNote) {
        this.tonicNote = tonicNote;
        return this;
    }
    
    /**
     * The scale quality; if this field is not specified, the API selects the quality automatically
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tonic_quality")
    public AudioRenderTimelineSpanRegionKeyTonicQualityEnum tonicQuality;

    public AudioRenderTimelineSpanRegionKey withTonicQuality(AudioRenderTimelineSpanRegionKeyTonicQualityEnum tonicQuality) {
        this.tonicQuality = tonicQuality;
        return this;
    }
    
    public AudioRenderTimelineSpanRegionKey(){}
}
