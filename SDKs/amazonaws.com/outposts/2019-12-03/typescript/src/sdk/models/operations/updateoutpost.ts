/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 *  The type of hardware for this Outpost.
 */
export enum UpdateOutpostRequestBodySupportedHardwareTypeEnum {
  Rack = "RACK",
  Server = "SERVER",
}

export class UpdateOutpostRequestBody extends SpeakeasyBase {
  /**
   * The description of the Outpost.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  /**
   * The name of the Outpost.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  /**
   *  The type of hardware for this Outpost.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "SupportedHardwareType" })
  supportedHardwareType?: UpdateOutpostRequestBodySupportedHardwareTypeEnum;
}

export class UpdateOutpostRequest extends SpeakeasyBase {
  /**
   *  The ID or the Amazon Resource Name (ARN) of the Outpost.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=OutpostId",
  })
  outpostId: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateOutpostRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class UpdateOutpostResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * ConflictException
   */
  @SpeakeasyMetadata()
  conflictException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * NotFoundException
   */
  @SpeakeasyMetadata()
  notFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateOutpostOutput?: shared.UpdateOutpostOutput;

  /**
   * ValidationException
   */
  @SpeakeasyMetadata()
  validationException?: any;
}
