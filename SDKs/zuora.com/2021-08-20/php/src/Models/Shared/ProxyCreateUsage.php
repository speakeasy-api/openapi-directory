<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ProxyCreateUsage - Container for custom fields of a Usage object.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ProxyCreateUsage
{
    /**
     *  The ID of the account associated with the usage data. This field is only required if no value is specified for the `AccountNumber` field.
     * 
     * **Character limit**: 32 **Values**: a valid account ID. 
     * 
     * @var ?string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('AccountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountId = null;
    
    /**
     *  The number of the account associated with the usage data. This field is only required if no value is specified for the `AccountId` field.
     * 
     * **Character limit**: 50 **Values**: a valid account number. 
     * 
     * @var ?string $accountNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('AccountNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountNumber = null;
    
    /**
     *  The OrginalId of the rate plan charge related to the usage record, e.g., `2c9081a03c63c94c013c6873357a0117` **Character limit**: 32 **Values**: a valid rate plan charge OriginalID. 
     * 
     * @var ?string $chargeId
     */
	#[\JMS\Serializer\Annotation\SerializedName('ChargeId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $chargeId = null;
    
    /**
     * A unique number for the rate plan charge related to the usage record. For example, C-00000007.
     * 
     * 
     * 
     * @var ?string $chargeNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('ChargeNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $chargeNumber = null;
    
    /**
     * A description of the usage record.
     * 
     * 
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('Description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     *  The end date and time of a range of time when usage is tracked. Use this field for reporting; this field doesn't affect usage calculation.
     * 
     * **Character limit**: 29 **Values**: a valid date and time value. 
     * 
     * @var ?\DateTime $endDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('EndDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $endDateTime = null;
    
    /**
     *  Indicates the number of units used.
     * 
     * **Character limit**: 16 **Values**: a valid decimal amount equal to or greater than 0 
     * 
     * @var float $quantity
     */
	#[\JMS\Serializer\Annotation\SerializedName('Quantity')]
    #[\JMS\Serializer\Annotation\Type('float')]
    public float $quantity;
    
    /**
     *  The start date and time of a range of time when usage is tracked. Zuora uses this field value to determine the usage date. Unlike the `EndDateTime`, the `StartDateTime` field does affect usage calculation.
     * 
     * **Character limit**: 29 **Values**: a valid date and time value 
     * 
     * @var \DateTime $startDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('StartDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $startDateTime;
    
    /**
     *  The date when usage was submitted.
     * 
     * **Character limit**: 29 **Values**: automatically generated 
     * 
     * @var ?\DateTime $submissionDateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('SubmissionDateTime')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $submissionDateTime = null;
    
    /**
     * The ID of the subscription that contains the fees related to the usage data.
     * 
     * 
     * The ID of a subscription might change when you create amendments to the subscription. It is good practice to use the unique subscription number that you can specify in the `SubscriptionNumber` field.
     * 
     * 
     * @var ?string $subscriptionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('SubscriptionId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subscriptionId = null;
    
    /**
     * The unique identifier number of the subscription that contains the fees related to the usage data.
     * 
     * 
     * It is good practice to use this field when creating usage records.
     * 
     * 
     * @var ?string $subscriptionNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('SubscriptionNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subscriptionNumber = null;
    
    /**
     *  Specifies the units to measure usage. Units of measure are configured in the web-based UI. Your values depend on your configuration in **Billing Settings**.
     * 
     * **Character limit**: **Values**: a valid unit of measure 
     * 
     * @var string $uom
     */
	#[\JMS\Serializer\Annotation\SerializedName('UOM')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $uom;
    
	public function __construct()
	{
		$this->accountId = null;
		$this->accountNumber = null;
		$this->chargeId = null;
		$this->chargeNumber = null;
		$this->description = null;
		$this->endDateTime = null;
		$this->quantity = 0;
		$this->startDateTime = new \DateTime();
		$this->submissionDateTime = null;
		$this->subscriptionId = null;
		$this->subscriptionNumber = null;
		$this->uom = "";
	}
}
