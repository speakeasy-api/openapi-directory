// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type NotifyRecommendationsReceivedRequestBody struct {
	// The identifiers of the recommendations.
	RecommendationIds []string `json:"recommendationIds"`
}

type NotifyRecommendationsReceivedRequest struct {
	RequestBody       NotifyRecommendationsReceivedRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The identifier of the Wisdom assistant. Can be either the ID or the ARN. URLs cannot contain the ARN.
	AssistantID string `pathParam:"style=simple,explode=false,name=assistantId"`
	// The identifier of the session. Can be either the ID or the ARN. URLs cannot contain the ARN.
	SessionID string `pathParam:"style=simple,explode=false,name=sessionId"`
}

type NotifyRecommendationsReceivedResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	NotifyRecommendationsReceivedResponse *shared.NotifyRecommendationsReceivedResponse
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// ValidationException
	ValidationException interface{}
}
