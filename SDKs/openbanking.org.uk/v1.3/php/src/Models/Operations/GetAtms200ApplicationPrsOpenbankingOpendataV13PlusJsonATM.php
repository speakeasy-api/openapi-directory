<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATM
{
    /**
     * ATM terminal device identification for the acquirer and the issuer
     * 
     * @var string $atmid
     */
	#[\JMS\Serializer\Annotation\SerializedName('ATMID')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $atmid;
    
    /**
     * Information about ATM services
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Operations\GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMATMServicesEnum> $atmServices
     */
	#[\JMS\Serializer\Annotation\SerializedName('ATMServices')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Operations\GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMATMServicesEnum>>')]
    public array $atmServices;
    
    /**
     * Information about the accessibility
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMAccessibilityTypesEnum> $accessibilityTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('AccessibilityTypes')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Operations\GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMAccessibilityTypesEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $accessibilityTypes = null;
    
    /**
     * ATM Service Description
     * 
     * @var ?array<string> $additionalATMServices
     */
	#[\JMS\Serializer\Annotation\SerializedName('AdditionalATMServices')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalATMServices = null;
    
    /**
     * Postal Address
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMAddress $address
     */
	#[\JMS\Serializer\Annotation\SerializedName('Address')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMAddress')]
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMAddress $address;
    
    /**
     * Unique and unambiguous identification of a retail branch of a financial institution
     * 
     * @var ?string $branchIdentification
     */
	#[\JMS\Serializer\Annotation\SerializedName('BranchIdentification')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $branchIdentification = null;
    
    /**
     * Defines currency type available for dispense
     * 
     * @var array<string> $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('Currency')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $currency;
    
    /**
     * Geographic Coordinates
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMGeographicLocation $geographicLocation
     */
	#[\JMS\Serializer\Annotation\SerializedName('GeographicLocation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMGeographicLocation')]
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMGeographicLocation $geographicLocation;
    
    /**
     * Indicates the environment of the ATM
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMLocationCategoryEnum $locationCategory
     */
	#[\JMS\Serializer\Annotation\SerializedName('LocationCategory')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMLocationCategoryEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMLocationCategoryEnum $locationCategory = null;
    
    /**
     * Minimum currency denominations usually available
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMMinimumValueDispensedEnum $minimumValueDispensed
     */
	#[\JMS\Serializer\Annotation\SerializedName('MinimumValueDispensed')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMMinimumValueDispensedEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMMinimumValueDispensedEnum $minimumValueDispensed = null;
    
    /**
     * Organisation
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMOrganisation $organisation
     */
	#[\JMS\Serializer\Annotation\SerializedName('Organisation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMOrganisation')]
    public GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMOrganisation $organisation;
    
    /**
     * Site identifying code, where ATM is located
     * 
     * @var ?string $siteID
     */
	#[\JMS\Serializer\Annotation\SerializedName('SiteID')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $siteID = null;
    
    /**
     * Site identifying name, where ATM is located
     * 
     * @var ?string $siteName
     */
	#[\JMS\Serializer\Annotation\SerializedName('SiteName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $siteName = null;
    
    /**
     * Languages that the ATM supports
     * 
     * @var array<string> $supportedLanguages
     */
	#[\JMS\Serializer\Annotation\SerializedName('SupportedLanguages')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $supportedLanguages;
    
	public function __construct()
	{
		$this->atmid = "";
		$this->atmServices = [];
		$this->accessibilityTypes = null;
		$this->additionalATMServices = null;
		$this->address = new \OpenAPI\OpenAPI\Models\Operations\GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMAddress();
		$this->branchIdentification = null;
		$this->currency = [];
		$this->geographicLocation = new \OpenAPI\OpenAPI\Models\Operations\GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMGeographicLocation();
		$this->locationCategory = null;
		$this->minimumValueDispensed = null;
		$this->organisation = new \OpenAPI\OpenAPI\Models\Operations\GetAtms200ApplicationPrsOpenbankingOpendataV13PlusJsonATMOrganisation();
		$this->siteID = null;
		$this->siteName = null;
		$this->supportedLanguages = [];
	}
}
