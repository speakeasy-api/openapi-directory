// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SearchTablesXAmzTargetEnum
type SearchTablesXAmzTargetEnum string

const (
	SearchTablesXAmzTargetEnumAwsGlueSearchTables SearchTablesXAmzTargetEnum = "AWSGlue.SearchTables"
)

func (e *SearchTablesXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSGlue.SearchTables":
		*e = SearchTablesXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchTablesXAmzTargetEnum: %s", s)
	}
}

type SearchTablesRequest struct {
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken           *string                    `queryParam:"style=form,explode=true,name=NextToken"`
	SearchTablesRequest shared.SearchTablesRequest `request:"mediaType=application/json"`
	XAmzAlgorithm       *string                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256   *string                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential      *string                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate            *string                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken   *string                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature       *string                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders   *string                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget          SearchTablesXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type SearchTablesResponse struct {
	ContentType string
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidInputException
	InvalidInputException interface{}
	// OperationTimeoutException
	OperationTimeoutException interface{}
	// Success
	SearchTablesResponse *shared.SearchTablesResponse
	StatusCode           int
	RawResponse          *http.Response
}
