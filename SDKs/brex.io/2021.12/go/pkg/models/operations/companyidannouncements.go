// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/types"
)

type CompanyIDAnnouncementsSecurity struct {
	UserKey string `security:"scheme,type=apiKey,subtype=header,name=user_key"`
}

type CompanyIDAnnouncementsRequest struct {
	// If this parameter is set to false, you will only receive ids, and no additional data about announcements and no hits to the metric will be counted. (and potentially minimizing your costs)
	Data *bool `queryParam:"style=form,explode=true,name=data"`
	// company hex ID
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// limit of announcements in response (default 10)
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// to paginate through results (default 0)
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
}

// CompanyIDAnnouncementsDefaultApplicationJSON - Detailed information about the error
type CompanyIDAnnouncementsDefaultApplicationJSON struct {
	Code    int     `json:"code"`
	Fault   *string `json:"fault,omitempty"`
	Message string  `json:"message"`
	Tag     string  `json:"tag"`
}

type CompanyIDAnnouncements200ApplicationJSON struct {
	CountryCode        *string     `json:"countryCode,omitempty"`
	ID                 *string     `json:"id,omitempty"`
	RegistrationNumber *string     `json:"registrationNumber,omitempty"`
	Structured         *string     `json:"structured,omitempty"`
	Text               *string     `json:"text,omitempty"`
	Time               *types.Date `json:"time,omitempty"`
	Type               *string     `json:"type,omitempty"`
}

type CompanyIDAnnouncementsResponse struct {
	// List of announcements
	CompanyIDAnnouncements200ApplicationJSONObjects []CompanyIDAnnouncements200ApplicationJSON
	// Detailed information about the error
	CompanyIDAnnouncementsDefaultApplicationJSONObject *CompanyIDAnnouncementsDefaultApplicationJSON
	ContentType                                        string
	StatusCode                                         int
	RawResponse                                        *http.Response
}
