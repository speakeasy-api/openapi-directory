/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AssignedUserRole, AssignedUserRoleInput } from "./assigneduserrole";
import { Expose, Type } from "class-transformer";

/**
 * A single user in Display & Video 360.
 */
export class UserInput extends SpeakeasyBase {
  /**
   * The assigned user roles. Required in CreateUser. Output only in UpdateUser. Can only be updated through BulkEditAssignedUserRoles.
   */
  @SpeakeasyMetadata({ elemType: AssignedUserRoleInput })
  @Expose({ name: "assignedUserRoles" })
  @Type(() => AssignedUserRoleInput)
  assignedUserRoles?: AssignedUserRoleInput[];

  /**
   * Required. The display name of the user. Must be UTF-8 encoded with a maximum size of 240 bytes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Required. Immutable. The email address used to identify the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;
}

/**
 * A single user in Display & Video 360.
 */
export class User extends SpeakeasyBase {
  /**
   * The assigned user roles. Required in CreateUser. Output only in UpdateUser. Can only be updated through BulkEditAssignedUserRoles.
   */
  @SpeakeasyMetadata({ elemType: AssignedUserRole })
  @Expose({ name: "assignedUserRoles" })
  @Type(() => AssignedUserRole)
  assignedUserRoles?: AssignedUserRole[];

  /**
   * Required. The display name of the user. Must be UTF-8 encoded with a maximum size of 240 bytes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Required. Immutable. The email address used to identify the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  /**
   * Output only. The resource name of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Output only. The unique ID of the user. Assigned by the system.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId?: string;
}
