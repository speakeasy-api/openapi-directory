/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MonitorConfigStateEnum } from "./monitorconfigstateenum";
import { MonitorProcessingStatusCodeEnum } from "./monitorprocessingstatuscodeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Success
 */
export class GetMonitorOutput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxCityNetworksToMonitor" })
  maxCityNetworksToMonitor: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ModifiedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  modifiedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitorArn" })
  monitorArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MonitorName" })
  monitorName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingStatus" })
  processingStatus?: MonitorProcessingStatusCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ProcessingStatusInfo" })
  processingStatusInfo?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Resources" })
  resources: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status: MonitorConfigStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;
}
