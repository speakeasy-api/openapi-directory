<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class ListConnectorEntitiesRequestBody
{
    /**
     * The version of the API that's used by the connector.
     * 
     * @var ?string $apiVersion
     */
	#[\JMS\Serializer\Annotation\SerializedName('apiVersion')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $apiVersion = null;
    
    /**
     *  The name of the connector profile. The name is unique for each <code>ConnectorProfile</code> in the Amazon Web Services account, and is used to query the downstream connector. 
     * 
     * @var ?string $connectorProfileName
     */
	#[\JMS\Serializer\Annotation\SerializedName('connectorProfileName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $connectorProfileName = null;
    
    /**
     *  The type of connector, such as Salesforce, Amplitude, and so on. 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ListConnectorEntitiesRequestBodyConnectorTypeEnum $connectorType
     */
	#[\JMS\Serializer\Annotation\SerializedName('connectorType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\ListConnectorEntitiesRequestBodyConnectorTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ListConnectorEntitiesRequestBodyConnectorTypeEnum $connectorType = null;
    
    /**
     *  This optional parameter is specific to connector implementation. Some connectors support multiple levels or categories of entities. You can find out the list of roots for such providers by sending a request without the <code>entitiesPath</code> parameter. If the connector supports entities at different roots, this initial request returns the list of roots. Otherwise, this request returns all entities supported by the provider. 
     * 
     * @var ?string $entitiesPath
     */
	#[\JMS\Serializer\Annotation\SerializedName('entitiesPath')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $entitiesPath = null;
    
    /**
     * The maximum number of items that the operation returns in the response.
     * 
     * @var ?int $maxResults
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxResults')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxResults = null;
    
    /**
     * A token that was provided by your prior <code>ListConnectorEntities</code> operation if the response was too big for the page size. You specify this token to get the next page of results in paginated response.
     * 
     * @var ?string $nextToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('nextToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nextToken = null;
    
	public function __construct()
	{
		$this->apiVersion = null;
		$this->connectorProfileName = null;
		$this->connectorType = null;
		$this->entitiesPath = null;
		$this->maxResults = null;
		$this->nextToken = null;
	}
}
