<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DnsKeySpec - Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DnsKeySpec
{
    /**
     * String mnemonic specifying the DNSSEC algorithm of this key.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DnsKeySpecAlgorithmEnum $algorithm
     */
	#[\JMS\Serializer\Annotation\SerializedName('algorithm')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DnsKeySpecAlgorithmEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DnsKeySpecAlgorithmEnum $algorithm = null;
    
    /**
     * Length of the keys in bits.
     * 
     * @var ?int $keyLength
     */
	#[\JMS\Serializer\Annotation\SerializedName('keyLength')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $keyLength = null;
    
    /**
     * Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DnsKeySpecKeyTypeEnum $keyType
     */
	#[\JMS\Serializer\Annotation\SerializedName('keyType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DnsKeySpecKeyTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DnsKeySpecKeyTypeEnum $keyType = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
	public function __construct()
	{
		$this->algorithm = null;
		$this->keyLength = null;
		$this->keyType = null;
		$this->kind = null;
	}
}
