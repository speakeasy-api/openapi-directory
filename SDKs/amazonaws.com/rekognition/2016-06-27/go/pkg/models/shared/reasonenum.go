// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReasonEnum string

const (
	ReasonEnumExceedsMaxFaces  ReasonEnum = "EXCEEDS_MAX_FACES"
	ReasonEnumExtremePose      ReasonEnum = "EXTREME_POSE"
	ReasonEnumLowBrightness    ReasonEnum = "LOW_BRIGHTNESS"
	ReasonEnumLowSharpness     ReasonEnum = "LOW_SHARPNESS"
	ReasonEnumLowConfidence    ReasonEnum = "LOW_CONFIDENCE"
	ReasonEnumSmallBoundingBox ReasonEnum = "SMALL_BOUNDING_BOX"
	ReasonEnumLowFaceQuality   ReasonEnum = "LOW_FACE_QUALITY"
)

func (e *ReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EXCEEDS_MAX_FACES":
		fallthrough
	case "EXTREME_POSE":
		fallthrough
	case "LOW_BRIGHTNESS":
		fallthrough
	case "LOW_SHARPNESS":
		fallthrough
	case "LOW_CONFIDENCE":
		fallthrough
	case "SMALL_BOUNDING_BOX":
		fallthrough
	case "LOW_FACE_QUALITY":
		*e = ReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReasonEnum: %s", s)
	}
}
