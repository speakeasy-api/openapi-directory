<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class EpisodeAttributes
{
    /**
     * Only visible to credentials having write privileges for the series.
     * 
     * 
     * 
     * @var ?bool $allowUserComments
     */
	#[\JMS\Serializer\Annotation\SerializedName('allow_user_comments')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $allowUserComments = null;
    
    /**
     * This will be replaced by the relationship `cascaded_cover_image` in a future update.<br/>
     * 
     * The image ID of the cover art for this episode. This is the preferred image ID to use.
     * If there is no specific cover for the episode, the image ID of the season or the
     * series will be returned, whichever has one defined.
     * The `/images` endpoint provides details to the image.
     * 
     * 
     * @var ?string $cascadedCoverImageId
     */
	#[\JMS\Serializer\Annotation\SerializedName('cascaded_cover_image_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cascadedCoverImageId = null;
    
    /**
     * This will be replaced by the relationship `cover_image` in a future update.<br/>
     * 
     * The image ID of the cover art for this episode, if an episode-specific image has been provided.
     * The `/images` endpoint provideds details to the image.
     * 
     * 
     * @var ?string $coverImageId
     */
	#[\JMS\Serializer\Annotation\SerializedName('cover_image_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $coverImageId = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
    /**
     * The description of the episode, possibly in HTML format
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Determines whether `description` is in HTML format or plain.
     * 
     * @var ?bool $descriptionIsHtml
     */
	#[\JMS\Serializer\Annotation\SerializedName('description_is_html')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $descriptionIsHtml = null;
    
    /**
     * The description with all HTML markup removed. If the description does not contain markup,
     * 
     * this is identical to `description`.
     * 
     * 
     * @var ?string $descriptionPlain
     */
	#[\JMS\Serializer\Annotation\SerializedName('description_plain')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $descriptionPlain = null;
    
    /**
     * The file name, without extension, to present users when downloading the episode
     * 
     * @var ?string $fileName
     */
	#[\JMS\Serializer\Annotation\SerializedName('file_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fileName = null;
    
    /**
     * The type of the episode according to Apple's type categorization
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EpisodeAttributesItunesTypeEnum $itunesType
     */
	#[\JMS\Serializer\Annotation\SerializedName('itunes_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EpisodeAttributesItunesTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EpisodeAttributesItunesTypeEnum $itunesType = null;
    
    /**
     * The number of total downloads all time for this episode.
     * 
     * Only visible if the credential has the right privilege on the series.
     * 
     * 
     * @var ?int $listenCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('listen_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $listenCount = null;
    
    /**
     * The current premium status of the episode
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EpisodeAttributesPremiumStatusEnum $premiumStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('premium_status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EpisodeAttributesPremiumStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EpisodeAttributesPremiumStatusEnum $premiumStatus = null;
    
    /**
     * If `true`, the episode will be available for download and included in the feed as soon as its
     * 
     * release time is reached, provided it has a valid media file, and `release_end_at` is in the future (if applicable).
     * 
     * 
     * @var ?bool $published
     */
	#[\JMS\Serializer\Annotation\SerializedName('published')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $published = null;
    
    /**
     * The date and time when an episode will no longer be included in the feed, or available for download.
     * 
     * `Published` will remain `true` unless the episode is manually unpublished.
     * 
     * 
     * @var ?\DateTime $releaseEndAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('release_end_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $releaseEndAt = null;
    
    /**
     * If `true`, the episode's release time is set in a way it is considered released right away.
     * 
     * Only visible if the credential has write privileges on the series.
     * 
     * 
     * @var ?bool $releaseImmediately
     */
	#[\JMS\Serializer\Annotation\SerializedName('release_immediately')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $releaseImmediately = null;
    
    /**
     * The date and time when an episode will be released. It will be available for download and included
     * 
     * in the feed if this time is reached, `published` is set to `true`, and the episode has a media file.
     * 
     * 
     * @var ?\DateTime $releasedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('released_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $releasedAt = null;
    
    /**
     * A globally unique identifier describing the episode. This ID is commonly used by podcast applications
     * 
     * to determine whether an episode has already been downloaded or not.
     * 
     * 
     * @var ?string $rssGuid
     */
	#[\JMS\Serializer\Annotation\SerializedName('rss_guid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $rssGuid = null;
    
    /**
     * Use the relationship `season` instead.<br />
     * 
     * The ID of the season an episode belongs to. This can be `null`. A series can have episodes with and
     * without seasons at the same time.
     * 
     * 
     * @var ?string $seasonId
     */
	#[\JMS\Serializer\Annotation\SerializedName('season_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $seasonId = null;
    
    /**
     * Use the relationship `series` instead.<br />
     * 
     * The ID of the series an episode belongs to.
     * 
     * 
     * @var ?string $seriesId
     */
	#[\JMS\Serializer\Annotation\SerializedName('series_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $seriesId = null;
    
    /**
     * The title of the episode modified for sorting. This converts all characters to
     * 
     * lower case, removes an eventually leading `The` as well as leading and trailling whitespace characters.
     * 
     * 
     * @var ?string $sortTitle
     */
	#[\JMS\Serializer\Annotation\SerializedName('sort_title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sortTitle = null;
    
    /**
     * The status of an episode
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EpisodeAttributesStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EpisodeAttributesStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EpisodeAttributesStatusEnum $status = null;
    
    /**
     * The title of the episode
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $updatedAt = null;
    
	public function __construct()
	{
		$this->allowUserComments = null;
		$this->cascadedCoverImageId = null;
		$this->coverImageId = null;
		$this->createdAt = null;
		$this->description = null;
		$this->descriptionIsHtml = null;
		$this->descriptionPlain = null;
		$this->fileName = null;
		$this->itunesType = null;
		$this->listenCount = null;
		$this->premiumStatus = null;
		$this->published = null;
		$this->releaseEndAt = null;
		$this->releaseImmediately = null;
		$this->releasedAt = null;
		$this->rssGuid = null;
		$this->seasonId = null;
		$this->seriesId = null;
		$this->sortTitle = null;
		$this->status = null;
		$this->title = null;
		$this->updatedAt = null;
	}
}
