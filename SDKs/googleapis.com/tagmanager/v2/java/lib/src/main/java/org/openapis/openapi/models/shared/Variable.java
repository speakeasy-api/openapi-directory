/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Variable - Represents a Google Tag Manager Variable.
 */
public class Variable {
    /**
     * GTM Account ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public Variable withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * GTM Container ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containerId")
    public String containerId;
    public Variable withContainerId(String containerId) {
        this.containerId = containerId;
        return this;
    }
    
    /**
     * For mobile containers only: A list of trigger IDs for disabling conditional variables; the variable is enabled if one of the enabling trigger is true while all the disabling trigger are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disablingTriggerId")
    public String[] disablingTriggerId;
    public Variable withDisablingTriggerId(String[] disablingTriggerId) {
        this.disablingTriggerId = disablingTriggerId;
        return this;
    }
    
    /**
     * For mobile containers only: A list of trigger IDs for enabling conditional variables; the variable is enabled if one of the enabling triggers is true while all the disabling triggers are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enablingTriggerId")
    public String[] enablingTriggerId;
    public Variable withEnablingTriggerId(String[] enablingTriggerId) {
        this.enablingTriggerId = enablingTriggerId;
        return this;
    }
    
    /**
     * The fingerprint of the GTM Variable as computed at storage time. This value is recomputed whenever the variable is modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fingerprint")
    public String fingerprint;
    public Variable withFingerprint(String fingerprint) {
        this.fingerprint = fingerprint;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("formatValue")
    public VariableFormatValue formatValue;
    public Variable withFormatValue(VariableFormatValue formatValue) {
        this.formatValue = formatValue;
        return this;
    }
    
    /**
     * Variable display name. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Variable withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * User notes on how to apply this variable in the container. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notes")
    public String notes;
    public Variable withNotes(String notes) {
        this.notes = notes;
        return this;
    }
    
    /**
     * The variable's parameters. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameter")
    public Parameter[] parameter;
    public Variable withParameter(Parameter[] parameter) {
        this.parameter = parameter;
        return this;
    }
    
    /**
     * Parent folder id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parentFolderId")
    public String parentFolderId;
    public Variable withParentFolderId(String parentFolderId) {
        this.parentFolderId = parentFolderId;
        return this;
    }
    
    /**
     * GTM Variable's API relative path.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public String path;
    public Variable withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * The end timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scheduleEndMs")
    public String scheduleEndMs;
    public Variable withScheduleEndMs(String scheduleEndMs) {
        this.scheduleEndMs = scheduleEndMs;
        return this;
    }
    
    /**
     * The start timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scheduleStartMs")
    public String scheduleStartMs;
    public Variable withScheduleStartMs(String scheduleStartMs) {
        this.scheduleStartMs = scheduleStartMs;
        return this;
    }
    
    /**
     * Auto generated link to the tag manager UI
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tagManagerUrl")
    public String tagManagerUrl;
    public Variable withTagManagerUrl(String tagManagerUrl) {
        this.tagManagerUrl = tagManagerUrl;
        return this;
    }
    
    /**
     * GTM Variable Type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;
    public Variable withType(String type) {
        this.type = type;
        return this;
    }
    
    /**
     * The Variable ID uniquely identifies the GTM Variable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("variableId")
    public String variableId;
    public Variable withVariableId(String variableId) {
        this.variableId = variableId;
        return this;
    }
    
    /**
     * GTM Workspace ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspaceId")
    public String workspaceId;
    public Variable withWorkspaceId(String workspaceId) {
        this.workspaceId = workspaceId;
        return this;
    }
    
}
