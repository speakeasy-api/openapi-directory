// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type SourceAccountResponseV3CurrencyEnum string

const (
	SourceAccountResponseV3CurrencyEnumUsd SourceAccountResponseV3CurrencyEnum = "USD"
	SourceAccountResponseV3CurrencyEnumEur SourceAccountResponseV3CurrencyEnum = "EUR"
	SourceAccountResponseV3CurrencyEnumGbp SourceAccountResponseV3CurrencyEnum = "GBP"
	SourceAccountResponseV3CurrencyEnumCad SourceAccountResponseV3CurrencyEnum = "CAD"
	SourceAccountResponseV3CurrencyEnumHkd SourceAccountResponseV3CurrencyEnum = "HKD"
)

func (e *SourceAccountResponseV3CurrencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "USD":
		fallthrough
	case "EUR":
		fallthrough
	case "GBP":
		fallthrough
	case "CAD":
		fallthrough
	case "HKD":
		*e = SourceAccountResponseV3CurrencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceAccountResponseV3CurrencyEnum: %s", s)
	}
}

// SourceAccountResponseV3 - Source account response
type SourceAccountResponseV3 struct {
	AutoTopUpConfig *AutoTopUpConfig2 `json:"autoTopUpConfig,omitempty"`
	// Decimal implied
	Balance *int64 `json:"balance,omitempty"`
	// The two character ISO country code for the associated account
	Country    *string                              `json:"country,omitempty"`
	Currency   *SourceAccountResponseV3CurrencyEnum `json:"currency,omitempty"`
	CustomerID *string                              `json:"customerId,omitempty"`
	// An optional flag for whether the source account has been deleted. Only present in the response if true.
	Deleted *bool `json:"deleted,omitempty"`
	// An optional timestamp when the source account has been deleted. Only present in the response if deleted.
	DeletedAt *time.Time `json:"deletedAt,omitempty"`
	// The funding reference (will not be set for DECOUPLED accounts).
	FundingRef *string `json:"fundingRef,omitempty"`
	// Source Account Id
	ID            string          `json:"id"`
	Name          *string         `json:"name,omitempty"`
	Notifications *Notifications2 `json:"notifications,omitempty"`
	PayorID       *string         `json:"payorId,omitempty"`
	// The physical account id (will not be set for DECOUPLED accounts).
	PhysicalAccountID *string `json:"physicalAccountId,omitempty"`
	// The physical account name (will not be set for DECOUPLED accounts).
	PhysicalAccountName *string `json:"physicalAccountName,omitempty"`
	// The pooled account flag (will not be set for DECOUPLED accounts).
	Pooled  *bool  `json:"pooled,omitempty"`
	RailsID string `json:"railsId"`
	Type    string `json:"type"`
	// An optional flag for whether the source account has been deleted by a user. Only present in the response if true.
	UserDeleted *bool `json:"userDeleted,omitempty"`
}
