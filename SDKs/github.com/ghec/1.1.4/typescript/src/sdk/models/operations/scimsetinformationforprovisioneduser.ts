/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class ScimSetInformationForProvisionedUserRequestBodyEmails extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "primary" })
  primary?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: string;
}

export class ScimSetInformationForProvisionedUserRequestBodyName extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "familyName" })
  familyName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "formatted" })
  formatted?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "givenName" })
  givenName: string;
}

export class ScimSetInformationForProvisionedUserRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  /**
   * The name of the user, suitable for display to end-users
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * user emails
   */
  @SpeakeasyMetadata({
    elemType: ScimSetInformationForProvisionedUserRequestBodyEmails,
  })
  @Expose({ name: "emails" })
  @Type(() => ScimSetInformationForProvisionedUserRequestBodyEmails)
  emails: ScimSetInformationForProvisionedUserRequestBodyEmails[];

  @SpeakeasyMetadata()
  @Expose({ name: "externalId" })
  externalId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "groups" })
  groups?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  @Type(() => ScimSetInformationForProvisionedUserRequestBodyName)
  name: ScimSetInformationForProvisionedUserRequestBodyName;

  @SpeakeasyMetadata()
  @Expose({ name: "schemas" })
  schemas?: string[];

  /**
   * Configured by the admin. Could be an email, login, or username
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userName" })
  userName: string;
}

export class ScimSetInformationForProvisionedUserRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ScimSetInformationForProvisionedUserRequestBody;

  /**
   * The organization name. The name is not case sensitive.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=org" })
  org: string;

  /**
   * The unique identifier of the SCIM user.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=scim_user_id",
  })
  scimUserId: string;
}

export class ScimSetInformationForProvisionedUserResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Forbidden
   */
  @SpeakeasyMetadata()
  scimError?: shared.ScimError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  scimUser?: shared.ScimUser;
}
