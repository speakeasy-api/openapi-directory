// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type KeyUsageTypeEnum string

const (
	KeyUsageTypeEnumSignVerify        KeyUsageTypeEnum = "SIGN_VERIFY"
	KeyUsageTypeEnumEncryptDecrypt    KeyUsageTypeEnum = "ENCRYPT_DECRYPT"
	KeyUsageTypeEnumGenerateVerifyMac KeyUsageTypeEnum = "GENERATE_VERIFY_MAC"
)

func (e KeyUsageTypeEnum) ToPointer() *KeyUsageTypeEnum {
	return &e
}

func (e *KeyUsageTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SIGN_VERIFY":
		fallthrough
	case "ENCRYPT_DECRYPT":
		fallthrough
	case "GENERATE_VERIFY_MAC":
		*e = KeyUsageTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for KeyUsageTypeEnum: %v", v)
	}
}
