// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BatchStateEnum - Output only. The state of the batch.
type BatchStateEnum string

const (
	BatchStateEnumStateUnspecified BatchStateEnum = "STATE_UNSPECIFIED"
	BatchStateEnumPending          BatchStateEnum = "PENDING"
	BatchStateEnumRunning          BatchStateEnum = "RUNNING"
	BatchStateEnumCancelling       BatchStateEnum = "CANCELLING"
	BatchStateEnumCancelled        BatchStateEnum = "CANCELLED"
	BatchStateEnumSucceeded        BatchStateEnum = "SUCCEEDED"
	BatchStateEnumFailed           BatchStateEnum = "FAILED"
)

func (e BatchStateEnum) ToPointer() *BatchStateEnum {
	return &e
}

func (e *BatchStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "PENDING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "CANCELLING":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "FAILED":
		*e = BatchStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchStateEnum: %v", v)
	}
}

// Batch - A representation of a batch workload in the service.
type Batch struct {
	// Output only. The time when the batch was created.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. The email address of the user who created the batch.
	Creator *string `json:"creator,omitempty"`
	// Environment configuration for a workload.
	EnvironmentConfig *EnvironmentConfig `json:"environmentConfig,omitempty"`
	// Optional. The labels to associate with this batch. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a batch.
	Labels map[string]string `json:"labels,omitempty"`
	// Output only. The resource name of the batch.
	Name *string `json:"name,omitempty"`
	// Output only. The resource name of the operation associated with this batch.
	Operation *string `json:"operation,omitempty"`
	// A configuration for running an Apache PySpark (https://spark.apache.org/docs/latest/api/python/getting_started/quickstart.html) batch workload.
	PysparkBatch *PySparkBatch `json:"pysparkBatch,omitempty"`
	// Runtime configuration for a workload.
	RuntimeConfig *RuntimeConfig `json:"runtimeConfig,omitempty"`
	// Runtime information about workload execution.
	RuntimeInfo *RuntimeInfo `json:"runtimeInfo,omitempty"`
	// A configuration for running an Apache Spark (https://spark.apache.org/) batch workload.
	SparkBatch *SparkBatch `json:"sparkBatch,omitempty"`
	// A configuration for running an Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) batch workload.
	SparkRBatch *SparkRBatch `json:"sparkRBatch,omitempty"`
	// A configuration for running Apache Spark SQL (https://spark.apache.org/sql/) queries as a batch workload.
	SparkSQLBatch *SparkSQLBatch `json:"sparkSqlBatch,omitempty"`
	// Output only. The state of the batch.
	State *BatchStateEnum `json:"state,omitempty"`
	// Output only. Historical state information for the batch.
	StateHistory []StateHistory `json:"stateHistory,omitempty"`
	// Output only. Batch state details, such as a failure description if the state is FAILED.
	StateMessage *string `json:"stateMessage,omitempty"`
	// Output only. The time when the batch entered a current state.
	StateTime *string `json:"stateTime,omitempty"`
	// Output only. A batch UUID (Unique Universal Identifier). The service generates this value when it creates the batch.
	UUID *string `json:"uuid,omitempty"`
}

// BatchInput - A representation of a batch workload in the service.
type BatchInput struct {
	// Environment configuration for a workload.
	EnvironmentConfig *EnvironmentConfig `json:"environmentConfig,omitempty"`
	// Optional. The labels to associate with this batch. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a batch.
	Labels map[string]string `json:"labels,omitempty"`
	// A configuration for running an Apache PySpark (https://spark.apache.org/docs/latest/api/python/getting_started/quickstart.html) batch workload.
	PysparkBatch *PySparkBatch `json:"pysparkBatch,omitempty"`
	// Runtime configuration for a workload.
	RuntimeConfig *RuntimeConfig `json:"runtimeConfig,omitempty"`
	// Runtime information about workload execution.
	RuntimeInfo *RuntimeInfoInput `json:"runtimeInfo,omitempty"`
	// A configuration for running an Apache Spark (https://spark.apache.org/) batch workload.
	SparkBatch *SparkBatch `json:"sparkBatch,omitempty"`
	// A configuration for running an Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) batch workload.
	SparkRBatch *SparkRBatch `json:"sparkRBatch,omitempty"`
	// A configuration for running Apache Spark SQL (https://spark.apache.org/sql/) queries as a batch workload.
	SparkSQLBatch *SparkSQLBatch `json:"sparkSqlBatch,omitempty"`
}
