"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PreviewContentTypeEnum(str, Enum):
    r"""Content type of the preview, currently audio/mp3"""
    AUDIO_MP3 = 'audio/mp3'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Preview:
    r"""Preview information"""
    
    content_type: Optional[PreviewContentTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('content_type'), 'exclude': lambda f: f is None }})
    r"""Content type of the preview, currently audio/mp3"""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""Url of the instrument's preview file"""  
    