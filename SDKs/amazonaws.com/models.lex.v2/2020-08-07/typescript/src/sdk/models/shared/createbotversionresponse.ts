/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { BotStatusEnum } from "./botstatusenum";
import { BotVersionLocaleDetails } from "./botversionlocaledetails";
import { Expose, Transform } from "class-transformer";

/**
 * Success
 */
export class CreateBotVersionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "botId" })
  botId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "botStatus" })
  botStatus?: BotStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "botVersion" })
  botVersion?: string;

  @SpeakeasyMetadata({ elemType: BotVersionLocaleDetails })
  @Expose({ name: "botVersionLocaleSpecification" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, BotVersionLocaleDetails> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], BotVersionLocaleDetails);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  botVersionLocaleSpecification?: Record<string, BotVersionLocaleDetails>;

  @SpeakeasyMetadata()
  @Expose({ name: "creationDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDateTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;
}
