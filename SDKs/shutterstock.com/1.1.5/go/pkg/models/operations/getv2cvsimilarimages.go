// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetV2CvSimilarImagesSecurity struct {
	Basic              *shared.SchemeBasic              `security:"scheme,type=http,subtype=basic"`
	CustomerAccessCode *shared.SchemeCustomerAccessCode `security:"scheme,type=oauth2"`
}

type GetV2CvSimilarImagesLicenseEnum string

const (
	GetV2CvSimilarImagesLicenseEnumCommercial GetV2CvSimilarImagesLicenseEnum = "commercial"
	GetV2CvSimilarImagesLicenseEnumEditorial  GetV2CvSimilarImagesLicenseEnum = "editorial"
)

func (e *GetV2CvSimilarImagesLicenseEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "commercial":
		fallthrough
	case "editorial":
		*e = GetV2CvSimilarImagesLicenseEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetV2CvSimilarImagesLicenseEnum: %s", s)
	}
}

// GetV2CvSimilarImagesViewEnum - Amount of detail to render in the response
type GetV2CvSimilarImagesViewEnum string

const (
	GetV2CvSimilarImagesViewEnumMinimal GetV2CvSimilarImagesViewEnum = "minimal"
	GetV2CvSimilarImagesViewEnumFull    GetV2CvSimilarImagesViewEnum = "full"
)

func (e *GetV2CvSimilarImagesViewEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "minimal":
		fallthrough
	case "full":
		*e = GetV2CvSimilarImagesViewEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetV2CvSimilarImagesViewEnum: %s", s)
	}
}

type GetV2CvSimilarImagesQueryParams struct {
	// The asset ID or upload ID to find similar images for
	AssetID string `queryParam:"style=form,explode=true,name=asset_id"`
	// Language for the keywords and categories in the response
	Language *shared.LanguageEnum `queryParam:"style=form,explode=true,name=language"`
	// Show only images with the specified license
	License []GetV2CvSimilarImagesLicenseEnum `queryParam:"style=form,explode=true,name=license"`
	// Page number
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Number of results per page
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// Enable or disable safe search
	Safe *bool `queryParam:"style=form,explode=true,name=safe"`
	// Amount of detail to render in the response
	View *GetV2CvSimilarImagesViewEnum `queryParam:"style=form,explode=true,name=view"`
}

type GetV2CvSimilarImagesRequest struct {
	QueryParams GetV2CvSimilarImagesQueryParams
	Security    GetV2CvSimilarImagesSecurity
}

type GetV2CvSimilarImagesResponse struct {
	ContentType string
	// OK
	ImageSearchResults *shared.ImageSearchResults
	StatusCode         int
	RawResponse        *http.Response
}
