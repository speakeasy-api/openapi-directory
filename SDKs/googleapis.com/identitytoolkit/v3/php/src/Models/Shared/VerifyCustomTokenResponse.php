<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VerifyCustomTokenResponse - Response from verifying a custom token
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VerifyCustomTokenResponse
{
    /**
     * If idToken is STS id token, then this field will be expiration time of STS id token in seconds.
     * 
     * @var ?string $expiresIn
     */
	#[\JMS\Serializer\Annotation\SerializedName('expiresIn')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $expiresIn = null;
    
    /**
     * The GITKit token for authenticated user.
     * 
     * @var ?string $idToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('idToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $idToken = null;
    
    /**
     * True if it's a new user sign-in, false if it's a returning user.
     * 
     * @var ?bool $isNewUser
     */
	#[\JMS\Serializer\Annotation\SerializedName('isNewUser')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isNewUser = null;
    
    /**
     * The fixed string "identitytoolkit#VerifyCustomTokenResponse".
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * If idToken is STS id token, then this field will be refresh token.
     * 
     * @var ?string $refreshToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('refreshToken')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $refreshToken = null;
    
	public function __construct()
	{
		$this->expiresIn = null;
		$this->idToken = null;
		$this->isNewUser = null;
		$this->kind = null;
		$this->refreshToken = null;
	}
}
