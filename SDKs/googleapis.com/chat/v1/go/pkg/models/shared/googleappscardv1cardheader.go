// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleAppsCardV1CardHeaderImageTypeEnum - The shape used to crop the image.
type GoogleAppsCardV1CardHeaderImageTypeEnum string

const (
	GoogleAppsCardV1CardHeaderImageTypeEnumSquare GoogleAppsCardV1CardHeaderImageTypeEnum = "SQUARE"
	GoogleAppsCardV1CardHeaderImageTypeEnumCircle GoogleAppsCardV1CardHeaderImageTypeEnum = "CIRCLE"
)

func (e GoogleAppsCardV1CardHeaderImageTypeEnum) ToPointer() *GoogleAppsCardV1CardHeaderImageTypeEnum {
	return &e
}

func (e *GoogleAppsCardV1CardHeaderImageTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SQUARE":
		fallthrough
	case "CIRCLE":
		*e = GoogleAppsCardV1CardHeaderImageTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleAppsCardV1CardHeaderImageTypeEnum: %v", v)
	}
}

// GoogleAppsCardV1CardHeader - Represents a card header.
type GoogleAppsCardV1CardHeader struct {
	// The alternative text of this image which is used for accessibility.
	ImageAltText *string `json:"imageAltText,omitempty"`
	// The shape used to crop the image.
	ImageType *GoogleAppsCardV1CardHeaderImageTypeEnum `json:"imageType,omitempty"`
	// The HTTPS URL of the image in the card header.
	ImageURL *string `json:"imageUrl,omitempty"`
	// The subtitle of the card header. If specified, appears on its own line below the `title`.
	Subtitle *string `json:"subtitle,omitempty"`
	// Required. The title of the card header. The header has a fixed height: if both a title and subtitle are specified, each takes up one line. If only the title is specified, it takes up both lines.
	Title *string `json:"title,omitempty"`
}
