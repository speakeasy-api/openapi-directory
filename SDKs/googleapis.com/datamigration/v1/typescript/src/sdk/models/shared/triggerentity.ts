/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Trigger is not used as an independent entity, it is retrieved as part of a Table entity.
 */
export class TriggerEntity extends SpeakeasyBase {
  /**
   * Custom engine specific features.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customFeatures" })
  customFeatures?: Record<string, any>;

  /**
   * The name of the trigger.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The SQL code which creates the trigger.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sqlCode" })
  sqlCode?: string;

  /**
   * Indicates when the trigger fires, for example BEFORE STATEMENT, AFTER EACH ROW.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "triggerType" })
  triggerType?: string;

  /**
   * The DML, DDL, or database events that fire the trigger, for example INSERT, UPDATE.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "triggeringEvents" })
  triggeringEvents?: string[];
}
