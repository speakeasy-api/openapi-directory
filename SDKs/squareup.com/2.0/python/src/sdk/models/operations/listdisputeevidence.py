"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import listdisputeevidenceresponse as shared_listdisputeevidenceresponse
from typing import Optional


@dataclasses.dataclass
class ListDisputeEvidenceSecurity:
    
    oauth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class ListDisputeEvidenceRequest:
    
    dispute_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'dispute_id', 'style': 'simple', 'explode': False }})
    r"""The ID of the dispute."""  
    cursor: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'cursor', 'style': 'form', 'explode': True }})
    r"""A pagination cursor returned by a previous call to this endpoint.
    Provide this cursor to retrieve the next set of results for the original query.
    For more information, see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
    """  
    

@dataclasses.dataclass
class ListDisputeEvidenceResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    list_dispute_evidence_response: Optional[shared_listdisputeevidenceresponse.ListDisputeEvidenceResponse] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    