// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// SongAPIGetNamesNameMatchModeEnum - Name match mode.
type SongAPIGetNamesNameMatchModeEnum string

const (
	SongAPIGetNamesNameMatchModeEnumAuto       SongAPIGetNamesNameMatchModeEnum = "Auto"
	SongAPIGetNamesNameMatchModeEnumPartial    SongAPIGetNamesNameMatchModeEnum = "Partial"
	SongAPIGetNamesNameMatchModeEnumStartsWith SongAPIGetNamesNameMatchModeEnum = "StartsWith"
	SongAPIGetNamesNameMatchModeEnumExact      SongAPIGetNamesNameMatchModeEnum = "Exact"
	SongAPIGetNamesNameMatchModeEnumWords      SongAPIGetNamesNameMatchModeEnum = "Words"
)

func (e *SongAPIGetNamesNameMatchModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Auto":
		fallthrough
	case "Partial":
		fallthrough
	case "StartsWith":
		fallthrough
	case "Exact":
		fallthrough
	case "Words":
		*e = SongAPIGetNamesNameMatchModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SongAPIGetNamesNameMatchModeEnum: %s", s)
	}
}

type SongAPIGetNamesQueryParams struct {
	// Maximum number of results.
	MaxResults *int `queryParam:"style=form,explode=true,name=maxResults"`
	// Name match mode.
	NameMatchMode *SongAPIGetNamesNameMatchModeEnum `queryParam:"style=form,explode=true,name=nameMatchMode"`
	// Text query.
	Query *string `queryParam:"style=form,explode=true,name=query"`
}

type SongAPIGetNamesRequest struct {
	QueryParams SongAPIGetNamesQueryParams
}

type SongAPIGetNamesResponse struct {
	Body        []byte
	ContentType string
	// OK
	SongAPIGetNames200ApplicationJSONStrings []string
	// OK
	SongAPIGetNames200TextJSONStrings []string
	StatusCode                        int
	RawResponse                       *http.Response
	// OK
	SongAPIGetNames200ApplicationJsonpStrings []string
}
