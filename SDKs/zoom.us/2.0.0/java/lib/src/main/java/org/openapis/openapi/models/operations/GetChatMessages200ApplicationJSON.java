/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * GetChatMessages200ApplicationJSON - Chat message object.
 */
public class GetChatMessages200ApplicationJSON {
    /**
     * The date provided in the query parameter. If a date is not provided, the default value is the **current date**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("date")
    public LocalDate date;
    public GetChatMessages200ApplicationJSON withDate(LocalDate date) {
        this.date = date;
        return this;
    }
    
    /**
     * List of message(s).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("messages")
    public GetChatMessages200ApplicationJSONMessages[] messages;
    public GetChatMessages200ApplicationJSON withMessages(GetChatMessages200ApplicationJSONMessages[] messages) {
        this.messages = messages;
        return this;
    }
    
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next_page_token")
    public String nextPageToken;
    public GetChatMessages200ApplicationJSON withNextPageToken(String nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }
    
    /**
     * The number of records returned with a single API call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("page_size")
    public Long pageSize;
    public GetChatMessages200ApplicationJSON withPageSize(Long pageSize) {
        this.pageSize = pageSize;
        return this;
    }
    
}
