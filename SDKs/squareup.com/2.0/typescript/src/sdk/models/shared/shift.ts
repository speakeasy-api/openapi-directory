/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Break } from "./break";
import { ShiftWage } from "./shiftwage";
import { Expose, Type } from "class-transformer";

/**
 * A record of the hourly rate, start, and end times for a single work shift
 *
 * @remarks
 * for an employee. This might include a record of the start and end times for breaks
 * taken during the shift.
 */
export class Shift extends SpeakeasyBase {
  /**
   * A list of all the paid or unpaid breaks that were taken during this shift.
   */
  @SpeakeasyMetadata({ elemType: Break })
  @Expose({ name: "breaks" })
  @Type(() => Break)
  breaks?: Break[];

  /**
   * A read-only timestamp in RFC 3339 format; presented in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  /**
   * The ID of the employee this shift belongs to. DEPRECATED at version 2020-08-26. Use `team_member_id` instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "employee_id" })
  employeeId?: string;

  /**
   * RFC 3339; shifted to the timezone + offset. Precision up to the minute is
   *
   * @remarks
   * respected; seconds are truncated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "end_at" })
  endAt?: string;

  /**
   * The UUID for this object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The ID of the location this shift occurred at. The location should be based on
   *
   * @remarks
   * where the employee clocked in.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location_id" })
  locationId?: string;

  /**
   * RFC 3339; shifted to the location timezone + offset. Precision up to the
   *
   * @remarks
   * minute is respected; seconds are truncated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "start_at" })
  startAt: string;

  /**
   * Describes the working state of the current `Shift`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * The ID of the team member this shift belongs to. Replaced `employee_id` at version "2020-08-26".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "team_member_id" })
  teamMemberId?: string;

  /**
   * The read-only convenience value that is calculated from the location based
   *
   * @remarks
   * on the `location_id`. Format: the IANA timezone database identifier for the
   * location timezone.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timezone" })
  timezone?: string;

  /**
   * A read-only timestamp in RFC 3339 format; presented in UTC.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt?: string;

  /**
   * Used for resolving concurrency issues. The request fails if the version
   *
   * @remarks
   * provided does not match the server version at the time of the request. If not provided,
   * Square executes a blind write; potentially overwriting data from another
   * write.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version?: number;

  /**
   * The hourly wage rate used to compensate an employee for this shift.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "wage" })
  @Type(() => ShiftWage)
  wage?: ShiftWage;
}
