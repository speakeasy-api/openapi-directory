// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type UploadDatasetSync1Security struct {
	BearerToken string `security:"scheme,type=http,subtype=bearer,name=Authorization"`
}

// UploadDatasetSync1RequestBodyTypeEnum - Type of dataset data.
type UploadDatasetSync1RequestBodyTypeEnum string

const (
	UploadDatasetSync1RequestBodyTypeEnumImage           UploadDatasetSync1RequestBodyTypeEnum = "image"
	UploadDatasetSync1RequestBodyTypeEnumImageDetection  UploadDatasetSync1RequestBodyTypeEnum = "image-detection"
	UploadDatasetSync1RequestBodyTypeEnumImageMultiLabel UploadDatasetSync1RequestBodyTypeEnum = "image-multi-label"
)

func (e *UploadDatasetSync1RequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "image":
		fallthrough
	case "image-detection":
		fallthrough
	case "image-multi-label":
		*e = UploadDatasetSync1RequestBodyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UploadDatasetSync1RequestBodyTypeEnum: %s", s)
	}
}

type UploadDatasetSync1RequestBody struct {
	// Path to the .zip file on the local drive (FilePart).
	Data *string `multipartForm:"name=data"`
	// Name of the dataset. Optional. If this parameter is omitted, the dataset name is derived from the .zip file name.
	Name *string `multipartForm:"name=name"`
	// URL of the .zip file.
	Path *string `multipartForm:"name=path"`
	// Type of dataset data.
	Type *UploadDatasetSync1RequestBodyTypeEnum `multipartForm:"name=type"`
}

type UploadDatasetSync1Response struct {
	ContentType string
	// Upload success
	Dataset     *shared.Dataset
	StatusCode  int
	RawResponse *http.Response
}
