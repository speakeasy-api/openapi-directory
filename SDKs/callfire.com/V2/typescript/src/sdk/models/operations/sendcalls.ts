/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class SendCallsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

/**
 * The voice set by default for all text-to-speech messages defined in CallRecipient objects or as default *Message properties
 */
export enum SendCallsDefaultVoiceEnum {
  Male1 = "MALE1",
  Female1 = "FEMALE1",
  Female2 = "FEMALE2",
  Spanish1 = "SPANISH1",
  Frenchcanadian1 = "FRENCHCANADIAN1",
}

export class SendCallsRequest extends SpeakeasyBase {
  /**
   * An array of CallRecipient objects.
   *
   * @remarks
   * Limitations:
   * 1. Max number of CallRecipient objects is 10
   *
   */
  @SpeakeasyMetadata({
    data: "request, media_type=application/json",
    elemType: shared.CallRecipient,
  })
  requestBody?: shared.CallRecipient[];

  /**
   * Specifies a campaignId to send calls quickly on a previously created campaign
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=campaignId",
  })
  campaignId?: number;

  /**
   * Text to be turned into a sound, this text will be played when the phone is answered. Parameter can be overridden for any particular CallRecipient
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=defaultLiveMessage",
  })
  defaultLiveMessage?: string;

  /**
   * Id of sound file to play if phone is answered. Parameter can be overridden for any particular CallRecipient
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=defaultLiveMessageSoundId",
  })
  defaultLiveMessageSoundId?: number;

  /**
   * Text to be turned into a sound, this text will be played when answering machine is detected. Parameter can be overridden for any particular CallRecipient
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=defaultMachineMessage",
  })
  defaultMachineMessage?: string;

  /**
   * An id of a sound file to play if answering machine is detected. Parameter can be overridden for any particular CallRecipient
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=defaultMachineMessageSoundId",
  })
  defaultMachineMessageSoundId?: number;

  /**
   * The voice set by default for all text-to-speech messages defined in CallRecipient objects or as default *Message properties
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=defaultVoice",
  })
  defaultVoice?: SendCallsDefaultVoiceEnum;

  /**
   * Limit fields received in response. E.g. fields: id, name or fields items (id, name), see more at [partial response](https://developers.callfire.com/docs.html#partial-response) page.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fields",
  })
  fields?: string;

  /**
   * Turns on strict validation for recipients. System will reply with BAD_REQUEST(400) if strictValidation = true and one of numbers didn't pass validation
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=strictValidation",
  })
  strictValidation?: boolean;
}

export class SendCallsResponse extends SpeakeasyBase {
  /**
   * successful operation
   */
  @SpeakeasyMetadata()
  callList?: shared.CallList;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Bad request
   */
  @SpeakeasyMetadata()
  errorResponse?: shared.ErrorResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
