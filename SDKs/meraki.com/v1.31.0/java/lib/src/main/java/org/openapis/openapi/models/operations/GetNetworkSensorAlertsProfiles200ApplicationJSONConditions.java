/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class GetNetworkSensorAlertsProfiles200ApplicationJSONConditions {
    /**
     * If 'above', an alert will be sent when a sensor reads above the threshold. If 'below', an alert will be sent when a sensor reads below the threshold. Only applicable for temperature and humidity thresholds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("direction")
    public GetNetworkSensorAlertsProfiles200ApplicationJSONConditionsDirectionEnum direction;
    public GetNetworkSensorAlertsProfiles200ApplicationJSONConditions withDirection(GetNetworkSensorAlertsProfiles200ApplicationJSONConditionsDirectionEnum direction) {
        this.direction = direction;
        return this;
    }
    
    /**
     * Length of time in seconds that the triggering state must persist before an alert is sent. Available options are 0 seconds, 1 minute, 2 minutes, 3 minutes, 4 minutes, 5 minutes, 10 minutes, 15 minutes, 30 minutes, and 1 hour. Default is 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public GetNetworkSensorAlertsProfiles200ApplicationJSONConditionsDurationEnum duration;
    public GetNetworkSensorAlertsProfiles200ApplicationJSONConditions withDuration(GetNetworkSensorAlertsProfiles200ApplicationJSONConditionsDurationEnum duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * The type of sensor metric that will be monitored for changes. Available metrics are door, humidity, indoorAirQuality, noise, pm25, temperature, tvoc, and water.
     */
    @JsonProperty("metric")
    public String metric;
    public GetNetworkSensorAlertsProfiles200ApplicationJSONConditions withMetric(String metric) {
        this.metric = metric;
        return this;
    }
    
    /**
     * Threshold for sensor readings that will cause an alert to be sent. This object should contain a single property key matching the condition's 'metric' value.
     */
    @JsonProperty("threshold")
    public GetNetworkSensorAlertsProfiles200ApplicationJSONConditionsThreshold threshold;
    public GetNetworkSensorAlertsProfiles200ApplicationJSONConditions withThreshold(GetNetworkSensorAlertsProfiles200ApplicationJSONConditionsThreshold threshold) {
        this.threshold = threshold;
        return this;
    }
    
}
