<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class EnterpriseCrmEventbusProtoParamSpecEntryValidationRule
{
    /**
     * Range used to validate doubles and floats.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange $doubleRange
     */
	#[\JMS\Serializer\Annotation\SerializedName('doubleRange')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleDoubleRange $doubleRange = null;
    
    /**
     * Range used to validate longs and ints.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleIntRange $intRange
     */
	#[\JMS\Serializer\Annotation\SerializedName('intRange')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleIntRange')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleIntRange $intRange = null;
    
    /**
     * Rule used to validate strings.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleStringRegex $stringRegex
     */
	#[\JMS\Serializer\Annotation\SerializedName('stringRegex')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleStringRegex')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleStringRegex $stringRegex = null;
    
	public function __construct()
	{
		$this->doubleRange = null;
		$this->intRange = null;
		$this->stringRegex = null;
	}
}
