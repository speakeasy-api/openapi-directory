/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * NotificationConfigInput - Cloud Security Command Center (Cloud SCC) notification configs. A notification config is a Cloud SCC resource that contains the configuration to send notifications for create/update events of findings, assets and etc.
 */
public class NotificationConfigInput {
    /**
     * The description of the notification config (max of 1024 characters).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public NotificationConfigInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The relative resource name of this notification config. See: https://cloud.google.com/apis/design/resource_names#relative_resource_name Example: "organizations/{organization_id}/notificationConfigs/notify_public_bucket", "folders/{folder_id}/notificationConfigs/notify_public_bucket", or "projects/{project_id}/notificationConfigs/notify_public_bucket".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public NotificationConfigInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The Pub/Sub topic to send notifications to. Its format is "projects/[project_id]/topics/[topic]".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pubsubTopic")
    public String pubsubTopic;
    public NotificationConfigInput withPubsubTopic(String pubsubTopic) {
        this.pubsubTopic = pubsubTopic;
        return this;
    }
    
    /**
     * The config for streaming-based notifications, which send each event as soon as it is detected.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("streamingConfig")
    public StreamingConfig streamingConfig;
    public NotificationConfigInput withStreamingConfig(StreamingConfig streamingConfig) {
        this.streamingConfig = streamingConfig;
        return this;
    }
    
}
