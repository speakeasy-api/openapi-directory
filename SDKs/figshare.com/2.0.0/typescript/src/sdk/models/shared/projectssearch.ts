/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The field by which to order.
 */
export enum ProjectsSearchOrderEnum {
  PublishedDate = "published_date",
  ModifiedDate = "modified_date",
  Views = "views",
}

/**
 * Direction of ordering
 */
export enum ProjectsSearchOrderDirectionEnum {
  Asc = "asc",
  Desc = "desc",
}

/**
 * Search Parameters
 */
export class ProjectsSearch extends SpeakeasyBase {
  /**
   * only return collections from this group
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  group?: number;

  /**
   * only return collections from this institution
   */
  @SpeakeasyMetadata()
  @Expose({ name: "institution" })
  institution?: number;

  /**
   * Number of results included on a page. Used for pagination with query
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;

  /**
   * Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modified_since" })
  modifiedSince?: string;

  /**
   * Where to start the listing(the offset of the first result). Used for pagination with limit
   */
  @SpeakeasyMetadata()
  @Expose({ name: "offset" })
  offset?: number;

  /**
   * The field by which to order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "order" })
  order?: ProjectsSearchOrderEnum;

  /**
   * Direction of ordering
   */
  @SpeakeasyMetadata()
  @Expose({ name: "order_direction" })
  orderDirection?: ProjectsSearchOrderDirectionEnum;

  /**
   * Page number. Used for pagination with page_size
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  /**
   * The number of results included on a page. Used for pagination with page
   */
  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  /**
   * Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD
   */
  @SpeakeasyMetadata()
  @Expose({ name: "published_since" })
  publishedSince?: string;

  /**
   * Search term
   */
  @SpeakeasyMetadata()
  @Expose({ name: "search_for" })
  searchFor?: string;
}
