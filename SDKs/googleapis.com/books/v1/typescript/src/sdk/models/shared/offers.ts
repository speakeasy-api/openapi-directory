/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class OffersItemsItems extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "author" })
  author?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "canonicalVolumeLink" })
  canonicalVolumeLink?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "coverUrl" })
  coverUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "volumeId" })
  volumeId?: string;
}

export class OffersItems extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "artUrl" })
  artUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "gservicesKey" })
  gservicesKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata({ elemType: OffersItemsItems })
  @Expose({ name: "items" })
  @Type(() => OffersItemsItems)
  items?: OffersItemsItems[];
}

/**
 * Successful response
 */
export class Offers extends SpeakeasyBase {
  /**
   * A list of offers.
   */
  @SpeakeasyMetadata({ elemType: OffersItems })
  @Expose({ name: "items" })
  @Type(() => OffersItems)
  items?: OffersItems[];

  /**
   * Resource type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;
}
