// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TrendmicroConnectorOperatorEnum string

const (
	TrendmicroConnectorOperatorEnumProjection          TrendmicroConnectorOperatorEnum = "PROJECTION"
	TrendmicroConnectorOperatorEnumEqualTo             TrendmicroConnectorOperatorEnum = "EQUAL_TO"
	TrendmicroConnectorOperatorEnumAddition            TrendmicroConnectorOperatorEnum = "ADDITION"
	TrendmicroConnectorOperatorEnumMultiplication      TrendmicroConnectorOperatorEnum = "MULTIPLICATION"
	TrendmicroConnectorOperatorEnumDivision            TrendmicroConnectorOperatorEnum = "DIVISION"
	TrendmicroConnectorOperatorEnumSubtraction         TrendmicroConnectorOperatorEnum = "SUBTRACTION"
	TrendmicroConnectorOperatorEnumMaskAll             TrendmicroConnectorOperatorEnum = "MASK_ALL"
	TrendmicroConnectorOperatorEnumMaskFirstN          TrendmicroConnectorOperatorEnum = "MASK_FIRST_N"
	TrendmicroConnectorOperatorEnumMaskLastN           TrendmicroConnectorOperatorEnum = "MASK_LAST_N"
	TrendmicroConnectorOperatorEnumValidateNonNull     TrendmicroConnectorOperatorEnum = "VALIDATE_NON_NULL"
	TrendmicroConnectorOperatorEnumValidateNonZero     TrendmicroConnectorOperatorEnum = "VALIDATE_NON_ZERO"
	TrendmicroConnectorOperatorEnumValidateNonNegative TrendmicroConnectorOperatorEnum = "VALIDATE_NON_NEGATIVE"
	TrendmicroConnectorOperatorEnumValidateNumeric     TrendmicroConnectorOperatorEnum = "VALIDATE_NUMERIC"
	TrendmicroConnectorOperatorEnumNoOp                TrendmicroConnectorOperatorEnum = "NO_OP"
)

func (e TrendmicroConnectorOperatorEnum) ToPointer() *TrendmicroConnectorOperatorEnum {
	return &e
}

func (e *TrendmicroConnectorOperatorEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PROJECTION":
		fallthrough
	case "EQUAL_TO":
		fallthrough
	case "ADDITION":
		fallthrough
	case "MULTIPLICATION":
		fallthrough
	case "DIVISION":
		fallthrough
	case "SUBTRACTION":
		fallthrough
	case "MASK_ALL":
		fallthrough
	case "MASK_FIRST_N":
		fallthrough
	case "MASK_LAST_N":
		fallthrough
	case "VALIDATE_NON_NULL":
		fallthrough
	case "VALIDATE_NON_ZERO":
		fallthrough
	case "VALIDATE_NON_NEGATIVE":
		fallthrough
	case "VALIDATE_NUMERIC":
		fallthrough
	case "NO_OP":
		*e = TrendmicroConnectorOperatorEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TrendmicroConnectorOperatorEnum: %v", v)
	}
}
