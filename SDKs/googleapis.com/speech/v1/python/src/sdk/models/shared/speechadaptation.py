"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import abnfgrammar as shared_abnfgrammar
from ..shared import customclass as shared_customclass
from ..shared import phraseset as shared_phraseset
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SpeechAdaptation:
    r"""Speech adaptation configuration."""
    
    abnf_grammar: Optional[shared_abnfgrammar.ABNFGrammar] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('abnfGrammar'), 'exclude': lambda f: f is None }})  
    custom_classes: Optional[list[shared_customclass.CustomClass]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customClasses'), 'exclude': lambda f: f is None }})
    r"""A collection of custom classes. To specify the classes inline, leave the class' `name` blank and fill in the rest of its fields, giving it a unique `custom_class_id`. Refer to the inline defined class in phrase hints by its `custom_class_id`."""  
    phrase_set_references: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phraseSetReferences'), 'exclude': lambda f: f is None }})
    r"""A collection of phrase set resource names to use."""  
    phrase_sets: Optional[list[shared_phraseset.PhraseSet]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phraseSets'), 'exclude': lambda f: f is None }})
    r"""A collection of phrase sets. To specify the hints inline, leave the phrase set's `name` blank and fill in the rest of its fields. Any phrase set can use any custom class."""  
    