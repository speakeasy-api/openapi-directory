"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awsdynamodbtableattributedefinition as shared_awsdynamodbtableattributedefinition
from ..shared import awsdynamodbtablebillingmodesummary as shared_awsdynamodbtablebillingmodesummary
from ..shared import awsdynamodbtableglobalsecondaryindex as shared_awsdynamodbtableglobalsecondaryindex
from ..shared import awsdynamodbtablekeyschema as shared_awsdynamodbtablekeyschema
from ..shared import awsdynamodbtablelocalsecondaryindex as shared_awsdynamodbtablelocalsecondaryindex
from ..shared import awsdynamodbtableprovisionedthroughput as shared_awsdynamodbtableprovisionedthroughput
from ..shared import awsdynamodbtablereplica as shared_awsdynamodbtablereplica
from ..shared import awsdynamodbtablerestoresummary as shared_awsdynamodbtablerestoresummary
from ..shared import awsdynamodbtablessedescription as shared_awsdynamodbtablessedescription
from ..shared import awsdynamodbtablestreamspecification as shared_awsdynamodbtablestreamspecification
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsDynamoDbTableDetails:
    r"""Provides details about a DynamoDB table."""
    
    attribute_definitions: Optional[list[shared_awsdynamodbtableattributedefinition.AwsDynamoDbTableAttributeDefinition]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AttributeDefinitions'), 'exclude': lambda f: f is None }})  
    billing_mode_summary: Optional[shared_awsdynamodbtablebillingmodesummary.AwsDynamoDbTableBillingModeSummary] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BillingModeSummary'), 'exclude': lambda f: f is None }})  
    creation_date_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CreationDateTime'), 'exclude': lambda f: f is None }})  
    global_secondary_indexes: Optional[list[shared_awsdynamodbtableglobalsecondaryindex.AwsDynamoDbTableGlobalSecondaryIndex]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GlobalSecondaryIndexes'), 'exclude': lambda f: f is None }})  
    global_table_version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GlobalTableVersion'), 'exclude': lambda f: f is None }})  
    item_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ItemCount'), 'exclude': lambda f: f is None }})  
    key_schema: Optional[list[shared_awsdynamodbtablekeyschema.AwsDynamoDbTableKeySchema]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KeySchema'), 'exclude': lambda f: f is None }})  
    latest_stream_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LatestStreamArn'), 'exclude': lambda f: f is None }})  
    latest_stream_label: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LatestStreamLabel'), 'exclude': lambda f: f is None }})  
    local_secondary_indexes: Optional[list[shared_awsdynamodbtablelocalsecondaryindex.AwsDynamoDbTableLocalSecondaryIndex]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LocalSecondaryIndexes'), 'exclude': lambda f: f is None }})  
    provisioned_throughput: Optional[shared_awsdynamodbtableprovisionedthroughput.AwsDynamoDbTableProvisionedThroughput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ProvisionedThroughput'), 'exclude': lambda f: f is None }})  
    replicas: Optional[list[shared_awsdynamodbtablereplica.AwsDynamoDbTableReplica]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Replicas'), 'exclude': lambda f: f is None }})  
    restore_summary: Optional[shared_awsdynamodbtablerestoresummary.AwsDynamoDbTableRestoreSummary] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('RestoreSummary'), 'exclude': lambda f: f is None }})  
    sse_description: Optional[shared_awsdynamodbtablessedescription.AwsDynamoDbTableSseDescription] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SseDescription'), 'exclude': lambda f: f is None }})  
    stream_specification: Optional[shared_awsdynamodbtablestreamspecification.AwsDynamoDbTableStreamSpecification] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StreamSpecification'), 'exclude': lambda f: f is None }})  
    table_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TableId'), 'exclude': lambda f: f is None }})  
    table_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TableName'), 'exclude': lambda f: f is None }})  
    table_size_bytes: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TableSizeBytes'), 'exclude': lambda f: f is None }})  
    table_status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TableStatus'), 'exclude': lambda f: f is None }})  
    