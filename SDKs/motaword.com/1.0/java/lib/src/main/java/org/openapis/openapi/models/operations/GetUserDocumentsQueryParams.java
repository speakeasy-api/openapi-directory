/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetUserDocumentsQueryParams {
    /**
     * searches in source language of documents, in source and target languages of document's quote
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=language_code")
    public String languageCode;
    public GetUserDocumentsQueryParams withLanguageCode(String languageCode) {
        this.languageCode = languageCode;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=order_by")
    public GetUserDocumentsOrderByEnum orderBy;
    public GetUserDocumentsQueryParams withOrderBy(GetUserDocumentsOrderByEnum orderBy) {
        this.orderBy = orderBy;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=order_type")
    public org.openapis.openapi.models.shared.ListOrderTypeEnum orderType;
    public GetUserDocumentsQueryParams withOrderType(org.openapis.openapi.models.shared.ListOrderTypeEnum orderType) {
        this.orderType = orderType;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;
    public GetUserDocumentsQueryParams withPage(Long page) {
        this.page = page;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=per_page")
    public Long perPage;
    public GetUserDocumentsQueryParams withPerPage(Long perPage) {
        this.perPage = perPage;
        return this;
    }
    
    /**
     * When true, this will return the most 4 recent active documents.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=recent")
    public Boolean recent;
    public GetUserDocumentsQueryParams withRecent(Boolean recent) {
        this.recent = recent;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=search")
    public String search;
    public GetUserDocumentsQueryParams withSearch(String search) {
        this.search = search;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=type_filter")
    public GetUserDocumentsTypeFilterEnum typeFilter;
    public GetUserDocumentsQueryParams withTypeFilter(GetUserDocumentsTypeFilterEnum typeFilter) {
        this.typeFilter = typeFilter;
        return this;
    }
    
}
