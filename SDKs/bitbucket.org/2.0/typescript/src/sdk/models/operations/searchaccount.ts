/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class SearchAccountRequest extends SpeakeasyBase {
  /**
   * Which page of the search results to retrieve
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
  page?: number;

  /**
   * How many search results to retrieve per page
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pagelen",
  })
  pagelen?: number;

  /**
   * The search query
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search_query",
  })
  searchQuery: string;

  /**
   * Either the UUID of the account surrounded by curly-braces, for example `{account UUID}`, OR an Atlassian Account ID.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=selected_user",
  })
  selectedUser: string;
}

export class SearchAccountResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * If the search request was invalid due to one of the
   *
   * @remarks
   * following reasons:
   *
   * * the specified type of target account doesn''t match the actual
   * account type;
   *
   * * malformed pagination properties;
   *
   * * missing or malformed search query, in the latter case an error
   * key will be returned in `error.data.key` property.
   *
   */
  @SpeakeasyMetadata()
  error?: Record<string, any>;

  /**
   * Successful search
   */
  @SpeakeasyMetadata()
  searchResultPage?: shared.SearchResultPage;
}
