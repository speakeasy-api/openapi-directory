// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetTranscriptByIDPathParams struct {
	// Rev.ai API Job Id
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

type GetTranscriptByIDHeaders struct {
	// MIME type specifying the transcription output format
	Accept *shared.AcceptTranscriptEnum `header:"style=simple,explode=false,name=Accept"`
}

type GetTranscriptByIDRequest struct {
	PathParams GetTranscriptByIDPathParams
	Headers    GetTranscriptByIDHeaders
}

// GetTranscriptByID409ApplicationProblemPlusJSON - Problem details object returned on errors
type GetTranscriptByID409ApplicationProblemPlusJSON struct {
	// Allowed values for this request
	AllowedValues []string `json:"allowed_values,omitempty"`
	// Value passed in given request
	CurrentValue *string `json:"current_value,omitempty"`
	// Human-readable explanation specific to this occurrence of the problem
	Detail *string `json:"detail,omitempty"`
	// HTTP status code of the error
	Status *int64 `json:"status,omitempty"`
	// Short, human-readable summary of the problem type
	Title *string `json:"title,omitempty"`
	// URI that identifies the problem
	Type *string `json:"type,omitempty"`
}

// GetTranscriptByID406ApplicationProblemPlusJSON - Problem details object returned on errors
type GetTranscriptByID406ApplicationProblemPlusJSON struct {
	// Allowed values for this request
	AllowedValues []string `json:"allowed_values,omitempty"`
	// Value passed in given request
	CurrentValue *string `json:"current_value,omitempty"`
	// Human-readable explanation specific to this occurrence of the problem
	Detail *string `json:"detail,omitempty"`
	// HTTP status code of the error
	Status *int64 `json:"status,omitempty"`
	// Short, human-readable summary of the problem type
	Title *string `json:"title,omitempty"`
	// URI that identifies the problem
	Type *string `json:"type,omitempty"`
}

// GetTranscriptByID404ApplicationProblemPlusJSON - Problem details object returned on errors
type GetTranscriptByID404ApplicationProblemPlusJSON struct {
	// HTTP status code of the error
	Status *int64 `json:"status,omitempty"`
	// Short, human-readable summary of the problem type
	Title *string `json:"title,omitempty"`
	// URI that identifies the problem
	Type *string `json:"type,omitempty"`
}

// GetTranscriptByID401ApplicationProblemPlusJSON - Request Unauthorized
// ***
// Caused by an old or invalid [access token](#section/Authentication/Access-Token), try regenerating your token on your [access token page](https://rev.ai/access_token).
type GetTranscriptByID401ApplicationProblemPlusJSON struct {
	// HTTP status code of the error
	Status *int64 `json:"status,omitempty"`
	// Short, human-readable summary of the problem type
	Title *string `json:"title,omitempty"`
}

type GetTranscriptByIDResponse struct {
	ContentType string
	// Request Unauthorized
	// ***
	// Caused by an old or invalid [access token](#section/Authentication/Access-Token), try regenerating your token on your [access token page](https://rev.ai/access_token).
	//
	GetTranscriptByID401ApplicationProblemPlusJSONObject *GetTranscriptByID401ApplicationProblemPlusJSON
	// Job Not Found
	GetTranscriptByID404ApplicationProblemPlusJSONObject *GetTranscriptByID404ApplicationProblemPlusJSON
	// Invalid Transcript Format
	GetTranscriptByID406ApplicationProblemPlusJSONObject *GetTranscriptByID406ApplicationProblemPlusJSON
	// Invalid Job State
	// ***
	// In case of failure, more details can be found at [`GET /jobs/{id}`](#operation/GetJobById)
	//
	GetTranscriptByID409ApplicationProblemPlusJSONObject *GetTranscriptByID409ApplicationProblemPlusJSON
	StatusCode                                           int
	RawResponse                                          *http.Response
	// Rev.ai API Transcript
	// ***
	// Note: Transcript output format is required in the Accept header. Output can either be in Rev's JSON format or plaintext.
	//
	Transcript *shared.Transcript
	// Rev.ai API Transcript
	// ***
	// Note: Transcript output format is required in the Accept header. Output can either be in Rev's JSON format or plaintext.
	//
	TranscriptText *string
}
