// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WritableConsolePortConnectionStatusEnum string

const (
	WritableConsolePortConnectionStatusEnumFalse WritableConsolePortConnectionStatusEnum = "false"
	WritableConsolePortConnectionStatusEnumTrue  WritableConsolePortConnectionStatusEnum = "true"
)

func (e *WritableConsolePortConnectionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "false":
		fallthrough
	case "true":
		*e = WritableConsolePortConnectionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WritableConsolePortConnectionStatusEnum: %s", s)
	}
}

type WritableConsolePortInput struct {
	ConnectionStatus *WritableConsolePortConnectionStatusEnum `json:"connection_status,omitempty"`
	CsPort           *int64                                   `json:"cs_port,omitempty"`
	Device           int64                                    `json:"device"`
	Name             string                                   `json:"name"`
	Tags             []string                                 `json:"tags,omitempty"`
}
