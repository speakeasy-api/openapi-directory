"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Fleet = void 0;
var utils_1 = require("../../../internal/utils");
var computecapacitystatus_1 = require("./computecapacitystatus");
var domainjoininfo_1 = require("./domainjoininfo");
var fleeterror_1 = require("./fleeterror");
var fleetstateenum_1 = require("./fleetstateenum");
var fleettypeenum_1 = require("./fleettypeenum");
var platformtypeenum_1 = require("./platformtypeenum");
var s3location_1 = require("./s3location");
var streamviewenum_1 = require("./streamviewenum");
var vpcconfig_1 = require("./vpcconfig");
var class_transformer_1 = require("class-transformer");
/**
 * Describes a fleet.
 */
var Fleet = /** @class */ (function (_super) {
    __extends(Fleet, _super);
    function Fleet() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Arn" }),
        __metadata("design:type", String)
    ], Fleet.prototype, "arn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ComputeCapacityStatus" }),
        (0, class_transformer_1.Type)(function () { return computecapacitystatus_1.ComputeCapacityStatus; }),
        __metadata("design:type", computecapacitystatus_1.ComputeCapacityStatus)
    ], Fleet.prototype, "computeCapacityStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "CreatedTime" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], Fleet.prototype, "createdTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Description" }),
        __metadata("design:type", String)
    ], Fleet.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DisconnectTimeoutInSeconds" }),
        __metadata("design:type", Number)
    ], Fleet.prototype, "disconnectTimeoutInSeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DisplayName" }),
        __metadata("design:type", String)
    ], Fleet.prototype, "displayName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DomainJoinInfo" }),
        (0, class_transformer_1.Type)(function () { return domainjoininfo_1.DomainJoinInfo; }),
        __metadata("design:type", domainjoininfo_1.DomainJoinInfo)
    ], Fleet.prototype, "domainJoinInfo", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EnableDefaultInternetAccess" }),
        __metadata("design:type", Boolean)
    ], Fleet.prototype, "enableDefaultInternetAccess", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: fleeterror_1.FleetError }),
        (0, class_transformer_1.Expose)({ name: "FleetErrors" }),
        (0, class_transformer_1.Type)(function () { return fleeterror_1.FleetError; }),
        __metadata("design:type", Array)
    ], Fleet.prototype, "fleetErrors", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "FleetType" }),
        __metadata("design:type", String)
    ], Fleet.prototype, "fleetType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IamRoleArn" }),
        __metadata("design:type", String)
    ], Fleet.prototype, "iamRoleArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IdleDisconnectTimeoutInSeconds" }),
        __metadata("design:type", Number)
    ], Fleet.prototype, "idleDisconnectTimeoutInSeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ImageArn" }),
        __metadata("design:type", String)
    ], Fleet.prototype, "imageArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ImageName" }),
        __metadata("design:type", String)
    ], Fleet.prototype, "imageName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "InstanceType" }),
        __metadata("design:type", String)
    ], Fleet.prototype, "instanceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MaxConcurrentSessions" }),
        __metadata("design:type", Number)
    ], Fleet.prototype, "maxConcurrentSessions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MaxUserDurationInSeconds" }),
        __metadata("design:type", Number)
    ], Fleet.prototype, "maxUserDurationInSeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Name" }),
        __metadata("design:type", String)
    ], Fleet.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Platform" }),
        __metadata("design:type", String)
    ], Fleet.prototype, "platform", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SessionScriptS3Location" }),
        (0, class_transformer_1.Type)(function () { return s3location_1.S3Location; }),
        __metadata("design:type", s3location_1.S3Location)
    ], Fleet.prototype, "sessionScriptS3Location", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "State" }),
        __metadata("design:type", String)
    ], Fleet.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "StreamView" }),
        __metadata("design:type", String)
    ], Fleet.prototype, "streamView", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "UsbDeviceFilterStrings" }),
        __metadata("design:type", Array)
    ], Fleet.prototype, "usbDeviceFilterStrings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "VpcConfig" }),
        (0, class_transformer_1.Type)(function () { return vpcconfig_1.VpcConfig; }),
        __metadata("design:type", vpcconfig_1.VpcConfig)
    ], Fleet.prototype, "vpcConfig", void 0);
    return Fleet;
}(utils_1.SpeakeasyBase));
exports.Fleet = Fleet;
