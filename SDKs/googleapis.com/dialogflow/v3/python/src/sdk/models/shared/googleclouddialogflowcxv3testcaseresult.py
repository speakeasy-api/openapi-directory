"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googleclouddialogflowcxv3conversationturn as shared_googleclouddialogflowcxv3conversationturn
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GoogleCloudDialogflowCxV3TestCaseResultTestResultEnum(str, Enum):
    r"""Whether the test case passed in the agent environment."""
    TEST_RESULT_UNSPECIFIED = 'TEST_RESULT_UNSPECIFIED'
    PASSED = 'PASSED'
    FAILED = 'FAILED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowCxV3TestCaseResult:
    r"""Represents a result from running a test case in an agent environment."""
    
    conversation_turns: Optional[list[shared_googleclouddialogflowcxv3conversationturn.GoogleCloudDialogflowCxV3ConversationTurn]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversationTurns'), 'exclude': lambda f: f is None }})
    r"""The conversation turns uttered during the test case replay in chronological order."""  
    environment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('environment'), 'exclude': lambda f: f is None }})
    r"""Environment where the test was run. If not set, it indicates the draft environment."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`."""  
    test_result: Optional[GoogleCloudDialogflowCxV3TestCaseResultTestResultEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testResult'), 'exclude': lambda f: f is None }})
    r"""Whether the test case passed in the agent environment."""  
    test_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testTime'), 'exclude': lambda f: f is None }})
    r"""The time that the test was run."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowCxV3TestCaseResultInput:
    r"""Represents a result from running a test case in an agent environment."""
    
    conversation_turns: Optional[list[shared_googleclouddialogflowcxv3conversationturn.GoogleCloudDialogflowCxV3ConversationTurnInput]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conversationTurns'), 'exclude': lambda f: f is None }})
    r"""The conversation turns uttered during the test case replay in chronological order."""  
    environment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('environment'), 'exclude': lambda f: f is None }})
    r"""Environment where the test was run. If not set, it indicates the draft environment."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`."""  
    test_result: Optional[GoogleCloudDialogflowCxV3TestCaseResultTestResultEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testResult'), 'exclude': lambda f: f is None }})
    r"""Whether the test case passed in the agent environment."""  
    test_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('testTime'), 'exclude': lambda f: f is None }})
    r"""The time that the test was run."""  
    