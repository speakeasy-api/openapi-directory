// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AppRestrictionsSchemaRestrictionRestrictionTypeEnum - The type of the restriction.
type AppRestrictionsSchemaRestrictionRestrictionTypeEnum string

const (
	AppRestrictionsSchemaRestrictionRestrictionTypeEnumBool        AppRestrictionsSchemaRestrictionRestrictionTypeEnum = "bool"
	AppRestrictionsSchemaRestrictionRestrictionTypeEnumString      AppRestrictionsSchemaRestrictionRestrictionTypeEnum = "string"
	AppRestrictionsSchemaRestrictionRestrictionTypeEnumInteger     AppRestrictionsSchemaRestrictionRestrictionTypeEnum = "integer"
	AppRestrictionsSchemaRestrictionRestrictionTypeEnumChoice      AppRestrictionsSchemaRestrictionRestrictionTypeEnum = "choice"
	AppRestrictionsSchemaRestrictionRestrictionTypeEnumMultiselect AppRestrictionsSchemaRestrictionRestrictionTypeEnum = "multiselect"
	AppRestrictionsSchemaRestrictionRestrictionTypeEnumHidden      AppRestrictionsSchemaRestrictionRestrictionTypeEnum = "hidden"
	AppRestrictionsSchemaRestrictionRestrictionTypeEnumBundle      AppRestrictionsSchemaRestrictionRestrictionTypeEnum = "bundle"
	AppRestrictionsSchemaRestrictionRestrictionTypeEnumBundleArray AppRestrictionsSchemaRestrictionRestrictionTypeEnum = "bundleArray"
)

func (e *AppRestrictionsSchemaRestrictionRestrictionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "bool":
		fallthrough
	case "string":
		fallthrough
	case "integer":
		fallthrough
	case "choice":
		fallthrough
	case "multiselect":
		fallthrough
	case "hidden":
		fallthrough
	case "bundle":
		fallthrough
	case "bundleArray":
		*e = AppRestrictionsSchemaRestrictionRestrictionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AppRestrictionsSchemaRestrictionRestrictionTypeEnum: %s", s)
	}
}

// AppRestrictionsSchemaRestriction - A restriction in the App Restriction Schema represents a piece of configuration that may be pre-applied.
type AppRestrictionsSchemaRestriction struct {
	// A typed value for the restriction.
	DefaultValue *AppRestrictionsSchemaRestrictionRestrictionValue `json:"defaultValue,omitempty"`
	// A longer description of the restriction, giving more detail of what it affects.
	Description *string `json:"description,omitempty"`
	// For choice or multiselect restrictions, the list of possible entries' human-readable names.
	Entry []string `json:"entry,omitempty"`
	// For choice or multiselect restrictions, the list of possible entries' machine-readable values. These values should be used in the configuration, either as a single string value for a choice restriction or in a stringArray for a multiselect restriction.
	EntryValue []string `json:"entryValue,omitempty"`
	// The unique key that the product uses to identify the restriction, e.g. "com.google.android.gm.fieldname".
	Key *string `json:"key,omitempty"`
	// For bundle or bundleArray restrictions, the list of nested restrictions. A bundle restriction is always nested within a bundleArray restriction, and a bundleArray restriction is at most two levels deep.
	NestedRestriction []AppRestrictionsSchemaRestriction `json:"nestedRestriction,omitempty"`
	// The type of the restriction.
	RestrictionType *AppRestrictionsSchemaRestrictionRestrictionTypeEnum `json:"restrictionType,omitempty"`
	// The name of the restriction.
	Title *string `json:"title,omitempty"`
}
