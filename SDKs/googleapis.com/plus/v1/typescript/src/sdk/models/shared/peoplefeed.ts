/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Person } from "./person";
import { Expose, Type } from "class-transformer";

/**
 * Successful response
 */
export class PeopleFeed extends SpeakeasyBase {
  /**
   * ETag of this response for caching purposes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * The people in this page of results. Each item includes the id, displayName, image, and url for the person. To retrieve additional profile data, see the people.get method.
   */
  @SpeakeasyMetadata({ elemType: Person })
  @Expose({ name: "items" })
  @Type(() => Person)
  items?: Person[];

  /**
   * Identifies this resource as a collection of people. Value: "plus#peopleFeed".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The continuation token, which is used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * Link to this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * The title of this collection of people.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * The total number of people available in this list. The number of people in a response might be smaller due to paging. This might not be set for all collections.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalItems" })
  totalItems?: number;
}
