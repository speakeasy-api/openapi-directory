// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteLifecycleHookActionEnum
type GETDeleteLifecycleHookActionEnum string

const (
	GETDeleteLifecycleHookActionEnumDeleteLifecycleHook GETDeleteLifecycleHookActionEnum = "DeleteLifecycleHook"
)

func (e *GETDeleteLifecycleHookActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteLifecycleHook":
		*e = GETDeleteLifecycleHookActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteLifecycleHookActionEnum: %s", s)
	}
}

// GETDeleteLifecycleHookVersionEnum
type GETDeleteLifecycleHookVersionEnum string

const (
	GETDeleteLifecycleHookVersionEnumTwoThousandAndEleven0101 GETDeleteLifecycleHookVersionEnum = "2011-01-01"
)

func (e *GETDeleteLifecycleHookVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2011-01-01":
		*e = GETDeleteLifecycleHookVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteLifecycleHookVersionEnum: %s", s)
	}
}

type GETDeleteLifecycleHookQueryParams struct {
	Action GETDeleteLifecycleHookActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the Auto Scaling group.
	AutoScalingGroupName string `queryParam:"style=form,explode=true,name=AutoScalingGroupName"`
	// The name of the lifecycle hook.
	LifecycleHookName string                            `queryParam:"style=form,explode=true,name=LifecycleHookName"`
	Version           GETDeleteLifecycleHookVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDeleteLifecycleHookHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteLifecycleHookRequest struct {
	QueryParams GETDeleteLifecycleHookQueryParams
	Headers     GETDeleteLifecycleHookHeaders
}

type GETDeleteLifecycleHookResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
