/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * A relative date (based on the current date). Valid only if the type is DATE_BEFORE, DATE_AFTER, DATE_ON_OR_BEFORE or DATE_ON_OR_AFTER. Relative dates are not supported in data validation. They are supported only in conditional formatting and conditional filters.
 */
export enum ConditionValueRelativeDateEnum {
  RelativeDateUnspecified = "RELATIVE_DATE_UNSPECIFIED",
  PastYear = "PAST_YEAR",
  PastMonth = "PAST_MONTH",
  PastWeek = "PAST_WEEK",
  Yesterday = "YESTERDAY",
  Today = "TODAY",
  Tomorrow = "TOMORROW",
}

/**
 * The value of the condition.
 */
export class ConditionValue extends SpeakeasyBase {
  /**
   * A relative date (based on the current date). Valid only if the type is DATE_BEFORE, DATE_AFTER, DATE_ON_OR_BEFORE or DATE_ON_OR_AFTER. Relative dates are not supported in data validation. They are supported only in conditional formatting and conditional filters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "relativeDate" })
  relativeDate?: ConditionValueRelativeDateEnum;

  /**
   * A value the condition is based on. The value is parsed as if the user typed into a cell. Formulas are supported (and must begin with an `=` or a '+').
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userEnteredValue" })
  userEnteredValue?: string;
}
