/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class QueryLogShippingConfigurationsRequest {
    /**
     * Limit the summary information to a specified maximum number of results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Integer limit;

    public QueryLogShippingConfigurationsRequest withLimit(Integer limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Filter log shipping configuration objects by performing an infix search using the location string value (host/instance) for a secondary database.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=location")
    public String location;

    public QueryLogShippingConfigurationsRequest withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * Starting position in the list of results contained in the response. The summary information includes the specified numbered result and all higher numbered results.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=offset")
    public Integer offset;

    public QueryLogShippingConfigurationsRequest withOffset(Integer offset) {
        this.offset = offset;
        return this;
    }
    
    /**
     * ID of a primary database object.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=primary_database_id")
    public String primaryDatabaseId;

    public QueryLogShippingConfigurationsRequest withPrimaryDatabaseId(String primaryDatabaseId) {
        this.primaryDatabaseId = primaryDatabaseId;
        return this;
    }
    
    /**
     * Filter log shipping configuration objects by performing an infix search using the name of a primary database.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=primary_database_name")
    public String primaryDatabaseName;

    public QueryLogShippingConfigurationsRequest withPrimaryDatabaseName(String primaryDatabaseName) {
        this.primaryDatabaseName = primaryDatabaseName;
        return this;
    }
    
    /**
     * Filter log shipping configuration objects by performing an infix search using the name of a secondary database.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=secondary_database_name")
    public String secondaryDatabaseName;

    public QueryLogShippingConfigurationsRequest withSecondaryDatabaseName(String secondaryDatabaseName) {
        this.secondaryDatabaseName = secondaryDatabaseName;
        return this;
    }
    
    /**
     * Specifies an attribute used to ASCII-sort the results. Sorting by the last_applied attribute represents the timestamp as an ISO 8601-encoded string.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_by")
    public QueryLogShippingConfigurationsSortByEnum sortBy;

    public QueryLogShippingConfigurationsRequest withSortBy(QueryLogShippingConfigurationsSortByEnum sortBy) {
        this.sortBy = sortBy;
        return this;
    }
    
    /**
     * Sort order, either ascending or descending.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort_order")
    public QueryLogShippingConfigurationsSortOrderEnum sortOrder;

    public QueryLogShippingConfigurationsRequest withSortOrder(QueryLogShippingConfigurationsSortOrderEnum sortOrder) {
        this.sortOrder = sortOrder;
        return this;
    }
    
    /**
     * Filter log shipping configuration objects based on the status value for the secondary database.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=status")
    public QueryLogShippingConfigurationsStatusEnum status;

    public QueryLogShippingConfigurationsRequest withStatus(QueryLogShippingConfigurationsStatusEnum status) {
        this.status = status;
        return this;
    }
    
    public QueryLogShippingConfigurationsRequest(){}
}
