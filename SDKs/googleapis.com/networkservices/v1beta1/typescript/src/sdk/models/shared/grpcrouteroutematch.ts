/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GrpcRouteHeaderMatch } from "./grpcrouteheadermatch";
import { GrpcRouteMethodMatch } from "./grpcroutemethodmatch";
import { Expose, Type } from "class-transformer";

/**
 * Criteria for matching traffic. A RouteMatch will be considered to match when all supplied fields match.
 */
export class GrpcRouteRouteMatch extends SpeakeasyBase {
  /**
   * Optional. Specifies a collection of headers to match.
   */
  @SpeakeasyMetadata({ elemType: GrpcRouteHeaderMatch })
  @Expose({ name: "headers" })
  @Type(() => GrpcRouteHeaderMatch)
  headers?: GrpcRouteHeaderMatch[];

  /**
   * Specifies a match against a method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "method" })
  @Type(() => GrpcRouteMethodMatch)
  method?: GrpcRouteMethodMatch;
}
