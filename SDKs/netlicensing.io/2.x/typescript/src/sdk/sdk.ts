/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { License } from "./license";
import { Licensee } from "./licensee";
import { LicenseTemplate } from "./licensetemplate";
import { PaymentMethod } from "./paymentmethod";
import { Product } from "./product";
import { ProductModule } from "./productmodule";
import { Token } from "./token";
import { Transaction } from "./transaction";
import { Utility } from "./utility";
import axios from "axios";
import { AxiosInstance } from "axios";

/**
 * Contains the list of servers available to the SDK
 */
export const ServerList = ["https://go.netlicensing.io/core/v2/rest"] as const;

/**
 * The available configuration options for the SDK
 */
export type SDKProps = {
  /**
   * Allows overriding the default axios client used by the SDK
   */
  defaultClient?: AxiosInstance;
  /**
   * Allows overriding the default server URL used by the SDK
   */
  serverURL?: string;
};

/**
 * The Labs64 <a href='https://netlicensing.io/wiki/restful-api' target='_blank'>NetLicensing RESTful API</a> gives you access to NetLicensingâ€™s core features.<br/><br/><strong>Authentication</strong><br/>You authenticate to the NetLicensing API by providing your account credentials or simply use our demo account - <code>demo:demo</code><br/><br/>Find out more about Labs64 NetLicensing at <a href='https://netlicensing.io' target='_blank'>netlicensing.io</a>
 */
export class SDK {
  /**
   * License operations
   *
   * @see {@link https://netlicensing.io/wiki/license-services} - License Services
   */
  public license: License;
  /**
   * License Template operations
   *
   * @see {@link https://netlicensing.io/wiki/license-template-services} - License Template Services
   */
  public licenseTemplate: LicenseTemplate;
  /**
   * Licensee operations
   *
   * @see {@link https://netlicensing.io/wiki/licensee-services} - Licensee Services
   */
  public licensee: Licensee;
  /**
   * Payment Method operations
   *
   * @see {@link https://netlicensing.io/wiki/payment-method-services} - Payment Method Services
   */
  public paymentMethod: PaymentMethod;
  /**
   * Product operations
   *
   * @see {@link https://netlicensing.io/wiki/product-services} - Product Services
   */
  public product: Product;
  /**
   * Product Module operations
   *
   * @see {@link https://netlicensing.io/wiki/product-module-services} - Product Module Services
   */
  public productModule: ProductModule;
  /**
   * Token operations
   *
   * @see {@link https://netlicensing.io/wiki/token-services} - Token Services
   */
  public token: Token;
  /**
   * Transaction operations
   *
   * @see {@link https://netlicensing.io/wiki/transaction-services} - Transaction Services
   */
  public transaction: Transaction;
  /**
   * Utility operations
   *
   * @see {@link https://netlicensing.io/wiki/utility-services} - Utility Services
   */
  public utility: Utility;

  public _defaultClient: AxiosInstance;
  public _securityClient: AxiosInstance;
  public _serverURL: string;
  private _language = "typescript";
  private _sdkVersion = "0.0.1";
  private _genVersion = "internal";
  private _globals: any;

  constructor(props?: SDKProps) {
    this._serverURL = props?.serverURL ?? ServerList[0];

    this._defaultClient =
      props?.defaultClient ?? axios.create({ baseURL: this._serverURL });
    this._securityClient = this._defaultClient;

    this.license = new License(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.licenseTemplate = new LicenseTemplate(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.licensee = new Licensee(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.paymentMethod = new PaymentMethod(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.product = new Product(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.productModule = new ProductModule(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.token = new Token(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.transaction = new Transaction(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.utility = new Utility(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );
  }
}
