/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NestedRole } from "./nestedrole";
import { NestedSite } from "./nestedsite";
import { NestedTenant } from "./nestedtenant";
import { NestedVLANGroup } from "./nestedvlangroup";
import { Expose, Transform, Type } from "class-transformer";

export enum VLANStatusLabelEnum {
  Active = "Active",
  Reserved = "Reserved",
  Deprecated = "Deprecated",
}

export enum VLANStatusValueEnum {
  Active = "active",
  Reserved = "reserved",
  Deprecated = "deprecated",
}

export class VLANStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label: VLANStatusLabelEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: VLANStatusValueEnum;
}

export class Vlan extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "custom_fields" })
  customFields?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "group" })
  @Type(() => NestedVLANGroup)
  group?: NestedVLANGroup;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "last_updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "prefix_count" })
  prefixCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  @Type(() => NestedRole)
  role?: NestedRole;

  @SpeakeasyMetadata()
  @Expose({ name: "site" })
  @Type(() => NestedSite)
  site?: NestedSite;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => VLANStatus)
  status?: VLANStatus;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "tenant" })
  @Type(() => NestedTenant)
  tenant?: NestedTenant;

  @SpeakeasyMetadata()
  @Expose({ name: "vid" })
  vid: number;
}
