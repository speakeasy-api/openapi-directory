// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NetworkResourceStatusEnum string

const (
	NetworkResourceStatusEnumPending               NetworkResourceStatusEnum = "PENDING"
	NetworkResourceStatusEnumShipped               NetworkResourceStatusEnum = "SHIPPED"
	NetworkResourceStatusEnumProvisioning          NetworkResourceStatusEnum = "PROVISIONING"
	NetworkResourceStatusEnumProvisioned           NetworkResourceStatusEnum = "PROVISIONED"
	NetworkResourceStatusEnumAvailable             NetworkResourceStatusEnum = "AVAILABLE"
	NetworkResourceStatusEnumDeleting              NetworkResourceStatusEnum = "DELETING"
	NetworkResourceStatusEnumPendingReturn         NetworkResourceStatusEnum = "PENDING_RETURN"
	NetworkResourceStatusEnumDeleted               NetworkResourceStatusEnum = "DELETED"
	NetworkResourceStatusEnumCreatingShippingLabel NetworkResourceStatusEnum = "CREATING_SHIPPING_LABEL"
)

func (e NetworkResourceStatusEnum) ToPointer() *NetworkResourceStatusEnum {
	return &e
}

func (e *NetworkResourceStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "SHIPPED":
		fallthrough
	case "PROVISIONING":
		fallthrough
	case "PROVISIONED":
		fallthrough
	case "AVAILABLE":
		fallthrough
	case "DELETING":
		fallthrough
	case "PENDING_RETURN":
		fallthrough
	case "DELETED":
		fallthrough
	case "CREATING_SHIPPING_LABEL":
		*e = NetworkResourceStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NetworkResourceStatusEnum: %v", v)
	}
}
