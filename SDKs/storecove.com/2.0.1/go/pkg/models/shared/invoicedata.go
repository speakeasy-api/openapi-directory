// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InvoiceDataConversionStrategyEnum - How to interpret the document.
type InvoiceDataConversionStrategyEnum string

const (
	InvoiceDataConversionStrategyEnumUbl  InvoiceDataConversionStrategyEnum = "ubl"
	InvoiceDataConversionStrategyEnumCii  InvoiceDataConversionStrategyEnum = "cii"
	InvoiceDataConversionStrategyEnumIdoc InvoiceDataConversionStrategyEnum = "idoc"
)

func (e *InvoiceDataConversionStrategyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ubl":
		fallthrough
	case "cii":
		fallthrough
	case "idoc":
		*e = InvoiceDataConversionStrategyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InvoiceDataConversionStrategyEnum: %s", s)
	}
}

// InvoiceData - The invoice to send, in base64 encoded format. Provide either invoice, or invoiceData, but not both.
type InvoiceData struct {
	// How to interpret the document.
	ConversionStrategy *InvoiceDataConversionStrategyEnum `json:"conversionStrategy,omitempty"`
	// The base64 encoded version of the document.
	Document *string `json:"document,omitempty"`
}
