/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The Type of the output
 */
export enum InputConfigurationContainerTypeEnum {
  TariffInput = "TariffInput",
  DigitalInput = "DigitalInput",
}

/**
 * Configuration for the input of a meter (digital inputs)
 */
export class InputConfigurationContainer extends SpeakeasyBase {
  /**
   * The Name of the Input
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  /**
   * The number of the Input. (1 for Input 1)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Number" })
  number?: number;

  /**
   * The visualization text for an OFF action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "OffText" })
  offText?: string;

  /**
   * The visualization text for an ON action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "OnText" })
  onText?: string;

  /**
   * The Type of the output
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: InputConfigurationContainerTypeEnum;
}
