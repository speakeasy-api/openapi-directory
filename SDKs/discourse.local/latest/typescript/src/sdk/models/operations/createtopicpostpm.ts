/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CreateTopicPostPMRequestBody extends SpeakeasyBase {
  /**
   * Required for new private message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "archetype" })
  archetype?: string;

  /**
   * Optional if creating a new topic, and ignored if creating
   *
   * @remarks
   * a new post.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "category" })
  category?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  /**
   * Provide a URL from a remote system to associate a forum
   *
   * @remarks
   * topic with that URL, typically for using Discourse as a comments
   * system for an external blog.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "embed_url" })
  embedUrl?: string;

  /**
   * Provide an external_id from a remote system to associate
   *
   * @remarks
   * a forum topic with that id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "external_id" })
  externalId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "raw" })
  raw: string;

  /**
   * Required for private message, comma separated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_recipients" })
  targetRecipients?: string;

  /**
   * Deprecated. Use target_recipients instead.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_usernames" })
  targetUsernames?: string;

  /**
   * Required if creating a new topic or new private message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * Required if creating a new post.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "topic_id" })
  topicId?: number;
}

export class CreateTopicPostPm200ApplicationJSONActionsSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "can_act" })
  canAct: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;
}

/**
 * post created
 */
export class CreateTopicPostPm200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: CreateTopicPostPm200ApplicationJSONActionsSummary,
  })
  @Expose({ name: "actions_summary" })
  @Type(() => CreateTopicPostPm200ApplicationJSONActionsSummary)
  actionsSummary: CreateTopicPostPm200ApplicationJSONActionsSummary[];

  @SpeakeasyMetadata()
  @Expose({ name: "admin" })
  admin: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "avatar_template" })
  avatarTemplate: string;

  @SpeakeasyMetadata()
  @Expose({ name: "bookmarked" })
  bookmarked: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_delete" })
  canDelete: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_edit" })
  canEdit: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_recover" })
  canRecover: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_view_edit_history" })
  canViewEditHistory: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "can_wiki" })
  canWiki: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "cooked" })
  cooked: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "deleted_at" })
  deletedAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "display_username" })
  displayUsername: string;

  @SpeakeasyMetadata()
  @Expose({ name: "draft_sequence" })
  draftSequence: number;

  @SpeakeasyMetadata()
  @Expose({ name: "edit_reason" })
  editReason: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_bg_color" })
  flairBgColor: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_color" })
  flairColor: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_name" })
  flairName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "flair_url" })
  flairUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hidden" })
  hidden: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "incoming_link_count" })
  incomingLinkCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "mentioned_users" })
  mentionedUsers?: any[];

  @SpeakeasyMetadata()
  @Expose({ name: "moderator" })
  moderator: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "post_number" })
  postNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "post_type" })
  postType: number;

  @SpeakeasyMetadata()
  @Expose({ name: "primary_group_name" })
  primaryGroupName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "quote_count" })
  quoteCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "raw" })
  raw?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "readers_count" })
  readersCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reads" })
  reads: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reply_count" })
  replyCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reply_to_post_number" })
  replyToPostNumber: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reviewable_id" })
  reviewableId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reviewable_score_count" })
  reviewableScoreCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "reviewable_score_pending_count" })
  reviewableScorePendingCount: number;

  @SpeakeasyMetadata()
  @Expose({ name: "score" })
  score: number;

  @SpeakeasyMetadata()
  @Expose({ name: "staff" })
  staff: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "topic_id" })
  topicId: number;

  @SpeakeasyMetadata()
  @Expose({ name: "topic_slug" })
  topicSlug: string;

  @SpeakeasyMetadata()
  @Expose({ name: "trust_level" })
  trustLevel: number;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt: string;

  @SpeakeasyMetadata()
  @Expose({ name: "user_deleted" })
  userDeleted: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId: number;

  @SpeakeasyMetadata()
  @Expose({ name: "user_title" })
  userTitle: string;

  @SpeakeasyMetadata()
  @Expose({ name: "username" })
  username: string;

  @SpeakeasyMetadata()
  @Expose({ name: "version" })
  version: number;

  @SpeakeasyMetadata()
  @Expose({ name: "wiki" })
  wiki: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "yours" })
  yours: boolean;
}

export class CreateTopicPostPMResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * post created
   */
  @SpeakeasyMetadata()
  createTopicPostPM200ApplicationJSONObject?: CreateTopicPostPm200ApplicationJSON;
}
