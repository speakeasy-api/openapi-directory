/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { AccountCompanyLevel } from "./accountcompanylevel";
import { AccountMerchantLevel } from "./accountmerchantlevel";
import { AccountStoreLevel } from "./accountstorelevel";
import { AllowedOriginsCompanyLevel } from "./allowedoriginscompanylevel";
import { AllowedOriginsMerchantLevel } from "./allowedoriginsmerchantlevel";
import { APICredentialsCompanyLevel } from "./apicredentialscompanylevel";
import { APICredentialsMerchantLevel } from "./apicredentialsmerchantlevel";
import { APIKeyCompanyLevel } from "./apikeycompanylevel";
import { APIKeyMerchantLevel } from "./apikeymerchantlevel";
import { ClientKeyCompanyLevel } from "./clientkeycompanylevel";
import { ClientKeyMerchantLevel } from "./clientkeymerchantlevel";
import { MyAPICredential } from "./myapicredential";
import { PaymentMethodsMerchantLevel } from "./paymentmethodsmerchantlevel";
import { PayoutSettingsMerchantLevel } from "./payoutsettingsmerchantlevel";
import { TerminalActionsCompanyLevel } from "./terminalactionscompanylevel";
import { TerminalActionsTerminalLevel } from "./terminalactionsterminallevel";
import { TerminalOrdersCompanyLevel } from "./terminalorderscompanylevel";
import { TerminalOrdersMerchantLevel } from "./terminalordersmerchantlevel";
import { TerminalSettingsCompanyLevel } from "./terminalsettingscompanylevel";
import { TerminalSettingsMerchantLevel } from "./terminalsettingsmerchantlevel";
import { TerminalSettingsStoreLevel } from "./terminalsettingsstorelevel";
import { TerminalSettingsTerminalLevel } from "./terminalsettingsterminallevel";
import { TerminalsTerminalLevel } from "./terminalsterminallevel";
import { UsersCompanyLevel } from "./userscompanylevel";
import { UsersMerchantLevel } from "./usersmerchantlevel";
import { WebhooksCompanyLevel } from "./webhookscompanylevel";
import { WebhooksMerchantLevel } from "./webhooksmerchantlevel";
import axios, { AxiosInstance } from "axios";

/**
 * Contains the list of servers available to the SDK
 */
export const ServerList = ["https://management-test.adyen.com/v1"] as const;

/**
 * The available configuration options for the SDK
 */
export type SDKProps = {
  /**
   * Allows overriding the default axios client used by the SDK
   */
  defaultClient?: AxiosInstance;
  /**
   * Allows overriding the default server URL used by the SDK
   */
  serverURL?: string;
};

/**
 * Configure and manage your Adyen company and merchant accounts, stores, and payment terminals.
 *
 * @remarks
 * ## Authentication
 * Each request to the Management API must be signed with an API key. [Generate your API key](https://docs.adyen.com/development-resources/api-credentials#generate-api-key) in the Customer Area and then set this key to the `X-API-Key` header value.
 *
 * To access the live endpoints, you need to generate a new API key in your live Customer Area.
 * ## Versioning
 *
 * Management API handles versioning as part of the endpoint URL. For example, to send a request to version 1 of the `/companies/{companyId}/webhooks` endpoint, use:
 *
 * ```text
 * https://management-test.adyen.com/v1/companies/{companyId}/webhooks
 * ```
 *
 * ## Going live
 *
 * To access the live endpoints, you need an API key from your live Customer Area. Use this API key to make requests to:
 *
 * ```text
 * https://management-live.adyen.com/v1
 * ```
 */
export class SDK {
  public apiCredentialsCompanyLevel: APICredentialsCompanyLevel;
  public apiCredentialsMerchantLevel: APICredentialsMerchantLevel;
  public apiKeyCompanyLevel: APIKeyCompanyLevel;
  public apiKeyMerchantLevel: APIKeyMerchantLevel;
  public accountCompanyLevel: AccountCompanyLevel;
  public accountMerchantLevel: AccountMerchantLevel;
  public accountStoreLevel: AccountStoreLevel;
  public allowedOriginsCompanyLevel: AllowedOriginsCompanyLevel;
  public allowedOriginsMerchantLevel: AllowedOriginsMerchantLevel;
  public clientKeyCompanyLevel: ClientKeyCompanyLevel;
  public clientKeyMerchantLevel: ClientKeyMerchantLevel;
  public myAPICredential: MyAPICredential;
  public paymentMethodsMerchantLevel: PaymentMethodsMerchantLevel;
  public payoutSettingsMerchantLevel: PayoutSettingsMerchantLevel;
  public terminalActionsCompanyLevel: TerminalActionsCompanyLevel;
  public terminalActionsTerminalLevel: TerminalActionsTerminalLevel;
  public terminalOrdersCompanyLevel: TerminalOrdersCompanyLevel;
  public terminalOrdersMerchantLevel: TerminalOrdersMerchantLevel;
  public terminalSettingsCompanyLevel: TerminalSettingsCompanyLevel;
  public terminalSettingsMerchantLevel: TerminalSettingsMerchantLevel;
  public terminalSettingsStoreLevel: TerminalSettingsStoreLevel;
  public terminalSettingsTerminalLevel: TerminalSettingsTerminalLevel;
  public terminalsTerminalLevel: TerminalsTerminalLevel;
  public usersCompanyLevel: UsersCompanyLevel;
  public usersMerchantLevel: UsersMerchantLevel;
  public webhooksCompanyLevel: WebhooksCompanyLevel;
  public webhooksMerchantLevel: WebhooksMerchantLevel;

  public _defaultClient: AxiosInstance;
  public _securityClient: AxiosInstance;
  public _serverURL: string;
  private _language = "typescript";
  private _sdkVersion = "0.0.1";
  private _genVersion = "internal";
  private _globals: any;

  constructor(props?: SDKProps) {
    this._serverURL = props?.serverURL ?? ServerList[0];

    this._defaultClient =
      props?.defaultClient ?? axios.create({ baseURL: this._serverURL });
    this._securityClient = this._defaultClient;

    this.apiCredentialsCompanyLevel = new APICredentialsCompanyLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.apiCredentialsMerchantLevel = new APICredentialsMerchantLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.apiKeyCompanyLevel = new APIKeyCompanyLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.apiKeyMerchantLevel = new APIKeyMerchantLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.accountCompanyLevel = new AccountCompanyLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.accountMerchantLevel = new AccountMerchantLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.accountStoreLevel = new AccountStoreLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.allowedOriginsCompanyLevel = new AllowedOriginsCompanyLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.allowedOriginsMerchantLevel = new AllowedOriginsMerchantLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.clientKeyCompanyLevel = new ClientKeyCompanyLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.clientKeyMerchantLevel = new ClientKeyMerchantLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.myAPICredential = new MyAPICredential(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.paymentMethodsMerchantLevel = new PaymentMethodsMerchantLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.payoutSettingsMerchantLevel = new PayoutSettingsMerchantLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.terminalActionsCompanyLevel = new TerminalActionsCompanyLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.terminalActionsTerminalLevel = new TerminalActionsTerminalLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.terminalOrdersCompanyLevel = new TerminalOrdersCompanyLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.terminalOrdersMerchantLevel = new TerminalOrdersMerchantLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.terminalSettingsCompanyLevel = new TerminalSettingsCompanyLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.terminalSettingsMerchantLevel = new TerminalSettingsMerchantLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.terminalSettingsStoreLevel = new TerminalSettingsStoreLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.terminalSettingsTerminalLevel = new TerminalSettingsTerminalLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.terminalsTerminalLevel = new TerminalsTerminalLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.usersCompanyLevel = new UsersCompanyLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.usersMerchantLevel = new UsersMerchantLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.webhooksCompanyLevel = new WebhooksCompanyLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.webhooksMerchantLevel = new WebhooksMerchantLevel(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );
  }
}
