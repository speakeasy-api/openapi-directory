// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AdminEnableUserXAmzTargetEnum
type AdminEnableUserXAmzTargetEnum string

const (
	AdminEnableUserXAmzTargetEnumAwsCognitoIdentityProviderServiceAdminEnableUser AdminEnableUserXAmzTargetEnum = "AWSCognitoIdentityProviderService.AdminEnableUser"
)

func (e *AdminEnableUserXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSCognitoIdentityProviderService.AdminEnableUser":
		*e = AdminEnableUserXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AdminEnableUserXAmzTargetEnum: %s", s)
	}
}

type AdminEnableUserRequest struct {
	AdminEnableUserRequest shared.AdminEnableUserRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             AdminEnableUserXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AdminEnableUserResponse struct {
	// Success
	AdminEnableUserResponse map[string]interface{}
	ContentType             string
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// NotAuthorizedException
	NotAuthorizedException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
	// UserNotFoundException
	UserNotFoundException interface{}
}
