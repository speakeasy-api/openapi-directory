<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SearchErrorResponse - Error
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SearchErrorResponse
{
    /**
     * If `status` is not `SUCCESS`, this message explains the issue encountered.
     * 
     * @var ?string $errorText
     */
	#[\JMS\Serializer\Annotation\SerializedName('error_text')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $errorText = null;
    
    /**
     * The `request_id` that you received in the response to the Verify request and used in the Verify search request. May be empty in an error situation.
     * 
     * @var ?string $requestId
     */
	#[\JMS\Serializer\Annotation\SerializedName('request_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $requestId = null;
    
    /**
     * Code | Description
     * 
     * -- | --
     * IN PROGRESS | The search is still in progress.
     * SUCCESS | Your user entered a correct verification code.
     * FAILED | Your user entered an incorrect code more than three times.
     * EXPIRED | Your user did not enter a code before the `pin_expiry` time elapsed.
     * CANCELLED | The verification process was cancelled by a Verify control request.
     * 101 | You supplied an invalid `request_id`, or the data is not available. Note that for recently-completed requests, there can be a delay of up to 1 minute before the results are available in search.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\SearchErrorResponseStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\SearchErrorResponseStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SearchErrorResponseStatusEnum $status = null;
    
	public function __construct()
	{
		$this->errorText = null;
		$this->requestId = null;
		$this->status = null;
	}
}
