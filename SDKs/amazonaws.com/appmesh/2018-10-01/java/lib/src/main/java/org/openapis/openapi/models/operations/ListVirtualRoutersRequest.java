/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListVirtualRoutersRequest {
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Algorithm")
    public String xAmzAlgorithm;
    public ListVirtualRoutersRequest withXAmzAlgorithm(String xAmzAlgorithm) {
        this.xAmzAlgorithm = xAmzAlgorithm;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Content-Sha256")
    public String xAmzContentSha256;
    public ListVirtualRoutersRequest withXAmzContentSha256(String xAmzContentSha256) {
        this.xAmzContentSha256 = xAmzContentSha256;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Credential")
    public String xAmzCredential;
    public ListVirtualRoutersRequest withXAmzCredential(String xAmzCredential) {
        this.xAmzCredential = xAmzCredential;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Date")
    public String xAmzDate;
    public ListVirtualRoutersRequest withXAmzDate(String xAmzDate) {
        this.xAmzDate = xAmzDate;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Security-Token")
    public String xAmzSecurityToken;
    public ListVirtualRoutersRequest withXAmzSecurityToken(String xAmzSecurityToken) {
        this.xAmzSecurityToken = xAmzSecurityToken;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-Signature")
    public String xAmzSignature;
    public ListVirtualRoutersRequest withXAmzSignature(String xAmzSignature) {
        this.xAmzSignature = xAmzSignature;
        return this;
    }
    
    @SpeakeasyMetadata("header:style=simple,explode=false,name=X-Amz-SignedHeaders")
    public String xAmzSignedHeaders;
    public ListVirtualRoutersRequest withXAmzSignedHeaders(String xAmzSignedHeaders) {
        this.xAmzSignedHeaders = xAmzSignedHeaders;
        return this;
    }
    
    /**
     * The maximum number of mesh results returned by &lt;code&gt;ListVirtualRouters&lt;/code&gt; in
     *          paginated output. When this parameter is used, &lt;code&gt;ListVirtualRouters&lt;/code&gt; only returns
     *          &lt;code&gt;limit&lt;/code&gt; results in a single page along with a &lt;code&gt;nextToken&lt;/code&gt;
     *          response element. The remaining results of the initial request can be seen by sending
     *          another &lt;code&gt;ListVirtualRouters&lt;/code&gt; request with the returned &lt;code&gt;nextToken&lt;/code&gt;
     *          value. This value can be between 1 and 100. If this
     *          parameter is not used, then &lt;code&gt;ListVirtualRouters&lt;/code&gt; returns up to
     *          100 results and a &lt;code&gt;nextToken&lt;/code&gt; value if applicable.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;
    public ListVirtualRoutersRequest withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * The name of the service mesh in which to list virtual routers.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=meshName")
    public String meshName;
    public ListVirtualRoutersRequest withMeshName(String meshName) {
        this.meshName = meshName;
        return this;
    }
    
    /**
     * The &lt;code&gt;nextToken&lt;/code&gt; value returned from a previous paginated
     *          &lt;code&gt;ListVirtualRouters&lt;/code&gt; request where &lt;code&gt;limit&lt;/code&gt; was used and the
     *          results exceeded the value of that parameter. Pagination continues from the end of the
     *          previous results that returned the &lt;code&gt;nextToken&lt;/code&gt; value.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=nextToken")
    public String nextToken;
    public ListVirtualRoutersRequest withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
}
