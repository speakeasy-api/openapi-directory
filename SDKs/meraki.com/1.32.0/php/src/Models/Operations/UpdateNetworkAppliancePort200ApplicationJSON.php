<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


/**
 * UpdateNetworkAppliancePort200ApplicationJSON - Successful operation
 * 
 * @package OpenAPI\OpenAPI\Models\Operations
 * @access public
 */
class UpdateNetworkAppliancePort200ApplicationJSON
{
    /**
     * The name of the policy. Only applicable to Access ports.
     * 
     * @var ?string $accessPolicy
     */
	#[\JMS\Serializer\Annotation\SerializedName('accessPolicy')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accessPolicy = null;
    
    /**
     * Comma-delimited list of the VLAN ID's allowed on the port, or 'all' to permit all VLAN's on the port.
     * 
     * @var ?string $allowedVlans
     */
	#[\JMS\Serializer\Annotation\SerializedName('allowedVlans')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $allowedVlans = null;
    
    /**
     * Whether the trunk port can drop all untagged traffic.
     * 
     * @var ?bool $dropUntaggedTraffic
     */
	#[\JMS\Serializer\Annotation\SerializedName('dropUntaggedTraffic')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $dropUntaggedTraffic = null;
    
    /**
     * The status of the port
     * 
     * @var ?bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enabled = null;
    
    /**
     * Number of the port
     * 
     * @var ?int $number
     */
	#[\JMS\Serializer\Annotation\SerializedName('number')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $number = null;
    
    /**
     * The type of the port: 'access' or 'trunk'.
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
    /**
     * Native VLAN when the port is in Trunk mode. Access VLAN when the port is in Access mode.
     * 
     * @var ?int $vlan
     */
	#[\JMS\Serializer\Annotation\SerializedName('vlan')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $vlan = null;
    
	public function __construct()
	{
		$this->accessPolicy = null;
		$this->allowedVlans = null;
		$this->dropUntaggedTraffic = null;
		$this->enabled = null;
		$this->number = null;
		$this->type = null;
		$this->vlan = null;
	}
}
