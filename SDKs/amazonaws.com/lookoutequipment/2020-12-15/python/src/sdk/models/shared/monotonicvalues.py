"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import monotonicity_enum as shared_monotonicity_enum
from ..shared import statisticalissuestatus_enum as shared_statisticalissuestatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MonotonicValues:
    r"""Entity that comprises information on monotonic values in the data."""
    
    status: shared_statisticalissuestatus_enum.StatisticalIssueStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Status') }})  
    monotonicity: Optional[shared_monotonicity_enum.MonotonicityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Monotonicity'), 'exclude': lambda f: f is None }})  
    