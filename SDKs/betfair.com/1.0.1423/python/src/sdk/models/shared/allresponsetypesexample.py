"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import connectionmessage as shared_connectionmessage
from ..shared import marketchangemessage as shared_marketchangemessage
from ..shared import orderchangemessage as shared_orderchangemessage
from ..shared import statusmessage as shared_statusmessage
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AllResponseTypesExampleOpTypesEnum(str, Enum):
    CONNECTION = 'connection'
    STATUS = 'status'
    MCM = 'mcm'
    OCM = 'ocm'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AllResponseTypesExample:
    r"""Responses are received from socket"""
    
    connection: Optional[shared_connectionmessage.ConnectionMessage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connection'), 'exclude': lambda f: f is None }})  
    market_change_message: Optional[shared_marketchangemessage.MarketChangeMessage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('marketChangeMessage'), 'exclude': lambda f: f is None }})  
    op_types: Optional[AllResponseTypesExampleOpTypesEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('opTypes'), 'exclude': lambda f: f is None }})  
    order_change_message: Optional[shared_orderchangemessage.OrderChangeMessage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderChangeMessage'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_statusmessage.StatusMessage] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    