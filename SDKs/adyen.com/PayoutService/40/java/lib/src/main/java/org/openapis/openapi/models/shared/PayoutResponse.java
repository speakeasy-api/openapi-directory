/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PayoutResponse - OK - the request has succeeded.
 */
public class PayoutResponse {
    /**
     * Contains additional information about the payment. Some data fields are included only if you select them first: Go to **Customer Area** &gt; **Developers** &gt; **Additional data**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalData")
    public Object additionalData;

    public PayoutResponse withAdditionalData(Object additionalData) {
        this.additionalData = additionalData;
        return this;
    }
    
    /**
     * Authorisation code:
     * * When the payment is authorised successfully, this field holds the authorisation code for the payment.
     * * When the payment is not authorised, this field is empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authCode")
    public String authCode;

    public PayoutResponse withAuthCode(String authCode) {
        this.authCode = authCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dccAmount")
    public Amount dccAmount;

    public PayoutResponse withDccAmount(Amount dccAmount) {
        this.dccAmount = dccAmount;
        return this;
    }
    
    /**
     * Cryptographic signature used to verify `dccQuote`.
     * &gt; This value only applies if you have implemented Dynamic Currency Conversion. For more information, [contact Support](https://www.adyen.help/hc/en-us/requests/new).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dccSignature")
    public String dccSignature;

    public PayoutResponse withDccSignature(String dccSignature) {
        this.dccSignature = dccSignature;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fraudResult")
    public FraudResult fraudResult;

    public PayoutResponse withFraudResult(FraudResult fraudResult) {
        this.fraudResult = fraudResult;
        return this;
    }
    
    /**
     * The URL to direct the shopper to.
     * &gt; In case of SecurePlus, do not redirect a shopper to this URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("issuerUrl")
    public String issuerUrl;

    public PayoutResponse withIssuerUrl(String issuerUrl) {
        this.issuerUrl = issuerUrl;
        return this;
    }
    
    /**
     * The payment session.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("md")
    public String md;

    public PayoutResponse withMd(String md) {
        this.md = md;
        return this;
    }
    
    /**
     * The 3D request data for the issuer.
     * 
     * If the value is **CUPSecurePlus-CollectSMSVerificationCode**, collect an SMS code from the shopper and pass it in the `/authorise3D` request. For more information, see [3D Secure](https://docs.adyen.com/classic-integration/3d-secure).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paRequest")
    public String paRequest;

    public PayoutResponse withPaRequest(String paRequest) {
        this.paRequest = paRequest;
        return this;
    }
    
    /**
     * Adyen's 16-character reference associated with the transaction/request. This value is globally unique; quote it when communicating with us about this request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pspReference")
    public String pspReference;

    public PayoutResponse withPspReference(String pspReference) {
        this.pspReference = pspReference;
        return this;
    }
    
    /**
     * If the payment's authorisation is refused or an error occurs during authorisation, this field holds Adyen's mapped reason for the refusal or a description of the error. When a transaction fails, the authorisation response includes `resultCode` and `refusalReason` values.
     * 
     * For more information, see [Refusal reasons](https://docs.adyen.com/development-resources/refusal-reasons).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refusalReason")
    public String refusalReason;

    public PayoutResponse withRefusalReason(String refusalReason) {
        this.refusalReason = refusalReason;
        return this;
    }
    
    /**
     * The result of the payment. For more information, see [Result codes](https://docs.adyen.com/online-payments/payment-result-codes).
     * 
     * Possible values:
     * 
     * * **AuthenticationFinished** \u2013 The payment has been successfully authenticated with 3D Secure 2. Returned for 3D Secure 2 authentication-only transactions.
     * * **AuthenticationNotRequired** \u2013 The transaction does not require 3D Secure authentication. Returned for [standalone authentication-only integrations](https://docs.adyen.com/online-payments/3d-secure/other-3ds-flows/authentication-only).
     * * **Authorised** \u2013 The payment was successfully authorised. This state serves as an indicator to proceed with the delivery of goods and services. This is a final state.
     * * **Cancelled** \u2013 Indicates the payment has been cancelled (either by the shopper or the merchant) before processing was completed. This is a final state.
     * * **ChallengeShopper** \u2013 The issuer requires further shopper interaction before the payment can be authenticated. Returned for 3D Secure 2 transactions.
     * * **Error** \u2013 There was an error when the payment was being processed. The reason is given in the `refusalReason` field. This is a final state.
     * * **IdentifyShopper** \u2013 The issuer requires the shopper's device fingerprint before the payment can be authenticated. Returned for 3D Secure 2 transactions.
     * * **Pending** \u2013 Indicates that it is not possible to obtain the final status of the payment. This can happen if the systems providing final status information for the payment are unavailable, or if the shopper needs to take further action to complete the payment.
     * * **PresentToShopper** \u2013 Indicates that the response contains additional information that you need to present to a shopper, so that they can use it to complete a payment.
     * * **Received** \u2013 Indicates the payment has successfully been received by Adyen, and will be processed. This is the initial state for all payments.
     * * **RedirectShopper** \u2013 Indicates the shopper should be redirected to an external web page or app to complete the authorisation.
     * * **Refused** \u2013 Indicates the payment was refused. The reason is given in the `refusalReason` field. This is a final state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resultCode")
    public PayoutResponseResultCodeEnum resultCode;

    public PayoutResponse withResultCode(PayoutResponseResultCodeEnum resultCode) {
        this.resultCode = resultCode;
        return this;
    }
    
    public PayoutResponse(){}
}
