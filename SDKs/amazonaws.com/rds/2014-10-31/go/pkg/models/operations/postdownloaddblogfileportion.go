// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDownloadDBLogFilePortionActionEnum
type POSTDownloadDBLogFilePortionActionEnum string

const (
	POSTDownloadDBLogFilePortionActionEnumDownloadDbLogFilePortion POSTDownloadDBLogFilePortionActionEnum = "DownloadDBLogFilePortion"
)

func (e *POSTDownloadDBLogFilePortionActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DownloadDBLogFilePortion":
		*e = POSTDownloadDBLogFilePortionActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDownloadDBLogFilePortionActionEnum: %s", s)
	}
}

// POSTDownloadDBLogFilePortionVersionEnum
type POSTDownloadDBLogFilePortionVersionEnum string

const (
	POSTDownloadDBLogFilePortionVersionEnumTwoThousandAndFourteen1031 POSTDownloadDBLogFilePortionVersionEnum = "2014-10-31"
)

func (e *POSTDownloadDBLogFilePortionVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2014-10-31":
		*e = POSTDownloadDBLogFilePortionVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDownloadDBLogFilePortionVersionEnum: %s", s)
	}
}

type POSTDownloadDBLogFilePortionRequest struct {
	Action POSTDownloadDBLogFilePortionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination token
	Marker *string `queryParam:"style=form,explode=true,name=Marker"`
	// Pagination limit
	NumberOfLines     *string                                 `queryParam:"style=form,explode=true,name=NumberOfLines"`
	RequestBody       []byte                                  `request:"mediaType=text/xml"`
	Version           POSTDownloadDBLogFilePortionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDownloadDBLogFilePortionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
