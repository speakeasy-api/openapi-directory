"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import deleteimagereciperesponse as shared_deleteimagereciperesponse
from typing import Any, Optional


@dataclasses.dataclass
class DeleteImageRecipeRequest:
    
    image_recipe_arn: str = dataclasses.field(metadata={'query_param': { 'field_name': 'imageRecipeArn', 'style': 'form', 'explode': True }})
    r"""The Amazon Resource Name (ARN) of the image recipe to delete."""  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class DeleteImageRecipeResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    call_rate_limit_exceeded_exception: Optional[Any] = dataclasses.field(default=None)
    r"""CallRateLimitExceededException"""  
    client_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ClientException"""  
    delete_image_recipe_response: Optional[shared_deleteimagereciperesponse.DeleteImageRecipeResponse] = dataclasses.field(default=None)
    r"""Success"""  
    forbidden_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ForbiddenException"""  
    invalid_request_exception: Optional[Any] = dataclasses.field(default=None)
    r"""InvalidRequestException"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    resource_dependency_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ResourceDependencyException"""  
    service_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ServiceException"""  
    service_unavailable_exception: Optional[Any] = dataclasses.field(default=None)
    r"""ServiceUnavailableException"""  
    