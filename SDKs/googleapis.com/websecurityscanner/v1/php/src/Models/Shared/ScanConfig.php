<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ScanConfig - A ScanConfig resource contains the configurations to launch a scan.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ScanConfig
{
    /**
     * Scan authentication configuration.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Authentication $authentication
     */
	#[\JMS\Serializer\Annotation\SerializedName('authentication')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Authentication')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Authentication $authentication = null;
    
    /**
     * The excluded URL patterns as described in https://cloud.google.com/security-command-center/docs/how-to-use-web-security-scanner#excluding_urls
     * 
     * @var ?array<string> $blacklistPatterns
     */
	#[\JMS\Serializer\Annotation\SerializedName('blacklistPatterns')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $blacklistPatterns = null;
    
    /**
     * Required. The user provided display name of the ScanConfig.
     * 
     * @var ?string $displayName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $displayName = null;
    
    /**
     * Controls export of scan configurations and results to Security Command Center.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ScanConfigExportToSecurityCommandCenterEnum $exportToSecurityCommandCenter
     */
	#[\JMS\Serializer\Annotation\SerializedName('exportToSecurityCommandCenter')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ScanConfigExportToSecurityCommandCenterEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ScanConfigExportToSecurityCommandCenterEnum $exportToSecurityCommandCenter = null;
    
    /**
     * Whether to keep scanning even if most requests return HTTP error codes.
     * 
     * @var ?bool $ignoreHttpStatusErrors
     */
	#[\JMS\Serializer\Annotation\SerializedName('ignoreHttpStatusErrors')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $ignoreHttpStatusErrors = null;
    
    /**
     * Whether the scan config is managed by Web Security Scanner, output only.
     * 
     * @var ?bool $managedScan
     */
	#[\JMS\Serializer\Annotation\SerializedName('managedScan')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $managedScan = null;
    
    /**
     * The maximum QPS during scanning. A valid value ranges from 5 to 20 inclusively. If the field is unspecified or its value is set 0, server will default to 15. Other values outside of [5, 20] range will be rejected with INVALID_ARGUMENT error.
     * 
     * @var ?int $maxQps
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxQps')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxQps = null;
    
    /**
     * The resource name of the ScanConfig. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}'. The ScanConfig IDs are generated by the system.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * The risk level selected for the scan
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ScanConfigRiskLevelEnum $riskLevel
     */
	#[\JMS\Serializer\Annotation\SerializedName('riskLevel')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ScanConfigRiskLevelEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ScanConfigRiskLevelEnum $riskLevel = null;
    
    /**
     * Scan schedule configuration.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Schedule $schedule
     */
	#[\JMS\Serializer\Annotation\SerializedName('schedule')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Schedule')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Schedule $schedule = null;
    
    /**
     * Required. The starting URLs from which the scanner finds site pages.
     * 
     * @var ?array<string> $startingUrls
     */
	#[\JMS\Serializer\Annotation\SerializedName('startingUrls')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $startingUrls = null;
    
    /**
     * Whether the scan configuration has enabled static IP address scan feature. If enabled, the scanner will access applications from static IP addresses.
     * 
     * @var ?bool $staticIpScan
     */
	#[\JMS\Serializer\Annotation\SerializedName('staticIpScan')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $staticIpScan = null;
    
    /**
     * The user agent used during scanning.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ScanConfigUserAgentEnum $userAgent
     */
	#[\JMS\Serializer\Annotation\SerializedName('userAgent')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ScanConfigUserAgentEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ScanConfigUserAgentEnum $userAgent = null;
    
	public function __construct()
	{
		$this->authentication = null;
		$this->blacklistPatterns = null;
		$this->displayName = null;
		$this->exportToSecurityCommandCenter = null;
		$this->ignoreHttpStatusErrors = null;
		$this->managedScan = null;
		$this->maxQps = null;
		$this->name = null;
		$this->riskLevel = null;
		$this->schedule = null;
		$this->startingUrls = null;
		$this->staticIpScan = null;
		$this->userAgent = null;
	}
}
