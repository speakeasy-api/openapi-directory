// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetFeaturedVideoCollectionListSecurity struct {
	Basic              *shared.SchemeBasic `security:"scheme,type=http,subtype=basic"`
	CustomerAccessCode *string             `security:"scheme,type=oauth2,name=Authorization"`
}

// GetFeaturedVideoCollectionListEmbedEnum - What information to include in the response, such as a URL to the collection
type GetFeaturedVideoCollectionListEmbedEnum string

const (
	GetFeaturedVideoCollectionListEmbedEnumShareURL GetFeaturedVideoCollectionListEmbedEnum = "share_url"
)

func (e GetFeaturedVideoCollectionListEmbedEnum) ToPointer() *GetFeaturedVideoCollectionListEmbedEnum {
	return &e
}

func (e *GetFeaturedVideoCollectionListEmbedEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "share_url":
		*e = GetFeaturedVideoCollectionListEmbedEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetFeaturedVideoCollectionListEmbedEnum: %v", v)
	}
}

type GetFeaturedVideoCollectionListRequest struct {
	// What information to include in the response, such as a URL to the collection
	Embed *GetFeaturedVideoCollectionListEmbedEnum `queryParam:"style=form,explode=true,name=embed"`
}

type GetFeaturedVideoCollectionListResponse struct {
	ContentType string
	// OK
	FeaturedCollectionDataList *shared.FeaturedCollectionDataList
	StatusCode                 int
	RawResponse                *http.Response
}
