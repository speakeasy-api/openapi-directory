// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AdvertiseByoipCidrXAmzTargetEnum
type AdvertiseByoipCidrXAmzTargetEnum string

const (
	AdvertiseByoipCidrXAmzTargetEnumGlobalAcceleratorV20180706AdvertiseByoipCidr AdvertiseByoipCidrXAmzTargetEnum = "GlobalAccelerator_V20180706.AdvertiseByoipCidr"
)

func (e AdvertiseByoipCidrXAmzTargetEnum) ToPointer() *AdvertiseByoipCidrXAmzTargetEnum {
	return &e
}

func (e *AdvertiseByoipCidrXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GlobalAccelerator_V20180706.AdvertiseByoipCidr":
		*e = AdvertiseByoipCidrXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AdvertiseByoipCidrXAmzTargetEnum: %v", v)
	}
}

type AdvertiseByoipCidrRequest struct {
	AdvertiseByoipCidrRequest shared.AdvertiseByoipCidrRequest `request:"mediaType=application/json"`
	XAmzAlgorithm             *string                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                AdvertiseByoipCidrXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type AdvertiseByoipCidrResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// Success
	AdvertiseByoipCidrResponse *shared.AdvertiseByoipCidrResponse
	// ByoipCidrNotFoundException
	ByoipCidrNotFoundException interface{}
	ContentType                string
	// IncorrectCidrStateException
	IncorrectCidrStateException interface{}
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// InvalidArgumentException
	InvalidArgumentException interface{}
	StatusCode               int
	RawResponse              *http.Response
}
