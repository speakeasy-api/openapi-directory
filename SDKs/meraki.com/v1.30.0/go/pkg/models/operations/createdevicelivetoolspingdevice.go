// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type CreateDeviceLiveToolsPingDevicePathParams struct {
	Serial string `pathParam:"style=simple,explode=false,name=serial"`
}

type CreateDeviceLiveToolsPingDeviceRequestBody struct {
	// Count parameter to pass to ping. [1..5], default 5
	Count *int64 `json:"count,omitempty"`
}

type CreateDeviceLiveToolsPingDeviceRequest struct {
	PathParams CreateDeviceLiveToolsPingDevicePathParams
	Request    *CreateDeviceLiveToolsPingDeviceRequestBody `request:"mediaType=application/json"`
}

// CreateDeviceLiveToolsPingDevice201ApplicationJSONRequest - Ping request parameters
type CreateDeviceLiveToolsPingDevice201ApplicationJSONRequest struct {
	// Number of pings to send
	Count *int64 `json:"count,omitempty"`
	// Device serial number
	Serial *string `json:"serial,omitempty"`
	// IP address or FQDN to ping
	Target *string `json:"target,omitempty"`
}

// CreateDeviceLiveToolsPingDevice201ApplicationJSON - Successful operation
type CreateDeviceLiveToolsPingDevice201ApplicationJSON struct {
	// Id to check the status of your ping request.
	PingID *string `json:"pingId,omitempty"`
	// Ping request parameters
	Request *CreateDeviceLiveToolsPingDevice201ApplicationJSONRequest `json:"request,omitempty"`
	// Status of the ping request.
	Status *string `json:"status,omitempty"`
	// GET this url to check the status of your ping request.
	URL *string `json:"url,omitempty"`
}

type CreateDeviceLiveToolsPingDeviceResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	CreateDeviceLiveToolsPingDevice201ApplicationJSONObject *CreateDeviceLiveToolsPingDevice201ApplicationJSON
}
