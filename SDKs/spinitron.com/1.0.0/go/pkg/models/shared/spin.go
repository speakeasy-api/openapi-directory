// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"time"
)

type SpinLinks struct {
	Playlist *Link `json:"playlist,omitempty"`
	Self     *Link `json:"self,omitempty"`
}

// Spin - The new created Spin.
type Spin struct {
	Links  *SpinLinks `json:"_links,omitempty"`
	Artist *string    `json:"artist,omitempty"`
	// Station-specific custom field relating to the song's artist
	ArtistCustom *string `json:"artist-custom,omitempty"`
	// Reference number in the record label's catalog
	CatalogNumber *string `json:"catalog-number,omitempty"`
	// Is the track's metadata schema "classical" rather than "popular"?
	Classical *bool   `json:"classical,omitempty"`
	Composer  *string `json:"composer,omitempty"`
	// For classical music, conducor of the ensemble
	Conductor *string `json:"conductor,omitempty"`
	// Duration in seconds
	Duration *int64 `json:"duration,omitempty"`
	// UTC datetime ISO-8601
	End *time.Time `json:"end,omitempty"`
	// For classical music, orchestra, performing ensemble, choir, etc.
	Ensemble *string `json:"ensemble,omitempty"`
	Genre    *string `json:"genre,omitempty"`
	ID       *int64  `json:"id,omitempty"`
	// Cover art
	Image *string `json:"image,omitempty"`
	Isrc  *string `json:"isrc,omitempty"`
	Iswc  *string `json:"iswc,omitempty"`
	// Record label, i.e. publisher of the sound recording
	Label *string `json:"label,omitempty"`
	// Station-specific custom field relating to the record label
	LabelCustom *string `json:"label-custom,omitempty"`
	// Is the artist local to the station?
	Local *bool `json:"local,omitempty"`
	// Media format in which the sound recording was reased
	Medium *string `json:"medium,omitempty"`
	// Is this a recent release?
	New *bool `json:"new,omitempty"`
	// HTML-formatted DJ annotation of the spin, can include images etc.
	Note *string `json:"note,omitempty"`
	// For classical music, featured performing artists, e.g. soloists
	Performers *string `json:"performers,omitempty"`
	PlaylistID *int64  `json:"playlist_id,omitempty"`
	Release    *string `json:"release,omitempty"`
	// Station-specific custom field relating to the release
	ReleaseCustom *string `json:"release-custom,omitempty"`
	// Year of initial release
	Released *int64 `json:"released,omitempty"`
	// Was the spin requested by a listener?
	Request *bool `json:"request,omitempty"`
	// Title of the song or track
	Song *string `json:"song,omitempty"`
	// UTC datetime ISO-8601
	Start *time.Time `json:"start,omitempty"`
	// Station's time zone
	Timezone *string `json:"timezone,omitempty"`
	// Universal Product Code of the release
	Upc *string `json:"upc,omitempty"`
	// Is it a "Various Artists" release?
	Va *bool `json:"va,omitempty"`
	// For classical music, the main compositional work the track (see `song` field) belongs to
	Work *string `json:"work,omitempty"`
}
