"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import principaltype_enum as shared_principaltype_enum
from ..shared import resourceuri as shared_resourceuri
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UserDefinedFunctionInput:
    r"""A structure used to create or update a user-defined function."""
    
    class_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ClassName'), 'exclude': lambda f: f is None }})  
    function_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FunctionName'), 'exclude': lambda f: f is None }})  
    owner_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OwnerName'), 'exclude': lambda f: f is None }})  
    owner_type: Optional[shared_principaltype_enum.PrincipalTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OwnerType'), 'exclude': lambda f: f is None }})  
    resource_uris: Optional[list[shared_resourceuri.ResourceURI]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceUris'), 'exclude': lambda f: f is None }})  
    