// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ExecBodyOsdbOutputTypeEnum - An OSDB-specific parameter controlling the action output type. If omitted, the native action output is returned.
type ExecBodyOsdbOutputTypeEnum string

const (
	ExecBodyOsdbOutputTypeEnumURLOnly     ExecBodyOsdbOutputTypeEnum = "url_only"
	ExecBodyOsdbOutputTypeEnumGenerateRdf ExecBodyOsdbOutputTypeEnum = "generate_rdf"
	ExecBodyOsdbOutputTypeEnumDisplayRdf  ExecBodyOsdbOutputTypeEnum = "display_rdf"
)

func (e ExecBodyOsdbOutputTypeEnum) ToPointer() *ExecBodyOsdbOutputTypeEnum {
	return &e
}

func (e *ExecBodyOsdbOutputTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "url_only":
		fallthrough
	case "generate_rdf":
		fallthrough
	case "display_rdf":
		*e = ExecBodyOsdbOutputTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ExecBodyOsdbOutputTypeEnum: %v", v)
	}
}

// ExecBody - Any parameters required by the action are supplied as a JSON object in the request body. The properties of this object depend on the service action being invoked.
type ExecBody struct {
	// An example action specific property. There may be 0, 1 or more action specific properties, each holding an action specific parameter value.
	ActionSpecificProperty1 *string `json:"action_specific_property1,omitempty"`
	// An example action specific property. There may be 0, 1 or more action specific properties, each holding an action specific parameter value.
	ActionSpecificProperty2 *string `json:"action_specific_property2,omitempty"`
	// The media type of the data associated with osdb:body_data_raw or osdb:body_data_src_url. In the case of osdb:body_data_raw, this is the media type before base64 encoding.
	OsdbBodyDataEncoding *string `json:"osdb:body_data_encoding,omitempty"`
	// Input data for the action (e.g. CSV data). The data must be base64 encoded by the client. Alternatively, clients can use osdb:body_data_src_url to supply the input data via a web-accessible document.
	OsdbBodyDataRaw *string `json:"osdb:body_data_raw,omitempty"`
	// URL of a resource containing input data for the action (e.g. CSV data). Clients can instead use osdb:body_data_raw to supply the input data directly.
	OsdbBodyDataSrcURL *string `json:"osdb:body_data_src_url,omitempty"`
	// An OSDB-specific parameter controlling the action output type. If omitted, the native action output is returned.
	OsdbOutputType *ExecBodyOsdbOutputTypeEnum `json:"osdb:output_type,omitempty"`
	// Preferred response MIME type. This must be an output MIME type supported natively by the action or, if 'osdb:output_type' is set to 'generate_rdf', a Virtuoso Sponger output format. i.e. 'application/ld+json', 'text/turtle' or 'application/rdf+xml'.
	OsdbResponseFormat *string `json:"osdb:response_format,omitempty"`
}
