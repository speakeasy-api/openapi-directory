// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"time"
)

// PostDistanceOutputFormatCriteriaEnum - Routing criteria to optimize (e.g., shortest, fastest). Default is shortest.
type PostDistanceOutputFormatCriteriaEnum string

const (
	PostDistanceOutputFormatCriteriaEnumShortest PostDistanceOutputFormatCriteriaEnum = "shortest"
	PostDistanceOutputFormatCriteriaEnumFastest  PostDistanceOutputFormatCriteriaEnum = "fastest"
)

func (e PostDistanceOutputFormatCriteriaEnum) ToPointer() *PostDistanceOutputFormatCriteriaEnum {
	return &e
}

func (e *PostDistanceOutputFormatCriteriaEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "shortest":
		fallthrough
	case "fastest":
		*e = PostDistanceOutputFormatCriteriaEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostDistanceOutputFormatCriteriaEnum: %v", v)
	}
}

// PostDistanceOutputFormatDistanceUnitEnum - distance unit of measure (e.g., km, mi). Default is km.
type PostDistanceOutputFormatDistanceUnitEnum string

const (
	PostDistanceOutputFormatDistanceUnitEnumKm PostDistanceOutputFormatDistanceUnitEnum = "km"
	PostDistanceOutputFormatDistanceUnitEnumMi PostDistanceOutputFormatDistanceUnitEnum = "mi"
)

func (e PostDistanceOutputFormatDistanceUnitEnum) ToPointer() *PostDistanceOutputFormatDistanceUnitEnum {
	return &e
}

func (e *PostDistanceOutputFormatDistanceUnitEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "km":
		fallthrough
	case "mi":
		*e = PostDistanceOutputFormatDistanceUnitEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostDistanceOutputFormatDistanceUnitEnum: %v", v)
	}
}

// PostDistanceOutputFormatOutputFormatEnum - Format of representation
type PostDistanceOutputFormatOutputFormatEnum string

const (
	PostDistanceOutputFormatOutputFormatEnumJSON PostDistanceOutputFormatOutputFormatEnum = "json"
	PostDistanceOutputFormatOutputFormatEnumKml  PostDistanceOutputFormatOutputFormatEnum = "kml"
	PostDistanceOutputFormatOutputFormatEnumHTML PostDistanceOutputFormatOutputFormatEnum = "html"
)

func (e PostDistanceOutputFormatOutputFormatEnum) ToPointer() *PostDistanceOutputFormatOutputFormatEnum {
	return &e
}

func (e *PostDistanceOutputFormatOutputFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "kml":
		fallthrough
	case "html":
		*e = PostDistanceOutputFormatOutputFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostDistanceOutputFormatOutputFormatEnum: %v", v)
	}
}

// PostDistanceOutputFormatOutputSrsEnum - The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-router/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
type PostDistanceOutputFormatOutputSrsEnum int64

const (
	PostDistanceOutputFormatOutputSrsEnumFourThousandThreeHundredAndTwentySix  PostDistanceOutputFormatOutputSrsEnum = 4326
	PostDistanceOutputFormatOutputSrsEnumFourThousandTwoHundredAndSixtyNine    PostDistanceOutputFormatOutputSrsEnum = 4269
	PostDistanceOutputFormatOutputSrsEnumThreeThousandAndFive                  PostDistanceOutputFormatOutputSrsEnum = 3005
	PostDistanceOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndSeven  PostDistanceOutputFormatOutputSrsEnum = 26907
	PostDistanceOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndEight  PostDistanceOutputFormatOutputSrsEnum = 26908
	PostDistanceOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndNine   PostDistanceOutputFormatOutputSrsEnum = 26909
	PostDistanceOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndTen    PostDistanceOutputFormatOutputSrsEnum = 26910
	PostDistanceOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndEleven PostDistanceOutputFormatOutputSrsEnum = 26911
)

func (e PostDistanceOutputFormatOutputSrsEnum) ToPointer() *PostDistanceOutputFormatOutputSrsEnum {
	return &e
}

func (e *PostDistanceOutputFormatOutputSrsEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 4326:
		fallthrough
	case 4269:
		fallthrough
	case 3005:
		fallthrough
	case 26907:
		fallthrough
	case 26908:
		fallthrough
	case 26909:
		fallthrough
	case 26910:
		fallthrough
	case 26911:
		*e = PostDistanceOutputFormatOutputSrsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PostDistanceOutputFormatOutputSrsEnum: %v", v)
	}
}

type PostDistanceOutputFormatRequest struct {
	// If true, route starts and ends on same side of road as start and end points.Default is false.
	CorrectSide *bool `queryParam:"style=form,explode=true,name=correctSide"`
	// Routing criteria to optimize (e.g., shortest, fastest). Default is shortest.
	Criteria *PostDistanceOutputFormatCriteriaEnum `queryParam:"style=form,explode=true,name=criteria"`
	// departure date and time in internet timestamp notation as defined in RFC 3339, section 5.6 (e.g., 2019-02-28T11:36:00-08:00);<br> Ignored if time-dependency modules are disabled
	Departure *time.Time `queryParam:"style=form,explode=true,name=departure"`
	// A comma-separated list of time-related modules to disable (e.g., sc,tf,ev,td).<br><br>Module names include:<br> sc – ferry schedules; disabled by default; disabled by default and only suitable for demos<br>tf – historic traffic congestion; disabled by default and only suitable for demos<br>ev – road events; disabled by default and only suitable for demos<br>td – time-dependency; disabling this disables sc, tf, and ev modules<br>tr – turn restrictions; if td is disabled, time-dependent turn restrictions are ignored<br>tc - turn costs (e.g., left turns take longer than right turns)
	Disable *string `queryParam:"style=form,explode=true,name=disable"`
	// distance unit of measure (e.g., km, mi). Default is km.
	DistanceUnit *PostDistanceOutputFormatDistanceUnitEnum `queryParam:"style=form,explode=true,name=distanceUnit"`
	// Format of representation
	OutputFormat PostDistanceOutputFormatOutputFormatEnum `pathParam:"style=simple,explode=false,name=outputFormat"`
	// The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-router/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
	OutputSRS *PostDistanceOutputFormatOutputSrsEnum `queryParam:"style=form,explode=true,name=outputSRS"`
	// A list of any number of route points in start to end order. See <a href=https://github.com/bcgov/ols-router/blob/gh-pages/glossary.md#points target='_blank'>points</a>
	Points string `queryParam:"style=form,explode=true,name=points"`
	// If true, route ends at start point. Default is false.
	RoundTrip *bool `queryParam:"style=form,explode=true,name=roundTrip"`
	// Route description (e.g., Shortest route from 1002 Johnson St, Victoria to 1105 Royal Ave,New Westminster)
	RouteDescription *string `queryParam:"style=form,explode=true,name=routeDescription"`
}

type PostDistanceOutputFormatResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
