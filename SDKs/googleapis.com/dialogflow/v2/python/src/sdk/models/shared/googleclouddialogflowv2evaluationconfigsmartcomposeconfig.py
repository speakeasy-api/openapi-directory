"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudDialogflowV2EvaluationConfigSmartComposeConfig:
    r"""Smart compose specific configuration for evaluation job."""
    
    allowlist_document: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowlistDocument'), 'exclude': lambda f: f is None }})
    r"""The allowlist document resource name. Format: `projects//knowledgeBases//documents/`. Only used for smart compose model."""  
    max_result_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxResultCount'), 'exclude': lambda f: f is None }})
    r"""Required. The model to be evaluated can return multiple results with confidence score on each query. These results will be sorted by the descending order of the scores and we only keep the first max_result_count results as the final results to evaluate."""  
    