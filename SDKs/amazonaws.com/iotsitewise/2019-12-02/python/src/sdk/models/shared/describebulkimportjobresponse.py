"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import errorreportlocation as shared_errorreportlocation
from ..shared import file as shared_file
from ..shared import jobconfiguration as shared_jobconfiguration
from ..shared import jobstatus_enum as shared_jobstatus_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DescribeBulkImportJobResponse:
    r"""Success"""
    
    error_report_location: shared_errorreportlocation.ErrorReportLocation = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('errorReportLocation') }})  
    files: list[shared_file.File] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('files') }})  
    job_configuration: shared_jobconfiguration.JobConfiguration = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobConfiguration') }})  
    job_creation_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobCreationDate'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    job_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobId') }})  
    job_last_update_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobLastUpdateDate'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    job_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobName') }})  
    job_role_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobRoleArn') }})  
    job_status: shared_jobstatus_enum.JobStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('jobStatus') }})  
    