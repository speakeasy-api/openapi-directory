/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Component - The SAP component of your application.
 */
public class Component {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ApplicationId")
    public String applicationId;
    public Component withApplicationId(String applicationId) {
        this.applicationId = applicationId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ComponentId")
    public String componentId;
    public Component withComponentId(String componentId) {
        this.componentId = componentId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ComponentType")
    public ComponentTypeEnum componentType;
    public Component withComponentType(ComponentTypeEnum componentType) {
        this.componentType = componentType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Databases")
    public String[] databases;
    public Component withDatabases(String[] databases) {
        this.databases = databases;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Hosts")
    public Host[] hosts;
    public Component withHosts(Host[] hosts) {
        this.hosts = hosts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastUpdated")
    public OffsetDateTime lastUpdated;
    public Component withLastUpdated(OffsetDateTime lastUpdated) {
        this.lastUpdated = lastUpdated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("PrimaryHost")
    public String primaryHost;
    public Component withPrimaryHost(String primaryHost) {
        this.primaryHost = primaryHost;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public ComponentStatusEnum status;
    public Component withStatus(ComponentStatusEnum status) {
        this.status = status;
        return this;
    }
    
}
