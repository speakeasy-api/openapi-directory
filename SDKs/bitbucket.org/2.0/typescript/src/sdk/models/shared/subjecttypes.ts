/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * A link to a resource related to this object.
 */
export class SubjectTypesRepositoryLink extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class SubjectTypesRepository extends SpeakeasyBase {
  /**
   * A link to a resource related to this object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "events" })
  @Type(() => SubjectTypesRepositoryLink)
  events?: SubjectTypesRepositoryLink;
}

/**
 * A link to a resource related to this object.
 */
export class SubjectTypesWorkspaceLink extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "href" })
  href?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class SubjectTypesWorkspace extends SpeakeasyBase {
  /**
   * A link to a resource related to this object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "events" })
  @Type(() => SubjectTypesWorkspaceLink)
  events?: SubjectTypesWorkspaceLink;
}

/**
 * The mapping of resource/subject types pointing to their individual event types.
 */
export class SubjectTypes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "repository" })
  @Type(() => SubjectTypesRepository)
  repository?: SubjectTypesRepository;

  @SpeakeasyMetadata()
  @Expose({ name: "workspace" })
  @Type(() => SubjectTypesWorkspace)
  workspace?: SubjectTypesWorkspace;
}
