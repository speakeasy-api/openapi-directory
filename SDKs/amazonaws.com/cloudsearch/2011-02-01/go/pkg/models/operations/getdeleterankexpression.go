// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteRankExpressionActionEnum
type GETDeleteRankExpressionActionEnum string

const (
	GETDeleteRankExpressionActionEnumDeleteRankExpression GETDeleteRankExpressionActionEnum = "DeleteRankExpression"
)

func (e GETDeleteRankExpressionActionEnum) ToPointer() *GETDeleteRankExpressionActionEnum {
	return &e
}

func (e *GETDeleteRankExpressionActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteRankExpression":
		*e = GETDeleteRankExpressionActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteRankExpressionActionEnum: %v", v)
	}
}

// GETDeleteRankExpressionVersionEnum
type GETDeleteRankExpressionVersionEnum string

const (
	GETDeleteRankExpressionVersionEnumTwoThousandAndEleven0201 GETDeleteRankExpressionVersionEnum = "2011-02-01"
)

func (e GETDeleteRankExpressionVersionEnum) ToPointer() *GETDeleteRankExpressionVersionEnum {
	return &e
}

func (e *GETDeleteRankExpressionVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2011-02-01":
		*e = GETDeleteRankExpressionVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteRankExpressionVersionEnum: %v", v)
	}
}

type GETDeleteRankExpressionRequest struct {
	Action     GETDeleteRankExpressionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	DomainName string                            `queryParam:"style=form,explode=true,name=DomainName"`
	// The name of the <code>RankExpression</code> to delete.
	RankName          string                             `queryParam:"style=form,explode=true,name=RankName"`
	Version           GETDeleteRankExpressionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteRankExpressionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
