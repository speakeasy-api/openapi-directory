/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Activity } from "./activity";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Successful response
 */
export class ActivityFeed extends SpeakeasyBase {
  /**
   * ETag of this response for caching purposes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * The ID of this collection of activities. Deprecated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The activities in this page of results.
   */
  @SpeakeasyMetadata({ elemType: Activity })
  @Expose({ name: "items" })
  @Type(() => Activity)
  items?: Activity[];

  /**
   * Identifies this resource as a collection of activities. Value: "plus#activityFeed".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Link to the next page of activities.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextLink" })
  nextLink?: string;

  /**
   * The continuation token, which is used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * Link to this activity resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * The title of this collection of activities, which is a truncated portion of the content.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * The time at which this collection of activities was last updated. Formatted as an RFC 3339 timestamp.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updated?: Date;
}
