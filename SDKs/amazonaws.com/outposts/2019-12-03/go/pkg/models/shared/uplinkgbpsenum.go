// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UplinkGbpsEnum string

const (
	UplinkGbpsEnumUplink1G   UplinkGbpsEnum = "UPLINK_1G"
	UplinkGbpsEnumUplink10G  UplinkGbpsEnum = "UPLINK_10G"
	UplinkGbpsEnumUplink40G  UplinkGbpsEnum = "UPLINK_40G"
	UplinkGbpsEnumUplink100G UplinkGbpsEnum = "UPLINK_100G"
)

func (e UplinkGbpsEnum) ToPointer() *UplinkGbpsEnum {
	return &e
}

func (e *UplinkGbpsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UPLINK_1G":
		fallthrough
	case "UPLINK_10G":
		fallthrough
	case "UPLINK_40G":
		fallthrough
	case "UPLINK_100G":
		*e = UplinkGbpsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UplinkGbpsEnum: %v", v)
	}
}
