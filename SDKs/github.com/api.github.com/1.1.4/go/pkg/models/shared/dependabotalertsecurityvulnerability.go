// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DependabotAlertSecurityVulnerabilityFirstPatchedVersion - Details pertaining to the package version that patches this vulnerability.
type DependabotAlertSecurityVulnerabilityFirstPatchedVersion struct {
	// The package version that patches this vulnerability.
	Identifier string `json:"identifier"`
}

// DependabotAlertSecurityVulnerabilitySeverityEnum - The severity of the vulnerability.
type DependabotAlertSecurityVulnerabilitySeverityEnum string

const (
	DependabotAlertSecurityVulnerabilitySeverityEnumLow      DependabotAlertSecurityVulnerabilitySeverityEnum = "low"
	DependabotAlertSecurityVulnerabilitySeverityEnumMedium   DependabotAlertSecurityVulnerabilitySeverityEnum = "medium"
	DependabotAlertSecurityVulnerabilitySeverityEnumHigh     DependabotAlertSecurityVulnerabilitySeverityEnum = "high"
	DependabotAlertSecurityVulnerabilitySeverityEnumCritical DependabotAlertSecurityVulnerabilitySeverityEnum = "critical"
)

func (e DependabotAlertSecurityVulnerabilitySeverityEnum) ToPointer() *DependabotAlertSecurityVulnerabilitySeverityEnum {
	return &e
}

func (e *DependabotAlertSecurityVulnerabilitySeverityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "low":
		fallthrough
	case "medium":
		fallthrough
	case "high":
		fallthrough
	case "critical":
		*e = DependabotAlertSecurityVulnerabilitySeverityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DependabotAlertSecurityVulnerabilitySeverityEnum: %v", v)
	}
}

// DependabotAlertSecurityVulnerability - Details pertaining to one vulnerable version range for the advisory.
type DependabotAlertSecurityVulnerability struct {
	// Details pertaining to the package version that patches this vulnerability.
	FirstPatchedVersion DependabotAlertSecurityVulnerabilityFirstPatchedVersion `json:"first_patched_version"`
	// Details for the vulnerable package.
	Package DependabotAlertPackage `json:"package"`
	// The severity of the vulnerability.
	Severity DependabotAlertSecurityVulnerabilitySeverityEnum `json:"severity"`
	// Conditions that identify vulnerable versions of this vulnerability's package.
	VulnerableVersionRange string `json:"vulnerable_version_range"`
}
