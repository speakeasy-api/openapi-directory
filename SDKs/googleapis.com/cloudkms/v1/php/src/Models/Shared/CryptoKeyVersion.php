<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CryptoKeyVersion - A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CryptoKeyVersion
{
    /**
     * Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CryptoKeyVersionAlgorithmEnum $algorithm
     */
	#[\JMS\Serializer\Annotation\SerializedName('algorithm')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CryptoKeyVersionAlgorithmEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CryptoKeyVersionAlgorithmEnum $algorithm = null;
    
    /**
     * Contains an HSM-generated attestation about a key operation. For more information, see [Verifying attestations] (https://cloud.google.com/kms/docs/attest-key).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\KeyOperationAttestation $attestation
     */
	#[\JMS\Serializer\Annotation\SerializedName('attestation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\KeyOperationAttestation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?KeyOperationAttestation $attestation = null;
    
    /**
     * Output only. The time at which this CryptoKeyVersion was created.
     * 
     * @var ?string $createTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('createTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createTime = null;
    
    /**
     * Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.
     * 
     * @var ?string $destroyEventTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('destroyEventTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destroyEventTime = null;
    
    /**
     * Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.
     * 
     * @var ?string $destroyTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('destroyTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destroyTime = null;
    
    /**
     * Output only. The root cause of the most recent external destruction failure. Only present if state is EXTERNAL_DESTRUCTION_FAILED.
     * 
     * @var ?string $externalDestructionFailureReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('externalDestructionFailureReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $externalDestructionFailureReason = null;
    
    /**
     * ExternalProtectionLevelOptions stores a group of additional fields for configuring a CryptoKeyVersion that are specific to the EXTERNAL protection level and EXTERNAL_VPC protection levels.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ExternalProtectionLevelOptions $externalProtectionLevelOptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('externalProtectionLevelOptions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ExternalProtectionLevelOptions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ExternalProtectionLevelOptions $externalProtectionLevelOptions = null;
    
    /**
     * Output only. The time this CryptoKeyVersion's key material was generated.
     * 
     * @var ?string $generateTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('generateTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $generateTime = null;
    
    /**
     * Output only. The root cause of the most recent generation failure. Only present if state is GENERATION_FAILED.
     * 
     * @var ?string $generationFailureReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('generationFailureReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $generationFailureReason = null;
    
    /**
     * Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.
     * 
     * @var ?string $importFailureReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('importFailureReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $importFailureReason = null;
    
    /**
     * Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.
     * 
     * @var ?string $importJob
     */
	#[\JMS\Serializer\Annotation\SerializedName('importJob')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $importJob = null;
    
    /**
     * Output only. The time at which this CryptoKeyVersion's key material was most recently imported.
     * 
     * @var ?string $importTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('importTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $importTime = null;
    
    /**
     * Output only. The resource name for this CryptoKeyVersion in the format `projects/* /locations/* /keyRings/* /cryptoKeys/* /cryptoKeyVersions/*`.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CryptoKeyVersionProtectionLevelEnum $protectionLevel
     */
	#[\JMS\Serializer\Annotation\SerializedName('protectionLevel')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CryptoKeyVersionProtectionLevelEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CryptoKeyVersionProtectionLevelEnum $protectionLevel = null;
    
    /**
     * Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.
     * 
     * @var ?bool $reimportEligible
     */
	#[\JMS\Serializer\Annotation\SerializedName('reimportEligible')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $reimportEligible = null;
    
    /**
     * The current state of the CryptoKeyVersion.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CryptoKeyVersionStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CryptoKeyVersionStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CryptoKeyVersionStateEnum $state = null;
    
	public function __construct()
	{
		$this->algorithm = null;
		$this->attestation = null;
		$this->createTime = null;
		$this->destroyEventTime = null;
		$this->destroyTime = null;
		$this->externalDestructionFailureReason = null;
		$this->externalProtectionLevelOptions = null;
		$this->generateTime = null;
		$this->generationFailureReason = null;
		$this->importFailureReason = null;
		$this->importJob = null;
		$this->importTime = null;
		$this->name = null;
		$this->protectionLevel = null;
		$this->reimportEligible = null;
		$this->state = null;
	}
}
