/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ArrayValue } from "./arrayvalue";
import { Value } from "./value";
import { Expose, Type } from "class-transformer";

/**
 * Sets the field to the given server value.
 */
export enum FieldTransformSetToServerValueEnum {
  ServerValueUnspecified = "SERVER_VALUE_UNSPECIFIED",
  RequestTime = "REQUEST_TIME",
}

/**
 * A transformation of a field of the document.
 */
export class FieldTransform extends SpeakeasyBase {
  /**
   * An array value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "appendMissingElements" })
  @Type(() => ArrayValue)
  appendMissingElements?: ArrayValue;

  /**
   * The path of the field. See Document.fields for the field path syntax reference.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fieldPath" })
  fieldPath?: string;

  /**
   * A message that can hold any of the supported value types.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "increment" })
  @Type(() => Value)
  increment?: Value;

  /**
   * A message that can hold any of the supported value types.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "maximum" })
  @Type(() => Value)
  maximum?: Value;

  /**
   * A message that can hold any of the supported value types.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "minimum" })
  @Type(() => Value)
  minimum?: Value;

  /**
   * An array value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "removeAllFromArray" })
  @Type(() => ArrayValue)
  removeAllFromArray?: ArrayValue;

  /**
   * Sets the field to the given server value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "setToServerValue" })
  setToServerValue?: FieldTransformSetToServerValueEnum;
}
