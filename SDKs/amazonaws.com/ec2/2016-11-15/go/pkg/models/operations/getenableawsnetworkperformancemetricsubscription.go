// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETEnableAwsNetworkPerformanceMetricSubscriptionActionEnum
type GETEnableAwsNetworkPerformanceMetricSubscriptionActionEnum string

const (
	GETEnableAwsNetworkPerformanceMetricSubscriptionActionEnumEnableAwsNetworkPerformanceMetricSubscription GETEnableAwsNetworkPerformanceMetricSubscriptionActionEnum = "EnableAwsNetworkPerformanceMetricSubscription"
)

func (e GETEnableAwsNetworkPerformanceMetricSubscriptionActionEnum) ToPointer() *GETEnableAwsNetworkPerformanceMetricSubscriptionActionEnum {
	return &e
}

func (e *GETEnableAwsNetworkPerformanceMetricSubscriptionActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EnableAwsNetworkPerformanceMetricSubscription":
		*e = GETEnableAwsNetworkPerformanceMetricSubscriptionActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETEnableAwsNetworkPerformanceMetricSubscriptionActionEnum: %v", v)
	}
}

// GETEnableAwsNetworkPerformanceMetricSubscriptionMetricEnum - The metric used for the enabled subscription.
type GETEnableAwsNetworkPerformanceMetricSubscriptionMetricEnum string

const (
	GETEnableAwsNetworkPerformanceMetricSubscriptionMetricEnumAggregateLatency GETEnableAwsNetworkPerformanceMetricSubscriptionMetricEnum = "aggregate-latency"
)

func (e GETEnableAwsNetworkPerformanceMetricSubscriptionMetricEnum) ToPointer() *GETEnableAwsNetworkPerformanceMetricSubscriptionMetricEnum {
	return &e
}

func (e *GETEnableAwsNetworkPerformanceMetricSubscriptionMetricEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "aggregate-latency":
		*e = GETEnableAwsNetworkPerformanceMetricSubscriptionMetricEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETEnableAwsNetworkPerformanceMetricSubscriptionMetricEnum: %v", v)
	}
}

// GETEnableAwsNetworkPerformanceMetricSubscriptionStatisticEnum - The statistic used for the enabled subscription.
type GETEnableAwsNetworkPerformanceMetricSubscriptionStatisticEnum string

const (
	GETEnableAwsNetworkPerformanceMetricSubscriptionStatisticEnumP50 GETEnableAwsNetworkPerformanceMetricSubscriptionStatisticEnum = "p50"
)

func (e GETEnableAwsNetworkPerformanceMetricSubscriptionStatisticEnum) ToPointer() *GETEnableAwsNetworkPerformanceMetricSubscriptionStatisticEnum {
	return &e
}

func (e *GETEnableAwsNetworkPerformanceMetricSubscriptionStatisticEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "p50":
		*e = GETEnableAwsNetworkPerformanceMetricSubscriptionStatisticEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETEnableAwsNetworkPerformanceMetricSubscriptionStatisticEnum: %v", v)
	}
}

// GETEnableAwsNetworkPerformanceMetricSubscriptionVersionEnum
type GETEnableAwsNetworkPerformanceMetricSubscriptionVersionEnum string

const (
	GETEnableAwsNetworkPerformanceMetricSubscriptionVersionEnumTwoThousandAndSixteen1115 GETEnableAwsNetworkPerformanceMetricSubscriptionVersionEnum = "2016-11-15"
)

func (e GETEnableAwsNetworkPerformanceMetricSubscriptionVersionEnum) ToPointer() *GETEnableAwsNetworkPerformanceMetricSubscriptionVersionEnum {
	return &e
}

func (e *GETEnableAwsNetworkPerformanceMetricSubscriptionVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETEnableAwsNetworkPerformanceMetricSubscriptionVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETEnableAwsNetworkPerformanceMetricSubscriptionVersionEnum: %v", v)
	}
}

type GETEnableAwsNetworkPerformanceMetricSubscriptionRequest struct {
	Action GETEnableAwsNetworkPerformanceMetricSubscriptionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The target Region or Availability Zone that the metric subscription is enabled for. For example, <code>eu-west-1</code>.
	Destination *string `queryParam:"style=form,explode=true,name=Destination"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The metric used for the enabled subscription.
	Metric *GETEnableAwsNetworkPerformanceMetricSubscriptionMetricEnum `queryParam:"style=form,explode=true,name=Metric"`
	// The source Region or Availability Zone that the metric subscription is enabled for. For example, <code>us-east-1</code>.
	Source *string `queryParam:"style=form,explode=true,name=Source"`
	// The statistic used for the enabled subscription.
	Statistic         *GETEnableAwsNetworkPerformanceMetricSubscriptionStatisticEnum `queryParam:"style=form,explode=true,name=Statistic"`
	Version           GETEnableAwsNetworkPerformanceMetricSubscriptionVersionEnum    `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETEnableAwsNetworkPerformanceMetricSubscriptionResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
