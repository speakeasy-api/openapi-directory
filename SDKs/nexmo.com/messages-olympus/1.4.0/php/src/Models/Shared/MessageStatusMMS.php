<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * MessageStatusMMS - MMS
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class MessageStatusMMS
{
    /**
     * The channel sending to.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\MessageStatusMMSChannelEnum $channel
     */
	#[\JMS\Serializer\Annotation\SerializedName('channel')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\MessageStatusMMSChannelEnum>')]
    public MessageStatusMMSChannelEnum $channel;
    
    /**
     * Client reference of up to 100 characters. The reference will be present in every message status.
     * 
     * @var ?string $clientRef
     */
	#[\JMS\Serializer\Annotation\SerializedName('client_ref')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientRef = null;
    
    /**
     * If the message encountered a problem a descriptive error will be supplied in this object.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\MessageStatusMMSError $error
     */
	#[\JMS\Serializer\Annotation\SerializedName('error')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MessageStatusMMSError')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MessageStatusMMSError $error = null;
    
    /**
     * The phone number of the message **sender** in the [E.164](https://en.wikipedia.org/wiki/E.164) format. Don't use a leading + or 00 when entering a phone number, start with the country code, for example, 447700900000. For SMS in certain localities alpha-numeric sender id's will work as well, see [Global Messaging](https://developer.nexmo.com/messaging/sms/guides/country-specific-features#country-specific-features) for more details
     * 
     * 
     * 
     * @var string $from
     */
	#[\JMS\Serializer\Annotation\SerializedName('from')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $from;
    
    /**
     * The UUID of the message
     * 
     * @var string $messageUuid
     */
	#[\JMS\Serializer\Annotation\SerializedName('message_uuid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $messageUuid;
    
    /**
     * The status of the message.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\MessageStatusMMSStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\MessageStatusMMSStatusEnum>')]
    public MessageStatusMMSStatusEnum $status;
    
    /**
     * The datetime of when the event occurred, in `ISO 8601` format.
     * 
     * @var string $timestamp
     */
	#[\JMS\Serializer\Annotation\SerializedName('timestamp')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $timestamp;
    
    /**
     * The phone number of the message **recipient** in the [E.164](https://en.wikipedia.org/wiki/E.164) format. Don't use a leading + or 00 when entering a phone number, start with the country code, for example, 447700900000.
     * 
     * 
     * 
     * @var string $to
     */
	#[\JMS\Serializer\Annotation\SerializedName('to')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $to;
    
	#[\JMS\Serializer\Annotation\SerializedName('usage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MessageStatusMMSUsage')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MessageStatusMMSUsage $usage = null;
    
	public function __construct()
	{
		$this->channel = \OpenAPI\OpenAPI\Models\Shared\MessageStatusMMSChannelEnum::MMS;
		$this->clientRef = null;
		$this->error = null;
		$this->from = "";
		$this->messageUuid = "";
		$this->status = \OpenAPI\OpenAPI\Models\Shared\MessageStatusMMSStatusEnum::SUBMITTED;
		$this->timestamp = "";
		$this->to = "";
		$this->usage = null;
	}
}
