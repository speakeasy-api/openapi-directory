// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ItemTypeEnum string

const (
	ItemTypeEnumAnalysis         ItemTypeEnum = "ANALYSIS"
	ItemTypeEnumIncident         ItemTypeEnum = "INCIDENT"
	ItemTypeEnumMetric           ItemTypeEnum = "METRIC"
	ItemTypeEnumParent           ItemTypeEnum = "PARENT"
	ItemTypeEnumAttachment       ItemTypeEnum = "ATTACHMENT"
	ItemTypeEnumOther            ItemTypeEnum = "OTHER"
	ItemTypeEnumAutomation       ItemTypeEnum = "AUTOMATION"
	ItemTypeEnumInvolvedResource ItemTypeEnum = "INVOLVED_RESOURCE"
	ItemTypeEnumTask             ItemTypeEnum = "TASK"
)

func (e ItemTypeEnum) ToPointer() *ItemTypeEnum {
	return &e
}

func (e *ItemTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ANALYSIS":
		fallthrough
	case "INCIDENT":
		fallthrough
	case "METRIC":
		fallthrough
	case "PARENT":
		fallthrough
	case "ATTACHMENT":
		fallthrough
	case "OTHER":
		fallthrough
	case "AUTOMATION":
		fallthrough
	case "INVOLVED_RESOURCE":
		fallthrough
	case "TASK":
		*e = ItemTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ItemTypeEnum: %v", v)
	}
}
