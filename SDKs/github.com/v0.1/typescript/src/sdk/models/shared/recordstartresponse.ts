/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Response message
 */
export enum RecordStartResponseMessageEnum {
  RecordStartExecuted = "RecordStart Executed",
  CallUUIDParameterMustBePresent = "CallUUID Parameter must be present",
  FileFormatParameterMustBe = "FileFormat Parameter must be",
  RecordStartFailedInvalidTimeLimit = "RecordStart Failed: invalid TimeLimit",
  RecordStartFailedCallNotFound = "RecordStart Failed -- Call not found",
  RecordStartFailed = "RecordStart Failed",
}

/**
 * Response
 */
export class RecordStartResponse extends SpeakeasyBase {
  /**
   * Response message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message: RecordStartResponseMessageEnum;

  /**
   * Directory path/URI where the recording file will be saved
   */
  @SpeakeasyMetadata()
  @Expose({ name: "RecordFile" })
  recordFile: string;

  /**
   * Whether the request was successful or not
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Success" })
  success: boolean;
}
