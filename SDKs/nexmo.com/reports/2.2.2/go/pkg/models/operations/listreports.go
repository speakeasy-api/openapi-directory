// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/types"
)

type ListReportsSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

type ListReportsRequest struct {
	// The account for which the list of reports will be queried.
	AccountID string `queryParam:"style=form,explode=true,name=account_id"`
	// ISO-8601 extended time zone offset or ISO-8601 UTC zone offset formatted date from which the list of reports will be queried. Format `yyyy-mm-ddThh:mm:ss[.sss]±hh:mm` or `yyyy-mm-ddThh:mm:ss[.sss]Z`.
	DateFrom *types.Date `queryParam:"style=form,explode=true,name=date_from"`
	// ISO-8601 extended time zone offset or ISO-8601 UTC zone offset formatted date until which the list of reports will be queried. Format `yyyy-mm-ddThh:mm:ss[.sss]±hh:mm` or `yyyy-mm-ddThh:mm:ss[.sss]Z`.
	DateTo *types.Date `queryParam:"style=form,explode=true,name=date_to"`
	// A comma-separated list of report status values. Reports with any of the statuses specified are returned. The values in the comma-seperated list specified for `status` can be any of `PENDING`, `PROCESSING`, `SUCCESS`, `ABORTED`, `FAILED`, `TRUNCATED`.
	Status string `queryParam:"style=form,explode=true,name=status"`
}

// ListReports401ApplicationJSON - Unauthorized
type ListReports401ApplicationJSON struct {
	Detail   *string `json:"detail,omitempty"`
	Instance *string `json:"instance,omitempty"`
	Title    *string `json:"title,omitempty"`
	Type     *string `json:"type,omitempty"`
}

// ListReports400ApplicationJSON - Bad Request
type ListReports400ApplicationJSON struct {
	Detail   *string `json:"detail,omitempty"`
	Instance *string `json:"instance,omitempty"`
	Title    *string `json:"title,omitempty"`
	Type     *string `json:"type,omitempty"`
}

// ListReports200ApplicationJSON - OK
type ListReports200ApplicationJSON struct {
	// The number of reports in the list.
	ItemsCount *int64 `json:"items_count,omitempty"`
	// The list of reports.
	Reports []interface{} `json:"reports,omitempty"`
	// URI of this search.
	SelfLink *string `json:"self_link,omitempty"`
}

type ListReportsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	ListReports200ApplicationJSONObject *ListReports200ApplicationJSON
	// Bad Request
	ListReports400ApplicationJSONObject *ListReports400ApplicationJSON
	// Unauthorized
	ListReports401ApplicationJSONObject *ListReports401ApplicationJSON
}
