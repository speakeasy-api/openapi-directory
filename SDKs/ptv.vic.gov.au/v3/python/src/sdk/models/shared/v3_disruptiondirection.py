"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class V3DisruptionDirection:
    
    direction_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('direction_id'), 'exclude': lambda f: f is None }})
    r"""Direction of travel identifier"""  
    direction_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('direction_name'), 'exclude': lambda f: f is None }})
    r"""Name of direction of travel"""  
    route_direction_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('route_direction_id'), 'exclude': lambda f: f is None }})
    r"""Route and direction of travel combination identifier"""  
    service_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_time'), 'exclude': lambda f: f is None }})
    r"""Time of service to which disruption applies, in 24 hour clock format (HH:MM:SS) AEDT/AEST; returns null if disruption applies to multiple (or no) services"""  
    