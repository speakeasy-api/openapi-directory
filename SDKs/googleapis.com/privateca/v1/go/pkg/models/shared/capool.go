// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CaPoolTierEnum - Required. Immutable. The Tier of this CaPool.
type CaPoolTierEnum string

const (
	CaPoolTierEnumTierUnspecified CaPoolTierEnum = "TIER_UNSPECIFIED"
	CaPoolTierEnumEnterprise      CaPoolTierEnum = "ENTERPRISE"
	CaPoolTierEnumDevops          CaPoolTierEnum = "DEVOPS"
)

func (e CaPoolTierEnum) ToPointer() *CaPoolTierEnum {
	return &e
}

func (e *CaPoolTierEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TIER_UNSPECIFIED":
		fallthrough
	case "ENTERPRISE":
		fallthrough
	case "DEVOPS":
		*e = CaPoolTierEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CaPoolTierEnum: %v", v)
	}
}

// CaPool - A CaPool represents a group of CertificateAuthorities that form a trust anchor. A CaPool can be used to manage issuance policies for one or more CertificateAuthority resources and to rotate CA certificates in and out of the trust anchor.
type CaPool struct {
	// Defines controls over all certificate issuance within a CaPool.
	IssuancePolicy *IssuancePolicy `json:"issuancePolicy,omitempty"`
	// Optional. Labels with user-defined metadata.
	Labels map[string]string `json:"labels,omitempty"`
	// Output only. The resource name for this CaPool in the format `projects/*/locations/*/caPools/*`.
	Name *string `json:"name,omitempty"`
	// Options relating to the publication of each CertificateAuthority's CA certificate and CRLs and their inclusion as extensions in issued Certificates. The options set here apply to certificates issued by any CertificateAuthority in the CaPool.
	PublishingOptions *PublishingOptions `json:"publishingOptions,omitempty"`
	// Required. Immutable. The Tier of this CaPool.
	Tier *CaPoolTierEnum `json:"tier,omitempty"`
}

// CaPoolInput - A CaPool represents a group of CertificateAuthorities that form a trust anchor. A CaPool can be used to manage issuance policies for one or more CertificateAuthority resources and to rotate CA certificates in and out of the trust anchor.
type CaPoolInput struct {
	// Defines controls over all certificate issuance within a CaPool.
	IssuancePolicy *IssuancePolicy `json:"issuancePolicy,omitempty"`
	// Optional. Labels with user-defined metadata.
	Labels map[string]string `json:"labels,omitempty"`
	// Options relating to the publication of each CertificateAuthority's CA certificate and CRLs and their inclusion as extensions in issued Certificates. The options set here apply to certificates issued by any CertificateAuthority in the CaPool.
	PublishingOptions *PublishingOptions `json:"publishingOptions,omitempty"`
	// Required. Immutable. The Tier of this CaPool.
	Tier *CaPoolTierEnum `json:"tier,omitempty"`
}
