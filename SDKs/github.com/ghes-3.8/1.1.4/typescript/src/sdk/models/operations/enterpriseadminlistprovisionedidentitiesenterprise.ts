/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class EnterpriseAdminListProvisionedIdentitiesEnterpriseRequest extends SpeakeasyBase {
  /**
   * Used for pagination: the number of results to return per page.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=count" })
  count?: number;

  /**
   * Excludes the specified attribute from being returned in the results. Using this parameter can speed up response time.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=excludedAttributes",
  })
  excludedAttributes?: string;

  /**
   * If specified, only results that match the specified filter will be returned. Multiple filters are not supported. Possible filters are `userName`, `externalId`, `id`, and `displayName`. For example, `?filter="externalId eq '9138790-10932-109120392-12321'"`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=filter",
  })
  filter?: string;

  /**
   * Used for pagination: the starting index of the first result to return when paginating through values.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=startIndex",
  })
  startIndex?: number;
}

export class EnterpriseAdminListProvisionedIdentitiesEnterpriseResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success, either users were found or not found
   */
  @SpeakeasyMetadata()
  scimEnterpriseUserList?: shared.ScimEnterpriseUserList;

  /**
   * Bad request
   */
  @SpeakeasyMetadata()
  scimError?: shared.ScimError;
}
