/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class JournalEntryLineItem {
    /**
     * A unique identifier for an object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("department_id")
    public String departmentId;

    public JournalEntryLineItem withDepartmentId(String departmentId) {
        this.departmentId = departmentId;
        return this;
    }
    
    /**
     * User defined description
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public JournalEntryLineItem withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * A unique identifier for an object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public JournalEntryLineItem withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("ledger_account")
    public LinkedLedgerAccount ledgerAccount;

    public JournalEntryLineItem withLedgerAccount(LinkedLedgerAccount ledgerAccount) {
        this.ledgerAccount = ledgerAccount;
        return this;
    }
    
    /**
     * A unique identifier for an object.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location_id")
    public String locationId;

    public JournalEntryLineItem withLocationId(String locationId) {
        this.locationId = locationId;
        return this;
    }
    
    /**
     * Tax amount
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_amount")
    public Double taxAmount;

    public JournalEntryLineItem withTaxAmount(Double taxAmount) {
        this.taxAmount = taxAmount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tax_rate")
    public LinkedTaxRate taxRate;

    public JournalEntryLineItem withTaxRate(LinkedTaxRate taxRate) {
        this.taxRate = taxRate;
        return this;
    }
    
    /**
     * Debit entries are considered positive, and credit entries are considered negative.
     */
    @JsonProperty("total_amount")
    public Double totalAmount;

    public JournalEntryLineItem withTotalAmount(Double totalAmount) {
        this.totalAmount = totalAmount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tracking_category")
    public LinkedTrackingCategory trackingCategory;

    public JournalEntryLineItem withTrackingCategory(LinkedTrackingCategory trackingCategory) {
        this.trackingCategory = trackingCategory;
        return this;
    }
    
    /**
     * Debit entries are considered positive, and credit entries are considered negative.
     */
    @JsonProperty("type")
    public JournalEntryLineItemTypeEnum type;

    public JournalEntryLineItem withType(JournalEntryLineItemTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public JournalEntryLineItem(@JsonProperty("ledger_account") LinkedLedgerAccount ledgerAccount, @JsonProperty("total_amount") Double totalAmount, @JsonProperty("type") JournalEntryLineItemTypeEnum type) {
        this.ledgerAccount = ledgerAccount;
        this.totalAmount = totalAmount;
        this.type = type;
  }
}
