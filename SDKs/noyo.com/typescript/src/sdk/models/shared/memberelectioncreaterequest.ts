/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Type of member electing or waiving coverage
 */
export enum MemberElectionCreateRequestMemberTypeEnum {
  Dependent = "dependent",
  Employee = "employee",
}

/**
 * Status of the member election on the coverage plan
 */
export enum MemberElectionCreateRequestStatusEnum {
  Enrolling = "enrolling",
  Waiving = "waiving",
}

export class MemberElectionCreateRequest extends SpeakeasyBase {
  /**
   * Unique identifier of the member in Noyo
   */
  @SpeakeasyMetadata()
  @Expose({ name: "member_id" })
  memberId: string;

  /**
   * Type of member electing or waiving coverage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "member_type" })
  memberType: MemberElectionCreateRequestMemberTypeEnum;

  /**
   * Status of the member election on the coverage plan
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: MemberElectionCreateRequestStatusEnum;

  /**
   * Volume amount requested for the enrolling member
   */
  @SpeakeasyMetadata()
  @Expose({ name: "volume" })
  volume?: number;
}
