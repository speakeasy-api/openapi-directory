"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import fetcherrorresponse as shared_fetcherrorresponse
from ..shared import fetchhealthprofilequestionresponse as shared_fetchhealthprofilequestionresponse
from enum import Enum
from typing import Optional

class FetchHealthProfileQuestionIncludeEnum(str, Enum):
    r"""List of related resources to include in the response"""
    QUESTION_DEFINITION = 'question_definition'
    ANSWER = 'answer'


@dataclasses.dataclass
class FetchHealthProfileQuestionRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Health profile question identifier"""  
    include: Optional[FetchHealthProfileQuestionIncludeEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'include', 'style': 'form', 'explode': True }})
    r"""List of related resources to include in the response"""  
    

@dataclasses.dataclass
class FetchHealthProfileQuestionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    fetch_error_response: Optional[shared_fetcherrorresponse.FetchErrorResponse] = dataclasses.field(default=None)
    r"""Unauthorized"""  
    fetch_health_profile_question_response: Optional[shared_fetchhealthprofilequestionresponse.FetchHealthProfileQuestionResponse] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    