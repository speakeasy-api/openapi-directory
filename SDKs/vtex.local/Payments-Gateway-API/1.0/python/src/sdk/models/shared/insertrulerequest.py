"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import antifraud as shared_antifraud
from ..shared import connector as shared_connector
from ..shared import issuer as shared_issuer
from ..shared import paymentsystem as shared_paymentsystem
from ..shared import saleschannel as shared_saleschannel
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InsertRuleRequest:
    
    antifraud: shared_antifraud.Antifraud = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('antifraud') }})  
    begin_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('beginDate') }})  
    condition: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('condition') }})  
    connector: shared_connector.Connector = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('connector') }})  
    country: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('country') }})  
    date_intervals: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dateIntervals') }})  
    enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled') }})  
    end_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('endDate') }})  
    installment_options: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('installmentOptions') }})  
    installments_service: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('installmentsService') }})  
    is_default: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isDefault') }})  
    is_self_authorized: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isSelfAuthorized') }})  
    issuer: shared_issuer.Issuer = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('issuer') }})  
    multi_merchant_list: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('multiMerchantList') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    payment_system: shared_paymentsystem.PaymentSystem = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paymentSystem') }})  
    requires_authentication: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requiresAuthentication') }})  
    sales_channels: list[shared_saleschannel.SalesChannel] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('salesChannels') }})  
    