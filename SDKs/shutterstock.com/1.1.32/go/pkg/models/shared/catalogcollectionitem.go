// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type CatalogCollectionItemAssetTypeEnum string

const (
	CatalogCollectionItemAssetTypeEnumImage          CatalogCollectionItemAssetTypeEnum = "image"
	CatalogCollectionItemAssetTypeEnumVideo          CatalogCollectionItemAssetTypeEnum = "video"
	CatalogCollectionItemAssetTypeEnumAudio          CatalogCollectionItemAssetTypeEnum = "audio"
	CatalogCollectionItemAssetTypeEnumEditorialImage CatalogCollectionItemAssetTypeEnum = "editorial-image"
	CatalogCollectionItemAssetTypeEnumEditorialVideo CatalogCollectionItemAssetTypeEnum = "editorial-video"
)

func (e *CatalogCollectionItemAssetTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "image":
		fallthrough
	case "video":
		fallthrough
	case "audio":
		fallthrough
	case "editorial-image":
		fallthrough
	case "editorial-video":
		*e = CatalogCollectionItemAssetTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CatalogCollectionItemAssetTypeEnum: %s", s)
	}
}

type CatalogCollectionItemAsset struct {
	ID   *string                            `json:"id,omitempty"`
	Name *string                            `json:"name,omitempty"`
	Type CatalogCollectionItemAssetTypeEnum `json:"type"`
}

// CatalogCollectionItem - Metadata about an item that is part of a collection
type CatalogCollectionItem struct {
	Asset CatalogCollectionItemAsset `json:"asset"`
	// The collection IDs that this asset belongs to
	CollectionIds []string  `json:"collection_ids,omitempty"`
	CreatedTime   time.Time `json:"created_time"`
	ID            string    `json:"id"`
}
