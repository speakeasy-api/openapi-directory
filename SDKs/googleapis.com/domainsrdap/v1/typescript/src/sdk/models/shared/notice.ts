/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Link } from "./link";
import { Expose, Type } from "class-transformer";

/**
 * Notices object defined in [section 4.3 of RFC 7483](https://tools.ietf.org/html/rfc7483#section-4.3).
 */
export class Notice extends SpeakeasyBase {
  /**
   * Description of the notice.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string[];

  /**
   * Link to a document containing more information.
   */
  @SpeakeasyMetadata({ elemType: Link })
  @Expose({ name: "links" })
  @Type(() => Link)
  links?: Link[];

  /**
   * Title of a notice. Example: "Terms of Service".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * Type values defined in [section 10.2.1 of RFC 7483](https://tools.ietf.org/html/rfc7483#section-10.2.1) specific to a whole response: "result set truncated due to authorization", "result set truncated due to excessive load", "result set truncated due to unexplainable reasons".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
