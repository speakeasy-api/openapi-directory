/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ProcessingFee - Represents the Square processing fee.
 */
public class ProcessingFee {
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount_money")
    public Money amountMoney;

    public ProcessingFee withAmountMoney(Money amountMoney) {
        this.amountMoney = amountMoney;
        return this;
    }
    
    /**
     * The timestamp of when the fee takes effect, in RFC 3339 format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("effective_at")
    public String effectiveAt;

    public ProcessingFee withEffectiveAt(String effectiveAt) {
        this.effectiveAt = effectiveAt;
        return this;
    }
    
    /**
     * The type of fee assessed or adjusted. The fee type can be `INITIAL` or `ADJUSTMENT`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public String type;

    public ProcessingFee withType(String type) {
        this.type = type;
        return this;
    }
    
    public ProcessingFee(){}
}
