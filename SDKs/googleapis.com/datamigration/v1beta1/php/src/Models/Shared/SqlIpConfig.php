<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SqlIpConfig - IP Management configuration.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SqlIpConfig
{
    /**
     * The list of external networks that are allowed to connect to the instance using the IP. See https://en.wikipedia.org/wiki/CIDR_notation#CIDR_notation, also known as 'slash' notation (e.g. `192.168.100.0/24`).
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\SqlAclEntry> $authorizedNetworks
     */
	#[\JMS\Serializer\Annotation\SerializedName('authorizedNetworks')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\SqlAclEntry>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $authorizedNetworks = null;
    
    /**
     * Whether the instance is assigned a public IP address or not.
     * 
     * @var ?bool $enableIpv4
     */
	#[\JMS\Serializer\Annotation\SerializedName('enableIpv4')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enableIpv4 = null;
    
    /**
     * The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `/projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set.
     * 
     * @var ?string $privateNetwork
     */
	#[\JMS\Serializer\Annotation\SerializedName('privateNetwork')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $privateNetwork = null;
    
    /**
     * Whether SSL connections over IP should be enforced or not.
     * 
     * @var ?bool $requireSsl
     */
	#[\JMS\Serializer\Annotation\SerializedName('requireSsl')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $requireSsl = null;
    
	public function __construct()
	{
		$this->authorizedNetworks = null;
		$this->enableIpv4 = null;
		$this->privateNetwork = null;
		$this->requireSsl = null;
	}
}
