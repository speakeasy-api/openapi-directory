/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class BillbeeInterfacesBillbeeAPIModelUpdateStockAPIModel extends SpeakeasyBase {
  /**
   * Automatically reduce the NewQuantity by the currently not fulfilled amount
   */
  @SpeakeasyMetadata({ data: "form, name=AutosubtractReservedAmount" })
  @Expose({ name: "AutosubtractReservedAmount" })
  autosubtractReservedAmount?: boolean;

  /**
   * Optional the ID of the Billbee product to update
   */
  @SpeakeasyMetadata({ data: "form, name=BillbeeId" })
  @Expose({ name: "BillbeeId" })
  billbeeId?: number;

  /**
   * This parameter is currently ignored
   */
  @SpeakeasyMetadata({ data: "form, name=DeltaQuantity" })
  @Expose({ name: "DeltaQuantity" })
  deltaQuantity?: number;

  /**
   * If true, every sent stockchange is stored and transmitted to the connected shop, even if the value has not changed
   */
  @SpeakeasyMetadata({ data: "form, name=ForceSendStockToShops" })
  @Expose({ name: "ForceSendStockToShops" })
  forceSendStockToShops?: boolean;

  /**
   * The new absolute stock quantity for the product you want to set
   */
  @SpeakeasyMetadata({ data: "form, name=NewQuantity" })
  @Expose({ name: "NewQuantity" })
  newQuantity?: number;

  /**
   * This parameter is currently ignored
   */
  @SpeakeasyMetadata({ data: "form, name=OldQuantity" })
  @Expose({ name: "OldQuantity" })
  oldQuantity?: number;

  /**
   * Optional a reason text for the stock update
   */
  @SpeakeasyMetadata({ data: "form, name=Reason" })
  @Expose({ name: "Reason" })
  reason?: string;

  /**
   * The SKU of the product to update
   */
  @SpeakeasyMetadata({ data: "form, name=Sku" })
  @Expose({ name: "Sku" })
  sku?: string;

  /**
   * Optional the stock id if the feature multi stock is activated
   */
  @SpeakeasyMetadata({ data: "form, name=StockId" })
  @Expose({ name: "StockId" })
  stockId?: number;
}
