// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RestoreTableFromSnapshotXAmzTargetEnum
type RestoreTableFromSnapshotXAmzTargetEnum string

const (
	RestoreTableFromSnapshotXAmzTargetEnumRedshiftServerlessRestoreTableFromSnapshot RestoreTableFromSnapshotXAmzTargetEnum = "RedshiftServerless.RestoreTableFromSnapshot"
)

func (e RestoreTableFromSnapshotXAmzTargetEnum) ToPointer() *RestoreTableFromSnapshotXAmzTargetEnum {
	return &e
}

func (e *RestoreTableFromSnapshotXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RedshiftServerless.RestoreTableFromSnapshot":
		*e = RestoreTableFromSnapshotXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RestoreTableFromSnapshotXAmzTargetEnum: %v", v)
	}
}

type RestoreTableFromSnapshotRequest struct {
	RestoreTableFromSnapshotRequest shared.RestoreTableFromSnapshotRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      RestoreTableFromSnapshotXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type RestoreTableFromSnapshotResponse struct {
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerException
	InternalServerException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	RestoreTableFromSnapshotResponse *shared.RestoreTableFromSnapshotResponse
	StatusCode                       int
	RawResponse                      *http.Response
	// ValidationException
	ValidationException interface{}
}
