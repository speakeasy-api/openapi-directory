// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"openapi/pkg/types"
)

type CommitteeHistoryProfileJfcCommittee struct {
	// A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
	//
	JointCommitteeID *string `json:"joint_committee_id,omitempty"`
	// The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.
	JointCommitteeName *string `json:"joint_committee_name,omitempty"`
}

type CommitteeHistoryProfile struct {
	// Affiliated committee or connected organization
	//
	AffiliatedCommitteeName *string `json:"affiliated_committee_name,omitempty"`
	// A unique identifier assigned to each candidate registered with the FEC.
	// If a person runs for several offices, that person will have separate candidate IDs for each office.
	// First character indicates office - [P]residential, [H]ouse, [S]enate].
	// Second character is the last digit of the two-year period the ID was created.
	// Third and fourth is the candidate state. Presidential IDs don't have state.
	// Fifth and sixth is the district when the candidate first ran. This does not change if the
	// candidate/member's district changes during re-districting. Presidential IDs don't have districts.
	// The rest is sequence.
	//
	CandidateIds []string `json:"candidate_ids,omitempty"`
	// City of committee as reported on the Form 1
	//
	City *string `json:"city,omitempty"`
	// A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
	//
	CommitteeID string `json:"committee_id"`
	// Display the label of committee based on committee type, designation and organization type
	//
	CommitteeLabel *string `json:"committee_label,omitempty"`
	// The one-letter type code of the organization:
	//         - C communication cost
	//         - D delegate
	//         - E electioneering communication
	//         - H House
	//         - I independent expenditure filer (not a committee)
	//         - N PAC - nonqualified
	//         - O independent expenditure-only (super PACs)
	//         - P presidential
	//         - Q PAC - qualified
	//         - S Senate
	//         - U single candidate independent expenditure
	//         - V PAC with non-contribution account, nonqualified
	//         - W PAC with non-contribution account, qualified
	//         - X party, nonqualified
	//         - Y party, qualified
	//         - Z national party non-federal account
	//
	CommitteeType *string `json:"committee_type,omitempty"`
	// The one-letter type code of the organization:
	//         - C communication cost
	//         - D delegate
	//         - E electioneering communication
	//         - H House
	//         - I independent expenditure filer (not a committee)
	//         - N PAC - nonqualified
	//         - O independent expenditure-only (super PACs)
	//         - P presidential
	//         - Q PAC - qualified
	//         - S Senate
	//         - U single candidate independent expenditure
	//         - V PAC with non-contribution account, nonqualified
	//         - W PAC with non-contribution account, qualified
	//         - X party, nonqualified
	//         - Y party, qualified
	//         - Z national party non-federal account
	//
	CommitteeTypeFull *string `json:"committee_type_full,omitempty"`
	// True indicates that a candidate committee had been converted to a PAC
	ConvertToPacFlag *bool `json:"convert_to_pac_flag,omitempty"`
	// A two year election cycle that the committee was active- (after original registration
	// date but before expiration date in Form 1s) The cycle begins with
	// an odd year and is named for its ending, even year.
	//
	Cycle int `json:"cycle"`
	// A two year election cycle that the committee was active- (after original registration
	// date but before expiration date in Form 1s) The cycle begins with
	// an odd year and is named for its ending, even year.
	//
	Cycles []int `json:"cycles,omitempty"`
	// A two year election cycle that the committee was active- (after original registration
	// date but before expiration date in Form 1), and the committee has filling activity during the cycle
	//
	CyclesHasActivity []int `json:"cycles_has_activity,omitempty"`
	// A two year election cycle that the committee was active- (after original registration
	// date but before expiration date in Form 1s), and the committee files the financial reports
	// ('F3', 'F3X', 'F3P', 'F3L', 'F4', 'F5', 'F7', 'F13') during this cycle.
	//
	CyclesHasFinancial []int `json:"cycles_has_financial,omitempty"`
	// The one-letter designation code of the organization:
	//          - A authorized by a candidate
	//          - J joint fundraising committee
	//          - P principal campaign committee of a candidate
	//          - U unauthorized
	//          - B lobbyist/registrant PAC
	//          - D leadership PAC
	//
	Designation *string `json:"designation,omitempty"`
	// The one-letter designation code of the organization:
	//          - A authorized by a candidate
	//          - J joint fundraising committee
	//          - P principal campaign committee of a candidate
	//          - U unauthorized
	//          - B lobbyist/registrant PAC
	//          - D leadership PAC
	//
	DesignationFull *string `json:"designation_full,omitempty"`
	// The one-letter
	//     code of the filing frequency:
	//          - A Administratively terminated
	//          - D Debt
	//          - M Monthly filer
	//          - Q Quarterly filer
	//          - T Terminated
	//          - W Waived
	//
	FilingFrequency *string `json:"filing_frequency,omitempty"`
	// The day the FEC received the committee's first Form 1
	FirstF1Date *types.Date `json:"first_f1_date,omitempty"`
	// The day the FEC received the committee's first filing. This is usually a Form 1 committee registration.
	FirstFileDate *types.Date `json:"first_file_date,omitempty"`
	// Year a candidate runs for federal office.
	FormerCandidateElectionYear *int `json:"former_candidate_election_year,omitempty"`
	// A unique identifier assigned to each candidate registered with the FEC.
	// If a person runs for several offices, that person will have separate candidate IDs for each office.
	// First character indicates office - [P]residential, [H]ouse, [S]enate].
	// Second character is the last digit of the two-year period the ID was created.
	// Third and fourth is the candidate state. Presidential IDs don't have state.
	// Fifth and sixth is the district when the candidate first ran. This does not change if the
	// candidate/member's district changes during re-districting. Presidential IDs don't have districts.
	// The rest is sequence.
	//
	FormerCandidateID *string `json:"former_candidate_id,omitempty"`
	// Name of candidate running for office
	FormerCandidateName *string `json:"former_candidate_name,omitempty"`
	// The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.
	FormerCommitteeName *string `json:"former_committee_name,omitempty"`
	// True indicates that a committee is active.
	//
	IsActive     *bool                                 `json:"is_active,omitempty"`
	JfcCommittee []CommitteeHistoryProfileJfcCommittee `json:"jfc_committee,omitempty"`
	// The latest two year election cycle that the committee has filings
	//
	LastCycleHasActivity *int `json:"last_cycle_has_activity,omitempty"`
	// The latest two year election cycle that the committee files the financial reports
	// ('F3', 'F3X', 'F3P', 'F3L', 'F4', 'F5', 'F7', 'F13').
	//
	LastCycleHasFinancial *int `json:"last_cycle_has_financial,omitempty"`
	// The day the FEC received the committee's most recent Form 1
	LastF1Date *types.Date `json:"last_f1_date,omitempty"`
	// The day the FEC received the committee's most recent filing
	LastFileDate *types.Date `json:"last_file_date,omitempty"`
	// The name of the committee. If a committee changes its name,     the most recent name will be shown. Committee names are not unique. Use committee_id     for looking up records.
	Name *string `json:"name,omitempty"`
	// The one-letter code for the kind for organization:
	//         - C corporation
	//         - L labor organization
	//         - M membership organization
	//         - T trade association
	//         - V cooperative
	//         - W corporation without capital stock
	//
	OrganizationType *string `json:"organization_type,omitempty"`
	// The one-letter code for the kind for organization:
	//         - C corporation
	//         - L labor organization
	//         - M membership organization
	//         - T trade association
	//         - V cooperative
	//         - W corporation without capital stock
	//
	OrganizationTypeFull *string `json:"organization_type_full,omitempty"`
	// Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
	Party *string `json:"party,omitempty"`
	// Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
	PartyFull *string `json:"party_full,omitempty"`
	// A unique identifier assigned to each candidate registered with the FEC. If a person runs for several offices, that person will have separate candidate IDs for each office. This is a filter for Leadership PAC sponsor.
	//
	SponsorCandidateIds []string `json:"sponsor_candidate_ids,omitempty"`
	// State of the committee's address as filed on the Form 1
	//
	State *string `json:"state,omitempty"`
	// State of committee as reported on the Form 1
	//
	StateFull *string `json:"state_full,omitempty"`
	// Street address of committee as reported on the Form 1
	//
	Street1 *string `json:"street_1,omitempty"`
	// Second line of street address of committee as reported on the Form 1
	//
	Street2 *string `json:"street_2,omitempty"`
	// Name of the Committee's treasurer. If multiple treasurers for the committee, the most recent treasurer will be shown.
	TreasurerName *string `json:"treasurer_name,omitempty"`
	// Zip code of committee as reported on the Form 1
	//
	Zip *string `json:"zip,omitempty"`
}
