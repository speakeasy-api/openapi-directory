/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CustomAttributeFilter } from "./customattributefilter";
import { Expose, Type } from "class-transformer";

/**
 * Defines the request body for the [SearchCatalogItems](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/search-catalog-items) endpoint.
 */
export class SearchCatalogItemsRequest extends SpeakeasyBase {
  /**
   * The category id query expression to return items containing the specified category IDs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "category_ids" })
  categoryIds?: string[];

  /**
   * The pagination token, returned in the previous response, used to fetch the next batch of pending results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cursor" })
  cursor?: string;

  /**
   * The customer-attribute filter to return items or item variations matching the specified
   *
   * @remarks
   * custom attribute expressions. A maximum number of 10 custom attribute expressions are supported in
   * a single call to the [SearchCatalogItems](https://developer.squareup.com/reference/square_2021-08-18/catalog-api/search-catalog-items) endpoint.
   */
  @SpeakeasyMetadata({ elemType: CustomAttributeFilter })
  @Expose({ name: "custom_attribute_filters" })
  @Type(() => CustomAttributeFilter)
  customAttributeFilters?: CustomAttributeFilter[];

  /**
   * The enabled-location query expression to return items and item variations having specified enabled locations.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled_location_ids" })
  enabledLocationIds?: string[];

  /**
   * The maximum number of results to return per page. The default value is 100.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "limit" })
  limit?: number;

  /**
   * The product types query expression to return items or item variations having the specified product types.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "product_types" })
  productTypes?: string[];

  /**
   * The order to sort the results by item names. The default sort order is ascending (`ASC`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sort_order" })
  sortOrder?: string;

  /**
   * The stock-level query expression to return item variations with the specified stock levels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stock_levels" })
  stockLevels?: string[];

  /**
   * The text filter expression to return items or item variations containing specified text in
   *
   * @remarks
   * the `name`, `description`, or `abbreviation` attribute value of an item, or in
   * the `name`, `sku`, or `upc` attribute value of an item variation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "text_filter" })
  textFilter?: string;
}
