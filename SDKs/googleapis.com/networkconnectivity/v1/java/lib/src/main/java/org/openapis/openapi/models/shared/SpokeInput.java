/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SpokeInput - A Network Connectivity Center spoke represents one or more network connectivity resources. When you create a spoke, you associate it with a hub. You must also identify a value for exactly one of the following fields: * linked_vpn_tunnels * linked_interconnect_attachments * linked_router_appliance_instances
 */
public class SpokeInput {
    /**
     * An optional description of the spoke.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public SpokeInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Immutable. The name of the hub that this spoke is attached to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hub")
    public String hub;

    public SpokeInput withHub(String hub) {
        this.hub = hub;
        return this;
    }
    
    /**
     * Optional labels in key:value format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public SpokeInput withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * A collection of VLAN attachment resources. These resources should be redundant attachments that all advertise the same prefixes to Google Cloud. Alternatively, in active/passive configurations, all attachments should be capable of advertising the same prefixes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkedInterconnectAttachments")
    public LinkedInterconnectAttachmentsInput linkedInterconnectAttachments;

    public SpokeInput withLinkedInterconnectAttachments(LinkedInterconnectAttachmentsInput linkedInterconnectAttachments) {
        this.linkedInterconnectAttachments = linkedInterconnectAttachments;
        return this;
    }
    
    /**
     * A collection of router appliance instances. If you configure multiple router appliance instances to receive data from the same set of sites outside of Google Cloud, we recommend that you associate those instances with the same spoke.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkedRouterApplianceInstances")
    public LinkedRouterApplianceInstancesInput linkedRouterApplianceInstances;

    public SpokeInput withLinkedRouterApplianceInstances(LinkedRouterApplianceInstancesInput linkedRouterApplianceInstances) {
        this.linkedRouterApplianceInstances = linkedRouterApplianceInstances;
        return this;
    }
    
    /**
     * A collection of Cloud VPN tunnel resources. These resources should be redundant HA VPN tunnels that all advertise the same prefixes to Google Cloud. Alternatively, in a passive/active configuration, all tunnels should be capable of advertising the same prefixes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkedVpnTunnels")
    public LinkedVpnTunnelsInput linkedVpnTunnels;

    public SpokeInput withLinkedVpnTunnels(LinkedVpnTunnelsInput linkedVpnTunnels) {
        this.linkedVpnTunnels = linkedVpnTunnels;
        return this;
    }
    
    /**
     * Immutable. The name of the spoke. Spoke names must be unique. They use the following form: `projects/{project_number}/locations/{region}/spokes/{spoke_id}`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public SpokeInput withName(String name) {
        this.name = name;
        return this;
    }
    
    public SpokeInput(){}
}
