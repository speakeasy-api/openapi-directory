/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateCallRequestAnswerUrl {
    /**
     * The HTTP method used to send event information to answer_url.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("answer_method")
    public CreateCallRequestAnswerUrlAnswerMethodEnum answerMethod;
    public CreateCallRequestAnswerUrl withAnswerMethod(CreateCallRequestAnswerUrlAnswerMethodEnum answerMethod) {
        this.answerMethod = answerMethod;
        return this;
    }
    
    /**
     * The webhook endpoint where you provide the [Nexmo Call Control Object](/voice/voice-api/ncco-reference) that governs this call.
     * 
     */
    @JsonProperty("answer_url")
    public String[] answerUrl;
    public CreateCallRequestAnswerUrl withAnswerUrl(String[] answerUrl) {
        this.answerUrl = answerUrl;
        return this;
    }
    
    /**
     * The HTTP method used to send event information to `event_url`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("event_method")
    public CreateCallRequestAnswerUrlEventMethodEnum eventMethod;
    public CreateCallRequestAnswerUrl withEventMethod(CreateCallRequestAnswerUrlEventMethodEnum eventMethod) {
        this.eventMethod = eventMethod;
        return this;
    }
    
    /**
     * **Required** unless `event_url` is configured at the application
     * level, see [Create an Application](/api/application.v2#createApplication)
     * 
     * The webhook endpoint where call progress events are
     * sent to. For more information about the values sent, see
     * [Event webhook](/voice/voice-api/webhook-reference#event-webhook).
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("event_url")
    public String[] eventUrl;
    public CreateCallRequestAnswerUrl withEventUrl(String[] eventUrl) {
        this.eventUrl = eventUrl;
        return this;
    }
    
    /**
     * Connect to a Phone (PSTN) number
     */
    @JsonProperty("from")
    public EndpointPhoneFrom from;
    public CreateCallRequestAnswerUrl withFrom(EndpointPhoneFrom from) {
        this.from = from;
        return this;
    }
    
    /**
     * Set the number of seconds that elapse before Vonage hangs up after the call state changes to answered.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("length_timer")
    public Long lengthTimer;
    public CreateCallRequestAnswerUrl withLengthTimer(Long lengthTimer) {
        this.lengthTimer = lengthTimer;
        return this;
    }
    
    /**
     * Configure the behavior when Vonage detects that the call is answered by voicemail. If `continue`, Vonage sends an HTTP request to `event_url` with the Call event machine. If `hangup`, Vonage ends the call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("machine_detection")
    public CreateCallRequestAnswerUrlMachineDetectionEnum machineDetection;
    public CreateCallRequestAnswerUrl withMachineDetection(CreateCallRequestAnswerUrlMachineDetectionEnum machineDetection) {
        this.machineDetection = machineDetection;
        return this;
    }
    
    /**
     * Set to `true` to use random phone number as `from`. The number will be selected from the list of the numbers assigned to the current application. `random_from_number: true` cannot be used together with `from`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("random_from_number")
    public Boolean randomFromNumber;
    public CreateCallRequestAnswerUrl withRandomFromNumber(Boolean randomFromNumber) {
        this.randomFromNumber = randomFromNumber;
        return this;
    }
    
    /**
     * Set the number of seconds that elapse before Vonage hangs up after the call state changes to \u2018ringing\u2019.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ringing_timer")
    public Long ringingTimer;
    public CreateCallRequestAnswerUrl withRingingTimer(Long ringingTimer) {
        this.ringingTimer = ringingTimer;
        return this;
    }
    
    @JsonProperty("to")
    public Object[] to;
    public CreateCallRequestAnswerUrl withTo(Object[] to) {
        this.to = to;
        return this;
    }
    
}
