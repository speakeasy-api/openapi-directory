// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SourceSplitShardDerivationModeEnum - DEPRECATED
type SourceSplitShardDerivationModeEnum string

const (
	SourceSplitShardDerivationModeEnumSourceDerivationModeUnknown          SourceSplitShardDerivationModeEnum = "SOURCE_DERIVATION_MODE_UNKNOWN"
	SourceSplitShardDerivationModeEnumSourceDerivationModeIndependent      SourceSplitShardDerivationModeEnum = "SOURCE_DERIVATION_MODE_INDEPENDENT"
	SourceSplitShardDerivationModeEnumSourceDerivationModeChildOfCurrent   SourceSplitShardDerivationModeEnum = "SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT"
	SourceSplitShardDerivationModeEnumSourceDerivationModeSiblingOfCurrent SourceSplitShardDerivationModeEnum = "SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT"
)

func (e SourceSplitShardDerivationModeEnum) ToPointer() *SourceSplitShardDerivationModeEnum {
	return &e
}

func (e *SourceSplitShardDerivationModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SOURCE_DERIVATION_MODE_UNKNOWN":
		fallthrough
	case "SOURCE_DERIVATION_MODE_INDEPENDENT":
		fallthrough
	case "SOURCE_DERIVATION_MODE_CHILD_OF_CURRENT":
		fallthrough
	case "SOURCE_DERIVATION_MODE_SIBLING_OF_CURRENT":
		*e = SourceSplitShardDerivationModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SourceSplitShardDerivationModeEnum: %v", v)
	}
}

// SourceSplitShard - DEPRECATED in favor of DerivedSource.
type SourceSplitShard struct {
	// DEPRECATED
	DerivationMode *SourceSplitShardDerivationModeEnum `json:"derivationMode,omitempty"`
	// A source that records can be read and decoded from.
	Source *Source `json:"source,omitempty"`
}
