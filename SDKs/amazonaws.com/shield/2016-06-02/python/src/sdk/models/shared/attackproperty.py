"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import attacklayer_enum as shared_attacklayer_enum
from ..shared import attackpropertyidentifier_enum as shared_attackpropertyidentifier_enum
from ..shared import contributor as shared_contributor
from ..shared import unit_enum as shared_unit_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AttackProperty:
    r"""Details of a Shield event. This is provided as part of an <a>AttackDetail</a>."""
    
    attack_layer: Optional[shared_attacklayer_enum.AttackLayerEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AttackLayer'), 'exclude': lambda f: f is None }})  
    attack_property_identifier: Optional[shared_attackpropertyidentifier_enum.AttackPropertyIdentifierEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AttackPropertyIdentifier'), 'exclude': lambda f: f is None }})  
    top_contributors: Optional[list[shared_contributor.Contributor]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TopContributors'), 'exclude': lambda f: f is None }})  
    total: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Total'), 'exclude': lambda f: f is None }})  
    unit: Optional[shared_unit_enum.UnitEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Unit'), 'exclude': lambda f: f is None }})  
    