// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
	"time"
)

type SearchTasksForWorkspacePathParams struct {
	// Globally unique identifier for the workspace or organization.
	WorkspaceGid string `pathParam:"style=simple,explode=false,name=workspace_gid"`
}

// SearchTasksForWorkspaceResourceSubtypeEnum - Filters results by the task's resource_subtype
type SearchTasksForWorkspaceResourceSubtypeEnum string

const (
	SearchTasksForWorkspaceResourceSubtypeEnumDefaultTask SearchTasksForWorkspaceResourceSubtypeEnum = "default_task"
	SearchTasksForWorkspaceResourceSubtypeEnumMilestone   SearchTasksForWorkspaceResourceSubtypeEnum = "milestone"
)

func (e *SearchTasksForWorkspaceResourceSubtypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "default_task":
		fallthrough
	case "milestone":
		*e = SearchTasksForWorkspaceResourceSubtypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchTasksForWorkspaceResourceSubtypeEnum: %s", s)
	}
}

// SearchTasksForWorkspaceSortByEnum - One of `due_date`, `created_at`, `completed_at`, `likes`, or `modified_at`, defaults to `modified_at`
type SearchTasksForWorkspaceSortByEnum string

const (
	SearchTasksForWorkspaceSortByEnumDueDate     SearchTasksForWorkspaceSortByEnum = "due_date"
	SearchTasksForWorkspaceSortByEnumCreatedAt   SearchTasksForWorkspaceSortByEnum = "created_at"
	SearchTasksForWorkspaceSortByEnumCompletedAt SearchTasksForWorkspaceSortByEnum = "completed_at"
	SearchTasksForWorkspaceSortByEnumLikes       SearchTasksForWorkspaceSortByEnum = "likes"
	SearchTasksForWorkspaceSortByEnumModifiedAt  SearchTasksForWorkspaceSortByEnum = "modified_at"
)

func (e *SearchTasksForWorkspaceSortByEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "due_date":
		fallthrough
	case "created_at":
		fallthrough
	case "completed_at":
		fallthrough
	case "likes":
		fallthrough
	case "modified_at":
		*e = SearchTasksForWorkspaceSortByEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchTasksForWorkspaceSortByEnum: %s", s)
	}
}

type SearchTasksForWorkspaceQueryParams struct {
	// Comma-separated list of user identifiers
	AssignedByAny *string `queryParam:"style=form,explode=true,name=assigned_by.any"`
	// Comma-separated list of user identifiers
	AssignedByNot *string `queryParam:"style=form,explode=true,name=assigned_by.not"`
	// Comma-separated list of user identifiers
	AssigneeAny *string `queryParam:"style=form,explode=true,name=assignee.any"`
	// Comma-separated list of user identifiers
	AssigneeNot *string `queryParam:"style=form,explode=true,name=assignee.not"`
	// Comma-separated list of user identifiers
	CommentedOnByNot *string `queryParam:"style=form,explode=true,name=commented_on_by.not"`
	// Filter to completed tasks
	Completed *bool `queryParam:"style=form,explode=true,name=completed"`
	// ISO 8601 datetime string
	CompletedAtAfter *time.Time `queryParam:"style=form,explode=true,name=completed_at.after"`
	// ISO 8601 datetime string
	CompletedAtBefore *time.Time `queryParam:"style=form,explode=true,name=completed_at.before"`
	// ISO 8601 date string or `null`
	CompletedOn *types.Date `queryParam:"style=form,explode=true,name=completed_on"`
	// ISO 8601 date string
	CompletedOnAfter *types.Date `queryParam:"style=form,explode=true,name=completed_on.after"`
	// ISO 8601 date string
	CompletedOnBefore *types.Date `queryParam:"style=form,explode=true,name=completed_on.before"`
	// ISO 8601 datetime string
	CreatedAtAfter *time.Time `queryParam:"style=form,explode=true,name=created_at.after"`
	// ISO 8601 datetime string
	CreatedAtBefore *time.Time `queryParam:"style=form,explode=true,name=created_at.before"`
	// Comma-separated list of user identifiers
	CreatedByAny *string `queryParam:"style=form,explode=true,name=created_by.any"`
	// Comma-separated list of user identifiers
	CreatedByNot *string `queryParam:"style=form,explode=true,name=created_by.not"`
	// ISO 8601 date string or `null`
	CreatedOn *types.Date `queryParam:"style=form,explode=true,name=created_on"`
	// ISO 8601 date string
	CreatedOnAfter *types.Date `queryParam:"style=form,explode=true,name=created_on.after"`
	// ISO 8601 date string
	CreatedOnBefore *types.Date `queryParam:"style=form,explode=true,name=created_on.before"`
	// ISO 8601 datetime string
	DueAtAfter *time.Time `queryParam:"style=form,explode=true,name=due_at.after"`
	// ISO 8601 datetime string
	DueAtBefore *time.Time `queryParam:"style=form,explode=true,name=due_at.before"`
	// ISO 8601 date string or `null`
	DueOn *types.Date `queryParam:"style=form,explode=true,name=due_on"`
	// ISO 8601 date string
	DueOnAfter *types.Date `queryParam:"style=form,explode=true,name=due_on.after"`
	// ISO 8601 date string
	DueOnBefore *types.Date `queryParam:"style=form,explode=true,name=due_on.before"`
	// Comma-separated list of user identifiers
	FollowersNot *string `queryParam:"style=form,explode=true,name=followers.not"`
	// Filter to tasks with attachments
	HasAttachment *bool `queryParam:"style=form,explode=true,name=has_attachment"`
	// Filter to tasks with incomplete dependencies
	IsBlocked *bool `queryParam:"style=form,explode=true,name=is_blocked"`
	// Filter to incomplete tasks with dependents
	IsBlocking *bool `queryParam:"style=form,explode=true,name=is_blocking"`
	// Filter to subtasks
	IsSubtask *bool `queryParam:"style=form,explode=true,name=is_subtask"`
	// Comma-separated list of user identifiers
	LikedByNot *string `queryParam:"style=form,explode=true,name=liked_by.not"`
	// ISO 8601 datetime string
	ModifiedAtAfter *time.Time `queryParam:"style=form,explode=true,name=modified_at.after"`
	// ISO 8601 datetime string
	ModifiedAtBefore *time.Time `queryParam:"style=form,explode=true,name=modified_at.before"`
	// ISO 8601 date string or `null`
	ModifiedOn *types.Date `queryParam:"style=form,explode=true,name=modified_on"`
	// ISO 8601 date string
	ModifiedOnAfter *types.Date `queryParam:"style=form,explode=true,name=modified_on.after"`
	// ISO 8601 date string
	ModifiedOnBefore *types.Date `queryParam:"style=form,explode=true,name=modified_on.before"`
	// Defines fields to return.
	// Some requests return *compact* representations of objects in order to conserve resources and complete the request more efficiently. Other times requests return more information than you may need. This option allows you to list the exact set of fields that the API should be sure to return for the objects. The field names should be provided as paths, described below.
	// The id of included objects will always be returned, regardless of the field options.
	OptFields []string `queryParam:"style=form,explode=false,name=opt_fields"`
	// Provides “pretty” output.
	// Provides the response in a “pretty” format. In the case of JSON this means doing proper line breaking and indentation to make it readable. This will take extra time and increase the response size so it is advisable only to use this during debugging.
	OptPretty *bool `queryParam:"style=form,explode=true,name=opt_pretty"`
	// Comma-separated list of portfolio IDs
	PortfoliosAny *string `queryParam:"style=form,explode=true,name=portfolios.any"`
	// Comma-separated list of project IDs
	ProjectsAll *string `queryParam:"style=form,explode=true,name=projects.all"`
	// Comma-separated list of project IDs
	ProjectsAny *string `queryParam:"style=form,explode=true,name=projects.any"`
	// Comma-separated list of project IDs
	ProjectsNot *string `queryParam:"style=form,explode=true,name=projects.not"`
	// Filters results by the task's resource_subtype
	ResourceSubtype *SearchTasksForWorkspaceResourceSubtypeEnum `queryParam:"style=form,explode=true,name=resource_subtype"`
	// Comma-separated list of section or column IDs
	SectionsAll *string `queryParam:"style=form,explode=true,name=sections.all"`
	// Comma-separated list of section or column IDs
	SectionsAny *string `queryParam:"style=form,explode=true,name=sections.any"`
	// Comma-separated list of section or column IDs
	SectionsNot *string `queryParam:"style=form,explode=true,name=sections.not"`
	// Default `false`
	SortAscending *bool `queryParam:"style=form,explode=true,name=sort_ascending"`
	// One of `due_date`, `created_at`, `completed_at`, `likes`, or `modified_at`, defaults to `modified_at`
	SortBy *SearchTasksForWorkspaceSortByEnum `queryParam:"style=form,explode=true,name=sort_by"`
	// ISO 8601 date string or `null`
	StartOn *types.Date `queryParam:"style=form,explode=true,name=start_on"`
	// ISO 8601 date string
	StartOnAfter *types.Date `queryParam:"style=form,explode=true,name=start_on.after"`
	// ISO 8601 date string
	StartOnBefore *types.Date `queryParam:"style=form,explode=true,name=start_on.before"`
	// Comma-separated list of tag IDs
	TagsAll *string `queryParam:"style=form,explode=true,name=tags.all"`
	// Comma-separated list of tag IDs
	TagsAny *string `queryParam:"style=form,explode=true,name=tags.any"`
	// Comma-separated list of tag IDs
	TagsNot *string `queryParam:"style=form,explode=true,name=tags.not"`
	// Comma-separated list of team IDs
	TeamsAny *string `queryParam:"style=form,explode=true,name=teams.any"`
	// Performs full-text search on both task name and description
	Text *string `queryParam:"style=form,explode=true,name=text"`
}

type SearchTasksForWorkspaceRequest struct {
	PathParams  SearchTasksForWorkspacePathParams
	QueryParams SearchTasksForWorkspaceQueryParams
}

// SearchTasksForWorkspace200ApplicationJSON - Successfully retrieved the section's tasks.
type SearchTasksForWorkspace200ApplicationJSON struct {
	Data []shared.TaskCompact `json:"data,omitempty"`
}

type SearchTasksForWorkspaceResponse struct {
	ContentType string
	// This usually occurs because of a missing or malformed parameter. Check the documentation and the syntax of your request and try again.
	ErrorResponse *shared.ErrorResponse
	StatusCode    int
	RawResponse   *http.Response
	// Successfully retrieved the section's tasks.
	SearchTasksForWorkspace200ApplicationJSONObject *SearchTasksForWorkspace200ApplicationJSON
}
