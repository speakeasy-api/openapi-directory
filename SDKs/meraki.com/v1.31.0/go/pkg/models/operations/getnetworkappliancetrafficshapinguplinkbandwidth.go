// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetNetworkApplianceTrafficShapingUplinkBandwidthRequest struct {
	NetworkID string `pathParam:"style=simple,explode=false,name=networkId"`
}

// GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSONBandwidthLimitsCellular - uplink cellular configued limits [optional]
type GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSONBandwidthLimitsCellular struct {
	// configured UP limit for the uplink (in Kbps).  Null indicated unlimited
	LimitDown *int64 `json:"limitDown,omitempty"`
	// configured UP limit for the uplink (in Kbps).  Null indicated unlimited
	LimitUp *int64 `json:"limitUp,omitempty"`
}

// GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSONBandwidthLimitsWan1 - uplink wan1 configued limits [optional]
type GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSONBandwidthLimitsWan1 struct {
	// configured UP limit for the uplink (in Kbps).  Null indicated unlimited
	LimitDown *int64 `json:"limitDown,omitempty"`
	// configured UP limit for the uplink (in Kbps).  Null indicated unlimited
	LimitUp *int64 `json:"limitUp,omitempty"`
}

// GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSONBandwidthLimitsWan2 - uplink wan2 configued limits [optional]
type GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSONBandwidthLimitsWan2 struct {
	// configured UP limit for the uplink (in Kbps).  Null indicated unlimited
	LimitDown *int64 `json:"limitDown,omitempty"`
	// configured UP limit for the uplink (in Kbps).  Null indicated unlimited
	LimitUp *int64 `json:"limitUp,omitempty"`
}

// GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSONBandwidthLimits - A hash uplink keys and their configured settings for the Appliance
type GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSONBandwidthLimits struct {
	// uplink cellular configued limits [optional]
	Cellular *GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSONBandwidthLimitsCellular `json:"cellular,omitempty"`
	// uplink wan1 configued limits [optional]
	Wan1 *GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSONBandwidthLimitsWan1 `json:"wan1,omitempty"`
	// uplink wan2 configued limits [optional]
	Wan2 *GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSONBandwidthLimitsWan2 `json:"wan2,omitempty"`
}

type GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSONCapabilitiesBandwidths struct {
	// name of uplink
	Interface *string `json:"interface,omitempty"`
	// limit in bytes (null indicates unlimited)
	Limit *int64 `json:"limit,omitempty"`
}

type GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSONCapabilities struct {
	// array of uplink limits
	Bandwidths []GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSONCapabilitiesBandwidths `json:"bandwidths,omitempty"`
	// model number of appliance
	Model *string `json:"model,omitempty"`
}

// GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSON - Successful operation
type GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSON struct {
	// A hash uplink keys and their configured settings for the Appliance
	BandwidthLimits *GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSONBandwidthLimits `json:"bandwidthLimits,omitempty"`
	// Array of appliances
	Capabilities []GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSONCapabilities `json:"capabilities,omitempty"`
}

type GetNetworkApplianceTrafficShapingUplinkBandwidthResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSONObject *GetNetworkApplianceTrafficShapingUplinkBandwidth200ApplicationJSON
}
