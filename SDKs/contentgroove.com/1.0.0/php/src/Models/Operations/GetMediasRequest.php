<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetMediasRequest
{
    /**
     * Filters to be applied to the query.
     * 
     * 
     * Query params in the url must look like this: "filter[attributeName_*matcher*]"
     * 
     * (i.e. filter[name_eq]=chimp%20into%20space)
     * 
     * Available matchers can be found here: https://activerecord-hackery.github.io/ransack/getting-started/search-matches/
     * 
     * 
     * 
     * @var ?array<string, mixed> $filter
     */
	#[SpeakeasyMetadata('queryParam:style=deepObject,explode=true,name=filter')]
    public ?array $filter = null;
    
    /**
     * Specify page number and page size for the query
     * 
     * @var ?array<string, mixed> $page
     */
	#[SpeakeasyMetadata('queryParam:style=deepObject,explode=true,name=page')]
    public ?array $page = null;
    
    /**
     * Sorting to be applied to the query. For more info: https://jsonapi.org/format/#fetching-sorting
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetMediasSortEnum $sort
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort')]
    public ?GetMediasSortEnum $sort = null;
    
	public function __construct()
	{
		$this->filter = null;
		$this->page = null;
		$this->sort = null;
	}
}
