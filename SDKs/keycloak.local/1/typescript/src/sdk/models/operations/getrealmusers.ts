/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetRealmUsersRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=briefRepresentation",
  })
  briefRepresentation?: boolean;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=email" })
  email?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=first" })
  first?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=firstName",
  })
  firstName?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=lastName",
  })
  lastName?: string;

  /**
   * Maximum results size (defaults to 100)
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=max" })
  max?: number;

  /**
   * realm name (not id!)
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=realm",
  })
  realm: string;

  /**
   * A String contained in username, first or last name, or email
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=search",
  })
  search?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=username",
  })
  username?: string;
}

export class GetRealmUsersResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * success
   */
  @SpeakeasyMetadata({ elemType: shared.UserRepresentation })
  userRepresentations?: shared.UserRepresentation[];
}
