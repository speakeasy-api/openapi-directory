/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum MonitoringComponentConfigEnableComponentsEnum {
  ComponentUnspecified = "COMPONENT_UNSPECIFIED",
  SystemComponents = "SYSTEM_COMPONENTS",
  Workloads = "WORKLOADS",
  Apiserver = "APISERVER",
  Scheduler = "SCHEDULER",
  ControllerManager = "CONTROLLER_MANAGER",
}

/**
 * MonitoringComponentConfig is cluster monitoring component configuration.
 */
export class MonitoringComponentConfig extends SpeakeasyBase {
  /**
   * Select components to collect metrics. An empty set would disable all monitoring.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enableComponents" })
  enableComponents?: MonitoringComponentConfigEnableComponentsEnum[];
}
