// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnum - The state of the association.
type DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnum string

const (
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnumAssociating    DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnum = "associating"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnumAssociated     DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnum = "associated"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnumDisassociating DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnum = "disassociating"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnumDisassociated  DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnum = "disassociated"
)

func (e DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnum) ToPointer() *DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnum {
	return &e
}

func (e *DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "associating":
		fallthrough
	case "associated":
		fallthrough
	case "disassociating":
		fallthrough
	case "disassociated":
		*e = DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnum: %v", v)
	}
}

// DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociation - The association.
type DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociation struct {
	State                      *DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnum
	TransitGatewayRouteTableID *string
}

// DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnum - The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
type DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnum string

const (
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnumVpc                  DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnum = "vpc"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnumVpn                  DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnum = "vpn"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnumDirectConnectGateway DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnum = "direct-connect-gateway"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnumConnect              DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnum = "connect"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnumPeering              DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnum = "peering"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnumTgwPeering           DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnum = "tgw-peering"
)

func (e DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnum) ToPointer() *DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnum {
	return &e
}

func (e *DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "vpc":
		fallthrough
	case "vpn":
		fallthrough
	case "direct-connect-gateway":
		fallthrough
	case "connect":
		fallthrough
	case "peering":
		fallthrough
	case "tgw-peering":
		*e = DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnum: %v", v)
	}
}

// DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum - The attachment state. Note that the <code>initiating</code> state has been deprecated.
type DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum string

const (
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnumInitiating        DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum = "initiating"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnumInitiatingRequest DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum = "initiatingRequest"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnumPendingAcceptance DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum = "pendingAcceptance"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnumRollingBack       DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum = "rollingBack"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnumPending           DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum = "pending"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnumAvailable         DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum = "available"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnumModifying         DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum = "modifying"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnumDeleting          DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum = "deleting"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnumDeleted           DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum = "deleted"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnumFailed            DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum = "failed"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnumRejected          DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum = "rejected"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnumRejecting         DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum = "rejecting"
	DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnumFailing           DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum = "failing"
)

func (e DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum) ToPointer() *DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum {
	return &e
}

func (e *DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initiating":
		fallthrough
	case "initiatingRequest":
		fallthrough
	case "pendingAcceptance":
		fallthrough
	case "rollingBack":
		fallthrough
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "modifying":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		fallthrough
	case "failed":
		fallthrough
	case "rejected":
		fallthrough
	case "rejecting":
		fallthrough
	case "failing":
		*e = DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum: %v", v)
	}
}

// DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsTags - Describes a tag.
type DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsTags struct {
	Key   *string
	Value *string
}

// DescribeTransitGatewayAttachmentsResultTransitGatewayAttachments - Describes an attachment between a resource and a transit gateway.
type DescribeTransitGatewayAttachmentsResultTransitGatewayAttachments struct {
	Association                *DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociation
	CreationTime               *time.Time
	ResourceID                 *string
	ResourceOwnerID            *string
	ResourceType               *DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnum
	State                      *DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum
	Tags                       []DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsTags
	TransitGatewayAttachmentID *string
	TransitGatewayID           *string
	TransitGatewayOwnerID      *string
}

// DescribeTransitGatewayAttachmentsResult - Success
type DescribeTransitGatewayAttachmentsResult struct {
	NextToken                 *string
	TransitGatewayAttachments []DescribeTransitGatewayAttachmentsResultTransitGatewayAttachments
}
