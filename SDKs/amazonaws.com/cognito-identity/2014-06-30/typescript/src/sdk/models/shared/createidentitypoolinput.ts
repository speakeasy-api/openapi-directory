/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CognitoIdentityProvider } from "./cognitoidentityprovider";
import { Expose, Type } from "class-transformer";

/**
 * Input to the CreateIdentityPool action.
 */
export class CreateIdentityPoolInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AllowClassicFlow" })
  allowClassicFlow?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "AllowUnauthenticatedIdentities" })
  allowUnauthenticatedIdentities: boolean;

  @SpeakeasyMetadata({ elemType: CognitoIdentityProvider })
  @Expose({ name: "CognitoIdentityProviders" })
  @Type(() => CognitoIdentityProvider)
  cognitoIdentityProviders?: CognitoIdentityProvider[];

  @SpeakeasyMetadata()
  @Expose({ name: "DeveloperProviderName" })
  developerProviderName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IdentityPoolName" })
  identityPoolName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IdentityPoolTags" })
  identityPoolTags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "OpenIdConnectProviderARNs" })
  openIdConnectProviderARNs?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SamlProviderARNs" })
  samlProviderARNs?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SupportedLoginProviders" })
  supportedLoginProviders?: Record<string, string>;
}
