// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PublisherConnectionBiddingStateEnum - Whether the publisher has been approved by the bidder.
type PublisherConnectionBiddingStateEnum string

const (
	PublisherConnectionBiddingStateEnumStateUnspecified PublisherConnectionBiddingStateEnum = "STATE_UNSPECIFIED"
	PublisherConnectionBiddingStateEnumPending          PublisherConnectionBiddingStateEnum = "PENDING"
	PublisherConnectionBiddingStateEnumRejected         PublisherConnectionBiddingStateEnum = "REJECTED"
	PublisherConnectionBiddingStateEnumApproved         PublisherConnectionBiddingStateEnum = "APPROVED"
)

func (e *PublisherConnectionBiddingStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "PENDING":
		fallthrough
	case "REJECTED":
		fallthrough
	case "APPROVED":
		*e = PublisherConnectionBiddingStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PublisherConnectionBiddingStateEnum: %s", s)
	}
}

// PublisherConnectionPublisherPlatformEnum - Output only. Whether the publisher is an Ad Manager or AdMob publisher.
type PublisherConnectionPublisherPlatformEnum string

const (
	PublisherConnectionPublisherPlatformEnumPublisherPlatformUnspecified PublisherConnectionPublisherPlatformEnum = "PUBLISHER_PLATFORM_UNSPECIFIED"
	PublisherConnectionPublisherPlatformEnumGoogleAdManager              PublisherConnectionPublisherPlatformEnum = "GOOGLE_AD_MANAGER"
	PublisherConnectionPublisherPlatformEnumAdmob                        PublisherConnectionPublisherPlatformEnum = "ADMOB"
)

func (e *PublisherConnectionPublisherPlatformEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PUBLISHER_PLATFORM_UNSPECIFIED":
		fallthrough
	case "GOOGLE_AD_MANAGER":
		fallthrough
	case "ADMOB":
		*e = PublisherConnectionPublisherPlatformEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PublisherConnectionPublisherPlatformEnum: %s", s)
	}
}

// PublisherConnection - An Open Bidding exchange's connection to a publisher. This is initiated by the publisher for the bidder to review. If approved by the bidder, this means that the bidder agrees to receive bid requests from the publisher.
type PublisherConnection struct {
	// Whether the publisher has been approved by the bidder.
	BiddingState *PublisherConnectionBiddingStateEnum `json:"biddingState,omitempty"`
	// Output only. The time at which the publisher initiated a connection with the bidder (irrespective of if or when the bidder approves it). This is subsequently updated if the publisher revokes and re-initiates the connection.
	CreateTime *string `json:"createTime,omitempty"`
	// Output only. Publisher display name.
	DisplayName *string `json:"displayName,omitempty"`
	// Output only. Name of the publisher connection. This follows the pattern `bidders/{bidder}/publisherConnections/{publisher}`, where `{bidder}` represents the account ID of the bidder, and `{publisher}` is the ads.txt/app-ads.txt publisher ID.
	Name *string `json:"name,omitempty"`
	// Output only. Whether the publisher is an Ad Manager or AdMob publisher.
	PublisherPlatform *PublisherConnectionPublisherPlatformEnum `json:"publisherPlatform,omitempty"`
}
