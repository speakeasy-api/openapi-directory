// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EncryptionAlgEnum string

const (
	EncryptionAlgEnumAes128Cbc EncryptionAlgEnum = "AES128_CBC"
	EncryptionAlgEnumAes192Cbc EncryptionAlgEnum = "AES192_CBC"
	EncryptionAlgEnumAes256Cbc EncryptionAlgEnum = "AES256_CBC"
	EncryptionAlgEnumNone      EncryptionAlgEnum = "NONE"
)

func (e EncryptionAlgEnum) ToPointer() *EncryptionAlgEnum {
	return &e
}

func (e *EncryptionAlgEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AES128_CBC":
		fallthrough
	case "AES192_CBC":
		fallthrough
	case "AES256_CBC":
		fallthrough
	case "NONE":
		*e = EncryptionAlgEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EncryptionAlgEnum: %v", v)
	}
}
