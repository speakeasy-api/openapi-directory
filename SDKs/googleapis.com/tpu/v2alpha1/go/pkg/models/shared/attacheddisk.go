// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AttachedDiskModeEnum - The mode in which to attach this disk. If not specified, the default is READ_WRITE mode. Only applicable to data_disks.
type AttachedDiskModeEnum string

const (
	AttachedDiskModeEnumDiskModeUnspecified AttachedDiskModeEnum = "DISK_MODE_UNSPECIFIED"
	AttachedDiskModeEnumReadWrite           AttachedDiskModeEnum = "READ_WRITE"
	AttachedDiskModeEnumReadOnly            AttachedDiskModeEnum = "READ_ONLY"
)

func (e *AttachedDiskModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DISK_MODE_UNSPECIFIED":
		fallthrough
	case "READ_WRITE":
		fallthrough
	case "READ_ONLY":
		*e = AttachedDiskModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AttachedDiskModeEnum: %s", s)
	}
}

// AttachedDisk - A node-attached disk resource. Next ID: 8;
type AttachedDisk struct {
	// The mode in which to attach this disk. If not specified, the default is READ_WRITE mode. Only applicable to data_disks.
	Mode *AttachedDiskModeEnum `json:"mode,omitempty"`
	// Specifies the full path to an existing disk. For example: "projects/my-project/zones/us-central1-c/disks/my-disk".
	SourceDisk *string `json:"sourceDisk,omitempty"`
}
