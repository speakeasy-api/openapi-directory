// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ChecksListForRefPathParams struct {
	Owner string `pathParam:"style=simple,explode=false,name=owner"`
	// ref parameter
	Ref  string `pathParam:"style=simple,explode=false,name=ref"`
	Repo string `pathParam:"style=simple,explode=false,name=repo"`
}

// ChecksListForRefFilterEnum - Filters check runs by their `completed_at` timestamp. Can be one of `latest` (returning the most recent check runs) or `all`.
type ChecksListForRefFilterEnum string

const (
	ChecksListForRefFilterEnumLatest ChecksListForRefFilterEnum = "latest"
	ChecksListForRefFilterEnumAll    ChecksListForRefFilterEnum = "all"
)

func (e *ChecksListForRefFilterEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "latest":
		fallthrough
	case "all":
		*e = ChecksListForRefFilterEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ChecksListForRefFilterEnum: %s", s)
	}
}

type ChecksListForRefQueryParams struct {
	AppID *int64 `queryParam:"style=form,explode=true,name=app_id"`
	// Returns check runs with the specified `name`.
	CheckName *string `queryParam:"style=form,explode=true,name=check_name"`
	// Filters check runs by their `completed_at` timestamp. Can be one of `latest` (returning the most recent check runs) or `all`.
	Filter *ChecksListForRefFilterEnum `queryParam:"style=form,explode=true,name=filter"`
	// Page number of the results to fetch.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Results per page (max 100)
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// Returns check runs with the specified `status`. Can be one of `queued`, `in_progress`, or `completed`.
	Status *shared.StatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type ChecksListForRefRequest struct {
	PathParams  ChecksListForRefPathParams
	QueryParams ChecksListForRefQueryParams
}

// ChecksListForRef200ApplicationJSON - Response
type ChecksListForRef200ApplicationJSON struct {
	CheckRuns  []shared.CheckRun `json:"check_runs"`
	TotalCount int64             `json:"total_count"`
}

type ChecksListForRefResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Response
	ChecksListForRef200ApplicationJSONObject *ChecksListForRef200ApplicationJSON
}
