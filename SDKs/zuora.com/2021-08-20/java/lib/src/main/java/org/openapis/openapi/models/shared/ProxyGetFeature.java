/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * ProxyGetFeature - Container for custom fields of a Feature object.
 * 
 */
public class ProxyGetFeature {
    /**
     *  Internal Zuora ID of the user who created the feature **Character limit**: 32 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CreatedById")
    public String createdById;
    public ProxyGetFeature withCreatedById(String createdById) {
        this.createdById = createdById;
        return this;
    }
    
    /**
     *  Date and time when the feature was created **Character limit**: 29 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedDate")
    public OffsetDateTime createdDate;
    public ProxyGetFeature withCreatedDate(OffsetDateTime createdDate) {
        this.createdDate = createdDate;
        return this;
    }
    
    /**
     *  Description of the feature **Character limit**: 1000 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public ProxyGetFeature withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     *  Unique code of the feature **Character limit**: 255 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FeatureCode")
    public String featureCode;
    public ProxyGetFeature withFeatureCode(String featureCode) {
        this.featureCode = featureCode;
        return this;
    }
    
    /**
     * Object identifier.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;
    public ProxyGetFeature withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     *  Name of the feature **Character limit**: 255 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public ProxyGetFeature withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     *  Status of the feature, Active or Inactive **Character limit**: 8 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public String status;
    public ProxyGetFeature withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     *  Internal Zuora ID of the user who last updated the feature **Character limit**: 32 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UpdatedById")
    public String updatedById;
    public ProxyGetFeature withUpdatedById(String updatedById) {
        this.updatedById = updatedById;
        return this;
    }
    
    /**
     *  Date and time when the feature was last updated **Character limit**: 29 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("UpdatedDate")
    public OffsetDateTime updatedDate;
    public ProxyGetFeature withUpdatedDate(OffsetDateTime updatedDate) {
        this.updatedDate = updatedDate;
        return this;
    }
    
}
