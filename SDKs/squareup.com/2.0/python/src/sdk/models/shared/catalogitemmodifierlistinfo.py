"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import catalogmodifieroverride as shared_catalogmodifieroverride
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CatalogItemModifierListInfo:
    r"""Options to control the properties of a `CatalogModifierList` applied to a `CatalogItem` instance."""
    
    modifier_list_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modifier_list_id') }})
    r"""The ID of the `CatalogModifierList` controlled by this `CatalogModifierListInfo`."""  
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""If `true`, enable this `CatalogModifierList`. The default value is `true`."""  
    max_selected_modifiers: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('max_selected_modifiers'), 'exclude': lambda f: f is None }})
    r"""If 0 or larger, the largest number of `CatalogModifier`s that can be selected from this `CatalogModifierList`."""  
    min_selected_modifiers: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('min_selected_modifiers'), 'exclude': lambda f: f is None }})
    r"""If 0 or larger, the smallest number of `CatalogModifier`s that must be selected from this `CatalogModifierList`."""  
    modifier_overrides: Optional[list[shared_catalogmodifieroverride.CatalogModifierOverride]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modifier_overrides'), 'exclude': lambda f: f is None }})
    r"""A set of `CatalogModifierOverride` objects that override whether a given `CatalogModifier` is enabled by default."""  
    