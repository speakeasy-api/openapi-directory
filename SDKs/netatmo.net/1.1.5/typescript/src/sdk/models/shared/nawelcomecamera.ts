/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * State of (flood-)light
 */
export enum NAWelcomeCameraLightModeStatusEnum {
  On = "on",
  Off = "off",
  Auto = "auto",
}

export class NAWelcomeCamera extends SpeakeasyBase {
  /**
   * If power supply is ok (on/off)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alim_status" })
  alimStatus?: string;

  /**
   * Id of the camera
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Only for scope access_camera. If Camera and application requesting the information are on the same IP (true/false)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "is_local" })
  isLocal?: boolean;

  /**
   * State of (flood-)light
   */
  @SpeakeasyMetadata()
  @Expose({ name: "light_mode_status" })
  lightModeStatus?: NAWelcomeCameraLightModeStatusEnum;

  /**
   * Name of the camera
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * If SD card status is ok (on/off)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sd_status" })
  sdStatus?: string;

  /**
   * If camera is monitoring (on/off)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * Type of the camera
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * Only for scope access_camera. Address of the camera
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vpn_url" })
  vpnUrl?: string;
}
