// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type BookkeepingEntrySetEntriesElement struct {
	// The bookkeeping account impacted by the entry.
	AccountID string `json:"account_id"`
	// The amount of the entry in minor units.
	Amount int64 `json:"amount"`
	// The entry identifier.
	ID string `json:"id"`
}

// BookkeepingEntrySetTypeEnum - A constant representing the object's type. For this resource it will always be `bookkeeping_entry_set`.
type BookkeepingEntrySetTypeEnum string

const (
	BookkeepingEntrySetTypeEnumBookkeepingEntrySet BookkeepingEntrySetTypeEnum = "bookkeeping_entry_set"
)

func (e BookkeepingEntrySetTypeEnum) ToPointer() *BookkeepingEntrySetTypeEnum {
	return &e
}

func (e *BookkeepingEntrySetTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "bookkeeping_entry_set":
		*e = BookkeepingEntrySetTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BookkeepingEntrySetTypeEnum: %v", v)
	}
}

// BookkeepingEntrySet - Entry Sets are accounting entries that are transactionally applied.
type BookkeepingEntrySet struct {
	// The timestamp of the entry set.
	Date time.Time `json:"date"`
	// The entries
	Entries []BookkeepingEntrySetEntriesElement `json:"entries"`
	// The entry set identifier.
	ID string `json:"id"`
	// The transaction identifier, if any.
	TransactionID string `json:"transaction_id"`
	// A constant representing the object's type. For this resource it will always be `bookkeeping_entry_set`.
	Type BookkeepingEntrySetTypeEnum `json:"type"`
}
