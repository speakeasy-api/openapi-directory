/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class GetReservationUtilizationResponse {
    
    public String contentType;
    public GetReservationUtilizationResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * DataUnavailableException
     */
    
    public Object dataUnavailableException;
    public GetReservationUtilizationResponse withDataUnavailableException(Object dataUnavailableException) {
        this.dataUnavailableException = dataUnavailableException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.GetReservationUtilizationResponse getReservationUtilizationResponse;
    public GetReservationUtilizationResponse withGetReservationUtilizationResponse(org.openapis.openapi.models.shared.GetReservationUtilizationResponse getReservationUtilizationResponse) {
        this.getReservationUtilizationResponse = getReservationUtilizationResponse;
        return this;
    }
    
    /**
     * InvalidNextTokenException
     */
    
    public Object invalidNextTokenException;
    public GetReservationUtilizationResponse withInvalidNextTokenException(Object invalidNextTokenException) {
        this.invalidNextTokenException = invalidNextTokenException;
        return this;
    }
    
    /**
     * LimitExceededException
     */
    
    public Object limitExceededException;
    public GetReservationUtilizationResponse withLimitExceededException(Object limitExceededException) {
        this.limitExceededException = limitExceededException;
        return this;
    }
    
    
    public Integer statusCode;
    public GetReservationUtilizationResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public GetReservationUtilizationResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
}
