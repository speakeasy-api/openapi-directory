/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class UpdateServiceUpdateServiceRequest {
    /**
     * DEPRECATED. The interval in seconds between consumption reports submission batches from client endpoints.
     */
    @SpeakeasyMetadata("form:name=ConsumptionReportInterval")
    public Long consumptionReportInterval;
    public UpdateServiceUpdateServiceRequest withConsumptionReportInterval(Long consumptionReportInterval) {
        this.consumptionReportInterval = consumptionReportInterval;
        return this;
    }
    
    /**
     * The channel role assigned to a channel creator when they join a new channel. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.
     */
    @SpeakeasyMetadata("form:name=DefaultChannelCreatorRoleSid")
    public String defaultChannelCreatorRoleSid;
    public UpdateServiceUpdateServiceRequest withDefaultChannelCreatorRoleSid(String defaultChannelCreatorRoleSid) {
        this.defaultChannelCreatorRoleSid = defaultChannelCreatorRoleSid;
        return this;
    }
    
    /**
     * The channel role assigned to users when they are added to a channel. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.
     */
    @SpeakeasyMetadata("form:name=DefaultChannelRoleSid")
    public String defaultChannelRoleSid;
    public UpdateServiceUpdateServiceRequest withDefaultChannelRoleSid(String defaultChannelRoleSid) {
        this.defaultChannelRoleSid = defaultChannelRoleSid;
        return this;
    }
    
    /**
     * The service role assigned to users when they are added to the service. See the [Roles endpoint](https://www.twilio.com/docs/chat/api/roles) for more details.
     */
    @SpeakeasyMetadata("form:name=DefaultServiceRoleSid")
    public String defaultServiceRoleSid;
    public UpdateServiceUpdateServiceRequest withDefaultServiceRoleSid(String defaultServiceRoleSid) {
        this.defaultServiceRoleSid = defaultServiceRoleSid;
        return this;
    }
    
    /**
     * A descriptive string that you create to describe the resource. It can be up to 64 characters long.
     */
    @SpeakeasyMetadata("form:name=FriendlyName")
    public String friendlyName;
    public UpdateServiceUpdateServiceRequest withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    /**
     * The maximum number of Members that can be added to Channels within this Service. Can be up to 1,000.
     */
    @SpeakeasyMetadata("form:name=Limits.ChannelMembers")
    public Long limitsChannelMembers;
    public UpdateServiceUpdateServiceRequest withLimitsChannelMembers(Long limitsChannelMembers) {
        this.limitsChannelMembers = limitsChannelMembers;
        return this;
    }
    
    /**
     * The maximum number of Channels Users can be a Member of within this Service. Can be up to 1,000.
     */
    @SpeakeasyMetadata("form:name=Limits.UserChannels")
    public Long limitsUserChannels;
    public UpdateServiceUpdateServiceRequest withLimitsUserChannels(Long limitsUserChannels) {
        this.limitsUserChannels = limitsUserChannels;
        return this;
    }
    
    /**
     * Whether to send a notification when a member is added to a channel. Can be: `true` or `false` and the default is `false`.
     */
    @SpeakeasyMetadata("form:name=Notifications.AddedToChannel.Enabled")
    public Boolean notificationsAddedToChannelEnabled;
    public UpdateServiceUpdateServiceRequest withNotificationsAddedToChannelEnabled(Boolean notificationsAddedToChannelEnabled) {
        this.notificationsAddedToChannelEnabled = notificationsAddedToChannelEnabled;
        return this;
    }
    
    /**
     * The template to use to create the notification text displayed when a member is added to a channel and `notifications.added_to_channel.enabled` is `true`.
     */
    @SpeakeasyMetadata("form:name=Notifications.AddedToChannel.Template")
    public String notificationsAddedToChannelTemplate;
    public UpdateServiceUpdateServiceRequest withNotificationsAddedToChannelTemplate(String notificationsAddedToChannelTemplate) {
        this.notificationsAddedToChannelTemplate = notificationsAddedToChannelTemplate;
        return this;
    }
    
    /**
     * Whether to send a notification when a user is invited to a channel. Can be: `true` or `false` and the default is `false`.
     */
    @SpeakeasyMetadata("form:name=Notifications.InvitedToChannel.Enabled")
    public Boolean notificationsInvitedToChannelEnabled;
    public UpdateServiceUpdateServiceRequest withNotificationsInvitedToChannelEnabled(Boolean notificationsInvitedToChannelEnabled) {
        this.notificationsInvitedToChannelEnabled = notificationsInvitedToChannelEnabled;
        return this;
    }
    
    /**
     * The template to use to create the notification text displayed when a user is invited to a channel and `notifications.invited_to_channel.enabled` is `true`.
     */
    @SpeakeasyMetadata("form:name=Notifications.InvitedToChannel.Template")
    public String notificationsInvitedToChannelTemplate;
    public UpdateServiceUpdateServiceRequest withNotificationsInvitedToChannelTemplate(String notificationsInvitedToChannelTemplate) {
        this.notificationsInvitedToChannelTemplate = notificationsInvitedToChannelTemplate;
        return this;
    }
    
    /**
     * Whether to send a notification when a new message is added to a channel. Can be: `true` or `false` and the default is `false`.
     */
    @SpeakeasyMetadata("form:name=Notifications.NewMessage.Enabled")
    public Boolean notificationsNewMessageEnabled;
    public UpdateServiceUpdateServiceRequest withNotificationsNewMessageEnabled(Boolean notificationsNewMessageEnabled) {
        this.notificationsNewMessageEnabled = notificationsNewMessageEnabled;
        return this;
    }
    
    /**
     * The template to use to create the notification text displayed when a new message is added to a channel and `notifications.new_message.enabled` is `true`.
     */
    @SpeakeasyMetadata("form:name=Notifications.NewMessage.Template")
    public String notificationsNewMessageTemplate;
    public UpdateServiceUpdateServiceRequest withNotificationsNewMessageTemplate(String notificationsNewMessageTemplate) {
        this.notificationsNewMessageTemplate = notificationsNewMessageTemplate;
        return this;
    }
    
    /**
     * Whether to send a notification to a user when they are removed from a channel. Can be: `true` or `false` and the default is `false`.
     */
    @SpeakeasyMetadata("form:name=Notifications.RemovedFromChannel.Enabled")
    public Boolean notificationsRemovedFromChannelEnabled;
    public UpdateServiceUpdateServiceRequest withNotificationsRemovedFromChannelEnabled(Boolean notificationsRemovedFromChannelEnabled) {
        this.notificationsRemovedFromChannelEnabled = notificationsRemovedFromChannelEnabled;
        return this;
    }
    
    /**
     * The template to use to create the notification text displayed to a user when they are removed from a channel and `notifications.removed_from_channel.enabled` is `true`.
     */
    @SpeakeasyMetadata("form:name=Notifications.RemovedFromChannel.Template")
    public String notificationsRemovedFromChannelTemplate;
    public UpdateServiceUpdateServiceRequest withNotificationsRemovedFromChannelTemplate(String notificationsRemovedFromChannelTemplate) {
        this.notificationsRemovedFromChannelTemplate = notificationsRemovedFromChannelTemplate;
        return this;
    }
    
    /**
     * The URL for post-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/api/chat/webhooks) for more details.
     */
    @SpeakeasyMetadata("form:name=PostWebhookUrl")
    public String postWebhookUrl;
    public UpdateServiceUpdateServiceRequest withPostWebhookUrl(String postWebhookUrl) {
        this.postWebhookUrl = postWebhookUrl;
        return this;
    }
    
    /**
     * The URL for pre-event webhooks, which are called by using the `webhook_method`. See [Webhook Events](https://www.twilio.com/docs/api/chat/webhooks) for more details.
     */
    @SpeakeasyMetadata("form:name=PreWebhookUrl")
    public String preWebhookUrl;
    public UpdateServiceUpdateServiceRequest withPreWebhookUrl(String preWebhookUrl) {
        this.preWebhookUrl = preWebhookUrl;
        return this;
    }
    
    /**
     * Whether to enable the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) for this Service instance. The default is `false`.
     */
    @SpeakeasyMetadata("form:name=ReachabilityEnabled")
    public Boolean reachabilityEnabled;
    public UpdateServiceUpdateServiceRequest withReachabilityEnabled(Boolean reachabilityEnabled) {
        this.reachabilityEnabled = reachabilityEnabled;
        return this;
    }
    
    /**
     * Whether to enable the [Message Consumption Horizon](https://www.twilio.com/docs/chat/consumption-horizon) feature. The default is `true`.
     */
    @SpeakeasyMetadata("form:name=ReadStatusEnabled")
    public Boolean readStatusEnabled;
    public UpdateServiceUpdateServiceRequest withReadStatusEnabled(Boolean readStatusEnabled) {
        this.readStatusEnabled = readStatusEnabled;
        return this;
    }
    
    /**
     * How long in seconds after a `started typing` event until clients should assume that user is no longer typing, even if no `ended typing` message was received.  The default is 5 seconds.
     */
    @SpeakeasyMetadata("form:name=TypingIndicatorTimeout")
    public Long typingIndicatorTimeout;
    public UpdateServiceUpdateServiceRequest withTypingIndicatorTimeout(Long typingIndicatorTimeout) {
        this.typingIndicatorTimeout = typingIndicatorTimeout;
        return this;
    }
    
    /**
     * The list of WebHook events that are enabled for this Service instance. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.
     */
    @SpeakeasyMetadata("form:name=WebhookFilters")
    public String[] webhookFilters;
    public UpdateServiceUpdateServiceRequest withWebhookFilters(String[] webhookFilters) {
        this.webhookFilters = webhookFilters;
        return this;
    }
    
    /**
     * The HTTP method to use for calls to the `pre_webhook_url` and `post_webhook_url` webhooks.  Can be: `POST` or `GET` and the default is `POST`. See [Webhook Events](https://www.twilio.com/docs/chat/webhook-events) for more details.
     */
    @SpeakeasyMetadata("form:name=WebhookMethod")
    public UpdateServiceUpdateServiceRequestWebhookMethodEnum webhookMethod;
    public UpdateServiceUpdateServiceRequest withWebhookMethod(UpdateServiceUpdateServiceRequestWebhookMethodEnum webhookMethod) {
        this.webhookMethod = webhookMethod;
        return this;
    }
    
    /**
     * The HTTP method to use when calling the `webhooks.on_channel_add.url`.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnChannelAdd.Method")
    public UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnum webhooksOnChannelAddMethod;
    public UpdateServiceUpdateServiceRequest withWebhooksOnChannelAddMethod(UpdateServiceUpdateServiceRequestWebhooksOnChannelAddMethodEnum webhooksOnChannelAddMethod) {
        this.webhooksOnChannelAddMethod = webhooksOnChannelAddMethod;
        return this;
    }
    
    /**
     * The URL of the webhook to call in response to the `on_channel_add` event using the `webhooks.on_channel_add.method` HTTP method.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnChannelAdd.Url")
    public String webhooksOnChannelAddUrl;
    public UpdateServiceUpdateServiceRequest withWebhooksOnChannelAddUrl(String webhooksOnChannelAddUrl) {
        this.webhooksOnChannelAddUrl = webhooksOnChannelAddUrl;
        return this;
    }
    
    /**
     * The URL of the webhook to call in response to the `on_channel_added` event`.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnChannelAdded.Method")
    public UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnum webhooksOnChannelAddedMethod;
    public UpdateServiceUpdateServiceRequest withWebhooksOnChannelAddedMethod(UpdateServiceUpdateServiceRequestWebhooksOnChannelAddedMethodEnum webhooksOnChannelAddedMethod) {
        this.webhooksOnChannelAddedMethod = webhooksOnChannelAddedMethod;
        return this;
    }
    
    /**
     * The URL of the webhook to call in response to the `on_channel_added` event using the `webhooks.on_channel_added.method` HTTP method.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnChannelAdded.Url")
    public String webhooksOnChannelAddedUrl;
    public UpdateServiceUpdateServiceRequest withWebhooksOnChannelAddedUrl(String webhooksOnChannelAddedUrl) {
        this.webhooksOnChannelAddedUrl = webhooksOnChannelAddedUrl;
        return this;
    }
    
    /**
     * The HTTP method to use when calling the `webhooks.on_channel_destroy.url`.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnChannelDestroy.Method")
    public UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnum webhooksOnChannelDestroyMethod;
    public UpdateServiceUpdateServiceRequest withWebhooksOnChannelDestroyMethod(UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyMethodEnum webhooksOnChannelDestroyMethod) {
        this.webhooksOnChannelDestroyMethod = webhooksOnChannelDestroyMethod;
        return this;
    }
    
    /**
     * The URL of the webhook to call in response to the `on_channel_destroy` event using the `webhooks.on_channel_destroy.method` HTTP method.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnChannelDestroy.Url")
    public String webhooksOnChannelDestroyUrl;
    public UpdateServiceUpdateServiceRequest withWebhooksOnChannelDestroyUrl(String webhooksOnChannelDestroyUrl) {
        this.webhooksOnChannelDestroyUrl = webhooksOnChannelDestroyUrl;
        return this;
    }
    
    /**
     * The HTTP method to use when calling the `webhooks.on_channel_destroyed.url`.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnChannelDestroyed.Method")
    public UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnum webhooksOnChannelDestroyedMethod;
    public UpdateServiceUpdateServiceRequest withWebhooksOnChannelDestroyedMethod(UpdateServiceUpdateServiceRequestWebhooksOnChannelDestroyedMethodEnum webhooksOnChannelDestroyedMethod) {
        this.webhooksOnChannelDestroyedMethod = webhooksOnChannelDestroyedMethod;
        return this;
    }
    
    /**
     * The URL of the webhook to call in response to the `on_channel_added` event using the `webhooks.on_channel_destroyed.method` HTTP method.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnChannelDestroyed.Url")
    public String webhooksOnChannelDestroyedUrl;
    public UpdateServiceUpdateServiceRequest withWebhooksOnChannelDestroyedUrl(String webhooksOnChannelDestroyedUrl) {
        this.webhooksOnChannelDestroyedUrl = webhooksOnChannelDestroyedUrl;
        return this;
    }
    
    /**
     * The HTTP method to use when calling the `webhooks.on_channel_update.url`.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnChannelUpdate.Method")
    public UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnum webhooksOnChannelUpdateMethod;
    public UpdateServiceUpdateServiceRequest withWebhooksOnChannelUpdateMethod(UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdateMethodEnum webhooksOnChannelUpdateMethod) {
        this.webhooksOnChannelUpdateMethod = webhooksOnChannelUpdateMethod;
        return this;
    }
    
    /**
     * The URL of the webhook to call in response to the `on_channel_update` event using the `webhooks.on_channel_update.method` HTTP method.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnChannelUpdate.Url")
    public String webhooksOnChannelUpdateUrl;
    public UpdateServiceUpdateServiceRequest withWebhooksOnChannelUpdateUrl(String webhooksOnChannelUpdateUrl) {
        this.webhooksOnChannelUpdateUrl = webhooksOnChannelUpdateUrl;
        return this;
    }
    
    /**
     * The HTTP method to use when calling the `webhooks.on_channel_updated.url`.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnChannelUpdated.Method")
    public UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnum webhooksOnChannelUpdatedMethod;
    public UpdateServiceUpdateServiceRequest withWebhooksOnChannelUpdatedMethod(UpdateServiceUpdateServiceRequestWebhooksOnChannelUpdatedMethodEnum webhooksOnChannelUpdatedMethod) {
        this.webhooksOnChannelUpdatedMethod = webhooksOnChannelUpdatedMethod;
        return this;
    }
    
    /**
     * The URL of the webhook to call in response to the `on_channel_updated` event using the `webhooks.on_channel_updated.method` HTTP method.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnChannelUpdated.Url")
    public String webhooksOnChannelUpdatedUrl;
    public UpdateServiceUpdateServiceRequest withWebhooksOnChannelUpdatedUrl(String webhooksOnChannelUpdatedUrl) {
        this.webhooksOnChannelUpdatedUrl = webhooksOnChannelUpdatedUrl;
        return this;
    }
    
    /**
     * The HTTP method to use when calling the `webhooks.on_member_add.url`.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMemberAdd.Method")
    public UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnum webhooksOnMemberAddMethod;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMemberAddMethod(UpdateServiceUpdateServiceRequestWebhooksOnMemberAddMethodEnum webhooksOnMemberAddMethod) {
        this.webhooksOnMemberAddMethod = webhooksOnMemberAddMethod;
        return this;
    }
    
    /**
     * The URL of the webhook to call in response to the `on_member_add` event using the `webhooks.on_member_add.method` HTTP method.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMemberAdd.Url")
    public String webhooksOnMemberAddUrl;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMemberAddUrl(String webhooksOnMemberAddUrl) {
        this.webhooksOnMemberAddUrl = webhooksOnMemberAddUrl;
        return this;
    }
    
    /**
     * The HTTP method to use when calling the `webhooks.on_channel_updated.url`.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMemberAdded.Method")
    public UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnum webhooksOnMemberAddedMethod;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMemberAddedMethod(UpdateServiceUpdateServiceRequestWebhooksOnMemberAddedMethodEnum webhooksOnMemberAddedMethod) {
        this.webhooksOnMemberAddedMethod = webhooksOnMemberAddedMethod;
        return this;
    }
    
    /**
     * The URL of the webhook to call in response to the `on_channel_updated` event using the `webhooks.on_channel_updated.method` HTTP method.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMemberAdded.Url")
    public String webhooksOnMemberAddedUrl;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMemberAddedUrl(String webhooksOnMemberAddedUrl) {
        this.webhooksOnMemberAddedUrl = webhooksOnMemberAddedUrl;
        return this;
    }
    
    /**
     * The HTTP method to use when calling the `webhooks.on_member_remove.url`.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMemberRemove.Method")
    public UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnum webhooksOnMemberRemoveMethod;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMemberRemoveMethod(UpdateServiceUpdateServiceRequestWebhooksOnMemberRemoveMethodEnum webhooksOnMemberRemoveMethod) {
        this.webhooksOnMemberRemoveMethod = webhooksOnMemberRemoveMethod;
        return this;
    }
    
    /**
     * The URL of the webhook to call in response to the `on_member_remove` event using the `webhooks.on_member_remove.method` HTTP method.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMemberRemove.Url")
    public String webhooksOnMemberRemoveUrl;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMemberRemoveUrl(String webhooksOnMemberRemoveUrl) {
        this.webhooksOnMemberRemoveUrl = webhooksOnMemberRemoveUrl;
        return this;
    }
    
    /**
     * The HTTP method to use when calling the `webhooks.on_member_removed.url`.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMemberRemoved.Method")
    public UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnum webhooksOnMemberRemovedMethod;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMemberRemovedMethod(UpdateServiceUpdateServiceRequestWebhooksOnMemberRemovedMethodEnum webhooksOnMemberRemovedMethod) {
        this.webhooksOnMemberRemovedMethod = webhooksOnMemberRemovedMethod;
        return this;
    }
    
    /**
     * The URL of the webhook to call in response to the `on_member_removed` event using the `webhooks.on_member_removed.method` HTTP method.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMemberRemoved.Url")
    public String webhooksOnMemberRemovedUrl;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMemberRemovedUrl(String webhooksOnMemberRemovedUrl) {
        this.webhooksOnMemberRemovedUrl = webhooksOnMemberRemovedUrl;
        return this;
    }
    
    /**
     * The HTTP method to use when calling the `webhooks.on_message_remove.url`.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMessageRemove.Method")
    public UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnum webhooksOnMessageRemoveMethod;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMessageRemoveMethod(UpdateServiceUpdateServiceRequestWebhooksOnMessageRemoveMethodEnum webhooksOnMessageRemoveMethod) {
        this.webhooksOnMessageRemoveMethod = webhooksOnMessageRemoveMethod;
        return this;
    }
    
    /**
     * The URL of the webhook to call in response to the `on_message_remove` event using the `webhooks.on_message_remove.method` HTTP method.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMessageRemove.Url")
    public String webhooksOnMessageRemoveUrl;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMessageRemoveUrl(String webhooksOnMessageRemoveUrl) {
        this.webhooksOnMessageRemoveUrl = webhooksOnMessageRemoveUrl;
        return this;
    }
    
    /**
     * The HTTP method to use when calling the `webhooks.on_message_removed.url`.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMessageRemoved.Method")
    public UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnum webhooksOnMessageRemovedMethod;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMessageRemovedMethod(UpdateServiceUpdateServiceRequestWebhooksOnMessageRemovedMethodEnum webhooksOnMessageRemovedMethod) {
        this.webhooksOnMessageRemovedMethod = webhooksOnMessageRemovedMethod;
        return this;
    }
    
    /**
     * The URL of the webhook to call in response to the `on_message_removed` event using the `webhooks.on_message_removed.method` HTTP method.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMessageRemoved.Url")
    public String webhooksOnMessageRemovedUrl;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMessageRemovedUrl(String webhooksOnMessageRemovedUrl) {
        this.webhooksOnMessageRemovedUrl = webhooksOnMessageRemovedUrl;
        return this;
    }
    
    /**
     * The HTTP method to use when calling the `webhooks.on_message_send.url`.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMessageSend.Method")
    public UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnum webhooksOnMessageSendMethod;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMessageSendMethod(UpdateServiceUpdateServiceRequestWebhooksOnMessageSendMethodEnum webhooksOnMessageSendMethod) {
        this.webhooksOnMessageSendMethod = webhooksOnMessageSendMethod;
        return this;
    }
    
    /**
     * The URL of the webhook to call in response to the `on_message_send` event using the `webhooks.on_message_send.method` HTTP method.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMessageSend.Url")
    public String webhooksOnMessageSendUrl;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMessageSendUrl(String webhooksOnMessageSendUrl) {
        this.webhooksOnMessageSendUrl = webhooksOnMessageSendUrl;
        return this;
    }
    
    /**
     * The URL of the webhook to call in response to the `on_message_sent` event`.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMessageSent.Method")
    public UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnum webhooksOnMessageSentMethod;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMessageSentMethod(UpdateServiceUpdateServiceRequestWebhooksOnMessageSentMethodEnum webhooksOnMessageSentMethod) {
        this.webhooksOnMessageSentMethod = webhooksOnMessageSentMethod;
        return this;
    }
    
    /**
     * The URL of the webhook to call in response to the `on_message_sent` event using the `webhooks.on_message_sent.method` HTTP method.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMessageSent.Url")
    public String webhooksOnMessageSentUrl;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMessageSentUrl(String webhooksOnMessageSentUrl) {
        this.webhooksOnMessageSentUrl = webhooksOnMessageSentUrl;
        return this;
    }
    
    /**
     * The HTTP method to use when calling the `webhooks.on_message_update.url`.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMessageUpdate.Method")
    public UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnum webhooksOnMessageUpdateMethod;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMessageUpdateMethod(UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdateMethodEnum webhooksOnMessageUpdateMethod) {
        this.webhooksOnMessageUpdateMethod = webhooksOnMessageUpdateMethod;
        return this;
    }
    
    /**
     * The URL of the webhook to call in response to the `on_message_update` event using the `webhooks.on_message_update.method` HTTP method.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMessageUpdate.Url")
    public String webhooksOnMessageUpdateUrl;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMessageUpdateUrl(String webhooksOnMessageUpdateUrl) {
        this.webhooksOnMessageUpdateUrl = webhooksOnMessageUpdateUrl;
        return this;
    }
    
    /**
     * The HTTP method to use when calling the `webhooks.on_message_updated.url`.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMessageUpdated.Method")
    public UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnum webhooksOnMessageUpdatedMethod;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMessageUpdatedMethod(UpdateServiceUpdateServiceRequestWebhooksOnMessageUpdatedMethodEnum webhooksOnMessageUpdatedMethod) {
        this.webhooksOnMessageUpdatedMethod = webhooksOnMessageUpdatedMethod;
        return this;
    }
    
    /**
     * The URL of the webhook to call in response to the `on_message_updated` event using the `webhooks.on_message_updated.method` HTTP method.
     */
    @SpeakeasyMetadata("form:name=Webhooks.OnMessageUpdated.Url")
    public String webhooksOnMessageUpdatedUrl;
    public UpdateServiceUpdateServiceRequest withWebhooksOnMessageUpdatedUrl(String webhooksOnMessageUpdatedUrl) {
        this.webhooksOnMessageUpdatedUrl = webhooksOnMessageUpdatedUrl;
        return this;
    }
    
}
