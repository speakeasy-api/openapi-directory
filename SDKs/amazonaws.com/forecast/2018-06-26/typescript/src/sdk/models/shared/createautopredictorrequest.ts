/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataConfig } from "./dataconfig";
import { EncryptionConfig } from "./encryptionconfig";
import { MonitorConfig } from "./monitorconfig";
import { OptimizationMetricEnum } from "./optimizationmetricenum";
import { Tag } from "./tag";
import { TimeAlignmentBoundary } from "./timealignmentboundary";
import { Expose, Type } from "class-transformer";

export class CreateAutoPredictorRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DataConfig" })
  @Type(() => DataConfig)
  dataConfig?: DataConfig;

  /**
   * An Key Management Service (KMS) key and an Identity and Access Management (IAM) role that Amazon Forecast can assume to access the key. You can specify this optional object in the <a>CreateDataset</a> and <a>CreatePredictor</a> requests.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EncryptionConfig" })
  @Type(() => EncryptionConfig)
  encryptionConfig?: EncryptionConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "ExplainPredictor" })
  explainPredictor?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "ForecastDimensions" })
  forecastDimensions?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ForecastFrequency" })
  forecastFrequency?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ForecastHorizon" })
  forecastHorizon?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ForecastTypes" })
  forecastTypes?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "MonitorConfig" })
  @Type(() => MonitorConfig)
  monitorConfig?: MonitorConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "OptimizationMetric" })
  optimizationMetric?: OptimizationMetricEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "PredictorName" })
  predictorName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ReferencePredictorArn" })
  referencePredictorArn?: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "TimeAlignmentBoundary" })
  @Type(() => TimeAlignmentBoundary)
  timeAlignmentBoundary?: TimeAlignmentBoundary;
}
