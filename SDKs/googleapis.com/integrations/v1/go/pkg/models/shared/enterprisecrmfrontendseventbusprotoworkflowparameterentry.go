// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum - The data type of the parameter.
type EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum string

const (
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnumDataTypeUnspecified   EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum = "DATA_TYPE_UNSPECIFIED"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnumStringValue           EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum = "STRING_VALUE"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnumIntValue              EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum = "INT_VALUE"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnumDoubleValue           EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum = "DOUBLE_VALUE"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnumBooleanValue          EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum = "BOOLEAN_VALUE"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnumProtoValue            EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum = "PROTO_VALUE"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnumSerializedObjectValue EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum = "SERIALIZED_OBJECT_VALUE"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnumStringArray           EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum = "STRING_ARRAY"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnumIntArray              EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum = "INT_ARRAY"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnumDoubleArray           EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum = "DOUBLE_ARRAY"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnumProtoArray            EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum = "PROTO_ARRAY"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnumProtoEnum             EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum = "PROTO_ENUM"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnumBooleanArray          EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum = "BOOLEAN_ARRAY"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnumProtoEnumArray        EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum = "PROTO_ENUM_ARRAY"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnumBytes                 EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum = "BYTES"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnumBytesArray            EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum = "BYTES_ARRAY"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnumNonSerializableObject EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum = "NON_SERIALIZABLE_OBJECT"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnumJSONValue             EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum = "JSON_VALUE"
)

func (e EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum) ToPointer() *EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum {
	return &e
}

func (e *EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DATA_TYPE_UNSPECIFIED":
		fallthrough
	case "STRING_VALUE":
		fallthrough
	case "INT_VALUE":
		fallthrough
	case "DOUBLE_VALUE":
		fallthrough
	case "BOOLEAN_VALUE":
		fallthrough
	case "PROTO_VALUE":
		fallthrough
	case "SERIALIZED_OBJECT_VALUE":
		fallthrough
	case "STRING_ARRAY":
		fallthrough
	case "INT_ARRAY":
		fallthrough
	case "DOUBLE_ARRAY":
		fallthrough
	case "PROTO_ARRAY":
		fallthrough
	case "PROTO_ENUM":
		fallthrough
	case "BOOLEAN_ARRAY":
		fallthrough
	case "PROTO_ENUM_ARRAY":
		fallthrough
	case "BYTES":
		fallthrough
	case "BYTES_ARRAY":
		fallthrough
	case "NON_SERIALIZABLE_OBJECT":
		fallthrough
	case "JSON_VALUE":
		*e = EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum: %v", v)
	}
}

// EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnum - Specifies the input/output type for the parameter.
type EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnum string

const (
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnumInOutTypeUnspecified EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnum = "IN_OUT_TYPE_UNSPECIFIED"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnumIn                   EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnum = "IN"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnumOut                  EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnum = "OUT"
	EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnumInOut                EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnum = "IN_OUT"
)

func (e EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnum) ToPointer() *EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnum {
	return &e
}

func (e *EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "IN_OUT_TYPE_UNSPECIFIED":
		fallthrough
	case "IN":
		fallthrough
	case "OUT":
		fallthrough
	case "IN_OUT":
		*e = EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnum: %v", v)
	}
}

type EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry struct {
	// Attributes are additional options that can be associated with each event property. For more information, see
	Attributes *EnterpriseCrmEventbusProtoAttributes `json:"attributes,omitempty"`
	// Child parameters nested within this parameter. This field only applies to protobuf parameters
	Children []EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntry `json:"children,omitempty"`
	// The data type of the parameter.
	DataType *EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryDataTypeEnum `json:"dataType,omitempty"`
	// To support various types of parameter values. Next available id: 14
	DefaultValue *EnterpriseCrmFrontendsEventbusProtoParameterValueType `json:"defaultValue,omitempty"`
	// Specifies the input/output type for the parameter.
	InOutType *EnterpriseCrmFrontendsEventbusProtoWorkflowParameterEntryInOutTypeEnum `json:"inOutType,omitempty"`
	// Whether this parameter is a transient parameter.
	IsTransient *bool `json:"isTransient,omitempty"`
	// This schema will be used to validate runtime JSON-typed values of this parameter.
	JSONSchema *string `json:"jsonSchema,omitempty"`
	// Key is used to retrieve the corresponding parameter value. This should be unique for a given fired event. These parameters must be predefined in the workflow definition.
	Key *string `json:"key,omitempty"`
	// The name (without prefix) to be displayed in the UI for this parameter. E.g. if the key is "foo.bar.myName", then the name would be "myName".
	Name *string `json:"name,omitempty"`
	// Represents a node identifier (type + id). Next highest id: 3
	ProducedBy *EnterpriseCrmEventbusProtoNodeIdentifier `json:"producedBy,omitempty"`
	Producer   *string                                   `json:"producer,omitempty"`
	// The name of the protobuf type if the parameter has a protobuf data type.
	ProtoDefName *string `json:"protoDefName,omitempty"`
	// If the data type is of type proto or proto array, this field needs to be populated with the fully qualified proto name. This message, for example, would be "enterprise.crm.frontends.eventbus.proto.WorkflowParameterEntry".
	ProtoDefPath *string `json:"protoDefPath,omitempty"`
}
