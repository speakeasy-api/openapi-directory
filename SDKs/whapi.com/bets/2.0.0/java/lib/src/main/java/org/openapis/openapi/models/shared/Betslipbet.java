/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class Betslipbet {
    /**
     * The total aggregated odds, as a decimal, of the multiple bet placed
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("betMultiplier")
    public Double betMultiplier;

    public Betslipbet withBetMultiplier(Double betMultiplier) {
        this.betMultiplier = betMultiplier;
        return this;
    }
    
    /**
     * Free bets that can be used with this bet
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("freeBets")
    public FreeBetDetail[] freeBets;

    public Betslipbet withFreeBets(FreeBetDetail[] freeBets) {
        this.freeBets = freeBets;
        return this;
    }
    
    @JsonProperty("legs")
    public Betslipleg[] legs;

    public Betslipbet withLegs(Betslipleg[] legs) {
        this.legs = legs;
        return this;
    }
    
    /**
     * Maximum stake allowable on the bet. For example: 2500.00 (GBP)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxStake")
    public Double maxStake;

    public Betslipbet withMaxStake(Double maxStake) {
        this.maxStake = maxStake;
        return this;
    }
    
    /**
     * Minumum stake allowable on the bet. For example: 0.05 (GBP)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minStake")
    public Double minStake;

    public Betslipbet withMinStake(Double minStake) {
        this.minStake = minStake;
        return this;
    }
    
    /**
     * The number of lines (selections) of a bet
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numLines")
    public Double numLines;

    public Betslipbet withNumLines(Double numLines) {
        this.numLines = numLines;
        return this;
    }
    
    /**
     * The bet number
     */
    @JsonProperty("number")
    public Long number;

    public Betslipbet withNumber(Long number) {
        this.number = number;
        return this;
    }
    
    /**
     * The bet type code of the bet. For example: TBL (Treble)
     */
    @JsonProperty("typeCode")
    public String typeCode;

    public Betslipbet withTypeCode(String typeCode) {
        this.typeCode = typeCode;
        return this;
    }
    
    /**
     * The TypeCode of the bet. For example: TBL (Treble)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("typeName")
    public String typeName;

    public Betslipbet withTypeName(String typeName) {
        this.typeName = typeName;
        return this;
    }
    
    public Betslipbet(@JsonProperty("legs") Betslipleg[] legs, @JsonProperty("number") Long number, @JsonProperty("typeCode") String typeCode) {
        this.legs = legs;
        this.number = number;
        this.typeCode = typeCode;
  }
}
