<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * StringFilter - The filter for string
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class StringFilter
{
    /**
     * If true, the string value is case sensitive.
     * 
     * @var ?bool $caseSensitive
     */
	#[\JMS\Serializer\Annotation\SerializedName('caseSensitive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $caseSensitive = null;
    
    /**
     * The match type for this filter.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StringFilterMatchTypeEnum $matchType
     */
	#[\JMS\Serializer\Annotation\SerializedName('matchType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\StringFilterMatchTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StringFilterMatchTypeEnum $matchType = null;
    
    /**
     * The string value used for the matching.
     * 
     * @var ?string $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $value = null;
    
	public function __construct()
	{
		$this->caseSensitive = null;
		$this->matchType = null;
		$this->value = null;
	}
}
