/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class UploadFileRequest {
    @SpeakeasyMetadata("request:mediaType=multipart/form-data")
    public UploadFileRequestBody requestBody;
    public UploadFileRequest withRequestBody(UploadFileRequestBody requestBody) {
        this.requestBody = requestBody;
        return this;
    }
    
    /**
     * True if a file with the same name is found in the designated path, should be overwritten. False if different file names should be generated. 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=allowOverwrite")
    public Boolean allowOverwrite;
    public UploadFileRequest withAllowOverwrite(Boolean allowOverwrite) {
        this.allowOverwrite = allowOverwrite;
        return this;
    }
    
    /**
     * Access token required to make the API call.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=ev-access-token")
    public String evAccessToken;
    public UploadFileRequest withEvAccessToken(String evAccessToken) {
        this.evAccessToken = evAccessToken;
        return this;
    }
    
    /**
     * API Key required to make the API call.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=ev-api-key")
    public String evApiKey;
    public UploadFileRequest withEvApiKey(String evApiKey) {
        this.evApiKey = evApiKey;
        return this;
    }
    
    /**
     * File size, in bits, of the file being uploaded.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fileSize")
    public Long fileSize;
    public UploadFileRequest withFileSize(Long fileSize) {
        this.fileSize = fileSize;
        return this;
    }
    
    /**
     * Allows a file upload to resume at a certain number of bytes.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=offsetBytes")
    public Long offsetBytes;
    public UploadFileRequest withOffsetBytes(Long offsetBytes) {
        this.offsetBytes = offsetBytes;
        return this;
    }
    
    /**
     * Destination path for the file being uploaded, including the file name.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=path")
    public String path;
    public UploadFileRequest withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * True if upload resume is supported, false if it isn't.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=resume")
    public Boolean resume;
    public UploadFileRequest withResume(Boolean resume) {
        this.resume = resume;
        return this;
    }
    
}
