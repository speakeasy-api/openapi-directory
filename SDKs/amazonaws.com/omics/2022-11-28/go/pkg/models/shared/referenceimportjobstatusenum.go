// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReferenceImportJobStatusEnum string

const (
	ReferenceImportJobStatusEnumSubmitted             ReferenceImportJobStatusEnum = "SUBMITTED"
	ReferenceImportJobStatusEnumInProgress            ReferenceImportJobStatusEnum = "IN_PROGRESS"
	ReferenceImportJobStatusEnumCancelling            ReferenceImportJobStatusEnum = "CANCELLING"
	ReferenceImportJobStatusEnumCancelled             ReferenceImportJobStatusEnum = "CANCELLED"
	ReferenceImportJobStatusEnumFailed                ReferenceImportJobStatusEnum = "FAILED"
	ReferenceImportJobStatusEnumCompleted             ReferenceImportJobStatusEnum = "COMPLETED"
	ReferenceImportJobStatusEnumCompletedWithFailures ReferenceImportJobStatusEnum = "COMPLETED_WITH_FAILURES"
)

func (e ReferenceImportJobStatusEnum) ToPointer() *ReferenceImportJobStatusEnum {
	return &e
}

func (e *ReferenceImportJobStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SUBMITTED":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "CANCELLING":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "FAILED":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "COMPLETED_WITH_FAILURES":
		*e = ReferenceImportJobStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReferenceImportJobStatusEnum: %v", v)
	}
}
