/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Item } from "./item";
import { Metadatum } from "./metadatum";
import { Plan } from "./plan";
import { PurchaseSettings } from "./purchasesettings";
import { ShippingAddress } from "./shippingaddress";
import { Expose, Type } from "class-transformer";

export class UpdateSubscriptionsbySubscriptionIdRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "isSkipped" })
  isSkipped: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "item" })
  @Type(() => Item)
  item: Item;

  @SpeakeasyMetadata({ elemType: Metadatum })
  @Expose({ name: "metadata" })
  @Type(() => Metadatum)
  metadata: Metadatum[];

  @SpeakeasyMetadata()
  @Expose({ name: "plan" })
  @Type(() => Plan)
  plan: Plan;

  @SpeakeasyMetadata()
  @Expose({ name: "purchaseSettings" })
  @Type(() => PurchaseSettings)
  purchaseSettings: PurchaseSettings;

  @SpeakeasyMetadata()
  @Expose({ name: "shippingAddress" })
  @Type(() => ShippingAddress)
  shippingAddress: ShippingAddress;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;
}
