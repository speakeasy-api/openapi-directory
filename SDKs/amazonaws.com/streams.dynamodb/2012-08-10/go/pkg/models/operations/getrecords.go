// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetRecordsXAmzTargetEnum
type GetRecordsXAmzTargetEnum string

const (
	GetRecordsXAmzTargetEnumDynamoDbStreams20120810GetRecords GetRecordsXAmzTargetEnum = "DynamoDBStreams_20120810.GetRecords"
)

func (e *GetRecordsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DynamoDBStreams_20120810.GetRecords":
		*e = GetRecordsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetRecordsXAmzTargetEnum: %s", s)
	}
}

type GetRecordsHeaders struct {
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetRecordsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetRecordsRequest struct {
	Headers GetRecordsHeaders
	Request shared.GetRecordsInput `request:"mediaType=application/json"`
}

type GetRecordsResponse struct {
	ContentType string
	// ExpiredIteratorException
	ExpiredIteratorException interface{}
	// Success
	GetRecordsOutput *shared.GetRecordsOutput
	// InternalServerError
	InternalServerError interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TrimmedDataAccessException
	TrimmedDataAccessException interface{}
}
