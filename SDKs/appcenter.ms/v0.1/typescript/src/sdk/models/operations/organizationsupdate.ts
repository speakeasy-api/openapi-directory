/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class OrganizationsUpdateSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

/**
 * The data for the org
 */
export class OrganizationsUpdateRequestBody extends SpeakeasyBase {
  /**
   * The full (friendly) name of the organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  /**
   * The name of the organization used in URLs
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export class OrganizationsUpdateRequest extends SpeakeasyBase {
  /**
   * The data for the org
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: OrganizationsUpdateRequestBody;

  /**
   * The organization's name
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=org_name",
  })
  orgName: string;
}

export enum OrganizationsUpdateDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class OrganizationsUpdateDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: OrganizationsUpdateDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error
 */
export class OrganizationsUpdateDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => OrganizationsUpdateDefaultApplicationJSONError)
  error: OrganizationsUpdateDefaultApplicationJSONError;
}

/**
 * The creation origin of this organization
 */
export enum OrganizationsUpdate200ApplicationJSONOriginEnum {
  Appcenter = "appcenter",
  Hockeyapp = "hockeyapp",
}

/**
 * Success
 */
export class OrganizationsUpdate200ApplicationJSON extends SpeakeasyBase {
  /**
   * The URL to a user-uploaded Avatar image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avatar_url" })
  avatarUrl?: string;

  /**
   * The creation date of this organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt: string;

  /**
   * The display name of the organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName: string;

  /**
   * The internal unique id (UUID) of the organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The slug name of the organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The creation origin of this organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "origin" })
  origin: OrganizationsUpdate200ApplicationJSONOriginEnum;

  /**
   * The date the organization was last updated at
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt: string;
}

export class OrganizationsUpdateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  organizationsUpdate200ApplicationJSONObject?: OrganizationsUpdate200ApplicationJSON;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  organizationsUpdateDefaultApplicationJSONObject?: OrganizationsUpdateDefaultApplicationJSON;
}
