/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudRetailV2betaCompletionDataInputConfig } from "./googlecloudretailv2betacompletiondatainputconfig";
import { Expose, Type } from "class-transformer";

/**
 * Request message for ImportCompletionData methods.
 */
export class GoogleCloudRetailV2betaImportCompletionDataRequest extends SpeakeasyBase {
  /**
   * The input config source for completion data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inputConfig" })
  @Type(() => GoogleCloudRetailV2betaCompletionDataInputConfig)
  inputConfig?: GoogleCloudRetailV2betaCompletionDataInputConfig;

  /**
   * Pub/Sub topic for receiving notification. If this field is set, when the import is finished, a notification is sent to specified Pub/Sub topic. The message data is JSON string of a Operation. Format of the Pub/Sub topic is `projects/{project}/topics/{topic}`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "notificationPubsubTopic" })
  notificationPubsubTopic?: string;
}
