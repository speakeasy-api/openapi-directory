"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import pathoverride as shared_pathoverride
from ..shared import queryoverride as shared_queryoverride
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class URIOverrideSchemeEnum(str, Enum):
    r"""Scheme override. When specified, the task URI scheme is replaced by the provided value (HTTP or HTTPS)."""
    SCHEME_UNSPECIFIED = 'SCHEME_UNSPECIFIED'
    HTTP = 'HTTP'
    HTTPS = 'HTTPS'

class URIOverrideURIOverrideEnforceModeEnum(str, Enum):
    r"""URI Override Enforce Mode When specified, determines the Target UriOverride mode. If not specified, it defaults to ALWAYS."""
    URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED = 'URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED'
    IF_NOT_EXISTS = 'IF_NOT_EXISTS'
    ALWAYS = 'ALWAYS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class URIOverride:
    r"""URI Override. When specified, all the HTTP tasks inside the queue will be partially or fully overridden depending on the configured values."""
    
    host: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('host'), 'exclude': lambda f: f is None }})
    r"""Host override. When specified, replaces the host part of the task URL. For example, if the task URL is \\"https://www.google.com,\\" and host value is set to \\"example.net\\", the overridden URI will be changed to \\"https://example.net.\\" Host value cannot be an empty string (INVALID_ARGUMENT)."""  
    path_override: Optional[shared_pathoverride.PathOverride] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pathOverride'), 'exclude': lambda f: f is None }})
    r"""PathOverride. Path message defines path override for HTTP targets."""  
    port: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('port'), 'exclude': lambda f: f is None }})
    r"""Port override. When specified, replaces the port part of the task URI. For instance, for a URI http://www.google.com/foo and port=123, the overridden URI becomes http://www.google.com:123/foo. Note that the port value must be a positive integer. Setting the port to 0 (Zero) clears the URI port."""  
    query_override: Optional[shared_queryoverride.QueryOverride] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('queryOverride'), 'exclude': lambda f: f is None }})
    r"""QueryOverride. Query message defines query override for HTTP targets."""  
    scheme: Optional[URIOverrideSchemeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scheme'), 'exclude': lambda f: f is None }})
    r"""Scheme override. When specified, the task URI scheme is replaced by the provided value (HTTP or HTTPS)."""  
    uri_override_enforce_mode: Optional[URIOverrideURIOverrideEnforceModeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uriOverrideEnforceMode'), 'exclude': lambda f: f is None }})
    r"""URI Override Enforce Mode When specified, determines the Target UriOverride mode. If not specified, it defaults to ALWAYS."""  
    