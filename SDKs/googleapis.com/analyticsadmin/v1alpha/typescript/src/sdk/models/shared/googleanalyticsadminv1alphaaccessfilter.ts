/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleAnalyticsAdminV1alphaAccessBetweenFilter } from "./googleanalyticsadminv1alphaaccessbetweenfilter";
import { GoogleAnalyticsAdminV1alphaAccessInListFilter } from "./googleanalyticsadminv1alphaaccessinlistfilter";
import { GoogleAnalyticsAdminV1alphaAccessNumericFilter } from "./googleanalyticsadminv1alphaaccessnumericfilter";
import { GoogleAnalyticsAdminV1alphaAccessStringFilter } from "./googleanalyticsadminv1alphaaccessstringfilter";
import { Expose, Type } from "class-transformer";

/**
 * An expression to filter dimension or metric values.
 */
export class GoogleAnalyticsAdminV1alphaAccessFilter extends SpeakeasyBase {
  /**
   * To express that the result needs to be between two numbers (inclusive).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "betweenFilter" })
  @Type(() => GoogleAnalyticsAdminV1alphaAccessBetweenFilter)
  betweenFilter?: GoogleAnalyticsAdminV1alphaAccessBetweenFilter;

  /**
   * The dimension name or metric name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fieldName" })
  fieldName?: string;

  /**
   * The result needs to be in a list of string values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inListFilter" })
  @Type(() => GoogleAnalyticsAdminV1alphaAccessInListFilter)
  inListFilter?: GoogleAnalyticsAdminV1alphaAccessInListFilter;

  /**
   * Filters for numeric or date values.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numericFilter" })
  @Type(() => GoogleAnalyticsAdminV1alphaAccessNumericFilter)
  numericFilter?: GoogleAnalyticsAdminV1alphaAccessNumericFilter;

  /**
   * The filter for strings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stringFilter" })
  @Type(() => GoogleAnalyticsAdminV1alphaAccessStringFilter)
  stringFilter?: GoogleAnalyticsAdminV1alphaAccessStringFilter;
}
