"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import collection as shared_collection
from ..shared import flaterrorresponse as shared_flaterrorresponse
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class ListCollectionsSecurity:
    
    o_auth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    
class ListCollectionsDirectionEnum(str, Enum):
    r"""Sort direction"""
    ASC = 'asc'
    DESC = 'desc'

class ListCollectionsSortEnum(str, Enum):
    r"""Sort"""
    CREATION_DATE = 'creationDate'
    TITLE = 'title'


@dataclasses.dataclass
class ListCollectionsRequest:
    
    direction: Optional[ListCollectionsDirectionEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'direction', 'style': 'form', 'explode': True }})
    r"""Sort direction"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""This is the maximum number of objects that may be returned"""  
    next: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'next', 'style': 'form', 'explode': True }})
    r"""An opaque string cursor to fetch the next page of data.
    The paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.
    """  
    parent: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'parent', 'style': 'form', 'explode': True }})
    r"""List the collection contained in this `parent` collection.
    
    This option doesn't provide a complete multi-level collection support.
    When sharing a collection with someone, this one will have as `parent` `sharedWithMe`.
    """  
    previous: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'previous', 'style': 'form', 'explode': True }})
    r"""An opaque string cursor to fetch the previous page of data.
    The paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.
    """  
    sort: Optional[ListCollectionsSortEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""Sort"""  
    

@dataclasses.dataclass
class ListCollectionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    collections: Optional[list[shared_collection.Collection]] = dataclasses.field(default=None)
    r"""List of collections"""  
    flat_error_response: Optional[shared_flaterrorresponse.FlatErrorResponse] = dataclasses.field(default=None)
    r"""Error"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    