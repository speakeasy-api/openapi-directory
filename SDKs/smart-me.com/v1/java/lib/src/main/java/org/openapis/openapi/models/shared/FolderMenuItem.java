/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * FolderMenuItem - A folder menu item
 */
public class FolderMenuItem {
    /**
     * Settings for the auto export functionality of a meter
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AutoExportSettings")
    public AutoExportSettings autoExportSettings;
    public FolderMenuItem withAutoExportSettings(AutoExportSettings autoExportSettings) {
        this.autoExportSettings = autoExportSettings;
        return this;
    }
    
    /**
     * Children folder menu items (sub folder menu items)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Children")
    public FolderMenuItem[] children;
    public FolderMenuItem withChildren(FolderMenuItem[] children) {
        this.children = children;
        return this;
    }
    
    /**
     * The Description of the folder
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;
    public FolderMenuItem withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The folder type of the item
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FolderType")
    public FolderMenuItemFolderTypeEnum folderType;
    public FolderMenuItem withFolderType(FolderMenuItemFolderTypeEnum folderType) {
        this.folderType = folderType;
        return this;
    }
    
    /**
     * The path to the Icon of this folder
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Icon")
    public String icon;
    public FolderMenuItem withIcon(String icon) {
        this.icon = icon;
        return this;
    }
    
    /**
     * The id of the folder menu item
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;
    public FolderMenuItem withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The serial number if the folder menu item is a meter. 
     *             Serial number is handled as a string, as javascript on client side cannot handle long integers properly.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MeterSerialNumber")
    public String meterSerialNumber;
    public FolderMenuItem withMeterSerialNumber(String meterSerialNumber) {
        this.meterSerialNumber = meterSerialNumber;
        return this;
    }
    
    /**
     * The Name of the item
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public FolderMenuItem withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The ID of the user of this folder (only for foldertype user)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("UserId")
    public String userId;
    public FolderMenuItem withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
}
