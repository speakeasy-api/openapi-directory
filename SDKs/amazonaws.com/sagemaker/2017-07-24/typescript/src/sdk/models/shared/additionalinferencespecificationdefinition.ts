/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ModelPackageContainerDefinition } from "./modelpackagecontainerdefinition";
import { ProductionVariantInstanceTypeEnum } from "./productionvariantinstancetypeenum";
import { TransformInstanceTypeEnum } from "./transforminstancetypeenum";
import { Expose, Type } from "class-transformer";

/**
 * A structure of additional Inference Specification. Additional Inference Specification specifies details about inference jobs that can be run with models based on this model package
 */
export class AdditionalInferenceSpecificationDefinition extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ModelPackageContainerDefinition })
  @Expose({ name: "Containers" })
  @Type(() => ModelPackageContainerDefinition)
  containers: ModelPackageContainerDefinition[];

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SupportedContentTypes" })
  supportedContentTypes?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SupportedRealtimeInferenceInstanceTypes" })
  supportedRealtimeInferenceInstanceTypes?: ProductionVariantInstanceTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "SupportedResponseMIMETypes" })
  supportedResponseMIMETypes?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "SupportedTransformInstanceTypes" })
  supportedTransformInstanceTypes?: TransformInstanceTypeEnum[];
}
