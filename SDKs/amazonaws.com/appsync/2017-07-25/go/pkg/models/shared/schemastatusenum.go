// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SchemaStatusEnum string

const (
	SchemaStatusEnumProcessing    SchemaStatusEnum = "PROCESSING"
	SchemaStatusEnumActive        SchemaStatusEnum = "ACTIVE"
	SchemaStatusEnumDeleting      SchemaStatusEnum = "DELETING"
	SchemaStatusEnumFailed        SchemaStatusEnum = "FAILED"
	SchemaStatusEnumSuccess       SchemaStatusEnum = "SUCCESS"
	SchemaStatusEnumNotApplicable SchemaStatusEnum = "NOT_APPLICABLE"
)

func (e *SchemaStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PROCESSING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "DELETING":
		fallthrough
	case "FAILED":
		fallthrough
	case "SUCCESS":
		fallthrough
	case "NOT_APPLICABLE":
		*e = SchemaStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SchemaStatusEnum: %s", s)
	}
}
