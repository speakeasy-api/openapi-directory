"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDMessagesMessageIDRequest:
    
    id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Id of the folder"""  
    message_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'messageId', 'style': 'simple', 'explode': False }})
    r"""Id of the mesage"""  
    space_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'spaceId', 'style': 'simple', 'explode': False }})
    r"""Id of the space"""  
    
class GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSONLevelEnum(str, Enum):
    CONFIDENTIAL = 'confidential'
    REGULAR = 'regular'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSON:
    r"""A message"""
    
    author: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Author'), 'exclude': lambda f: f is None }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Id'), 'exclude': lambda f: f is None }})  
    level: Optional[GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSONLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Level'), 'exclude': lambda f: f is None }})  
    message_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MessageDate'), 'exclude': lambda f: f is None }})  
    modification_author: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModificationAuthor'), 'exclude': lambda f: f is None }})  
    modification_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModificationDate'), 'exclude': lambda f: f is None }})  
    text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Text'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetSpacesSpaceIDFoldersIDMessagesMessageIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_spaces_space_id_folders_id_messages_message_id_200_application_json_object: Optional[GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSON] = dataclasses.field(default=None)
    r"""A message"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    