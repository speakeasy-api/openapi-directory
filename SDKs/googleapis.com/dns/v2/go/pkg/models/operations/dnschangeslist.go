// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type DNSChangesListSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DNSChangesListSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DNSChangesListSecurityOption3 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DNSChangesListSecurityOption4 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type DNSChangesListSecurity struct {
	Option1 *DNSChangesListSecurityOption1 `security:"option"`
	Option2 *DNSChangesListSecurityOption2 `security:"option"`
	Option3 *DNSChangesListSecurityOption3 `security:"option"`
	Option4 *DNSChangesListSecurityOption4 `security:"option"`
}

// DNSChangesListSortByEnum - Sorting criterion. The only supported value is change sequence.
type DNSChangesListSortByEnum string

const (
	DNSChangesListSortByEnumChangeSequence DNSChangesListSortByEnum = "CHANGE_SEQUENCE"
)

func (e DNSChangesListSortByEnum) ToPointer() *DNSChangesListSortByEnum {
	return &e
}

func (e *DNSChangesListSortByEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CHANGE_SEQUENCE":
		*e = DNSChangesListSortByEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DNSChangesListSortByEnum: %v", v)
	}
}

type DNSChangesListRequest struct {
	// V1 error format.
	DollarXgafv *shared.XgafvEnum `queryParam:"style=form,explode=true,name=$.xgafv"`
	// OAuth access token.
	AccessToken *string `queryParam:"style=form,explode=true,name=access_token"`
	// Data format for response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// JSONP
	Callback *string `queryParam:"style=form,explode=true,name=callback"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key      *string `queryParam:"style=form,explode=true,name=key"`
	Location string  `pathParam:"style=simple,explode=false,name=location"`
	// Identifies the managed zone addressed by this request. Can be the managed zone name or ID.
	ManagedZone string `pathParam:"style=simple,explode=false,name=managedZone"`
	// Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Identifies the project addressed by this request.
	Project string `pathParam:"style=simple,explode=false,name=project"`
	// Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Sorting criterion. The only supported value is change sequence.
	SortBy *DNSChangesListSortByEnum `queryParam:"style=form,explode=true,name=sortBy"`
	// Sorting order direction: 'ascending' or 'descending'.
	SortOrder *string `queryParam:"style=form,explode=true,name=sortOrder"`
	// Legacy upload protocol for media (e.g. "media", "multipart").
	UploadType *string `queryParam:"style=form,explode=true,name=uploadType"`
	// Upload protocol for media (e.g. "raw", "multipart").
	UploadProtocol *string `queryParam:"style=form,explode=true,name=upload_protocol"`
}

type DNSChangesListResponse struct {
	// Successful response
	ChangesListResponse *shared.ChangesListResponse
	ContentType         string
	StatusCode          int
	RawResponse         *http.Response
}
