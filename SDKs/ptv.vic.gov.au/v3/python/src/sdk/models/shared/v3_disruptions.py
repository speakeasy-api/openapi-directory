"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import v3_disruption as shared_v3_disruption
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class V3Disruptions:
    
    ferry: Optional[list[shared_v3_disruption.V3Disruption]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ferry'), 'exclude': lambda f: f is None }})
    r"""Subset of disruption information applicable to ferry"""  
    general: Optional[list[shared_v3_disruption.V3Disruption]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('general'), 'exclude': lambda f: f is None }})
    r"""Subset of disruption information applicable to multiple route_types"""  
    interstate_train: Optional[list[shared_v3_disruption.V3Disruption]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interstate_train'), 'exclude': lambda f: f is None }})
    r"""Subset of disruption information applicable to interstate train"""  
    metro_bus: Optional[list[shared_v3_disruption.V3Disruption]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metro_bus'), 'exclude': lambda f: f is None }})
    r"""Subset of disruption information applicable to metropolitan bus"""  
    metro_train: Optional[list[shared_v3_disruption.V3Disruption]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metro_train'), 'exclude': lambda f: f is None }})
    r"""Subset of disruption information applicable to metropolitan train"""  
    metro_tram: Optional[list[shared_v3_disruption.V3Disruption]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metro_tram'), 'exclude': lambda f: f is None }})
    r"""Subset of disruption information applicable to metropolitan tram"""  
    night_bus: Optional[list[shared_v3_disruption.V3Disruption]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('night_bus'), 'exclude': lambda f: f is None }})
    r"""Subset of disruption information applicable to night bus"""  
    regional_bus: Optional[list[shared_v3_disruption.V3Disruption]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('regional_bus'), 'exclude': lambda f: f is None }})
    r"""Subset of disruption information applicable to regional bus"""  
    regional_coach: Optional[list[shared_v3_disruption.V3Disruption]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('regional_coach'), 'exclude': lambda f: f is None }})
    r"""Subset of disruption information applicable to V/Line coach"""  
    regional_train: Optional[list[shared_v3_disruption.V3Disruption]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('regional_train'), 'exclude': lambda f: f is None }})
    r"""Subset of disruption information applicable to V/Line train"""  
    school_bus: Optional[list[shared_v3_disruption.V3Disruption]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('school_bus'), 'exclude': lambda f: f is None }})
    r"""Subset of disruption information applicable to school bus"""  
    skybus: Optional[list[shared_v3_disruption.V3Disruption]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('skybus'), 'exclude': lambda f: f is None }})
    r"""Subset of disruption information applicable to skybus"""  
    taxi: Optional[list[shared_v3_disruption.V3Disruption]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('taxi'), 'exclude': lambda f: f is None }})
    r"""Subset of disruption information applicable to taxi"""  
    telebus: Optional[list[shared_v3_disruption.V3Disruption]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('telebus'), 'exclude': lambda f: f is None }})
    r"""Subset of disruption information applicable to telebus services"""  
    