/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateBotRequestBody {
    /**
     * The list of bot members in the network associated with the update action.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("botMembers")
    public org.openapis.openapi.models.shared.BotMember[] botMembers;
    public UpdateBotRequestBody withBotMembers(org.openapis.openapi.models.shared.BotMember[] botMembers) {
        this.botMembers = botMembers;
        return this;
    }
    
    /**
     * The new name of the bot. The name must be unique in the account that creates the bot.
     */
    @JsonProperty("botName")
    public String botName;
    public UpdateBotRequestBody withBotName(String botName) {
        this.botName = botName;
        return this;
    }
    
    /**
     * The type of the bot to be updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("botType")
    public UpdateBotRequestBodyBotTypeEnum botType;
    public UpdateBotRequestBody withBotType(UpdateBotRequestBodyBotTypeEnum botType) {
        this.botType = botType;
        return this;
    }
    
    /**
     * By default, data stored by Amazon Lex is encrypted. The &lt;code&gt;DataPrivacy&lt;/code&gt; structure provides settings that determine how Amazon Lex handles special cases of securing the data for your bot. 
     */
    @JsonProperty("dataPrivacy")
    public UpdateBotRequestBodyDataPrivacy dataPrivacy;
    public UpdateBotRequestBody withDataPrivacy(UpdateBotRequestBodyDataPrivacy dataPrivacy) {
        this.dataPrivacy = dataPrivacy;
        return this;
    }
    
    /**
     * A description of the bot.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public UpdateBotRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * &lt;p&gt;The time, in seconds, that Amazon Lex should keep information about a user's conversation with the bot.&lt;/p&gt; &lt;p&gt;A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Lex deletes any data provided before the timeout.&lt;/p&gt; &lt;p&gt;You can specify between 60 (1 minute) and 86,400 (24 hours) seconds.&lt;/p&gt;
     */
    @JsonProperty("idleSessionTTLInSeconds")
    public Long idleSessionTTLInSeconds;
    public UpdateBotRequestBody withIdleSessionTTLInSeconds(Long idleSessionTTLInSeconds) {
        this.idleSessionTTLInSeconds = idleSessionTTLInSeconds;
        return this;
    }
    
    /**
     * The Amazon Resource Name (ARN) of an IAM role that has permissions to access the bot.
     */
    @JsonProperty("roleArn")
    public String roleArn;
    public UpdateBotRequestBody withRoleArn(String roleArn) {
        this.roleArn = roleArn;
        return this;
    }
    
}
