/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetApiV1AccountsSearchSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  bearerAuth: string;
}

export class GetApiV1AccountsSearchRequest extends SpeakeasyBase {
  /**
   * Only who the user is following. Defaults to false.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=following",
  })
  following?: boolean;

  /**
   * Maximum number of results. Defaults to 40.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * What to search for
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=q" })
  q: string;

  /**
   * Attempt WebFinger lookup. Defaults to false. Use this when `q` is an exact address.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=resolve",
  })
  resolve?: string;
}

export class GetApiV1AccountsSearchResponse extends SpeakeasyBase {
  /**
   * Accounts matching `q` in username or display name
   */
  @SpeakeasyMetadata({ elemType: shared.Account })
  accounts?: shared.Account[];

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * resolve=true, but the domain part of the user@domain address is not a currently live website
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
