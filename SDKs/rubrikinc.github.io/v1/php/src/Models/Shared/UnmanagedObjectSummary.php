<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class UnmanagedObjectSummary
{
    /**
     * Storage being taken up in the archival location by unmanaged snapshots.
     * 
     * @var int $archiveStorage
     */
	#[\JMS\Serializer\Annotation\SerializedName('archiveStorage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $archiveStorage;
    
    /**
     * Number of policy-based snapshots to retain for the specified object.
     * 
     * @var int $autoSnapshotCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('autoSnapshotCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $autoSnapshotCount;
    
    /**
     * A boolean that specifies whether any of the snapshots for this object are being retained by a SLA  at any location.
     * 
     * 
     * 
     * @var bool $hasSnapshotsWithPolicy
     */
	#[\JMS\Serializer\Annotation\SerializedName('hasSnapshotsWithPolicy')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $hasSnapshotsWithPolicy;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * A boolean that specifies if the object is remote or local. When this value is true, the object is remote.
     * 
     * @var ?bool $isRemote
     */
	#[\JMS\Serializer\Annotation\SerializedName('isRemote')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isRemote = null;
    
    /**
     * Storage being taken up on the local cluster by unmanaged snapshots.
     * 
     * @var int $localStorage
     */
	#[\JMS\Serializer\Annotation\SerializedName('localStorage')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $localStorage;
    
    /**
     * Number of on-demand snapshots and snapshots retrieved from an archival location for specified object.
     * 
     * @var int $manualSnapshotCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('manualSnapshotCount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $manualSnapshotCount;
    
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The type of the unmanaged object. This may be VirtualMachine, MssqlDatabase, LinuxFileset, ShareFileset, WindowsFileset, NutanixVirtualMachine, Ec2Instance or StorageArrayVolumeGroup.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\UnmanagedObjectSummaryObjectTypeEnum $objectType
     */
	#[\JMS\Serializer\Annotation\SerializedName('objectType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UnmanagedObjectSummaryObjectTypeEnum>')]
    public UnmanagedObjectSummaryObjectTypeEnum $objectType;
    
	#[\JMS\Serializer\Annotation\SerializedName('pendingSlaDomain')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ManagedObjectPendingSlaInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ManagedObjectPendingSlaInfo $pendingSlaDomain = null;
    
    /**
     * Brief info of all the objects in the physical path to this Object.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\LocationPathPoint> $physicalLocation
     */
	#[\JMS\Serializer\Annotation\SerializedName('physicalLocation')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\LocationPathPoint>')]
    public array $physicalLocation;
    
	#[\JMS\Serializer\Annotation\SerializedName('recoveryInfo')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SnappableRecoveryInfo')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?SnappableRecoveryInfo $recoveryInfo = null;
    
    /**
     * ID assigned to an SLA retention policy.
     * 
     * @var string $retentionSlaDomainId
     */
	#[\JMS\Serializer\Annotation\SerializedName('retentionSlaDomainId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $retentionSlaDomainId;
    
    /**
     * Name of an SLA retention policy.
     * 
     * @var string $retentionSlaDomainName
     */
	#[\JMS\Serializer\Annotation\SerializedName('retentionSlaDomainName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $retentionSlaDomainName;
    
    /**
     * Optional field with the ID assigned to an SLA Domain by Polaris.
     * 
     * @var ?string $retentionSlaDomainPolarisManagedId
     */
	#[\JMS\Serializer\Annotation\SerializedName('retentionSlaDomainPolarisManagedId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $retentionSlaDomainPolarisManagedId = null;
    
    /**
     * Unmanaged Status of this object. Protected means that this object is still protected by an SLA Policy. Unprotected means that this object has become unprotected. Relic means that Rubrik has lost contact with this object.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\UnmanagedObjectSummaryUnmanagedStatusEnum $unmanagedStatus
     */
	#[\JMS\Serializer\Annotation\SerializedName('unmanagedStatus')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UnmanagedObjectSummaryUnmanagedStatusEnum>')]
    public UnmanagedObjectSummaryUnmanagedStatusEnum $unmanagedStatus;
    
	public function __construct()
	{
		$this->archiveStorage = 0;
		$this->autoSnapshotCount = 0;
		$this->hasSnapshotsWithPolicy = false;
		$this->id = "";
		$this->isRemote = null;
		$this->localStorage = 0;
		$this->manualSnapshotCount = 0;
		$this->name = "";
		$this->objectType = \OpenAPI\OpenAPI\Models\Shared\UnmanagedObjectSummaryObjectTypeEnum::VIRTUAL_MACHINE;
		$this->pendingSlaDomain = null;
		$this->physicalLocation = [];
		$this->recoveryInfo = null;
		$this->retentionSlaDomainId = "";
		$this->retentionSlaDomainName = "";
		$this->retentionSlaDomainPolarisManagedId = null;
		$this->unmanagedStatus = \OpenAPI\OpenAPI\Models\Shared\UnmanagedObjectSummaryUnmanagedStatusEnum::PROTECTED;
	}
}
