// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type AppPkgNotificationOperationalStateEnum string

const (
	AppPkgNotificationOperationalStateEnumDisabled AppPkgNotificationOperationalStateEnum = "DISABLED"
	AppPkgNotificationOperationalStateEnumEnabled  AppPkgNotificationOperationalStateEnum = "ENABLED"
)

func (e AppPkgNotificationOperationalStateEnum) ToPointer() *AppPkgNotificationOperationalStateEnum {
	return &e
}

func (e *AppPkgNotificationOperationalStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DISABLED":
		fallthrough
	case "ENABLED":
		*e = AppPkgNotificationOperationalStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AppPkgNotificationOperationalStateEnum: %v", v)
	}
}

// AppPkgNotification - 'This data type represents an application package management notification for informing the subscribers about onboarding application package resources. The notification is triggered when a new application package is onboarded'
type AppPkgNotification struct {
	// Links to resources related to this resource.
	Links AppPkgNotificationLinks `json:"_links"`
	// Identifier of this MEC application descriptor. This attribute shall be globally unique.
	AppDID string `json:"appDId"`
	// Identifier of the onboarded application package.
	AppPkgID string `json:"appPkgId"`
	// ''
	ID string `json:"id"`
	// Discriminator for the different notification types
	NotificationType AppPkgNotificationTypeEnum             `json:"notificationType"`
	OperationalState AppPkgNotificationOperationalStateEnum `json:"operationalState"`
	// Identifier of the subscription related to this notification.
	SubscriptionID string    `json:"subscriptionId"`
	TimeStamp      TimeStamp `json:"timeStamp"`
}
