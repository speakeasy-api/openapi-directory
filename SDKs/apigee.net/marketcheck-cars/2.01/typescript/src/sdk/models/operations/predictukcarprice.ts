/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Transmission on the car
 */
export enum PredictUkCarPriceTransmissionEnum {
  Manual = "Manual",
  Automatic = "Automatic",
}

export class PredictUkCarPriceRequest extends SpeakeasyBase {
  /**
   * The API Authentication Key. Mandatory with all API calls.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=api_key",
  })
  apiKey?: string;

  /**
   * Base exterior color of the car
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=base_exterior_color",
  })
  baseExteriorColor?: string;

  /**
   * City mileage of the car
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=city_mpg",
  })
  cityMpg?: number;

  /**
   * Combiined mileage of the car
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=combined_mpg",
  })
  combinedMpg?: number;

  /**
   * Number of cylinders in the vehicle
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=cylinders",
  })
  cylinders?: number;

  /**
   * Number of doors in the vehicle
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=doors" })
  doors?: number;

  /**
   * Drivetrain on the car
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=drivetrain",
  })
  drivetrain?: string;

  /**
   * Engine Size of the car
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=engine_size",
  })
  engineSize?: number;

  /**
   * Fuel type of the car
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fuel_type",
  })
  fuelType?: string;

  /**
   * Highway mileage
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=highway_mpg",
  })
  highwayMpg?: number;

  /**
   * Latitude component of the location
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=latitude",
  })
  latitude?: number;

  /**
   * Longitude component of the location
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=longitude",
  })
  longitude?: number;

  /**
   * Car's make
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=make" })
  make?: string;

  /**
   * miles vehicle has driven in total
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=miles" })
  miles?: number;

  /**
   * Car's model
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=model" })
  model?: string;

  /**
   * Transmission on the car
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=transmission",
  })
  transmission?: PredictUkCarPriceTransmissionEnum;

  /**
   * Car's trim
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=trim" })
  trim?: string;

  /**
   * Predict price for a VRM
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=vrm" })
  vrm?: string;

  /**
   * Car manufacturing year
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=year" })
  year?: number;

  /**
   * Location zip
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=zip" })
  zip?: string;
}

export class PredictUkCarPriceResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * Predicted price of the car along with it's specifications
   */
  @SpeakeasyMetadata()
  pricePrediction?: shared.PricePrediction;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
