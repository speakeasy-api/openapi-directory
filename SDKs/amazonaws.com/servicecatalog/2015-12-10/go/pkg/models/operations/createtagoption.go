// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateTagOptionXAmzTargetEnum
type CreateTagOptionXAmzTargetEnum string

const (
	CreateTagOptionXAmzTargetEnumAws242ServiceCatalogServiceCreateTagOption CreateTagOptionXAmzTargetEnum = "AWS242ServiceCatalogService.CreateTagOption"
)

func (e CreateTagOptionXAmzTargetEnum) ToPointer() *CreateTagOptionXAmzTargetEnum {
	return &e
}

func (e *CreateTagOptionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWS242ServiceCatalogService.CreateTagOption":
		*e = CreateTagOptionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTagOptionXAmzTargetEnum: %v", v)
	}
}

type CreateTagOptionRequest struct {
	CreateTagOptionInput shared.CreateTagOptionInput   `request:"mediaType=application/json"`
	XAmzAlgorithm        *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256    *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential       *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate             *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken    *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature        *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders    *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget           CreateTagOptionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateTagOptionResponse struct {
	ContentType string
	// Success
	CreateTagOptionOutput *shared.CreateTagOptionOutput
	// DuplicateResourceException
	DuplicateResourceException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// TagOptionNotMigratedException
	TagOptionNotMigratedException interface{}
}
