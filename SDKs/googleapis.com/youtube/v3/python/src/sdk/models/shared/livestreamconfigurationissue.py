"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class LiveStreamConfigurationIssueSeverityEnum(str, Enum):
    r"""How severe this issue is to the stream."""
    INFO = 'info'
    WARNING = 'warning'
    ERROR = 'error'

class LiveStreamConfigurationIssueTypeEnum(str, Enum):
    r"""The kind of error happening."""
    GOP_SIZE_OVER = 'gopSizeOver'
    GOP_SIZE_LONG = 'gopSizeLong'
    GOP_SIZE_SHORT = 'gopSizeShort'
    OPEN_GOP = 'openGop'
    BAD_CONTAINER = 'badContainer'
    AUDIO_BITRATE_HIGH = 'audioBitrateHigh'
    AUDIO_BITRATE_LOW = 'audioBitrateLow'
    AUDIO_SAMPLE_RATE = 'audioSampleRate'
    BITRATE_HIGH = 'bitrateHigh'
    BITRATE_LOW = 'bitrateLow'
    AUDIO_CODEC = 'audioCodec'
    VIDEO_CODEC = 'videoCodec'
    NO_AUDIO_STREAM = 'noAudioStream'
    NO_VIDEO_STREAM = 'noVideoStream'
    MULTIPLE_VIDEO_STREAMS = 'multipleVideoStreams'
    MULTIPLE_AUDIO_STREAMS = 'multipleAudioStreams'
    AUDIO_TOO_MANY_CHANNELS = 'audioTooManyChannels'
    INTERLACED_VIDEO = 'interlacedVideo'
    FRAME_RATE_HIGH = 'frameRateHigh'
    RESOLUTION_MISMATCH = 'resolutionMismatch'
    VIDEO_CODEC_MISMATCH = 'videoCodecMismatch'
    VIDEO_INTERLACE_MISMATCH = 'videoInterlaceMismatch'
    VIDEO_PROFILE_MISMATCH = 'videoProfileMismatch'
    VIDEO_BITRATE_MISMATCH = 'videoBitrateMismatch'
    FRAMERATE_MISMATCH = 'framerateMismatch'
    GOP_MISMATCH = 'gopMismatch'
    AUDIO_SAMPLE_RATE_MISMATCH = 'audioSampleRateMismatch'
    AUDIO_STEREO_MISMATCH = 'audioStereoMismatch'
    AUDIO_CODEC_MISMATCH = 'audioCodecMismatch'
    AUDIO_BITRATE_MISMATCH = 'audioBitrateMismatch'
    VIDEO_RESOLUTION_SUBOPTIMAL = 'videoResolutionSuboptimal'
    VIDEO_RESOLUTION_UNSUPPORTED = 'videoResolutionUnsupported'
    VIDEO_INGESTION_STARVED = 'videoIngestionStarved'
    VIDEO_INGESTION_FASTER_THAN_REALTIME = 'videoIngestionFasterThanRealtime'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LiveStreamConfigurationIssue:
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""The long-form description of the issue and how to resolve it."""  
    reason: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reason'), 'exclude': lambda f: f is None }})
    r"""The short-form reason for this issue."""  
    severity: Optional[LiveStreamConfigurationIssueSeverityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('severity'), 'exclude': lambda f: f is None }})
    r"""How severe this issue is to the stream."""  
    type: Optional[LiveStreamConfigurationIssueTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The kind of error happening."""  
    