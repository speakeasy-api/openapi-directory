// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WritableFrontPortTemplateTypeEnum string

const (
	WritableFrontPortTemplateTypeEnumEightp8c              WritableFrontPortTemplateTypeEnum = "8p8c"
	WritableFrontPortTemplateTypeEnumOneHundredAndTenPunch WritableFrontPortTemplateTypeEnum = "110-punch"
	WritableFrontPortTemplateTypeEnumBnc                   WritableFrontPortTemplateTypeEnum = "bnc"
	WritableFrontPortTemplateTypeEnumMrj21                 WritableFrontPortTemplateTypeEnum = "mrj21"
	WritableFrontPortTemplateTypeEnumFc                    WritableFrontPortTemplateTypeEnum = "fc"
	WritableFrontPortTemplateTypeEnumLc                    WritableFrontPortTemplateTypeEnum = "lc"
	WritableFrontPortTemplateTypeEnumLcApc                 WritableFrontPortTemplateTypeEnum = "lc-apc"
	WritableFrontPortTemplateTypeEnumLsh                   WritableFrontPortTemplateTypeEnum = "lsh"
	WritableFrontPortTemplateTypeEnumLshApc                WritableFrontPortTemplateTypeEnum = "lsh-apc"
	WritableFrontPortTemplateTypeEnumMpo                   WritableFrontPortTemplateTypeEnum = "mpo"
	WritableFrontPortTemplateTypeEnumMtrj                  WritableFrontPortTemplateTypeEnum = "mtrj"
	WritableFrontPortTemplateTypeEnumSc                    WritableFrontPortTemplateTypeEnum = "sc"
	WritableFrontPortTemplateTypeEnumScApc                 WritableFrontPortTemplateTypeEnum = "sc-apc"
	WritableFrontPortTemplateTypeEnumSt                    WritableFrontPortTemplateTypeEnum = "st"
)

func (e *WritableFrontPortTemplateTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "8p8c":
		fallthrough
	case "110-punch":
		fallthrough
	case "bnc":
		fallthrough
	case "mrj21":
		fallthrough
	case "fc":
		fallthrough
	case "lc":
		fallthrough
	case "lc-apc":
		fallthrough
	case "lsh":
		fallthrough
	case "lsh-apc":
		fallthrough
	case "mpo":
		fallthrough
	case "mtrj":
		fallthrough
	case "sc":
		fallthrough
	case "sc-apc":
		fallthrough
	case "st":
		*e = WritableFrontPortTemplateTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WritableFrontPortTemplateTypeEnum: %s", s)
	}
}

type WritableFrontPortTemplateInput struct {
	DeviceType       int64                             `json:"device_type"`
	Name             string                            `json:"name"`
	RearPort         int64                             `json:"rear_port"`
	RearPortPosition *int64                            `json:"rear_port_position,omitempty"`
	Type             WritableFrontPortTemplateTypeEnum `json:"type"`
}
