/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RegressionEvaluationMetrics - Metrics for regression problems.
 */
public class RegressionEvaluationMetrics {
    /**
     * Output only. Mean Absolute Error (MAE).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("meanAbsoluteError")
    public Float meanAbsoluteError;
    public RegressionEvaluationMetrics withMeanAbsoluteError(Float meanAbsoluteError) {
        this.meanAbsoluteError = meanAbsoluteError;
        return this;
    }
    
    /**
     * Output only. Mean absolute percentage error. Only set if all ground truth values are are positive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("meanAbsolutePercentageError")
    public Float meanAbsolutePercentageError;
    public RegressionEvaluationMetrics withMeanAbsolutePercentageError(Float meanAbsolutePercentageError) {
        this.meanAbsolutePercentageError = meanAbsolutePercentageError;
        return this;
    }
    
    /**
     * Output only. R squared.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rSquared")
    public Float rSquared;
    public RegressionEvaluationMetrics withRSquared(Float rSquared) {
        this.rSquared = rSquared;
        return this;
    }
    
    /**
     * Output only. Root Mean Squared Error (RMSE).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rootMeanSquaredError")
    public Float rootMeanSquaredError;
    public RegressionEvaluationMetrics withRootMeanSquaredError(Float rootMeanSquaredError) {
        this.rootMeanSquaredError = rootMeanSquaredError;
        return this;
    }
    
    /**
     * Output only. Root mean squared log error.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rootMeanSquaredLogError")
    public Float rootMeanSquaredLogError;
    public RegressionEvaluationMetrics withRootMeanSquaredLogError(Float rootMeanSquaredLogError) {
        this.rootMeanSquaredLogError = rootMeanSquaredLogError;
        return this;
    }
    
}
