/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The Amazon S3 destination where errors associated with the job creation request are saved.
 */
export class CreateBulkImportJobRequestBodyErrorReportLocation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "bucket" })
  bucket?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "prefix" })
  prefix?: string;
}

/**
 * Contains the configuration information of a job, such as the file format used to save data in Amazon S3.
 */
export class CreateBulkImportJobRequestBodyJobConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "fileFormat" })
  @Type(() => shared.FileFormat)
  fileFormat?: shared.FileFormat;
}

export class CreateBulkImportJobRequestBody extends SpeakeasyBase {
  /**
   * The Amazon S3 destination where errors associated with the job creation request are saved.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "errorReportLocation" })
  @Type(() => CreateBulkImportJobRequestBodyErrorReportLocation)
  errorReportLocation: CreateBulkImportJobRequestBodyErrorReportLocation;

  /**
   * The files in the specified Amazon S3 bucket that contain your data.
   */
  @SpeakeasyMetadata({ elemType: shared.File })
  @Expose({ name: "files" })
  @Type(() => shared.File)
  files: shared.File[];

  /**
   * Contains the configuration information of a job, such as the file format used to save data in Amazon S3.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jobConfiguration" })
  @Type(() => CreateBulkImportJobRequestBodyJobConfiguration)
  jobConfiguration: CreateBulkImportJobRequestBodyJobConfiguration;

  /**
   * The unique name that helps identify the job request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jobName" })
  jobName: string;

  /**
   * The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">ARN</a> of the IAM role that allows IoT SiteWise to read Amazon S3 data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jobRoleArn" })
  jobRoleArn: string;
}

export class CreateBulkImportJobRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateBulkImportJobRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class CreateBulkImportJobResponse extends SpeakeasyBase {
  /**
   * ConflictingOperationException
   */
  @SpeakeasyMetadata()
  conflictingOperationException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  createBulkImportJobResponse?: shared.CreateBulkImportJobResponse;

  /**
   * InternalFailureException
   */
  @SpeakeasyMetadata()
  internalFailureException?: any;

  /**
   * InvalidRequestException
   */
  @SpeakeasyMetadata()
  invalidRequestException?: any;

  /**
   * LimitExceededException
   */
  @SpeakeasyMetadata()
  limitExceededException?: any;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceAlreadyExistsException
   */
  @SpeakeasyMetadata()
  resourceAlreadyExistsException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;
}
