// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var ListServiceConversationMessageServerList = []string{
	"https://conversations.twilio.com",
}

type ListServiceConversationMessageSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type ListServiceConversationMessagePathParams struct {
	// The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.
	ChatServiceSid string `pathParam:"style=simple,explode=false,name=ChatServiceSid"`
	// The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for messages.
	ConversationSid string `pathParam:"style=simple,explode=false,name=ConversationSid"`
}

type ListServiceConversationMessageQueryParams struct {
	// The sort order of the returned messages. Can be: `asc` (ascending) or `desc` (descending), with `asc` as the default.
	Order *shared.ServiceConversationMessageEnumOrderTypeEnum `queryParam:"style=form,explode=true,name=Order"`
	// The page index. This value is simply for client state.
	Page *int64 `queryParam:"style=form,explode=true,name=Page"`
	// How many resources to return in each list page. The default is 50, and the maximum is 1000.
	PageSize *int64 `queryParam:"style=form,explode=true,name=PageSize"`
	// The page token. This is provided by the API.
	PageToken *string `queryParam:"style=form,explode=true,name=PageToken"`
}

type ListServiceConversationMessageRequest struct {
	PathParams  ListServiceConversationMessagePathParams
	QueryParams ListServiceConversationMessageQueryParams
	Security    ListServiceConversationMessageSecurity
	ServerURL   *string
}

type ListServiceConversationMessageListServiceConversationMessageResponseMeta struct {
	FirstPageURL    *string `json:"first_page_url,omitempty"`
	Key             *string `json:"key,omitempty"`
	NextPageURL     *string `json:"next_page_url,omitempty"`
	Page            *int64  `json:"page,omitempty"`
	PageSize        *int64  `json:"page_size,omitempty"`
	PreviousPageURL *string `json:"previous_page_url,omitempty"`
	URL             *string `json:"url,omitempty"`
}

// ListServiceConversationMessageListServiceConversationMessageResponse - OK
type ListServiceConversationMessageListServiceConversationMessageResponse struct {
	Messages []shared.ConversationsV1ServiceServiceConversationServiceConversationMessage `json:"messages,omitempty"`
	Meta     *ListServiceConversationMessageListServiceConversationMessageResponseMeta    `json:"meta,omitempty"`
}

type ListServiceConversationMessageResponse struct {
	ContentType string
	// OK
	ListServiceConversationMessageResponse *ListServiceConversationMessageListServiceConversationMessageResponse
	StatusCode                             int
	RawResponse                            *http.Response
}
