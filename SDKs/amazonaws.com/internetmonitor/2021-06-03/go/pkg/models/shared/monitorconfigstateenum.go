// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MonitorConfigStateEnum string

const (
	MonitorConfigStateEnumPending  MonitorConfigStateEnum = "PENDING"
	MonitorConfigStateEnumActive   MonitorConfigStateEnum = "ACTIVE"
	MonitorConfigStateEnumInactive MonitorConfigStateEnum = "INACTIVE"
	MonitorConfigStateEnumError    MonitorConfigStateEnum = "ERROR"
)

func (e *MonitorConfigStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PENDING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "INACTIVE":
		fallthrough
	case "ERROR":
		*e = MonitorConfigStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MonitorConfigStateEnum: %s", s)
	}
}
