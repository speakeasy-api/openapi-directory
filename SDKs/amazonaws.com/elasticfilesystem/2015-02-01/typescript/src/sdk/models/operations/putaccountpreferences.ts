/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * A preference indicating a choice to use 63bit/32bit IDs for all applicable resources.
 */
export enum PutAccountPreferencesRequestBodyResourceIdTypeEnum {
  LongId = "LONG_ID",
  ShortId = "SHORT_ID",
}

export class PutAccountPreferencesRequestBody extends SpeakeasyBase {
  /**
   * A preference indicating a choice to use 63bit/32bit IDs for all applicable resources.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ResourceIdType" })
  resourceIdType: PutAccountPreferencesRequestBodyResourceIdTypeEnum;
}

export class PutAccountPreferencesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: PutAccountPreferencesRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class PutAccountPreferencesResponse extends SpeakeasyBase {
  /**
   * BadRequest
   */
  @SpeakeasyMetadata()
  badRequest?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerError
   */
  @SpeakeasyMetadata()
  internalServerError?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  putAccountPreferencesResponse?: shared.PutAccountPreferencesResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
