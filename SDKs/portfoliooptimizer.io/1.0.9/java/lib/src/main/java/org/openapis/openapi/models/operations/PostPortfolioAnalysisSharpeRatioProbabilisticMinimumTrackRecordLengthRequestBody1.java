/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthRequestBody1 {
    /**
     * The Sharpe ratio of the benchmark, in the same sampling frequency as the sampling frequency of the portfolio values
     */
    @JsonProperty("benchmarkSharpeRatio")
    public Double benchmarkSharpeRatio;
    public PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthRequestBody1 withBenchmarkSharpeRatio(Double benchmarkSharpeRatio) {
        this.benchmarkSharpeRatio = benchmarkSharpeRatio;
        return this;
    }
    
    /**
     * The confidence level of the minimum track record length, in percentage
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confidenceLevel")
    public Double confidenceLevel;
    public PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthRequestBody1 withConfidenceLevel(Double confidenceLevel) {
        this.confidenceLevel = confidenceLevel;
        return this;
    }
    
    @JsonProperty("portfolios")
    public PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthRequestBody1Portfolios[] portfolios;
    public PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthRequestBody1 withPortfolios(PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthRequestBody1Portfolios[] portfolios) {
        this.portfolios = portfolios;
        return this;
    }
    
    /**
     * The risk free rate
     */
    @JsonProperty("riskFreeRate")
    public Double riskFreeRate;
    public PostPortfolioAnalysisSharpeRatioProbabilisticMinimumTrackRecordLengthRequestBody1 withRiskFreeRate(Double riskFreeRate) {
        this.riskFreeRate = riskFreeRate;
        return this;
    }
    
}
