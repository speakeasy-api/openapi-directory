"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeviceMetadata:
    r"""Characteristics of the user's device."""
    
    cpu_make: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cpuMake'), 'exclude': lambda f: f is None }})
    r"""Device CPU make, e.g. \\"Qualcomm\\" """  
    cpu_model: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cpuModel'), 'exclude': lambda f: f is None }})
    r"""Device CPU model, e.g. \\"MSM8974\\" """  
    device_class: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deviceClass'), 'exclude': lambda f: f is None }})
    r"""Device class (e.g. tablet)"""  
    gl_es_version: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('glEsVersion'), 'exclude': lambda f: f is None }})
    r"""OpenGL version"""  
    manufacturer: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('manufacturer'), 'exclude': lambda f: f is None }})
    r"""Device manufacturer (e.g. Motorola)"""  
    native_platform: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nativePlatform'), 'exclude': lambda f: f is None }})
    r"""Comma separated list of native platforms (e.g. \\"arm\\", \\"arm7\\")"""  
    product_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('productName'), 'exclude': lambda f: f is None }})
    r"""Device model name (e.g. Droid)"""  
    ram_mb: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ramMb'), 'exclude': lambda f: f is None }})
    r"""Device RAM in Megabytes, e.g. \\"2048\\" """  
    screen_density_dpi: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('screenDensityDpi'), 'exclude': lambda f: f is None }})
    r"""Screen density in DPI"""  
    screen_height_px: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('screenHeightPx'), 'exclude': lambda f: f is None }})
    r"""Screen height in pixels"""  
    screen_width_px: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('screenWidthPx'), 'exclude': lambda f: f is None }})
    r"""Screen width in pixels"""  
    