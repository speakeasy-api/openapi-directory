/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration - OK
 */
public class ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration {
    /**
     * The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;

    public ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chat_service_sid")
    public String chatServiceSid;

    public ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration withChatServiceSid(String chatServiceSid) {
        this.chatServiceSid = chatServiceSid;
        return this;
    }
    
    /**
     * The list of events that your configured webhook targets will receive. Events not configured here will not fire. Possible values are `onParticipantAdd`, `onParticipantAdded`, `onDeliveryUpdated`, `onConversationUpdated`, `onConversationRemove`, `onParticipantRemove`, `onConversationUpdate`, `onMessageAdd`, `onMessageRemoved`, `onParticipantUpdated`, `onConversationAdded`, `onMessageAdded`, `onConversationAdd`, `onConversationRemoved`, `onParticipantUpdate`, `onMessageRemove`, `onMessageUpdated`, `onParticipantRemoved`, `onMessageUpdate` or `onConversationStateUpdated`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filters")
    public String[] filters;

    public ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration withFilters(String[] filters) {
        this.filters = filters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("method")
    public ServiceWebhookConfigurationEnumMethodEnum method;

    public ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration withMethod(ServiceWebhookConfigurationEnumMethodEnum method) {
        this.method = method;
        return this;
    }
    
    /**
     * The absolute url the post-event webhook request should be sent to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("post_webhook_url")
    public String postWebhookUrl;

    public ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration withPostWebhookUrl(String postWebhookUrl) {
        this.postWebhookUrl = postWebhookUrl;
        return this;
    }
    
    /**
     * The absolute url the pre-event webhook request should be sent to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pre_webhook_url")
    public String preWebhookUrl;

    public ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration withPreWebhookUrl(String preWebhookUrl) {
        this.preWebhookUrl = preWebhookUrl;
        return this;
    }
    
    /**
     * An absolute API resource URL for this webhook.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public ConversationsV1ServiceServiceConfigurationServiceWebhookConfiguration(){}
}
