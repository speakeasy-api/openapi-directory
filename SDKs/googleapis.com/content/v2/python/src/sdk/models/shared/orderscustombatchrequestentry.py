"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import orderscustombatchrequestentrycancel as shared_orderscustombatchrequestentrycancel
from ..shared import orderscustombatchrequestentrycancellineitem as shared_orderscustombatchrequestentrycancellineitem
from ..shared import orderscustombatchrequestentryinstorerefundlineitem as shared_orderscustombatchrequestentryinstorerefundlineitem
from ..shared import orderscustombatchrequestentryrefund as shared_orderscustombatchrequestentryrefund
from ..shared import orderscustombatchrequestentryrejectreturnlineitem as shared_orderscustombatchrequestentryrejectreturnlineitem
from ..shared import orderscustombatchrequestentryreturnlineitem as shared_orderscustombatchrequestentryreturnlineitem
from ..shared import orderscustombatchrequestentryreturnrefundlineitem as shared_orderscustombatchrequestentryreturnrefundlineitem
from ..shared import orderscustombatchrequestentrysetlineitemmetadata as shared_orderscustombatchrequestentrysetlineitemmetadata
from ..shared import orderscustombatchrequestentryshiplineitems as shared_orderscustombatchrequestentryshiplineitems
from ..shared import orderscustombatchrequestentryupdatelineitemshippingdetails as shared_orderscustombatchrequestentryupdatelineitemshippingdetails
from ..shared import orderscustombatchrequestentryupdateshipment as shared_orderscustombatchrequestentryupdateshipment
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrdersCustomBatchRequestEntry:
    
    batch_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('batchId'), 'exclude': lambda f: f is None }})
    r"""An entry ID, unique within the batch request."""  
    cancel: Optional[shared_orderscustombatchrequestentrycancel.OrdersCustomBatchRequestEntryCancel] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancel'), 'exclude': lambda f: f is None }})  
    cancel_line_item: Optional[shared_orderscustombatchrequestentrycancellineitem.OrdersCustomBatchRequestEntryCancelLineItem] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancelLineItem'), 'exclude': lambda f: f is None }})  
    in_store_refund_line_item: Optional[shared_orderscustombatchrequestentryinstorerefundlineitem.OrdersCustomBatchRequestEntryInStoreRefundLineItem] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inStoreRefundLineItem'), 'exclude': lambda f: f is None }})  
    merchant_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merchantId'), 'exclude': lambda f: f is None }})
    r"""The ID of the managing account."""  
    merchant_order_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('merchantOrderId'), 'exclude': lambda f: f is None }})
    r"""The merchant order ID. Required for `updateMerchantOrderId` and `getByMerchantOrderId` methods."""  
    method: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('method'), 'exclude': lambda f: f is None }})
    r"""The method of the batch entry. Acceptable values are: - \\"`acknowledge`\\" - \\"`cancel`\\" - \\"`cancelLineItem`\\" - \\"`get`\\" - \\"`getByMerchantOrderId`\\" - \\"`inStoreRefundLineItem`\\" - \\"`refund`\\" - \\"`rejectReturnLineItem`\\" - \\"`returnLineItem`\\" - \\"`returnRefundLineItem`\\" - \\"`setLineItemMetadata`\\" - \\"`shipLineItems`\\" - \\"`updateLineItemShippingDetails`\\" - \\"`updateMerchantOrderId`\\" - \\"`updateShipment`\\" """  
    operation_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operationId'), 'exclude': lambda f: f is None }})
    r"""The ID of the operation. Unique across all operations for a given order. Required for all methods beside `get` and `getByMerchantOrderId`."""  
    order_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('orderId'), 'exclude': lambda f: f is None }})
    r"""The ID of the order. Required for all methods beside `getByMerchantOrderId`."""  
    refund: Optional[shared_orderscustombatchrequestentryrefund.OrdersCustomBatchRequestEntryRefund] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refund'), 'exclude': lambda f: f is None }})  
    reject_return_line_item: Optional[shared_orderscustombatchrequestentryrejectreturnlineitem.OrdersCustomBatchRequestEntryRejectReturnLineItem] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rejectReturnLineItem'), 'exclude': lambda f: f is None }})  
    return_line_item: Optional[shared_orderscustombatchrequestentryreturnlineitem.OrdersCustomBatchRequestEntryReturnLineItem] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('returnLineItem'), 'exclude': lambda f: f is None }})  
    return_refund_line_item: Optional[shared_orderscustombatchrequestentryreturnrefundlineitem.OrdersCustomBatchRequestEntryReturnRefundLineItem] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('returnRefundLineItem'), 'exclude': lambda f: f is None }})  
    set_line_item_metadata: Optional[shared_orderscustombatchrequestentrysetlineitemmetadata.OrdersCustomBatchRequestEntrySetLineItemMetadata] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('setLineItemMetadata'), 'exclude': lambda f: f is None }})  
    ship_line_items: Optional[shared_orderscustombatchrequestentryshiplineitems.OrdersCustomBatchRequestEntryShipLineItems] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shipLineItems'), 'exclude': lambda f: f is None }})  
    update_line_item_shipping_details: Optional[shared_orderscustombatchrequestentryupdatelineitemshippingdetails.OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateLineItemShippingDetails'), 'exclude': lambda f: f is None }})  
    update_shipment: Optional[shared_orderscustombatchrequestentryupdateshipment.OrdersCustomBatchRequestEntryUpdateShipment] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateShipment'), 'exclude': lambda f: f is None }})  
    