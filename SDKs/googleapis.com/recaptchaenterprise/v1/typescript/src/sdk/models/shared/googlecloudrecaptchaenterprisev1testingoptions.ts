/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE.
 */
export enum GoogleCloudRecaptchaenterpriseV1TestingOptionsTestingChallengeEnum {
  TestingChallengeUnspecified = "TESTING_CHALLENGE_UNSPECIFIED",
  Nocaptcha = "NOCAPTCHA",
  UnsolvableChallenge = "UNSOLVABLE_CHALLENGE",
}

/**
 * Options for user acceptance testing.
 */
export class GoogleCloudRecaptchaenterpriseV1TestingOptions extends SpeakeasyBase {
  /**
   * For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "testingChallenge" })
  testingChallenge?: GoogleCloudRecaptchaenterpriseV1TestingOptionsTestingChallengeEnum;

  /**
   * All assessments for this Key will return this score. Must be between 0 (likely not legitimate) and 1 (likely legitimate) inclusive.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "testingScore" })
  testingScore?: number;
}
