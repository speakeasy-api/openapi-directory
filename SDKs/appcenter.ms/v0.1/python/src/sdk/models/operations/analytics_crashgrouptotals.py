"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class AnalyticsCrashGroupTotalsSecurity:
    
    api_token: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'X-API-Token' }})  
    

@dataclasses.dataclass
class AnalyticsCrashGroupTotalsRequest:
    
    app_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'app_name', 'style': 'simple', 'explode': False }})
    r"""The name of the application"""  
    crash_group_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'crash_group_id', 'style': 'simple', 'explode': False }})
    r"""The id of the crash group."""  
    owner_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'owner_name', 'style': 'simple', 'explode': False }})
    r"""The name of the owner"""  
    version: str = dataclasses.field(metadata={'query_param': { 'field_name': 'version', 'style': 'form', 'explode': True }})  
    
class AnalyticsCrashGroupTotalsDefaultApplicationJSONErrorCodeEnum(str, Enum):
    r"""The status code return by the API. It can be 400 or 403 or 500."""
    FOUR_HUNDRED = '400'
    FOUR_HUNDRED_AND_THREE = '403'
    FIVE_HUNDRED = '500'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnalyticsCrashGroupTotalsDefaultApplicationJSONError:
    
    code: Optional[AnalyticsCrashGroupTotalsDefaultApplicationJSONErrorCodeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})
    r"""The status code return by the API. It can be 400 or 403 or 500."""  
    message: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message'), 'exclude': lambda f: f is None }})
    r"""The reason for the request failed."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnalyticsCrashGroupTotalsDefaultApplicationJSON:
    r"""Error"""
    
    error: Optional[AnalyticsCrashGroupTotalsDefaultApplicationJSONError] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnalyticsCrashGroupTotals200ApplicationJSON:
    r"""Overall crashes and affected users count."""
    
    crash_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('crash_count'), 'exclude': lambda f: f is None }})  
    device_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('device_count'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class AnalyticsCrashGroupTotalsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    analytics_crash_group_totals_200_application_json_object: Optional[AnalyticsCrashGroupTotals200ApplicationJSON] = dataclasses.field(default=None)
    r"""Overall crashes and affected users count."""  
    analytics_crash_group_totals_default_application_json_object: Optional[AnalyticsCrashGroupTotalsDefaultApplicationJSON] = dataclasses.field(default=None)
    r"""Error code with reason."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    