// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WorkerReservationEnumConferenceEventEnum string

const (
	WorkerReservationEnumConferenceEventEnumStart   WorkerReservationEnumConferenceEventEnum = "start"
	WorkerReservationEnumConferenceEventEnumEnd     WorkerReservationEnumConferenceEventEnum = "end"
	WorkerReservationEnumConferenceEventEnumJoin    WorkerReservationEnumConferenceEventEnum = "join"
	WorkerReservationEnumConferenceEventEnumLeave   WorkerReservationEnumConferenceEventEnum = "leave"
	WorkerReservationEnumConferenceEventEnumMute    WorkerReservationEnumConferenceEventEnum = "mute"
	WorkerReservationEnumConferenceEventEnumHold    WorkerReservationEnumConferenceEventEnum = "hold"
	WorkerReservationEnumConferenceEventEnumSpeaker WorkerReservationEnumConferenceEventEnum = "speaker"
)

func (e WorkerReservationEnumConferenceEventEnum) ToPointer() *WorkerReservationEnumConferenceEventEnum {
	return &e
}

func (e *WorkerReservationEnumConferenceEventEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "start":
		fallthrough
	case "end":
		fallthrough
	case "join":
		fallthrough
	case "leave":
		fallthrough
	case "mute":
		fallthrough
	case "hold":
		fallthrough
	case "speaker":
		*e = WorkerReservationEnumConferenceEventEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkerReservationEnumConferenceEventEnum: %v", v)
	}
}
