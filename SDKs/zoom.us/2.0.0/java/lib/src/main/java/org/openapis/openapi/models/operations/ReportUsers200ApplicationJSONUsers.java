/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class ReportUsers200ApplicationJSONUsers {
    /**
     * Custom attribute(s) that have been assigned to the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom_attributes")
    public ReportUsers200ApplicationJSONUsersCustomAttributes customAttributes;
    public ReportUsers200ApplicationJSONUsers withCustomAttributes(ReportUsers200ApplicationJSONUsersCustomAttributes customAttributes) {
        this.customAttributes = customAttributes;
        return this;
    }
    
    /**
     * User department.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dept")
    public String dept;
    public ReportUsers200ApplicationJSONUsers withDept(String dept) {
        this.dept = dept;
        return this;
    }
    
    /**
     * User email.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public ReportUsers200ApplicationJSONUsers withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * User ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public ReportUsers200ApplicationJSONUsers withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Number of meeting minutes for user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("meeting_minutes")
    public Long meetingMinutes;
    public ReportUsers200ApplicationJSONUsers withMeetingMinutes(Long meetingMinutes) {
        this.meetingMinutes = meetingMinutes;
        return this;
    }
    
    /**
     * Number of meetings for user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("meetings")
    public Long meetings;
    public ReportUsers200ApplicationJSONUsers withMeetings(Long meetings) {
        this.meetings = meetings;
        return this;
    }
    
    /**
     * Number of participants in meetings for user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("participants")
    public Long participants;
    public ReportUsers200ApplicationJSONUsers withParticipants(Long participants) {
        this.participants = participants;
        return this;
    }
    
    /**
     * User type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public Long type;
    public ReportUsers200ApplicationJSONUsers withType(Long type) {
        this.type = type;
        return this;
    }
    
    /**
     * User display name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_name")
    public String userName;
    public ReportUsers200ApplicationJSONUsers withUserName(String userName) {
        this.userName = userName;
        return this;
    }
    
}
