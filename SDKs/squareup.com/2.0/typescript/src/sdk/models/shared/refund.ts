/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AdditionalRecipient } from "./additionalrecipient";
import { Money } from "./money";
import { Expose, Type } from "class-transformer";

/**
 * Represents a refund processed for a Square transaction.
 */
export class Refund extends SpeakeasyBase {
  /**
   * Additional recipients (other than the merchant) receiving a portion of this refund.
   *
   * @remarks
   * For example, fees assessed on a refund of a purchase by a third party integration.
   */
  @SpeakeasyMetadata({ elemType: AdditionalRecipient })
  @Expose({ name: "additional_recipients" })
  @Type(() => AdditionalRecipient)
  additionalRecipients?: AdditionalRecipient[];

  /**
   * Represents an amount of money. `Money` fields can be signed or unsigned.
   *
   * @remarks
   * Fields that do not explicitly define whether they are signed or unsigned are
   * considered unsigned and can only hold positive amounts. For signed fields, the
   * sign of the value indicates the purpose of the money transfer. See
   * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
   * for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "amount_money" })
  @Type(() => Money)
  amountMoney: Money;

  /**
   * The timestamp for when the refund was created, in RFC 3339 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  /**
   * The refund's unique ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The ID of the refund's associated location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location_id" })
  locationId: string;

  /**
   * Represents an amount of money. `Money` fields can be signed or unsigned.
   *
   * @remarks
   * Fields that do not explicitly define whether they are signed or unsigned are
   * considered unsigned and can only hold positive amounts. For signed fields, the
   * sign of the value indicates the purpose of the money transfer. See
   * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
   * for more information.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "processing_fee_money" })
  @Type(() => Money)
  processingFeeMoney?: Money;

  /**
   * The reason for the refund being issued.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reason" })
  reason: string;

  /**
   * The current status of the refund (`PENDING`, `APPROVED`, `REJECTED`,
   *
   * @remarks
   * or `FAILED`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  /**
   * The ID of the refunded tender.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tender_id" })
  tenderId: string;

  /**
   * The ID of the transaction that the refunded tender is part of.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transaction_id" })
  transactionId: string;
}
