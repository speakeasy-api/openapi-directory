// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// PlayerSeasonStatsByPlayerFormatEnum - Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
type PlayerSeasonStatsByPlayerFormatEnum string

const (
	PlayerSeasonStatsByPlayerFormatEnumXML  PlayerSeasonStatsByPlayerFormatEnum = "XML"
	PlayerSeasonStatsByPlayerFormatEnumJSON PlayerSeasonStatsByPlayerFormatEnum = "JSON"
)

func (e *PlayerSeasonStatsByPlayerFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "XML":
		fallthrough
	case "JSON":
		*e = PlayerSeasonStatsByPlayerFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PlayerSeasonStatsByPlayerFormatEnum: %s", s)
	}
}

type PlayerSeasonStatsByPlayerRequest struct {
	// Desired response format. Valid entries are <code>XML</code> or <code>JSON</code>.
	Format PlayerSeasonStatsByPlayerFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Unique FantasyData Player ID.
	// Example:<code>30000378</code>.
	Playerid string `pathParam:"style=simple,explode=false,name=playerid"`
	// Year of the season.
	//  <br>Examples: <code>2016</code>, <code>2017</code>.
	//
	Season string `pathParam:"style=simple,explode=false,name=season"`
}

type PlayerSeasonStatsByPlayerResponse struct {
	ContentType  string
	PlayerSeason *shared.PlayerSeason
	StatusCode   int
	RawResponse  *http.Response
}
