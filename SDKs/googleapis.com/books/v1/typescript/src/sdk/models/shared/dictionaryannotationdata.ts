/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Dictlayerdata } from "./dictlayerdata";
import { Expose, Type } from "class-transformer";

/**
 * Successful response
 */
export class DictionaryAnnotationdata extends SpeakeasyBase {
  /**
   * The type of annotation this data is for.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "annotationType" })
  annotationType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => Dictlayerdata)
  data?: Dictlayerdata;

  /**
   * Base64 encoded data for this annotation data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "encodedData" })
  encodedData?: string;

  /**
   * Unique id for this annotation data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * Resource Type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The Layer id for this data. *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "layerId" })
  layerId?: string;

  /**
   * URL for this resource. *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  updated?: string;

  /**
   * The volume id for this data. *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "volumeId" })
  volumeId?: string;
}
