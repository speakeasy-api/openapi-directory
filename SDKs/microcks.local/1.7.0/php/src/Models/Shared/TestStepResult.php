<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * TestStepResult - TestStepResult is an entity embedded within TestCaseResult. They are created for each request associated with an operation / action of a microservice.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class TestStepResult
{
    /**
     * Elapsed time in milliseconds since the test step beginning
     * 
     * @var ?float $elapsedTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('elapsedTime')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $elapsedTime = null;
    
    /**
     * Name of event this test step is bound to
     * 
     * @var ?string $eventMessageName
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventMessageName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventMessageName = null;
    
    /**
     * Error message that may be associated to this test step
     * 
     * @var ?string $message
     */
	#[\JMS\Serializer\Annotation\SerializedName('message')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $message = null;
    
    /**
     * Name of request this test step is bound to
     * 
     * @var ?string $requestName
     */
	#[\JMS\Serializer\Annotation\SerializedName('requestName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $requestName = null;
    
    /**
     * Flag telling if test case is a success
     * 
     * @var bool $success
     */
	#[\JMS\Serializer\Annotation\SerializedName('success')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $success;
    
	public function __construct()
	{
		$this->elapsedTime = null;
		$this->eventMessageName = null;
		$this->message = null;
		$this->requestName = null;
		$this->success = false;
	}
}
