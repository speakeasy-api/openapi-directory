/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ProjectSettingsInput - Represents settings associated with a project.
 */
public class ProjectSettingsInput {
    /**
     * Gets or sets the classification type of the project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("classificationType")
    public ProjectSettingsClassificationTypeEnum classificationType;
    public ProjectSettingsInput withClassificationType(ProjectSettingsClassificationTypeEnum classificationType) {
        this.classificationType = classificationType;
        return this;
    }
    
    /**
     * Gets or sets the id of the Domain to use with this project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domainId")
    public String domainId;
    public ProjectSettingsInput withDomainId(String domainId) {
        this.domainId = domainId;
        return this;
    }
    
    /**
     * Represents image preprocessing settings used by image augmentation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageProcessingSettings")
    public ImageProcessingSettings imageProcessingSettings;
    public ProjectSettingsInput withImageProcessingSettings(ImageProcessingSettings imageProcessingSettings) {
        this.imageProcessingSettings = imageProcessingSettings;
        return this;
    }
    
    /**
     * A list of ExportPlatform that the trained model should be able to support.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetExportPlatforms")
    public ProjectSettingsTargetExportPlatformsEnum[] targetExportPlatforms;
    public ProjectSettingsInput withTargetExportPlatforms(ProjectSettingsTargetExportPlatformsEnum[] targetExportPlatforms) {
        this.targetExportPlatforms = targetExportPlatforms;
        return this;
    }
    
}
