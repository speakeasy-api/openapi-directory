"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Autoscaler = exports.AutoscalerStatusEnum = void 0;
var utils_1 = require("../../../internal/utils");
var autoscalerstatusdetails_1 = require("./autoscalerstatusdetails");
var autoscalingpolicy_1 = require("./autoscalingpolicy");
var scalingschedulestatus_1 = require("./scalingschedulestatus");
var class_transformer_1 = require("class-transformer");
/**
 * [Output Only] The status of the autoscaler configuration. Current set of possible values: - PENDING: Autoscaler backend hasn't read new/updated configuration. - DELETING: Configuration is being deleted. - ACTIVE: Configuration is acknowledged to be effective. Some warnings might be present in the statusDetails field. - ERROR: Configuration has errors. Actionable for users. Details are present in the statusDetails field. New values might be added in the future.
 */
var AutoscalerStatusEnum;
(function (AutoscalerStatusEnum) {
    AutoscalerStatusEnum["Active"] = "ACTIVE";
    AutoscalerStatusEnum["Deleting"] = "DELETING";
    AutoscalerStatusEnum["Error"] = "ERROR";
    AutoscalerStatusEnum["Pending"] = "PENDING";
})(AutoscalerStatusEnum = exports.AutoscalerStatusEnum || (exports.AutoscalerStatusEnum = {}));
/**
 * Represents an Autoscaler resource. Google Compute Engine has two Autoscaler resources: * [Zonal](/compute/docs/reference/rest/beta/autoscalers) * [Regional](/compute/docs/reference/rest/beta/regionAutoscalers) Use autoscalers to automatically add or delete instances from a managed instance group according to your defined autoscaling policy. For more information, read Autoscaling Groups of Instances. For zonal managed instance groups resource, use the autoscaler resource. For regional managed instance groups, use the regionAutoscalers resource.
 */
var Autoscaler = /** @class */ (function (_super) {
    __extends(Autoscaler, _super);
    function Autoscaler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "autoscalingPolicy" }),
        (0, class_transformer_1.Type)(function () { return autoscalingpolicy_1.AutoscalingPolicy; }),
        __metadata("design:type", autoscalingpolicy_1.AutoscalingPolicy)
    ], Autoscaler.prototype, "autoscalingPolicy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creationTimestamp" }),
        __metadata("design:type", String)
    ], Autoscaler.prototype, "creationTimestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "description" }),
        __metadata("design:type", String)
    ], Autoscaler.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], Autoscaler.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], Autoscaler.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], Autoscaler.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "recommendedSize" }),
        __metadata("design:type", Number)
    ], Autoscaler.prototype, "recommendedSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "region" }),
        __metadata("design:type", String)
    ], Autoscaler.prototype, "region", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: scalingschedulestatus_1.ScalingScheduleStatus }),
        (0, class_transformer_1.Expose)({ name: "scalingScheduleStatus" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            var obj = {};
            for (var key in value) {
                obj[key] = (0, utils_1.objectToClass)(value[key], scalingschedulestatus_1.ScalingScheduleStatus);
            }
            return obj;
        }, { toClassOnly: true }),
        __metadata("design:type", Object)
    ], Autoscaler.prototype, "scalingScheduleStatus", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLink" }),
        __metadata("design:type", String)
    ], Autoscaler.prototype, "selfLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], Autoscaler.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: autoscalerstatusdetails_1.AutoscalerStatusDetails }),
        (0, class_transformer_1.Expose)({ name: "statusDetails" }),
        (0, class_transformer_1.Type)(function () { return autoscalerstatusdetails_1.AutoscalerStatusDetails; }),
        __metadata("design:type", Array)
    ], Autoscaler.prototype, "statusDetails", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "target" }),
        __metadata("design:type", String)
    ], Autoscaler.prototype, "target", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "zone" }),
        __metadata("design:type", String)
    ], Autoscaler.prototype, "zone", void 0);
    return Autoscaler;
}(utils_1.SpeakeasyBase));
exports.Autoscaler = Autoscaler;
