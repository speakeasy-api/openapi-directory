<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RunPivotReportResponse - The response pivot report table corresponding to a pivot request.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RunPivotReportResponse
{
    /**
     * Aggregation of metric values. Can be totals, minimums, or maximums. The returned aggregations are controlled by the metric_aggregations in the pivot. The type of aggregation returned in each row is shown by the dimension_values which are set to "RESERVED_".
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Row> $aggregates
     */
	#[\JMS\Serializer\Annotation\SerializedName('aggregates')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Row>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $aggregates = null;
    
    /**
     * Describes dimension columns. The number of DimensionHeaders and ordering of DimensionHeaders matches the dimensions present in rows.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DimensionHeader> $dimensionHeaders
     */
	#[\JMS\Serializer\Annotation\SerializedName('dimensionHeaders')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\DimensionHeader>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $dimensionHeaders = null;
    
    /**
     * Identifies what kind of resource this message is. This `kind` is always the fixed string "analyticsData#runPivotReport". Useful to distinguish between response types in JSON.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * Response's metadata carrying additional information about the report content.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ResponseMetaData $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ResponseMetaData')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ResponseMetaData $metadata = null;
    
    /**
     * Describes metric columns. The number of MetricHeaders and ordering of MetricHeaders matches the metrics present in rows.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\MetricHeader> $metricHeaders
     */
	#[\JMS\Serializer\Annotation\SerializedName('metricHeaders')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\MetricHeader>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $metricHeaders = null;
    
    /**
     * Summarizes the columns and rows created by a pivot. Each pivot in the request produces one header in the response. If we have a request like this: "pivots": [{ "fieldNames": ["country", "city"] }, { "fieldNames": "eventName" }] We will have the following `pivotHeaders` in the response: "pivotHeaders" : [{ "dimensionHeaders": [{ "dimensionValues": [ { "value": "United Kingdom" }, { "value": "London" } ] }, { "dimensionValues": [ { "value": "Japan" }, { "value": "Osaka" } ] }] }, { "dimensionHeaders": [{ "dimensionValues": [{ "value": "session_start" }] }, { "dimensionValues": [{ "value": "scroll" }] }] }]
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\PivotHeader> $pivotHeaders
     */
	#[\JMS\Serializer\Annotation\SerializedName('pivotHeaders')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PivotHeader>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $pivotHeaders = null;
    
    /**
     * Current state of all quotas for this Analytics Property. If any quota for a property is exhausted, all requests to that property will return Resource Exhausted errors.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\PropertyQuota $propertyQuota
     */
	#[\JMS\Serializer\Annotation\SerializedName('propertyQuota')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PropertyQuota')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PropertyQuota $propertyQuota = null;
    
    /**
     * Rows of dimension value combinations and metric values in the report.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Row> $rows
     */
	#[\JMS\Serializer\Annotation\SerializedName('rows')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Row>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $rows = null;
    
	public function __construct()
	{
		$this->aggregates = null;
		$this->dimensionHeaders = null;
		$this->kind = null;
		$this->metadata = null;
		$this->metricHeaders = null;
		$this->pivotHeaders = null;
		$this->propertyQuota = null;
		$this->rows = null;
	}
}
