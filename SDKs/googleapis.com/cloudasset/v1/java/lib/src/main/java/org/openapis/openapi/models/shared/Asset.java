/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Asset - An asset in Google Cloud. An asset can be any resource in the Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), a resource outside the Google Cloud resource hierarchy (such as Google Kubernetes Engine clusters and objects), or a policy (e.g. IAM policy), or a relationship (e.g. an INSTANCE_TO_INSTANCEGROUP relationship). See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information.
 */
public class Asset {
    /**
     * An `AccessLevel` is a label that can be applied to requests to Google Cloud services, along with a list of requirements necessary for the label to be applied.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessLevel")
    public GoogleIdentityAccesscontextmanagerV1AccessLevel accessLevel;

    public Asset withAccessLevel(GoogleIdentityAccesscontextmanagerV1AccessLevel accessLevel) {
        this.accessLevel = accessLevel;
        return this;
    }
    
    /**
     * `AccessPolicy` is a container for `AccessLevels` (which define the necessary attributes to use Google Cloud services) and `ServicePerimeters` (which define regions of services able to freely pass data within a perimeter). An access policy is globally visible within an organization, and the restrictions it specifies apply to all projects within an organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessPolicy")
    public GoogleIdentityAccesscontextmanagerV1AccessPolicy accessPolicy;

    public Asset withAccessPolicy(GoogleIdentityAccesscontextmanagerV1AccessPolicy accessPolicy) {
        this.accessPolicy = accessPolicy;
        return this;
    }
    
    /**
     * The ancestry path of an asset in Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), represented as a list of relative resource names. An ancestry path starts with the closest ancestor in the hierarchy and ends at root. If the asset is a project, folder, or organization, the ancestry path starts from the asset itself. Example: `["projects/123456789", "folders/5432", "organizations/1234"]`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ancestors")
    public String[] ancestors;

    public Asset withAncestors(String[] ancestors) {
        this.ancestors = ancestors;
        return this;
    }
    
    /**
     * The type of the asset. Example: `compute.googleapis.com/Disk` See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assetType")
    public String assetType;

    public Asset withAssetType(String assetType) {
        this.assetType = assetType;
        return this;
    }
    
    /**
     * An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { "bindings": [ { "role": "roles/resourcemanager.organizationAdmin", "members": [ "user:mike@example.com", "group:admins@example.com", "domain:google.com", "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role": "roles/resourcemanager.organizationViewer", "members": [ "user:eve@example.com" ], "condition": { "title": "expirable access", "description": "Does not grant access after Sep 2020", "expression": "request.time &lt; timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag": "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time &lt; timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iamPolicy")
    public Policy iamPolicy;

    public Asset withIamPolicy(Policy iamPolicy) {
        this.iamPolicy = iamPolicy;
        return this;
    }
    
    /**
     * The full name of the asset. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1` See [Resource names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Asset withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A representation of an [organization policy](https://cloud.google.com/resource-manager/docs/organization-policy/overview#organization_policy). There can be more than one organization policy with different constraints set on a given resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orgPolicy")
    public GoogleCloudOrgpolicyV1Policy[] orgPolicy;

    public Asset withOrgPolicy(GoogleCloudOrgpolicyV1Policy[] orgPolicy) {
        this.orgPolicy = orgPolicy;
        return this;
    }
    
    /**
     * This API resource represents the available inventory data for a Compute Engine virtual machine (VM) instance at a given point in time. You can use this API resource to determine the inventory data of your VM. For more information, see [Information provided by OS inventory management](https://cloud.google.com/compute/docs/instances/os-inventory-management#data-collected).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osInventory")
    public Inventory osInventory;

    public Asset withOsInventory(Inventory osInventory) {
        this.osInventory = osInventory;
        return this;
    }
    
    /**
     * An asset identifier in Google Cloud which contains its name, type and ancestors. An asset can be any resource in the Google Cloud [resource hierarchy](https://cloud.google.com/resource-manager/docs/cloud-platform-resource-hierarchy), a resource outside the Google Cloud resource hierarchy (such as Google Kubernetes Engine clusters and objects), or a policy (e.g. IAM policy). See [Supported asset types](https://cloud.google.com/asset-inventory/docs/supported-asset-types) for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relatedAsset")
    public RelatedAsset relatedAsset;

    public Asset withRelatedAsset(RelatedAsset relatedAsset) {
        this.relatedAsset = relatedAsset;
        return this;
    }
    
    /**
     * DEPRECATED. This message only presents for the purpose of backward-compatibility. The server will never populate this message in responses. The detailed related assets with the `relationship_type`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relatedAssets")
    public RelatedAssets relatedAssets;

    public Asset withRelatedAssets(RelatedAssets relatedAssets) {
        this.relatedAssets = relatedAssets;
        return this;
    }
    
    /**
     * A representation of a Google Cloud resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resource")
    public Resource resource;

    public Asset withResource(Resource resource) {
        this.resource = resource;
        return this;
    }
    
    /**
     * `ServicePerimeter` describes a set of Google Cloud resources which can freely import and export data amongst themselves, but not export outside of the `ServicePerimeter`. If a request with a source within this `ServicePerimeter` has a target outside of the `ServicePerimeter`, the request will be blocked. Otherwise the request is allowed. There are two types of Service Perimeter - Regular and Bridge. Regular Service Perimeters cannot overlap, a single Google Cloud project or VPC network can only belong to a single regular Service Perimeter. Service Perimeter Bridges can contain only Google Cloud projects as members, a single Google Cloud project may belong to multiple Service Perimeter Bridges.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("servicePerimeter")
    public GoogleIdentityAccesscontextmanagerV1ServicePerimeter servicePerimeter;

    public Asset withServicePerimeter(GoogleIdentityAccesscontextmanagerV1ServicePerimeter servicePerimeter) {
        this.servicePerimeter = servicePerimeter;
        return this;
    }
    
    /**
     * The last update timestamp of an asset. update_time is updated when create/update/delete operation is performed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public Asset withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public Asset(){}
}
