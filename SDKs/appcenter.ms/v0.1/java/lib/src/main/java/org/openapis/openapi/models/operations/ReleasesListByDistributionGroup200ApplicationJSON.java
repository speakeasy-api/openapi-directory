/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ReleasesListByDistributionGroup200ApplicationJSON - Response for getting a list of releases in a distribution group
 */
public class ReleasesListByDistributionGroup200ApplicationJSON {
    /**
     * This value determines the whether a release currently is enabled or disabled.
     */
    @JsonProperty("enabled")
    public Boolean enabled;
    public ReleasesListByDistributionGroup200ApplicationJSON withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * ID identifying this unique release.
     */
    @JsonProperty("id")
    public Long id;
    public ReleasesListByDistributionGroup200ApplicationJSON withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * This value determines if a release is external or not.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_external_build")
    public Boolean isExternalBuild;
    public ReleasesListByDistributionGroup200ApplicationJSON withIsExternalBuild(Boolean isExternalBuild) {
        this.isExternalBuild = isExternalBuild;
        return this;
    }
    
    /**
     * A boolean which determines whether the release is a mandatory update or not.
     */
    @JsonProperty("mandatory_update")
    public Boolean mandatoryUpdate;
    public ReleasesListByDistributionGroup200ApplicationJSON withMandatoryUpdate(Boolean mandatoryUpdate) {
        this.mandatoryUpdate = mandatoryUpdate;
        return this;
    }
    
    /**
     * The release's origin
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("origin")
    public ReleasesListByDistributionGroup200ApplicationJSONOriginEnum origin;
    public ReleasesListByDistributionGroup200ApplicationJSON withOrigin(ReleasesListByDistributionGroup200ApplicationJSONOriginEnum origin) {
        this.origin = origin;
        return this;
    }
    
    /**
     * The release's short version.&lt;br&gt;
     * For iOS: CFBundleShortVersionString from info.plist.&lt;br&gt;
     * For Android: android:versionName from AppManifest.xml.
     * 
     */
    @JsonProperty("short_version")
    public String shortVersion;
    public ReleasesListByDistributionGroup200ApplicationJSON withShortVersion(String shortVersion) {
        this.shortVersion = shortVersion;
        return this;
    }
    
    /**
     * UTC time in ISO 8601 format of the uploaded time.
     */
    @JsonProperty("uploaded_at")
    public String uploadedAt;
    public ReleasesListByDistributionGroup200ApplicationJSON withUploadedAt(String uploadedAt) {
        this.uploadedAt = uploadedAt;
        return this;
    }
    
    /**
     * The release's version.&lt;br&gt;
     * For iOS: CFBundleVersion from info.plist.&lt;br&gt;
     * For Android: android:versionCode from AppManifest.xml.
     * 
     */
    @JsonProperty("version")
    public String version;
    public ReleasesListByDistributionGroup200ApplicationJSON withVersion(String version) {
        this.version = version;
        return this;
    }
    
}
