"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import operationdnskeycontext as shared_operationdnskeycontext
from ..shared import operationmanagedzonecontext as shared_operationmanagedzonecontext
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class OperationStatusEnum(str, Enum):
    r"""Status of the operation. Can be one of the following: \\"PENDING\\" or \\"DONE\\" (output only). A status of \\"DONE\\" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet."""
    PENDING = 'pending'
    DONE = 'done'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Operation:
    r"""An operation represents a successful mutation performed on a Cloud DNS resource. Operations provide: - An audit log of server resource mutations. - A way to recover/retry API calls in the case where the response is never received by the caller. Use the caller specified client_operation_id."""
    
    dns_key_context: Optional[shared_operationdnskeycontext.OperationDNSKeyContext] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dnsKeyContext'), 'exclude': lambda f: f is None }})  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier for the resource. This is the client_operation_id if the client specified it when the mutation was initiated, otherwise, it is generated by the server. The name must be 1-63 characters long and match the regular expression [-a-z0-9]? (output only)"""  
    kind: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('kind'), 'exclude': lambda f: f is None }})  
    start_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('startTime'), 'exclude': lambda f: f is None }})
    r"""The time that this operation was started by the server. This is in RFC3339 text format (output only)."""  
    status: Optional[OperationStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the operation. Can be one of the following: \\"PENDING\\" or \\"DONE\\" (output only). A status of \\"DONE\\" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet."""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Type of the operation. Operations include insert, update, and delete (output only)."""  
    user: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user'), 'exclude': lambda f: f is None }})
    r"""User who requested the operation, for example: user@example.com. cloud-dns-system for operations automatically done by the system. (output only)"""  
    zone_context: Optional[shared_operationmanagedzonecontext.OperationManagedZoneContext] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zoneContext'), 'exclude': lambda f: f is None }})  
    