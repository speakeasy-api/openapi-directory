// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteTrafficMirrorTargetActionEnum
type GETDeleteTrafficMirrorTargetActionEnum string

const (
	GETDeleteTrafficMirrorTargetActionEnumDeleteTrafficMirrorTarget GETDeleteTrafficMirrorTargetActionEnum = "DeleteTrafficMirrorTarget"
)

func (e *GETDeleteTrafficMirrorTargetActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteTrafficMirrorTarget":
		*e = GETDeleteTrafficMirrorTargetActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteTrafficMirrorTargetActionEnum: %s", s)
	}
}

// GETDeleteTrafficMirrorTargetVersionEnum
type GETDeleteTrafficMirrorTargetVersionEnum string

const (
	GETDeleteTrafficMirrorTargetVersionEnumTwoThousandAndSixteen1115 GETDeleteTrafficMirrorTargetVersionEnum = "2016-11-15"
)

func (e *GETDeleteTrafficMirrorTargetVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETDeleteTrafficMirrorTargetVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteTrafficMirrorTargetVersionEnum: %s", s)
	}
}

type GETDeleteTrafficMirrorTargetRequest struct {
	Action GETDeleteTrafficMirrorTargetActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the Traffic Mirror target.
	TrafficMirrorTargetID string                                  `queryParam:"style=form,explode=true,name=TrafficMirrorTargetId"`
	Version               GETDeleteTrafficMirrorTargetVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm         *string                                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteTrafficMirrorTargetResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
