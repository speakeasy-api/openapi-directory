"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class TransportationIncentivesLawsPocsOutputFormatEnum(str, Enum):
    r"""Response format"""
    JSON = 'json'
    XML = 'xml'


@dataclasses.dataclass
class TransportationIncentivesLawsPocsRequest:
    
    api_key: str = dataclasses.field(metadata={'query_param': { 'field_name': 'api_key', 'style': 'form', 'explode': True }})
    r"""API Key"""  
    jurisdiction: str = dataclasses.field(metadata={'query_param': { 'field_name': 'jurisdiction', 'style': 'form', 'explode': True }})
    r"""Return the points of contact for the given Jurisdiction. Jurisdiction must be given as a two character state code (eg, 'CO' for Colorado). A single jurisdiction, or a comma-separate list of multiple jurisdiction, may be given.  Use the code 'US' for federal laws and the code 'DC' for Washington D.C."""  
    output_format: TransportationIncentivesLawsPocsOutputFormatEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'output_format', 'style': 'simple', 'explode': False }})
    r"""Response format"""  
    

@dataclasses.dataclass
class TransportationIncentivesLawsPocsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    