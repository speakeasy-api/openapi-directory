/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GetSearchVersionNumberCSCategoryExtRequest {
    /**
     * Bottom right position of the bounding box. This is specified as a comma separated string composed of lat., lon.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=btmRight")
    public String btmRight;

    public GetSearchVersionNumberCSCategoryExtRequest withBtmRight(String btmRight) {
        this.btmRight = btmRight;
        return this;
    }
    
    /**
     * Query string. Must be properly URL encoded.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=category")
    public String category;

    public GetSearchVersionNumberCSCategoryExtRequest withCategory(String category) {
        this.category = category;
        return this;
    }
    
    /**
     * Comma separated string of country codes. This will limit the search to the specified countries.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=countrySet")
    public String countrySet;

    public GetSearchVersionNumberCSCategoryExtRequest withCountrySet(String countrySet) {
        this.countrySet = countrySet;
        return this;
    }
    
    /**
     * Expected response format.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=ext")
    public org.openapis.openapi.models.shared.ExtEnum ext;

    public GetSearchVersionNumberCSCategoryExtRequest withExt(org.openapis.openapi.models.shared.ExtEnum ext) {
        this.ext = ext;
        return this;
    }
    
    /**
     * A comma separated list of indexes which should be utilized for the search. Item order does not matter. Available indexes are:
     *   - &lt;b&gt;Addr&lt;/b&gt; = Address range interpolation (when there is no PAD)
     *   - &lt;b&gt;Geo&lt;/b&gt; = Geographies
     *   - &lt;b&gt;PAD&lt;/b&gt; = Point Addresses
     *   - &lt;b&gt;POI&lt;/b&gt; = Points of interest
     *   - &lt;b&gt;Str&lt;/b&gt; = Streets
     *   - &lt;b&gt;Xstr&lt;/b&gt; = Cross Streets (intersections)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=idxSet")
    public String idxSet;

    public GetSearchVersionNumberCSCategoryExtRequest withIdxSet(String idxSet) {
        this.idxSet = idxSet;
        return this;
    }
    
    /**
     * Language in which search results should be returned. Should be one of &lt;a href="/search-api/search-api-documentation/supported-languages"&gt;supported IETF language tags&lt;/a&gt;, case insensitive.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=language")
    public String language;

    public GetSearchVersionNumberCSCategoryExtRequest withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    /**
     * Latitude where results should be biased.
     * NOTE: supplying a lat/lon without a radius will return search results biased to that point.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=lat")
    public Float lat;

    public GetSearchVersionNumberCSCategoryExtRequest withLat(Float lat) {
        this.lat = lat;
        return this;
    }
    
    /**
     * Maximum number of search results that will be returned.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;

    public GetSearchVersionNumberCSCategoryExtRequest withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Longitude where results should be biased
     * NOTE: supplying a lat/lon without a radius will return search results biased to that point.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=lon")
    public Float lon;

    public GetSearchVersionNumberCSCategoryExtRequest withLon(Float lon) {
        this.lon = lon;
        return this;
    }
    
    /**
     * Starting offset of the returned results within the full result set.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ofs")
    public Long ofs;

    public GetSearchVersionNumberCSCategoryExtRequest withOfs(Long ofs) {
        this.ofs = ofs;
        return this;
    }
    
    /**
     * If radius &lt;b&gt;and&lt;/b&gt; position are set, the results will be constrained to the defined area. The radius parameter is specified in meters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=radius")
    public Long radius;

    public GetSearchVersionNumberCSCategoryExtRequest withRadius(Long radius) {
        this.radius = radius;
        return this;
    }
    
    /**
     * Top left position of the bounding box. This is specified as a comma separated string composed of lat., lon.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=topLeft")
    public String topLeft;

    public GetSearchVersionNumberCSCategoryExtRequest withTopLeft(String topLeft) {
        this.topLeft = topLeft;
        return this;
    }
    
    /**
     * If the "typeahead" flag is set, the query will be interpreted as a partial input and the search will enter &lt;b&gt;predictive&lt;/b&gt; mode.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=typeahead")
    public Boolean typeahead;

    public GetSearchVersionNumberCSCategoryExtRequest withTypeahead(Boolean typeahead) {
        this.typeahead = typeahead;
        return this;
    }
    
    /**
     * Service version number. The current value is 2.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=versionNumber")
    public org.openapis.openapi.models.shared.VersionNumberEnum versionNumber;

    public GetSearchVersionNumberCSCategoryExtRequest withVersionNumber(org.openapis.openapi.models.shared.VersionNumberEnum versionNumber) {
        this.versionNumber = versionNumber;
        return this;
    }
    
    /**
     * Geopolitical View.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=view")
    public org.openapis.openapi.models.shared.ViewEnum view;

    public GetSearchVersionNumberCSCategoryExtRequest withView(org.openapis.openapi.models.shared.ViewEnum view) {
        this.view = view;
        return this;
    }
    
    public GetSearchVersionNumberCSCategoryExtRequest(@JsonProperty("category") String category, @JsonProperty("ext") org.openapis.openapi.models.shared.ExtEnum ext, @JsonProperty("versionNumber") org.openapis.openapi.models.shared.VersionNumberEnum versionNumber) {
        this.category = category;
        this.ext = ext;
        this.versionNumber = versionNumber;
  }
}
