<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VmToVmEgressWorkload - Specify VM to VM egress.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VmToVmEgressWorkload
{
    /**
     * Egress traffic between two regions.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InterRegionEgress $interRegionEgress
     */
	#[\JMS\Serializer\Annotation\SerializedName('interRegionEgress')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\InterRegionEgress')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?InterRegionEgress $interRegionEgress = null;
    
    /**
     * Egress traffic within the same region. When source region and destination region are in the same zone, using the internal IP addresses, there isn't any egress charge.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\IntraRegionEgress $intraRegionEgress
     */
	#[\JMS\Serializer\Annotation\SerializedName('intraRegionEgress')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\IntraRegionEgress')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?IntraRegionEgress $intraRegionEgress = null;
    
	public function __construct()
	{
		$this->interRegionEgress = null;
		$this->intraRegionEgress = null;
	}
}
