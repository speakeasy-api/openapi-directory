// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BatchGetValuesByDataFilterRequestDateTimeRenderOptionEnum - How dates, times, and durations should be represented in the output. This is ignored if value_render_option is FORMATTED_VALUE. The default dateTime render option is SERIAL_NUMBER.
type BatchGetValuesByDataFilterRequestDateTimeRenderOptionEnum string

const (
	BatchGetValuesByDataFilterRequestDateTimeRenderOptionEnumSerialNumber    BatchGetValuesByDataFilterRequestDateTimeRenderOptionEnum = "SERIAL_NUMBER"
	BatchGetValuesByDataFilterRequestDateTimeRenderOptionEnumFormattedString BatchGetValuesByDataFilterRequestDateTimeRenderOptionEnum = "FORMATTED_STRING"
)

func (e BatchGetValuesByDataFilterRequestDateTimeRenderOptionEnum) ToPointer() *BatchGetValuesByDataFilterRequestDateTimeRenderOptionEnum {
	return &e
}

func (e *BatchGetValuesByDataFilterRequestDateTimeRenderOptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SERIAL_NUMBER":
		fallthrough
	case "FORMATTED_STRING":
		*e = BatchGetValuesByDataFilterRequestDateTimeRenderOptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchGetValuesByDataFilterRequestDateTimeRenderOptionEnum: %v", v)
	}
}

// BatchGetValuesByDataFilterRequestMajorDimensionEnum - The major dimension that results should use. For example, if the spreadsheet data is: `A1=1,B1=2,A2=3,B2=4`, then a request that selects that range and sets `majorDimension=ROWS` returns `[[1,2],[3,4]]`, whereas a request that sets `majorDimension=COLUMNS` returns `[[1,3],[2,4]]`.
type BatchGetValuesByDataFilterRequestMajorDimensionEnum string

const (
	BatchGetValuesByDataFilterRequestMajorDimensionEnumDimensionUnspecified BatchGetValuesByDataFilterRequestMajorDimensionEnum = "DIMENSION_UNSPECIFIED"
	BatchGetValuesByDataFilterRequestMajorDimensionEnumRows                 BatchGetValuesByDataFilterRequestMajorDimensionEnum = "ROWS"
	BatchGetValuesByDataFilterRequestMajorDimensionEnumColumns              BatchGetValuesByDataFilterRequestMajorDimensionEnum = "COLUMNS"
)

func (e BatchGetValuesByDataFilterRequestMajorDimensionEnum) ToPointer() *BatchGetValuesByDataFilterRequestMajorDimensionEnum {
	return &e
}

func (e *BatchGetValuesByDataFilterRequestMajorDimensionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DIMENSION_UNSPECIFIED":
		fallthrough
	case "ROWS":
		fallthrough
	case "COLUMNS":
		*e = BatchGetValuesByDataFilterRequestMajorDimensionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchGetValuesByDataFilterRequestMajorDimensionEnum: %v", v)
	}
}

// BatchGetValuesByDataFilterRequestValueRenderOptionEnum - How values should be represented in the output. The default render option is FORMATTED_VALUE.
type BatchGetValuesByDataFilterRequestValueRenderOptionEnum string

const (
	BatchGetValuesByDataFilterRequestValueRenderOptionEnumFormattedValue   BatchGetValuesByDataFilterRequestValueRenderOptionEnum = "FORMATTED_VALUE"
	BatchGetValuesByDataFilterRequestValueRenderOptionEnumUnformattedValue BatchGetValuesByDataFilterRequestValueRenderOptionEnum = "UNFORMATTED_VALUE"
	BatchGetValuesByDataFilterRequestValueRenderOptionEnumFormula          BatchGetValuesByDataFilterRequestValueRenderOptionEnum = "FORMULA"
)

func (e BatchGetValuesByDataFilterRequestValueRenderOptionEnum) ToPointer() *BatchGetValuesByDataFilterRequestValueRenderOptionEnum {
	return &e
}

func (e *BatchGetValuesByDataFilterRequestValueRenderOptionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "FORMATTED_VALUE":
		fallthrough
	case "UNFORMATTED_VALUE":
		fallthrough
	case "FORMULA":
		*e = BatchGetValuesByDataFilterRequestValueRenderOptionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchGetValuesByDataFilterRequestValueRenderOptionEnum: %v", v)
	}
}

// BatchGetValuesByDataFilterRequest - The request for retrieving a range of values in a spreadsheet selected by a set of DataFilters.
type BatchGetValuesByDataFilterRequest struct {
	// The data filters used to match the ranges of values to retrieve. Ranges that match any of the specified data filters are included in the response.
	DataFilters []DataFilter `json:"dataFilters,omitempty"`
	// How dates, times, and durations should be represented in the output. This is ignored if value_render_option is FORMATTED_VALUE. The default dateTime render option is SERIAL_NUMBER.
	DateTimeRenderOption *BatchGetValuesByDataFilterRequestDateTimeRenderOptionEnum `json:"dateTimeRenderOption,omitempty"`
	// The major dimension that results should use. For example, if the spreadsheet data is: `A1=1,B1=2,A2=3,B2=4`, then a request that selects that range and sets `majorDimension=ROWS` returns `[[1,2],[3,4]]`, whereas a request that sets `majorDimension=COLUMNS` returns `[[1,3],[2,4]]`.
	MajorDimension *BatchGetValuesByDataFilterRequestMajorDimensionEnum `json:"majorDimension,omitempty"`
	// How values should be represented in the output. The default render option is FORMATTED_VALUE.
	ValueRenderOption *BatchGetValuesByDataFilterRequestValueRenderOptionEnum `json:"valueRenderOption,omitempty"`
}
