// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetCommentsAlt1DirectionEnum - The sort direction of the results.
type GetCommentsAlt1DirectionEnum string

const (
	GetCommentsAlt1DirectionEnumAsc  GetCommentsAlt1DirectionEnum = "asc"
	GetCommentsAlt1DirectionEnumDesc GetCommentsAlt1DirectionEnum = "desc"
)

func (e *GetCommentsAlt1DirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetCommentsAlt1DirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetCommentsAlt1DirectionEnum: %s", s)
	}
}

type GetCommentsAlt1Request struct {
	// The ID of the channel.
	ChannelID float64 `pathParam:"style=simple,explode=false,name=channel_id"`
	// The sort direction of the results.
	Direction *GetCommentsAlt1DirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The ID of the video.
	VideoID float64 `pathParam:"style=simple,explode=false,name=video_id"`
}

type GetCommentsAlt1Response struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The comments were returned.
	Comments []shared.Comment
}
