"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SignInAttempt = exports.SignInAttemptTypeEnum = exports.SignInAttemptCategoryEnum = void 0;
var utils_1 = require("../../../internal/utils");
var client_1 = require("./client");
var details_1 = require("./details");
var user_1 = require("./user");
var class_transformer_1 = require("class-transformer");
var SignInAttemptCategoryEnum;
(function (SignInAttemptCategoryEnum) {
    SignInAttemptCategoryEnum["Success"] = "success";
    SignInAttemptCategoryEnum["CredentialsFailed"] = "credentials_failed";
    SignInAttemptCategoryEnum["MfaFailed"] = "mfa_failed";
    SignInAttemptCategoryEnum["ModernVersionFailed"] = "modern_version_failed";
    SignInAttemptCategoryEnum["FirewallFailed"] = "firewall_failed";
    SignInAttemptCategoryEnum["FirewallReportedSuccess"] = "firewall_reported_success";
})(SignInAttemptCategoryEnum = exports.SignInAttemptCategoryEnum || (exports.SignInAttemptCategoryEnum = {}));
var SignInAttemptTypeEnum;
(function (SignInAttemptTypeEnum) {
    SignInAttemptTypeEnum["CredentialsOk"] = "credentials_ok";
    SignInAttemptTypeEnum["MfaOk"] = "mfa_ok";
    SignInAttemptTypeEnum["PasswordSecretBad"] = "password_secret_bad";
    SignInAttemptTypeEnum["MfaMissing"] = "mfa_missing";
    SignInAttemptTypeEnum["TotpDisabled"] = "totp_disabled";
    SignInAttemptTypeEnum["TotpBad"] = "totp_bad";
    SignInAttemptTypeEnum["TotpTimeout"] = "totp_timeout";
    SignInAttemptTypeEnum["U2fDisabled"] = "u2f_disabled";
    SignInAttemptTypeEnum["U2fBad"] = "u2f_bad";
    SignInAttemptTypeEnum["U2fTimout"] = "u2f_timout";
    SignInAttemptTypeEnum["DuoDisabled"] = "duo_disabled";
    SignInAttemptTypeEnum["DuoBad"] = "duo_bad";
    SignInAttemptTypeEnum["DuoTimeout"] = "duo_timeout";
    SignInAttemptTypeEnum["DuoNativeBad"] = "duo_native_bad";
    SignInAttemptTypeEnum["PlatformSecretDisabled"] = "platform_secret_disabled";
    SignInAttemptTypeEnum["PlatformSecretBad"] = "platform_secret_bad";
    SignInAttemptTypeEnum["PlatformSecretProxy"] = "platform_secret_proxy";
    SignInAttemptTypeEnum["CodeDisabled"] = "code_disabled";
    SignInAttemptTypeEnum["CodeBad"] = "code_bad";
    SignInAttemptTypeEnum["CodeTimeout"] = "code_timeout";
    SignInAttemptTypeEnum["IpBlocked"] = "ip_blocked";
    SignInAttemptTypeEnum["ContinentBlocked"] = "continent_blocked";
    SignInAttemptTypeEnum["CountryBlocked"] = "country_blocked";
    SignInAttemptTypeEnum["AnonymousBlocked"] = "anonymous_blocked";
    SignInAttemptTypeEnum["AllBlocked"] = "all_blocked";
    SignInAttemptTypeEnum["ModernVersionMissing"] = "modern_version_missing";
    SignInAttemptTypeEnum["ModernVersionOld"] = "modern_version_old";
})(SignInAttemptTypeEnum = exports.SignInAttemptTypeEnum || (exports.SignInAttemptTypeEnum = {}));
/**
 * A single sign-in attempt object
 */
var SignInAttempt = /** @class */ (function (_super) {
    __extends(SignInAttempt, _super);
    function SignInAttempt() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "category" }),
        __metadata("design:type", String)
    ], SignInAttempt.prototype, "category", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "client" }),
        (0, class_transformer_1.Type)(function () { return client_1.Client; }),
        __metadata("design:type", client_1.Client)
    ], SignInAttempt.prototype, "client", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "country" }),
        __metadata("design:type", String)
    ], SignInAttempt.prototype, "country", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "details" }),
        (0, class_transformer_1.Type)(function () { return details_1.Details; }),
        __metadata("design:type", details_1.Details)
    ], SignInAttempt.prototype, "details", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "session_uuid" }),
        __metadata("design:type", String)
    ], SignInAttempt.prototype, "sessionUuid", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "target_user" }),
        (0, class_transformer_1.Type)(function () { return user_1.User; }),
        __metadata("design:type", user_1.User)
    ], SignInAttempt.prototype, "targetUser", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "timestamp" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], SignInAttempt.prototype, "timestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], SignInAttempt.prototype, "type", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "uuid" }),
        __metadata("design:type", String)
    ], SignInAttempt.prototype, "uuid", void 0);
    return SignInAttempt;
}(utils_1.SpeakeasyBase));
exports.SignInAttempt = SignInAttempt;
