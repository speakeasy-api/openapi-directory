/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETPutWarmPoolQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETPutWarmPoolActionEnum action;
    public GETPutWarmPoolQueryParams withAction(GETPutWarmPoolActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The name of the Auto Scaling group.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=AutoScalingGroupName")
    public String autoScalingGroupName;
    public GETPutWarmPoolQueryParams withAutoScalingGroupName(String autoScalingGroupName) {
        this.autoScalingGroupName = autoScalingGroupName;
        return this;
    }
    
    /**
     * Indicates whether instances in the Auto Scaling group can be returned to the warm pool on scale in. The default is to terminate instances in the Auto Scaling group when the group scales in.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=InstanceReusePolicy")
    public GETPutWarmPoolInstanceReusePolicy instanceReusePolicy;
    public GETPutWarmPoolQueryParams withInstanceReusePolicy(GETPutWarmPoolInstanceReusePolicy instanceReusePolicy) {
        this.instanceReusePolicy = instanceReusePolicy;
        return this;
    }
    
    /**
     * &lt;p&gt;Specifies the maximum number of instances that are allowed to be in the warm pool or in any state except &lt;code&gt;Terminated&lt;/code&gt; for the Auto Scaling group. This is an optional property. Specify it only if you do not want the warm pool size to be determined by the difference between the group's maximum capacity and its desired capacity. &lt;/p&gt; &lt;important&gt; &lt;p&gt;If a value for &lt;code&gt;MaxGroupPreparedCapacity&lt;/code&gt; is not specified, Amazon EC2 Auto Scaling launches and maintains the difference between the group's maximum capacity and its desired capacity. If you specify a value for &lt;code&gt;MaxGroupPreparedCapacity&lt;/code&gt;, Amazon EC2 Auto Scaling uses the difference between the &lt;code&gt;MaxGroupPreparedCapacity&lt;/code&gt; and the desired capacity instead. &lt;/p&gt; &lt;p&gt;The size of the warm pool is dynamic. Only when &lt;code&gt;MaxGroupPreparedCapacity&lt;/code&gt; and &lt;code&gt;MinSize&lt;/code&gt; are set to the same value does the warm pool have an absolute size.&lt;/p&gt; &lt;/important&gt; &lt;p&gt;If the desired capacity of the Auto Scaling group is higher than the &lt;code&gt;MaxGroupPreparedCapacity&lt;/code&gt;, the capacity of the warm pool is 0, unless you specify a value for &lt;code&gt;MinSize&lt;/code&gt;. To remove a value that you previously set, include the property but specify -1 for the value. &lt;/p&gt;
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=MaxGroupPreparedCapacity")
    public Long maxGroupPreparedCapacity;
    public GETPutWarmPoolQueryParams withMaxGroupPreparedCapacity(Long maxGroupPreparedCapacity) {
        this.maxGroupPreparedCapacity = maxGroupPreparedCapacity;
        return this;
    }
    
    /**
     * Specifies the minimum number of instances to maintain in the warm pool. This helps you to ensure that there is always a certain number of warmed instances available to handle traffic spikes. Defaults to 0 if not specified.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=MinSize")
    public Long minSize;
    public GETPutWarmPoolQueryParams withMinSize(Long minSize) {
        this.minSize = minSize;
        return this;
    }
    
    /**
     * Sets the instance state to transition to after the lifecycle actions are complete. Default is &lt;code&gt;Stopped&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=PoolState")
    public GETPutWarmPoolPoolStateEnum poolState;
    public GETPutWarmPoolQueryParams withPoolState(GETPutWarmPoolPoolStateEnum poolState) {
        this.poolState = poolState;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETPutWarmPoolVersionEnum version;
    public GETPutWarmPoolQueryParams withVersion(GETPutWarmPoolVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
