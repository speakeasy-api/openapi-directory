// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ScalarMeasureValueTypeEnum string

const (
	ScalarMeasureValueTypeEnumDouble    ScalarMeasureValueTypeEnum = "DOUBLE"
	ScalarMeasureValueTypeEnumBigint    ScalarMeasureValueTypeEnum = "BIGINT"
	ScalarMeasureValueTypeEnumBoolean   ScalarMeasureValueTypeEnum = "BOOLEAN"
	ScalarMeasureValueTypeEnumVarchar   ScalarMeasureValueTypeEnum = "VARCHAR"
	ScalarMeasureValueTypeEnumTimestamp ScalarMeasureValueTypeEnum = "TIMESTAMP"
)

func (e *ScalarMeasureValueTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DOUBLE":
		fallthrough
	case "BIGINT":
		fallthrough
	case "BOOLEAN":
		fallthrough
	case "VARCHAR":
		fallthrough
	case "TIMESTAMP":
		*e = ScalarMeasureValueTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ScalarMeasureValueTypeEnum: %s", s)
	}
}
