<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Payment - Payment details.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Payment
{
    /**
     * Payment's account ID.
     * 
     * @var string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $accountId;
    
    /**
     * Number of the bank issued invoice bar code.
     * 
     * @var string $bankIssuedInvoiceBarCodeNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankIssuedInvoiceBarCodeNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $bankIssuedInvoiceBarCodeNumber;
    
    /**
     * Type of the bank issued invoice bar code.
     * 
     * @var string $bankIssuedInvoiceBarCodeType
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankIssuedInvoiceBarCodeType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $bankIssuedInvoiceBarCodeType;
    
    /**
     * Numeric sequence that identifies the bank issued invoice.
     * 
     * @var string $bankIssuedInvoiceIdentificationNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankIssuedInvoiceIdentificationNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $bankIssuedInvoiceIdentificationNumber;
    
    /**
     * Bank issued invoice ID formatted.
     * 
     * @var string $bankIssuedInvoiceIdentificationNumberFormatted
     */
	#[\JMS\Serializer\Annotation\SerializedName('bankIssuedInvoiceIdentificationNumberFormatted')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $bankIssuedInvoiceIdentificationNumberFormatted;
    
    /**
     * Billing address information.
     * 
     * @var array<string, mixed> $billingAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('billingAddress')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    public array $billingAddress;
    
    /**
     * Name of the person who owns the card.
     * 
     * @var string $cardHolder
     */
	#[\JMS\Serializer\Annotation\SerializedName('cardHolder')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $cardHolder;
    
    /**
     * Numeric sequence of the card used in the transaction.
     * 
     * @var string $cardNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('cardNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $cardNumber;
    
    /**
     * Information about the connector responses.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\PaymentConnectorResponses $connectorResponses
     */
	#[\JMS\Serializer\Annotation\SerializedName('connectorResponses')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\PaymentConnectorResponses')]
    public PaymentConnectorResponses $connectorResponses;
    
    /**
     * Card Verification Value (CVV2) is a security code used by payment processors to reduce fraudulent credit and debit card transactions.
     * 
     * @var string $cvv2
     */
	#[\JMS\Serializer\Annotation\SerializedName('cvv2')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $cvv2;
    
    /**
     * Payment due date, with the format `yyyy-mm-dd`.
     * 
     * @var string $dueDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('dueDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $dueDate;
    
    /**
     * Expire month of the card used in the transaction (2-digits).
     * 
     * @var string $expireMonth
     */
	#[\JMS\Serializer\Annotation\SerializedName('expireMonth')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $expireMonth;
    
    /**
     * Expire year of the card used in the transaction (4-digits).
     * 
     * @var string $expireYear
     */
	#[\JMS\Serializer\Annotation\SerializedName('expireYear')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $expireYear;
    
    /**
     * Fist digits of the card used in the transaction.
     * 
     * @var string $firstDigits
     */
	#[\JMS\Serializer\Annotation\SerializedName('firstDigits')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $firstDigits;
    
    /**
     * When this field is set as `true`, the Gift Card is a discount over the price, and when set as `false`, it is not a discount.
     * 
     * @var bool $giftCardAsDiscount
     */
	#[\JMS\Serializer\Annotation\SerializedName('giftCardAsDiscount')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $giftCardAsDiscount;
    
    /**
     * Gift Card's caption.
     * 
     * @var string $giftCardCaption
     */
	#[\JMS\Serializer\Annotation\SerializedName('giftCardCaption')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $giftCardCaption;
    
    /**
     * Gift Card's ID.
     * 
     * @var string $giftCardId
     */
	#[\JMS\Serializer\Annotation\SerializedName('giftCardId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $giftCardId;
    
    /**
     * Gift Card's name.
     * 
     * @var string $giftCardName
     */
	#[\JMS\Serializer\Annotation\SerializedName('giftCardName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $giftCardName;
    
    /**
     * Gift Card provider's ID.
     * 
     * @var string $giftCardProvider
     */
	#[\JMS\Serializer\Annotation\SerializedName('giftCardProvider')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $giftCardProvider;
    
    /**
     * Name of the collection the Gift Card belongs to.
     * 
     * @var string $group
     */
	#[\JMS\Serializer\Annotation\SerializedName('group')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $group;
    
    /**
     * VTEX payment ID that can be used as unique identifier.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * Number of payment installments.
     * 
     * @var int $installments
     */
	#[\JMS\Serializer\Annotation\SerializedName('installments')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $installments;
    
    /**
     * Payment's account ID.
     * 
     * @var string $koinUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('koinUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $koinUrl;
    
    /**
     * Last digits of the card used in the transaction.
     * 
     * @var string $lastDigits
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastDigits')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $lastDigits;
    
    /**
     * This field retrieves the main account if the payment was made in a subaccount.
     * 
     * @var string $parentAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('parentAccountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $parentAccountId;
    
    /**
     * Payment system's ID.
     * 
     * @var string $paymentSystem
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentSystem')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $paymentSystem;
    
    /**
     * Payment system's name.
     * 
     * @var string $paymentSystemName
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentSystemName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $paymentSystemName;
    
    /**
     * Code for the customer to use the Gift Card.
     * 
     * @var string $redemptionCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('redemptionCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $redemptionCode;
    
    /**
     * Payment's reference value in cents.
     * 
     * @var int $referenceValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('referenceValue')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $referenceValue;
    
    /**
     * Provider's unique identifier for the transaction.
     * 
     * @var string $tid
     */
	#[\JMS\Serializer\Annotation\SerializedName('tid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $tid;
    
    /**
     * Payment's URL.
     * 
     * @var string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
    /**
     * Payment's final amount in cents.
     * 
     * @var int $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $value;
    
	public function __construct()
	{
		$this->accountId = "";
		$this->bankIssuedInvoiceBarCodeNumber = "";
		$this->bankIssuedInvoiceBarCodeType = "";
		$this->bankIssuedInvoiceIdentificationNumber = "";
		$this->bankIssuedInvoiceIdentificationNumberFormatted = "";
		$this->billingAddress = [];
		$this->cardHolder = "";
		$this->cardNumber = "";
		$this->connectorResponses = new \OpenAPI\OpenAPI\Models\Shared\PaymentConnectorResponses();
		$this->cvv2 = "";
		$this->dueDate = "";
		$this->expireMonth = "";
		$this->expireYear = "";
		$this->firstDigits = "";
		$this->giftCardAsDiscount = false;
		$this->giftCardCaption = "";
		$this->giftCardId = "";
		$this->giftCardName = "";
		$this->giftCardProvider = "";
		$this->group = "";
		$this->id = "";
		$this->installments = 0;
		$this->koinUrl = "";
		$this->lastDigits = "";
		$this->parentAccountId = "";
		$this->paymentSystem = "";
		$this->paymentSystemName = "";
		$this->redemptionCode = "";
		$this->referenceValue = 0;
		$this->tid = "";
		$this->url = "";
		$this->value = 0;
	}
}
