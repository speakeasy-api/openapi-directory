// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LustreAccessAuditLogLevelEnum string

const (
	LustreAccessAuditLogLevelEnumDisabled  LustreAccessAuditLogLevelEnum = "DISABLED"
	LustreAccessAuditLogLevelEnumWarnOnly  LustreAccessAuditLogLevelEnum = "WARN_ONLY"
	LustreAccessAuditLogLevelEnumErrorOnly LustreAccessAuditLogLevelEnum = "ERROR_ONLY"
	LustreAccessAuditLogLevelEnumWarnError LustreAccessAuditLogLevelEnum = "WARN_ERROR"
)

func (e LustreAccessAuditLogLevelEnum) ToPointer() *LustreAccessAuditLogLevelEnum {
	return &e
}

func (e *LustreAccessAuditLogLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DISABLED":
		fallthrough
	case "WARN_ONLY":
		fallthrough
	case "ERROR_ONLY":
		fallthrough
	case "WARN_ERROR":
		*e = LustreAccessAuditLogLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LustreAccessAuditLogLevelEnum: %v", v)
	}
}
