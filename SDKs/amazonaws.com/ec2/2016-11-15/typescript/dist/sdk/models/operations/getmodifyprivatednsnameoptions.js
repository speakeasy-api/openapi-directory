"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GETModifyPrivateDnsNameOptionsResponse = exports.GETModifyPrivateDnsNameOptionsRequest = exports.GETModifyPrivateDnsNameOptionsVersionEnum = exports.GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnum = exports.GETModifyPrivateDnsNameOptionsActionEnum = void 0;
var utils_1 = require("../../../internal/utils");
var GETModifyPrivateDnsNameOptionsActionEnum;
(function (GETModifyPrivateDnsNameOptionsActionEnum) {
    GETModifyPrivateDnsNameOptionsActionEnum["ModifyPrivateDnsNameOptions"] = "ModifyPrivateDnsNameOptions";
})(GETModifyPrivateDnsNameOptionsActionEnum = exports.GETModifyPrivateDnsNameOptionsActionEnum || (exports.GETModifyPrivateDnsNameOptionsActionEnum = {}));
/**
 * The type of hostname for EC2 instances. For IPv4 only subnets, an instance DNS name must be based on the instance IPv4 address. For IPv6 only subnets, an instance DNS name must be based on the instance ID. For dual-stack subnets, you can specify whether DNS names use the instance IPv4 address or the instance ID.
 */
var GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnum;
(function (GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnum) {
    GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnum["IpName"] = "ip-name";
    GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnum["ResourceName"] = "resource-name";
})(GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnum = exports.GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnum || (exports.GETModifyPrivateDNSNameOptionsPrivateDNSHostnameTypeEnum = {}));
var GETModifyPrivateDnsNameOptionsVersionEnum;
(function (GETModifyPrivateDnsNameOptionsVersionEnum) {
    GETModifyPrivateDnsNameOptionsVersionEnum["TwoThousandAndSixteen1115"] = "2016-11-15";
})(GETModifyPrivateDnsNameOptionsVersionEnum = exports.GETModifyPrivateDnsNameOptionsVersionEnum || (exports.GETModifyPrivateDnsNameOptionsVersionEnum = {}));
var GETModifyPrivateDnsNameOptionsRequest = /** @class */ (function (_super) {
    __extends(GETModifyPrivateDnsNameOptionsRequest, _super);
    function GETModifyPrivateDnsNameOptionsRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Action",
        }),
        __metadata("design:type", String)
    ], GETModifyPrivateDnsNameOptionsRequest.prototype, "action", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=DryRun",
        }),
        __metadata("design:type", Boolean)
    ], GETModifyPrivateDnsNameOptionsRequest.prototype, "dryRun", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=EnableResourceNameDnsAAAARecord",
        }),
        __metadata("design:type", Boolean)
    ], GETModifyPrivateDnsNameOptionsRequest.prototype, "enableResourceNameDnsAAAARecord", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=EnableResourceNameDnsARecord",
        }),
        __metadata("design:type", Boolean)
    ], GETModifyPrivateDnsNameOptionsRequest.prototype, "enableResourceNameDnsARecord", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=InstanceId",
        }),
        __metadata("design:type", String)
    ], GETModifyPrivateDnsNameOptionsRequest.prototype, "instanceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=PrivateDnsHostnameType",
        }),
        __metadata("design:type", String)
    ], GETModifyPrivateDnsNameOptionsRequest.prototype, "privateDnsHostnameType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "queryParam, style=form;explode=true;name=Version",
        }),
        __metadata("design:type", String)
    ], GETModifyPrivateDnsNameOptionsRequest.prototype, "version", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
        }),
        __metadata("design:type", String)
    ], GETModifyPrivateDnsNameOptionsRequest.prototype, "xAmzAlgorithm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
        }),
        __metadata("design:type", String)
    ], GETModifyPrivateDnsNameOptionsRequest.prototype, "xAmzContentSha256", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Credential",
        }),
        __metadata("design:type", String)
    ], GETModifyPrivateDnsNameOptionsRequest.prototype, "xAmzCredential", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Date",
        }),
        __metadata("design:type", String)
    ], GETModifyPrivateDnsNameOptionsRequest.prototype, "xAmzDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
        }),
        __metadata("design:type", String)
    ], GETModifyPrivateDnsNameOptionsRequest.prototype, "xAmzSecurityToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-Signature",
        }),
        __metadata("design:type", String)
    ], GETModifyPrivateDnsNameOptionsRequest.prototype, "xAmzSignature", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
        }),
        __metadata("design:type", String)
    ], GETModifyPrivateDnsNameOptionsRequest.prototype, "xAmzSignedHeaders", void 0);
    return GETModifyPrivateDnsNameOptionsRequest;
}(utils_1.SpeakeasyBase));
exports.GETModifyPrivateDnsNameOptionsRequest = GETModifyPrivateDnsNameOptionsRequest;
var GETModifyPrivateDnsNameOptionsResponse = /** @class */ (function (_super) {
    __extends(GETModifyPrivateDnsNameOptionsResponse, _super);
    function GETModifyPrivateDnsNameOptionsResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], GETModifyPrivateDnsNameOptionsResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GETModifyPrivateDnsNameOptionsResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GETModifyPrivateDnsNameOptionsResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GETModifyPrivateDnsNameOptionsResponse.prototype, "rawResponse", void 0);
    return GETModifyPrivateDnsNameOptionsResponse;
}(utils_1.SpeakeasyBase));
exports.GETModifyPrivateDnsNameOptionsResponse = GETModifyPrivateDnsNameOptionsResponse;
