// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETModifyClusterSubnetGroupActionEnum
type GETModifyClusterSubnetGroupActionEnum string

const (
	GETModifyClusterSubnetGroupActionEnumModifyClusterSubnetGroup GETModifyClusterSubnetGroupActionEnum = "ModifyClusterSubnetGroup"
)

func (e *GETModifyClusterSubnetGroupActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ModifyClusterSubnetGroup":
		*e = GETModifyClusterSubnetGroupActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyClusterSubnetGroupActionEnum: %s", s)
	}
}

// GETModifyClusterSubnetGroupVersionEnum
type GETModifyClusterSubnetGroupVersionEnum string

const (
	GETModifyClusterSubnetGroupVersionEnumTwoThousandAndTwelve1201 GETModifyClusterSubnetGroupVersionEnum = "2012-12-01"
)

func (e *GETModifyClusterSubnetGroupVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2012-12-01":
		*e = GETModifyClusterSubnetGroupVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETModifyClusterSubnetGroupVersionEnum: %s", s)
	}
}

type GETModifyClusterSubnetGroupQueryParams struct {
	Action GETModifyClusterSubnetGroupActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the subnet group to be modified.
	ClusterSubnetGroupName string `queryParam:"style=form,explode=true,name=ClusterSubnetGroupName"`
	// A text description of the subnet group to be modified.
	Description *string `queryParam:"style=form,explode=true,name=Description"`
	// An array of VPC subnet IDs. A maximum of 20 subnets can be modified in a single request.
	SubnetIds []string                               `queryParam:"style=form,explode=true,name=SubnetIds"`
	Version   GETModifyClusterSubnetGroupVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETModifyClusterSubnetGroupHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETModifyClusterSubnetGroupRequest struct {
	QueryParams GETModifyClusterSubnetGroupQueryParams
	Headers     GETModifyClusterSubnetGroupHeaders
}

type GETModifyClusterSubnetGroupResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
