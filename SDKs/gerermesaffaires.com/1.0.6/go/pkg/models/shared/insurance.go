// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InsuranceLevelEnum string

const (
	InsuranceLevelEnumConfidential InsuranceLevelEnum = "confidential"
	InsuranceLevelEnumRegular      InsuranceLevelEnum = "regular"
	InsuranceLevelEnumPublic       InsuranceLevelEnum = "public"
)

func (e InsuranceLevelEnum) ToPointer() *InsuranceLevelEnum {
	return &e
}

func (e *InsuranceLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = InsuranceLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InsuranceLevelEnum: %v", v)
	}
}

// Insurance - An insurance folder
type Insurance struct {
	About            *string             `json:"About,omitempty"`
	ArchivalDate     *string             `json:"ArchivalDate,omitempty"`
	Class            *string             `json:"Class,omitempty"`
	Comment          *string             `json:"Comment,omitempty"`
	CustomerNumber   *string             `json:"CustomerNumber,omitempty"`
	Designation      *string             `json:"Designation,omitempty"`
	End              *string             `json:"End,omitempty"`
	Home             *bool               `json:"Home,omitempty"`
	ID               *string             `json:"Id,omitempty"`
	Keywords         []string            `json:"Keywords,omitempty"`
	Level            *InsuranceLevelEnum `json:"Level,omitempty"`
	ModificationDate *string             `json:"ModificationDate,omitempty"`
	Name             *string             `json:"Name,omitempty"`
	Parent           *string             `json:"Parent,omitempty"`
	PolicyNumber     *string             `json:"PolicyNumber,omitempty"`
	Start            *string             `json:"Start,omitempty"`
}
