"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ekssourceclusternamespace as shared_ekssourceclusternamespace
from ..shared import resourcemappingtype_enum as shared_resourcemappingtype_enum
from ..shared import terraformsource as shared_terraformsource
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppInputSource:
    r"""The list of Resilience Hub application input sources."""
    
    import_type: shared_resourcemappingtype_enum.ResourceMappingTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('importType') }})  
    eks_source_cluster_namespace: Optional[shared_ekssourceclusternamespace.EksSourceClusterNamespace] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('eksSourceClusterNamespace'), 'exclude': lambda f: f is None }})  
    resource_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resourceCount'), 'exclude': lambda f: f is None }})  
    source_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceArn'), 'exclude': lambda f: f is None }})  
    source_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceName'), 'exclude': lambda f: f is None }})  
    terraform_source: Optional[shared_terraformsource.TerraformSource] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('terraformSource'), 'exclude': lambda f: f is None }})  
    