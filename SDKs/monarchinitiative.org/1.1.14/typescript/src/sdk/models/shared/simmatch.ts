/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Node } from "./node";
import { PairwiseMatch } from "./pairwisematch";
import { Expose, Type } from "class-transformer";

export class SimMatch extends SpeakeasyBase {
  /**
   * ID or CURIE e.g. MGI:1201606
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * RDFS Label
   */
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;

  @SpeakeasyMetadata({ elemType: PairwiseMatch })
  @Expose({ name: "pairwise_match" })
  @Type(() => PairwiseMatch)
  pairwiseMatch?: PairwiseMatch[];

  /**
   * rank
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rank" })
  rank?: string;

  /**
   * sim score
   */
  @SpeakeasyMetadata()
  @Expose({ name: "score" })
  score?: number;

  /**
   * p-value
   */
  @SpeakeasyMetadata()
  @Expose({ name: "significance" })
  significance?: string;

  /**
   * taxon
   */
  @SpeakeasyMetadata()
  @Expose({ name: "taxon" })
  @Type(() => Node)
  taxon?: Node;

  /**
   * node type (eg phenotype, disease)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
