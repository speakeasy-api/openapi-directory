// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BankTransferEventTypeEnum - The type of event that this bank transfer represents.
//
// `pending`: A new transfer was created; it is in the pending state.
//
// `cancelled`: The transfer was cancelled by the client.
//
// `failed`: The transfer failed, no funds were moved.
//
// `posted`: The transfer has been successfully submitted to the payment network.
//
// `reversed`: A posted transfer was reversed.
//
// `receiver_pending`: The matching transfer was found as a pending transaction in the receiver's account
//
// `receiver_posted`: The matching transfer was found as a posted transaction in the receiver's account
type BankTransferEventTypeEnum string

const (
	BankTransferEventTypeEnumPending         BankTransferEventTypeEnum = "pending"
	BankTransferEventTypeEnumCancelled       BankTransferEventTypeEnum = "cancelled"
	BankTransferEventTypeEnumFailed          BankTransferEventTypeEnum = "failed"
	BankTransferEventTypeEnumPosted          BankTransferEventTypeEnum = "posted"
	BankTransferEventTypeEnumReversed        BankTransferEventTypeEnum = "reversed"
	BankTransferEventTypeEnumReceiverPending BankTransferEventTypeEnum = "receiver_pending"
	BankTransferEventTypeEnumReceiverPosted  BankTransferEventTypeEnum = "receiver_posted"
)

func (e *BankTransferEventTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "cancelled":
		fallthrough
	case "failed":
		fallthrough
	case "posted":
		fallthrough
	case "reversed":
		fallthrough
	case "receiver_pending":
		fallthrough
	case "receiver_posted":
		*e = BankTransferEventTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BankTransferEventTypeEnum: %s", s)
	}
}
