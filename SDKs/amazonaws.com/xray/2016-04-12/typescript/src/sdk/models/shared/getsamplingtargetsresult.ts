/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SamplingTargetDocument } from "./samplingtargetdocument";
import { UnprocessedStatistics } from "./unprocessedstatistics";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetSamplingTargetsResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "LastRuleModification" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastRuleModification?: Date;

  @SpeakeasyMetadata({ elemType: SamplingTargetDocument })
  @Expose({ name: "SamplingTargetDocuments" })
  @Type(() => SamplingTargetDocument)
  samplingTargetDocuments?: SamplingTargetDocument[];

  @SpeakeasyMetadata({ elemType: UnprocessedStatistics })
  @Expose({ name: "UnprocessedStatistics" })
  @Type(() => UnprocessedStatistics)
  unprocessedStatistics?: UnprocessedStatistics[];
}
