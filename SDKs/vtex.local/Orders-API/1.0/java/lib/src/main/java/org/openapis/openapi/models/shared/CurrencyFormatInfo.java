/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CurrencyFormatInfo - Object with currency format details.
 */
public class CurrencyFormatInfo {
    /**
     * Quantity of currency decimal digits.
     */
    @JsonProperty("CurrencyDecimalDigits")
    public Integer currencyDecimalDigits;

    public CurrencyFormatInfo withCurrencyDecimalDigits(Integer currencyDecimalDigits) {
        this.currencyDecimalDigits = currencyDecimalDigits;
        return this;
    }
    
    /**
     * Defines what currency decimal separator will be applied.
     */
    @JsonProperty("CurrencyDecimalSeparator")
    public String currencyDecimalSeparator;

    public CurrencyFormatInfo withCurrencyDecimalSeparator(String currencyDecimalSeparator) {
        this.currencyDecimalSeparator = currencyDecimalSeparator;
        return this;
    }
    
    /**
     * Defines what currency group separator will be applied.
     */
    @JsonProperty("CurrencyGroupSeparator")
    public String currencyGroupSeparator;

    public CurrencyFormatInfo withCurrencyGroupSeparator(String currencyGroupSeparator) {
        this.currencyGroupSeparator = currencyGroupSeparator;
        return this;
    }
    
    /**
     * Defines how many characters will be grouped.
     */
    @JsonProperty("CurrencyGroupSize")
    public Integer currencyGroupSize;

    public CurrencyFormatInfo withCurrencyGroupSize(Integer currencyGroupSize) {
        this.currencyGroupSize = currencyGroupSize;
        return this;
    }
    
    /**
     * Defines if all prices will be initiated with the currency symbol (`true`) or not (`false`).
     */
    @JsonProperty("StartsWithCurrencySymbol")
    public Boolean startsWithCurrencySymbol;

    public CurrencyFormatInfo withStartsWithCurrencySymbol(Boolean startsWithCurrencySymbol) {
        this.startsWithCurrencySymbol = startsWithCurrencySymbol;
        return this;
    }
    
    public CurrencyFormatInfo(@JsonProperty("CurrencyDecimalDigits") Integer currencyDecimalDigits, @JsonProperty("CurrencyDecimalSeparator") String currencyDecimalSeparator, @JsonProperty("CurrencyGroupSeparator") String currencyGroupSeparator, @JsonProperty("CurrencyGroupSize") Integer currencyGroupSize, @JsonProperty("StartsWithCurrencySymbol") Boolean startsWithCurrencySymbol) {
        this.currencyDecimalDigits = currencyDecimalDigits;
        this.currencyDecimalSeparator = currencyDecimalSeparator;
        this.currencyGroupSeparator = currencyGroupSeparator;
        this.currencyGroupSize = currencyGroupSize;
        this.startsWithCurrencySymbol = startsWithCurrencySymbol;
  }
}
