// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// AggregatedGetConversionsSummarySortDirectionEnum - Direction of sort "asc" or "desc"
type AggregatedGetConversionsSummarySortDirectionEnum string

const (
	AggregatedGetConversionsSummarySortDirectionEnumAsc  AggregatedGetConversionsSummarySortDirectionEnum = "asc"
	AggregatedGetConversionsSummarySortDirectionEnumDesc AggregatedGetConversionsSummarySortDirectionEnum = "desc"
)

func (e *AggregatedGetConversionsSummarySortDirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = AggregatedGetConversionsSummarySortDirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AggregatedGetConversionsSummarySortDirectionEnum: %s", s)
	}
}

// AggregatedGetConversionsSummaryStatusEnum - Status of conversion ("deleted"/"active")
type AggregatedGetConversionsSummaryStatusEnum string

const (
	AggregatedGetConversionsSummaryStatusEnumDeleted AggregatedGetConversionsSummaryStatusEnum = "deleted"
	AggregatedGetConversionsSummaryStatusEnumActive  AggregatedGetConversionsSummaryStatusEnum = "active"
)

func (e *AggregatedGetConversionsSummaryStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "deleted":
		fallthrough
	case "active":
		*e = AggregatedGetConversionsSummaryStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AggregatedGetConversionsSummaryStatusEnum: %s", s)
	}
}

// AggregatedGetConversionsSummaryTimeFrameEnum - Timeframe of the request. See list at $timeframeList
type AggregatedGetConversionsSummaryTimeFrameEnum string

const (
	AggregatedGetConversionsSummaryTimeFrameEnumToday         AggregatedGetConversionsSummaryTimeFrameEnum = "today"
	AggregatedGetConversionsSummaryTimeFrameEnumYesterday     AggregatedGetConversionsSummaryTimeFrameEnum = "yesterday"
	AggregatedGetConversionsSummaryTimeFrameEnumLast7         AggregatedGetConversionsSummaryTimeFrameEnum = "last7"
	AggregatedGetConversionsSummaryTimeFrameEnumLast30        AggregatedGetConversionsSummaryTimeFrameEnum = "last30"
	AggregatedGetConversionsSummaryTimeFrameEnumLastmonth     AggregatedGetConversionsSummaryTimeFrameEnum = "lastmonth"
	AggregatedGetConversionsSummaryTimeFrameEnumCurrentmonth  AggregatedGetConversionsSummaryTimeFrameEnum = "currentmonth"
	AggregatedGetConversionsSummaryTimeFrameEnumPreviousmonth AggregatedGetConversionsSummaryTimeFrameEnum = "previousmonth"
	AggregatedGetConversionsSummaryTimeFrameEnumLast90        AggregatedGetConversionsSummaryTimeFrameEnum = "last90"
	AggregatedGetConversionsSummaryTimeFrameEnumLast120       AggregatedGetConversionsSummaryTimeFrameEnum = "last120"
	AggregatedGetConversionsSummaryTimeFrameEnumLast180       AggregatedGetConversionsSummaryTimeFrameEnum = "last180"
	AggregatedGetConversionsSummaryTimeFrameEnumLast12months  AggregatedGetConversionsSummaryTimeFrameEnum = "last12months"
	AggregatedGetConversionsSummaryTimeFrameEnumLastyear      AggregatedGetConversionsSummaryTimeFrameEnum = "lastyear"
	AggregatedGetConversionsSummaryTimeFrameEnumCurrentyear   AggregatedGetConversionsSummaryTimeFrameEnum = "currentyear"
	AggregatedGetConversionsSummaryTimeFrameEnumBeginning     AggregatedGetConversionsSummaryTimeFrameEnum = "beginning"
	AggregatedGetConversionsSummaryTimeFrameEnumCustom        AggregatedGetConversionsSummaryTimeFrameEnum = "custom"
)

func (e *AggregatedGetConversionsSummaryTimeFrameEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "today":
		fallthrough
	case "yesterday":
		fallthrough
	case "last7":
		fallthrough
	case "last30":
		fallthrough
	case "lastmonth":
		fallthrough
	case "currentmonth":
		fallthrough
	case "previousmonth":
		fallthrough
	case "last90":
		fallthrough
	case "last120":
		fallthrough
	case "last180":
		fallthrough
	case "last12months":
		fallthrough
	case "lastyear":
		fallthrough
	case "currentyear":
		fallthrough
	case "beginning":
		fallthrough
	case "custom":
		*e = AggregatedGetConversionsSummaryTimeFrameEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AggregatedGetConversionsSummaryTimeFrameEnum: %s", s)
	}
}

type AggregatedGetConversionsSummaryRequest struct {
	// If using a "custom" timeFrame you can specify the starting day (YYYYMMDD)
	FromDay *string `queryParam:"style=form,explode=true,name=fromDay"`
	// Limit results to this number
	Limit *int `queryParam:"style=form,explode=true,name=limit"`
	// Offset where to start from
	Offset *int `queryParam:"style=form,explode=true,name=offset"`
	// Field to sort by
	SortBy *string `queryParam:"style=form,explode=true,name=sortBy"`
	// Direction of sort "asc" or "desc"
	SortDirection *AggregatedGetConversionsSummarySortDirectionEnum `queryParam:"style=form,explode=true,name=sortDirection"`
	// Status of conversion ("deleted"/"active")
	Status *AggregatedGetConversionsSummaryStatusEnum `queryParam:"style=form,explode=true,name=status"`
	// Filter fields by this pattern
	TextSearch *string `queryParam:"style=form,explode=true,name=textSearch"`
	// Timeframe of the request. See list at $timeframeList
	TimeFrame AggregatedGetConversionsSummaryTimeFrameEnum `queryParam:"style=form,explode=true,name=timeFrame"`
	// If using a "custom" timeFrame you can specify the ending day (YYYYMMDD)
	ToDay *string `queryParam:"style=form,explode=true,name=toDay"`
}

type AggregatedGetConversionsSummaryResponse struct {
	APICoreDtoAggregatedAggregatedSummaryResult *shared.APICoreDtoAggregatedAggregatedSummaryResult
	ContentType                                 string
	StatusCode                                  int
	RawResponse                                 *http.Response
}
