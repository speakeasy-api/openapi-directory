/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NullableIntegration } from "./nullableintegration";
import { NullableSimpleUser } from "./nullablesimpleuser";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The state of the status.
 */
export enum DeploymentStatusStateEnum {
  Error = "error",
  Failure = "failure",
  Inactive = "inactive",
  Pending = "pending",
  Success = "success",
  Queued = "queued",
  InProgress = "in_progress",
}

/**
 * The status of a deployment.
 */
export class DeploymentStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  /**
   * Simple User
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creator" })
  @Type(() => NullableSimpleUser)
  creator: NullableSimpleUser;

  @SpeakeasyMetadata()
  @Expose({ name: "deployment_url" })
  deploymentUrl: string;

  /**
   * A short description of the status.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * The environment of the deployment that the status is for.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "environment" })
  environment?: string;

  /**
   * The URL for accessing your environment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "environment_url" })
  environmentUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * The URL to associate with this status.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "log_url" })
  logUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId: string;

  /**
   * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "performed_via_github_app" })
  @Type(() => NullableIntegration)
  performedViaGithubApp?: NullableIntegration;

  @SpeakeasyMetadata()
  @Expose({ name: "repository_url" })
  repositoryUrl: string;

  /**
   * The state of the status.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: DeploymentStatusStateEnum;

  /**
   * Deprecated: the URL to associate with this status.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "target_url" })
  targetUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
