/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ArchiveRule } from "./archiverule";
import { CreateRule } from "./createrule";
import { CrossRegionCopyRule } from "./crossregioncopyrule";
import { DeprecateRule } from "./deprecaterule";
import { FastRestoreRule } from "./fastrestorerule";
import { RetainRule } from "./retainrule";
import { ShareRule } from "./sharerule";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

/**
 *  <b>[Snapshot and AMI policies only]</b> Specifies a schedule for a snapshot or AMI lifecycle policy.
 */
export class Schedule extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ArchiveRule" })
  @Type(() => ArchiveRule)
  archiveRule?: ArchiveRule;

  @SpeakeasyMetadata()
  @Expose({ name: "CopyTags" })
  copyTags?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "CreateRule" })
  @Type(() => CreateRule)
  createRule?: CreateRule;

  @SpeakeasyMetadata({ elemType: CrossRegionCopyRule })
  @Expose({ name: "CrossRegionCopyRules" })
  @Type(() => CrossRegionCopyRule)
  crossRegionCopyRules?: CrossRegionCopyRule[];

  @SpeakeasyMetadata()
  @Expose({ name: "DeprecateRule" })
  @Type(() => DeprecateRule)
  deprecateRule?: DeprecateRule;

  @SpeakeasyMetadata()
  @Expose({ name: "FastRestoreRule" })
  @Type(() => FastRestoreRule)
  fastRestoreRule?: FastRestoreRule;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RetainRule" })
  @Type(() => RetainRule)
  retainRule?: RetainRule;

  @SpeakeasyMetadata({ elemType: ShareRule })
  @Expose({ name: "ShareRules" })
  @Type(() => ShareRule)
  shareRules?: ShareRule[];

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "TagsToAdd" })
  @Type(() => Tag)
  tagsToAdd?: Tag[];

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "VariableTags" })
  @Type(() => Tag)
  variableTags?: Tag[];
}
