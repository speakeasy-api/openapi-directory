// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReplicationConfigurationReplicatedDiskStagingDiskTypeEnum string

const (
	ReplicationConfigurationReplicatedDiskStagingDiskTypeEnumAuto     ReplicationConfigurationReplicatedDiskStagingDiskTypeEnum = "AUTO"
	ReplicationConfigurationReplicatedDiskStagingDiskTypeEnumGp2      ReplicationConfigurationReplicatedDiskStagingDiskTypeEnum = "GP2"
	ReplicationConfigurationReplicatedDiskStagingDiskTypeEnumIo1      ReplicationConfigurationReplicatedDiskStagingDiskTypeEnum = "IO1"
	ReplicationConfigurationReplicatedDiskStagingDiskTypeEnumSc1      ReplicationConfigurationReplicatedDiskStagingDiskTypeEnum = "SC1"
	ReplicationConfigurationReplicatedDiskStagingDiskTypeEnumSt1      ReplicationConfigurationReplicatedDiskStagingDiskTypeEnum = "ST1"
	ReplicationConfigurationReplicatedDiskStagingDiskTypeEnumStandard ReplicationConfigurationReplicatedDiskStagingDiskTypeEnum = "STANDARD"
	ReplicationConfigurationReplicatedDiskStagingDiskTypeEnumGp3      ReplicationConfigurationReplicatedDiskStagingDiskTypeEnum = "GP3"
	ReplicationConfigurationReplicatedDiskStagingDiskTypeEnumIo2      ReplicationConfigurationReplicatedDiskStagingDiskTypeEnum = "IO2"
)

func (e *ReplicationConfigurationReplicatedDiskStagingDiskTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AUTO":
		fallthrough
	case "GP2":
		fallthrough
	case "IO1":
		fallthrough
	case "SC1":
		fallthrough
	case "ST1":
		fallthrough
	case "STANDARD":
		fallthrough
	case "GP3":
		fallthrough
	case "IO2":
		*e = ReplicationConfigurationReplicatedDiskStagingDiskTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReplicationConfigurationReplicatedDiskStagingDiskTypeEnum: %s", s)
	}
}
