// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

var UpdateWorkerChannelServerList = []string{
	"https://taskrouter.twilio.com",
}

type UpdateWorkerChannelSecurity struct {
	AccountSidAuthToken shared.SchemeAccountSidAuthToken `security:"scheme,type=http,subtype=basic"`
}

type UpdateWorkerChannelPathParams struct {
	// The SID of the WorkerChannel to update.
	Sid string `pathParam:"style=simple,explode=false,name=Sid"`
	// The SID of the Worker with the WorkerChannel to update.
	WorkerSid string `pathParam:"style=simple,explode=false,name=WorkerSid"`
	// The SID of the Workspace with the WorkerChannel to update.
	WorkspaceSid string `pathParam:"style=simple,explode=false,name=WorkspaceSid"`
}

type UpdateWorkerChannelUpdateWorkerChannelRequest struct {
	// Whether the WorkerChannel is available. Set to `false` to prevent the Worker from receiving any new Tasks of this TaskChannel type.
	Available *bool `form:"name=Available"`
	// The total number of Tasks that the Worker should handle for the TaskChannel type. TaskRouter creates reservations for Tasks of this TaskChannel type up to the specified capacity. If the capacity is 0, no new reservations will be created.
	Capacity *int64 `form:"name=Capacity"`
}

type UpdateWorkerChannelRequest struct {
	PathParams UpdateWorkerChannelPathParams
	Request    *UpdateWorkerChannelUpdateWorkerChannelRequest `request:"mediaType=application/x-www-form-urlencoded"`
	Security   UpdateWorkerChannelSecurity
	ServerURL  *string
}

type UpdateWorkerChannelResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	TaskrouterV1WorkspaceWorkerWorkerChannel *shared.TaskrouterV1WorkspaceWorkerWorkerChannel
}
