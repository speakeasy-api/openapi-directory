"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import applepayinfo as shared_applepayinfo
from ..shared import bcmcinfo as shared_bcmcinfo
from ..shared import cartesbancairesinfo as shared_cartesbancairesinfo
from ..shared import giropayinfo as shared_giropayinfo
from ..shared import googlepayinfo as shared_googlepayinfo
from ..shared import klarnainfo as shared_klarnainfo
from ..shared import mealvoucherfrinfo as shared_mealvoucherfrinfo
from ..shared import paypalinfo as shared_paypalinfo
from ..shared import sofortinfo as shared_sofortinfo
from ..shared import swishinfo as shared_swishinfo
from ..shared import vippsinfo as shared_vippsinfo
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PaymentMethodVerificationStatusEnum(str, Enum):
    r"""Payment method status. Possible values:
    * **valid**
    * **pending**
    * **invalid**
    * **rejected**
    """
    VALID = 'valid'
    PENDING = 'pending'
    INVALID = 'invalid'
    REJECTED = 'rejected'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PaymentMethod:
    r"""OK - the request has succeeded."""
    
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""The identifier of the resource."""  
    allowed: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowed'), 'exclude': lambda f: f is None }})
    r"""Indicates whether receiving payments is allowed. This value is set to **true** by Adyen after screening your merchant account."""  
    apple_pay: Optional[shared_applepayinfo.ApplePayInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applePay'), 'exclude': lambda f: f is None }})  
    bcmc: Optional[shared_bcmcinfo.BcmcInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bcmc'), 'exclude': lambda f: f is None }})  
    business_line_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('businessLineId'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the business line."""  
    cartes_bancaires: Optional[shared_cartesbancairesinfo.CartesBancairesInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cartesBancaires'), 'exclude': lambda f: f is None }})  
    countries: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('countries'), 'exclude': lambda f: f is None }})
    r"""The list of countries where a payment method is available. By default, all countries supported by the payment method."""  
    currencies: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('currencies'), 'exclude': lambda f: f is None }})
    r"""The list of currencies that a payment method supports. By default, all currencies supported by the payment method."""  
    custom_routing_flags: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customRoutingFlags'), 'exclude': lambda f: f is None }})
    r"""The list of custom routing flags to route payment to the intended acquirer."""  
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the payment method is enabled (**true**) or disabled (**false**)."""  
    giro_pay: Optional[shared_giropayinfo.GiroPayInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('giroPay'), 'exclude': lambda f: f is None }})  
    google_pay: Optional[shared_googlepayinfo.GooglePayInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('googlePay'), 'exclude': lambda f: f is None }})  
    klarna: Optional[shared_klarnainfo.KlarnaInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('klarna'), 'exclude': lambda f: f is None }})  
    meal_voucher_fr: Optional[shared_mealvoucherfrinfo.MealVoucherFRInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mealVoucher_FR'), 'exclude': lambda f: f is None }})  
    paypal: Optional[shared_paypalinfo.PayPalInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('paypal'), 'exclude': lambda f: f is None }})  
    reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reference'), 'exclude': lambda f: f is None }})
    r"""Your reference for the payment method. Supported characters a-z, A-Z, 0-9."""  
    shopper_interaction: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shopperInteraction'), 'exclude': lambda f: f is None }})
    r"""The sales channel."""  
    sofort: Optional[shared_sofortinfo.SofortInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sofort'), 'exclude': lambda f: f is None }})  
    store_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('storeId'), 'exclude': lambda f: f is None }})
    r"""The ID of the [store](https://docs.adyen.com/api-explorer/#/ManagementService/latest/post/stores__resParam_id), if any."""  
    swish: Optional[shared_swishinfo.SwishInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('swish'), 'exclude': lambda f: f is None }})  
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Payment method [variant](https://docs.adyen.com/development-resources/paymentmethodvariant#management-api)."""  
    verification_status: Optional[PaymentMethodVerificationStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verificationStatus'), 'exclude': lambda f: f is None }})
    r"""Payment method status. Possible values:
    * **valid**
    * **pending**
    * **invalid**
    * **rejected**
    """  
    vipps: Optional[shared_vippsinfo.VippsInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('vipps'), 'exclude': lambda f: f is None }})  
    