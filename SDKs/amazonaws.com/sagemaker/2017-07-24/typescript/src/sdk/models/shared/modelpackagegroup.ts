/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ModelPackageGroupStatusEnum } from "./modelpackagegroupstatusenum";
import { Tag } from "./tag";
import { UserContext } from "./usercontext";
import { Expose, Transform, Type } from "class-transformer";

/**
 * A group of versioned models in the model registry.
 */
export class ModelPackageGroup extends SpeakeasyBase {
  /**
   * Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedBy" })
  @Type(() => UserContext)
  createdBy?: UserContext;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageGroupArn" })
  modelPackageGroupArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageGroupDescription" })
  modelPackageGroupDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageGroupName" })
  modelPackageGroupName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ModelPackageGroupStatus" })
  modelPackageGroupStatus?: ModelPackageGroupStatusEnum;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
