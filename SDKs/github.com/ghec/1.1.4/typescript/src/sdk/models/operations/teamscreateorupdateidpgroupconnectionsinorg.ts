/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class TeamsCreateOrUpdateIdpGroupConnectionsInOrgRequestBodyGroups extends SpeakeasyBase {
  /**
   * Description of the IdP group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group_description" })
  groupDescription: string;

  /**
   * ID of the IdP group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group_id" })
  groupId: string;

  /**
   * Name of the IdP group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group_name" })
  groupName: string;
}

export class TeamsCreateOrUpdateIdpGroupConnectionsInOrgRequestBody extends SpeakeasyBase {
  /**
   * The IdP groups you want to connect to a GitHub team. When updating, the new `groups` object will replace the original one. You must include any existing groups that you don't want to remove.
   */
  @SpeakeasyMetadata({
    elemType: TeamsCreateOrUpdateIdpGroupConnectionsInOrgRequestBodyGroups,
  })
  @Expose({ name: "groups" })
  @Type(() => TeamsCreateOrUpdateIdpGroupConnectionsInOrgRequestBodyGroups)
  groups?: TeamsCreateOrUpdateIdpGroupConnectionsInOrgRequestBodyGroups[];
}

export class TeamsCreateOrUpdateIdpGroupConnectionsInOrgRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: TeamsCreateOrUpdateIdpGroupConnectionsInOrgRequestBody;

  /**
   * The organization name. The name is not case sensitive.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=org" })
  org: string;

  /**
   * The slug of the team name.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=team_slug",
  })
  teamSlug: string;
}

export class TeamsCreateOrUpdateIdpGroupConnectionsInOrgResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  groupMapping?: shared.GroupMapping;
}
