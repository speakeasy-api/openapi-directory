"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class VerifyCapabilityVersionEnum(str, Enum):
    r"""Verify current version. If specified must be set to v2"""
    V2 = 'v2'

class VerifyCapabilityWebhooksStatusURLHTTPMethodEnum(str, Enum):
    POST = 'POST'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VerifyCapabilityWebhooksStatusURL:
    r"""Vonage will send request status events (e.g. `progress`, `complete`) to this URL"""
    
    address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})  
    http_method: Optional[VerifyCapabilityWebhooksStatusURLHTTPMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http_method'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VerifyCapabilityWebhooks:
    
    status_url: Optional[VerifyCapabilityWebhooksStatusURL] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status_url'), 'exclude': lambda f: f is None }})
    r"""Vonage will send request status events (e.g. `progress`, `complete`) to this URL"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VerifyCapability:
    r"""Two factor authentication related configuration"""
    
    version: Optional[VerifyCapabilityVersionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version'), 'exclude': lambda f: f is None }})
    r"""Verify current version. If specified must be set to v2"""  
    webhooks: Optional[VerifyCapabilityWebhooks] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webhooks'), 'exclude': lambda f: f is None }})  
    