// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WorkflowExecutionStatusEnum string

const (
	WorkflowExecutionStatusEnumPending            WorkflowExecutionStatusEnum = "PENDING"
	WorkflowExecutionStatusEnumSkipped            WorkflowExecutionStatusEnum = "SKIPPED"
	WorkflowExecutionStatusEnumRunning            WorkflowExecutionStatusEnum = "RUNNING"
	WorkflowExecutionStatusEnumCompleted          WorkflowExecutionStatusEnum = "COMPLETED"
	WorkflowExecutionStatusEnumFailed             WorkflowExecutionStatusEnum = "FAILED"
	WorkflowExecutionStatusEnumRollbackInProgress WorkflowExecutionStatusEnum = "ROLLBACK_IN_PROGRESS"
	WorkflowExecutionStatusEnumRollbackCompleted  WorkflowExecutionStatusEnum = "ROLLBACK_COMPLETED"
)

func (e WorkflowExecutionStatusEnum) ToPointer() *WorkflowExecutionStatusEnum {
	return &e
}

func (e *WorkflowExecutionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "SKIPPED":
		fallthrough
	case "RUNNING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "FAILED":
		fallthrough
	case "ROLLBACK_IN_PROGRESS":
		fallthrough
	case "ROLLBACK_COMPLETED":
		*e = WorkflowExecutionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkflowExecutionStatusEnum: %v", v)
	}
}
