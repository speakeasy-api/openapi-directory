/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Custom attribute(s) of the user.
 */
export class UserUpdateApplicationJSONCustomAttributes extends SpeakeasyBase {
  /**
   * Identifier for the custom attribute.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  /**
   * Name of the custom attribute.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Value of the custom attribute.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

export class UserUpdateApplicationJSONPhoneNumbers extends SpeakeasyBase {
  /**
   * Country code of the phone number. For example, for United States phone numbers, the value of this field should be "+1".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  /**
   * [Country ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) of the phone number. For example, if the phone number provided in the `number` field is a Brazil based number, the value of the `country` field should be `BR`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  country?: string;

  /**
   * Phone number of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number?: string;
}

/**
 * User types:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).
 */
export enum UserUpdateApplicationJSONTypeEnum {
  One = "1",
  Two = "2",
  Three = "3",
  NinetyNine = "99",
}

/**
 * The user update object represents a user on Zoom.
 */
export class UserUpdateApplicationJSON extends SpeakeasyBase {
  /**
   * Kaltura user ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cms_user_id" })
  cmsUserId?: string;

  /**
   * User's company.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "company" })
  company?: string;

  /**
   * Custom attribute(s) of the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "custom_attributes" })
  @Type(() => UserUpdateApplicationJSONCustomAttributes)
  customAttributes?: UserUpdateApplicationJSONCustomAttributes;

  /**
   * Department for user profile: use for report.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dept" })
  dept?: string;

  /**
   * User's first name. Cannot contain more than 5 Chinese characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "first_name" })
  firstName?: string;

  /**
   * Provide unique identifier of the group that you would like to add a [pending user](https://support.zoom.us/hc/en-us/articles/201363183-Managing-users#h_13c87a2a-ecd6-40ad-be61-a9935e660edb) to. The value of this field can be retrieved from [List Groups](https://marketplace.zoom.us/docs/api-reference/zoom-api/groups/groups) API.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "group_id" })
  groupId?: string;

  /**
   * Host key. It should be a 6-10 digit number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "host_key" })
  hostKey?: string;

  /**
   * User's job title.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "job_title" })
  jobTitle?: string;

  /**
   * language
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  /**
   * User's last name. Cannot contain more than 5 Chinese characters.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_name" })
  lastName?: string;

  /**
   * User's location.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  /**
   * The manager for the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manager" })
  manager?: string;

  /**
   * **Note:** This field has been **deprecated** and will not be supported in the future. Use the **country** field of the **phone_numbers** object instead to select the country for the phone number.
   *
   * @remarks
   *
   *
   *
   * [Country ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries) of the phone number. For example, if the phone number provided in the `phone_number` field is a Brazil based number, the value of the `phone_country` field should be `BR`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone_country" })
  phoneCountry?: string;

  /**
   * **Note:** This field has been **deprecated** and will not be supported in the future. Use the **phone_numbers** field instead to assign phone number(s) to a user.
   *
   * @remarks
   *
   *
   * Phone number of the user. To update a phone number, you must also provide the `phone_country` field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "phone_number" })
  phoneNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "phone_numbers" })
  @Type(() => UserUpdateApplicationJSONPhoneNumbers)
  phoneNumbers?: UserUpdateApplicationJSONPhoneNumbers;

  /**
   * Personal meeting ID: length must be 10.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pmi" })
  pmi?: number;

  /**
   * The time zone ID for a user profile. For this parameter value please refer to the ID value in the [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timezone" })
  timezone?: string;

  /**
   * User types:<br>`1` - Basic.<br>`2` - Licensed.<br>`3` - On-prem.<br>`99` - None (this can only be set with `ssoCreate`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: UserUpdateApplicationJSONTypeEnum;

  /**
   * Use Personal Meeting ID for instant meetings.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "use_pmi" })
  usePmi?: boolean;

  /**
   * Personal meeting room name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vanity_name" })
  vanityName?: string;
}

/**
 * `0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO.
 */
export enum UserUpdateLoginTypeEnum {
  Zero = "0",
  One = "1",
  NinetyNine = "99",
  OneHundred = "100",
  OneHundredAndOne = "101",
}

export class UserUpdateRequest extends SpeakeasyBase {
  /**
   * User
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UserUpdateApplicationJSON;

  /**
   * `0` - Facebook.<br>`1` - Google.<br>`99` - API.<br>`100` - Zoom.<br>`101` - SSO.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=login_type",
  })
  loginType?: UserUpdateLoginTypeEnum;

  /**
   * The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=userId",
  })
  userId: string;
}

export class UserUpdateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
