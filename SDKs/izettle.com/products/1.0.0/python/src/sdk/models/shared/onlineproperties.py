"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import presentation as shared_presentation
from ..shared import searchengineoptimization as shared_searchengineoptimization
from ..shared import shipping as shared_shipping
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class OnlinePropertiesStatusEnum(str, Enum):
    ACTIVE = 'ACTIVE'
    HIDDEN = 'HIDDEN'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnlineProperties:
    
    status: OnlinePropertiesStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})  
    presentation: Optional[shared_presentation.Presentation] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('presentation'), 'exclude': lambda f: f is None }})  
    seo: Optional[shared_searchengineoptimization.SearchEngineOptimization] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('seo'), 'exclude': lambda f: f is None }})  
    shipping: Optional[shared_shipping.Shipping] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('shipping'), 'exclude': lambda f: f is None }})  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})  
    