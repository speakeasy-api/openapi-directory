"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DescribeConversionTasksResult = exports.DescribeConversionTasksResultConversionTasks = exports.DescribeConversionTasksResultConversionTasksTags = exports.DescribeConversionTasksResultConversionTasksStateEnum = exports.DescribeConversionTasksResultConversionTasksImportVolume = exports.DescribeConversionTasksResultConversionTasksImportVolumeVolume = exports.DescribeConversionTasksResultConversionTasksImportVolumeImage = exports.DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum = exports.DescribeConversionTasksResultConversionTasksImportInstance = exports.DescribeConversionTasksResultConversionTasksImportInstanceVolumes = exports.DescribeConversionTasksResultConversionTasksImportInstanceVolumesVolume = exports.DescribeConversionTasksResultConversionTasksImportInstanceVolumesImage = exports.DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum = exports.DescribeConversionTasksResultConversionTasksImportInstancePlatformEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The instance operating system.
 */
var DescribeConversionTasksResultConversionTasksImportInstancePlatformEnum;
(function (DescribeConversionTasksResultConversionTasksImportInstancePlatformEnum) {
    DescribeConversionTasksResultConversionTasksImportInstancePlatformEnum["Windows"] = "Windows";
})(DescribeConversionTasksResultConversionTasksImportInstancePlatformEnum = exports.DescribeConversionTasksResultConversionTasksImportInstancePlatformEnum || (exports.DescribeConversionTasksResultConversionTasksImportInstancePlatformEnum = {}));
/**
 * The disk image format.
 */
var DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum;
(function (DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum) {
    DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum["Vmdk"] = "VMDK";
    DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum["Raw"] = "RAW";
    DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum["Vhd"] = "VHD";
})(DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum = exports.DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum || (exports.DescribeConversionTasksResultConversionTasksImportInstanceVolumesImageFormatEnum = {}));
/**
 * The image.
 */
var DescribeConversionTasksResultConversionTasksImportInstanceVolumesImage = /** @class */ (function (_super) {
    __extends(DescribeConversionTasksResultConversionTasksImportInstanceVolumesImage, _super);
    function DescribeConversionTasksResultConversionTasksImportInstanceVolumesImage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksImportInstanceVolumesImage.prototype, "checksum", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksImportInstanceVolumesImage.prototype, "format", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksImportInstanceVolumesImage.prototype, "importManifestUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeConversionTasksResultConversionTasksImportInstanceVolumesImage.prototype, "size", void 0);
    return DescribeConversionTasksResultConversionTasksImportInstanceVolumesImage;
}(utils_1.SpeakeasyBase));
exports.DescribeConversionTasksResultConversionTasksImportInstanceVolumesImage = DescribeConversionTasksResultConversionTasksImportInstanceVolumesImage;
/**
 * The volume.
 */
var DescribeConversionTasksResultConversionTasksImportInstanceVolumesVolume = /** @class */ (function (_super) {
    __extends(DescribeConversionTasksResultConversionTasksImportInstanceVolumesVolume, _super);
    function DescribeConversionTasksResultConversionTasksImportInstanceVolumesVolume() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksImportInstanceVolumesVolume.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeConversionTasksResultConversionTasksImportInstanceVolumesVolume.prototype, "size", void 0);
    return DescribeConversionTasksResultConversionTasksImportInstanceVolumesVolume;
}(utils_1.SpeakeasyBase));
exports.DescribeConversionTasksResultConversionTasksImportInstanceVolumesVolume = DescribeConversionTasksResultConversionTasksImportInstanceVolumesVolume;
/**
 * Describes an import volume task.
 */
var DescribeConversionTasksResultConversionTasksImportInstanceVolumes = /** @class */ (function (_super) {
    __extends(DescribeConversionTasksResultConversionTasksImportInstanceVolumes, _super);
    function DescribeConversionTasksResultConversionTasksImportInstanceVolumes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksImportInstanceVolumes.prototype, "availabilityZone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeConversionTasksResultConversionTasksImportInstanceVolumes.prototype, "bytesConverted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksImportInstanceVolumes.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DescribeConversionTasksResultConversionTasksImportInstanceVolumesImage)
    ], DescribeConversionTasksResultConversionTasksImportInstanceVolumes.prototype, "image", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksImportInstanceVolumes.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksImportInstanceVolumes.prototype, "statusMessage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DescribeConversionTasksResultConversionTasksImportInstanceVolumesVolume)
    ], DescribeConversionTasksResultConversionTasksImportInstanceVolumes.prototype, "volume", void 0);
    return DescribeConversionTasksResultConversionTasksImportInstanceVolumes;
}(utils_1.SpeakeasyBase));
exports.DescribeConversionTasksResultConversionTasksImportInstanceVolumes = DescribeConversionTasksResultConversionTasksImportInstanceVolumes;
/**
 * If the task is for importing an instance, this contains information about the import instance task.
 */
var DescribeConversionTasksResultConversionTasksImportInstance = /** @class */ (function (_super) {
    __extends(DescribeConversionTasksResultConversionTasksImportInstance, _super);
    function DescribeConversionTasksResultConversionTasksImportInstance() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksImportInstance.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksImportInstance.prototype, "instanceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksImportInstance.prototype, "platform", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeConversionTasksResultConversionTasksImportInstanceVolumes,
        }),
        __metadata("design:type", Array)
    ], DescribeConversionTasksResultConversionTasksImportInstance.prototype, "volumes", void 0);
    return DescribeConversionTasksResultConversionTasksImportInstance;
}(utils_1.SpeakeasyBase));
exports.DescribeConversionTasksResultConversionTasksImportInstance = DescribeConversionTasksResultConversionTasksImportInstance;
/**
 * The disk image format.
 */
var DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum;
(function (DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum) {
    DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum["Vmdk"] = "VMDK";
    DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum["Raw"] = "RAW";
    DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum["Vhd"] = "VHD";
})(DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum = exports.DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum || (exports.DescribeConversionTasksResultConversionTasksImportVolumeImageFormatEnum = {}));
/**
 * The image.
 */
var DescribeConversionTasksResultConversionTasksImportVolumeImage = /** @class */ (function (_super) {
    __extends(DescribeConversionTasksResultConversionTasksImportVolumeImage, _super);
    function DescribeConversionTasksResultConversionTasksImportVolumeImage() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksImportVolumeImage.prototype, "checksum", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksImportVolumeImage.prototype, "format", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksImportVolumeImage.prototype, "importManifestUrl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeConversionTasksResultConversionTasksImportVolumeImage.prototype, "size", void 0);
    return DescribeConversionTasksResultConversionTasksImportVolumeImage;
}(utils_1.SpeakeasyBase));
exports.DescribeConversionTasksResultConversionTasksImportVolumeImage = DescribeConversionTasksResultConversionTasksImportVolumeImage;
/**
 * The volume.
 */
var DescribeConversionTasksResultConversionTasksImportVolumeVolume = /** @class */ (function (_super) {
    __extends(DescribeConversionTasksResultConversionTasksImportVolumeVolume, _super);
    function DescribeConversionTasksResultConversionTasksImportVolumeVolume() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksImportVolumeVolume.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeConversionTasksResultConversionTasksImportVolumeVolume.prototype, "size", void 0);
    return DescribeConversionTasksResultConversionTasksImportVolumeVolume;
}(utils_1.SpeakeasyBase));
exports.DescribeConversionTasksResultConversionTasksImportVolumeVolume = DescribeConversionTasksResultConversionTasksImportVolumeVolume;
/**
 * If the task is for importing a volume, this contains information about the import volume task.
 */
var DescribeConversionTasksResultConversionTasksImportVolume = /** @class */ (function (_super) {
    __extends(DescribeConversionTasksResultConversionTasksImportVolume, _super);
    function DescribeConversionTasksResultConversionTasksImportVolume() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksImportVolume.prototype, "availabilityZone", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], DescribeConversionTasksResultConversionTasksImportVolume.prototype, "bytesConverted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksImportVolume.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DescribeConversionTasksResultConversionTasksImportVolumeImage)
    ], DescribeConversionTasksResultConversionTasksImportVolume.prototype, "image", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DescribeConversionTasksResultConversionTasksImportVolumeVolume)
    ], DescribeConversionTasksResultConversionTasksImportVolume.prototype, "volume", void 0);
    return DescribeConversionTasksResultConversionTasksImportVolume;
}(utils_1.SpeakeasyBase));
exports.DescribeConversionTasksResultConversionTasksImportVolume = DescribeConversionTasksResultConversionTasksImportVolume;
/**
 * The state of the conversion task.
 */
var DescribeConversionTasksResultConversionTasksStateEnum;
(function (DescribeConversionTasksResultConversionTasksStateEnum) {
    DescribeConversionTasksResultConversionTasksStateEnum["Active"] = "active";
    DescribeConversionTasksResultConversionTasksStateEnum["Cancelling"] = "cancelling";
    DescribeConversionTasksResultConversionTasksStateEnum["Cancelled"] = "cancelled";
    DescribeConversionTasksResultConversionTasksStateEnum["Completed"] = "completed";
})(DescribeConversionTasksResultConversionTasksStateEnum = exports.DescribeConversionTasksResultConversionTasksStateEnum || (exports.DescribeConversionTasksResultConversionTasksStateEnum = {}));
/**
 * Describes a tag.
 */
var DescribeConversionTasksResultConversionTasksTags = /** @class */ (function (_super) {
    __extends(DescribeConversionTasksResultConversionTasksTags, _super);
    function DescribeConversionTasksResultConversionTasksTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasksTags.prototype, "value", void 0);
    return DescribeConversionTasksResultConversionTasksTags;
}(utils_1.SpeakeasyBase));
exports.DescribeConversionTasksResultConversionTasksTags = DescribeConversionTasksResultConversionTasksTags;
/**
 * Describes a conversion task.
 */
var DescribeConversionTasksResultConversionTasks = /** @class */ (function (_super) {
    __extends(DescribeConversionTasksResultConversionTasks, _super);
    function DescribeConversionTasksResultConversionTasks() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasks.prototype, "conversionTaskId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasks.prototype, "expirationTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DescribeConversionTasksResultConversionTasksImportInstance)
    ], DescribeConversionTasksResultConversionTasks.prototype, "importInstance", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", DescribeConversionTasksResultConversionTasksImportVolume)
    ], DescribeConversionTasksResultConversionTasks.prototype, "importVolume", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasks.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeConversionTasksResultConversionTasks.prototype, "statusMessage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: DescribeConversionTasksResultConversionTasksTags,
        }),
        __metadata("design:type", Array)
    ], DescribeConversionTasksResultConversionTasks.prototype, "tags", void 0);
    return DescribeConversionTasksResultConversionTasks;
}(utils_1.SpeakeasyBase));
exports.DescribeConversionTasksResultConversionTasks = DescribeConversionTasksResultConversionTasks;
/**
 * Success
 */
var DescribeConversionTasksResult = /** @class */ (function (_super) {
    __extends(DescribeConversionTasksResult, _super);
    function DescribeConversionTasksResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DescribeConversionTasksResultConversionTasks }),
        __metadata("design:type", Array)
    ], DescribeConversionTasksResult.prototype, "conversionTasks", void 0);
    return DescribeConversionTasksResult;
}(utils_1.SpeakeasyBase));
exports.DescribeConversionTasksResult = DescribeConversionTasksResult;
