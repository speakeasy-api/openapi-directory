// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type WorkflowStateEnum string

const (
	WorkflowStateEnumActive             WorkflowStateEnum = "active"
	WorkflowStateEnumDeleted            WorkflowStateEnum = "deleted"
	WorkflowStateEnumDisabledFork       WorkflowStateEnum = "disabled_fork"
	WorkflowStateEnumDisabledInactivity WorkflowStateEnum = "disabled_inactivity"
	WorkflowStateEnumDisabledManually   WorkflowStateEnum = "disabled_manually"
)

func (e *WorkflowStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "deleted":
		fallthrough
	case "disabled_fork":
		fallthrough
	case "disabled_inactivity":
		fallthrough
	case "disabled_manually":
		*e = WorkflowStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkflowStateEnum: %s", s)
	}
}

// Workflow - A GitHub Actions workflow
type Workflow struct {
	BadgeURL  string            `json:"badge_url"`
	CreatedAt time.Time         `json:"created_at"`
	DeletedAt *time.Time        `json:"deleted_at,omitempty"`
	HTMLURL   string            `json:"html_url"`
	ID        int64             `json:"id"`
	Name      string            `json:"name"`
	NodeID    string            `json:"node_id"`
	Path      string            `json:"path"`
	State     WorkflowStateEnum `json:"state"`
	UpdatedAt time.Time         `json:"updated_at"`
	URL       string            `json:"url"`
}
