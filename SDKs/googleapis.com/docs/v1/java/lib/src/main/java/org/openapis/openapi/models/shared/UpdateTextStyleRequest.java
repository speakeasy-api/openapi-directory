/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateTextStyleRequest - Update the styling of text.
 */
public class UpdateTextStyleRequest {
    /**
     * The fields that should be updated. At least one field must be specified. The root `text_style` is implied and should not be specified. A single `"*"` can be used as short-hand for listing every field. For example, to update the text style to bold, set `fields` to `"bold"`. To reset a property to its default value, include its field name in the field mask but leave the field itself unset.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fields")
    public String fields;
    public UpdateTextStyleRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * Specifies a contiguous range of text.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("range")
    public Range range;
    public UpdateTextStyleRequest withRange(Range range) {
        this.range = range;
        return this;
    }
    
    /**
     * Represents the styling that can be applied to text. Inherited text styles are represented as unset fields in this message. A text style's parent depends on where the text style is defined: * The TextStyle of text in a Paragraph inherits from the paragraph's corresponding named style type. * The TextStyle on a named style inherits from the normal text named style. * The TextStyle of the normal text named style inherits from the default text style in the Docs editor. * The TextStyle on a Paragraph element that's contained in a table may inherit its text style from the table style. If the text style does not inherit from a parent, unsetting fields will revert the style to a value matching the defaults in the Docs editor.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("textStyle")
    public TextStyle textStyle;
    public UpdateTextStyleRequest withTextStyle(TextStyle textStyle) {
        this.textStyle = textStyle;
        return this;
    }
    
}
