// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ReleaseEventSeriesAPIGetOnePathParams struct {
	ID int `pathParam:"style=simple,explode=false,name=id"`
}

// ReleaseEventSeriesAPIGetOneFieldsEnum
type ReleaseEventSeriesAPIGetOneFieldsEnum string

const (
	ReleaseEventSeriesAPIGetOneFieldsEnumNone            ReleaseEventSeriesAPIGetOneFieldsEnum = "None"
	ReleaseEventSeriesAPIGetOneFieldsEnumAdditionalNames ReleaseEventSeriesAPIGetOneFieldsEnum = "AdditionalNames"
	ReleaseEventSeriesAPIGetOneFieldsEnumDescription     ReleaseEventSeriesAPIGetOneFieldsEnum = "Description"
	ReleaseEventSeriesAPIGetOneFieldsEnumEvents          ReleaseEventSeriesAPIGetOneFieldsEnum = "Events"
	ReleaseEventSeriesAPIGetOneFieldsEnumMainPicture     ReleaseEventSeriesAPIGetOneFieldsEnum = "MainPicture"
	ReleaseEventSeriesAPIGetOneFieldsEnumNames           ReleaseEventSeriesAPIGetOneFieldsEnum = "Names"
	ReleaseEventSeriesAPIGetOneFieldsEnumWebLinks        ReleaseEventSeriesAPIGetOneFieldsEnum = "WebLinks"
)

func (e *ReleaseEventSeriesAPIGetOneFieldsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "None":
		fallthrough
	case "AdditionalNames":
		fallthrough
	case "Description":
		fallthrough
	case "Events":
		fallthrough
	case "MainPicture":
		fallthrough
	case "Names":
		fallthrough
	case "WebLinks":
		*e = ReleaseEventSeriesAPIGetOneFieldsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReleaseEventSeriesAPIGetOneFieldsEnum: %s", s)
	}
}

// ReleaseEventSeriesAPIGetOneLangEnum
type ReleaseEventSeriesAPIGetOneLangEnum string

const (
	ReleaseEventSeriesAPIGetOneLangEnumDefault  ReleaseEventSeriesAPIGetOneLangEnum = "Default"
	ReleaseEventSeriesAPIGetOneLangEnumJapanese ReleaseEventSeriesAPIGetOneLangEnum = "Japanese"
	ReleaseEventSeriesAPIGetOneLangEnumRomaji   ReleaseEventSeriesAPIGetOneLangEnum = "Romaji"
	ReleaseEventSeriesAPIGetOneLangEnumEnglish  ReleaseEventSeriesAPIGetOneLangEnum = "English"
)

func (e *ReleaseEventSeriesAPIGetOneLangEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Default":
		fallthrough
	case "Japanese":
		fallthrough
	case "Romaji":
		fallthrough
	case "English":
		*e = ReleaseEventSeriesAPIGetOneLangEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReleaseEventSeriesAPIGetOneLangEnum: %s", s)
	}
}

type ReleaseEventSeriesAPIGetOneQueryParams struct {
	Fields *ReleaseEventSeriesAPIGetOneFieldsEnum `queryParam:"style=form,explode=true,name=fields"`
	Lang   *ReleaseEventSeriesAPIGetOneLangEnum   `queryParam:"style=form,explode=true,name=lang"`
}

type ReleaseEventSeriesAPIGetOneRequest struct {
	PathParams  ReleaseEventSeriesAPIGetOnePathParams
	QueryParams ReleaseEventSeriesAPIGetOneQueryParams
}

type ReleaseEventSeriesAPIGetOneResponse struct {
	Body        []byte
	ContentType string
	// OK
	ReleaseEventSeriesForAPIContract *shared.ReleaseEventSeriesForAPIContract
	StatusCode                       int
	RawResponse                      *http.Response
}
