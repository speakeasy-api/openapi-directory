/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CustomerEncryptionKey } from "./customerencryptionkey";
import { InstanceProperties } from "./instanceproperties";
import { SavedDisk } from "./saveddisk";
import { SourceDiskEncryptionKey } from "./sourcediskencryptionkey";
import { SourceInstanceProperties } from "./sourceinstanceproperties";
import { Expose, Type } from "class-transformer";

/**
 * [Output Only] The status of the machine image. One of the following values: INVALID, CREATING, READY, DELETING, and UPLOADING.
 */
export enum MachineImageStatusEnum {
  Creating = "CREATING",
  Deleting = "DELETING",
  Invalid = "INVALID",
  Ready = "READY",
  Uploading = "UPLOADING",
}

/**
 * Represents a machine image resource. A machine image is a Compute Engine resource that stores all the configuration, metadata, permissions, and data from one or more disks required to create a Virtual machine (VM) instance. For more information, see Machine images.
 */
export class MachineImage extends SpeakeasyBase {
  /**
   * [Output Only] The creation timestamp for this machine image in RFC3339 text format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationTimestamp" })
  creationTimestamp?: string;

  /**
   * An optional description of this resource. Provide this property when you create the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * [Input Only] Whether to attempt an application consistent machine image by informing the OS to prepare for the snapshot process.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "guestFlush" })
  guestFlush?: boolean;

  /**
   * [Output Only] A unique identifier for this machine image. The server defines this identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instanceProperties" })
  @Type(() => InstanceProperties)
  instanceProperties?: InstanceProperties;

  /**
   * [Output Only] The resource type, which is always compute#machineImage for machine image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "machineImageEncryptionKey" })
  @Type(() => CustomerEncryptionKey)
  machineImageEncryptionKey?: CustomerEncryptionKey;

  /**
   * Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * [Output Only] Reserved for future use.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "satisfiesPzs" })
  satisfiesPzs?: boolean;

  /**
   * An array of Machine Image specific properties for disks attached to the source instance
   */
  @SpeakeasyMetadata({ elemType: SavedDisk })
  @Expose({ name: "savedDisks" })
  @Type(() => SavedDisk)
  savedDisks?: SavedDisk[];

  /**
   * [Output Only] The URL for this machine image. The server defines this URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * [Output Only] Server-defined URL for this resource with the resource id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLinkWithId" })
  selfLinkWithId?: string;

  /**
   * [Input Only] The customer-supplied encryption key of the disks attached to the source instance. Required if the source disk is protected by a customer-supplied encryption key.
   */
  @SpeakeasyMetadata({ elemType: SourceDiskEncryptionKey })
  @Expose({ name: "sourceDiskEncryptionKeys" })
  @Type(() => SourceDiskEncryptionKey)
  sourceDiskEncryptionKeys?: SourceDiskEncryptionKey[];

  /**
   * The source instance used to create the machine image. You can provide this as a partial or full URL to the resource. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /instances/instance - projects/project/zones/zone/instances/instance
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceInstance" })
  sourceInstance?: string;

  /**
   * DEPRECATED: Please use compute#instanceProperties instead. New properties will not be added to this field.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sourceInstanceProperties" })
  @Type(() => SourceInstanceProperties)
  sourceInstanceProperties?: SourceInstanceProperties;

  /**
   * [Output Only] The status of the machine image. One of the following values: INVALID, CREATING, READY, DELETING, and UPLOADING.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: MachineImageStatusEnum;

  /**
   * The regional or multi-regional Cloud Storage bucket location where the machine image is stored.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "storageLocations" })
  storageLocations?: string[];

  /**
   * [Output Only] Total size of the storage used by the machine image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "totalStorageBytes" })
  totalStorageBytes?: string;
}
