"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Address:
    
    administrative_area_level1: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('administrativeAreaLevel1') }})
    r"""Name of administrative area, such as the state or province."""  
    country_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('countryName') }})
    r"""Name of the address country."""  
    locality: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locality') }})
    r"""Name of address locality, such as the city."""  
    locality_area_level1: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('localityAreaLevel1') }})
    r"""Name of the address locality area, such as the neighborhood or district."""  
    postal_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('postalCode') }})
    r"""Address postal code."""  
    route: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('route') }})
    r"""Address route or street name."""  
    street_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('streetNumber') }})
    r"""Address street number."""  
    country_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('countryCode'), 'exclude': lambda f: f is None }})
    r"""Two letter country code."""  
    