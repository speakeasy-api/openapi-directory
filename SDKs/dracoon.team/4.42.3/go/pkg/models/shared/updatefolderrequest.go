// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// UpdateFolderRequestClassificationEnum - &#128640; Since v4.30.0
//
// Classification ID:
//
// * `1` - public
//
// * `2` - internal
//
// * `3` - confidential
//
// * `4` - strictly confidential
//
// # Provided (or default) classification is taken from room
//
// when file gets uploaded without any classification.
type UpdateFolderRequestClassificationEnum int

const (
	UpdateFolderRequestClassificationEnumOne   UpdateFolderRequestClassificationEnum = 1
	UpdateFolderRequestClassificationEnumTwo   UpdateFolderRequestClassificationEnum = 2
	UpdateFolderRequestClassificationEnumThree UpdateFolderRequestClassificationEnum = 3
	UpdateFolderRequestClassificationEnumFour  UpdateFolderRequestClassificationEnum = 4
)

func (e UpdateFolderRequestClassificationEnum) ToPointer() *UpdateFolderRequestClassificationEnum {
	return &e
}

func (e *UpdateFolderRequestClassificationEnum) UnmarshalJSON(data []byte) error {
	var v int
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 1:
		fallthrough
	case 2:
		fallthrough
	case 3:
		fallthrough
	case 4:
		*e = UpdateFolderRequestClassificationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateFolderRequestClassificationEnum: %v", v)
	}
}

// UpdateFolderRequest - Request model for updating folder's metadata
type UpdateFolderRequest struct {
	// &#128640; Since v4.30.0
	//
	// Classification ID:
	//
	// * `1` - public
	//
	// * `2` - internal
	//
	// * `3` - confidential
	//
	// * `4` - strictly confidential
	//
	//
	//
	// Provided (or default) classification is taken from room
	//
	// when file gets uploaded without any classification.
	Classification *UpdateFolderRequestClassificationEnum `json:"classification,omitempty"`
	// Folder name
	Name *string `json:"name,omitempty"`
	// User notes
	//
	// Use empty string to remove.
	Notes *string `json:"notes,omitempty"`
	// &#128640; Since v4.22.0
	//
	// Time the node was created on external file system
	//
	// (default: current server datetime in UTC format)
	TimestampCreation *time.Time `json:"timestampCreation,omitempty"`
	// &#128640; Since v4.22.0
	//
	// Time the content of a node was last modified on external file system
	//
	// (default: current server datetime in UTC format)
	TimestampModification *time.Time `json:"timestampModification,omitempty"`
}
