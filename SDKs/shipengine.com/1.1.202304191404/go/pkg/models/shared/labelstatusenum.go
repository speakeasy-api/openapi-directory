// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LabelStatusEnum - The possible statuses that a [shipping label](https://www.shipengine.com/docs/labels/create-a-label/) can be in.
//
// |Status       |Description
// |:------------|:-----------------------------------------------------
// |`processing` |When labels are created in a [batch](https://www.shipengine.com/docs/labels/bulk/), it may take a few minutes for all of the labels in the batch to be created.  During this period, they will be in `processing` status.
// |`completed`  |The label was successfully created
// |`error`      |The label could not be created due to an error, such as an invalid delivery address
// |`voided`     |The label has been [voided](https://www.shipengine.com/docs/labels/voiding/)
type LabelStatusEnum string

const (
	LabelStatusEnumProcessing LabelStatusEnum = "processing"
	LabelStatusEnumCompleted  LabelStatusEnum = "completed"
	LabelStatusEnumError      LabelStatusEnum = "error"
	LabelStatusEnumVoided     LabelStatusEnum = "voided"
)

func (e LabelStatusEnum) ToPointer() *LabelStatusEnum {
	return &e
}

func (e *LabelStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "processing":
		fallthrough
	case "completed":
		fallthrough
	case "error":
		fallthrough
	case "voided":
		*e = LabelStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LabelStatusEnum: %v", v)
	}
}
