/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RetrieveConversation200ApplicationJSON - Conversation Object
 */
public class RetrieveConversation200ApplicationJSON {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("_links")
    public org.openapis.openapi.models.shared.LinksConversation links;
    public RetrieveConversation200ApplicationJSON withLinks(org.openapis.openapi.models.shared.LinksConversation links) {
        this.links = links;
        return this;
    }
    
    /**
     * The API key for your account
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("api_key")
    public String apiKey;
    public RetrieveConversation200ApplicationJSON withApiKey(String apiKey) {
        this.apiKey = apiKey;
        return this;
    }
    
    /**
     * The display name for the conversation. It does not have to be unique
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("display_name")
    public String displayName;
    public RetrieveConversation200ApplicationJSON withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * Users associated to this conversation as members
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("members")
    public RetrieveConversation200ApplicationJSONMembers[] members;
    public RetrieveConversation200ApplicationJSON withMembers(RetrieveConversation200ApplicationJSONMembers[] members) {
        this.members = members;
        return this;
    }
    
    /**
     * Unique name for a conversation
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public RetrieveConversation200ApplicationJSON withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("numbers")
    public java.util.Map<String, Object> numbers;
    public RetrieveConversation200ApplicationJSON withNumbers(java.util.Map<String, Object> numbers) {
        this.numbers = numbers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    public RetrieveConversation200ApplicationJSONProperties properties;
    public RetrieveConversation200ApplicationJSON withProperties(RetrieveConversation200ApplicationJSONProperties properties) {
        this.properties = properties;
        return this;
    }
    
    /**
     * The last Event ID in this conversation. This ID can be used to [retrieve a specific event](#getEvent)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sequence_number")
    public String sequenceNumber;
    public RetrieveConversation200ApplicationJSON withSequenceNumber(String sequenceNumber) {
        this.sequenceNumber = sequenceNumber;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timestamp")
    public org.openapis.openapi.models.shared.TimestampResConversation timestamp;
    public RetrieveConversation200ApplicationJSON withTimestamp(org.openapis.openapi.models.shared.TimestampResConversation timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    /**
     * The unique identifier for this conversation
     */
    @JsonProperty("uuid")
    public String uuid;
    public RetrieveConversation200ApplicationJSON withUuid(String uuid) {
        this.uuid = uuid;
        return this;
    }
    
}
