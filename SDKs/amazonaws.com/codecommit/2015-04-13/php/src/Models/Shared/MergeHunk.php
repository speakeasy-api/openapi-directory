<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * MergeHunk - Information about merge hunks in a merge or pull request operation.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class MergeHunk
{
	#[\JMS\Serializer\Annotation\SerializedName('base')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MergeHunkDetail')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MergeHunkDetail $base = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('destination')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MergeHunkDetail')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MergeHunkDetail $destination = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('isConflict')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isConflict = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('source')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MergeHunkDetail')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?MergeHunkDetail $source = null;
    
	public function __construct()
	{
		$this->base = null;
		$this->destination = null;
		$this->isConflict = null;
		$this->source = null;
	}
}
