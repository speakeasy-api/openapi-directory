/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * The age range of the person. Valid ranges are 17 or younger, 18 to 20, and 21 or older. Age is determined from the user's birthday using Western age reckoning.
 */
export class PersonAgeRange extends SpeakeasyBase {
  /**
   * The age range's upper bound, if any. Possible values include, but are not limited to, the following:
   *
   * @remarks
   * - "17" - for age 17
   * - "20" - for age 20
   */
  @SpeakeasyMetadata()
  @Expose({ name: "max" })
  max?: number;

  /**
   * The age range's lower bound, if any. Possible values include, but are not limited to, the following:
   *
   * @remarks
   * - "21" - for age 21
   * - "18" - for age 18
   */
  @SpeakeasyMetadata()
  @Expose({ name: "min" })
  min?: number;
}

/**
 * Extra information about the cover photo.
 */
export class PersonCoverCoverInfo extends SpeakeasyBase {
  /**
   * The difference between the left position of the cover image and the actual displayed cover image. Only valid for banner layout.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "leftImageOffset" })
  leftImageOffset?: number;

  /**
   * The difference between the top position of the cover image and the actual displayed cover image. Only valid for banner layout.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "topImageOffset" })
  topImageOffset?: number;
}

/**
 * The person's primary cover image.
 */
export class PersonCoverCoverPhoto extends SpeakeasyBase {
  /**
   * The height of the image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "height" })
  height?: number;

  /**
   * The URL of the image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * The width of the image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "width" })
  width?: number;
}

/**
 * The cover photo content.
 */
export class PersonCover extends SpeakeasyBase {
  /**
   * Extra information about the cover photo.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "coverInfo" })
  @Type(() => PersonCoverCoverInfo)
  coverInfo?: PersonCoverCoverInfo;

  /**
   * The person's primary cover image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "coverPhoto" })
  @Type(() => PersonCoverCoverPhoto)
  coverPhoto?: PersonCoverCoverPhoto;

  /**
   * The layout of the cover art. Possible values include, but are not limited to, the following values:
   *
   * @remarks
   * - "banner" - One large image banner.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "layout" })
  layout?: string;
}

export class PersonEmails extends SpeakeasyBase {
  /**
   * The type of address. Possible values include, but are not limited to, the following values:
   *
   * @remarks
   * - "account" - Google account email address.
   * - "home" - Home email address.
   * - "work" - Work email address.
   * - "other" - Other.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * The email address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * The representation of the person's profile photo.
 */
export class PersonImage extends SpeakeasyBase {
  /**
   * Whether the person's profile photo is the default one
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isDefault" })
  isDefault?: boolean;

  /**
   * The URL of the person's profile photo. To resize the image and crop it to a square, append the query string ?sz=x, where x is the dimension in pixels of each side.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * An object representation of the individual components of a person's name.
 */
export class PersonName extends SpeakeasyBase {
  /**
   * The family name (last name) of this person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "familyName" })
  familyName?: string;

  /**
   * The full name of this person, including middle names, suffixes, etc.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "formatted" })
  formatted?: string;

  /**
   * The given name (first name) of this person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "givenName" })
  givenName?: string;

  /**
   * The honorific prefixes (such as "Dr." or "Mrs.") for this person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "honorificPrefix" })
  honorificPrefix?: string;

  /**
   * The honorific suffixes (such as "Jr.") for this person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "honorificSuffix" })
  honorificSuffix?: string;

  /**
   * The middle name of this person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "middleName" })
  middleName?: string;
}

export class PersonOrganizations extends SpeakeasyBase {
  /**
   * The department within the organization. Deprecated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "department" })
  department?: string;

  /**
   * A short description of the person's role in this organization. Deprecated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * The date that the person left this organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "endDate" })
  endDate?: string;

  /**
   * The location of this organization. Deprecated.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  /**
   * The name of the organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * If "true", indicates this organization is the person's primary one, which is typically interpreted as the current one.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "primary" })
  primary?: boolean;

  /**
   * The date that the person joined this organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "startDate" })
  startDate?: string;

  /**
   * The person's job title or role within the organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;

  /**
   * The type of organization. Possible values include, but are not limited to, the following values:
   *
   * @remarks
   * - "work" - Work.
   * - "school" - School.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}

export class PersonPlacesLived extends SpeakeasyBase {
  /**
   * If "true", this place of residence is this person's primary residence.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "primary" })
  primary?: boolean;

  /**
   * A place where this person has lived. For example: "Seattle, WA", "Near Toronto".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

export class PersonUrls extends SpeakeasyBase {
  /**
   * The label of the URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;

  /**
   * The type of URL. Possible values include, but are not limited to, the following values:
   *
   * @remarks
   * - "otherProfile" - URL for another profile.
   * - "contributor" - URL to a site for which this person is a contributor.
   * - "website" - URL for this Google+ Page's primary website.
   * - "other" - Other URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  /**
   * The URL value.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

/**
 * Successful response
 */
export class Person extends SpeakeasyBase {
  /**
   * A short biography for this person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aboutMe" })
  aboutMe?: string;

  /**
   * The age range of the person. Valid ranges are 17 or younger, 18 to 20, and 21 or older. Age is determined from the user's birthday using Western age reckoning.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ageRange" })
  @Type(() => PersonAgeRange)
  ageRange?: PersonAgeRange;

  /**
   * The person's date of birth, represented as YYYY-MM-DD.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "birthday" })
  birthday?: string;

  /**
   * The "bragging rights" line of this person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "braggingRights" })
  braggingRights?: string;

  /**
   * For followers who are visible, the number of people who have added this person or page to a circle.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "circledByCount" })
  circledByCount?: number;

  /**
   * The cover photo content.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "cover" })
  @Type(() => PersonCover)
  cover?: PersonCover;

  /**
   * (this field is not currently used)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "currentLocation" })
  currentLocation?: string;

  /**
   * The name of this person, which is suitable for display.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * The hosted domain name for the user's Google Apps account. For instance, example.com. The plus.profile.emails.read or email scope is needed to get this domain name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "domain" })
  domain?: string;

  /**
   * A list of email addresses that this person has, including their Google account email address, and the public verified email addresses on their Google+ profile. The plus.profile.emails.read scope is needed to retrieve these email addresses, or the email scope can be used to retrieve just the Google account email address.
   */
  @SpeakeasyMetadata({ elemType: PersonEmails })
  @Expose({ name: "emails" })
  @Type(() => PersonEmails)
  emails?: PersonEmails[];

  /**
   * ETag of this response for caching purposes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * The person's gender. Possible values include, but are not limited to, the following values:
   *
   * @remarks
   * - "male" - Male gender.
   * - "female" - Female gender.
   * - "other" - Other.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "gender" })
  gender?: string;

  /**
   * The ID of this person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The representation of the person's profile photo.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image" })
  @Type(() => PersonImage)
  image?: PersonImage;

  /**
   * Whether this user has signed up for Google+.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "isPlusUser" })
  isPlusUser?: boolean;

  /**
   * Identifies this resource as a person. Value: "plus#person".
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The user's preferred language for rendering.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "language" })
  language?: string;

  /**
   * An object representation of the individual components of a person's name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  @Type(() => PersonName)
  name?: PersonName;

  /**
   * The nickname of this person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nickname" })
  nickname?: string;

  /**
   * Type of person within Google+. Possible values include, but are not limited to, the following values:
   *
   * @remarks
   * - "person" - represents an actual person.
   * - "page" - represents a page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "objectType" })
  objectType?: string;

  /**
   * The occupation of this person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "occupation" })
  occupation?: string;

  /**
   * A list of current or past organizations with which this person is associated.
   */
  @SpeakeasyMetadata({ elemType: PersonOrganizations })
  @Expose({ name: "organizations" })
  @Type(() => PersonOrganizations)
  organizations?: PersonOrganizations[];

  /**
   * A list of places where this person has lived.
   */
  @SpeakeasyMetadata({ elemType: PersonPlacesLived })
  @Expose({ name: "placesLived" })
  @Type(() => PersonPlacesLived)
  placesLived?: PersonPlacesLived[];

  /**
   * If a Google+ Page, the number of people who have +1'd this page.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "plusOneCount" })
  plusOneCount?: number;

  /**
   * The person's relationship status. Possible values include, but are not limited to, the following values:
   *
   * @remarks
   * - "single" - Person is single.
   * - "in_a_relationship" - Person is in a relationship.
   * - "engaged" - Person is engaged.
   * - "married" - Person is married.
   * - "its_complicated" - The relationship is complicated.
   * - "open_relationship" - Person is in an open relationship.
   * - "widowed" - Person is widowed.
   * - "in_domestic_partnership" - Person is in a domestic partnership.
   * - "in_civil_union" - Person is in a civil union.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "relationshipStatus" })
  relationshipStatus?: string;

  /**
   * The person's skills.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "skills" })
  skills?: string;

  /**
   * The brief description (tagline) of this person.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tagline" })
  tagline?: string;

  /**
   * The URL of this person's profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;

  /**
   * A list of URLs for this person.
   */
  @SpeakeasyMetadata({ elemType: PersonUrls })
  @Expose({ name: "urls" })
  @Type(() => PersonUrls)
  urls?: PersonUrls[];

  /**
   * Whether the person or Google+ Page has been verified.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "verified" })
  verified?: boolean;
}
