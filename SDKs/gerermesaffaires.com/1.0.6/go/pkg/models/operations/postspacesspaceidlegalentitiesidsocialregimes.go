// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PostSpacesSpaceIDLegalEntitiesIDSocialRegimesSecurity struct {
	GmaAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyLevelEnum string

const (
	PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyLevelEnumConfidential PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyLevelEnum = "confidential"
	PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyLevelEnumRegular      PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyLevelEnum = "regular"
	PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyLevelEnumPublic       PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyLevelEnum = "public"
)

func (e *PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyLevelEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "confidential":
		fallthrough
	case "regular":
		fallthrough
	case "public":
		*e = PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyLevelEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyLevelEnum: %s", s)
	}
}

type PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyPeriodicityEnum string

const (
	PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyPeriodicityEnumMonthly    PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyPeriodicityEnum = "monthly"
	PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyPeriodicityEnumQuarterly  PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyPeriodicityEnum = "quarterly"
	PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyPeriodicityEnumHalfYearly PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyPeriodicityEnum = "half-yearly"
	PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyPeriodicityEnumAnnual     PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyPeriodicityEnum = "annual"
	PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyPeriodicityEnumNull       PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyPeriodicityEnum = "null"
)

func (e *PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyPeriodicityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "monthly":
		fallthrough
	case "quarterly":
		fallthrough
	case "half-yearly":
		fallthrough
	case "annual":
		fallthrough
	case "null":
		*e = PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyPeriodicityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyPeriodicityEnum: %s", s)
	}
}

type PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyTypeEnum string

const (
	PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyTypeEnumMandatory PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyTypeEnum = "mandatory"
	PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyTypeEnumOptional  PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyTypeEnum = "optional"
	PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyTypeEnumNull      PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyTypeEnum = "null"
)

func (e *PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "mandatory":
		fallthrough
	case "optional":
		fallthrough
	case "null":
		*e = PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyTypeEnum: %s", s)
	}
}

// PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBody - SocialRegime to add (except name, class and archivaldate)
type PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBody struct {
	About       *string                                                                  `json:"About,omitempty"`
	Comment     *string                                                                  `json:"Comment,omitempty"`
	Designation *string                                                                  `json:"Designation,omitempty"`
	End         *string                                                                  `json:"End,omitempty"`
	Home        *bool                                                                    `json:"Home,omitempty"`
	Keywords    []string                                                                 `json:"Keywords,omitempty"`
	Level       *PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyLevelEnum       `json:"Level,omitempty"`
	Periodicity *PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyPeriodicityEnum `json:"Periodicity,omitempty"`
	Start       *string                                                                  `json:"Start,omitempty"`
	Type        *PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBodyTypeEnum        `json:"Type,omitempty"`
}

type PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequest struct {
	// SocialRegime to add (except name, class and archivaldate)
	RequestBody PostSpacesSpaceIDLegalEntitiesIDSocialRegimesRequestBody `request:"mediaType=application/json"`
	// Id of the legal entity or memberId
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

// PostSpacesSpaceIDLegalEntitiesIDSocialRegimes201ApplicationJSON - Id of folder created
type PostSpacesSpaceIDLegalEntitiesIDSocialRegimes201ApplicationJSON struct {
	ID *string `json:"Id,omitempty"`
}

type PostSpacesSpaceIDLegalEntitiesIDSocialRegimesResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Id of folder created
	PostSpacesSpaceIDLegalEntitiesIDSocialRegimes201ApplicationJSONObject *PostSpacesSpaceIDLegalEntitiesIDSocialRegimes201ApplicationJSON
}
