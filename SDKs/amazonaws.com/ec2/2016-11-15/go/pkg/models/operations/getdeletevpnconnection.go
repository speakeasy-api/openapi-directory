// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteVpnConnectionActionEnum
type GETDeleteVpnConnectionActionEnum string

const (
	GETDeleteVpnConnectionActionEnumDeleteVpnConnection GETDeleteVpnConnectionActionEnum = "DeleteVpnConnection"
)

func (e *GETDeleteVpnConnectionActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteVpnConnection":
		*e = GETDeleteVpnConnectionActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteVpnConnectionActionEnum: %s", s)
	}
}

// GETDeleteVpnConnectionVersionEnum
type GETDeleteVpnConnectionVersionEnum string

const (
	GETDeleteVpnConnectionVersionEnumTwoThousandAndSixteen1115 GETDeleteVpnConnectionVersionEnum = "2016-11-15"
)

func (e *GETDeleteVpnConnectionVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETDeleteVpnConnectionVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteVpnConnectionVersionEnum: %s", s)
	}
}

type GETDeleteVpnConnectionQueryParams struct {
	Action GETDeleteVpnConnectionActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun  *bool                             `queryParam:"style=form,explode=true,name=DryRun"`
	Version GETDeleteVpnConnectionVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	// The ID of the VPN connection.
	VpnConnectionID string `queryParam:"style=form,explode=true,name=VpnConnectionId"`
}

type GETDeleteVpnConnectionHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteVpnConnectionRequest struct {
	QueryParams GETDeleteVpnConnectionQueryParams
	Headers     GETDeleteVpnConnectionHeaders
}

type GETDeleteVpnConnectionResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
