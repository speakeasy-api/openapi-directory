/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { ComponentDeploymentSpecification } from "./componentdeploymentspecification";
import { DeploymentIoTJobConfiguration } from "./deploymentiotjobconfiguration";
import { DeploymentPolicies } from "./deploymentpolicies";
import { DeploymentStatusEnum } from "./deploymentstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class GetDeploymentResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ComponentDeploymentSpecification })
  @Expose({ name: "components" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, ComponentDeploymentSpecification> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], ComponentDeploymentSpecification);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  components?: Record<string, ComponentDeploymentSpecification>;

  @SpeakeasyMetadata()
  @Expose({ name: "creationTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "deploymentId" })
  deploymentId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "deploymentName" })
  deploymentName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "deploymentPolicies" })
  @Type(() => DeploymentPolicies)
  deploymentPolicies?: DeploymentPolicies;

  @SpeakeasyMetadata()
  @Expose({ name: "deploymentStatus" })
  deploymentStatus?: DeploymentStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "iotJobArn" })
  iotJobArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "iotJobConfiguration" })
  @Type(() => DeploymentIoTJobConfiguration)
  iotJobConfiguration?: DeploymentIoTJobConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "iotJobId" })
  iotJobId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isLatestForTarget" })
  isLatestForTarget?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "parentTargetArn" })
  parentTargetArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "revisionId" })
  revisionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "targetArn" })
  targetArn?: string;
}
