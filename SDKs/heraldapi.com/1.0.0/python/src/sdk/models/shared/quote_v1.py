"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import coveragevaluewrite_v1 as shared_coveragevaluewrite_v1
from ..shared import filemini_v1 as shared_filemini_v1
from ..shared import quoteprice_v1 as shared_quoteprice_v1
from ..shared import statusreason as shared_statusreason
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class QuoteV1BindStatusEnum(str, Enum):
    r"""Describes whether bind is supported for the quote. Policies can only be created from quotes with bind_status of \\"ready\\"."""
    READY = 'ready'
    UNAVAILABLE = 'unavailable'
    REQUESTED = 'requested'

class QuoteV1StatusEnum(str, Enum):
    r"""Indicates the status of a quote. See [full list of quote statuses](https://www.heraldapi.com/docs/quotes) for more detail."""
    PENDING = 'pending'
    REFERRAL = 'referral'
    REFERRED = 'referred'
    DECLINED = 'declined'
    ACTIVE = 'active'
    EXPIRED = 'expired'
    UNRESPONSIVE = 'unresponsive'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class QuoteV1:
    r"""A quote declares an institution's willingness to sell an insurance policy to a customer. Active quotes contain details about a policy the customer can purchase and related prices.
    
    Read more about [quotes](https://www.heraldapi.com/docs/quotes).
    """
    
    bind_status: QuoteV1BindStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bind_status') }})
    r"""Describes whether bind is supported for the quote. Policies can only be created from quotes with bind_status of \\"ready\\"."""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""id for a specific quote."""  
    product_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('product_id') }})  
    status: QuoteV1StatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Indicates the status of a quote. See [full list of quote statuses](https://www.heraldapi.com/docs/quotes) for more detail."""  
    submission_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('submission_id') }})
    r"""id of the submission that created the quote."""  
    coverage_values: Optional[list[shared_coveragevaluewrite_v1.CoverageValueWriteV1]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('coverage_values'), 'exclude': lambda f: f is None }})  
    files: Optional[list[shared_filemini_v1.FileMiniV1]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('files'), 'exclude': lambda f: f is None }})
    r"""An array of relevant files, which can be retrieved using [`/files/{file_id}/get_temporary_link`](../reference/HeraldAPI.v1.yaml/paths/~1files~1{file_id}~1get_temporary_link/post). This array is empty if there are no relevant files."""  
    naic_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('naic_code'), 'exclude': lambda f: f is None }})
    r"""Identifies the National Association of Insurance Commissioners (NAIC) code associated with the quoted policy. The field is NULL if this information is not available."""  
    portal_link: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('portal_link'), 'exclude': lambda f: f is None }})
    r"""A hyperlink to a corresponding record in the institutionâ€™s portal. This field is NULL if not available."""  
    prices: Optional[shared_quoteprice_v1.QuotePriceV1] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('prices'), 'exclude': lambda f: f is None }})
    r"""These prices describe the costs associated with a quote."""  
    status_reasons: Optional[shared_statusreason.StatusReason] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status_reasons'), 'exclude': lambda f: f is None }})
    r"""This will be returned when the status is declined, referred, or unsupported. When the source is \\"Carrier\\" the status reason is from the integrated carrier. When the source is \\"API\\", the reason has been cleaned by Herald."""  
    