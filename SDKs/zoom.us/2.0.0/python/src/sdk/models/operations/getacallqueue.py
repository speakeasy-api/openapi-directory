"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetACallQueueSecurity:
    
    o_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class GetACallQueueRequest:
    
    call_queue_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'callQueueId', 'style': 'simple', 'explode': False }})
    r"""Unique Identifier of the Call Queue. This can be retrieved from [List Call Queues API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-call-queues/listcallqueues)."""  
    

@dataclasses.dataclass
class GetACallQueue200ApplicationXMLMembersCommonAreaPhones:
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique Identifier of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones)."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones)."""  
    
class GetACallQueue200ApplicationXMLMembersUsersLevelEnum(str, Enum):
    r"""Level of the user. The value can be one of the following:<br>
    `manager`: A call queue manager has the privilege to change call queue settings, policy settings and manage recordings and voicemail inbox. There can only be one manager for each call queue.<br><br>
    `user`: Regular user without the privileges of a manager.
    """
    MANAGER = 'manager'
    USER = 'user'


@dataclasses.dataclass
class GetACallQueue200ApplicationXMLMembersUsers:
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""User ID: Unique Identifier of the user."""  
    level: Optional[GetACallQueue200ApplicationXMLMembersUsersLevelEnum] = dataclasses.field(default=None)
    r"""Level of the user. The value can be one of the following:<br>
    `manager`: A call queue manager has the privilege to change call queue settings, policy settings and manage recordings and voicemail inbox. There can only be one manager for each call queue.<br><br>
    `user`: Regular user without the privileges of a manager.
    """  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the user."""  
    receive_call: Optional[bool] = dataclasses.field(default=None)
    r"""Determines whether the user can receive calls or not."""  
    

@dataclasses.dataclass
class GetACallQueue200ApplicationXMLMembers:
    
    common_area_phones: Optional[list[GetACallQueue200ApplicationXMLMembersCommonAreaPhones]] = dataclasses.field(default=None)  
    users: Optional[list[GetACallQueue200ApplicationXMLMembersUsers]] = dataclasses.field(default=None)  
    
class GetACallQueue200ApplicationXMLPhoneNumbersSourceEnum(str, Enum):
    r"""Source"""
    INTERNAL = 'internal'
    EXTERNAL = 'external'


@dataclasses.dataclass
class GetACallQueue200ApplicationXMLPhoneNumbers:
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique Identifier of the number."""  
    number: Optional[str] = dataclasses.field(default=None)
    r"""Phone number."""  
    source: Optional[GetACallQueue200ApplicationXMLPhoneNumbersSourceEnum] = dataclasses.field(default=None)
    r"""Source"""  
    

@dataclasses.dataclass
class GetACallQueue200ApplicationXMLSite:
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites)."""  
    
class GetACallQueue200ApplicationXMLStatusEnum(str, Enum):
    r"""Status of the Call Queue."""
    ACTIVE = 'active'
    INACTIVE = 'inactive'


@dataclasses.dataclass
class GetACallQueue200ApplicationXML:
    r"""**HTTP Status Code:** `200` **OK**<br>
    Call Queue details retrieved successfully.
    """
    
    extension_number: Optional[int] = dataclasses.field(default=None)
    r"""Extension number assigned to the Call Queue."""  
    id: Optional[str] = dataclasses.field(default=None)
    r"""Unique Identifier of the Call Queue."""  
    members: Optional[GetACallQueue200ApplicationXMLMembers] = dataclasses.field(default=None)  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Name of the Call Queue."""  
    phone_numbers: Optional[list[GetACallQueue200ApplicationXMLPhoneNumbers]] = dataclasses.field(default=None)  
    site: Optional[GetACallQueue200ApplicationXMLSite] = dataclasses.field(default=None)  
    status: Optional[GetACallQueue200ApplicationXMLStatusEnum] = dataclasses.field(default=None)
    r"""Status of the Call Queue."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetACallQueue200ApplicationJSONMembersCommonAreaPhones:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique Identifier of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones)."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the [Common Area Phone](https://support.zoom.us/hc/en-us/articles/360028516231-Managing-Common-Area-Phones)."""  
    
class GetACallQueue200ApplicationJSONMembersUsersLevelEnum(str, Enum):
    r"""Level of the user. The value can be one of the following:<br>
    `manager`: A call queue manager has the privilege to change call queue settings, policy settings and manage recordings and voicemail inbox. There can only be one manager for each call queue.<br><br>
    `user`: Regular user without the privileges of a manager.
    """
    MANAGER = 'manager'
    USER = 'user'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetACallQueue200ApplicationJSONMembersUsers:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""User ID: Unique Identifier of the user."""  
    level: Optional[GetACallQueue200ApplicationJSONMembersUsersLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('level'), 'exclude': lambda f: f is None }})
    r"""Level of the user. The value can be one of the following:<br>
    `manager`: A call queue manager has the privilege to change call queue settings, policy settings and manage recordings and voicemail inbox. There can only be one manager for each call queue.<br><br>
    `user`: Regular user without the privileges of a manager.
    """  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the user."""  
    receive_call: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('receive_call'), 'exclude': lambda f: f is None }})
    r"""Determines whether the user can receive calls or not."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetACallQueue200ApplicationJSONMembers:
    
    common_area_phones: Optional[list[GetACallQueue200ApplicationJSONMembersCommonAreaPhones]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('common_area_phones'), 'exclude': lambda f: f is None }})  
    users: Optional[list[GetACallQueue200ApplicationJSONMembersUsers]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('users'), 'exclude': lambda f: f is None }})  
    
class GetACallQueue200ApplicationJSONPhoneNumbersSourceEnum(str, Enum):
    r"""Source"""
    INTERNAL = 'internal'
    EXTERNAL = 'external'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetACallQueue200ApplicationJSONPhoneNumbers:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique Identifier of the number."""  
    number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number'), 'exclude': lambda f: f is None }})
    r"""Phone number."""  
    source: Optional[GetACallQueue200ApplicationJSONPhoneNumbersSourceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})
    r"""Source"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetACallQueue200ApplicationJSONSite:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites)."""  
    
class GetACallQueue200ApplicationJSONStatusEnum(str, Enum):
    r"""Status of the Call Queue."""
    ACTIVE = 'active'
    INACTIVE = 'inactive'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetACallQueue200ApplicationJSON:
    r"""**HTTP Status Code:** `200` **OK**<br>
    Call Queue details retrieved successfully.
    """
    
    extension_number: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('extension_number'), 'exclude': lambda f: f is None }})
    r"""Extension number assigned to the Call Queue."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique Identifier of the Call Queue."""  
    members: Optional[GetACallQueue200ApplicationJSONMembers] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('members'), 'exclude': lambda f: f is None }})  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of the Call Queue."""  
    phone_numbers: Optional[list[GetACallQueue200ApplicationJSONPhoneNumbers]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('phone_numbers'), 'exclude': lambda f: f is None }})  
    site: Optional[GetACallQueue200ApplicationJSONSite] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('site'), 'exclude': lambda f: f is None }})  
    status: Optional[GetACallQueue200ApplicationJSONStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Status of the Call Queue."""  
    

@dataclasses.dataclass
class GetACallQueueResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    get_a_call_queue_200_application_json_object: Optional[GetACallQueue200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200` **OK**<br>
    Call Queue details retrieved successfully.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    