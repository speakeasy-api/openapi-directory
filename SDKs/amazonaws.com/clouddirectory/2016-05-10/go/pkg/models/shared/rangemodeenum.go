// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RangeModeEnum string

const (
	RangeModeEnumFirst                   RangeModeEnum = "FIRST"
	RangeModeEnumLast                    RangeModeEnum = "LAST"
	RangeModeEnumLastBeforeMissingValues RangeModeEnum = "LAST_BEFORE_MISSING_VALUES"
	RangeModeEnumInclusive               RangeModeEnum = "INCLUSIVE"
	RangeModeEnumExclusive               RangeModeEnum = "EXCLUSIVE"
)

func (e *RangeModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FIRST":
		fallthrough
	case "LAST":
		fallthrough
	case "LAST_BEFORE_MISSING_VALUES":
		fallthrough
	case "INCLUSIVE":
		fallthrough
	case "EXCLUSIVE":
		*e = RangeModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RangeModeEnum: %s", s)
	}
}
