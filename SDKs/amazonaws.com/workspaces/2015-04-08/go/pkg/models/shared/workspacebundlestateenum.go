// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WorkspaceBundleStateEnum string

const (
	WorkspaceBundleStateEnumAvailable WorkspaceBundleStateEnum = "AVAILABLE"
	WorkspaceBundleStateEnumPending   WorkspaceBundleStateEnum = "PENDING"
	WorkspaceBundleStateEnumError     WorkspaceBundleStateEnum = "ERROR"
)

func (e WorkspaceBundleStateEnum) ToPointer() *WorkspaceBundleStateEnum {
	return &e
}

func (e *WorkspaceBundleStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AVAILABLE":
		fallthrough
	case "PENDING":
		fallthrough
	case "ERROR":
		*e = WorkspaceBundleStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkspaceBundleStateEnum: %v", v)
	}
}
