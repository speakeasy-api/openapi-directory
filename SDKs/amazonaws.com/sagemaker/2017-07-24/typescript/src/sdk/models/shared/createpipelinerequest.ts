/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ParallelismConfiguration } from "./parallelismconfiguration";
import { PipelineDefinitionS3Location } from "./pipelinedefinitions3location";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreatePipelineRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ClientRequestToken" })
  clientRequestToken: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ParallelismConfiguration" })
  @Type(() => ParallelismConfiguration)
  parallelismConfiguration?: ParallelismConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "PipelineDefinition" })
  pipelineDefinition?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PipelineDefinitionS3Location" })
  @Type(() => PipelineDefinitionS3Location)
  pipelineDefinitionS3Location?: PipelineDefinitionS3Location;

  @SpeakeasyMetadata()
  @Expose({ name: "PipelineDescription" })
  pipelineDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PipelineDisplayName" })
  pipelineDisplayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PipelineName" })
  pipelineName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RoleArn" })
  roleArn: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
