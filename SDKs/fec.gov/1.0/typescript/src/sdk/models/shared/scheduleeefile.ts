/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CommitteeHistory } from "./committeehistory";
import { EFilings } from "./efilings";
import { Expose, Transform, Type } from "class-transformer";

export class ScheduleEEfile extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amendment_indicator" })
  amendmentIndicator?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "back_reference_schedule_name" })
  backReferenceScheduleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "back_reference_transaction_id" })
  backReferenceTransactionId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "beginning_image_number" })
  beginningImageNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_first_name" })
  candidateFirstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_id" })
  candidateId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_middle_name" })
  candidateMiddleName?: string;

  /**
   * Name of candidate running for office
   */
  @SpeakeasyMetadata()
  @Expose({ name: "candidate_name" })
  candidateName?: string;

  /**
   * Federal office candidate runs for: H, S or P
   */
  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office" })
  candidateOffice?: string;

  /**
   * Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office_district" })
  candidateOfficeDistrict?: string;

  /**
   * US state or territory
   */
  @SpeakeasyMetadata()
  @Expose({ name: "candidate_office_state" })
  candidateOfficeState?: string;

  /**
   * Three-letter code for the party affiliated with a candidate or committee. For example, DEM for Democratic Party and REP for Republican Party.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "candidate_party" })
  candidateParty?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_prefix" })
  candidatePrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "candidate_suffix" })
  candidateSuffix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "category_code" })
  categoryCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "committee" })
  @Type(() => CommitteeHistory)
  committee?: CommitteeHistory;

  /**
   *
   * @remarks
   * A unique identifier assigned to each committee or filer registered with the FEC. In general committee id's begin with the letter C which is followed by eight digits.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "committee_id" })
  committeeId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "csv_url" })
  csvUrl?: string;

  /**
   *
   * @remarks
   * Date when a PAC distrubutes or disseminates an independent expenditure
   * and pays for it in the same reporting period
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dissemination_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  disseminationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "entity_type" })
  entityType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "expenditure_amount" })
  expenditureAmount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "expenditure_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expenditureDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "expenditure_description" })
  expenditureDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fec_url" })
  fecUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "file_number" })
  fileNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "filer_first_name" })
  filerFirstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "filer_last_name" })
  filerLastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "filer_middle_name" })
  filerMiddleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "filer_prefix" })
  filerPrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "filer_suffix" })
  filerSuffix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "filing" })
  @Type(() => EFilings)
  filing?: EFilings;

  @SpeakeasyMetadata()
  @Expose({ name: "filing_form" })
  filingForm?: string;

  /**
   *
   * @remarks
   * An unique identifier for each page where the electronic or paper filing is reported.
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "image_number" })
  imageNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "is_notice" })
  isNotice?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "line_number" })
  lineNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "load_timestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  loadTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "memo_code" })
  memoCode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "memo_text" })
  memoText?: string;

  /**
   *
   * @remarks
   * Report is either new or is the most-recently filed amendment
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "most_recent" })
  mostRecent?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "notary_sign_date" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  notarySignDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "office_total_ytd" })
  officeTotalYtd?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_city" })
  payeeCity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_first_name" })
  payeeFirstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_last_name" })
  payeeLastName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_middle_name" })
  payeeMiddleName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_name" })
  payeeName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_prefix" })
  payeePrefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_state" })
  payeeState?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_street_1" })
  payeeStreet1?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_street_2" })
  payeeStreet2?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_suffix" })
  payeeSuffix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "payee_zip" })
  payeeZip?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pdf_url" })
  pdfUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "related_line_number" })
  relatedLineNumber: number;

  @SpeakeasyMetadata()
  @Expose({ name: "report_type" })
  reportType?: string;

  /**
   * Explains if the money was spent in order to support or oppose a candidate or candidates. (Coded S or O for support or oppose.) This indicator applies to independent expenditures and communication costs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "support_oppose_indicator" })
  supportOpposeIndicator?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "transaction_id" })
  transactionId?: string;
}
