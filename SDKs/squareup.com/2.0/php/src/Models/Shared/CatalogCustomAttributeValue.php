<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CatalogCustomAttributeValue - An instance of a custom attribute. Custom attributes can be defined and
 * 
 * added to `ITEM` and `ITEM_VARIATION` type catalog objects.
 * [Read more about custom attributes](https://developer.squareup.com/docs/catalog-api/add-custom-attributes).
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CatalogCustomAttributeValue
{
    /**
     * A `true` or `false` value. Populated if `type` = `BOOLEAN`.
     * 
     * @var ?bool $booleanValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('boolean_value')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $booleanValue = null;
    
    /**
     * __Read-only.__ The id of the [CatalogCustomAttributeDefinition](https://developer.squareup.com/reference/square_2021-08-18/objects/CatalogCustomAttributeDefinition) this value belongs to.
     * 
     * @var ?string $customAttributeDefinitionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('custom_attribute_definition_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $customAttributeDefinitionId = null;
    
    /**
     * __Read-only.__ A copy of key from the associated `CatalogCustomAttributeDefinition`.
     * 
     * @var ?string $key
     */
	#[\JMS\Serializer\Annotation\SerializedName('key')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $key = null;
    
    /**
     * The name of the custom attribute.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * Populated if `type` = `NUMBER`. Contains a string
     * 
     * representation of a decimal number, using a `.` as the decimal separator.
     * 
     * @var ?string $numberValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('number_value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $numberValue = null;
    
    /**
     * One or more choices from `allowed_selections`. Populated if `type` = `SELECTION`.
     * 
     * @var ?array<string> $selectionUidValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('selection_uid_values')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $selectionUidValues = null;
    
    /**
     * The string value of the custom attribute.  Populated if `type` = `STRING`.
     * 
     * @var ?string $stringValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('string_value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stringValue = null;
    
    /**
     * __Read-only.__ A copy of type from the associated `CatalogCustomAttributeDefinition`.
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->booleanValue = null;
		$this->customAttributeDefinitionId = null;
		$this->key = null;
		$this->name = null;
		$this->numberValue = null;
		$this->selectionUidValues = null;
		$this->stringValue = null;
		$this->type = null;
	}
}
