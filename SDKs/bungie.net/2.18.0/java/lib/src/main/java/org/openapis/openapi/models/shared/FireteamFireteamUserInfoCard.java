/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



public class FireteamFireteamUserInfoCard {
    
    public String fireteamDisplayName;

    public FireteamFireteamUserInfoCard withFireteamDisplayName(String fireteamDisplayName) {
        this.fireteamDisplayName = fireteamDisplayName;
        return this;
    }
    
    
    public Integer fireteamMembershipType;

    public FireteamFireteamUserInfoCard withFireteamMembershipType(Integer fireteamMembershipType) {
        this.fireteamMembershipType = fireteamMembershipType;
        return this;
    }
    
    /**
     * The list of Membership Types indicating the platforms on which this Membership can be used.
     *  Not in Cross Save = its original membership type. Cross Save Primary = Any membership types it is overridding, and its original membership type Cross Save Overridden = Empty list
     */
    
    public Integer[] applicableMembershipTypes;

    public FireteamFireteamUserInfoCard withApplicableMembershipTypes(Integer[] applicableMembershipTypes) {
        this.applicableMembershipTypes = applicableMembershipTypes;
        return this;
    }
    
    /**
     * The bungie global display name, if set.
     */
    
    public String bungieGlobalDisplayName;

    public FireteamFireteamUserInfoCard withBungieGlobalDisplayName(String bungieGlobalDisplayName) {
        this.bungieGlobalDisplayName = bungieGlobalDisplayName;
        return this;
    }
    
    /**
     * The bungie global display name code, if set.
     */
    
    public Long bungieGlobalDisplayNameCode;

    public FireteamFireteamUserInfoCard withBungieGlobalDisplayNameCode(Long bungieGlobalDisplayNameCode) {
        this.bungieGlobalDisplayNameCode = bungieGlobalDisplayNameCode;
        return this;
    }
    
    /**
     * If there is a cross save override in effect, this value will tell you the type that is overridding this one.
     */
    
    public Integer crossSaveOverride;

    public FireteamFireteamUserInfoCard withCrossSaveOverride(Integer crossSaveOverride) {
        this.crossSaveOverride = crossSaveOverride;
        return this;
    }
    
    /**
     * Display Name the player has chosen for themselves. The display name is optional when the data type is used as input to a platform API.
     */
    
    public String displayName;

    public FireteamFireteamUserInfoCard withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * URL the Icon if available.
     */
    
    public String iconPath;

    public FireteamFireteamUserInfoCard withIconPath(String iconPath) {
        this.iconPath = iconPath;
        return this;
    }
    
    /**
     * If True, this is a public user membership.
     */
    
    public Boolean isPublic;

    public FireteamFireteamUserInfoCard withIsPublic(Boolean isPublic) {
        this.isPublic = isPublic;
        return this;
    }
    
    /**
     * Membership ID as they user is known in the Accounts service
     */
    
    public Long membershipId;

    public FireteamFireteamUserInfoCard withMembershipId(Long membershipId) {
        this.membershipId = membershipId;
        return this;
    }
    
    /**
     * Type of the membership. Not necessarily the native type.
     */
    
    public Integer membershipType;

    public FireteamFireteamUserInfoCard withMembershipType(Integer membershipType) {
        this.membershipType = membershipType;
        return this;
    }
    
    /**
     * A platform specific additional display name - ex: psn Real Name, bnet Unique Name, etc.
     */
    
    public String supplementalDisplayName;

    public FireteamFireteamUserInfoCard withSupplementalDisplayName(String supplementalDisplayName) {
        this.supplementalDisplayName = supplementalDisplayName;
        return this;
    }
    
    public FireteamFireteamUserInfoCard(){}
}
