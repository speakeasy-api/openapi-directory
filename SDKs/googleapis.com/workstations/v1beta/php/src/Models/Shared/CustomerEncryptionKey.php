<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CustomerEncryptionKey - A customer-managed encryption key for the Compute Engine resources of this workstation configuration.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CustomerEncryptionKey
{
    /**
     * Immutable. The name of the Google Cloud KMS encryption key. For example, `projects/PROJECT_ID/locations/REGION/keyRings/KEY_RING/cryptoKeys/KEY_NAME`.
     * 
     * @var ?string $kmsKey
     */
	#[\JMS\Serializer\Annotation\SerializedName('kmsKey')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kmsKey = null;
    
    /**
     * Immutable. The service account to use with the specified KMS key. We recommend that you use a separate service account and follow KMS best practices. For more information, see [Separation of duties](https://cloud.google.com/kms/docs/separation-of-duties) and `gcloud kms keys add-iam-policy-binding` [`--member`](https://cloud.google.com/sdk/gcloud/reference/kms/keys/add-iam-policy-binding#--member).
     * 
     * @var ?string $kmsKeyServiceAccount
     */
	#[\JMS\Serializer\Annotation\SerializedName('kmsKeyServiceAccount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kmsKeyServiceAccount = null;
    
	public function __construct()
	{
		$this->kmsKey = null;
		$this->kmsKeyServiceAccount = null;
	}
}
