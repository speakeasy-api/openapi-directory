// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MonitorInstancesResultInstanceMonitoringsMonitoringStateEnum - Indicates whether detailed monitoring is enabled. Otherwise, basic monitoring is enabled.
type MonitorInstancesResultInstanceMonitoringsMonitoringStateEnum string

const (
	MonitorInstancesResultInstanceMonitoringsMonitoringStateEnumDisabled  MonitorInstancesResultInstanceMonitoringsMonitoringStateEnum = "disabled"
	MonitorInstancesResultInstanceMonitoringsMonitoringStateEnumDisabling MonitorInstancesResultInstanceMonitoringsMonitoringStateEnum = "disabling"
	MonitorInstancesResultInstanceMonitoringsMonitoringStateEnumEnabled   MonitorInstancesResultInstanceMonitoringsMonitoringStateEnum = "enabled"
	MonitorInstancesResultInstanceMonitoringsMonitoringStateEnumPending   MonitorInstancesResultInstanceMonitoringsMonitoringStateEnum = "pending"
)

func (e MonitorInstancesResultInstanceMonitoringsMonitoringStateEnum) ToPointer() *MonitorInstancesResultInstanceMonitoringsMonitoringStateEnum {
	return &e
}

func (e *MonitorInstancesResultInstanceMonitoringsMonitoringStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "disabled":
		fallthrough
	case "disabling":
		fallthrough
	case "enabled":
		fallthrough
	case "pending":
		*e = MonitorInstancesResultInstanceMonitoringsMonitoringStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MonitorInstancesResultInstanceMonitoringsMonitoringStateEnum: %v", v)
	}
}

// MonitorInstancesResultInstanceMonitoringsMonitoring - The monitoring for the instance.
type MonitorInstancesResultInstanceMonitoringsMonitoring struct {
	State *MonitorInstancesResultInstanceMonitoringsMonitoringStateEnum
}

// MonitorInstancesResultInstanceMonitorings - Describes the monitoring of an instance.
type MonitorInstancesResultInstanceMonitorings struct {
	InstanceID *string
	Monitoring *MonitorInstancesResultInstanceMonitoringsMonitoring
}

// MonitorInstancesResult - Success
type MonitorInstancesResult struct {
	InstanceMonitorings []MonitorInstancesResultInstanceMonitorings
}
