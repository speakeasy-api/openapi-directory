// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AuditLogIncludeEnum - The event types to include:
//
// - `web` - returns web (non-Git) events.
// - `git` - returns Git events.
// - `all` - returns both web and Git events.
//
// The default is `web`.
type AuditLogIncludeEnum string

const (
	AuditLogIncludeEnumWeb AuditLogIncludeEnum = "web"
	AuditLogIncludeEnumGit AuditLogIncludeEnum = "git"
	AuditLogIncludeEnumAll AuditLogIncludeEnum = "all"
)

func (e AuditLogIncludeEnum) ToPointer() *AuditLogIncludeEnum {
	return &e
}

func (e *AuditLogIncludeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "web":
		fallthrough
	case "git":
		fallthrough
	case "all":
		*e = AuditLogIncludeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AuditLogIncludeEnum: %v", v)
	}
}
