/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ApigatewayStatus - The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
 */
public class ApigatewayStatus {
    /**
     * The status code, which should be an enum value of google.rpc.Code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("code")
    public Integer code;
    public ApigatewayStatus withCode(Integer code) {
        this.code = code;
        return this;
    }
    
    /**
     * A list of messages that carry the error details. There is a common set of message types for APIs to use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("details")
    public java.util.Map<String, Object>[] details;
    public ApigatewayStatus withDetails(java.util.Map<String, Object>[] details) {
        this.details = details;
        return this;
    }
    
    /**
     * A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message")
    public String message;
    public ApigatewayStatus withMessage(String message) {
        this.message = message;
        return this;
    }
    
}
