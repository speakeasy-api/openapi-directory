// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ServerStatusEnum string

const (
	ServerStatusEnumBackingUp        ServerStatusEnum = "BACKING_UP"
	ServerStatusEnumConnectionLost   ServerStatusEnum = "CONNECTION_LOST"
	ServerStatusEnumCreating         ServerStatusEnum = "CREATING"
	ServerStatusEnumDeleting         ServerStatusEnum = "DELETING"
	ServerStatusEnumModifying        ServerStatusEnum = "MODIFYING"
	ServerStatusEnumFailed           ServerStatusEnum = "FAILED"
	ServerStatusEnumHealthy          ServerStatusEnum = "HEALTHY"
	ServerStatusEnumRunning          ServerStatusEnum = "RUNNING"
	ServerStatusEnumRestoring        ServerStatusEnum = "RESTORING"
	ServerStatusEnumSetup            ServerStatusEnum = "SETUP"
	ServerStatusEnumUnderMaintenance ServerStatusEnum = "UNDER_MAINTENANCE"
	ServerStatusEnumUnhealthy        ServerStatusEnum = "UNHEALTHY"
	ServerStatusEnumTerminated       ServerStatusEnum = "TERMINATED"
)

func (e ServerStatusEnum) ToPointer() *ServerStatusEnum {
	return &e
}

func (e *ServerStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BACKING_UP":
		fallthrough
	case "CONNECTION_LOST":
		fallthrough
	case "CREATING":
		fallthrough
	case "DELETING":
		fallthrough
	case "MODIFYING":
		fallthrough
	case "FAILED":
		fallthrough
	case "HEALTHY":
		fallthrough
	case "RUNNING":
		fallthrough
	case "RESTORING":
		fallthrough
	case "SETUP":
		fallthrough
	case "UNDER_MAINTENANCE":
		fallthrough
	case "UNHEALTHY":
		fallthrough
	case "TERMINATED":
		*e = ServerStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ServerStatusEnum: %v", v)
	}
}
