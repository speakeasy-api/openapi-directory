/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PayorLinksV1Request extends SpeakeasyBase {
  /**
   * The Payor ID from which to start the query to show all descendants
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=descendantsOfPayor",
  })
  descendantsOfPayor?: string;

  /**
   * <p>List of additional Payor fields to include in the response for each Payor</p>
   *
   * @remarks
   * <p>The values of payorId and payorName are always included for each Payor by default</p>
   * <p>You can add fields to the response for each payor by including them in the fields parameter separated by commas</p>
   * <p>The supported fields are any combination of: primaryContactEmail,kycState</p>
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=fields",
  })
  fields?: string;

  /**
   * Query for the parent payor details for this payor id
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=parentOfPayor",
  })
  parentOfPayor?: string;
}

export class PayorLinksV1Response extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Details of Payor Links
   */
  @SpeakeasyMetadata()
  payorLinksResponse?: shared.PayorLinksResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Invalid request. See Error message payload for details of failure
   */
  @SpeakeasyMetadata()
  inlineResponse400?: shared.InlineResponse400;

  /**
   * The authentication does not have permissions to access the resource
   *
   * @remarks
   * This usually occurs when there is a valid authentication instance (client or user) but they do not have the required permissions
   *
   */
  @SpeakeasyMetadata()
  inlineResponse403?: shared.InlineResponse403;

  /**
   * The resource was not found or is no longer available
   *
   * @remarks
   *
   */
  @SpeakeasyMetadata()
  inlineResponse404?: shared.InlineResponse404;
}
