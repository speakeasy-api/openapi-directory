// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateLaunchProfileRequestBodyStreamConfiguration - Configuration for streaming workstations created using this launch profile.
type UpdateLaunchProfileRequestBodyStreamConfiguration struct {
	AutomaticTerminationMode         *shared.AutomaticTerminationModeEnum      `json:"automaticTerminationMode,omitempty"`
	ClipboardMode                    *shared.StreamingClipboardModeEnum        `json:"clipboardMode,omitempty"`
	Ec2InstanceTypes                 []shared.StreamingInstanceTypeEnum        `json:"ec2InstanceTypes,omitempty"`
	MaxSessionLengthInMinutes        *int64                                    `json:"maxSessionLengthInMinutes,omitempty"`
	MaxStoppedSessionLengthInMinutes *int64                                    `json:"maxStoppedSessionLengthInMinutes,omitempty"`
	SessionBackup                    *shared.StreamConfigurationSessionBackup  `json:"sessionBackup,omitempty"`
	SessionPersistenceMode           *shared.SessionPersistenceModeEnum        `json:"sessionPersistenceMode,omitempty"`
	SessionStorage                   *shared.StreamConfigurationSessionStorage `json:"sessionStorage,omitempty"`
	StreamingImageIds                []string                                  `json:"streamingImageIds,omitempty"`
	VolumeConfiguration              *shared.VolumeConfiguration               `json:"volumeConfiguration,omitempty"`
}

type UpdateLaunchProfileRequestBody struct {
	// A human-readable description of the launch profile.
	Description *string `json:"description,omitempty"`
	// The version number of the protocol that is used by the launch profile. The only valid version is "2021-03-31".
	LaunchProfileProtocolVersions []string `json:"launchProfileProtocolVersions,omitempty"`
	// The name for the launch profile.
	Name *string `json:"name,omitempty"`
	// Configuration for streaming workstations created using this launch profile.
	StreamConfiguration *UpdateLaunchProfileRequestBodyStreamConfiguration `json:"streamConfiguration,omitempty"`
	// Unique identifiers for a collection of studio components that can be used with this launch profile.
	StudioComponentIds []string `json:"studioComponentIds,omitempty"`
}

type UpdateLaunchProfileRequest struct {
	RequestBody   UpdateLaunchProfileRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm *string                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	// Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. If you donâ€™t specify a client token, the Amazon Web Services SDK automatically generates a client token and uses it for the request to ensure idempotency.
	XAmzClientToken   *string `header:"style=simple,explode=false,name=X-Amz-Client-Token"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	// The ID of the launch profile used to control access from the streaming session.
	LaunchProfileID string `pathParam:"style=simple,explode=false,name=launchProfileId"`
	// The studio ID.
	StudioID string `pathParam:"style=simple,explode=false,name=studioId"`
}

type UpdateLaunchProfileResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// InternalServerErrorException
	InternalServerErrorException interface{}
	StatusCode                   int
	RawResponse                  *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// Success
	UpdateLaunchProfileResponse *shared.UpdateLaunchProfileResponse
	// ValidationException
	ValidationException interface{}
}
