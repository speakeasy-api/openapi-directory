/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PredictedSpecs - Specs of predicted vehicle
 */
public class PredictedSpecs {
    /**
     * Base exterior color of vehicle
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("base_exterior_color")
    public String baseExteriorColor;
    public PredictedSpecs withBaseExteriorColor(String baseExteriorColor) {
        this.baseExteriorColor = baseExteriorColor;
        return this;
    }
    
    /**
     * base interior color of vehicle
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("base_interior_color")
    public String baseInteriorColor;
    public PredictedSpecs withBaseInteriorColor(String baseInteriorColor) {
        this.baseInteriorColor = baseInteriorColor;
        return this;
    }
    
    /**
     * Indicates whether car has had only one owner or not
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carfax_1_owner")
    public Boolean carfax1Owner;
    public PredictedSpecs withCarfax1Owner(Boolean carfax1Owner) {
        this.carfax1Owner = carfax1Owner;
        return this;
    }
    
    /**
     * Indicates whether car has clean ownership records
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("carfax_clean_title")
    public Boolean carfaxCleanTitle;
    public PredictedSpecs withCarfaxCleanTitle(Boolean carfaxCleanTitle) {
        this.carfaxCleanTitle = carfaxCleanTitle;
        return this;
    }
    
    /**
     * City mileage
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city_mpg")
    public Double cityMpg;
    public PredictedSpecs withCityMpg(Double cityMpg) {
        this.cityMpg = cityMpg;
        return this;
    }
    
    /**
     * Number of cylinders
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cylinders")
    public Long cylinders;
    public PredictedSpecs withCylinders(Long cylinders) {
        this.cylinders = cylinders;
        return this;
    }
    
    /**
     * Number of doors
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("doors")
    public Long doors;
    public PredictedSpecs withDoors(Long doors) {
        this.doors = doors;
        return this;
    }
    
    /**
     * Drivetrain of the vehicle
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("drivetrain")
    public String drivetrain;
    public PredictedSpecs withDrivetrain(String drivetrain) {
        this.drivetrain = drivetrain;
        return this;
    }
    
    /**
     * Engine block of the vehicle
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("engine_block")
    public String engineBlock;
    public PredictedSpecs withEngineBlock(String engineBlock) {
        this.engineBlock = engineBlock;
        return this;
    }
    
    /**
     * Engine size
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("engine_size")
    public Double engineSize;
    public PredictedSpecs withEngineSize(Double engineSize) {
        this.engineSize = engineSize;
        return this;
    }
    
    /**
     * Highway mileage
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("highway_mpg")
    public Double highwayMpg;
    public PredictedSpecs withHighwayMpg(Double highwayMpg) {
        this.highwayMpg = highwayMpg;
        return this;
    }
    
    /**
     * Certified vehicle
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_certified")
    public Boolean isCertified;
    public PredictedSpecs withIsCertified(Boolean isCertified) {
        this.isCertified = isCertified;
        return this;
    }
    
    /**
     * Latutide for the vehicle location
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("latitude")
    public Double latitude;
    public PredictedSpecs withLatitude(Double latitude) {
        this.latitude = latitude;
        return this;
    }
    
    /**
     * Longitude for the vehicle location
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("longitude")
    public Double longitude;
    public PredictedSpecs withLongitude(Double longitude) {
        this.longitude = longitude;
        return this;
    }
    
    /**
     * make
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("make")
    public String make;
    public PredictedSpecs withMake(String make) {
        this.make = make;
        return this;
    }
    
    /**
     * Miles
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("miles")
    public Long miles;
    public PredictedSpecs withMiles(Long miles) {
        this.miles = miles;
        return this;
    }
    
    /**
     * model
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("model")
    public String model;
    public PredictedSpecs withModel(String model) {
        this.model = model;
        return this;
    }
    
    /**
     * transmission
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transmission")
    public String transmission;
    public PredictedSpecs withTransmission(String transmission) {
        this.transmission = transmission;
        return this;
    }
    
    /**
     * trim
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trim")
    public String trim;
    public PredictedSpecs withTrim(String trim) {
        this.trim = trim;
        return this;
    }
    
    /**
     * year
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("year")
    public Long year;
    public PredictedSpecs withYear(Long year) {
        this.year = year;
        return this;
    }
    
}
