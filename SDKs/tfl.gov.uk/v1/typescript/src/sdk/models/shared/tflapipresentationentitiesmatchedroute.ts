/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Description of a Route used in Route search results.
 */
export class TflApiPresentationEntitiesMatchedRoute extends SpeakeasyBase {
  /**
   * The Id (NaPTAN code) or the Destination StopPoint
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destination" })
  destination?: string;

  /**
   * The name of the Destination StopPoint
   */
  @SpeakeasyMetadata()
  @Expose({ name: "destinationName" })
  destinationName?: string;

  /**
   * Inbound or Outbound
   */
  @SpeakeasyMetadata()
  @Expose({ name: "direction" })
  direction?: string;

  /**
   * Name such as "72"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The name of the Origin StopPoint
   */
  @SpeakeasyMetadata()
  @Expose({ name: "originationName" })
  originationName?: string;

  /**
   * The Id (NaPTAN code) of the Origin StopPoint
   */
  @SpeakeasyMetadata()
  @Expose({ name: "originator" })
  originator?: string;

  /**
   * The route code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "routeCode" })
  routeCode?: string;

  /**
   * Regular or Night
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceType" })
  serviceType?: string;

  /**
   * The DateTime that the Service containing this Route is valid from.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validFrom" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  validFrom?: Date;

  /**
   * The DateTime that the Service containing this Route is valid until.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "validTo" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  validTo?: Date;
}
