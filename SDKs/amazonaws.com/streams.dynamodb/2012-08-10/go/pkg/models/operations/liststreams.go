// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListStreamsXAmzTargetEnum
type ListStreamsXAmzTargetEnum string

const (
	ListStreamsXAmzTargetEnumDynamoDbStreams20120810ListStreams ListStreamsXAmzTargetEnum = "DynamoDBStreams_20120810.ListStreams"
)

func (e *ListStreamsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DynamoDBStreams_20120810.ListStreams":
		*e = ListStreamsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListStreamsXAmzTargetEnum: %s", s)
	}
}

type ListStreamsRequest struct {
	ListStreamsInput  shared.ListStreamsInput   `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListStreamsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListStreamsResponse struct {
	ContentType string
	// InternalServerError
	InternalServerError interface{}
	// Success
	ListStreamsOutput *shared.ListStreamsOutput
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
