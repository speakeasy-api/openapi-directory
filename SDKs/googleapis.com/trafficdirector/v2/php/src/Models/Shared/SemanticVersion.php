<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * SemanticVersion - Envoy uses SemVer (https://semver.org/). Major/minor versions indicate expected behaviors and APIs, the patch version field is used only for security fixes and can be generally ignored.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class SemanticVersion
{
	#[\JMS\Serializer\Annotation\SerializedName('majorNumber')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $majorNumber = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('minorNumber')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $minorNumber = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('patch')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $patch = null;
    
	public function __construct()
	{
		$this->majorNumber = null;
		$this->minorNumber = null;
		$this->patch = null;
	}
}
