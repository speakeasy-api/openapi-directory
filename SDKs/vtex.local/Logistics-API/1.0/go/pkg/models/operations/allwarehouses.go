// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type AllWarehousesHeaders struct {
	// HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
	Accept string `header:"style=simple,explode=false,name=Accept"`
	// Type of the content being sent
	ContentType string `header:"style=simple,explode=false,name=Content-Type"`
}

type AllWarehousesRequest struct {
	Headers AllWarehousesHeaders
}

// AllWarehouses200ApplicationJSONWarehouseDock1 - Information related to the docks available for the given warehouse.
type AllWarehouses200ApplicationJSONWarehouseDock1 struct {
	// Extra charges added to the shipping rate when **Additional shipping costs** are configured.
	Cost float64 `json:"cost"`
	// Code that identifies a dock.
	DockID string `json:"dockId"`
	// This field returns the dock's processing time in days and hours. If none is configured, the request returns `00:00:00`.
	Time string `json:"time"`
}

type AllWarehouses200ApplicationJSON struct {
	// Code that identifies a warehouse.
	ID string `json:"id"`
	// Shows if the warehouse is active (`true`) or inactive (`false`).
	IsActive bool `json:"isActive"`
	// Name of the warehouse.
	Name string `json:"name"`
	// This field returns a list of the [pickup points' IDs](https://help.vtex.com/en/tutorial/pickup-points--2fljn6wLjn8M4lJHA6HP3R) associated with the given warehouse.
	PickupPointIds []interface{} `json:"pickupPointIds"`
	// If the warehouse was configured as a priority. When no priority was set, the value returns`0`.
	Priority int64 `json:"priority"`
	// Information related to the docks available for the warehouses.
	WarehouseDocks []AllWarehouses200ApplicationJSONWarehouseDock1 `json:"warehouseDocks"`
}

type AllWarehousesResponse struct {
	// OK
	AllWarehouses200ApplicationJSONObjects []AllWarehouses200ApplicationJSON
	ContentType                            string
	Headers                                map[string][]string
	StatusCode                             int
	RawResponse                            *http.Response
}
