<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class Installs 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Requests to remove an app from a device. A call to get or list will still show the app as installed on the device until it is actually removed.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsDeleteRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsDeleteSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsDeleteResponse
     */
	public function androidenterpriseInstallsDelete(
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsDeleteRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsDeleteSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsDeleteResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}/installs/{installId}', \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsDeleteRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsDeleteRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('DELETE', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsDeleteResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
        }

        return $response;
    }
	
    /**
     * Retrieves details of an installation of an app on a device.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsGetRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsGetSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsGetResponse
     */
	public function androidenterpriseInstallsGet(
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsGetRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsGetSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsGetResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}/installs/{installId}', \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsGetRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsGetRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsGetResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->install = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Install', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Retrieves the details of all apps installed on the specified device.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsListResponse
     */
	public function androidenterpriseInstallsList(
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}/installs', \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsListRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->installsListResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\InstallsListResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Requests to install the latest version of an app to a device. If the app is already installed, then it is updated to the latest version if necessary.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsUpdateRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsUpdateSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsUpdateResponse
     */
	public function androidenterpriseInstallsUpdate(
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsUpdateRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsUpdateSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsUpdateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}/installs/{installId}', \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsUpdateRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "install", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsUpdateRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('PUT', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\AndroidenterpriseInstallsUpdateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->install = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Install', 'json');
            }
        }

        return $response;
    }
}