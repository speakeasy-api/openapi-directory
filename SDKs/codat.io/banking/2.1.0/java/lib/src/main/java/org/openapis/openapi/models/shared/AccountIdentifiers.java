/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AccountIdentifiers - An object containing bank account identification information.
 */
public class AccountIdentifiers {
    /**
     * The local (usually national) routing number for the account.
     * 
     * This is known by different names in different countries:
     * * BSB code (Australia)
     * * routing number (Canada, USA)
     * * sort code (UK)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bankCode")
    public String bankCode;

    public AccountIdentifiers withBankCode(String bankCode) {
        this.bankCode = bankCode;
        return this;
    }
    
    /**
     * The ISO 9362 code (commonly called SWIFT code, SWIFT-BIC or BIC) for the account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bic")
    public String bic;

    public AccountIdentifiers withBic(String bic) {
        this.bic = bic;
        return this;
    }
    
    /**
     * The international bank account number (IBAN) for the account, if known.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("iban")
    public String iban;

    public AccountIdentifiers withIban(String iban) {
        this.iban = iban;
        return this;
    }
    
    /**
     * A portion of the actual account `number` to help account identification where number is tokenised (Plaid only)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maskedAccountNumber")
    public String maskedAccountNumber;

    public AccountIdentifiers withMaskedAccountNumber(String maskedAccountNumber) {
        this.maskedAccountNumber = maskedAccountNumber;
        return this;
    }
    
    /**
     * The account number for the account. When combined with the`bankCode`, this is usually enough to uniquely identify an account within a jurisdiction.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("number")
    public String number;

    public AccountIdentifiers withNumber(String number) {
        this.number = number;
        return this;
    }
    
    /**
     * Detailed account category
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subtype")
    public String subtype;

    public AccountIdentifiers withSubtype(String subtype) {
        this.subtype = subtype;
        return this;
    }
    
    /**
     * Type of account
     */
    @JsonProperty("type")
    public AccountIdentifierTypeEnum type;

    public AccountIdentifiers withType(AccountIdentifierTypeEnum type) {
        this.type = type;
        return this;
    }
    
    public AccountIdentifiers(@JsonProperty("type") AccountIdentifierTypeEnum type) {
        this.type = type;
  }
}
