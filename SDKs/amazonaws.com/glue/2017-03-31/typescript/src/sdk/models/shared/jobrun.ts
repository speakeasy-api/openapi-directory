/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExecutionClassEnum } from "./executionclassenum";
import { JobRunStateEnum } from "./jobrunstateenum";
import { NotificationProperty } from "./notificationproperty";
import { Predecessor } from "./predecessor";
import { WorkerTypeEnum } from "./workertypeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Contains information about a job run.
 */
export class JobRun extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AllocatedCapacity" })
  allocatedCapacity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Arguments" })
  arguments?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "Attempt" })
  attempt?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "CompletedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  completedOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "DPUSeconds" })
  dpuSeconds?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "ErrorMessage" })
  errorMessage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecutionClass" })
  executionClass?: ExecutionClassEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ExecutionTime" })
  executionTime?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "GlueVersion" })
  glueVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "JobName" })
  jobName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "JobRunState" })
  jobRunState?: JobRunStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LogGroupName" })
  logGroupName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxCapacity" })
  maxCapacity?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NotificationProperty" })
  @Type(() => NotificationProperty)
  notificationProperty?: NotificationProperty;

  @SpeakeasyMetadata()
  @Expose({ name: "NumberOfWorkers" })
  numberOfWorkers?: number;

  @SpeakeasyMetadata({ elemType: Predecessor })
  @Expose({ name: "PredecessorRuns" })
  @Type(() => Predecessor)
  predecessorRuns?: Predecessor[];

  @SpeakeasyMetadata()
  @Expose({ name: "PreviousRunId" })
  previousRunId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SecurityConfiguration" })
  securityConfiguration?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "StartedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startedOn?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Timeout" })
  timeout?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "TriggerName" })
  triggerName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "WorkerType" })
  workerType?: WorkerTypeEnum;
}
