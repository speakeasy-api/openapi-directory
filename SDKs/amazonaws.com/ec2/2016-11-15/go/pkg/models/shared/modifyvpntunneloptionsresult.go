// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// ModifyVpnTunnelOptionsResultVpnConnectionGatewayAssociationStateEnum - The current state of the gateway association.
type ModifyVpnTunnelOptionsResultVpnConnectionGatewayAssociationStateEnum string

const (
	ModifyVpnTunnelOptionsResultVpnConnectionGatewayAssociationStateEnumAssociated     ModifyVpnTunnelOptionsResultVpnConnectionGatewayAssociationStateEnum = "associated"
	ModifyVpnTunnelOptionsResultVpnConnectionGatewayAssociationStateEnumNotAssociated  ModifyVpnTunnelOptionsResultVpnConnectionGatewayAssociationStateEnum = "not-associated"
	ModifyVpnTunnelOptionsResultVpnConnectionGatewayAssociationStateEnumAssociating    ModifyVpnTunnelOptionsResultVpnConnectionGatewayAssociationStateEnum = "associating"
	ModifyVpnTunnelOptionsResultVpnConnectionGatewayAssociationStateEnumDisassociating ModifyVpnTunnelOptionsResultVpnConnectionGatewayAssociationStateEnum = "disassociating"
)

func (e ModifyVpnTunnelOptionsResultVpnConnectionGatewayAssociationStateEnum) ToPointer() *ModifyVpnTunnelOptionsResultVpnConnectionGatewayAssociationStateEnum {
	return &e
}

func (e *ModifyVpnTunnelOptionsResultVpnConnectionGatewayAssociationStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "associated":
		fallthrough
	case "not-associated":
		fallthrough
	case "associating":
		fallthrough
	case "disassociating":
		*e = ModifyVpnTunnelOptionsResultVpnConnectionGatewayAssociationStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnTunnelOptionsResultVpnConnectionGatewayAssociationStateEnum: %v", v)
	}
}

// ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnum - Indicates whether the VPN tunnels process IPv4 or IPv6 traffic.
type ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnum string

const (
	ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnumIpv4 ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnum = "ipv4"
	ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnumIpv6 ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnum = "ipv6"
)

func (e ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnum) ToPointer() *ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnum {
	return &e
}

func (e *ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ipv4":
		fallthrough
	case "ipv6":
		*e = ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnum: %v", v)
	}
}

// ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsIkeVersions - The internet key exchange (IKE) version permitted for the VPN tunnel.
type ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsIkeVersions struct {
	Value *string
}

// ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions - Options for sending VPN tunnel logs to CloudWatch.
type ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions struct {
	LogEnabled      *bool
	LogGroupArn     *string
	LogOutputFormat *string
}

// ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsLogOptions - Options for logging VPN tunnel activity.
type ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsLogOptions struct {
	CloudWatchLogOptions *ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsLogOptionsCloudWatchLogOptions
}

// ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsPhase1DHGroupNumbers - The Diffie-Hellmann group number for phase 1 IKE negotiations.
type ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsPhase1DHGroupNumbers struct {
	Value *int64
}

// ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsPhase1EncryptionAlgorithms - The encryption algorithm for phase 1 IKE negotiations.
type ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsPhase1EncryptionAlgorithms struct {
	Value *string
}

// ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsPhase1IntegrityAlgorithms - The integrity algorithm for phase 1 IKE negotiations.
type ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsPhase1IntegrityAlgorithms struct {
	Value *string
}

// ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsPhase2DHGroupNumbers - The Diffie-Hellmann group number for phase 2 IKE negotiations.
type ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsPhase2DHGroupNumbers struct {
	Value *int64
}

// ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsPhase2EncryptionAlgorithms - The encryption algorithm for phase 2 IKE negotiations.
type ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsPhase2EncryptionAlgorithms struct {
	Value *string
}

// ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsPhase2IntegrityAlgorithms - The integrity algorithm for phase 2 IKE negotiations.
type ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsPhase2IntegrityAlgorithms struct {
	Value *string
}

// ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptions - The VPN tunnel options.
type ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptions struct {
	DpdTimeoutAction             *string
	DpdTimeoutSeconds            *int64
	EnableTunnelLifecycleControl *bool
	IkeVersions                  []ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsIkeVersions
	LogOptions                   *ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsLogOptions
	OutsideIPAddress             *string
	Phase1DHGroupNumbers         []ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsPhase1DHGroupNumbers
	Phase1EncryptionAlgorithms   []ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsPhase1EncryptionAlgorithms
	Phase1IntegrityAlgorithms    []ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsPhase1IntegrityAlgorithms
	Phase1LifetimeSeconds        *int64
	Phase2DHGroupNumbers         []ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsPhase2DHGroupNumbers
	Phase2EncryptionAlgorithms   []ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsPhase2EncryptionAlgorithms
	Phase2IntegrityAlgorithms    []ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptionsPhase2IntegrityAlgorithms
	Phase2LifetimeSeconds        *int64
	PreSharedKey                 *string
	RekeyFuzzPercentage          *int64
	RekeyMarginTimeSeconds       *int64
	ReplayWindowSize             *int64
	StartupAction                *string
	TunnelInsideCidr             *string
	TunnelInsideIpv6Cidr         *string
}

// ModifyVpnTunnelOptionsResultVpnConnectionOptions - The VPN connection options.
type ModifyVpnTunnelOptionsResultVpnConnectionOptions struct {
	EnableAcceleration                  *bool
	LocalIpv4NetworkCidr                *string
	LocalIpv6NetworkCidr                *string
	OutsideIPAddressType                *string
	RemoteIpv4NetworkCidr               *string
	RemoteIpv6NetworkCidr               *string
	StaticRoutesOnly                    *bool
	TransportTransitGatewayAttachmentID *string
	TunnelInsideIPVersion               *ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelInsideIPVersionEnum
	TunnelOptions                       []ModifyVpnTunnelOptionsResultVpnConnectionOptionsTunnelOptions
}

// ModifyVpnTunnelOptionsResultVpnConnectionRoutesSourceEnum - Indicates how the routes were provided.
type ModifyVpnTunnelOptionsResultVpnConnectionRoutesSourceEnum string

const (
	ModifyVpnTunnelOptionsResultVpnConnectionRoutesSourceEnumStatic ModifyVpnTunnelOptionsResultVpnConnectionRoutesSourceEnum = "Static"
)

func (e ModifyVpnTunnelOptionsResultVpnConnectionRoutesSourceEnum) ToPointer() *ModifyVpnTunnelOptionsResultVpnConnectionRoutesSourceEnum {
	return &e
}

func (e *ModifyVpnTunnelOptionsResultVpnConnectionRoutesSourceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Static":
		*e = ModifyVpnTunnelOptionsResultVpnConnectionRoutesSourceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnTunnelOptionsResultVpnConnectionRoutesSourceEnum: %v", v)
	}
}

// ModifyVpnTunnelOptionsResultVpnConnectionRoutesStateEnum - The current state of the static route.
type ModifyVpnTunnelOptionsResultVpnConnectionRoutesStateEnum string

const (
	ModifyVpnTunnelOptionsResultVpnConnectionRoutesStateEnumPending   ModifyVpnTunnelOptionsResultVpnConnectionRoutesStateEnum = "pending"
	ModifyVpnTunnelOptionsResultVpnConnectionRoutesStateEnumAvailable ModifyVpnTunnelOptionsResultVpnConnectionRoutesStateEnum = "available"
	ModifyVpnTunnelOptionsResultVpnConnectionRoutesStateEnumDeleting  ModifyVpnTunnelOptionsResultVpnConnectionRoutesStateEnum = "deleting"
	ModifyVpnTunnelOptionsResultVpnConnectionRoutesStateEnumDeleted   ModifyVpnTunnelOptionsResultVpnConnectionRoutesStateEnum = "deleted"
)

func (e ModifyVpnTunnelOptionsResultVpnConnectionRoutesStateEnum) ToPointer() *ModifyVpnTunnelOptionsResultVpnConnectionRoutesStateEnum {
	return &e
}

func (e *ModifyVpnTunnelOptionsResultVpnConnectionRoutesStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = ModifyVpnTunnelOptionsResultVpnConnectionRoutesStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnTunnelOptionsResultVpnConnectionRoutesStateEnum: %v", v)
	}
}

// ModifyVpnTunnelOptionsResultVpnConnectionRoutes - Describes a static route for a VPN connection.
type ModifyVpnTunnelOptionsResultVpnConnectionRoutes struct {
	DestinationCidrBlock *string
	Source               *ModifyVpnTunnelOptionsResultVpnConnectionRoutesSourceEnum
	State                *ModifyVpnTunnelOptionsResultVpnConnectionRoutesStateEnum
}

// ModifyVpnTunnelOptionsResultVpnConnectionStateEnum - The current state of the VPN connection.
type ModifyVpnTunnelOptionsResultVpnConnectionStateEnum string

const (
	ModifyVpnTunnelOptionsResultVpnConnectionStateEnumPending   ModifyVpnTunnelOptionsResultVpnConnectionStateEnum = "pending"
	ModifyVpnTunnelOptionsResultVpnConnectionStateEnumAvailable ModifyVpnTunnelOptionsResultVpnConnectionStateEnum = "available"
	ModifyVpnTunnelOptionsResultVpnConnectionStateEnumDeleting  ModifyVpnTunnelOptionsResultVpnConnectionStateEnum = "deleting"
	ModifyVpnTunnelOptionsResultVpnConnectionStateEnumDeleted   ModifyVpnTunnelOptionsResultVpnConnectionStateEnum = "deleted"
)

func (e ModifyVpnTunnelOptionsResultVpnConnectionStateEnum) ToPointer() *ModifyVpnTunnelOptionsResultVpnConnectionStateEnum {
	return &e
}

func (e *ModifyVpnTunnelOptionsResultVpnConnectionStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = ModifyVpnTunnelOptionsResultVpnConnectionStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnTunnelOptionsResultVpnConnectionStateEnum: %v", v)
	}
}

// ModifyVpnTunnelOptionsResultVpnConnectionTags - Describes a tag.
type ModifyVpnTunnelOptionsResultVpnConnectionTags struct {
	Key   *string
	Value *string
}

// ModifyVpnTunnelOptionsResultVpnConnectionTypeEnum - The type of VPN connection.
type ModifyVpnTunnelOptionsResultVpnConnectionTypeEnum string

const (
	ModifyVpnTunnelOptionsResultVpnConnectionTypeEnumIpsec1 ModifyVpnTunnelOptionsResultVpnConnectionTypeEnum = "ipsec.1"
)

func (e ModifyVpnTunnelOptionsResultVpnConnectionTypeEnum) ToPointer() *ModifyVpnTunnelOptionsResultVpnConnectionTypeEnum {
	return &e
}

func (e *ModifyVpnTunnelOptionsResultVpnConnectionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ipsec.1":
		*e = ModifyVpnTunnelOptionsResultVpnConnectionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnTunnelOptionsResultVpnConnectionTypeEnum: %v", v)
	}
}

// ModifyVpnTunnelOptionsResultVpnConnectionVgwTelemetryStatusEnum - The status of the VPN tunnel.
type ModifyVpnTunnelOptionsResultVpnConnectionVgwTelemetryStatusEnum string

const (
	ModifyVpnTunnelOptionsResultVpnConnectionVgwTelemetryStatusEnumUp   ModifyVpnTunnelOptionsResultVpnConnectionVgwTelemetryStatusEnum = "UP"
	ModifyVpnTunnelOptionsResultVpnConnectionVgwTelemetryStatusEnumDown ModifyVpnTunnelOptionsResultVpnConnectionVgwTelemetryStatusEnum = "DOWN"
)

func (e ModifyVpnTunnelOptionsResultVpnConnectionVgwTelemetryStatusEnum) ToPointer() *ModifyVpnTunnelOptionsResultVpnConnectionVgwTelemetryStatusEnum {
	return &e
}

func (e *ModifyVpnTunnelOptionsResultVpnConnectionVgwTelemetryStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UP":
		fallthrough
	case "DOWN":
		*e = ModifyVpnTunnelOptionsResultVpnConnectionVgwTelemetryStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ModifyVpnTunnelOptionsResultVpnConnectionVgwTelemetryStatusEnum: %v", v)
	}
}

// ModifyVpnTunnelOptionsResultVpnConnectionVgwTelemetry - Describes telemetry for a VPN tunnel.
type ModifyVpnTunnelOptionsResultVpnConnectionVgwTelemetry struct {
	AcceptedRouteCount *int64
	CertificateArn     *string
	LastStatusChange   *time.Time
	OutsideIPAddress   *string
	Status             *ModifyVpnTunnelOptionsResultVpnConnectionVgwTelemetryStatusEnum
	StatusMessage      *string
}

// ModifyVpnTunnelOptionsResultVpnConnection - Information about the VPN connection.
type ModifyVpnTunnelOptionsResultVpnConnection struct {
	Category                     *string
	CoreNetworkArn               *string
	CoreNetworkAttachmentArn     *string
	CustomerGatewayConfiguration *string
	CustomerGatewayID            *string
	GatewayAssociationState      *ModifyVpnTunnelOptionsResultVpnConnectionGatewayAssociationStateEnum
	Options                      *ModifyVpnTunnelOptionsResultVpnConnectionOptions
	Routes                       []ModifyVpnTunnelOptionsResultVpnConnectionRoutes
	State                        *ModifyVpnTunnelOptionsResultVpnConnectionStateEnum
	Tags                         []ModifyVpnTunnelOptionsResultVpnConnectionTags
	TransitGatewayID             *string
	Type                         *ModifyVpnTunnelOptionsResultVpnConnectionTypeEnum
	VgwTelemetry                 []ModifyVpnTunnelOptionsResultVpnConnectionVgwTelemetry
	VpnConnectionID              *string
	VpnGatewayID                 *string
}

// ModifyVpnTunnelOptionsResult - Success
type ModifyVpnTunnelOptionsResult struct {
	VpnConnection *ModifyVpnTunnelOptionsResultVpnConnection
}
