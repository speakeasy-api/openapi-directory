/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum DistrictStatusStateEnum {
  Running = "running",
  Pending = "pending",
  Error = "error",
  Paused = "paused",
}

export class DistrictStatus extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  error?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instant_login" })
  instantLogin?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "last_sync" })
  lastSync?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "launch_date" })
  launchDate?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pause_end" })
  pauseEnd?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pause_start" })
  pauseStart?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sis_type" })
  sisType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: DistrictStatusStateEnum;
}
