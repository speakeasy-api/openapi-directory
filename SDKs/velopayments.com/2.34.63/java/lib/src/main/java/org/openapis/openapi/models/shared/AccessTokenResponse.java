/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AccessTokenResponse - User request has been validated
 */
public class AccessTokenResponse {
    /**
     * Bearer token used in headers to access secure endpoints
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("access_token")
    public String accessToken;
    public AccessTokenResponse withAccessToken(String accessToken) {
        this.accessToken = accessToken;
        return this;
    }
    
    /**
     * If the user is a payee then the payeeId&lt;P&gt;
     * If the user is a payor then the payorId
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entityIds")
    public String[] entityIds;
    public AccessTokenResponse withEntityIds(String[] entityIds) {
        this.entityIds = entityIds;
        return this;
    }
    
    /**
     * The lifetime in seconds of the access token
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expires_in")
    public Long expiresIn;
    public AccessTokenResponse withExpiresIn(Long expiresIn) {
        this.expiresIn = expiresIn;
        return this;
    }
    
    /**
     * can be used to obtain a new access token
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refresh_token")
    public String refreshToken;
    public AccessTokenResponse withRefreshToken(String refreshToken) {
        this.refreshToken = refreshToken;
        return this;
    }
    
    /**
     * the scope of the access token
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scope")
    public String scope;
    public AccessTokenResponse withScope(String scope) {
        this.scope = scope;
        return this;
    }
    
    /**
     * the type of the token
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("token_type")
    public String tokenType;
    public AccessTokenResponse withTokenType(String tokenType) {
        this.tokenType = tokenType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_info")
    public UserInfo userInfo;
    public AccessTokenResponse withUserInfo(UserInfo userInfo) {
        this.userInfo = userInfo;
        return this;
    }
    
}
