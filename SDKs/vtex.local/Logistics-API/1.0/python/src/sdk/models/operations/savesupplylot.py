"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SaveSupplyLotSaveSupplyLot:
    
    date_of_supply_utc: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dateOfSupplyUtc') }})  
    keep_selling_after_expiration: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('keepSellingAfterExpiration') }})  
    quantity: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('quantity') }})  
    

@dataclasses.dataclass
class SaveSupplyLotRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand"""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Type of the content being sent"""  
    request_body: SaveSupplyLotSaveSupplyLot = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    sku_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'skuId', 'style': 'simple', 'explode': False }})
    r"""ID of the SKU whose availability is being scheduled."""  
    supply_lot_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'supplyLotId', 'style': 'simple', 'explode': False }})
    r"""ID of the Supply Lot in which the SKU's scheduling should be considered."""  
    warehouse_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'warehouseId', 'style': 'simple', 'explode': False }})
    r"""ID of the warehouse where the SKU will arrive."""  
    

@dataclasses.dataclass
class SaveSupplyLotResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    