// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListFlywheelsXAmzTargetEnum
type ListFlywheelsXAmzTargetEnum string

const (
	ListFlywheelsXAmzTargetEnumComprehend20171127ListFlywheels ListFlywheelsXAmzTargetEnum = "Comprehend_20171127.ListFlywheels"
)

func (e ListFlywheelsXAmzTargetEnum) ToPointer() *ListFlywheelsXAmzTargetEnum {
	return &e
}

func (e *ListFlywheelsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Comprehend_20171127.ListFlywheels":
		*e = ListFlywheelsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListFlywheelsXAmzTargetEnum: %v", v)
	}
}

type ListFlywheelsRequest struct {
	ListFlywheelsRequest shared.ListFlywheelsRequest `request:"mediaType=application/json"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                     `queryParam:"style=form,explode=true,name=NextToken"`
	XAmzAlgorithm     *string                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        ListFlywheelsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListFlywheelsResponse struct {
	ContentType string
	// InternalServerException
	InternalServerException interface{}
	// InvalidFilterException
	InvalidFilterException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// Success
	ListFlywheelsResponse *shared.ListFlywheelsResponse
	StatusCode            int
	RawResponse           *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
