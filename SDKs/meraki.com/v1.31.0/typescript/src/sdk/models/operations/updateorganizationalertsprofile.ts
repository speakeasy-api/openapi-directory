/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The uplink observed for the alert.  interface must be one of the following: wan1, wan2, cellular
 */
export enum UpdateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum {
  Cellular = "cellular",
  Wan1 = "wan1",
  Wan2 = "wan2",
}

/**
 * The conditions that determine if the alert triggers
 */
export class UpdateOrganizationAlertsProfileRequestBodyAlertCondition extends SpeakeasyBase {
  /**
   * The threshold the metric must cross to be valid for alerting. Used only for WAN Utilization alerts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bit_rate_bps" })
  bitRateBps?: number;

  /**
   * The total duration in seconds that the threshold should be crossed before alerting
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration?: number;

  /**
   * The uplink observed for the alert.  interface must be one of the following: wan1, wan2, cellular
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interface" })
  interface?: UpdateOrganizationAlertsProfileRequestBodyAlertConditionInterfaceEnum;

  /**
   * The threshold the metric must cross to be valid for alerting. Used only for VoIP Jitter alerts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "jitter_ms" })
  jitterMs?: number;

  /**
   * The threshold the metric must cross to be valid for alerting. Used only for WAN Latency alerts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "latency_ms" })
  latencyMs?: number;

  /**
   * The threshold the metric must cross to be valid for alerting. Used only for Packet Loss alerts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "loss_ratio" })
  lossRatio?: number;

  /**
   * The threshold the metric must drop below to be valid for alerting. Used only for VoIP MOS alerts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mos" })
  mos?: number;

  /**
   * The look back period in seconds for sensing the alert
   */
  @SpeakeasyMetadata()
  @Expose({ name: "window" })
  window?: number;
}

/**
 * List of recipients that will recieve the alert.
 */
export class UpdateOrganizationAlertsProfileRequestBodyRecipients extends SpeakeasyBase {
  /**
   * A list of emails that will receive information about the alert
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emails" })
  emails?: string[];

  /**
   * A list base64 encoded urls of webhook endpoints that will receive information about the alert
   */
  @SpeakeasyMetadata()
  @Expose({ name: "httpServerIds" })
  httpServerIds?: string[];
}

/**
 * The alert type
 */
export enum UpdateOrganizationAlertsProfileRequestBodyTypeEnum {
  AppOutage = "appOutage",
  VoipJitter = "voipJitter",
  VoipMos = "voipMos",
  VoipPacketLoss = "voipPacketLoss",
  WanLatency = "wanLatency",
  WanPacketLoss = "wanPacketLoss",
  WanStatus = "wanStatus",
  WanUtilization = "wanUtilization",
}

export class UpdateOrganizationAlertsProfileRequestBody extends SpeakeasyBase {
  /**
   * The conditions that determine if the alert triggers
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alertCondition" })
  @Type(() => UpdateOrganizationAlertsProfileRequestBodyAlertCondition)
  alertCondition?: UpdateOrganizationAlertsProfileRequestBodyAlertCondition;

  /**
   * User supplied description of the alert
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Is the alert config enabled
   */
  @SpeakeasyMetadata()
  @Expose({ name: "enabled" })
  enabled?: boolean;

  /**
   * Networks with these tags will be monitored for the alert
   */
  @SpeakeasyMetadata()
  @Expose({ name: "networkTags" })
  networkTags?: string[];

  /**
   * List of recipients that will recieve the alert.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recipients" })
  @Type(() => UpdateOrganizationAlertsProfileRequestBodyRecipients)
  recipients?: UpdateOrganizationAlertsProfileRequestBodyRecipients;

  /**
   * The alert type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: UpdateOrganizationAlertsProfileRequestBodyTypeEnum;
}

export class UpdateOrganizationAlertsProfileRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: UpdateOrganizationAlertsProfileRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=alertConfigId",
  })
  alertConfigId: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=organizationId",
  })
  organizationId: string;
}

export class UpdateOrganizationAlertsProfileResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  updateOrganizationAlertsProfile200ApplicationJSONObject?: Record<string, any>;
}
