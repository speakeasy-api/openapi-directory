/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GenerateThumbnailRequest extends SpeakeasyBase {
  /**
   * A JSON document with a URL pointing to the image that is to be analyzed.
   */
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  imageUrl: shared.ImageUrl;

  /**
   * Height of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=height",
  })
  height: number;

  /**
   * Boolean flag for enabling smart cropping.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=smartCropping",
  })
  smartCropping?: boolean;

  /**
   * Width of the thumbnail, in pixels. It must be between 1 and 1024. Recommended minimum of 50.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=width" })
  width: number;
}

export class GenerateThumbnailResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * The generated thumbnail in binary format.
   */
  @SpeakeasyMetadata()
  generateThumbnail200ApplicationOctetStreamBinaryString?: Uint8Array;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
