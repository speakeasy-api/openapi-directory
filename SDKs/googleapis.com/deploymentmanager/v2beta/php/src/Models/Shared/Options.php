<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Options - Options allows customized resource handling by Deployment Manager.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Options
{
    /**
     * Options regarding how to thread async requests.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\AsyncOptions> $asyncOptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('asyncOptions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\AsyncOptions>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $asyncOptions = null;
    
    /**
     * The mappings that apply for requests.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\InputMapping> $inputMappings
     */
	#[\JMS\Serializer\Annotation\SerializedName('inputMappings')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\InputMapping>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $inputMappings = null;
    
    /**
     * Options for how to validate and process properties on a resource.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ValidationOptions $validationOptions
     */
	#[\JMS\Serializer\Annotation\SerializedName('validationOptions')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ValidationOptions')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ValidationOptions $validationOptions = null;
    
    /**
     * Additional properties block described as a jsonSchema, these properties will never be part of the json payload, but they can be consumed by InputMappings, this must be a valid json schema draft-04. The properties specified here will be decouple in a different section. This schema will be merged to the schema validation, and properties here will be extracted From the payload and consumed explicitly by InputMappings. ex: field1: type: string field2: type: number
     * 
     * @var ?string $virtualProperties
     */
	#[\JMS\Serializer\Annotation\SerializedName('virtualProperties')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $virtualProperties = null;
    
	public function __construct()
	{
		$this->asyncOptions = null;
		$this->inputMappings = null;
		$this->validationOptions = null;
		$this->virtualProperties = null;
	}
}
