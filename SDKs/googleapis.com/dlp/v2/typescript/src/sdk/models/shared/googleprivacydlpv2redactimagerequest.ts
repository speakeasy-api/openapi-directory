/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GooglePrivacyDlpV2ByteContentItem } from "./googleprivacydlpv2bytecontentitem";
import { GooglePrivacyDlpV2ImageRedactionConfig } from "./googleprivacydlpv2imageredactionconfig";
import { GooglePrivacyDlpV2InspectConfig } from "./googleprivacydlpv2inspectconfig";
import { Expose, Type } from "class-transformer";

/**
 * Request to search for potentially sensitive info in an image and redact it by covering it with a colored rectangle.
 */
export class GooglePrivacyDlpV2RedactImageRequest extends SpeakeasyBase {
  /**
   * Container for bytes to inspect or redact.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "byteItem" })
  @Type(() => GooglePrivacyDlpV2ByteContentItem)
  byteItem?: GooglePrivacyDlpV2ByteContentItem;

  /**
   * The configuration for specifying what content to redact from images.
   */
  @SpeakeasyMetadata({ elemType: GooglePrivacyDlpV2ImageRedactionConfig })
  @Expose({ name: "imageRedactionConfigs" })
  @Type(() => GooglePrivacyDlpV2ImageRedactionConfig)
  imageRedactionConfigs?: GooglePrivacyDlpV2ImageRedactionConfig[];

  /**
   * Whether the response should include findings along with the redacted image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "includeFindings" })
  includeFindings?: boolean;

  /**
   * Configuration description of the scanning process. When used with redactContent only info_types and min_likelihood are currently used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inspectConfig" })
  @Type(() => GooglePrivacyDlpV2InspectConfig)
  inspectConfig?: GooglePrivacyDlpV2InspectConfig;

  /**
   * Deprecated. This field has no effect.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "locationId" })
  locationId?: string;
}
