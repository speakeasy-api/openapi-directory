"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PriceCoverageBucketAdvanceBookingWindowRangeEnum(str, Enum):
    r"""Advance booking window range."""
    ADVANCE_BOOKING_WINDOW_RANGE_UNSPECIFIED = 'ADVANCE_BOOKING_WINDOW_RANGE_UNSPECIFIED'
    ADVANCE_BOOKING_WINDOW_RANGE_UNKNOWN = 'ADVANCE_BOOKING_WINDOW_RANGE_UNKNOWN'
    DAYS_0_TO_30 = 'DAYS_0_TO_30'
    DAYS_31_TO_60 = 'DAYS_31_TO_60'
    DAYS_61_TO_90 = 'DAYS_61_TO_90'
    DAYS_91_TO_120 = 'DAYS_91_TO_120'
    DAYS_121_TO_150 = 'DAYS_121_TO_150'
    DAYS_151_TO_180 = 'DAYS_151_TO_180'
    DAYS_181_TO_210 = 'DAYS_181_TO_210'
    DAYS_211_TO_240 = 'DAYS_211_TO_240'
    DAYS_241_TO_270 = 'DAYS_241_TO_270'
    DAYS_271_TO_300 = 'DAYS_271_TO_300'
    DAYS_301_TO_330 = 'DAYS_301_TO_330'

class PriceCoverageBucketLengthOfStayRangeEnum(str, Enum):
    r"""Length of stay range."""
    LENGTH_OF_STAY_RANGE_UNSPECIFIED = 'LENGTH_OF_STAY_RANGE_UNSPECIFIED'
    LENGTH_OF_STAY_RANGE_UNKNOWN = 'LENGTH_OF_STAY_RANGE_UNKNOWN'
    LENGTH_OF_STAY_1_TO_7 = 'LENGTH_OF_STAY_1_TO_7'
    LENGTH_OF_STAY_8_TO_14 = 'LENGTH_OF_STAY_8_TO_14'
    LENGTH_OF_STAY_15_TO_30 = 'LENGTH_OF_STAY_15_TO_30'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PriceCoverageBucket:
    r"""Coverage stats for one combination of advance booking window and length of stay."""
    
    advance_booking_window_range: Optional[PriceCoverageBucketAdvanceBookingWindowRangeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('advanceBookingWindowRange'), 'exclude': lambda f: f is None }})
    r"""Advance booking window range."""  
    available_price_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('availablePriceCount'), 'exclude': lambda f: f is None }})
    r"""Number of prices for this advance booking window bucket and length of stay bucket."""  
    length_of_stay_range: Optional[PriceCoverageBucketLengthOfStayRangeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lengthOfStayRange'), 'exclude': lambda f: f is None }})
    r"""Length of stay range."""  
    price_coverage_percent: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('priceCoveragePercent'), 'exclude': lambda f: f is None }})
    r"""The percent of itineraries for which you have coverage for this advance booking window bucket and length of stay bucket."""  
    