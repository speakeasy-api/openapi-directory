/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum CallForDocumentClientManagementEnum {
  No = "no",
  Manager = "manager",
  Adn = "adn",
}

export enum CallForDocumentPlayerEnum {
  Guest = "guest",
  Owner = "owner",
  Manager = "manager",
  Assistant = "assistant",
  Collaborator = "collaborator",
}

/**
 * Infos to invite
 */
export class CallForDocument extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Categories" })
  categories?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "ClientManagement" })
  clientManagement?: CallForDocumentClientManagementEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Comment" })
  comment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Contact" })
  contact?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IsAdmin" })
  isAdmin?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "Message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Player" })
  player?: CallForDocumentPlayerEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "PlayerEnd" })
  playerEnd?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Signature" })
  signature?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Subject" })
  subject?: string;
}
