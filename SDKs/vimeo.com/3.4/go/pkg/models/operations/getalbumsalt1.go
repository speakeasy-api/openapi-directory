// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetAlbumsAlt1DirectionEnum - The sort direction of the results.
type GetAlbumsAlt1DirectionEnum string

const (
	GetAlbumsAlt1DirectionEnumAsc  GetAlbumsAlt1DirectionEnum = "asc"
	GetAlbumsAlt1DirectionEnumDesc GetAlbumsAlt1DirectionEnum = "desc"
)

func (e *GetAlbumsAlt1DirectionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = GetAlbumsAlt1DirectionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAlbumsAlt1DirectionEnum: %s", s)
	}
}

// GetAlbumsAlt1SortEnum - The way to sort the results.
type GetAlbumsAlt1SortEnum string

const (
	GetAlbumsAlt1SortEnumAlphabetical GetAlbumsAlt1SortEnum = "alphabetical"
	GetAlbumsAlt1SortEnumDate         GetAlbumsAlt1SortEnum = "date"
	GetAlbumsAlt1SortEnumDuration     GetAlbumsAlt1SortEnum = "duration"
	GetAlbumsAlt1SortEnumVideos       GetAlbumsAlt1SortEnum = "videos"
)

func (e *GetAlbumsAlt1SortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "alphabetical":
		fallthrough
	case "date":
		fallthrough
	case "duration":
		fallthrough
	case "videos":
		*e = GetAlbumsAlt1SortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAlbumsAlt1SortEnum: %s", s)
	}
}

type GetAlbumsAlt1QueryParams struct {
	// The sort direction of the results.
	Direction *GetAlbumsAlt1DirectionEnum `queryParam:"style=form,explode=true,name=direction"`
	// The page number of the results to show.
	Page *float64 `queryParam:"style=form,explode=true,name=page"`
	// The number of items to show on each page of results, up to a maximum of 100.
	PerPage *float64 `queryParam:"style=form,explode=true,name=per_page"`
	// The search query to use to filter the results.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// The way to sort the results.
	Sort *GetAlbumsAlt1SortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type GetAlbumsAlt1Request struct {
	QueryParams GetAlbumsAlt1QueryParams
}

type GetAlbumsAlt1Response struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// The albums were returned.
	Albums []shared.Album
	// A parameter is invalid.
	LegacyError *shared.LegacyError
}
