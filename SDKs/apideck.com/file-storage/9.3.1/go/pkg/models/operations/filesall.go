// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type FilesAllSecurity struct {
	APIKey string `security:"scheme,type=apiKey,subtype=header,name=Authorization"`
}

type FilesAllRequest struct {
	// Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
	Cursor *string `queryParam:"style=form,explode=true,name=cursor"`
	// The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. <br /><br />Example: `fields=name,email,addresses.city`<br /><br />In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// Apply filters
	Filter *shared.FilesFilter `queryParam:"style=deepObject,explode=true,name=filter"`
	// Number of results to return. Minimum 1, Maximum 200, Default 20
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// Optional unmapped key/values that will be passed through to downstream as query parameters
	PassThrough map[string]interface{} `queryParam:"style=deepObject,explode=true,name=pass_through"`
	// Include raw response. Mostly used for debugging purposes
	Raw *bool `queryParam:"style=form,explode=true,name=raw"`
	// Apply sorting
	Sort *shared.FilesSort `queryParam:"style=deepObject,explode=true,name=sort"`
	// The ID of your Unify application
	XApideckAppID string `header:"style=simple,explode=false,name=x-apideck-app-id"`
	// ID of the consumer which you want to get or push data from
	XApideckConsumerID string `header:"style=simple,explode=false,name=x-apideck-consumer-id"`
	// Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
	XApideckServiceID *string `header:"style=simple,explode=false,name=x-apideck-service-id"`
}

type FilesAllResponse struct {
	// Bad Request
	BadRequestResponse *shared.BadRequestResponse
	ContentType        string
	// Files
	GetFilesResponse *shared.GetFilesResponse
	// The specified resource was not found
	NotFoundResponse *shared.NotFoundResponse
	// Payment Required
	PaymentRequiredResponse *shared.PaymentRequiredResponse
	StatusCode              int
	RawResponse             *http.Response
	// Unauthorized
	UnauthorizedResponse *shared.UnauthorizedResponse
	// Unexpected error
	UnexpectedErrorResponse *shared.UnexpectedErrorResponse
	// Unprocessable
	UnprocessableResponse *shared.UnprocessableResponse
}
