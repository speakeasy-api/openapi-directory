"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImGroupResponse = exports.ImGroup200ApplicationJSON = exports.ImGroup200ApplicationJSONTypeEnum = exports.ImGroup200ApplicationXML = exports.ImGroup200ApplicationXMLTypeEnum = exports.ImGroupRequest = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var ImGroupRequest = /** @class */ (function (_super) {
    __extends(ImGroupRequest, _super);
    function ImGroupRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=groupId",
        }),
        __metadata("design:type", String)
    ], ImGroupRequest.prototype, "groupId", void 0);
    return ImGroupRequest;
}(utils_1.SpeakeasyBase));
exports.ImGroupRequest = ImGroupRequest;
/**
 * IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members.
 */
var ImGroup200ApplicationXMLTypeEnum;
(function (ImGroup200ApplicationXMLTypeEnum) {
    ImGroup200ApplicationXMLTypeEnum["Normal"] = "normal";
    ImGroup200ApplicationXMLTypeEnum["Shared"] = "shared";
    ImGroup200ApplicationXMLTypeEnum["Restricted"] = "restricted";
})(ImGroup200ApplicationXMLTypeEnum = exports.ImGroup200ApplicationXMLTypeEnum || (exports.ImGroup200ApplicationXMLTypeEnum = {}));
/**
 * Group object.
 */
var ImGroup200ApplicationXML = /** @class */ (function (_super) {
    __extends(ImGroup200ApplicationXML, _super);
    function ImGroup200ApplicationXML() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ImGroup200ApplicationXML.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ImGroup200ApplicationXML.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], ImGroup200ApplicationXML.prototype, "searchByAccount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], ImGroup200ApplicationXML.prototype, "searchByDomain", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], ImGroup200ApplicationXML.prototype, "searchByMaAccount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ImGroup200ApplicationXML.prototype, "totalMembers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ImGroup200ApplicationXML.prototype, "type", void 0);
    return ImGroup200ApplicationXML;
}(utils_1.SpeakeasyBase));
exports.ImGroup200ApplicationXML = ImGroup200ApplicationXML;
/**
 * IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members.
 */
var ImGroup200ApplicationJSONTypeEnum;
(function (ImGroup200ApplicationJSONTypeEnum) {
    ImGroup200ApplicationJSONTypeEnum["Normal"] = "normal";
    ImGroup200ApplicationJSONTypeEnum["Shared"] = "shared";
    ImGroup200ApplicationJSONTypeEnum["Restricted"] = "restricted";
})(ImGroup200ApplicationJSONTypeEnum = exports.ImGroup200ApplicationJSONTypeEnum || (exports.ImGroup200ApplicationJSONTypeEnum = {}));
/**
 * Group object.
 */
var ImGroup200ApplicationJSON = /** @class */ (function (_super) {
    __extends(ImGroup200ApplicationJSON, _super);
    function ImGroup200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], ImGroup200ApplicationJSON.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], ImGroup200ApplicationJSON.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "search_by_account" }),
        __metadata("design:type", Boolean)
    ], ImGroup200ApplicationJSON.prototype, "searchByAccount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "search_by_domain" }),
        __metadata("design:type", Boolean)
    ], ImGroup200ApplicationJSON.prototype, "searchByDomain", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "search_by_ma_account" }),
        __metadata("design:type", Boolean)
    ], ImGroup200ApplicationJSON.prototype, "searchByMaAccount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "total_members" }),
        __metadata("design:type", Number)
    ], ImGroup200ApplicationJSON.prototype, "totalMembers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], ImGroup200ApplicationJSON.prototype, "type", void 0);
    return ImGroup200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.ImGroup200ApplicationJSON = ImGroup200ApplicationJSON;
var ImGroupResponse = /** @class */ (function (_super) {
    __extends(ImGroupResponse, _super);
    function ImGroupResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], ImGroupResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ImGroupResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ImGroupResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], ImGroupResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", ImGroup200ApplicationJSON)
    ], ImGroupResponse.prototype, "imGroup200ApplicationJSONObject", void 0);
    return ImGroupResponse;
}(utils_1.SpeakeasyBase));
exports.ImGroupResponse = ImGroupResponse;
