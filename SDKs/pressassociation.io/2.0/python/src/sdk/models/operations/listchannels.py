"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Any, Optional


@dataclasses.dataclass
class ListChannelsSecurity:
    
    apikey: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'apikey' }})  
    

@dataclasses.dataclass
class ListChannelsRequest:
    
    aliases: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'aliases', 'style': 'form', 'explode': True }})
    r"""Flag to display Legacy and Provider Ids."""  
    date_: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'date', 'style': 'form', 'explode': True }})
    r"""Date of the Channel State to select, this will display channel names and attributes in the future or past."""  
    platform_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'platformId', 'style': 'form', 'explode': True }})
    r"""The identifier for the selected platform. Multiple platforms can be passed to the API without a region Id. Passing multiple platforms without a region will not return epg numbers as these are linked to a platform and region."""  
    region_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'regionId', 'style': 'form', 'explode': True }})
    r"""The platform region ID for the channel selection."""  
    schedule_end: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'scheduleEnd', 'style': 'form', 'explode': True }})
    r"""The End Date for the schedule."""  
    schedule_start: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'scheduleStart', 'style': 'form', 'explode': True }})
    r"""The Start Date for the schedule."""  
    schedule_updated_since: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'scheduleUpdatedSince', 'style': 'form', 'explode': True }})
    r"""Schedule Updated Since"""  
    

@dataclasses.dataclass
class ListChannelsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    list_channels_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    