/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";
export const ListBundleServerList = ["https://numbers.twilio.com"] as const;

export class ListBundleSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class ListBundleRequest extends SpeakeasyBase {
  /**
   * The string that you assigned to describe the resource. The column can contain 255 variable characters.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=FriendlyName",
  })
  friendlyName?: string;

  /**
   * Indicates that the Bundle is a valid Bundle until a specified expiration date.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=HasValidUntilDate",
  })
  hasValidUntilDate?: boolean;

  /**
   * The 2-digit [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the Bundle's phone number country ownership request.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=IsoCountry",
  })
  isoCountry?: string;

  /**
   * The type of phone number of the Bundle's ownership request. Can be `local`, `mobile`, `national`, or `tollfree`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=NumberType",
  })
  numberType?: string;

  /**
   * The page index. This value is simply for client state.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Page" })
  page?: number;

  /**
   * How many resources to return in each list page. The default is 50, and the maximum is 1000.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageSize",
  })
  pageSize?: number;

  /**
   * The page token. This is provided by the API.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageToken",
  })
  pageToken?: string;

  /**
   * The unique string of a [Regulation resource](https://www.twilio.com/docs/phone-numbers/regulatory/api/regulations) that is associated to the Bundle resource.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=RegulationSid",
  })
  regulationSid?: string;

  /**
   * Can be `valid-until` or `date-updated`. Defaults to `date-created`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SortBy",
  })
  sortBy?: shared.BundleEnumSortByEnum;

  /**
   * Default is `DESC`. Can be `ASC` or `DESC`.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SortDirection",
  })
  sortDirection?: shared.BundleEnumSortDirectionEnum;

  /**
   * The verification status of the Bundle resource. Please refer to [Bundle Statuses](https://www.twilio.com/docs/phone-numbers/regulatory/api/bundles#bundle-statuses) for more details.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Status",
  })
  status?: shared.BundleEnumStatusEnum;

  /**
   * Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) is the acceptable date format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ValidUntilDate;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  validUntilDate?: Date;

  /**
   * Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) is the acceptable date format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ValidUntilDate<;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  validUntilDateLessThan?: Date;

  /**
   * Date to filter Bundles having their `valid_until_date` before or after the specified date. Can be `ValidUntilDate>=` or `ValidUntilDate<=`. Both can be used in conjunction as well. [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) is the acceptable date format.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ValidUntilDate>;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  validUntilDateGreaterThan?: Date;
}

export class ListBundleListBundleResponseMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "first_page_url" })
  firstPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_url" })
  nextPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "previous_page_url" })
  previousPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * OK
 */
export class ListBundleListBundleResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => ListBundleListBundleResponseMeta)
  meta?: ListBundleListBundleResponseMeta;

  @SpeakeasyMetadata({ elemType: shared.NumbersV2RegulatoryComplianceBundle })
  @Expose({ name: "results" })
  @Type(() => shared.NumbersV2RegulatoryComplianceBundle)
  results?: shared.NumbersV2RegulatoryComplianceBundle[];
}

export class ListBundleResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listBundleResponse?: ListBundleListBundleResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
