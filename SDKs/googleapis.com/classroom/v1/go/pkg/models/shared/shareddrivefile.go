// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SharedDriveFileShareModeEnum - Mechanism by which students access the Drive item.
type SharedDriveFileShareModeEnum string

const (
	SharedDriveFileShareModeEnumUnknownShareMode SharedDriveFileShareModeEnum = "UNKNOWN_SHARE_MODE"
	SharedDriveFileShareModeEnumView             SharedDriveFileShareModeEnum = "VIEW"
	SharedDriveFileShareModeEnumEdit             SharedDriveFileShareModeEnum = "EDIT"
	SharedDriveFileShareModeEnumStudentCopy      SharedDriveFileShareModeEnum = "STUDENT_COPY"
)

func (e SharedDriveFileShareModeEnum) ToPointer() *SharedDriveFileShareModeEnum {
	return &e
}

func (e *SharedDriveFileShareModeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UNKNOWN_SHARE_MODE":
		fallthrough
	case "VIEW":
		fallthrough
	case "EDIT":
		fallthrough
	case "STUDENT_COPY":
		*e = SharedDriveFileShareModeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SharedDriveFileShareModeEnum: %v", v)
	}
}

// SharedDriveFile - Drive file that is used as material for course work.
type SharedDriveFile struct {
	// Representation of a Google Drive file.
	DriveFile *DriveFile `json:"driveFile,omitempty"`
	// Mechanism by which students access the Drive item.
	ShareMode *SharedDriveFileShareModeEnum `json:"shareMode,omitempty"`
}
