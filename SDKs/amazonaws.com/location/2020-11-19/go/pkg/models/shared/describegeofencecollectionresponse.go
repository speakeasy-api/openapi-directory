// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DescribeGeofenceCollectionResponsePricingPlanEnum - No longer used. Always returns <code>RequestBasedUsage</code>.Deprecated. Always returns RequestBasedUsage.
type DescribeGeofenceCollectionResponsePricingPlanEnum string

const (
	DescribeGeofenceCollectionResponsePricingPlanEnumRequestBasedUsage     DescribeGeofenceCollectionResponsePricingPlanEnum = "RequestBasedUsage"
	DescribeGeofenceCollectionResponsePricingPlanEnumMobileAssetTracking   DescribeGeofenceCollectionResponsePricingPlanEnum = "MobileAssetTracking"
	DescribeGeofenceCollectionResponsePricingPlanEnumMobileAssetManagement DescribeGeofenceCollectionResponsePricingPlanEnum = "MobileAssetManagement"
)

func (e *DescribeGeofenceCollectionResponsePricingPlanEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RequestBasedUsage":
		fallthrough
	case "MobileAssetTracking":
		fallthrough
	case "MobileAssetManagement":
		*e = DescribeGeofenceCollectionResponsePricingPlanEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeGeofenceCollectionResponsePricingPlanEnum: %s", s)
	}
}

// DescribeGeofenceCollectionResponse - Success
type DescribeGeofenceCollectionResponse struct {
	CollectionArn         string                                             `json:"CollectionArn"`
	CollectionName        string                                             `json:"CollectionName"`
	CreateTime            time.Time                                          `json:"CreateTime"`
	Description           string                                             `json:"Description"`
	KmsKeyID              *string                                            `json:"KmsKeyId,omitempty"`
	PricingPlan           *DescribeGeofenceCollectionResponsePricingPlanEnum `json:"PricingPlan,omitempty"`
	PricingPlanDataSource *string                                            `json:"PricingPlanDataSource,omitempty"`
	Tags                  map[string]string                                  `json:"Tags,omitempty"`
	UpdateTime            time.Time                                          `json:"UpdateTime"`
}
