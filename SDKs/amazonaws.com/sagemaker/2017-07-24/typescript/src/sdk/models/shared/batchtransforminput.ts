/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MonitoringDatasetFormat } from "./monitoringdatasetformat";
import { ProcessingS3DataDistributionTypeEnum } from "./processings3datadistributiontypeenum";
import { ProcessingS3InputModeEnum } from "./processings3inputmodeenum";
import { Expose, Type } from "class-transformer";

/**
 * Input object for the batch transform job.
 */
export class BatchTransformInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DataCapturedDestinationS3Uri" })
  dataCapturedDestinationS3Uri: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DatasetFormat" })
  @Type(() => MonitoringDatasetFormat)
  datasetFormat: MonitoringDatasetFormat;

  @SpeakeasyMetadata()
  @Expose({ name: "EndTimeOffset" })
  endTimeOffset?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "FeaturesAttribute" })
  featuresAttribute?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "InferenceAttribute" })
  inferenceAttribute?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LocalPath" })
  localPath: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProbabilityAttribute" })
  probabilityAttribute?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProbabilityThresholdAttribute" })
  probabilityThresholdAttribute?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "S3DataDistributionType" })
  s3DataDistributionType?: ProcessingS3DataDistributionTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "S3InputMode" })
  s3InputMode?: ProcessingS3InputModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTimeOffset" })
  startTimeOffset?: string;
}
