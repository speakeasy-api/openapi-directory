// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteReportGroupXAmzTargetEnum
type DeleteReportGroupXAmzTargetEnum string

const (
	DeleteReportGroupXAmzTargetEnumCodeBuild20161006DeleteReportGroup DeleteReportGroupXAmzTargetEnum = "CodeBuild_20161006.DeleteReportGroup"
)

func (e DeleteReportGroupXAmzTargetEnum) ToPointer() *DeleteReportGroupXAmzTargetEnum {
	return &e
}

func (e *DeleteReportGroupXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CodeBuild_20161006.DeleteReportGroup":
		*e = DeleteReportGroupXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteReportGroupXAmzTargetEnum: %v", v)
	}
}

type DeleteReportGroupRequest struct {
	DeleteReportGroupInput shared.DeleteReportGroupInput   `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             DeleteReportGroupXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteReportGroupResponse struct {
	ContentType string
	// Success
	DeleteReportGroupOutput map[string]interface{}
	// InvalidInputException
	InvalidInputException interface{}
	StatusCode            int
	RawResponse           *http.Response
}
