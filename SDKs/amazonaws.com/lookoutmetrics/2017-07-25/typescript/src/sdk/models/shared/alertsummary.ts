/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AlertStatusEnum } from "./alertstatusenum";
import { AlertTypeEnum } from "./alerttypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Provides a summary of an alert's configuration.
 */
export class AlertSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AlertArn" })
  alertArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AlertName" })
  alertName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AlertSensitivityThreshold" })
  alertSensitivityThreshold?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "AlertStatus" })
  alertStatus?: AlertStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "AlertType" })
  alertType?: AlertTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "AnomalyDetectorArn" })
  anomalyDetectorArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModificationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModificationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;
}
