// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateFirewallRuleGroupXAmzTargetEnum
type CreateFirewallRuleGroupXAmzTargetEnum string

const (
	CreateFirewallRuleGroupXAmzTargetEnumRoute53ResolverCreateFirewallRuleGroup CreateFirewallRuleGroupXAmzTargetEnum = "Route53Resolver.CreateFirewallRuleGroup"
)

func (e CreateFirewallRuleGroupXAmzTargetEnum) ToPointer() *CreateFirewallRuleGroupXAmzTargetEnum {
	return &e
}

func (e *CreateFirewallRuleGroupXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Route53Resolver.CreateFirewallRuleGroup":
		*e = CreateFirewallRuleGroupXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateFirewallRuleGroupXAmzTargetEnum: %v", v)
	}
}

type CreateFirewallRuleGroupRequest struct {
	CreateFirewallRuleGroupRequest shared.CreateFirewallRuleGroupRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     CreateFirewallRuleGroupXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type CreateFirewallRuleGroupResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// Success
	CreateFirewallRuleGroupResponse *shared.CreateFirewallRuleGroupResponse
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
