"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WarehouseBasedDeliveryTime:
    
    carrier: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carrier'), 'exclude': lambda f: f is None }})
    r"""Required. Carrier, such as `\\"UPS\\"` or `\\"Fedex\\"`. The list of supported carriers can be retrieved via the `listSupportedCarriers` method."""  
    carrier_service: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carrierService'), 'exclude': lambda f: f is None }})
    r"""Required. Carrier service, such as `\\"ground\\"` or `\\"2 days\\"`. The list of supported services for a carrier can be retrieved via the `listSupportedCarriers` method. The name of the service must be in the eddSupportedServices list."""  
    origin_administrative_area: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originAdministrativeArea'), 'exclude': lambda f: f is None }})
    r"""Shipping origin's state."""  
    origin_city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originCity'), 'exclude': lambda f: f is None }})
    r"""Shipping origin's city."""  
    origin_country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originCountry'), 'exclude': lambda f: f is None }})
    r"""Shipping origin's country represented as a [CLDR territory code](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml)."""  
    origin_postal_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originPostalCode'), 'exclude': lambda f: f is None }})
    r"""Shipping origin."""  
    origin_street_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('originStreetAddress'), 'exclude': lambda f: f is None }})
    r"""Shipping origin's street address"""  
    warehouse_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('warehouseName'), 'exclude': lambda f: f is None }})
    r"""The name of the warehouse. Warehouse name need to be matched with name. If warehouseName is set, the below fields will be ignored. The warehouse info will be read from warehouse."""  
    