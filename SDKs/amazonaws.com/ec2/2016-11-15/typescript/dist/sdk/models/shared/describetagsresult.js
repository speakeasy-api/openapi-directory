"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DescribeTagsResult = exports.DescribeTagsResultTags = exports.DescribeTagsResultTagsResourceTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The resource type.
 */
var DescribeTagsResultTagsResourceTypeEnum;
(function (DescribeTagsResultTagsResourceTypeEnum) {
    DescribeTagsResultTagsResourceTypeEnum["CapacityReservation"] = "capacity-reservation";
    DescribeTagsResultTagsResourceTypeEnum["ClientVpnEndpoint"] = "client-vpn-endpoint";
    DescribeTagsResultTagsResourceTypeEnum["CustomerGateway"] = "customer-gateway";
    DescribeTagsResultTagsResourceTypeEnum["CarrierGateway"] = "carrier-gateway";
    DescribeTagsResultTagsResourceTypeEnum["CoipPool"] = "coip-pool";
    DescribeTagsResultTagsResourceTypeEnum["DedicatedHost"] = "dedicated-host";
    DescribeTagsResultTagsResourceTypeEnum["DhcpOptions"] = "dhcp-options";
    DescribeTagsResultTagsResourceTypeEnum["EgressOnlyInternetGateway"] = "egress-only-internet-gateway";
    DescribeTagsResultTagsResourceTypeEnum["ElasticIp"] = "elastic-ip";
    DescribeTagsResultTagsResourceTypeEnum["ElasticGpu"] = "elastic-gpu";
    DescribeTagsResultTagsResourceTypeEnum["ExportImageTask"] = "export-image-task";
    DescribeTagsResultTagsResourceTypeEnum["ExportInstanceTask"] = "export-instance-task";
    DescribeTagsResultTagsResourceTypeEnum["Fleet"] = "fleet";
    DescribeTagsResultTagsResourceTypeEnum["FpgaImage"] = "fpga-image";
    DescribeTagsResultTagsResourceTypeEnum["HostReservation"] = "host-reservation";
    DescribeTagsResultTagsResourceTypeEnum["Image"] = "image";
    DescribeTagsResultTagsResourceTypeEnum["ImportImageTask"] = "import-image-task";
    DescribeTagsResultTagsResourceTypeEnum["ImportSnapshotTask"] = "import-snapshot-task";
    DescribeTagsResultTagsResourceTypeEnum["Instance"] = "instance";
    DescribeTagsResultTagsResourceTypeEnum["InstanceEventWindow"] = "instance-event-window";
    DescribeTagsResultTagsResourceTypeEnum["InternetGateway"] = "internet-gateway";
    DescribeTagsResultTagsResourceTypeEnum["Ipam"] = "ipam";
    DescribeTagsResultTagsResourceTypeEnum["IpamPool"] = "ipam-pool";
    DescribeTagsResultTagsResourceTypeEnum["IpamScope"] = "ipam-scope";
    DescribeTagsResultTagsResourceTypeEnum["Ipv4poolEc2"] = "ipv4pool-ec2";
    DescribeTagsResultTagsResourceTypeEnum["Ipv6poolEc2"] = "ipv6pool-ec2";
    DescribeTagsResultTagsResourceTypeEnum["KeyPair"] = "key-pair";
    DescribeTagsResultTagsResourceTypeEnum["LaunchTemplate"] = "launch-template";
    DescribeTagsResultTagsResourceTypeEnum["LocalGateway"] = "local-gateway";
    DescribeTagsResultTagsResourceTypeEnum["LocalGatewayRouteTable"] = "local-gateway-route-table";
    DescribeTagsResultTagsResourceTypeEnum["LocalGatewayVirtualInterface"] = "local-gateway-virtual-interface";
    DescribeTagsResultTagsResourceTypeEnum["LocalGatewayVirtualInterfaceGroup"] = "local-gateway-virtual-interface-group";
    DescribeTagsResultTagsResourceTypeEnum["LocalGatewayRouteTableVpcAssociation"] = "local-gateway-route-table-vpc-association";
    DescribeTagsResultTagsResourceTypeEnum["LocalGatewayRouteTableVirtualInterfaceGroupAssociation"] = "local-gateway-route-table-virtual-interface-group-association";
    DescribeTagsResultTagsResourceTypeEnum["Natgateway"] = "natgateway";
    DescribeTagsResultTagsResourceTypeEnum["NetworkAcl"] = "network-acl";
    DescribeTagsResultTagsResourceTypeEnum["NetworkInterface"] = "network-interface";
    DescribeTagsResultTagsResourceTypeEnum["NetworkInsightsAnalysis"] = "network-insights-analysis";
    DescribeTagsResultTagsResourceTypeEnum["NetworkInsightsPath"] = "network-insights-path";
    DescribeTagsResultTagsResourceTypeEnum["NetworkInsightsAccessScope"] = "network-insights-access-scope";
    DescribeTagsResultTagsResourceTypeEnum["NetworkInsightsAccessScopeAnalysis"] = "network-insights-access-scope-analysis";
    DescribeTagsResultTagsResourceTypeEnum["PlacementGroup"] = "placement-group";
    DescribeTagsResultTagsResourceTypeEnum["PrefixList"] = "prefix-list";
    DescribeTagsResultTagsResourceTypeEnum["ReplaceRootVolumeTask"] = "replace-root-volume-task";
    DescribeTagsResultTagsResourceTypeEnum["ReservedInstances"] = "reserved-instances";
    DescribeTagsResultTagsResourceTypeEnum["RouteTable"] = "route-table";
    DescribeTagsResultTagsResourceTypeEnum["SecurityGroup"] = "security-group";
    DescribeTagsResultTagsResourceTypeEnum["SecurityGroupRule"] = "security-group-rule";
    DescribeTagsResultTagsResourceTypeEnum["Snapshot"] = "snapshot";
    DescribeTagsResultTagsResourceTypeEnum["SpotFleetRequest"] = "spot-fleet-request";
    DescribeTagsResultTagsResourceTypeEnum["SpotInstancesRequest"] = "spot-instances-request";
    DescribeTagsResultTagsResourceTypeEnum["Subnet"] = "subnet";
    DescribeTagsResultTagsResourceTypeEnum["SubnetCidrReservation"] = "subnet-cidr-reservation";
    DescribeTagsResultTagsResourceTypeEnum["TrafficMirrorFilter"] = "traffic-mirror-filter";
    DescribeTagsResultTagsResourceTypeEnum["TrafficMirrorSession"] = "traffic-mirror-session";
    DescribeTagsResultTagsResourceTypeEnum["TrafficMirrorTarget"] = "traffic-mirror-target";
    DescribeTagsResultTagsResourceTypeEnum["TransitGateway"] = "transit-gateway";
    DescribeTagsResultTagsResourceTypeEnum["TransitGatewayAttachment"] = "transit-gateway-attachment";
    DescribeTagsResultTagsResourceTypeEnum["TransitGatewayConnectPeer"] = "transit-gateway-connect-peer";
    DescribeTagsResultTagsResourceTypeEnum["TransitGatewayMulticastDomain"] = "transit-gateway-multicast-domain";
    DescribeTagsResultTagsResourceTypeEnum["TransitGatewayPolicyTable"] = "transit-gateway-policy-table";
    DescribeTagsResultTagsResourceTypeEnum["TransitGatewayRouteTable"] = "transit-gateway-route-table";
    DescribeTagsResultTagsResourceTypeEnum["TransitGatewayRouteTableAnnouncement"] = "transit-gateway-route-table-announcement";
    DescribeTagsResultTagsResourceTypeEnum["Volume"] = "volume";
    DescribeTagsResultTagsResourceTypeEnum["Vpc"] = "vpc";
    DescribeTagsResultTagsResourceTypeEnum["VpcEndpoint"] = "vpc-endpoint";
    DescribeTagsResultTagsResourceTypeEnum["VpcEndpointConnection"] = "vpc-endpoint-connection";
    DescribeTagsResultTagsResourceTypeEnum["VpcEndpointService"] = "vpc-endpoint-service";
    DescribeTagsResultTagsResourceTypeEnum["VpcEndpointServicePermission"] = "vpc-endpoint-service-permission";
    DescribeTagsResultTagsResourceTypeEnum["VpcPeeringConnection"] = "vpc-peering-connection";
    DescribeTagsResultTagsResourceTypeEnum["VpnConnection"] = "vpn-connection";
    DescribeTagsResultTagsResourceTypeEnum["VpnGateway"] = "vpn-gateway";
    DescribeTagsResultTagsResourceTypeEnum["VpcFlowLog"] = "vpc-flow-log";
    DescribeTagsResultTagsResourceTypeEnum["CapacityReservationFleet"] = "capacity-reservation-fleet";
    DescribeTagsResultTagsResourceTypeEnum["TrafficMirrorFilterRule"] = "traffic-mirror-filter-rule";
    DescribeTagsResultTagsResourceTypeEnum["VpcEndpointConnectionDeviceType"] = "vpc-endpoint-connection-device-type";
    DescribeTagsResultTagsResourceTypeEnum["VerifiedAccessInstance"] = "verified-access-instance";
    DescribeTagsResultTagsResourceTypeEnum["VerifiedAccessGroup"] = "verified-access-group";
    DescribeTagsResultTagsResourceTypeEnum["VerifiedAccessEndpoint"] = "verified-access-endpoint";
    DescribeTagsResultTagsResourceTypeEnum["VerifiedAccessPolicy"] = "verified-access-policy";
    DescribeTagsResultTagsResourceTypeEnum["VerifiedAccessTrustProvider"] = "verified-access-trust-provider";
    DescribeTagsResultTagsResourceTypeEnum["VpnConnectionDeviceType"] = "vpn-connection-device-type";
    DescribeTagsResultTagsResourceTypeEnum["VpcBlockPublicAccessExclusion"] = "vpc-block-public-access-exclusion";
    DescribeTagsResultTagsResourceTypeEnum["IpamResourceDiscovery"] = "ipam-resource-discovery";
    DescribeTagsResultTagsResourceTypeEnum["IpamResourceDiscoveryAssociation"] = "ipam-resource-discovery-association";
})(DescribeTagsResultTagsResourceTypeEnum = exports.DescribeTagsResultTagsResourceTypeEnum || (exports.DescribeTagsResultTagsResourceTypeEnum = {}));
/**
 * Describes a tag.
 */
var DescribeTagsResultTags = /** @class */ (function (_super) {
    __extends(DescribeTagsResultTags, _super);
    function DescribeTagsResultTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeTagsResultTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeTagsResultTags.prototype, "resourceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeTagsResultTags.prototype, "resourceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeTagsResultTags.prototype, "value", void 0);
    return DescribeTagsResultTags;
}(utils_1.SpeakeasyBase));
exports.DescribeTagsResultTags = DescribeTagsResultTags;
/**
 * Success
 */
var DescribeTagsResult = /** @class */ (function (_super) {
    __extends(DescribeTagsResult, _super);
    function DescribeTagsResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], DescribeTagsResult.prototype, "nextToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: DescribeTagsResultTags }),
        __metadata("design:type", Array)
    ], DescribeTagsResult.prototype, "tags", void 0);
    return DescribeTagsResult;
}(utils_1.SpeakeasyBase));
exports.DescribeTagsResult = DescribeTagsResult;
