// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type RetrieveALimitRequest struct {
	LimitID string `pathParam:"style=simple,explode=false,name=limit_id"`
}

type RetrieveALimitDefaultApplicationJSON13StatusEnum string

const (
	RetrieveALimitDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine RetrieveALimitDefaultApplicationJSON13StatusEnum = "429"
)

func (e *RetrieveALimitDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = RetrieveALimitDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON13TypeEnum string

const (
	RetrieveALimitDefaultApplicationJSON13TypeEnumRateLimitedError RetrieveALimitDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *RetrieveALimitDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = RetrieveALimitDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON13 struct {
	Detail     string                                           `json:"detail"`
	RetryAfter *int64                                           `json:"retry_after,omitempty"`
	Status     RetrieveALimitDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                           `json:"title"`
	Type       RetrieveALimitDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type RetrieveALimitDefaultApplicationJSON12StatusEnum string

const (
	RetrieveALimitDefaultApplicationJSON12StatusEnumFourHundredAndThree RetrieveALimitDefaultApplicationJSON12StatusEnum = "403"
)

func (e *RetrieveALimitDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveALimitDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON12TypeEnum string

const (
	RetrieveALimitDefaultApplicationJSON12TypeEnumPrivateFeatureError RetrieveALimitDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *RetrieveALimitDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = RetrieveALimitDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON12 struct {
	Detail string                                           `json:"detail"`
	Status RetrieveALimitDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                           `json:"title"`
	Type   RetrieveALimitDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type RetrieveALimitDefaultApplicationJSON11StatusEnum string

const (
	RetrieveALimitDefaultApplicationJSON11StatusEnumFourHundredAndFour RetrieveALimitDefaultApplicationJSON11StatusEnum = "404"
)

func (e *RetrieveALimitDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = RetrieveALimitDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON11TypeEnum string

const (
	RetrieveALimitDefaultApplicationJSON11TypeEnumObjectNotFoundError RetrieveALimitDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *RetrieveALimitDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = RetrieveALimitDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON11 struct {
	Detail string                                           `json:"detail"`
	Status RetrieveALimitDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                           `json:"title"`
	Type   RetrieveALimitDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type RetrieveALimitDefaultApplicationJSON10StatusEnum string

const (
	RetrieveALimitDefaultApplicationJSON10StatusEnumFourHundred RetrieveALimitDefaultApplicationJSON10StatusEnum = "400"
)

func (e *RetrieveALimitDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = RetrieveALimitDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON10TypeEnum string

const (
	RetrieveALimitDefaultApplicationJSON10TypeEnumMalformedRequestError RetrieveALimitDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *RetrieveALimitDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = RetrieveALimitDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON10 struct {
	Detail string                                           `json:"detail"`
	Status RetrieveALimitDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                           `json:"title"`
	Type   RetrieveALimitDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type RetrieveALimitDefaultApplicationJSON9StatusEnum string

const (
	RetrieveALimitDefaultApplicationJSON9StatusEnumFourHundred RetrieveALimitDefaultApplicationJSON9StatusEnum = "400"
)

func (e *RetrieveALimitDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = RetrieveALimitDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON9TypeEnum string

const (
	RetrieveALimitDefaultApplicationJSON9TypeEnumInvalidParametersError RetrieveALimitDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *RetrieveALimitDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = RetrieveALimitDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                        `json:"errors,omitempty"`
	Status RetrieveALimitDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   RetrieveALimitDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type RetrieveALimitDefaultApplicationJSON8StatusEnum string

const (
	RetrieveALimitDefaultApplicationJSON8StatusEnumFourHundredAndNine RetrieveALimitDefaultApplicationJSON8StatusEnum = "409"
)

func (e *RetrieveALimitDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = RetrieveALimitDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON8TypeEnum string

const (
	RetrieveALimitDefaultApplicationJSON8TypeEnumInvalidOperationError RetrieveALimitDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *RetrieveALimitDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = RetrieveALimitDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON8 struct {
	Detail string                                          `json:"detail"`
	Status RetrieveALimitDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   RetrieveALimitDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type RetrieveALimitDefaultApplicationJSON7StatusEnum string

const (
	RetrieveALimitDefaultApplicationJSON7StatusEnumFourHundredAndOne RetrieveALimitDefaultApplicationJSON7StatusEnum = "401"
)

func (e *RetrieveALimitDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = RetrieveALimitDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON7TypeEnum string

const (
	RetrieveALimitDefaultApplicationJSON7TypeEnumInvalidAPIKeyError RetrieveALimitDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *RetrieveALimitDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = RetrieveALimitDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON7 struct {
	Detail string                                          `json:"detail"`
	Status RetrieveALimitDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   RetrieveALimitDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type RetrieveALimitDefaultApplicationJSON6StatusEnum string

const (
	RetrieveALimitDefaultApplicationJSON6StatusEnumFiveHundred RetrieveALimitDefaultApplicationJSON6StatusEnum = "500"
)

func (e *RetrieveALimitDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = RetrieveALimitDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON6TypeEnum string

const (
	RetrieveALimitDefaultApplicationJSON6TypeEnumInternalServerError RetrieveALimitDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *RetrieveALimitDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = RetrieveALimitDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON6 struct {
	Detail string                                          `json:"detail"`
	Status RetrieveALimitDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   RetrieveALimitDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type RetrieveALimitDefaultApplicationJSON5StatusEnum string

const (
	RetrieveALimitDefaultApplicationJSON5StatusEnumFourHundredAndThree RetrieveALimitDefaultApplicationJSON5StatusEnum = "403"
)

func (e *RetrieveALimitDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveALimitDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON5TypeEnum string

const (
	RetrieveALimitDefaultApplicationJSON5TypeEnumInsufficientPermissionsError RetrieveALimitDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *RetrieveALimitDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = RetrieveALimitDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON5 struct {
	Detail string                                          `json:"detail"`
	Status RetrieveALimitDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   RetrieveALimitDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type RetrieveALimitDefaultApplicationJSON4StatusEnum string

const (
	RetrieveALimitDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo RetrieveALimitDefaultApplicationJSON4StatusEnum = "422"
)

func (e *RetrieveALimitDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = RetrieveALimitDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON4TypeEnum string

const (
	RetrieveALimitDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError RetrieveALimitDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *RetrieveALimitDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = RetrieveALimitDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON4 struct {
	Detail string                                          `json:"detail"`
	Status RetrieveALimitDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   RetrieveALimitDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type RetrieveALimitDefaultApplicationJSON3StatusEnum string

const (
	RetrieveALimitDefaultApplicationJSON3StatusEnumFourHundredAndNine RetrieveALimitDefaultApplicationJSON3StatusEnum = "409"
)

func (e *RetrieveALimitDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = RetrieveALimitDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON3TypeEnum string

const (
	RetrieveALimitDefaultApplicationJSON3TypeEnumIdempotencyConflictError RetrieveALimitDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *RetrieveALimitDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = RetrieveALimitDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON3 struct {
	Detail string                                          `json:"detail"`
	Status RetrieveALimitDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   RetrieveALimitDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type RetrieveALimitDefaultApplicationJSON2StatusEnum string

const (
	RetrieveALimitDefaultApplicationJSON2StatusEnumFourHundredAndThree RetrieveALimitDefaultApplicationJSON2StatusEnum = "403"
)

func (e *RetrieveALimitDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = RetrieveALimitDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON2TypeEnum string

const (
	RetrieveALimitDefaultApplicationJSON2TypeEnumEnvironmentMismatchError RetrieveALimitDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *RetrieveALimitDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = RetrieveALimitDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON2 struct {
	Detail string                                          `json:"detail"`
	Status RetrieveALimitDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   RetrieveALimitDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type RetrieveALimitDefaultApplicationJSON1StatusEnum string

const (
	RetrieveALimitDefaultApplicationJSON1StatusEnumFourHundredAndFour RetrieveALimitDefaultApplicationJSON1StatusEnum = "404"
)

func (e *RetrieveALimitDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = RetrieveALimitDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON1TypeEnum string

const (
	RetrieveALimitDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError RetrieveALimitDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *RetrieveALimitDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = RetrieveALimitDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrieveALimitDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type RetrieveALimitDefaultApplicationJSON1 struct {
	Detail string                                          `json:"detail"`
	Status RetrieveALimitDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                          `json:"title"`
	Type   RetrieveALimitDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type RetrieveALimitResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// Limit
	Limit *shared.Limit
}
