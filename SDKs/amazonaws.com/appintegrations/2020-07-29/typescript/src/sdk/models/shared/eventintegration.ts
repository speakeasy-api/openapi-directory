/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EventFilter } from "./eventfilter";
import { Expose, Type } from "class-transformer";

/**
 * The event integration.
 */
export class EventIntegration extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EventBridgeBus" })
  eventBridgeBus?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "EventFilter" })
  @Type(() => EventFilter)
  eventFilter?: EventFilter;

  @SpeakeasyMetadata()
  @Expose({ name: "EventIntegrationArn" })
  eventIntegrationArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Tags" })
  tags?: Record<string, string>;
}
