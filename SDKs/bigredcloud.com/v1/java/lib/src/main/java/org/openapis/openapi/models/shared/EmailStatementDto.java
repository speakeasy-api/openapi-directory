/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class EmailStatementDto {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bccAddresses")
    public String[] bccAddresses;
    public EmailStatementDto withBccAddresses(String[] bccAddresses) {
        this.bccAddresses = bccAddresses;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("customerId")
    public Long customerId;
    public EmailStatementDto withCustomerId(Long customerId) {
        this.customerId = customerId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("fromPeriod")
    public OffsetDateTime fromPeriod;
    public EmailStatementDto withFromPeriod(OffsetDateTime fromPeriod) {
        this.fromPeriod = fromPeriod;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("messageBody")
    public String messageBody;
    public EmailStatementDto withMessageBody(String messageBody) {
        this.messageBody = messageBody;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minimumBalance")
    public Double minimumBalance;
    public EmailStatementDto withMinimumBalance(Double minimumBalance) {
        this.minimumBalance = minimumBalance;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("toAddress")
    public String toAddress;
    public EmailStatementDto withToAddress(String toAddress) {
        this.toAddress = toAddress;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("toPeriod")
    public OffsetDateTime toPeriod;
    public EmailStatementDto withToPeriod(OffsetDateTime toPeriod) {
        this.toPeriod = toPeriod;
        return this;
    }
    
}
