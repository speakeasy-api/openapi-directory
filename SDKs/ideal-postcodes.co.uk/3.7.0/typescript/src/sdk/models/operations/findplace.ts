/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class FindPlaceRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=api_key",
  })
  apiKey: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=bias_country_iso",
  })
  biasCountryIso?: string;

  /**
   * Biases search based on approximate geolocation of IP address.
   *
   * @remarks
   * Set `bias_ip=true` to enable.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=bias_ip",
  })
  biasIp?: shared.BiasIpParamEnum;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=bias_lonlat",
  })
  biasLonlat?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=country_iso",
  })
  countryIso?: string;

  /**
   * Specifies the place you wish to query. Query can be shortened to `q=`
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=false;name=query",
  })
  query?: string;
}

export class FindPlaceResponse extends SpeakeasyBase {
  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  badRequestResponse?: shared.BadRequestResponse;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  placeResponse?: shared.PlaceResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
