// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteDomainActionEnum
type GETDeleteDomainActionEnum string

const (
	GETDeleteDomainActionEnumDeleteDomain GETDeleteDomainActionEnum = "DeleteDomain"
)

func (e *GETDeleteDomainActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DeleteDomain":
		*e = GETDeleteDomainActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteDomainActionEnum: %s", s)
	}
}

// GETDeleteDomainVersionEnum
type GETDeleteDomainVersionEnum string

const (
	GETDeleteDomainVersionEnumTwoThousandAndThirteen0101 GETDeleteDomainVersionEnum = "2013-01-01"
)

func (e *GETDeleteDomainVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2013-01-01":
		*e = GETDeleteDomainVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteDomainVersionEnum: %s", s)
	}
}

type GETDeleteDomainQueryParams struct {
	Action GETDeleteDomainActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name of the domain you want to permanently delete.
	DomainName string                     `queryParam:"style=form,explode=true,name=DomainName"`
	Version    GETDeleteDomainVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETDeleteDomainHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteDomainRequest struct {
	QueryParams GETDeleteDomainQueryParams
	Headers     GETDeleteDomainHeaders
}

type GETDeleteDomainResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
