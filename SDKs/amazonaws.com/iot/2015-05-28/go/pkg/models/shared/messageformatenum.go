// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MessageFormatEnum string

const (
	MessageFormatEnumRaw  MessageFormatEnum = "RAW"
	MessageFormatEnumJSON MessageFormatEnum = "JSON"
)

func (e MessageFormatEnum) ToPointer() *MessageFormatEnum {
	return &e
}

func (e *MessageFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RAW":
		fallthrough
	case "JSON":
		*e = MessageFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MessageFormatEnum: %v", v)
	}
}
