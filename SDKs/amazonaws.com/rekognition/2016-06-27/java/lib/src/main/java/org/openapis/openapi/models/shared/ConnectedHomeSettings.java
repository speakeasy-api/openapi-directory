/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ConnectedHomeSettings -  Label detection settings to use on a streaming video. Defining the settings is required in the request parameter for &lt;a&gt;CreateStreamProcessor&lt;/a&gt;. Including this setting in the &lt;code&gt;CreateStreamProcessor&lt;/code&gt; request enables you to use the stream processor for label detection. You can then select what you want the stream processor to detect, such as people or pets. When the stream processor has started, one notification is sent for each object class specified. For example, if packages and pets are selected, one SNS notification is published the first time a package is detected and one SNS notification is published the first time a pet is detected, as well as an end-of-session summary. 
 */
public class ConnectedHomeSettings {
    @JsonProperty("Labels")
    public String[] labels;
    public ConnectedHomeSettings withLabels(String[] labels) {
        this.labels = labels;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MinConfidence")
    public Float minConfidence;
    public ConnectedHomeSettings withMinConfidence(Float minConfidence) {
        this.minConfidence = minConfidence;
        return this;
    }
    
}
