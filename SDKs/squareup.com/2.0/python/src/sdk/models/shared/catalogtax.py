"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CatalogTax:
    r"""A tax applicable to an item."""
    
    applies_to_custom_amounts: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('applies_to_custom_amounts'), 'exclude': lambda f: f is None }})
    r"""If `true`, the fee applies to custom amounts entered into the Square Point of Sale
    app that are not associated with a particular `CatalogItem`.
    """  
    calculation_phase: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('calculation_phase'), 'exclude': lambda f: f is None }})
    r"""Whether the tax is calculated based on a payment's subtotal or total."""  
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})
    r"""A Boolean flag to indicate whether the tax is displayed as enabled (`true`) in the Square Point of Sale app or not (`false`)."""  
    inclusion_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inclusion_type'), 'exclude': lambda f: f is None }})
    r"""Whether the tax is `ADDITIVE` or `INCLUSIVE`."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The tax's name. This is a searchable attribute for use in applicable query filters, and its value length is of Unicode code points."""  
    percentage: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('percentage'), 'exclude': lambda f: f is None }})
    r"""The percentage of the tax in decimal form, using a `'.'` as the decimal separator and without a `'%'` sign.
    A value of `7.5` corresponds to 7.5%.
    """  
    