/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class DeleteObjectResponse {
    /**
     * AccessDeniedException
     */
    
    public Object accessDeniedException;

    public DeleteObjectResponse withAccessDeniedException(Object accessDeniedException) {
        this.accessDeniedException = accessDeniedException;
        return this;
    }
    
    
    public String contentType;

    public DeleteObjectResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public java.util.Map<String, Object> deleteObjectResponse;

    public DeleteObjectResponse withDeleteObjectResponse(java.util.Map<String, Object> deleteObjectResponse) {
        this.deleteObjectResponse = deleteObjectResponse;
        return this;
    }
    
    /**
     * DirectoryNotEnabledException
     */
    
    public Object directoryNotEnabledException;

    public DeleteObjectResponse withDirectoryNotEnabledException(Object directoryNotEnabledException) {
        this.directoryNotEnabledException = directoryNotEnabledException;
        return this;
    }
    
    /**
     * InternalServiceException
     */
    
    public Object internalServiceException;

    public DeleteObjectResponse withInternalServiceException(Object internalServiceException) {
        this.internalServiceException = internalServiceException;
        return this;
    }
    
    /**
     * InvalidArnException
     */
    
    public Object invalidArnException;

    public DeleteObjectResponse withInvalidArnException(Object invalidArnException) {
        this.invalidArnException = invalidArnException;
        return this;
    }
    
    /**
     * LimitExceededException
     */
    
    public Object limitExceededException;

    public DeleteObjectResponse withLimitExceededException(Object limitExceededException) {
        this.limitExceededException = limitExceededException;
        return this;
    }
    
    /**
     * ObjectNotDetachedException
     */
    
    public Object objectNotDetachedException;

    public DeleteObjectResponse withObjectNotDetachedException(Object objectNotDetachedException) {
        this.objectNotDetachedException = objectNotDetachedException;
        return this;
    }
    
    
    public Integer statusCode;

    public DeleteObjectResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public DeleteObjectResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ResourceNotFoundException
     */
    
    public Object resourceNotFoundException;

    public DeleteObjectResponse withResourceNotFoundException(Object resourceNotFoundException) {
        this.resourceNotFoundException = resourceNotFoundException;
        return this;
    }
    
    /**
     * RetryableConflictException
     */
    
    public Object retryableConflictException;

    public DeleteObjectResponse withRetryableConflictException(Object retryableConflictException) {
        this.retryableConflictException = retryableConflictException;
        return this;
    }
    
    /**
     * ValidationException
     */
    
    public Object validationException;

    public DeleteObjectResponse withValidationException(Object validationException) {
        this.validationException = validationException;
        return this;
    }
    
    public DeleteObjectResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
