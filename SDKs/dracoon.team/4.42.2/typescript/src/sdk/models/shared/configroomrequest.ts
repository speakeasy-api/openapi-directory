/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Classification ID:
 *
 * @remarks
 *
 * * `1` - public
 *
 * * `2` - internal
 *
 * * `3` - confidential
 *
 * * `4` - strictly confidential
 *
 *
 *
 * Provided (or default) classification is taken from room
 *
 * when file gets uploaded without any classification.
 */
export enum ConfigRoomRequestClassificationEnum {
  One = "1",
  Two = "2",
  Three = "3",
  Four = "4",
}

/**
 * Behaviour when new users are added to the group:
 *
 * @remarks
 *
 * * `autoallow`
 *
 * * `pending`
 *
 *
 *
 * Only relevant if `adminGroupIds` has items.
 */
export enum ConfigRoomRequestNewGroupMemberAcceptanceEnum {
  Autoallow = "autoallow",
  Pending = "pending",
}

/**
 * Request model for configuring a room
 */
export class ConfigRoomRequest extends SpeakeasyBase {
  /**
   * List of group ids
   *
   * @remarks
   *
   * A room requires at least one admin (user or group)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "adminGroupIds" })
  adminGroupIds?: number[];

  /**
   * List of user ids
   *
   * @remarks
   *
   * A room requires at least one admin (user or group)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "adminIds" })
  adminIds?: number[];

  /**
   * Classification ID:
   *
   * @remarks
   *
   * * `1` - public
   *
   * * `2` - internal
   *
   * * `3` - confidential
   *
   * * `4` - strictly confidential
   *
   *
   *
   * Provided (or default) classification is taken from room
   *
   * when file gets uploaded without any classification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "classification" })
  classification?: ConfigRoomRequestClassificationEnum;

  /**
   * Is activities log active (for rooms only)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hasActivitiesLog" })
  hasActivitiesLog?: boolean;

  /**
   * Inherit permissions from parent room
   *
   * @remarks
   *
   * (default: `false` if `parentId` is `0`; otherwise: `true`)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "inheritPermissions" })
  inheritPermissions?: boolean;

  /**
   * Behaviour when new users are added to the group:
   *
   * @remarks
   *
   * * `autoallow`
   *
   * * `pending`
   *
   *
   *
   * Only relevant if `adminGroupIds` has items.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "newGroupMemberAcceptance" })
  newGroupMemberAcceptance?: ConfigRoomRequestNewGroupMemberAcceptanceEnum;

  /**
   * Retention period for deleted nodes in days
   */
  @SpeakeasyMetadata()
  @Expose({ name: "recycleBinRetentionPeriod" })
  recycleBinRetentionPeriod?: number;

  /**
   * Take over existing permissions
   */
  @SpeakeasyMetadata()
  @Expose({ name: "takeOverPermissions" })
  takeOverPermissions?: boolean;
}
