// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodEnum - Set the likelihood of a finding to a fixed value.
type GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodEnum string

const (
	GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodEnumLikelihoodUnspecified GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodEnum = "LIKELIHOOD_UNSPECIFIED"
	GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodEnumVeryUnlikely          GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodEnum = "VERY_UNLIKELY"
	GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodEnumUnlikely              GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodEnum = "UNLIKELY"
	GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodEnumPossible              GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodEnum = "POSSIBLE"
	GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodEnumLikely                GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodEnum = "LIKELY"
	GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodEnumVeryLikely            GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodEnum = "VERY_LIKELY"
)

func (e *GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "LIKELIHOOD_UNSPECIFIED":
		fallthrough
	case "VERY_UNLIKELY":
		fallthrough
	case "UNLIKELY":
		fallthrough
	case "POSSIBLE":
		fallthrough
	case "LIKELY":
		fallthrough
	case "VERY_LIKELY":
		*e = GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodEnum: %s", s)
	}
}

// GooglePrivacyDlpV2LikelihoodAdjustment - Message for specifying an adjustment to the likelihood of a finding as part of a detection rule.
type GooglePrivacyDlpV2LikelihoodAdjustment struct {
	// Set the likelihood of a finding to a fixed value.
	FixedLikelihood *GooglePrivacyDlpV2LikelihoodAdjustmentFixedLikelihoodEnum `json:"fixedLikelihood,omitempty"`
	// Increase or decrease the likelihood by the specified number of levels. For example, if a finding would be `POSSIBLE` without the detection rule and `relative_likelihood` is 1, then it is upgraded to `LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`. Likelihood may never drop below `VERY_UNLIKELY` or exceed `VERY_LIKELY`, so applying an adjustment of 1 followed by an adjustment of -1 when base likelihood is `VERY_LIKELY` will result in a final likelihood of `LIKELY`.
	RelativeLikelihood *int `json:"relativeLikelihood,omitempty"`
}
