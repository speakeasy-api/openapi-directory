<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Migration - A migration.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Migration
{
	#[\JMS\Serializer\Annotation\SerializedName('archive_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $archiveUrl = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * $exclude
     * 
     * @var ?array<mixed> $exclude
     */
	#[\JMS\Serializer\Annotation\SerializedName('exclude')]
    #[\JMS\Serializer\Annotation\Type('array<mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $exclude = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('exclude_attachments')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $excludeAttachments;
    
	#[\JMS\Serializer\Annotation\SerializedName('exclude_git_data')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $excludeGitData;
    
	#[\JMS\Serializer\Annotation\SerializedName('exclude_metadata')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $excludeMetadata;
    
	#[\JMS\Serializer\Annotation\SerializedName('exclude_owner_projects')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $excludeOwnerProjects;
    
	#[\JMS\Serializer\Annotation\SerializedName('exclude_releases')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $excludeReleases;
    
	#[\JMS\Serializer\Annotation\SerializedName('guid')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $guid;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
	#[\JMS\Serializer\Annotation\SerializedName('lock_repositories')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $lockRepositories;
    
	#[\JMS\Serializer\Annotation\SerializedName('node_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $nodeId;
    
	#[\JMS\Serializer\Annotation\SerializedName('org_metadata_only')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    public bool $orgMetadataOnly;
    
    /**
     * A GitHub user.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser $owner
     */
	#[\JMS\Serializer\Annotation\SerializedName('owner')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser')]
    public NullableSimpleUser $owner;
    
    /**
     * The repositories included in the migration. Only returned for export migrations.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\Repository> $repositories
     */
	#[\JMS\Serializer\Annotation\SerializedName('repositories')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Repository>')]
    public array $repositories;
    
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $state;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $updatedAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
	public function __construct()
	{
		$this->archiveUrl = null;
		$this->createdAt = new \DateTime();
		$this->exclude = null;
		$this->excludeAttachments = false;
		$this->excludeGitData = false;
		$this->excludeMetadata = false;
		$this->excludeOwnerProjects = false;
		$this->excludeReleases = false;
		$this->guid = "";
		$this->id = 0;
		$this->lockRepositories = false;
		$this->nodeId = "";
		$this->orgMetadataOnly = false;
		$this->owner = new \OpenAPI\OpenAPI\Models\Shared\NullableSimpleUser();
		$this->repositories = [];
		$this->state = "";
		$this->updatedAt = new \DateTime();
		$this->url = "";
	}
}
