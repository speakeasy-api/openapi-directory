/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.time.LocalDate;

/**
 * PricingSchedule - Pricing Schedule
 */
public class PricingSchedule {
    /**
     * Placement cap cost option.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("capCostOption")
    public PricingScheduleCapCostOptionEnum capCostOption;

    public PricingSchedule withCapCostOption(PricingScheduleCapCostOptionEnum capCostOption) {
        this.capCostOption = capCostOption;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("endDate")
    public LocalDate endDate;

    public PricingSchedule withEndDate(LocalDate endDate) {
        this.endDate = endDate;
        return this;
    }
    
    /**
     * Whether this placement is flighted. If true, pricing periods will be computed automatically.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flighted")
    public Boolean flighted;

    public PricingSchedule withFlighted(Boolean flighted) {
        this.flighted = flighted;
        return this;
    }
    
    /**
     * Floodlight activity ID associated with this placement. This field should be set when placement pricing type is set to PRICING_TYPE_CPA.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("floodlightActivityId")
    public String floodlightActivityId;

    public PricingSchedule withFloodlightActivityId(String floodlightActivityId) {
        this.floodlightActivityId = floodlightActivityId;
        return this;
    }
    
    /**
     * Pricing periods for this placement.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pricingPeriods")
    public PricingSchedulePricingPeriod[] pricingPeriods;

    public PricingSchedule withPricingPeriods(PricingSchedulePricingPeriod[] pricingPeriods) {
        this.pricingPeriods = pricingPeriods;
        return this;
    }
    
    /**
     * Placement pricing type. This field is required on insertion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("pricingType")
    public PricingSchedulePricingTypeEnum pricingType;

    public PricingSchedule withPricingType(PricingSchedulePricingTypeEnum pricingType) {
        this.pricingType = pricingType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("startDate")
    public LocalDate startDate;

    public PricingSchedule withStartDate(LocalDate startDate) {
        this.startDate = startDate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("testingStartDate")
    public LocalDate testingStartDate;

    public PricingSchedule withTestingStartDate(LocalDate testingStartDate) {
        this.testingStartDate = testingStartDate;
        return this;
    }
    
    public PricingSchedule(){}
}
