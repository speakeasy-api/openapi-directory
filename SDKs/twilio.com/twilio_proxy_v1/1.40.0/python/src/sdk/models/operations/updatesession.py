"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import proxy_v1_service_session as shared_proxy_v1_service_session
from ..shared import session_enum_status_enum as shared_session_enum_status_enum
from datetime import datetime
from typing import Optional

UPDATE_SESSION_SERVERS = [
	"https://proxy.twilio.com",
]


@dataclasses.dataclass
class UpdateSessionSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class UpdateSessionUpdateSessionRequest:
    
    date_expiry: Optional[datetime] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'DateExpiry' }})
    r"""The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date when the Session should expire. If this is value is present, it overrides the `ttl` value."""  
    status: Optional[shared_session_enum_status_enum.SessionEnumStatusEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Status' }})  
    ttl: Optional[int] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Ttl' }})
    r"""The time, in seconds, when the session will expire. The time is measured from the last Session create or the Session's last Interaction."""  
    

@dataclasses.dataclass
class UpdateSessionRequest:
    
    service_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'ServiceSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the parent [Service](https://www.twilio.com/docs/proxy/api/service) of the resource to update."""  
    sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'Sid', 'style': 'simple', 'explode': False }})
    r"""The Twilio-provided string that uniquely identifies the Session resource to update."""  
    request_body: Optional[UpdateSessionUpdateSessionRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class UpdateSessionResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    proxy_v1_service_session: Optional[shared_proxy_v1_service_session.ProxyV1ServiceSession] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    