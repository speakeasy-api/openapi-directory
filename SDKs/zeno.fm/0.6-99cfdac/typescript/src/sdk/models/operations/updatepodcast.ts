/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class UpdatePodcastRequestBodyFileLogo extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, content=true" })
  content: Uint8Array;

  @SpeakeasyMetadata({ data: "multipart_form, name=file_logo" })
  fileLogo: string;
}

export class UpdatePodcastRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "multipart_form, file=true" })
  fileLogo?: UpdatePodcastRequestBodyFileLogo;

  /**
   * Podcast model
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=podcast;json=true" })
  podcast: shared.Podcast;
}

export class UpdatePodcastRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody?: UpdatePodcastRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=podcastKey",
  })
  podcastKey: string;
}

export class UpdatePodcastResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
