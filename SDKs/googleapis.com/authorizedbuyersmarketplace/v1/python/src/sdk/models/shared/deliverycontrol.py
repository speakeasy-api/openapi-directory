"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import frequencycap as shared_frequencycap
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DeliveryControlCompanionDeliveryTypeEnum(str, Enum):
    r"""Output only. Specifies roadblocking in a main companion lineitem."""
    COMPANION_DELIVERY_TYPE_UNSPECIFIED = 'COMPANION_DELIVERY_TYPE_UNSPECIFIED'
    DELIVERY_OPTIONAL = 'DELIVERY_OPTIONAL'
    DELIVERY_AT_LEAST_ONE = 'DELIVERY_AT_LEAST_ONE'
    DELIVERY_ALL = 'DELIVERY_ALL'

class DeliveryControlCreativeRotationTypeEnum(str, Enum):
    r"""Output only. Specifies strategy to use for selecting a creative when multiple creatives of the same size are available."""
    CREATIVE_ROTATION_TYPE_UNSPECIFIED = 'CREATIVE_ROTATION_TYPE_UNSPECIFIED'
    ROTATION_EVEN = 'ROTATION_EVEN'
    ROTATION_OPTIMIZED = 'ROTATION_OPTIMIZED'
    ROTATION_MANUAL = 'ROTATION_MANUAL'
    ROTATION_SEQUENTIAL = 'ROTATION_SEQUENTIAL'

class DeliveryControlDeliveryRateTypeEnum(str, Enum):
    r"""Output only. Specifies how the impression delivery will be paced."""
    DELIVERY_RATE_TYPE_UNSPECIFIED = 'DELIVERY_RATE_TYPE_UNSPECIFIED'
    EVENLY = 'EVENLY'
    FRONT_LOADED = 'FRONT_LOADED'
    AS_FAST_AS_POSSIBLE = 'AS_FAST_AS_POSSIBLE'

class DeliveryControlRoadblockingTypeEnum(str, Enum):
    r"""Output only. Specifies the roadblocking type in display creatives."""
    ROADBLOCKING_TYPE_UNSPECIFIED = 'ROADBLOCKING_TYPE_UNSPECIFIED'
    ONLY_ONE = 'ONLY_ONE'
    ONE_OR_MORE = 'ONE_OR_MORE'
    AS_MANY_AS_POSSIBLE = 'AS_MANY_AS_POSSIBLE'
    ALL_ROADBLOCK = 'ALL_ROADBLOCK'
    CREATIVE_SET = 'CREATIVE_SET'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DeliveryControl:
    r"""Message contains details about how the deal will be paced."""
    
    companion_delivery_type: Optional[DeliveryControlCompanionDeliveryTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('companionDeliveryType'), 'exclude': lambda f: f is None }})
    r"""Output only. Specifies roadblocking in a main companion lineitem."""  
    creative_rotation_type: Optional[DeliveryControlCreativeRotationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creativeRotationType'), 'exclude': lambda f: f is None }})
    r"""Output only. Specifies strategy to use for selecting a creative when multiple creatives of the same size are available."""  
    delivery_rate_type: Optional[DeliveryControlDeliveryRateTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('deliveryRateType'), 'exclude': lambda f: f is None }})
    r"""Output only. Specifies how the impression delivery will be paced."""  
    frequency_cap: Optional[list[shared_frequencycap.FrequencyCap]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('frequencyCap'), 'exclude': lambda f: f is None }})
    r"""Output only. Specifies any frequency caps. Cannot be filtered within ListDealsRequest."""  
    roadblocking_type: Optional[DeliveryControlRoadblockingTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('roadblockingType'), 'exclude': lambda f: f is None }})
    r"""Output only. Specifies the roadblocking type in display creatives."""  
    