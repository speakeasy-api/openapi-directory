"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PersonalDocumentDataTypeEnum(str, Enum):
    r"""The type of the document. Possible values: **ID**, **DRIVINGLICENSE**, **PASSPORT**, **SOCIALSECURITY**, **VISA**.
    
    To delete an existing entry for a document `type`, send only the `type` field in your request.
    """
    DRIVINGLICENSE = 'DRIVINGLICENSE'
    ID = 'ID'
    PASSPORT = 'PASSPORT'
    SOCIALSECURITY = 'SOCIALSECURITY'
    VISA = 'VISA'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PersonalDocumentData:
    
    type: PersonalDocumentDataTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    r"""The type of the document. Possible values: **ID**, **DRIVINGLICENSE**, **PASSPORT**, **SOCIALSECURITY**, **VISA**.
    
    To delete an existing entry for a document `type`, send only the `type` field in your request.
    """  
    expiration_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('expirationDate'), 'exclude': lambda f: f is None }})
    r"""The expiry date of the document,
     in ISO-8601 YYYY-MM-DD format. For example, **2000-01-31**.
    """  
    issuer_country: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('issuerCountry'), 'exclude': lambda f: f is None }})
    r"""The country where the document was issued, in the two-character
    [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format. For example, **NL**.
    """  
    issuer_state: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('issuerState'), 'exclude': lambda f: f is None }})
    r"""The state where the document was issued (if applicable)."""  
    number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number'), 'exclude': lambda f: f is None }})
    r"""The number in the document."""  
    