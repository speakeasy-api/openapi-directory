/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class InstanceProperties {
    /**
     * Specifies options for controlling advanced machine features. Options that would traditionally be configured in a BIOS belong here. Features that require operating system support may have corresponding entries in the GuestOsFeatures of an Image (e.g., whether or not the OS in the Image supports nested virtualization being enabled or disabled).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advancedMachineFeatures")
    public AdvancedMachineFeatures advancedMachineFeatures;
    public InstanceProperties withAdvancedMachineFeatures(AdvancedMachineFeatures advancedMachineFeatures) {
        this.advancedMachineFeatures = advancedMachineFeatures;
        return this;
    }
    
    /**
     * Enables instances created based on these properties to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If unsure, leave this set to false. See the Enable IP forwarding documentation for more information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("canIpForward")
    public Boolean canIpForward;
    public InstanceProperties withCanIpForward(Boolean canIpForward) {
        this.canIpForward = canIpForward;
        return this;
    }
    
    /**
     * A set of Confidential Instance options.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("confidentialInstanceConfig")
    public ConfidentialInstanceConfig confidentialInstanceConfig;
    public InstanceProperties withConfidentialInstanceConfig(ConfidentialInstanceConfig confidentialInstanceConfig) {
        this.confidentialInstanceConfig = confidentialInstanceConfig;
        return this;
    }
    
    /**
     * An optional text description for the instances that are created from these properties.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public InstanceProperties withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * An array of disks that are associated with the instances that are created from these properties.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disks")
    public AttachedDisk[] disks;
    public InstanceProperties withDisks(AttachedDisk[] disks) {
        this.disks = disks;
        return this;
    }
    
    /**
     * A list of guest accelerator cards' type and count to use for instances created from these properties.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("guestAccelerators")
    public AcceleratorConfig[] guestAccelerators;
    public InstanceProperties withGuestAccelerators(AcceleratorConfig[] guestAccelerators) {
        this.guestAccelerators = guestAccelerators;
        return this;
    }
    
    /**
     * KeyRevocationActionType of the instance. Supported options are "STOP" and "NONE". The default value is "NONE" if it is not specified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keyRevocationActionType")
    public InstancePropertiesKeyRevocationActionTypeEnum keyRevocationActionType;
    public InstanceProperties withKeyRevocationActionType(InstancePropertiesKeyRevocationActionTypeEnum keyRevocationActionType) {
        this.keyRevocationActionType = keyRevocationActionType;
        return this;
    }
    
    /**
     * Labels to apply to instances that are created from these properties.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public InstanceProperties withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * The machine type to use for instances that are created from these properties.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("machineType")
    public String machineType;
    public InstanceProperties withMachineType(String machineType) {
        this.machineType = machineType;
        return this;
    }
    
    /**
     * A metadata key/value entry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public Metadata metadata;
    public InstanceProperties withMetadata(Metadata metadata) {
        this.metadata = metadata;
        return this;
    }
    
    /**
     * Minimum cpu/platform to be used by instances. The instance may be scheduled on the specified or newer cpu/platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge". For more information, read Specifying a Minimum CPU Platform.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minCpuPlatform")
    public String minCpuPlatform;
    public InstanceProperties withMinCpuPlatform(String minCpuPlatform) {
        this.minCpuPlatform = minCpuPlatform;
        return this;
    }
    
    /**
     * An array of network access configurations for this interface.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkInterfaces")
    public NetworkInterface[] networkInterfaces;
    public InstanceProperties withNetworkInterfaces(NetworkInterface[] networkInterfaces) {
        this.networkInterfaces = networkInterfaces;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkPerformanceConfig")
    public NetworkPerformanceConfig networkPerformanceConfig;
    public InstanceProperties withNetworkPerformanceConfig(NetworkPerformanceConfig networkPerformanceConfig) {
        this.networkPerformanceConfig = networkPerformanceConfig;
        return this;
    }
    
    /**
     * The private IPv6 google access type for VMs. If not specified, use INHERIT_FROM_SUBNETWORK as default. Note that for MachineImage, this is not supported yet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateIpv6GoogleAccess")
    public InstancePropertiesPrivateIpv6GoogleAccessEnum privateIpv6GoogleAccess;
    public InstanceProperties withPrivateIpv6GoogleAccess(InstancePropertiesPrivateIpv6GoogleAccessEnum privateIpv6GoogleAccess) {
        this.privateIpv6GoogleAccess = privateIpv6GoogleAccess;
        return this;
    }
    
    /**
     * Specifies the reservations that this instance can consume from.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reservationAffinity")
    public ReservationAffinity reservationAffinity;
    public InstanceProperties withReservationAffinity(ReservationAffinity reservationAffinity) {
        this.reservationAffinity = reservationAffinity;
        return this;
    }
    
    /**
     * Resource manager tags to be bound to the instance. Tag keys and values have the same definition as resource manager tags. Keys must be in the format `tagKeys/{tag_key_id}`, and values are in the format `tagValues/456`. The field is ignored (both PUT &amp; PATCH) when empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourceManagerTags")
    public java.util.Map<String, String> resourceManagerTags;
    public InstanceProperties withResourceManagerTags(java.util.Map<String, String> resourceManagerTags) {
        this.resourceManagerTags = resourceManagerTags;
        return this;
    }
    
    /**
     * Resource policies (names, not URLs) applied to instances created from these properties. Note that for MachineImage, this is not supported yet.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resourcePolicies")
    public String[] resourcePolicies;
    public InstanceProperties withResourcePolicies(String[] resourcePolicies) {
        this.resourcePolicies = resourcePolicies;
        return this;
    }
    
    /**
     * Sets the scheduling options for an Instance.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scheduling")
    public Scheduling scheduling;
    public InstanceProperties withScheduling(Scheduling scheduling) {
        this.scheduling = scheduling;
        return this;
    }
    
    /**
     * A list of service accounts with specified scopes. Access tokens for these service accounts are available to the instances that are created from these properties. Use metadata queries to obtain the access tokens for these instances.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccounts")
    public ServiceAccount[] serviceAccounts;
    public InstanceProperties withServiceAccounts(ServiceAccount[] serviceAccounts) {
        this.serviceAccounts = serviceAccounts;
        return this;
    }
    
    /**
     * A set of Shielded Instance options.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("shieldedInstanceConfig")
    public ShieldedInstanceConfig shieldedInstanceConfig;
    public InstanceProperties withShieldedInstanceConfig(ShieldedInstanceConfig shieldedInstanceConfig) {
        this.shieldedInstanceConfig = shieldedInstanceConfig;
        return this;
    }
    
    /**
     * A set of instance tags.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public Tags tags;
    public InstanceProperties withTags(Tags tags) {
        this.tags = tags;
        return this;
    }
    
}
