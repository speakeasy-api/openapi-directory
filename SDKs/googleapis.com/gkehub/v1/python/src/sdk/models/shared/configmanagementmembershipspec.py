"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import configmanagementconfigsync as shared_configmanagementconfigsync
from ..shared import configmanagementhierarchycontrollerconfig as shared_configmanagementhierarchycontrollerconfig
from ..shared import configmanagementpolicycontroller as shared_configmanagementpolicycontroller
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConfigManagementMembershipSpec:
    r"""**Anthos Config Management**: Configuration for a single cluster. Intended to parallel the ConfigManagement CR."""
    
    config_sync: Optional[shared_configmanagementconfigsync.ConfigManagementConfigSync] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configSync'), 'exclude': lambda f: f is None }})
    r"""Configuration for Config Sync"""  
    hierarchy_controller: Optional[shared_configmanagementhierarchycontrollerconfig.ConfigManagementHierarchyControllerConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hierarchyController'), 'exclude': lambda f: f is None }})
    r"""Configuration for Hierarchy Controller"""  
    policy_controller: Optional[shared_configmanagementpolicycontroller.ConfigManagementPolicyController] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('policyController'), 'exclude': lambda f: f is None }})
    r"""Configuration for Policy Controller"""  
    version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version'), 'exclude': lambda f: f is None }})
    r"""Version of ACM installed."""  
    