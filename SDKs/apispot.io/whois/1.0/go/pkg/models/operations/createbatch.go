// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateBatchRequestBodyOperationEnum string

const (
	CreateBatchRequestBodyOperationEnumWhois CreateBatchRequestBodyOperationEnum = "whois"
	CreateBatchRequestBodyOperationEnumCheck CreateBatchRequestBodyOperationEnum = "check"
)

func (e *CreateBatchRequestBodyOperationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "whois":
		fallthrough
	case "check":
		*e = CreateBatchRequestBodyOperationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBatchRequestBodyOperationEnum: %s", s)
	}
}

type CreateBatchRequestBodyOptionsFormatEnum string

const (
	CreateBatchRequestBodyOptionsFormatEnumRaw       CreateBatchRequestBodyOptionsFormatEnum = "raw"
	CreateBatchRequestBodyOptionsFormatEnumFormatted CreateBatchRequestBodyOptionsFormatEnum = "formatted"
	CreateBatchRequestBodyOptionsFormatEnumJSON      CreateBatchRequestBodyOptionsFormatEnum = "json"
)

func (e *CreateBatchRequestBodyOptionsFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "raw":
		fallthrough
	case "formatted":
		fallthrough
	case "json":
		*e = CreateBatchRequestBodyOptionsFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateBatchRequestBodyOptionsFormatEnum: %s", s)
	}
}

type CreateBatchRequestBodyOptions struct {
	Format *CreateBatchRequestBodyOptionsFormatEnum `json:"format,omitempty"`
}

type CreateBatchRequestBody struct {
	Domains   []string                            `json:"domains"`
	Operation CreateBatchRequestBodyOperationEnum `json:"operation"`
	Options   *CreateBatchRequestBodyOptions      `json:"options,omitempty"`
}

type CreateBatchRequest struct {
	Request CreateBatchRequestBody `request:"mediaType=application/json"`
}

type CreateBatchResponse struct {
	// OK
	Batch       *shared.Batch
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
