// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ExportContentTypeEnum - Content type representing data being exported (e.g. application/vnd.climate.acrsi.geojson).
type ExportContentTypeEnum string

const (
	ExportContentTypeEnumApplicationVndClimateAcrsiGeojson   ExportContentTypeEnum = "application/vnd.climate.acrsi.geojson"
	ExportContentTypeEnumApplicationVndClimateHarvestGeojson ExportContentTypeEnum = "application/vnd.climate.harvest.geojson"
)

func (e *ExportContentTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "application/vnd.climate.acrsi.geojson":
		fallthrough
	case "application/vnd.climate.harvest.geojson":
		*e = ExportContentTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ExportContentTypeEnum: %s", s)
	}
}

// Export - Client request to export data from a user.
type Export struct {
	// Content type representing data being exported (e.g. application/vnd.climate.acrsi.geojson).
	ContentType ExportContentTypeEnum `json:"contentType"`
	// Additional specifications for a client's data export request, dependent on the content type.
	Definition map[string]interface{} `json:"definition,omitempty"`
}
