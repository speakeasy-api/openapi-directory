// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ChangeRequestChangesRules struct {
	Action *string `json:"action,omitempty"`
}

type ChangeRequestChanges struct {
	Rules []ChangeRequestChangesRules `json:"rules,omitempty"`
}

type ChangeRequestStatusEnum string

const (
	ChangeRequestStatusEnumDeployed          ChangeRequestStatusEnum = "Deployed"
	ChangeRequestStatusEnumPendingDeployment ChangeRequestStatusEnum = "Pending deployment"
	ChangeRequestStatusEnumCancelled         ChangeRequestStatusEnum = "Cancelled"
	ChangeRequestStatusEnumPendingValidation ChangeRequestStatusEnum = "Pending validation"
	ChangeRequestStatusEnumOpen              ChangeRequestStatusEnum = "Open"
)

func (e *ChangeRequestStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Deployed":
		fallthrough
	case "Pending deployment":
		fallthrough
	case "Cancelled":
		fallthrough
	case "Pending validation":
		fallthrough
	case "Open":
		*e = ChangeRequestStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ChangeRequestStatusEnum: %s", s)
	}
}

// ChangeRequest - Content of the change request
type ChangeRequest struct {
	Acceptable  *bool                    `json:"acceptable,omitempty"`
	Changes     *ChangeRequestChanges    `json:"changes,omitempty"`
	CreatedBy   *string                  `json:"created by,omitempty"`
	Description *string                  `json:"description,omitempty"`
	ID          *int64                   `json:"id,omitempty"`
	Name        *string                  `json:"name,omitempty"`
	Status      *ChangeRequestStatusEnum `json:"status,omitempty"`
}
