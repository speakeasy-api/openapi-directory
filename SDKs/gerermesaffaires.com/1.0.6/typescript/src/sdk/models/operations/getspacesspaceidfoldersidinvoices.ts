/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * name of value for sort
 */
export enum GetSpacesSpaceIdFoldersIdInvoicesSortNameEnum {
  DueDate = "DueDate",
  PaymentDate = "PaymentDate",
  InvoiceDate = "InvoiceDate",
  InclVAT = "InclVAT",
  Contracting = "Contracting",
  Title = "Title",
}

/**
 * order of sort (if absent default is asc)
 */
export enum GetSpacesSpaceIdFoldersIdInvoicesSortOrderEnum {
  Asc = "asc",
  Desc = "desc",
}

export class GetSpacesSpaceIdFoldersIdInvoicesRequest extends SpeakeasyBase {
  /**
   * value of AccountedOn (boolean available but not range)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AccountedOn",
  })
  accountedOn?: string;

  /**
   * amount before VAT
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=BeforeVAT",
  })
  beforeVAT?: number;

  /**
   * date range of the documents
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Date" })
  date?: string;

  /**
   * date due payment
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DueDate",
  })
  dueDate?: string;

  /**
   * json object to filter extend data
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Extend",
  })
  extend?: string;

  /**
   * date range of attachment
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=FolderDate",
  })
  folderDate?: string;

  /**
   * amount incl. VAT
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=InclVAT",
  })
  inclVAT?: number;

  /**
   * range date of invoice
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=InvoiceDate",
  })
  invoiceDate?: string;

  /**
   * Number of the invoice
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Number",
  })
  number?: string;

  /**
   * date of payment (boolean and valid available)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PaymentDate",
  })
  paymentDate?: string;

  /**
   * index range of the results
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Range" })
  range?: string;

  /**
   * name of value for sort
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SortName",
  })
  sortName?: GetSpacesSpaceIdFoldersIdInvoicesSortNameEnum;

  /**
   * order of sort (if absent default is asc)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SortOrder",
  })
  sortOrder?: GetSpacesSpaceIdFoldersIdInvoicesSortOrderEnum;

  /**
   * Title of the documents
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Title" })
  title?: string;

  /**
   * If present returns also the data extend
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=WithExtend",
  })
  withExtend?: string;

  /**
   * Id of the folder
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * Id of the space
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=spaceId",
  })
  spaceId: string;
}

export class GetSpacesSpaceIdFoldersIdInvoicesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A list of invoices of the folder  (if the folder is the root folder (Customers of Providers) the FolderId, the Designation and the Contracting  of the contract are also returned)
   */
  @SpeakeasyMetadata({ elemType: shared.Invoice })
  getSpacesSpaceIdFoldersIdInvoices200ApplicationJSONAllOfs?: shared.Invoice[];
}
