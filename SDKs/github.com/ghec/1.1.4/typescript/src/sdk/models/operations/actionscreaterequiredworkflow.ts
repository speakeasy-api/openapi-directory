/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Enable the required workflow for all repositories or selected repositories in the organization.
 */
export enum ActionsCreateRequiredWorkflowRequestBodyScopeEnum {
  Selected = "selected",
  All = "all",
}

export class ActionsCreateRequiredWorkflowRequestBody extends SpeakeasyBase {
  /**
   * The ID of the repository that contains the workflow file.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repository_id" })
  repositoryId: string;

  /**
   * Enable the required workflow for all repositories or selected repositories in the organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  scope?: ActionsCreateRequiredWorkflowRequestBodyScopeEnum;

  /**
   * A list of repository IDs where you want to enable the required workflow. You can only provide a list of repository ids when the `scope` is set to `selected`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selected_repository_ids" })
  selectedRepositoryIds?: number[];

  /**
   * Path of the workflow file to be configured as a required workflow.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "workflow_file_path" })
  workflowFilePath: string;
}

export class ActionsCreateRequiredWorkflowRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ActionsCreateRequiredWorkflowRequestBody;

  /**
   * The organization name. The name is not case sensitive.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=org" })
  org: string;
}

export class ActionsCreateRequiredWorkflowResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  requiredWorkflow?: shared.RequiredWorkflow;

  /**
   * Validation failed, or the endpoint has been spammed.
   */
  @SpeakeasyMetadata()
  validationErrorSimple?: shared.ValidationErrorSimple;
}
