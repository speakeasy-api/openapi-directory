<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CheckSuite - A suite of checks performed on the code of a given code change
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CheckSuite
{
	#[\JMS\Serializer\Annotation\SerializedName('after')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $after;
    
    /**
     * GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\NullableIntegration $app
     */
	#[\JMS\Serializer\Annotation\SerializedName('app')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\NullableIntegration')]
    public NullableIntegration $app;
    
	#[\JMS\Serializer\Annotation\SerializedName('before')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $before;
    
	#[\JMS\Serializer\Annotation\SerializedName('check_runs_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $checkRunsUrl;
    
	#[\JMS\Serializer\Annotation\SerializedName('conclusion')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CheckSuiteConclusionEnum>')]
    public CheckSuiteConclusionEnum $conclusion;
    
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('head_branch')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $headBranch;
    
    /**
     * Simple Commit
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\SimpleCommit $headCommit
     */
	#[\JMS\Serializer\Annotation\SerializedName('head_commit')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\SimpleCommit')]
    public SimpleCommit $headCommit;
    
    /**
     * The SHA of the head commit that is being checked.
     * 
     * @var string $headSha
     */
	#[\JMS\Serializer\Annotation\SerializedName('head_sha')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $headSha;
    
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $id;
    
	#[\JMS\Serializer\Annotation\SerializedName('latest_check_runs_count')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $latestCheckRunsCount;
    
	#[\JMS\Serializer\Annotation\SerializedName('node_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $nodeId;
    
    /**
     * $pullRequests
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\PullRequestMinimal> $pullRequests
     */
	#[\JMS\Serializer\Annotation\SerializedName('pull_requests')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\PullRequestMinimal>')]
    public array $pullRequests;
    
    /**
     * Minimal Repository
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\MinimalRepository $repository
     */
	#[\JMS\Serializer\Annotation\SerializedName('repository')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\MinimalRepository')]
    public MinimalRepository $repository;
    
	#[\JMS\Serializer\Annotation\SerializedName('rerequestable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $rerequestable = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('runs_rerequestable')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $runsRerequestable = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CheckSuiteStatusEnum>')]
    public CheckSuiteStatusEnum $status;
    
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $updatedAt;
    
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $url;
    
	public function __construct()
	{
		$this->after = "";
		$this->app = new \OpenAPI\OpenAPI\Models\Shared\NullableIntegration();
		$this->before = "";
		$this->checkRunsUrl = "";
		$this->conclusion = \OpenAPI\OpenAPI\Models\Shared\CheckSuiteConclusionEnum::SUCCESS;
		$this->createdAt = new \DateTime();
		$this->headBranch = "";
		$this->headCommit = new \OpenAPI\OpenAPI\Models\Shared\SimpleCommit();
		$this->headSha = "";
		$this->id = 0;
		$this->latestCheckRunsCount = 0;
		$this->nodeId = "";
		$this->pullRequests = [];
		$this->repository = new \OpenAPI\OpenAPI\Models\Shared\MinimalRepository();
		$this->rerequestable = null;
		$this->runsRerequestable = null;
		$this->status = \OpenAPI\OpenAPI\Models\Shared\CheckSuiteStatusEnum::QUEUED;
		$this->updatedAt = new \DateTime();
		$this->url = "";
	}
}
