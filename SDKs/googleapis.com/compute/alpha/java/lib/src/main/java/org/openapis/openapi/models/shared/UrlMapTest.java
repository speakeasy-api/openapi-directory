/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UrlMapTest - Message for the expected URL mappings.
 */
public class UrlMapTest {
    /**
     * The weight to use for the supplied host and path when using advanced routing rules that involve traffic splitting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("backendServiceWeight")
    public Long backendServiceWeight;

    public UrlMapTest withBackendServiceWeight(Long backendServiceWeight) {
        this.backendServiceWeight = backendServiceWeight;
        return this;
    }
    
    /**
     * Description of this test case.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public UrlMapTest withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The expected output URL evaluated by the load balancer containing the scheme, host, path and query parameters. For rules that forward requests to backends, the test passes only when expectedOutputUrl matches the request forwarded by the load balancer to backends. For rules with urlRewrite, the test verifies that the forwarded request matches hostRewrite and pathPrefixRewrite in the urlRewrite action. When service is specified, expectedOutputUrl`s scheme is ignored. For rules with urlRedirect, the test passes only if expectedOutputUrl matches the URL in the load balancer's redirect response. If urlRedirect specifies https_redirect, the test passes only if the scheme in expectedOutputUrl is also set to HTTPS. If urlRedirect specifies strip_query, the test passes only if expectedOutputUrl does not contain any query parameters. expectedOutputUrl is optional when service is specified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expectedOutputUrl")
    public String expectedOutputUrl;

    public UrlMapTest withExpectedOutputUrl(String expectedOutputUrl) {
        this.expectedOutputUrl = expectedOutputUrl;
        return this;
    }
    
    /**
     * For rules with urlRedirect, the test passes only if expectedRedirectResponseCode matches the HTTP status code in load balancer's redirect response. expectedRedirectResponseCode cannot be set when service is set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expectedRedirectResponseCode")
    public Integer expectedRedirectResponseCode;

    public UrlMapTest withExpectedRedirectResponseCode(Integer expectedRedirectResponseCode) {
        this.expectedRedirectResponseCode = expectedRedirectResponseCode;
        return this;
    }
    
    /**
     * The expected URL that should be redirected to for the host and path being tested. [Deprecated] This field is deprecated. Use expected_output_url instead.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expectedUrlRedirect")
    public String expectedUrlRedirect;

    public UrlMapTest withExpectedUrlRedirect(String expectedUrlRedirect) {
        this.expectedUrlRedirect = expectedUrlRedirect;
        return this;
    }
    
    /**
     * HTTP headers for this request. If headers contains a host header, then host must also match the header value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("headers")
    public UrlMapTestHeader[] headers;

    public UrlMapTest withHeaders(UrlMapTestHeader[] headers) {
        this.headers = headers;
        return this;
    }
    
    /**
     * Host portion of the URL. If headers contains a host header, then host must also match the header value.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("host")
    public String host;

    public UrlMapTest withHost(String host) {
        this.host = host;
        return this;
    }
    
    /**
     * Path portion of the URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public String path;

    public UrlMapTest withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * Expected BackendService or BackendBucket resource the given URL should be mapped to. The service field cannot be set if expectedRedirectResponseCode is set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("service")
    public String service;

    public UrlMapTest withService(String service) {
        this.service = service;
        return this;
    }
    
    public UrlMapTest(){}
}
