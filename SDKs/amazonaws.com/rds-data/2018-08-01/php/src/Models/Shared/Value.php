<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Value - <p>Contains the value of a column.</p> <pre><code> &lt;note&gt; &lt;p&gt;This data structure is only used with the deprecated &lt;code&gt;ExecuteSql&lt;/code&gt; operation. Use the &lt;code&gt;BatchExecuteStatement&lt;/code&gt; or &lt;code&gt;ExecuteStatement&lt;/code&gt; operation instead.&lt;/p&gt; &lt;/note&gt; </code></pre>
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Value
{
    /**
     * $arrayValues
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Value> $arrayValues
     */
	#[\JMS\Serializer\Annotation\SerializedName('arrayValues')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Value>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $arrayValues = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('bigIntValue')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $bigIntValue = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('bitValue')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $bitValue = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('blobValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $blobValue = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('doubleValue')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $doubleValue = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('intValue')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $intValue = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('isNull')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isNull = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('realValue')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $realValue = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('stringValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stringValue = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('structValue')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\StructValue')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StructValue $structValue = null;
    
	public function __construct()
	{
		$this->arrayValues = null;
		$this->bigIntValue = null;
		$this->bitValue = null;
		$this->blobValue = null;
		$this->doubleValue = null;
		$this->intValue = null;
		$this->isNull = null;
		$this->realValue = null;
		$this->stringValue = null;
		$this->structValue = null;
	}
}
