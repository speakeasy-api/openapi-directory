/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * DirectDeal - The configuration data for an Ad Exchange direct deal.
 */
public class DirectDeal {
    /**
     * The account id of the buyer this deal is for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public Integer accountId;

    public DirectDeal withAccountId(Integer accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The name of the advertiser this deal is for.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advertiser")
    public String advertiser;

    public DirectDeal withAdvertiser(String advertiser) {
        this.advertiser = advertiser;
        return this;
    }
    
    /**
     * Whether the publisher for this deal is eligible for alcohol ads.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowsAlcohol")
    public Boolean allowsAlcohol;

    public DirectDeal withAllowsAlcohol(Boolean allowsAlcohol) {
        this.allowsAlcohol = allowsAlcohol;
        return this;
    }
    
    /**
     * The account id that this deal was negotiated for. It is either the buyer or the client that this deal was negotiated on behalf of.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buyerAccountId")
    public String buyerAccountId;

    public DirectDeal withBuyerAccountId(String buyerAccountId) {
        this.buyerAccountId = buyerAccountId;
        return this;
    }
    
    /**
     * The currency code that applies to the fixed_cpm value. If not set then assumed to be USD.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currencyCode")
    public String currencyCode;

    public DirectDeal withCurrencyCode(String currencyCode) {
        this.currencyCode = currencyCode;
        return this;
    }
    
    /**
     * The deal type such as programmatic reservation or fixed price and so on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dealTier")
    public String dealTier;

    public DirectDeal withDealTier(String dealTier) {
        this.dealTier = dealTier;
        return this;
    }
    
    /**
     * End time for when this deal stops being active. If not set then this deal is valid until manually disabled by the publisher. In seconds since the epoch.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endTime")
    public String endTime;

    public DirectDeal withEndTime(String endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * The fixed price for this direct deal. In cpm micros of currency according to currency_code. If set, then this deal is eligible for the fixed price tier of buying (highest priority, pay exactly the configured fixed price).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fixedCpm")
    public String fixedCpm;

    public DirectDeal withFixedCpm(String fixedCpm) {
        this.fixedCpm = fixedCpm;
        return this;
    }
    
    /**
     * Deal id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public DirectDeal withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Resource type.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public DirectDeal withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Deal name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public DirectDeal withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The minimum price for this direct deal. In cpm micros of currency according to currency_code. If set, then this deal is eligible for the private exchange tier of buying (below fixed price priority, run as a second price auction).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privateExchangeMinCpm")
    public String privateExchangeMinCpm;

    public DirectDeal withPrivateExchangeMinCpm(String privateExchangeMinCpm) {
        this.privateExchangeMinCpm = privateExchangeMinCpm;
        return this;
    }
    
    /**
     * If true, the publisher has opted to have their blocks ignored when a creative is bid with for this deal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("publisherBlocksOverriden")
    public Boolean publisherBlocksOverriden;

    public DirectDeal withPublisherBlocksOverriden(Boolean publisherBlocksOverriden) {
        this.publisherBlocksOverriden = publisherBlocksOverriden;
        return this;
    }
    
    /**
     * The name of the publisher offering this direct deal.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sellerNetwork")
    public String sellerNetwork;

    public DirectDeal withSellerNetwork(String sellerNetwork) {
        this.sellerNetwork = sellerNetwork;
        return this;
    }
    
    /**
     * Start time for when this deal becomes active. If not set then this deal is active immediately upon creation. In seconds since the epoch.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;

    public DirectDeal withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    public DirectDeal(){}
}
