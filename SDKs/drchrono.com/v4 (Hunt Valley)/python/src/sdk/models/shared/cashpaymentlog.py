"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CashPaymentLogActionEnum(str, Enum):
    r"""`C`(Create), `U`(Update), `D`(Delete), `F`(Fill), `A`(Autofill)"""
    C = 'C'
    U = 'U'
    D = 'D'
    F = 'F'
    A = 'A'

class CashPaymentLogPaymentMethodEnum(str, Enum):
    r"""`\\"CASH\\", \\"CHCK\\" for Check, \\"DBIT\\" for Debit, \\"CRDT\\" for Credit Card, \\"AMEX\\" for American Express, \\"VISA\\", \\"MSTR\\" for Mastercard, \\"DISC\\" for Discover, \\"SQR1\\" for Square (legacy), \\"SQRE\\" for Square, \\"PTPA\\" for Patient Payments, \\"ONPT\\" for onpatient, \\"OTHR\\" for Other`"""
    CASH = 'CASH'
    CHCK = 'CHCK'
    DBIT = 'DBIT'
    CRDT = 'CRDT'
    AMEX = 'AMEX'
    VISA = 'VISA'
    MSTR = 'MSTR'
    DISC = 'DISC'
    SQR1 = 'SQR1'
    SQRE = 'SQRE'
    PTPA = 'PTPA'
    ONPT = 'ONPT'
    OTHR = 'OTHR'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CashPaymentLog:
    r"""OK"""
    
    action: Optional[CashPaymentLogActionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('action'), 'exclude': lambda f: f is None }})
    r"""`C`(Create), `U`(Update), `D`(Delete), `F`(Fill), `A`(Autofill)"""  
    amount: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('amount'), 'exclude': lambda f: f is None }})  
    appointment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appointment'), 'exclude': lambda f: f is None }})
    r"""ID of appointment associated with the payment"""  
    created_by: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_by'), 'exclude': lambda f: f is None }})
    r"""ID of user who created the payment"""  
    doctor: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('doctor'), 'exclude': lambda f: f is None }})  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})  
    patient: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('patient'), 'exclude': lambda f: f is None }})  
    payment_method: Optional[CashPaymentLogPaymentMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('payment_method'), 'exclude': lambda f: f is None }})
    r"""`\\"CASH\\", \\"CHCK\\" for Check, \\"DBIT\\" for Debit, \\"CRDT\\" for Credit Card, \\"AMEX\\" for American Express, \\"VISA\\", \\"MSTR\\" for Mastercard, \\"DISC\\" for Discover, \\"SQR1\\" for Square (legacy), \\"SQRE\\" for Square, \\"PTPA\\" for Patient Payments, \\"ONPT\\" for onpatient, \\"OTHR\\" for Other`"""  
    source: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('source'), 'exclude': lambda f: f is None }})  
    updated_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updated_at'), 'exclude': lambda f: f is None }})  
    