"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import stadium as shared_stadium
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Game:
    
    away_assisted_tackles: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayAssistedTackles'), 'exclude': lambda f: f is None }})  
    away_blocked_kick_return_touchdowns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayBlockedKickReturnTouchdowns'), 'exclude': lambda f: f is None }})  
    away_blocked_kick_return_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayBlockedKickReturnYards'), 'exclude': lambda f: f is None }})  
    away_blocked_kicks: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayBlockedKicks'), 'exclude': lambda f: f is None }})  
    away_completion_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayCompletionPercentage'), 'exclude': lambda f: f is None }})  
    away_extra_point_kicking_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayExtraPointKickingAttempts'), 'exclude': lambda f: f is None }})  
    away_extra_point_kicking_conversions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayExtraPointKickingConversions'), 'exclude': lambda f: f is None }})  
    away_extra_point_passing_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayExtraPointPassingAttempts'), 'exclude': lambda f: f is None }})  
    away_extra_point_passing_conversions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayExtraPointPassingConversions'), 'exclude': lambda f: f is None }})  
    away_extra_point_rushing_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayExtraPointRushingAttempts'), 'exclude': lambda f: f is None }})  
    away_extra_point_rushing_conversions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayExtraPointRushingConversions'), 'exclude': lambda f: f is None }})  
    away_extra_points_had_blocked: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayExtraPointsHadBlocked'), 'exclude': lambda f: f is None }})  
    away_field_goal_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayFieldGoalAttempts'), 'exclude': lambda f: f is None }})  
    away_field_goal_return_touchdowns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayFieldGoalReturnTouchdowns'), 'exclude': lambda f: f is None }})  
    away_field_goal_return_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayFieldGoalReturnYards'), 'exclude': lambda f: f is None }})  
    away_field_goals_had_blocked: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayFieldGoalsHadBlocked'), 'exclude': lambda f: f is None }})  
    away_field_goals_made: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayFieldGoalsMade'), 'exclude': lambda f: f is None }})  
    away_first_downs: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayFirstDowns'), 'exclude': lambda f: f is None }})  
    away_first_downs_by_passing: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayFirstDownsByPassing'), 'exclude': lambda f: f is None }})  
    away_first_downs_by_penalty: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayFirstDownsByPenalty'), 'exclude': lambda f: f is None }})  
    away_first_downs_by_rushing: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayFirstDownsByRushing'), 'exclude': lambda f: f is None }})  
    away_fourth_down_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayFourthDownAttempts'), 'exclude': lambda f: f is None }})  
    away_fourth_down_conversions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayFourthDownConversions'), 'exclude': lambda f: f is None }})  
    away_fourth_down_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayFourthDownPercentage'), 'exclude': lambda f: f is None }})  
    away_fumble_return_touchdowns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayFumbleReturnTouchdowns'), 'exclude': lambda f: f is None }})  
    away_fumble_return_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayFumbleReturnYards'), 'exclude': lambda f: f is None }})  
    away_fumbles: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayFumbles'), 'exclude': lambda f: f is None }})  
    away_fumbles_forced: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayFumblesForced'), 'exclude': lambda f: f is None }})  
    away_fumbles_lost: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayFumblesLost'), 'exclude': lambda f: f is None }})  
    away_fumbles_recovered: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayFumblesRecovered'), 'exclude': lambda f: f is None }})  
    away_giveaways: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayGiveaways'), 'exclude': lambda f: f is None }})  
    away_goal_to_go_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayGoalToGoAttempts'), 'exclude': lambda f: f is None }})  
    away_goal_to_go_conversions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayGoalToGoConversions'), 'exclude': lambda f: f is None }})  
    away_interception_returns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayInterceptionReturns'), 'exclude': lambda f: f is None }})  
    away_interception_return_touchdowns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayInterceptionReturnTouchdowns'), 'exclude': lambda f: f is None }})  
    away_interception_return_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayInterceptionReturnYards'), 'exclude': lambda f: f is None }})  
    away_kickoffs: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayKickoffs'), 'exclude': lambda f: f is None }})  
    away_kickoffs_in_end_zone: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayKickoffsInEndZone'), 'exclude': lambda f: f is None }})  
    away_kickoff_touchbacks: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayKickoffTouchbacks'), 'exclude': lambda f: f is None }})  
    away_kick_return_long: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayKickReturnLong'), 'exclude': lambda f: f is None }})  
    away_kick_returns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayKickReturns'), 'exclude': lambda f: f is None }})  
    away_kick_return_touchdowns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayKickReturnTouchdowns'), 'exclude': lambda f: f is None }})  
    away_kick_return_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayKickReturnYards'), 'exclude': lambda f: f is None }})  
    away_offensive_plays: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayOffensivePlays'), 'exclude': lambda f: f is None }})  
    away_offensive_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayOffensiveYards'), 'exclude': lambda f: f is None }})  
    away_offensive_yards_per_play: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayOffensiveYardsPerPlay'), 'exclude': lambda f: f is None }})  
    away_passer_rating: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPasserRating'), 'exclude': lambda f: f is None }})  
    away_passes_defended: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPassesDefended'), 'exclude': lambda f: f is None }})  
    away_passing_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPassingAttempts'), 'exclude': lambda f: f is None }})  
    away_passing_completions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPassingCompletions'), 'exclude': lambda f: f is None }})  
    away_passing_interceptions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPassingInterceptions'), 'exclude': lambda f: f is None }})  
    away_passing_touchdowns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPassingTouchdowns'), 'exclude': lambda f: f is None }})  
    away_passing_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPassingYards'), 'exclude': lambda f: f is None }})  
    away_passing_yards_per_attempt: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPassingYardsPerAttempt'), 'exclude': lambda f: f is None }})  
    away_passing_yards_per_completion: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPassingYardsPerCompletion'), 'exclude': lambda f: f is None }})  
    away_penalties: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPenalties'), 'exclude': lambda f: f is None }})  
    away_penalty_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPenaltyYards'), 'exclude': lambda f: f is None }})  
    away_punt_average: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPuntAverage'), 'exclude': lambda f: f is None }})  
    away_punt_net_average: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPuntNetAverage'), 'exclude': lambda f: f is None }})  
    away_punt_net_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPuntNetYards'), 'exclude': lambda f: f is None }})  
    away_punt_return_long: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPuntReturnLong'), 'exclude': lambda f: f is None }})  
    away_punt_returns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPuntReturns'), 'exclude': lambda f: f is None }})  
    away_punt_return_touchdowns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPuntReturnTouchdowns'), 'exclude': lambda f: f is None }})  
    away_punt_return_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPuntReturnYards'), 'exclude': lambda f: f is None }})  
    away_punts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPunts'), 'exclude': lambda f: f is None }})  
    away_punts_had_blocked: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPuntsHadBlocked'), 'exclude': lambda f: f is None }})  
    away_punt_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayPuntYards'), 'exclude': lambda f: f is None }})  
    away_quarterback_hits: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayQuarterbackHits'), 'exclude': lambda f: f is None }})  
    away_red_zone_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayRedZoneAttempts'), 'exclude': lambda f: f is None }})  
    away_red_zone_conversions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayRedZoneConversions'), 'exclude': lambda f: f is None }})  
    away_return_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayReturnYards'), 'exclude': lambda f: f is None }})  
    away_rushing_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayRushingAttempts'), 'exclude': lambda f: f is None }})  
    away_rushing_touchdowns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayRushingTouchdowns'), 'exclude': lambda f: f is None }})  
    away_rushing_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayRushingYards'), 'exclude': lambda f: f is None }})  
    away_rushing_yards_per_attempt: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayRushingYardsPerAttempt'), 'exclude': lambda f: f is None }})  
    away_sacks: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwaySacks'), 'exclude': lambda f: f is None }})  
    away_sack_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwaySackYards'), 'exclude': lambda f: f is None }})  
    away_safeties: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwaySafeties'), 'exclude': lambda f: f is None }})  
    away_score: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayScore'), 'exclude': lambda f: f is None }})  
    away_score_overtime: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayScoreOvertime'), 'exclude': lambda f: f is None }})  
    away_score_quarter1: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayScoreQuarter1'), 'exclude': lambda f: f is None }})  
    away_score_quarter2: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayScoreQuarter2'), 'exclude': lambda f: f is None }})  
    away_score_quarter3: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayScoreQuarter3'), 'exclude': lambda f: f is None }})  
    away_score_quarter4: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayScoreQuarter4'), 'exclude': lambda f: f is None }})  
    away_solo_tackles: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwaySoloTackles'), 'exclude': lambda f: f is None }})  
    away_tackles_for_loss: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayTacklesForLoss'), 'exclude': lambda f: f is None }})  
    away_takeaways: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayTakeaways'), 'exclude': lambda f: f is None }})  
    away_team: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayTeam'), 'exclude': lambda f: f is None }})  
    away_third_down_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayThirdDownAttempts'), 'exclude': lambda f: f is None }})  
    away_third_down_conversions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayThirdDownConversions'), 'exclude': lambda f: f is None }})  
    away_third_down_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayThirdDownPercentage'), 'exclude': lambda f: f is None }})  
    away_time_of_possession: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayTimeOfPossession'), 'exclude': lambda f: f is None }})  
    away_times_sacked: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayTimesSacked'), 'exclude': lambda f: f is None }})  
    away_times_sacked_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayTimesSackedYards'), 'exclude': lambda f: f is None }})  
    away_touchdowns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayTouchdowns'), 'exclude': lambda f: f is None }})  
    away_turnover_differential: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayTurnoverDifferential'), 'exclude': lambda f: f is None }})  
    away_two_point_conversion_returns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AwayTwoPointConversionReturns'), 'exclude': lambda f: f is None }})  
    date_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Date'), 'exclude': lambda f: f is None }})  
    game_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GameID'), 'exclude': lambda f: f is None }})  
    game_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('GameKey'), 'exclude': lambda f: f is None }})  
    home_assisted_tackles: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeAssistedTackles'), 'exclude': lambda f: f is None }})  
    home_blocked_kick_return_touchdowns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeBlockedKickReturnTouchdowns'), 'exclude': lambda f: f is None }})  
    home_blocked_kick_return_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeBlockedKickReturnYards'), 'exclude': lambda f: f is None }})  
    home_blocked_kicks: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeBlockedKicks'), 'exclude': lambda f: f is None }})  
    home_completion_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeCompletionPercentage'), 'exclude': lambda f: f is None }})  
    home_extra_point_kicking_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeExtraPointKickingAttempts'), 'exclude': lambda f: f is None }})  
    home_extra_point_kicking_conversions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeExtraPointKickingConversions'), 'exclude': lambda f: f is None }})  
    home_extra_point_passing_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeExtraPointPassingAttempts'), 'exclude': lambda f: f is None }})  
    home_extra_point_passing_conversions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeExtraPointPassingConversions'), 'exclude': lambda f: f is None }})  
    home_extra_point_rushing_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeExtraPointRushingAttempts'), 'exclude': lambda f: f is None }})  
    home_extra_point_rushing_conversions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeExtraPointRushingConversions'), 'exclude': lambda f: f is None }})  
    home_extra_points_had_blocked: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeExtraPointsHadBlocked'), 'exclude': lambda f: f is None }})  
    home_field_goal_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeFieldGoalAttempts'), 'exclude': lambda f: f is None }})  
    home_field_goal_return_touchdowns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeFieldGoalReturnTouchdowns'), 'exclude': lambda f: f is None }})  
    home_field_goal_return_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeFieldGoalReturnYards'), 'exclude': lambda f: f is None }})  
    home_field_goals_had_blocked: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeFieldGoalsHadBlocked'), 'exclude': lambda f: f is None }})  
    home_field_goals_made: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeFieldGoalsMade'), 'exclude': lambda f: f is None }})  
    home_first_downs: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeFirstDowns'), 'exclude': lambda f: f is None }})  
    home_first_downs_by_passing: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeFirstDownsByPassing'), 'exclude': lambda f: f is None }})  
    home_first_downs_by_penalty: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeFirstDownsByPenalty'), 'exclude': lambda f: f is None }})  
    home_first_downs_by_rushing: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeFirstDownsByRushing'), 'exclude': lambda f: f is None }})  
    home_fourth_down_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeFourthDownAttempts'), 'exclude': lambda f: f is None }})  
    home_fourth_down_conversions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeFourthDownConversions'), 'exclude': lambda f: f is None }})  
    home_fourth_down_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeFourthDownPercentage'), 'exclude': lambda f: f is None }})  
    home_fumble_return_touchdowns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeFumbleReturnTouchdowns'), 'exclude': lambda f: f is None }})  
    home_fumble_return_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeFumbleReturnYards'), 'exclude': lambda f: f is None }})  
    home_fumbles: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeFumbles'), 'exclude': lambda f: f is None }})  
    home_fumbles_forced: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeFumblesForced'), 'exclude': lambda f: f is None }})  
    home_fumbles_lost: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeFumblesLost'), 'exclude': lambda f: f is None }})  
    home_fumbles_recovered: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeFumblesRecovered'), 'exclude': lambda f: f is None }})  
    home_giveaways: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeGiveaways'), 'exclude': lambda f: f is None }})  
    home_goal_to_go_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeGoalToGoAttempts'), 'exclude': lambda f: f is None }})  
    home_goal_to_go_conversions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeGoalToGoConversions'), 'exclude': lambda f: f is None }})  
    home_interception_returns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeInterceptionReturns'), 'exclude': lambda f: f is None }})  
    home_interception_return_touchdowns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeInterceptionReturnTouchdowns'), 'exclude': lambda f: f is None }})  
    home_interception_return_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeInterceptionReturnYards'), 'exclude': lambda f: f is None }})  
    home_kickoffs: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeKickoffs'), 'exclude': lambda f: f is None }})  
    home_kickoffs_in_end_zone: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeKickoffsInEndZone'), 'exclude': lambda f: f is None }})  
    home_kickoff_touchbacks: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeKickoffTouchbacks'), 'exclude': lambda f: f is None }})  
    home_kick_return_long: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeKickReturnLong'), 'exclude': lambda f: f is None }})  
    home_kick_returns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeKickReturns'), 'exclude': lambda f: f is None }})  
    home_kick_return_touchdowns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeKickReturnTouchdowns'), 'exclude': lambda f: f is None }})  
    home_kick_return_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeKickReturnYards'), 'exclude': lambda f: f is None }})  
    home_offensive_plays: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeOffensivePlays'), 'exclude': lambda f: f is None }})  
    home_offensive_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeOffensiveYards'), 'exclude': lambda f: f is None }})  
    home_offensive_yards_per_play: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeOffensiveYardsPerPlay'), 'exclude': lambda f: f is None }})  
    home_passer_rating: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePasserRating'), 'exclude': lambda f: f is None }})  
    home_passes_defended: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePassesDefended'), 'exclude': lambda f: f is None }})  
    home_passing_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePassingAttempts'), 'exclude': lambda f: f is None }})  
    home_passing_completions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePassingCompletions'), 'exclude': lambda f: f is None }})  
    home_passing_interceptions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePassingInterceptions'), 'exclude': lambda f: f is None }})  
    home_passing_touchdowns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePassingTouchdowns'), 'exclude': lambda f: f is None }})  
    home_passing_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePassingYards'), 'exclude': lambda f: f is None }})  
    home_passing_yards_per_attempt: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePassingYardsPerAttempt'), 'exclude': lambda f: f is None }})  
    home_passing_yards_per_completion: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePassingYardsPerCompletion'), 'exclude': lambda f: f is None }})  
    home_penalties: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePenalties'), 'exclude': lambda f: f is None }})  
    home_penalty_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePenaltyYards'), 'exclude': lambda f: f is None }})  
    home_punt_average: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePuntAverage'), 'exclude': lambda f: f is None }})  
    home_punt_net_average: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePuntNetAverage'), 'exclude': lambda f: f is None }})  
    home_punt_net_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePuntNetYards'), 'exclude': lambda f: f is None }})  
    home_punt_return_long: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePuntReturnLong'), 'exclude': lambda f: f is None }})  
    home_punt_returns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePuntReturns'), 'exclude': lambda f: f is None }})  
    home_punt_return_touchdowns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePuntReturnTouchdowns'), 'exclude': lambda f: f is None }})  
    home_punt_return_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePuntReturnYards'), 'exclude': lambda f: f is None }})  
    home_punts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePunts'), 'exclude': lambda f: f is None }})  
    home_punts_had_blocked: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePuntsHadBlocked'), 'exclude': lambda f: f is None }})  
    home_punt_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomePuntYards'), 'exclude': lambda f: f is None }})  
    home_quarterback_hits: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeQuarterbackHits'), 'exclude': lambda f: f is None }})  
    home_red_zone_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeRedZoneAttempts'), 'exclude': lambda f: f is None }})  
    home_red_zone_conversions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeRedZoneConversions'), 'exclude': lambda f: f is None }})  
    home_return_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeReturnYards'), 'exclude': lambda f: f is None }})  
    home_rushing_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeRushingAttempts'), 'exclude': lambda f: f is None }})  
    home_rushing_touchdowns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeRushingTouchdowns'), 'exclude': lambda f: f is None }})  
    home_rushing_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeRushingYards'), 'exclude': lambda f: f is None }})  
    home_rushing_yards_per_attempt: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeRushingYardsPerAttempt'), 'exclude': lambda f: f is None }})  
    home_sacks: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeSacks'), 'exclude': lambda f: f is None }})  
    home_sack_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeSackYards'), 'exclude': lambda f: f is None }})  
    home_safeties: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeSafeties'), 'exclude': lambda f: f is None }})  
    home_score: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeScore'), 'exclude': lambda f: f is None }})  
    home_score_overtime: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeScoreOvertime'), 'exclude': lambda f: f is None }})  
    home_score_quarter1: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeScoreQuarter1'), 'exclude': lambda f: f is None }})  
    home_score_quarter2: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeScoreQuarter2'), 'exclude': lambda f: f is None }})  
    home_score_quarter3: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeScoreQuarter3'), 'exclude': lambda f: f is None }})  
    home_score_quarter4: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeScoreQuarter4'), 'exclude': lambda f: f is None }})  
    home_solo_tackles: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeSoloTackles'), 'exclude': lambda f: f is None }})  
    home_tackles_for_loss: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeTacklesForLoss'), 'exclude': lambda f: f is None }})  
    home_takeaways: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeTakeaways'), 'exclude': lambda f: f is None }})  
    home_team: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeTeam'), 'exclude': lambda f: f is None }})  
    home_third_down_attempts: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeThirdDownAttempts'), 'exclude': lambda f: f is None }})  
    home_third_down_conversions: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeThirdDownConversions'), 'exclude': lambda f: f is None }})  
    home_third_down_percentage: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeThirdDownPercentage'), 'exclude': lambda f: f is None }})  
    home_time_of_possession: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeTimeOfPossession'), 'exclude': lambda f: f is None }})  
    home_times_sacked: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeTimesSacked'), 'exclude': lambda f: f is None }})  
    home_times_sacked_yards: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeTimesSackedYards'), 'exclude': lambda f: f is None }})  
    home_touchdowns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeTouchdowns'), 'exclude': lambda f: f is None }})  
    home_turnover_differential: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeTurnoverDifferential'), 'exclude': lambda f: f is None }})  
    home_two_point_conversion_returns: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HomeTwoPointConversionReturns'), 'exclude': lambda f: f is None }})  
    humidity: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Humidity'), 'exclude': lambda f: f is None }})  
    is_game_over: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IsGameOver'), 'exclude': lambda f: f is None }})  
    over_under: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OverUnder'), 'exclude': lambda f: f is None }})  
    playing_surface: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PlayingSurface'), 'exclude': lambda f: f is None }})  
    point_spread: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PointSpread'), 'exclude': lambda f: f is None }})  
    score_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ScoreID'), 'exclude': lambda f: f is None }})  
    season: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Season'), 'exclude': lambda f: f is None }})  
    season_type: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SeasonType'), 'exclude': lambda f: f is None }})  
    stadium: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Stadium'), 'exclude': lambda f: f is None }})  
    stadium_details: Optional[shared_stadium.Stadium] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StadiumDetails'), 'exclude': lambda f: f is None }})  
    stadium_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('StadiumID'), 'exclude': lambda f: f is None }})  
    temperature: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Temperature'), 'exclude': lambda f: f is None }})  
    total_score: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TotalScore'), 'exclude': lambda f: f is None }})  
    week: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Week'), 'exclude': lambda f: f is None }})  
    wind_speed: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('WindSpeed'), 'exclude': lambda f: f is None }})  
    