// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type MalwareTypeEnum string

const (
	MalwareTypeEnumAdware              MalwareTypeEnum = "ADWARE"
	MalwareTypeEnumBlendedThreat       MalwareTypeEnum = "BLENDED_THREAT"
	MalwareTypeEnumBotnetAgent         MalwareTypeEnum = "BOTNET_AGENT"
	MalwareTypeEnumCoinMiner           MalwareTypeEnum = "COIN_MINER"
	MalwareTypeEnumExploitKit          MalwareTypeEnum = "EXPLOIT_KIT"
	MalwareTypeEnumKeylogger           MalwareTypeEnum = "KEYLOGGER"
	MalwareTypeEnumMacro               MalwareTypeEnum = "MACRO"
	MalwareTypeEnumPotentiallyUnwanted MalwareTypeEnum = "POTENTIALLY_UNWANTED"
	MalwareTypeEnumSpyware             MalwareTypeEnum = "SPYWARE"
	MalwareTypeEnumRansomware          MalwareTypeEnum = "RANSOMWARE"
	MalwareTypeEnumRemoteAccess        MalwareTypeEnum = "REMOTE_ACCESS"
	MalwareTypeEnumRootkit             MalwareTypeEnum = "ROOTKIT"
	MalwareTypeEnumTrojan              MalwareTypeEnum = "TROJAN"
	MalwareTypeEnumVirus               MalwareTypeEnum = "VIRUS"
	MalwareTypeEnumWorm                MalwareTypeEnum = "WORM"
)

func (e *MalwareTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ADWARE":
		fallthrough
	case "BLENDED_THREAT":
		fallthrough
	case "BOTNET_AGENT":
		fallthrough
	case "COIN_MINER":
		fallthrough
	case "EXPLOIT_KIT":
		fallthrough
	case "KEYLOGGER":
		fallthrough
	case "MACRO":
		fallthrough
	case "POTENTIALLY_UNWANTED":
		fallthrough
	case "SPYWARE":
		fallthrough
	case "RANSOMWARE":
		fallthrough
	case "REMOTE_ACCESS":
		fallthrough
	case "ROOTKIT":
		fallthrough
	case "TROJAN":
		fallthrough
	case "VIRUS":
		fallthrough
	case "WORM":
		*e = MalwareTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for MalwareTypeEnum: %s", s)
	}
}
