"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Environment:
    r"""Message containing environment configuration for a Lighthouse run."""
    
    benchmark_index: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('benchmarkIndex'), 'exclude': lambda f: f is None }})
    r"""The benchmark index number that indicates rough device class."""  
    credits: Optional[dict[str, str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('credits'), 'exclude': lambda f: f is None }})
    r"""The version of libraries with which these results were generated. Ex: axe-core."""  
    host_user_agent: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hostUserAgent'), 'exclude': lambda f: f is None }})
    r"""The user agent string of the version of Chrome used."""  
    network_user_agent: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('networkUserAgent'), 'exclude': lambda f: f is None }})
    r"""The user agent string that was sent over the network."""  
    