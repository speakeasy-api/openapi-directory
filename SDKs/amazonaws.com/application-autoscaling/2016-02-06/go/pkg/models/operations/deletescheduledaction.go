// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteScheduledActionXAmzTargetEnum
type DeleteScheduledActionXAmzTargetEnum string

const (
	DeleteScheduledActionXAmzTargetEnumAnyScaleFrontendServiceDeleteScheduledAction DeleteScheduledActionXAmzTargetEnum = "AnyScaleFrontendService.DeleteScheduledAction"
)

func (e DeleteScheduledActionXAmzTargetEnum) ToPointer() *DeleteScheduledActionXAmzTargetEnum {
	return &e
}

func (e *DeleteScheduledActionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AnyScaleFrontendService.DeleteScheduledAction":
		*e = DeleteScheduledActionXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteScheduledActionXAmzTargetEnum: %v", v)
	}
}

type DeleteScheduledActionRequest struct {
	DeleteScheduledActionRequest shared.DeleteScheduledActionRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256            *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential               *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                     *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken            *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders            *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                   DeleteScheduledActionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteScheduledActionResponse struct {
	// ConcurrentUpdateException
	ConcurrentUpdateException interface{}
	ContentType               string
	// Success
	DeleteScheduledActionResponse map[string]interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// ObjectNotFoundException
	ObjectNotFoundException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ValidationException
	ValidationException interface{}
}
