/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class BqmlIterationResult extends SpeakeasyBase {
  /**
   * [Output-only, Beta] Time taken to run the training iteration in milliseconds.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "durationMs" })
  durationMs?: string;

  /**
   * [Output-only, Beta] Eval loss computed on the eval data at the end of the iteration. The eval loss is used for early stopping to avoid overfitting. No eval loss if eval_split_method option is specified as no_split or auto_split with input data size less than 500 rows.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "evalLoss" })
  evalLoss?: number;

  /**
   * [Output-only, Beta] Index of the ML training iteration, starting from zero for each training run.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "index" })
  index?: number;

  /**
   * [Output-only, Beta] Learning rate used for this iteration, it varies for different training iterations if learn_rate_strategy option is not constant.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "learnRate" })
  learnRate?: number;

  /**
   * [Output-only, Beta] Training loss computed on the training data at the end of the iteration. The training loss function is defined by model type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "trainingLoss" })
  trainingLoss?: number;
}
