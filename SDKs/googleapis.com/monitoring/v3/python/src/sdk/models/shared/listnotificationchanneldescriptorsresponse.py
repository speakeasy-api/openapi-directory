"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import notificationchanneldescriptor as shared_notificationchanneldescriptor
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListNotificationChannelDescriptorsResponse:
    r"""The ListNotificationChannelDescriptors response."""
    
    channel_descriptors: Optional[list[shared_notificationchanneldescriptor.NotificationChannelDescriptor]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channelDescriptors'), 'exclude': lambda f: f is None }})
    r"""The monitored resource descriptors supported for the specified project, optionally filtered."""  
    next_page_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextPageToken'), 'exclude': lambda f: f is None }})
    r"""If not empty, indicates that there may be more results that match the request. Use the value in the page_token field in a subsequent request to fetch the next set of results. If empty, all results have been returned."""  
    