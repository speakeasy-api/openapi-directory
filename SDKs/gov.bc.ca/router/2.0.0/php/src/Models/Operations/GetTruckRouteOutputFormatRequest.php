<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetTruckRouteOutputFormatRequest
{
    /**
     * If true, route starts and ends on same side of road as start/end point.Default is false.
     * 
     * @var ?bool $correctSide
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=correctSide')]
    public ?bool $correctSide = null;
    
    /**
     * Routing criteria to optimize (e.g., shortest, fastest). Default is shortest.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetTruckRouteOutputFormatCriteriaEnum $criteria
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=criteria')]
    public ?GetTruckRouteOutputFormatCriteriaEnum $criteria = null;
    
    /**
     * departure date and time in internet timestamp notation as defined in RFC 3339, section 5.6 (e.g., 2019-02-28T11:36:00-08:00);<br> Ignored if time-dependency modules are disabled
     * 
     * @var ?\DateTime $departure
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=departure,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public ?\DateTime $departure = null;
    
    /**
     * A comma-separated list of time-related modules to disable (e.g., sc,tf,ev,td).<br> Module names include:<br> sc – ferry schedules; disabled by default; disabled by default and only suitable for demos<br>tf – historic traffic congestion; disabled by default and only suitable for demos<br>ev – road events; disabled by default and only suitable for demos<br>td – time-dependency; disabling this disables sc, tf, and ev modules<br>tr – turn restrictions; if td is disabled, time-dependent turn restrictions are ignored<br>tc - turn costs (e.g., left turns take longer than right turns)
     * 
     * @var ?string $disable
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=disable')]
    public ?string $disable = null;
    
    /**
     * distance unit of measure (e.g., km, mi). Default is km.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetTruckRouteOutputFormatDistanceUnitEnum $distanceUnit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=distanceUnit')]
    public ?GetTruckRouteOutputFormatDistanceUnitEnum $distanceUnit = null;
    
    /**
     * Format of representation
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetTruckRouteOutputFormatOutputFormatEnum $outputFormat
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=outputFormat')]
    public GetTruckRouteOutputFormatOutputFormatEnum $outputFormat;
    
    /**
     * The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-router/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetTruckRouteOutputFormatOutputSrsEnum $outputSRS
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=outputSRS')]
    public ?GetTruckRouteOutputFormatOutputSrsEnum $outputSRS = null;
    
    /**
     * A comma-separated list of values to identify sections of the route that correspond to truck route sections and non-truck route sections, ferry sections and non-ferry sections, and locality names.  The response includes a partitions attribute, which is an array of objects, each of which has an index (into the route coordinate array) and a value for each of the attributes requested in the partition parameter. Any or all of the following values can be used. <br><br>Partition values:<br> isTruckRoute – Distinguish between truck route sections and non-truck route sections <br> isFerry – Distinguish between ferry sections and non-ferry sections <br> locality – Include the locality name for the route partition
     * 
     * @var ?string $partition
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=partition')]
    public ?string $partition = null;
    
    /**
     * A list of any number of route points in start to end order. See <a href=https://github.com/bcgov/ols-router/blob/gh-pages/glossary.md#points target='_blank'>points</a>
     * 
     * @var string $points
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=points')]
    public string $points;
    
    /**
     * If true, route ends at start point. Default is false.
     * 
     * @var ?bool $roundTrip
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=roundTrip')]
    public ?bool $roundTrip = null;
    
    /**
     * Route description (e.g., Shortest route from 1002 Johnson St, Victoria to 1105 Royal Ave,New Westminster)
     * 
     * @var ?string $routeDescription
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=routeDescription')]
    public ?string $routeDescription = null;
    
    /**
     * The truck route multiplier value is used to multiply the cost of using roads that are not truck routes.
     * 
     * @var ?int $truckRouteMultiplier
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=truckRouteMultiplier')]
    public ?int $truckRouteMultiplier = null;
    
	public function __construct()
	{
		$this->correctSide = null;
		$this->criteria = null;
		$this->departure = null;
		$this->disable = null;
		$this->distanceUnit = null;
		$this->outputFormat = \OpenAPI\OpenAPI\Models\Operations\GetTruckRouteOutputFormatOutputFormatEnum::JSON;
		$this->outputSRS = null;
		$this->partition = null;
		$this->points = "";
		$this->roundTrip = null;
		$this->routeDescription = null;
		$this->truckRouteMultiplier = null;
	}
}
