"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import customvisionerror as shared_customvisionerror
from ..shared import imageprediction as shared_imageprediction
from typing import Optional


@dataclasses.dataclass
class ClassifyImageURLWithNoStoreRawRequest:
    
    project_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'projectId', 'style': 'simple', 'explode': False }})
    r"""The project id."""  
    published_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'publishedName', 'style': 'simple', 'explode': False }})
    r"""Specifies the name of the model to evaluate against."""  
    request_body: bytes = dataclasses.field(metadata={'request': { 'media_type': 'text/xml' }})
    r"""An {Iris.Web.Api.Models.ImageUrl} that contains the url of the image to be evaluated."""  
    application: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'application', 'style': 'form', 'explode': True }})
    r"""Optional. Specifies the name of application using the endpoint."""  
    

@dataclasses.dataclass
class ClassifyImageURLWithNoStoreRawResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    custom_vision_error: Optional[shared_customvisionerror.CustomVisionError] = dataclasses.field(default=None)
    r"""Error response"""  
    image_prediction: Optional[shared_imageprediction.ImagePrediction] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    