/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The spread level for the placement group. <i>Only</i> Outpost placement groups can be spread across hosts.
 */
export enum DescribePlacementGroupsResultPlacementGroupsSpreadLevelEnum {
  Host = "host",
  Rack = "rack",
}

/**
 * The state of the placement group.
 */
export enum DescribePlacementGroupsResultPlacementGroupsStateEnum {
  Pending = "pending",
  Available = "available",
  Deleting = "deleting",
  Deleted = "deleted",
}

/**
 * The placement strategy.
 */
export enum DescribePlacementGroupsResultPlacementGroupsStrategyEnum {
  Cluster = "cluster",
  Spread = "spread",
  Partition = "partition",
}

/**
 * Describes a tag.
 */
export class DescribePlacementGroupsResultPlacementGroupsTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Describes a placement group.
 */
export class DescribePlacementGroupsResultPlacementGroups extends SpeakeasyBase {
  @SpeakeasyMetadata()
  groupArn?: string;

  @SpeakeasyMetadata()
  groupId?: string;

  @SpeakeasyMetadata()
  groupName?: string;

  @SpeakeasyMetadata()
  partitionCount?: number;

  @SpeakeasyMetadata()
  spreadLevel?: DescribePlacementGroupsResultPlacementGroupsSpreadLevelEnum;

  @SpeakeasyMetadata()
  state?: DescribePlacementGroupsResultPlacementGroupsStateEnum;

  @SpeakeasyMetadata()
  strategy?: DescribePlacementGroupsResultPlacementGroupsStrategyEnum;

  @SpeakeasyMetadata({
    elemType: DescribePlacementGroupsResultPlacementGroupsTags,
  })
  tags?: DescribePlacementGroupsResultPlacementGroupsTags[];
}

/**
 * Success
 */
export class DescribePlacementGroupsResult extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: DescribePlacementGroupsResultPlacementGroups })
  placementGroups?: DescribePlacementGroupsResultPlacementGroups[];
}
