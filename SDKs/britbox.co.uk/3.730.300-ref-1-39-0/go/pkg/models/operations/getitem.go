// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetItemPathParams struct {
	// The identifier of the item to load.
	//
	// The custom identifier of an item can be used here if the `use_custom_id` parameter is true.
	//
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

// GetItemExpandEnum - If no value is specified no dependencies are expanded.
//
// If 'children' is specified then the list of any direct children will be expanded. For example
// seasons of a show or episodes of a season.
//
// If 'all' is specified then the parent chain will be expanded along with any child list at each level.
// For example if an episode is specified then its season will be expanded and that season's episode list.
// The season will have its show expanded and the show will have its season list expanded.
//
// The 'all' options is useful when you deep link into a show/season/episode for the first time as
// it provides full context for navigating around the show page. Subsequent navigation around
// children of the show should only need to request expand of children.
//
// If 'ancestors' is specified then only the parent chain is included.
//
// If 'parent' is specified then only the direct parent is included.
//
// If an expand is specified which is not relevant to the item type, it will be ignored.
type GetItemExpandEnum string

const (
	GetItemExpandEnumAll       GetItemExpandEnum = "all"
	GetItemExpandEnumChildren  GetItemExpandEnum = "children"
	GetItemExpandEnumAncestors GetItemExpandEnum = "ancestors"
	GetItemExpandEnumParent    GetItemExpandEnum = "parent"
)

func (e *GetItemExpandEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "children":
		fallthrough
	case "ancestors":
		fallthrough
	case "parent":
		*e = GetItemExpandEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetItemExpandEnum: %s", s)
	}
}

// GetItemSelectSeasonEnum - Given a provided show id, it can be useful to get the details of a child season. This option
// provides a means to return the `first` or `latest` season of a show given the show id.
//
// The `expand` parameter also works here so for example you could land on a show page and request the
// latest season along with `expand=all`. This would then return the detail of the latest season with
// its list of child episode summaries, and also expand the detail of the show with its list of seasons summaries.
//
// Note the `id` parameter must be a show id for this parameter to work correctly.
type GetItemSelectSeasonEnum string

const (
	GetItemSelectSeasonEnumFirst  GetItemSelectSeasonEnum = "first"
	GetItemSelectSeasonEnumLatest GetItemSelectSeasonEnum = "latest"
)

func (e *GetItemSelectSeasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "first":
		fallthrough
	case "latest":
		*e = GetItemSelectSeasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetItemSelectSeasonEnum: %s", s)
	}
}

type GetItemQueryParams struct {
	// The type of device the content is targeting.
	Device *string `queryParam:"style=form,explode=true,name=device"`
	// If no value is specified no dependencies are expanded.
	//
	// If 'children' is specified then the list of any direct children will be expanded. For example
	// seasons of a show or episodes of a season.
	//
	// If 'all' is specified then the parent chain will be expanded along with any child list at each level.
	// For example if an episode is specified then its season will be expanded and that season's episode list.
	// The season will have its show expanded and the show will have its season list expanded.
	//
	// The 'all' options is useful when you deep link into a show/season/episode for the first time as
	// it provides full context for navigating around the show page. Subsequent navigation around
	// children of the show should only need to request expand of children.
	//
	// If 'ancestors' is specified then only the parent chain is included.
	//
	// If 'parent' is specified then only the direct parent is included.
	//
	// If an expand is specified which is not relevant to the item type, it will be ignored.
	//
	Expand *GetItemExpandEnum `queryParam:"style=form,explode=true,name=expand"`
	// The set of opt in feature flags which cause breaking changes to responses.
	//
	// While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses
	// may need to evolve over this time.
	//
	// These feature flags allow clients to select which response formats they expect and avoid breaking
	// clients as these formats evolve under the current major version.
	//
	// ### Flags
	//
	// - `all` - Enable all flags. Useful for testing. _Don't use in production_.
	// - `idp` - Dynamic item detail pages with schedulable rows.
	// - `ldp` - Dynamic list detail pages with schedulable rows.
	// - `hb` - Hubble formatted image urls.
	// - `rpt` - Updated resume point threshold logic.
	// - `cas` - "Custom Asset Search", inlcude `customAssets` in search results.
	// - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page.
	// - `cd` - Custom Destination support.
	//
	// See the `feature-flags.md` for available flag details.
	//
	Ff []shared.FeatureFlagsEnum `queryParam:"style=form,explode=false,name=ff"`
	// Language code for the preferred language to be returned in the response.
	//
	// Parameter value is case-insensitive and should be
	//   - a valid 2 letter language code without region such as en, de
	//   - or with region such as en_us, en_au
	//
	// If undefined then defaults to 'en', unless the server has been configured
	// with a custom default.
	//
	// See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
	//
	Lang *string `queryParam:"style=form,explode=true,name=lang"`
	// The maximum rating (inclusive) of items returned, e.g. 'auoflc-pg'.
	MaxRating *string `queryParam:"style=form,explode=true,name=max_rating"`
	// The list of segments to filter the response by.
	Segments []string `queryParam:"style=form,explode=false,name=segments"`
	// Given a provided show id, it can be useful to get the details of a child season. This option
	// provides a means to return the `first` or `latest` season of a show given the show id.
	//
	// The `expand` parameter also works here so for example you could land on a show page and request the
	// latest season along with `expand=all`. This would then return the detail of the latest season with
	// its list of child episode summaries, and also expand the detail of the show with its list of seasons summaries.
	//
	// Note the `id` parameter must be a show id for this parameter to work correctly.
	//
	SelectSeason *GetItemSelectSeasonEnum `queryParam:"style=form,explode=true,name=select_season"`
	// The active subscription code.
	Sub *string `queryParam:"style=form,explode=true,name=sub"`
	// Set to true when passing a custom Id as the `id` path parameter.
	UseCustomID *bool `queryParam:"style=form,explode=true,name=use_custom_id"`
}

type GetItemRequest struct {
	PathParams  GetItemPathParams
	QueryParams GetItemQueryParams
}

type GetItemResponse struct {
	ContentType string
	// The item requested
	ItemDetail *shared.ItemDetail
	// Bad request.
	ServiceError *shared.ServiceError
	StatusCode   int
	RawResponse  *http.Response
}
