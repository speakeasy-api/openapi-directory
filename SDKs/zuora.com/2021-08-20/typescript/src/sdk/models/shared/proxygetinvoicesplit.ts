/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class ProxyGetInvoiceSplit extends SpeakeasyBase {
  /**
   * The ID of the Zuora user who created the InvoiceSplit object. **Character limit**: 32 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedById" })
  createdById?: string;

  /**
   * The date when the InvoiceSplit object was created. **Character limit**: 29 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdDate?: Date;

  /**
   * Object identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Id" })
  id?: string;

  /**
   *  The ID of the original invoice that the InvoiceSplit object splits. This field becomes read-only after the InvoiceSplit object is created.
   *
   * @remarks
   * **Character limit**: 32 **Values**: a valid invoice ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "InvoiceId" })
  invoiceId?: string;

  /**
   * The ID of the Zuora user who last updated the invoice split. **Character limit**: 32 **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedById" })
  updatedById?: string;

  /**
   * The date when the invoice split was last updated. **Values**: automatically generated
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedDate?: Date;
}
