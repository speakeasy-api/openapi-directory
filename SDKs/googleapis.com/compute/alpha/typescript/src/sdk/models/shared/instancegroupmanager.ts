/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DistributionPolicy } from "./distributionpolicy";
import { InstanceGroupManagerActionsSummary } from "./instancegroupmanageractionssummary";
import { InstanceGroupManagerAllInstancesConfig } from "./instancegroupmanagerallinstancesconfig";
import { InstanceGroupManagerAutoHealingPolicy } from "./instancegroupmanagerautohealingpolicy";
import { InstanceGroupManagerInstanceLifecyclePolicy } from "./instancegroupmanagerinstancelifecyclepolicy";
import { InstanceGroupManagerStandbyPolicy } from "./instancegroupmanagerstandbypolicy";
import { InstanceGroupManagerStatus } from "./instancegroupmanagerstatus";
import { InstanceGroupManagerUpdatePolicy } from "./instancegroupmanagerupdatepolicy";
import { InstanceGroupManagerVersion } from "./instancegroupmanagerversion";
import { NamedPort } from "./namedport";
import { StatefulPolicy } from "./statefulpolicy";
import { Expose, Type } from "class-transformer";

/**
 * The action to perform in case of zone failure. Only one value is supported, NO_FAILOVER. The default is NO_FAILOVER.
 */
export enum InstanceGroupManagerFailoverActionEnum {
  NoFailover = "NO_FAILOVER",
  Unknown = "UNKNOWN",
}

/**
 * Pagination behavior of the listManagedInstances API method for this managed instance group.
 */
export enum InstanceGroupManagerListManagedInstancesResultsEnum {
  Pageless = "PAGELESS",
  Paginated = "PAGINATED",
}

/**
 * Represents a Managed Instance Group resource. An instance group is a collection of VM instances that you can manage as a single entity. For more information, read Instance groups. For zonal Managed Instance Group, use the instanceGroupManagers resource. For regional Managed Instance Group, use the regionInstanceGroupManagers resource.
 */
export class InstanceGroupManager extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "allInstancesConfig" })
  @Type(() => InstanceGroupManagerAllInstancesConfig)
  allInstancesConfig?: InstanceGroupManagerAllInstancesConfig;

  /**
   * The autohealing policy for this managed instance group. You can specify only one value.
   */
  @SpeakeasyMetadata({ elemType: InstanceGroupManagerAutoHealingPolicy })
  @Expose({ name: "autoHealingPolicies" })
  @Type(() => InstanceGroupManagerAutoHealingPolicy)
  autoHealingPolicies?: InstanceGroupManagerAutoHealingPolicy[];

  /**
   * The base instance name to use for instances in this group. The value must be 1-58 characters long. Instances are named by appending a hyphen and a random four-character string to the base instance name. The base instance name must comply with RFC1035.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "baseInstanceName" })
  baseInstanceName?: string;

  /**
   * [Output Only] The creation timestamp for this managed instance group in RFC3339 text format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationTimestamp" })
  creationTimestamp?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "currentActions" })
  @Type(() => InstanceGroupManagerActionsSummary)
  currentActions?: InstanceGroupManagerActionsSummary;

  /**
   * An optional description of this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "distributionPolicy" })
  @Type(() => DistributionPolicy)
  distributionPolicy?: DistributionPolicy;

  /**
   * The action to perform in case of zone failure. Only one value is supported, NO_FAILOVER. The default is NO_FAILOVER.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "failoverAction" })
  failoverAction?: InstanceGroupManagerFailoverActionEnum;

  /**
   * Fingerprint of this resource. This field may be used in optimistic locking. It will be ignored when inserting an InstanceGroupManager. An up-to-date fingerprint must be provided in order to update the InstanceGroupManager, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve an InstanceGroupManager.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fingerprint" })
  fingerprint?: string;

  /**
   * [Output Only] A unique identifier for this resource type. The server generates this identifier.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * [Output Only] The URL of the Instance Group resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instanceGroup" })
  instanceGroup?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instanceLifecyclePolicy" })
  @Type(() => InstanceGroupManagerInstanceLifecyclePolicy)
  instanceLifecyclePolicy?: InstanceGroupManagerInstanceLifecyclePolicy;

  /**
   * The URL of the instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group. The templates for existing instances in the group do not change unless you run recreateInstances, run applyUpdatesToInstances, or set the group's updatePolicy.type to PROACTIVE.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instanceTemplate" })
  instanceTemplate?: string;

  /**
   * [Output Only] The resource type, which is always compute#instanceGroupManager for managed instance groups.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Pagination behavior of the listManagedInstances API method for this managed instance group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "listManagedInstancesResults" })
  listManagedInstancesResults?: InstanceGroupManagerListManagedInstancesResultsEnum;

  /**
   * The name of the managed instance group. The name must be 1-63 characters long, and comply with RFC1035.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Named ports configured for the Instance Groups complementary to this Instance Group Manager.
   */
  @SpeakeasyMetadata({ elemType: NamedPort })
  @Expose({ name: "namedPorts" })
  @Type(() => NamedPort)
  namedPorts?: NamedPort[];

  /**
   * [Output Only] The URL of the region where the managed instance group resides (for regional resources).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;

  /**
   * [Output Only] The URL for this managed instance group. The server defines this URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * [Output Only] Server-defined URL for this resource with the resource id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLinkWithId" })
  selfLinkWithId?: string;

  /**
   * The service account to be used as credentials for all operations performed by the managed instance group on instances. The service accounts needs all permissions required to create and delete instances. By default, the service account {projectNumber}@cloudservices.gserviceaccount.com is used.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceAccount" })
  serviceAccount?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "standbyPolicy" })
  @Type(() => InstanceGroupManagerStandbyPolicy)
  standbyPolicy?: InstanceGroupManagerStandbyPolicy;

  @SpeakeasyMetadata()
  @Expose({ name: "statefulPolicy" })
  @Type(() => StatefulPolicy)
  statefulPolicy?: StatefulPolicy;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  @Type(() => InstanceGroupManagerStatus)
  status?: InstanceGroupManagerStatus;

  /**
   * The URLs for all TargetPool resources to which instances in the instanceGroup field are added. The target pools automatically apply to all of the instances in the managed instance group.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targetPools" })
  targetPools?: string[];

  /**
   * The target number of running instances for this managed instance group. You can reduce this number by using the instanceGroupManager deleteInstances or abandonInstances methods. Resizing the group also changes this number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targetSize" })
  targetSize?: number;

  /**
   * The target number of stopped instances for this managed instance group. This number changes when you: - Stop instance using the stopInstances method or start instances using the startInstances method. - Manually change the targetStoppedSize using the update method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targetStoppedSize" })
  targetStoppedSize?: number;

  /**
   * The target number of suspended instances for this managed instance group. This number changes when you: - Suspend instance using the suspendInstances method or resume instances using the resumeInstances method. - Manually change the targetSuspendedSize using the update method.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targetSuspendedSize" })
  targetSuspendedSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "updatePolicy" })
  @Type(() => InstanceGroupManagerUpdatePolicy)
  updatePolicy?: InstanceGroupManagerUpdatePolicy;

  /**
   * Specifies the instance templates used by this managed instance group to create instances. Each version is defined by an instanceTemplate and a name. Every version can appear at most once per instance group. This field overrides the top-level instanceTemplate field. Read more about the relationships between these fields. Exactly one version must leave the targetSize field unset. That version will be applied to all remaining instances. For more information, read about canary updates.
   */
  @SpeakeasyMetadata({ elemType: InstanceGroupManagerVersion })
  @Expose({ name: "versions" })
  @Type(() => InstanceGroupManagerVersion)
  versions?: InstanceGroupManagerVersion[];

  /**
   * [Output Only] The URL of a zone where the managed instance group is located (for zonal resources).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "zone" })
  zone?: string;
}
