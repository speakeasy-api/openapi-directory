"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateorupdatefixedpricesonpricetableortradepolicyRequestBodyDateRange:
    r"""Period of time when the fixed price will be applied to the SKU."""
    
    from_: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('from') }})
    r"""Start date of the price."""  
    to: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to') }})
    r"""End date of the price."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateorupdatefixedpricesonpricetableortradepolicyRequestBody:
    
    min_quantity: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minQuantity') }})
    r"""The minimum SKU quantity for the fixed price to be applied."""  
    value: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value') }})
    r"""Fixed price value."""  
    date_range: Optional[CreateorupdatefixedpricesonpricetableortradepolicyRequestBodyDateRange] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dateRange'), 'exclude': lambda f: f is None }})
    r"""Period of time when the fixed price will be applied to the SKU."""  
    list_price: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listPrice'), 'exclude': lambda f: f is None }})
    r"""SKU List Fixed Price."""  
    

@dataclasses.dataclass
class CreateorupdatefixedpricesonpricetableortradepolicyRequest:
    
    accept: str = dataclasses.field(metadata={'header': { 'field_name': 'Accept', 'style': 'simple', 'explode': False }})
    r"""HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."""  
    content_type: str = dataclasses.field(metadata={'header': { 'field_name': 'Content-Type', 'style': 'simple', 'explode': False }})
    r"""Describes the type of the content being sent."""  
    item_id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'itemId', 'style': 'simple', 'explode': False }})
    r"""SKU ID."""  
    price_table_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'priceTableId', 'style': 'simple', 'explode': False }})
    r"""SKU **price table** name or **trade policy** ID."""  
    request_body: Optional[list[CreateorupdatefixedpricesonpricetableortradepolicyRequestBody]] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class CreateorupdatefixedpricesonpricetableortradepolicyResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    