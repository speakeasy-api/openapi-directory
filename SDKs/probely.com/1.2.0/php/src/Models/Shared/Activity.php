<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class Activity
{
    /**
     * Type of change:
     * 
     *   * created - First time the issue is found
     *   * comment - User left a comment in the timeline
     *   * found - Found again in a later scan
     *   * changed - One of the parameters of the finding was changed
     *    (e.g. severity)
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ActivityChangeEnum $change
     */
	#[\JMS\Serializer\Annotation\SerializedName('change')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ActivityChangeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ActivityChangeEnum $change = null;
    
    /**
     * Date time of the last change
     * 
     * @var ?\DateTime $changed
     */
	#[\JMS\Serializer\Annotation\SerializedName('changed')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $changed = null;
    
    /**
     * User that last modified the object
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ChangedBy $changedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('changed_by')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ChangedBy')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ChangedBy $changedBy = null;
    
    /**
     * Field that was changed
     * 
     * @var ?string $field
     */
	#[\JMS\Serializer\Annotation\SerializedName('field')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $field = null;
    
    /**
     * Previous value
     * 
     * @var ?string $oldValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('old_value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $oldValue = null;
    
    /**
     * New value
     * 
     * @var ?string $value
     */
	#[\JMS\Serializer\Annotation\SerializedName('value')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $value = null;
    
	public function __construct()
	{
		$this->change = null;
		$this->changed = null;
		$this->changedBy = null;
		$this->field = null;
		$this->oldValue = null;
		$this->value = null;
	}
}
