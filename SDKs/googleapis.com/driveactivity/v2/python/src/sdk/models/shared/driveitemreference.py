"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import drivefolder as shared_drivefolder
from ..shared import folder as shared_folder
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DriveItemReference:
    r"""A lightweight reference to a Drive item, such as a file or folder."""
    
    drive_file: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('driveFile'), 'exclude': lambda f: f is None }})
    r"""A Drive item which is a file."""  
    drive_folder: Optional[shared_drivefolder.DriveFolder] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('driveFolder'), 'exclude': lambda f: f is None }})
    r"""A Drive item which is a folder."""  
    file: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file'), 'exclude': lambda f: f is None }})
    r"""This item is deprecated; please see `DriveFile` instead."""  
    folder: Optional[shared_folder.Folder] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('folder'), 'exclude': lambda f: f is None }})
    r"""This item is deprecated; please see `DriveFolder` instead."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The target Drive item. The format is `items/ITEM_ID`."""  
    title: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('title'), 'exclude': lambda f: f is None }})
    r"""The title of the Drive item."""  
    