"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class REPERTOIREmodifrequestRepertoireEditEnum(str, Enum):
    r"""action à réaliser, \\"add\\" pour l'ajout de numéros, \\"del\\" pour la suppression de numéros"""
    ADD = 'add'
    DEL = 'del'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class REPERTOIREmodifrequest:
    r"""Requête de creation repertoire"""
    
    keyid: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('keyid') }})
    r"""Clé API"""  
    num: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('num') }})
    r"""liste des numéros des téléphone à ajouter ou supprimer"""  
    repertoire_edit: REPERTOIREmodifrequestRepertoireEditEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repertoireEdit') }})
    r"""action à réaliser, \\"add\\" pour l'ajout de numéros, \\"del\\" pour la suppression de numéros"""  
    repertoire_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('repertoireId') }})
    r"""repertoireId du répertoire cible"""  
    champ1: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ1'), 'exclude': lambda f: f is None }})
    r"""Noms des contact"""  
    champ10: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ10'), 'exclude': lambda f: f is None }})
    r"""Champs I des contacts"""  
    champ11: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ11'), 'exclude': lambda f: f is None }})
    r"""Champs J des contacts"""  
    champ12: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ12'), 'exclude': lambda f: f is None }})
    r"""Champs K des contacts"""  
    champ13: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ13'), 'exclude': lambda f: f is None }})
    r"""Champs L des contacts"""  
    champ14: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ14'), 'exclude': lambda f: f is None }})
    r"""Champs M des contacts"""  
    champ15: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ15'), 'exclude': lambda f: f is None }})
    r"""Champs N des contacts"""  
    champ16: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ16'), 'exclude': lambda f: f is None }})
    r"""Champs O des contacts"""  
    champ17: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ17'), 'exclude': lambda f: f is None }})
    r"""Champs P des contacts"""  
    champ18: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ18'), 'exclude': lambda f: f is None }})
    r"""Champs Q des contacts"""  
    champ19: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ19'), 'exclude': lambda f: f is None }})
    r"""Champs R des contacts"""  
    champ2: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ2'), 'exclude': lambda f: f is None }})
    r"""Champs A des contacts"""  
    champ20: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ20'), 'exclude': lambda f: f is None }})
    r"""Champs S des contacts"""  
    champ21: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ21'), 'exclude': lambda f: f is None }})
    r"""Champs T des contacts"""  
    champ22: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ22'), 'exclude': lambda f: f is None }})
    r"""Champs U des contacts"""  
    champ23: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ23'), 'exclude': lambda f: f is None }})
    r"""Champs V des contacts"""  
    champ24: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ24'), 'exclude': lambda f: f is None }})
    r"""Champs W des contacts"""  
    champ25: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ25'), 'exclude': lambda f: f is None }})
    r"""Champs X des contacts"""  
    champ26: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ26'), 'exclude': lambda f: f is None }})
    r"""Champs Y des contacts"""  
    champ27: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ27'), 'exclude': lambda f: f is None }})
    r"""Champs Z des contacts"""  
    champ3: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ3'), 'exclude': lambda f: f is None }})
    r"""Champs B des contacts"""  
    champ4: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ4'), 'exclude': lambda f: f is None }})
    r"""Champs C des contacts"""  
    champ5: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ5'), 'exclude': lambda f: f is None }})
    r"""Champs D des contacts"""  
    champ6: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ6'), 'exclude': lambda f: f is None }})
    r"""Champs E des contacts"""  
    champ7: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ7'), 'exclude': lambda f: f is None }})
    r"""Champs F des contacts"""  
    champ8: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ8'), 'exclude': lambda f: f is None }})
    r"""Champs G des contacts"""  
    champ9: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('champ9'), 'exclude': lambda f: f is None }})
    r"""Champs H des contacts"""  
    