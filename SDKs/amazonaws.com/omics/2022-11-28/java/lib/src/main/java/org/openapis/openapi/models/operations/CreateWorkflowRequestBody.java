/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CreateWorkflowRequestBody {
    /**
     * The URI of a definition for the workflow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("definitionUri")
    public String definitionUri;

    public CreateWorkflowRequestBody withDefinitionUri(String definitionUri) {
        this.definitionUri = definitionUri;
        return this;
    }
    
    /**
     * A ZIP archive for the workflow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("definitionZip")
    public String definitionZip;

    public CreateWorkflowRequestBody withDefinitionZip(String definitionZip) {
        this.definitionZip = definitionZip;
        return this;
    }
    
    /**
     * A description for the workflow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public CreateWorkflowRequestBody withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * An engine for the workflow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("engine")
    public CreateWorkflowRequestBodyEngineEnum engine;

    public CreateWorkflowRequestBody withEngine(CreateWorkflowRequestBodyEngineEnum engine) {
        this.engine = engine;
        return this;
    }
    
    /**
     * The path of the main definition file for the workflow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("main")
    public String main;

    public CreateWorkflowRequestBody withMain(String main) {
        this.main = main;
        return this;
    }
    
    /**
     * A name for the workflow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public CreateWorkflowRequestBody withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A parameter template for the workflow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("parameterTemplate")
    public java.util.Map<String, org.openapis.openapi.models.shared.WorkflowParameter> parameterTemplate;

    public CreateWorkflowRequestBody withParameterTemplate(java.util.Map<String, org.openapis.openapi.models.shared.WorkflowParameter> parameterTemplate) {
        this.parameterTemplate = parameterTemplate;
        return this;
    }
    
    /**
     * To ensure that requests don't run multiple times, specify a unique ID for each request.
     */
    @JsonProperty("requestId")
    public String requestId;

    public CreateWorkflowRequestBody withRequestId(String requestId) {
        this.requestId = requestId;
        return this;
    }
    
    /**
     * A storage capacity for the workflow in gigabytes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storageCapacity")
    public Long storageCapacity;

    public CreateWorkflowRequestBody withStorageCapacity(Long storageCapacity) {
        this.storageCapacity = storageCapacity;
        return this;
    }
    
    /**
     * Tags for the workflow.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tags")
    public java.util.Map<String, String> tags;

    public CreateWorkflowRequestBody withTags(java.util.Map<String, String> tags) {
        this.tags = tags;
        return this;
    }
    
    public CreateWorkflowRequestBody(@JsonProperty("requestId") String requestId) {
        this.requestId = requestId;
  }
}
