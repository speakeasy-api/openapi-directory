// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetV2TasksJSONRequest struct {
	// Filters tasks by the account to which they are associated.
	AccountID []int64 `queryParam:"style=form,explode=false,name=account_id"`
	// Filters tasks by their current state. Valid current_states include: ['scheduled', 'completed'].
	CurrentState []string `queryParam:"style=form,explode=false,name=current_state"`
	// Filters tasks by idempotency key.
	IdempotencyKey *string `queryParam:"style=form,explode=true,name=idempotency_key"`
	// IDs of tasks to fetch.
	Ids []int64 `queryParam:"style=form,explode=false,name=ids"`
	// Whether to include total_pages and total_count in the metadata. Defaults to false
	IncludePagingCounts *bool `queryParam:"style=form,explode=true,name=include_paging_counts"`
	// Specifies whether the max limit of 10k records should be applied to pagination counts. Affects the total_count and total_pages data
	LimitPagingCounts *bool `queryParam:"style=form,explode=true,name=limit_paging_counts"`
	// Filters tasks by locale of the person to which they are associated.
	Locale []string `queryParam:"style=form,explode=false,name=locale"`
	// The current page to fetch results from. Defaults to 1
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// How many records to show per page in the range [1, 100]. Defaults to 25
	PerPage *int64 `queryParam:"style=form,explode=true,name=per_page"`
	// Filters tasks by the person to which they are associated.
	PersonID []int64 `queryParam:"style=form,explode=false,name=person_id"`
	// Key to sort on, must be one of: due_date, due_at. Defaults to due_date
	SortBy *string `queryParam:"style=form,explode=true,name=sort_by"`
	// Direction to sort in, must be one of: ASC, DESC. Defaults to ASC
	SortDirection *string `queryParam:"style=form,explode=true,name=sort_direction"`
	// Filters tasks by their task type. Valid task_types include: ['call', 'email', 'general'].
	TaskType []string `queryParam:"style=form,explode=false,name=task_type"`
	// Filters tasks by time interval. Valid time_intervals include: ['overdue', 'today', 'tomorrow', 'this_week', 'next_week'].
	TimeIntervalFilter *string `queryParam:"style=form,explode=true,name=time_interval_filter"`
	// Filters tasks by the user to which they are assigned.
	UserID []int64 `queryParam:"style=form,explode=false,name=user_id"`
}

type GetV2TasksJSONResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
