"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import groupentity as shared_groupentity
from typing import Optional


@dataclasses.dataclass
class PatchGroupsIDRequestBody:
    
    admin_ids: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'admin_ids' }})
    r"""A list of group admin user ids. If sent as a string, should be comma-delimited."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'name' }})
    r"""Group name."""  
    notes: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'notes' }})
    r"""Group notes."""  
    user_ids: Optional[str] = dataclasses.field(default=None, metadata={'multipart_form': { 'field_name': 'user_ids' }})
    r"""A list of user ids. If sent as a string, should be comma-delimited."""  
    

@dataclasses.dataclass
class PatchGroupsIDRequest:
    
    id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Group ID."""  
    request_body: Optional[PatchGroupsIDRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'multipart/form-data' }})  
    

@dataclasses.dataclass
class PatchGroupsIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    group_entity: Optional[shared_groupentity.GroupEntity] = dataclasses.field(default=None)
    r"""The Groups object."""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    