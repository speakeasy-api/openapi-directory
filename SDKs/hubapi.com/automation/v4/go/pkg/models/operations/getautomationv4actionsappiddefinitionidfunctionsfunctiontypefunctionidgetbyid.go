// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type GetAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeFunctionIDGetByIDSecurity struct {
	DeveloperHapikey string `security:"scheme,type=apiKey,subtype=query,name=hapikey"`
}

// GetAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeFunctionIDGetByIDFunctionTypeEnum - The type of function. This determines when the function will be called.
type GetAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeFunctionIDGetByIDFunctionTypeEnum string

const (
	GetAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeFunctionIDGetByIDFunctionTypeEnumPreActionExecution GetAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeFunctionIDGetByIDFunctionTypeEnum = "PRE_ACTION_EXECUTION"
	GetAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeFunctionIDGetByIDFunctionTypeEnumPreFetchOptions    GetAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeFunctionIDGetByIDFunctionTypeEnum = "PRE_FETCH_OPTIONS"
	GetAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeFunctionIDGetByIDFunctionTypeEnumPostFetchOptions   GetAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeFunctionIDGetByIDFunctionTypeEnum = "POST_FETCH_OPTIONS"
)

func (e GetAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeFunctionIDGetByIDFunctionTypeEnum) ToPointer() *GetAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeFunctionIDGetByIDFunctionTypeEnum {
	return &e
}

func (e *GetAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeFunctionIDGetByIDFunctionTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PRE_ACTION_EXECUTION":
		fallthrough
	case "PRE_FETCH_OPTIONS":
		fallthrough
	case "POST_FETCH_OPTIONS":
		*e = GetAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeFunctionIDGetByIDFunctionTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeFunctionIDGetByIDFunctionTypeEnum: %v", v)
	}
}

type GetAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeFunctionIDGetByIDRequest struct {
	AppID int `pathParam:"style=simple,explode=false,name=appId"`
	// The ID of the custom workflow action.
	DefinitionID string `pathParam:"style=simple,explode=false,name=definitionId"`
	// The ID qualifier for the function. This is used to specify which input field a function is associated with for `PRE_FETCH_OPTIONS` and `POST_FETCH_OPTIONS` function types.
	FunctionID string `pathParam:"style=simple,explode=false,name=functionId"`
	// The type of function. This determines when the function will be called.
	FunctionType GetAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeFunctionIDGetByIDFunctionTypeEnum `pathParam:"style=simple,explode=false,name=functionType"`
}

type GetAutomationV4ActionsAppIDDefinitionIDFunctionsFunctionTypeFunctionIDGetByIDResponse struct {
	// successful operation
	ActionFunction *shared.ActionFunction
	Body           []byte
	ContentType    string
	StatusCode     int
	RawResponse    *http.Response
}
