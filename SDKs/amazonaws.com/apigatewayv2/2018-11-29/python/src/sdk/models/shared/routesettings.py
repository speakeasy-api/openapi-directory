"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class RouteSettingsLoggingLevelEnum(str, Enum):
    r"""Specifies the logging level for this route: INFO, ERROR, or OFF. This property affects the log entries pushed to Amazon CloudWatch Logs. Supported only for WebSocket APIs."""
    ERROR = 'ERROR'
    INFO = 'INFO'
    OFF = 'OFF'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RouteSettings:
    r"""Represents a collection of route settings."""
    
    data_trace_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DataTraceEnabled'), 'exclude': lambda f: f is None }})  
    detailed_metrics_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DetailedMetricsEnabled'), 'exclude': lambda f: f is None }})  
    logging_level: Optional[RouteSettingsLoggingLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LoggingLevel'), 'exclude': lambda f: f is None }})  
    throttling_burst_limit: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ThrottlingBurstLimit'), 'exclude': lambda f: f is None }})  
    throttling_rate_limit: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ThrottlingRateLimit'), 'exclude': lambda f: f is None }})  
    