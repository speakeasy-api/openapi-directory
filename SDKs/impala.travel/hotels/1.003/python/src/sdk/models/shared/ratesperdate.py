"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import rateplanrate as shared_rateplanrate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RatesPerDateStaythrough:
    r"""The minimum number of nights (inclusive) that the guest has to book which include the date to be eligible for this rate."""
    
    min: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('min') }})
    r"""Expressed in minimum value."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RatesPerDate:
    
    closed: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('closed') }})
    r"""Determines whether the rate is available for a stay including this date."""  
    date_: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date') }})  
    rates: list[shared_rateplanrate.RatePlanRate] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rates') }})
    r"""Rate prices for each occupancy the room can accommodate."""  
    closed_to_arrival: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('closedToArrival'), 'exclude': lambda f: f is None }})
    r"""Determines whether the rate is available if the arrival falls on this date."""  
    closed_to_departure: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('closedToDeparture'), 'exclude': lambda f: f is None }})
    r"""Determines whether the rate is available if the departure falls on this date."""  
    staythrough: Optional[RatesPerDateStaythrough] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('staythrough'), 'exclude': lambda f: f is None }})
    r"""The minimum number of nights (inclusive) that the guest has to book which include the date to be eligible for this rate."""  
    