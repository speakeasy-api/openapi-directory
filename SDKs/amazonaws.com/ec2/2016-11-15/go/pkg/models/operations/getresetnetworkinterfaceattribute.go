// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETResetNetworkInterfaceAttributeActionEnum
type GETResetNetworkInterfaceAttributeActionEnum string

const (
	GETResetNetworkInterfaceAttributeActionEnumResetNetworkInterfaceAttribute GETResetNetworkInterfaceAttributeActionEnum = "ResetNetworkInterfaceAttribute"
)

func (e GETResetNetworkInterfaceAttributeActionEnum) ToPointer() *GETResetNetworkInterfaceAttributeActionEnum {
	return &e
}

func (e *GETResetNetworkInterfaceAttributeActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ResetNetworkInterfaceAttribute":
		*e = GETResetNetworkInterfaceAttributeActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETResetNetworkInterfaceAttributeActionEnum: %v", v)
	}
}

// GETResetNetworkInterfaceAttributeVersionEnum
type GETResetNetworkInterfaceAttributeVersionEnum string

const (
	GETResetNetworkInterfaceAttributeVersionEnumTwoThousandAndSixteen1115 GETResetNetworkInterfaceAttributeVersionEnum = "2016-11-15"
)

func (e GETResetNetworkInterfaceAttributeVersionEnum) ToPointer() *GETResetNetworkInterfaceAttributeVersionEnum {
	return &e
}

func (e *GETResetNetworkInterfaceAttributeVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETResetNetworkInterfaceAttributeVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETResetNetworkInterfaceAttributeVersionEnum: %v", v)
	}
}

type GETResetNetworkInterfaceAttributeRequest struct {
	Action GETResetNetworkInterfaceAttributeActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the network interface.
	NetworkInterfaceID string `queryParam:"style=form,explode=true,name=NetworkInterfaceId"`
	// The source/destination checking attribute. Resets the value to <code>true</code>.
	SourceDestCheck   *string                                      `queryParam:"style=form,explode=true,name=SourceDestCheck"`
	Version           GETResetNetworkInterfaceAttributeVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETResetNetworkInterfaceAttributeResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
