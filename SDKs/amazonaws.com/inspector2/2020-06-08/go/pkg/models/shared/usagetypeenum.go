// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type UsageTypeEnum string

const (
	UsageTypeEnumEc2InstanceHours    UsageTypeEnum = "EC2_INSTANCE_HOURS"
	UsageTypeEnumEcrInitialScan      UsageTypeEnum = "ECR_INITIAL_SCAN"
	UsageTypeEnumEcrRescan           UsageTypeEnum = "ECR_RESCAN"
	UsageTypeEnumLambdaFunctionHours UsageTypeEnum = "LAMBDA_FUNCTION_HOURS"
)

func (e UsageTypeEnum) ToPointer() *UsageTypeEnum {
	return &e
}

func (e *UsageTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "EC2_INSTANCE_HOURS":
		fallthrough
	case "ECR_INITIAL_SCAN":
		fallthrough
	case "ECR_RESCAN":
		fallthrough
	case "LAMBDA_FUNCTION_HOURS":
		*e = UsageTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UsageTypeEnum: %v", v)
	}
}
