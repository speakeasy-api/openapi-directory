/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class TestUpdateDeviceSetOfOwnerSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

/**
 * The name of the device set and the list of device IDs
 */
export class TestUpdateDeviceSetOfOwnerDeviceSetUpdateInformation extends SpeakeasyBase {
  /**
   * List of device IDs
   */
  @SpeakeasyMetadata()
  @Expose({ name: "devices" })
  devices: string[];

  /**
   * The name of the device set
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

export class TestUpdateDeviceSetOfOwnerRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: TestUpdateDeviceSetOfOwnerDeviceSetUpdateInformation;

  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * The UUID of the device set
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

/**
 * Details of a failed operation
 */
export class TestUpdateDeviceSetOfOwnerTestCloudErrorDetails extends SpeakeasyBase {
  /**
   * Human-readable message that describes the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  /**
   * Status of the operation
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;
}

export class TestUpdateDeviceSetOfOwnerDeviceSetDeviceConfigurationsImage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "thumb" })
  thumb?: string;
}

export class TestUpdateDeviceSetOfOwnerDeviceSetDeviceConfigurationsModel extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "formFactor" })
  formFactor?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "manufacturer" })
  manufacturer?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "releaseDate" })
  releaseDate?: string;
}

export class TestUpdateDeviceSetOfOwnerDeviceSetDeviceConfigurations extends SpeakeasyBase {
  /**
   * The unique id of the device configuration
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "image" })
  @Type(() => TestUpdateDeviceSetOfOwnerDeviceSetDeviceConfigurationsImage)
  image?: TestUpdateDeviceSetOfOwnerDeviceSetDeviceConfigurationsImage;

  @SpeakeasyMetadata()
  @Expose({ name: "model" })
  @Type(() => TestUpdateDeviceSetOfOwnerDeviceSetDeviceConfigurationsModel)
  model?: TestUpdateDeviceSetOfOwnerDeviceSetDeviceConfigurationsModel;

  @SpeakeasyMetadata()
  @Expose({ name: "os" })
  os?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "osName" })
  osName?: string;
}

/**
 * The owner of a device set
 */
export class TestUpdateDeviceSetOfOwnerDeviceSetDeviceSetOwner extends SpeakeasyBase {
  /**
   * Display name of the account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * Account ID
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Name of the account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * Type of account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

/**
 * The name and devices of the device set
 */
export class TestUpdateDeviceSetOfOwnerDeviceSet extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: TestUpdateDeviceSetOfOwnerDeviceSetDeviceConfigurations,
  })
  @Expose({ name: "deviceConfigurations" })
  @Type(() => TestUpdateDeviceSetOfOwnerDeviceSetDeviceConfigurations)
  deviceConfigurations: TestUpdateDeviceSetOfOwnerDeviceSetDeviceConfigurations[];

  /**
   * Identifier of the device set
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The number of manufacturers in the device set's device selection
   */
  @SpeakeasyMetadata()
  @Expose({ name: "manufacturerCount" })
  manufacturerCount?: number;

  /**
   * Name of the device set
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The number of os versions in the device set's device selection
   */
  @SpeakeasyMetadata()
  @Expose({ name: "osVersionCount" })
  osVersionCount?: number;

  /**
   * The owner of a device set
   */
  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  @Type(() => TestUpdateDeviceSetOfOwnerDeviceSetDeviceSetOwner)
  owner: TestUpdateDeviceSetOfOwnerDeviceSetDeviceSetOwner;

  /**
   * Slug of the device set
   */
  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug?: string;
}

export class TestUpdateDeviceSetOfOwnerResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  deviceSet?: TestUpdateDeviceSetOfOwnerDeviceSet;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Invalid list of device IDs or conflicting name
   */
  @SpeakeasyMetadata()
  testCloudErrorDetails?: TestUpdateDeviceSetOfOwnerTestCloudErrorDetails;
}
