"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import approvalurlinfo as shared_approvalurlinfo
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ProductsApproveRequestApprovedPermissionsEnum(str, Enum):
    r"""Sets how new permission requests for the product are handled. \\"allPermissions\\" automatically approves all current and future permissions for the product. \\"currentPermissionsOnly\\" approves the current set of permissions for the product, but any future permissions added through updates will require manual reapproval. If not specified, only the current set of permissions will be approved."""
    CURRENT_PERMISSIONS_ONLY = 'currentPermissionsOnly'
    ALL_PERMISSIONS = 'allPermissions'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProductsApproveRequest:
    
    approval_url_info: Optional[shared_approvalurlinfo.ApprovalURLInfo] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('approvalUrlInfo'), 'exclude': lambda f: f is None }})
    r"""Information on an approval URL."""  
    approved_permissions: Optional[ProductsApproveRequestApprovedPermissionsEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('approvedPermissions'), 'exclude': lambda f: f is None }})
    r"""Sets how new permission requests for the product are handled. \\"allPermissions\\" automatically approves all current and future permissions for the product. \\"currentPermissionsOnly\\" approves the current set of permissions for the product, but any future permissions added through updates will require manual reapproval. If not specified, only the current set of permissions will be approved."""  
    