// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LinkRelativeLinkEnum - If set, indicates this is a link to a slide in this presentation, addressed by its position.
type LinkRelativeLinkEnum string

const (
	LinkRelativeLinkEnumRelativeSlideLinkUnspecified LinkRelativeLinkEnum = "RELATIVE_SLIDE_LINK_UNSPECIFIED"
	LinkRelativeLinkEnumNextSlide                    LinkRelativeLinkEnum = "NEXT_SLIDE"
	LinkRelativeLinkEnumPreviousSlide                LinkRelativeLinkEnum = "PREVIOUS_SLIDE"
	LinkRelativeLinkEnumFirstSlide                   LinkRelativeLinkEnum = "FIRST_SLIDE"
	LinkRelativeLinkEnumLastSlide                    LinkRelativeLinkEnum = "LAST_SLIDE"
)

func (e LinkRelativeLinkEnum) ToPointer() *LinkRelativeLinkEnum {
	return &e
}

func (e *LinkRelativeLinkEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RELATIVE_SLIDE_LINK_UNSPECIFIED":
		fallthrough
	case "NEXT_SLIDE":
		fallthrough
	case "PREVIOUS_SLIDE":
		fallthrough
	case "FIRST_SLIDE":
		fallthrough
	case "LAST_SLIDE":
		*e = LinkRelativeLinkEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LinkRelativeLinkEnum: %v", v)
	}
}

// Link - A hypertext link.
type Link struct {
	// If set, indicates this is a link to the specific page in this presentation with this ID. A page with this ID may not exist.
	PageObjectID *string `json:"pageObjectId,omitempty"`
	// If set, indicates this is a link to a slide in this presentation, addressed by its position.
	RelativeLink *LinkRelativeLinkEnum `json:"relativeLink,omitempty"`
	// If set, indicates this is a link to the slide at this zero-based index in the presentation. There may not be a slide at this index.
	SlideIndex *int `json:"slideIndex,omitempty"`
	// If set, indicates this is a link to the external web page at this URL.
	URL *string `json:"url,omitempty"`
}
