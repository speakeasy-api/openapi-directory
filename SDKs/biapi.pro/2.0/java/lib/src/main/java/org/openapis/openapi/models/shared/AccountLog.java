/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class AccountLog {
    /**
     * Balanced recorded
     */
    @JsonProperty("balance")
    public Float balance;

    public AccountLog withBalance(Float balance) {
        this.balance = balance;
        return this;
    }
    
    /**
     * Coming debit recorded
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("coming")
    public Float coming;

    public AccountLog withComing(Float coming) {
        this.coming = coming;
        return this;
    }
    
    /**
     * If fail, contains the error code
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public String error;

    public AccountLog withError(String error) {
        this.error = error;
        return this;
    }
    
    /**
     * If fail, error message received from bank or provider
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error_message")
    public String errorMessage;

    public AccountLog withErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
        return this;
    }
    
    /**
     * ID of the log
     */
    @JsonProperty("id")
    public Long id;

    public AccountLog withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * ID of the related account
     */
    @JsonProperty("id_account")
    public Long idAccount;

    public AccountLog withIdAccount(Long idAccount) {
        this.idAccount = idAccount;
        return this;
    }
    
    /**
     * ID of the related connection log
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id_connection_log")
    public Long idConnectionLog;

    public AccountLog withIdConnectionLog(Long idConnectionLog) {
        this.idConnectionLog = idConnectionLog;
        return this;
    }
    
    /**
     * provider id
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id_connector")
    public Long idConnector;

    public AccountLog withIdConnector(Long idConnector) {
        this.idConnector = idConnector;
        return this;
    }
    
    /**
     * Timestamp of log
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timestamp")
    public OffsetDateTime timestamp;

    public AccountLog withTimestamp(OffsetDateTime timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    public AccountLog(@JsonProperty("balance") Float balance, @JsonProperty("id") Long id, @JsonProperty("id_account") Long idAccount, @JsonProperty("timestamp") OffsetDateTime timestamp) {
        this.balance = balance;
        this.id = id;
        this.idAccount = idAccount;
        this.timestamp = timestamp;
  }
}
