<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * JobInput - The Cloud Batch Job description.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class JobInput
{
    /**
     * A Job's resource allocation policy describes when, where, and how compute resources should be allocated for the Job.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AllocationPolicy $allocationPolicy
     */
	#[\JMS\Serializer\Annotation\SerializedName('allocationPolicy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\AllocationPolicy')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AllocationPolicy $allocationPolicy = null;
    
    /**
     * Labels for the Job. Labels could be user provided or system generated. For example, "labels": { "department": "finance", "environment": "test" } You can assign up to 64 labels. [Google Compute Engine label restrictions](https://cloud.google.com/compute/docs/labeling-resources#restrictions) apply. Label names that start with "goog-" or "google-" are reserved.
     * 
     * @var ?array<string, string> $labels
     */
	#[\JMS\Serializer\Annotation\SerializedName('labels')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $labels = null;
    
    /**
     * LogsPolicy describes how outputs from a Job's Tasks (stdout/stderr) will be preserved.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\LogsPolicy $logsPolicy
     */
	#[\JMS\Serializer\Annotation\SerializedName('logsPolicy')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\LogsPolicy')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?LogsPolicy $logsPolicy = null;
    
    /**
     * Notification configurations.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\JobNotification> $notifications
     */
	#[\JMS\Serializer\Annotation\SerializedName('notifications')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\JobNotification>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $notifications = null;
    
    /**
     * Priority of the Job. The valid value range is [0, 100). Default value is 0. Higher value indicates higher priority. A job with higher priority value is more likely to run earlier if all other requirements are satisfied.
     * 
     * @var ?string $priority
     */
	#[\JMS\Serializer\Annotation\SerializedName('priority')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $priority = null;
    
    /**
     * Job status.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\JobStatus $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\JobStatus')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?JobStatus $status = null;
    
    /**
     * Required. TaskGroups in the Job. Only one TaskGroup is supported now.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TaskGroupInput> $taskGroups
     */
	#[\JMS\Serializer\Annotation\SerializedName('taskGroups')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\TaskGroupInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $taskGroups = null;
    
	public function __construct()
	{
		$this->allocationPolicy = null;
		$this->labels = null;
		$this->logsPolicy = null;
		$this->notifications = null;
		$this->priority = null;
		$this->status = null;
		$this->taskGroups = null;
	}
}
