/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * IdentityVerificationCreateRequest - Request schema for '/identity_verification/create'
 */
public class IdentityVerificationCreateRequest {
    /**
     * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("client_id")
    public String clientId;
    public IdentityVerificationCreateRequest withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    /**
     * A flag specifying whether the end user has already agreed to a privacy policy specifying that their data will be shared with Plaid for verification purposes.
     * 
     * If `gave_consent` is set to `true`, the `accept_tos` step will be marked as `skipped` and the end user's session will start at the next step requirement.
     */
    @JsonProperty("gave_consent")
    public Boolean gaveConsent;
    public IdentityVerificationCreateRequest withGaveConsent(Boolean gaveConsent) {
        this.gaveConsent = gaveConsent;
        return this;
    }
    
    /**
     * An optional flag specifying how you would like Plaid to handle attempts to create an Identity Verification when an Identity Verification already exists for the provided `client_user_id` and `template_id`.
     * If idempotency is enabled, Plaid will return the existing Identity Verification. If idempotency is disabled, Plaid will reject the request with a `400 Bad Request` status code if an Identity Verification already exists for the supplied `client_user_id` and `template_id`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("is_idempotent")
    public Boolean isIdempotent;
    public IdentityVerificationCreateRequest withIsIdempotent(Boolean isIdempotent) {
        this.isIdempotent = isIdempotent;
        return this;
    }
    
    /**
     * A flag specifying whether you would like Plaid to expose a shareable URL for the verification being created.
     */
    @JsonProperty("is_shareable")
    public Boolean isShareable;
    public IdentityVerificationCreateRequest withIsShareable(Boolean isShareable) {
        this.isShareable = isShareable;
        return this;
    }
    
    /**
     * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secret")
    public String secret;
    public IdentityVerificationCreateRequest withSecret(String secret) {
        this.secret = secret;
        return this;
    }
    
    /**
     * ID of the associated Identity Verification template.
     */
    @JsonProperty("template_id")
    public String templateId;
    public IdentityVerificationCreateRequest withTemplateId(String templateId) {
        this.templateId = templateId;
        return this;
    }
    
    /**
     * User information collected outside of Link, most likely via your own onboarding process.
     * 
     * Each of the following identity fields are optional:
     * 
     * `email_address`
     * 
     * `phone_number`
     * 
     * `date_of_birth`
     * 
     * `name`
     * 
     * `address`
     * 
     * `id_number`
     * 
     * Specifically, these fields are optional in that they can either be fully provided (satisfying every required field in their subschema) or omitted from the request entirely by not providing the key or value.
     * Providing these fields via the API will result in Link skipping the data collection process for the associated user. All verification steps enabled in the associated Identity Verification Template will still be run. Verification steps will either be run immediately, or once the user completes the `accept_tos` step, depending on the value provided to the `gave_consent` field.
     */
    @JsonProperty("user")
    public IdentityVerificationRequestUser user;
    public IdentityVerificationCreateRequest withUser(IdentityVerificationRequestUser user) {
        this.user = user;
        return this;
    }
    
}
