/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";
export const ListEsimProfileServerList = [
  "https://supersim.twilio.com",
] as const;

export class ListEsimProfileSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class ListEsimProfileRequest extends SpeakeasyBase {
  /**
   * List the eSIM Profiles that have been associated with an EId.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Eid" })
  eid?: string;

  /**
   * The page index. This value is simply for client state.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Page" })
  page?: number;

  /**
   * How many resources to return in each list page. The default is 50, and the maximum is 1000.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageSize",
  })
  pageSize?: number;

  /**
   * The page token. This is provided by the API.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PageToken",
  })
  pageToken?: string;

  /**
   * Find the eSIM Profile resource related to a [Sim](https://www.twilio.com/docs/wireless/api/sim-resource) resource by providing the SIM SID. Will always return an array with either 1 or 0 records.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=SimSid",
  })
  simSid?: string;

  /**
   * List the eSIM Profiles that are in a given status.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Status",
  })
  status?: shared.EsimProfileEnumStatusEnum;
}

export class ListEsimProfileListEsimProfileResponseMeta extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "first_page_url" })
  firstPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "next_page_url" })
  nextPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "page" })
  page?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "page_size" })
  pageSize?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "previous_page_url" })
  previousPageUrl?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url?: string;
}

/**
 * OK
 */
export class ListEsimProfileListEsimProfileResponse extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.SupersimV1EsimProfile })
  @Expose({ name: "esim_profiles" })
  @Type(() => shared.SupersimV1EsimProfile)
  esimProfiles?: shared.SupersimV1EsimProfile[];

  @SpeakeasyMetadata()
  @Expose({ name: "meta" })
  @Type(() => ListEsimProfileListEsimProfileResponseMeta)
  meta?: ListEsimProfileListEsimProfileResponseMeta;
}

export class ListEsimProfileResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  listEsimProfileResponse?: ListEsimProfileListEsimProfileResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
