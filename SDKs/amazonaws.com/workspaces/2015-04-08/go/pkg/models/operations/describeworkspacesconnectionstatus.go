// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeWorkspacesConnectionStatusXAmzTargetEnum
type DescribeWorkspacesConnectionStatusXAmzTargetEnum string

const (
	DescribeWorkspacesConnectionStatusXAmzTargetEnumWorkspacesServiceDescribeWorkspacesConnectionStatus DescribeWorkspacesConnectionStatusXAmzTargetEnum = "WorkspacesService.DescribeWorkspacesConnectionStatus"
)

func (e DescribeWorkspacesConnectionStatusXAmzTargetEnum) ToPointer() *DescribeWorkspacesConnectionStatusXAmzTargetEnum {
	return &e
}

func (e *DescribeWorkspacesConnectionStatusXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "WorkspacesService.DescribeWorkspacesConnectionStatus":
		*e = DescribeWorkspacesConnectionStatusXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeWorkspacesConnectionStatusXAmzTargetEnum: %v", v)
	}
}

type DescribeWorkspacesConnectionStatusRequest struct {
	DescribeWorkspacesConnectionStatusRequest shared.DescribeWorkspacesConnectionStatusRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                             *string                                          `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                         *string                                          `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                            *string                                          `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                  *string                                          `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                         *string                                          `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                             *string                                          `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                         *string                                          `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                DescribeWorkspacesConnectionStatusXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeWorkspacesConnectionStatusResponse struct {
	ContentType string
	// Success
	DescribeWorkspacesConnectionStatusResult *shared.DescribeWorkspacesConnectionStatusResult
	// InvalidParameterValuesException
	InvalidParameterValuesException interface{}
	StatusCode                      int
	RawResponse                     *http.Response
}
