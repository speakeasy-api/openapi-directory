/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { BackendAPIAuthType } from "./backendapiauthtype";
import { Expose, Type } from "class-transformer";

/**
 * The strategy for conflict resolution.
 */
export enum GetBackendAPIResponseResourceConfigConflictResolutionResolutionStrategyEnum {
  OptimisticConcurrency = "OPTIMISTIC_CONCURRENCY",
  Lambda = "LAMBDA",
  Automerge = "AUTOMERGE",
  None = "NONE",
}

/**
 * The conflict resolution strategy for your data stored in the data models.
 */
export class GetBackendAPIResponseResourceConfigConflictResolution extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ResolutionStrategy" })
  resolutionStrategy?: GetBackendAPIResponseResourceConfigConflictResolutionResolutionStrategyEnum;
}

/**
 * Describes the authentication mode.
 */
export enum GetBackendAPIResponseResourceConfigDefaultAuthTypeModeEnum {
  ApiKey = "API_KEY",
  AwsIam = "AWS_IAM",
  AmazonCognitoUserPools = "AMAZON_COGNITO_USER_POOLS",
  OpenidConnect = "OPENID_CONNECT",
}

/**
 * Describes settings for the authentication mode.
 */
export class GetBackendAPIResponseResourceConfigDefaultAuthTypeSettings extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CognitoUserPoolId" })
  cognitoUserPoolId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExpirationTime" })
  expirationTime?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "OpenIDAuthTTL" })
  openIDAuthTTL?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OpenIDClientId" })
  openIDClientID?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OpenIDIatTTL" })
  openIDIatTTL?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OpenIDIssueURL" })
  openIDIssueURL?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OpenIDProviderName" })
  openIDProviderName?: string;
}

/**
 * The default authentication type for interacting with the configured data models in your Amplify project.
 */
export class GetBackendAPIResponseResourceConfigDefaultAuthType extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "Mode" })
  mode?: GetBackendAPIResponseResourceConfigDefaultAuthTypeModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Settings" })
  @Type(() => GetBackendAPIResponseResourceConfigDefaultAuthTypeSettings)
  settings?: GetBackendAPIResponseResourceConfigDefaultAuthTypeSettings;
}

/**
 * The resource configuration for this response object.
 */
export class GetBackendAPIResponseResourceConfig extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: BackendAPIAuthType })
  @Expose({ name: "AdditionalAuthTypes" })
  @Type(() => BackendAPIAuthType)
  additionalAuthTypes?: BackendAPIAuthType[];

  @SpeakeasyMetadata()
  @Expose({ name: "ApiName" })
  apiName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ConflictResolution" })
  @Type(() => GetBackendAPIResponseResourceConfigConflictResolution)
  conflictResolution?: GetBackendAPIResponseResourceConfigConflictResolution;

  @SpeakeasyMetadata()
  @Expose({ name: "DefaultAuthType" })
  @Type(() => GetBackendAPIResponseResourceConfigDefaultAuthType)
  defaultAuthType?: GetBackendAPIResponseResourceConfigDefaultAuthType;

  @SpeakeasyMetadata()
  @Expose({ name: "Service" })
  service?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "TransformSchema" })
  transformSchema?: string;
}

/**
 * Success
 */
export class GetBackendAPIResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AppId" })
  appId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "BackendEnvironmentName" })
  backendEnvironmentName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Error" })
  error?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceConfig" })
  @Type(() => GetBackendAPIResponseResourceConfig)
  resourceConfig?: GetBackendAPIResponseResourceConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceName" })
  resourceName?: string;
}
