"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import geofence as shared_geofence
from typing import Optional


@dataclasses.dataclass
class GetGeofencesRequest:
    
    all: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'all', 'style': 'form', 'explode': True }})
    r"""Can only be used by admins or managers to fetch all entities"""  
    device_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'deviceId', 'style': 'form', 'explode': True }})
    r"""Standard users can use this only with _deviceId_s, they have access to"""  
    group_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'groupId', 'style': 'form', 'explode': True }})
    r"""Standard users can use this only with _groupId_s, they have access to"""  
    refresh: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'refresh', 'style': 'form', 'explode': True }})  
    user_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'userId', 'style': 'form', 'explode': True }})
    r"""Standard users can use this only with their own _userId_"""  
    

@dataclasses.dataclass
class GetGeofencesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    geofences: Optional[list[shared_geofence.Geofence]] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    