// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// PeriodicPaymentExecutionRuleEnum - Behavior when periodic payment dates fall on holiday.
type PeriodicPaymentExecutionRuleEnum string

const (
	PeriodicPaymentExecutionRuleEnumFollowing PeriodicPaymentExecutionRuleEnum = "following"
	PeriodicPaymentExecutionRuleEnumPreceding PeriodicPaymentExecutionRuleEnum = "preceding"
)

func (e *PeriodicPaymentExecutionRuleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "following":
		fallthrough
	case "preceding":
		*e = PeriodicPaymentExecutionRuleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PeriodicPaymentExecutionRuleEnum: %s", s)
	}
}

type PeriodicPaymentFrequencyEnum string

const (
	PeriodicPaymentFrequencyEnumDaily           PeriodicPaymentFrequencyEnum = "Daily"
	PeriodicPaymentFrequencyEnumWeekly          PeriodicPaymentFrequencyEnum = "Weekly"
	PeriodicPaymentFrequencyEnumEveryTwoWeeks   PeriodicPaymentFrequencyEnum = "EveryTwoWeeks"
	PeriodicPaymentFrequencyEnumMonthly         PeriodicPaymentFrequencyEnum = "Monthly"
	PeriodicPaymentFrequencyEnumEveryTwoMonths  PeriodicPaymentFrequencyEnum = "EveryTwoMonths"
	PeriodicPaymentFrequencyEnumQuarterly       PeriodicPaymentFrequencyEnum = "Quarterly"
	PeriodicPaymentFrequencyEnumSemiAnnual      PeriodicPaymentFrequencyEnum = "SemiAnnual"
	PeriodicPaymentFrequencyEnumAnnual          PeriodicPaymentFrequencyEnum = "Annual"
	PeriodicPaymentFrequencyEnumMonthlyVariable PeriodicPaymentFrequencyEnum = "MonthlyVariable"
)

func (e *PeriodicPaymentFrequencyEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Daily":
		fallthrough
	case "Weekly":
		fallthrough
	case "EveryTwoWeeks":
		fallthrough
	case "Monthly":
		fallthrough
	case "EveryTwoMonths":
		fallthrough
	case "Quarterly":
		fallthrough
	case "SemiAnnual":
		fallthrough
	case "Annual":
		fallthrough
	case "MonthlyVariable":
		*e = PeriodicPaymentFrequencyEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PeriodicPaymentFrequencyEnum: %s", s)
	}
}

// PeriodicPayment - Periodic Payment Serializer.
type PeriodicPayment struct {
	DayOfExecution *string     `json:"day_of_execution,omitempty"`
	EndDate        *types.Date `json:"end_date,omitempty"`
	// Behavior when periodic payment dates fall on holiday.
	ExecutionRule *PeriodicPaymentExecutionRuleEnum `json:"execution_rule,omitempty"`
	Frequency     *PeriodicPaymentFrequencyEnum     `json:"frequency,omitempty"`
	StartDate     types.Date                        `json:"start_date"`
}
