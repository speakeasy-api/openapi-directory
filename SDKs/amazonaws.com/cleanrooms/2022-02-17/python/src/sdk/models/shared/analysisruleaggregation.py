"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import aggregatecolumn as shared_aggregatecolumn
from ..shared import aggregationconstraint as shared_aggregationconstraint
from ..shared import joinrequiredoption_enum as shared_joinrequiredoption_enum
from ..shared import scalarfunctions_enum as shared_scalarfunctions_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AnalysisRuleAggregation:
    r"""Enables query structure and specified queries that product aggregate statistics."""
    
    aggregate_columns: list[shared_aggregatecolumn.AggregateColumn] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aggregateColumns') }})  
    dimension_columns: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimensionColumns') }})  
    join_columns: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('joinColumns') }})  
    output_constraints: list[shared_aggregationconstraint.AggregationConstraint] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('outputConstraints') }})  
    scalar_functions: list[shared_scalarfunctions_enum.ScalarFunctionsEnum] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scalarFunctions') }})  
    join_required: Optional[shared_joinrequiredoption_enum.JoinRequiredOptionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('joinRequired'), 'exclude': lambda f: f is None }})  
    