/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { HealthStateEnum } from "./healthstateenum";
import { Expose } from "class-transformer";

/**
 * A complex type for an endpoint. Each endpoint group can include one or more endpoints, such as load balancers.
 */
export class EndpointDescription extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ClientIPPreservationEnabled" })
  clientIPPreservationEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "EndpointId" })
  endpointId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "HealthReason" })
  healthReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "HealthState" })
  healthState?: HealthStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Weight" })
  weight?: number;
}
