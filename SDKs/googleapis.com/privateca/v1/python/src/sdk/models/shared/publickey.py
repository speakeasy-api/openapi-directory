"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PublicKeyFormatEnum(str, Enum):
    r"""Required. The format of the public key."""
    KEY_FORMAT_UNSPECIFIED = 'KEY_FORMAT_UNSPECIFIED'
    PEM = 'PEM'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PublicKey:
    r"""A PublicKey describes a public key."""
    
    format: Optional[PublicKeyFormatEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('format'), 'exclude': lambda f: f is None }})
    r"""Required. The format of the public key."""  
    key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key'), 'exclude': lambda f: f is None }})
    r"""Required. A public key. The padding and encoding must match with the `KeyFormat` value specified for the `format` field."""  
    