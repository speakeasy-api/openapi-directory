// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETStackPolicyActionEnum
type GETGETStackPolicyActionEnum string

const (
	GETGETStackPolicyActionEnumGetStackPolicy GETGETStackPolicyActionEnum = "GetStackPolicy"
)

func (e *GETGETStackPolicyActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GetStackPolicy":
		*e = GETGETStackPolicyActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETStackPolicyActionEnum: %s", s)
	}
}

// GETGETStackPolicyVersionEnum
type GETGETStackPolicyVersionEnum string

const (
	GETGETStackPolicyVersionEnumTwoThousandAndTen0515 GETGETStackPolicyVersionEnum = "2010-05-15"
)

func (e *GETGETStackPolicyVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-05-15":
		*e = GETGETStackPolicyVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETStackPolicyVersionEnum: %s", s)
	}
}

type GETGETStackPolicyRequest struct {
	Action GETGETStackPolicyActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The name or unique stack ID that's associated with the stack whose policy you want to get.
	StackName         string                       `queryParam:"style=form,explode=true,name=StackName"`
	Version           GETGETStackPolicyVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETStackPolicyResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
