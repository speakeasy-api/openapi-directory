// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type OperationTypeEnum string

const (
	OperationTypeEnumCreateNamespace    OperationTypeEnum = "CREATE_NAMESPACE"
	OperationTypeEnumDeleteNamespace    OperationTypeEnum = "DELETE_NAMESPACE"
	OperationTypeEnumUpdateNamespace    OperationTypeEnum = "UPDATE_NAMESPACE"
	OperationTypeEnumUpdateService      OperationTypeEnum = "UPDATE_SERVICE"
	OperationTypeEnumRegisterInstance   OperationTypeEnum = "REGISTER_INSTANCE"
	OperationTypeEnumDeregisterInstance OperationTypeEnum = "DEREGISTER_INSTANCE"
)

func (e OperationTypeEnum) ToPointer() *OperationTypeEnum {
	return &e
}

func (e *OperationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CREATE_NAMESPACE":
		fallthrough
	case "DELETE_NAMESPACE":
		fallthrough
	case "UPDATE_NAMESPACE":
		fallthrough
	case "UPDATE_SERVICE":
		fallthrough
	case "REGISTER_INSTANCE":
		fallthrough
	case "DEREGISTER_INSTANCE":
		*e = OperationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OperationTypeEnum: %v", v)
	}
}
