// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

// PostCompanyEmployeesRequestBodyEmployeeGenderEnum - Employee gender
type PostCompanyEmployeesRequestBodyEmployeeGenderEnum string

const (
	PostCompanyEmployeesRequestBodyEmployeeGenderEnumMale    PostCompanyEmployeesRequestBodyEmployeeGenderEnum = "male"
	PostCompanyEmployeesRequestBodyEmployeeGenderEnumFemale  PostCompanyEmployeesRequestBodyEmployeeGenderEnum = "female"
	PostCompanyEmployeesRequestBodyEmployeeGenderEnumDiverse PostCompanyEmployeesRequestBodyEmployeeGenderEnum = "diverse"
)

func (e *PostCompanyEmployeesRequestBodyEmployeeGenderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "male":
		fallthrough
	case "female":
		fallthrough
	case "diverse":
		*e = PostCompanyEmployeesRequestBodyEmployeeGenderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostCompanyEmployeesRequestBodyEmployeeGenderEnum: %s", s)
	}
}

type PostCompanyEmployeesRequestBody struct {
	// Employee department
	EmployeeDepartment *string `form:"name=employee[department]"`
	// Employee email
	EmployeeEmail string `form:"name=employee[email]"`
	// Employee first name
	EmployeeFirstName string `form:"name=employee[first_name]"`
	// Employee gender
	EmployeeGender *PostCompanyEmployeesRequestBodyEmployeeGenderEnum `form:"name=employee[gender]"`
	// Employee hire date
	EmployeeHireDate *types.Date `form:"name=employee[hire_date]"`
	// Employee last name
	EmployeeLastName string `form:"name=employee[last_name]"`
	// Employee position
	EmployeePosition *string `form:"name=employee[position]"`
	// Employee weekly working hours
	EmployeeWeeklyHours *float64 `form:"name=employee[weekly_hours]"`
}

type PostCompanyEmployeesResponse struct {
	ContentType string
	// Successful creation of a employee
	Response    *shared.Response
	StatusCode  int
	RawResponse *http.Response
}
