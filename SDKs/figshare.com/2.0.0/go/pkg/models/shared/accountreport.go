// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AccountReportStatusEnum - Status of the report
type AccountReportStatusEnum string

const (
	AccountReportStatusEnumMissing AccountReportStatusEnum = "missing"
	AccountReportStatusEnumPending AccountReportStatusEnum = "pending"
	AccountReportStatusEnumDone    AccountReportStatusEnum = "done"
)

func (e *AccountReportStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "missing":
		fallthrough
	case "pending":
		fallthrough
	case "done":
		*e = AccountReportStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for AccountReportStatusEnum: %s", s)
	}
}

// AccountReport - OK. AccountReport created.
type AccountReport struct {
	// The ID of the account which generated this report.
	AccountID *int64 `json:"account_id,omitempty"`
	// Date when the AccountReport was requested
	CreatedDate *string `json:"created_date,omitempty"`
	// The download link for the generated XLSX
	DownloadURL *string `json:"download_url,omitempty"`
	// The group ID that was used to filter the report, if any.
	GroupID *int64 `json:"group_id,omitempty"`
	// A unique ID for the AccountRecord
	ID *int64 `json:"id,omitempty"`
	// Status of the report
	Status *AccountReportStatusEnum `json:"status,omitempty"`
}
