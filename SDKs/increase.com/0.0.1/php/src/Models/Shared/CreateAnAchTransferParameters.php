<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CreateAnAchTransferParameters
{
    /**
     * The Increase identifier for the account that will send the transfer.
     * 
     * @var string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $accountId;
    
    /**
     * The account number for the destination account.
     * 
     * @var ?string $accountNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountNumber = null;
    
    /**
     * Additional information that will be sent to the recipient. This is included in the transfer data sent to the receiving bank.
     * 
     * @var ?string $addendum
     */
	#[\JMS\Serializer\Annotation\SerializedName('addendum')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $addendum = null;
    
    /**
     * The transfer amount in cents. A positive amount originates a credit transfer pushing funds to the receiving account. A negative amount originates a debit transfer pulling funds from the receiving account.
     * 
     * @var int $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $amount;
    
    /**
     * The description of the date of the transfer, usually in the format `YYMMDD`. This is included in the transfer data sent to the receiving bank.
     * 
     * @var ?string $companyDescriptiveDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('company_descriptive_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $companyDescriptiveDate = null;
    
    /**
     * The data you choose to associate with the transfer. This is included in the transfer data sent to the receiving bank.
     * 
     * @var ?string $companyDiscretionaryData
     */
	#[\JMS\Serializer\Annotation\SerializedName('company_discretionary_data')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $companyDiscretionaryData = null;
    
    /**
     * A description of the transfer. This is included in the transfer data sent to the receiving bank.
     * 
     * @var ?string $companyEntryDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('company_entry_description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $companyEntryDescription = null;
    
    /**
     * The name by which the recipient knows you. This is included in the transfer data sent to the receiving bank.
     * 
     * @var ?string $companyName
     */
	#[\JMS\Serializer\Annotation\SerializedName('company_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $companyName = null;
    
    /**
     * The transfer effective date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     * 
     * @var ?\DateTime $effectiveDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('effective_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $effectiveDate = null;
    
    /**
     * The ID of an External Account to initiate a transfer to. If this parameter is provided, `account_number`, `routing_number`, and `funding` must be absent.
     * 
     * @var ?string $externalAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('external_account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $externalAccountId = null;
    
    /**
     * The type of the account to which the transfer will be sent.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateAnAchTransferParametersFundingEnum $funding
     */
	#[\JMS\Serializer\Annotation\SerializedName('funding')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateAnAchTransferParametersFundingEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateAnAchTransferParametersFundingEnum $funding = null;
    
    /**
     * Your identifer for the transfer recipient.
     * 
     * @var ?string $individualId
     */
	#[\JMS\Serializer\Annotation\SerializedName('individual_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $individualId = null;
    
    /**
     * The name of the transfer recipient. This value is informational and not verified by the recipient's bank.
     * 
     * @var ?string $individualName
     */
	#[\JMS\Serializer\Annotation\SerializedName('individual_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $individualName = null;
    
    /**
     * Whether the transfer requires explicit approval via the dashboard or API.
     * 
     * @var ?bool $requireApproval
     */
	#[\JMS\Serializer\Annotation\SerializedName('require_approval')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $requireApproval = null;
    
    /**
     * The American Bankers' Association (ABA) Routing Transit Number (RTN) for the destination account.
     * 
     * @var ?string $routingNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('routing_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $routingNumber = null;
    
    /**
     * The Standard Entry Class (SEC) code to use for the transfer.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CreateAnAchTransferParametersStandardEntryClassCodeEnum $standardEntryClassCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('standard_entry_class_code')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CreateAnAchTransferParametersStandardEntryClassCodeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateAnAchTransferParametersStandardEntryClassCodeEnum $standardEntryClassCode = null;
    
    /**
     * A description you choose to give the transfer. This will be saved with the transfer details, displayed in the dashboard, and returned by the API. If `individual_name` and `company_name` are not explicitly set by this API, the `statement_descriptor` will be sent in those fields to the receiving bank to help the customer recognize the transfer. You are highly encouraged to pass `individual_name` and `company_name` instead of relying on this fallback.
     * 
     * @var string $statementDescriptor
     */
	#[\JMS\Serializer\Annotation\SerializedName('statement_descriptor')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $statementDescriptor;
    
	public function __construct()
	{
		$this->accountId = "";
		$this->accountNumber = null;
		$this->addendum = null;
		$this->amount = 0;
		$this->companyDescriptiveDate = null;
		$this->companyDiscretionaryData = null;
		$this->companyEntryDescription = null;
		$this->companyName = null;
		$this->effectiveDate = null;
		$this->externalAccountId = null;
		$this->funding = null;
		$this->individualId = null;
		$this->individualName = null;
		$this->requireApproval = null;
		$this->routingNumber = null;
		$this->standardEntryClassCode = null;
		$this->statementDescriptor = "";
	}
}
