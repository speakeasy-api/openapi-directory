// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeFeatureMetadataXAmzTargetEnum
type DescribeFeatureMetadataXAmzTargetEnum string

const (
	DescribeFeatureMetadataXAmzTargetEnumSageMakerDescribeFeatureMetadata DescribeFeatureMetadataXAmzTargetEnum = "SageMaker.DescribeFeatureMetadata"
)

func (e DescribeFeatureMetadataXAmzTargetEnum) ToPointer() *DescribeFeatureMetadataXAmzTargetEnum {
	return &e
}

func (e *DescribeFeatureMetadataXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SageMaker.DescribeFeatureMetadata":
		*e = DescribeFeatureMetadataXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeFeatureMetadataXAmzTargetEnum: %v", v)
	}
}

type DescribeFeatureMetadataRequest struct {
	DescribeFeatureMetadataRequest shared.DescribeFeatureMetadataRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     DescribeFeatureMetadataXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeFeatureMetadataResponse struct {
	ContentType string
	// Success
	DescribeFeatureMetadataResponse *shared.DescribeFeatureMetadataResponse
	// ResourceNotFound
	ResourceNotFound interface{}
	StatusCode       int
	RawResponse      *http.Response
}
