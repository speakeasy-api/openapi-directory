<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CmHybridConfig - Settings for advertisers that use both Campaign Manager 360 (CM360) and third-party ad servers.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CmHybridConfig
{
    /**
     * Required. Immutable. Account ID of the CM360 Floodlight configuration linked with the DV360 advertiser.
     * 
     * @var ?string $cmAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('cmAccountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cmAccountId = null;
    
    /**
     * Required. Immutable. ID of the CM360 Floodlight configuration linked with the DV360 advertiser.
     * 
     * @var ?string $cmFloodlightConfigId
     */
	#[\JMS\Serializer\Annotation\SerializedName('cmFloodlightConfigId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cmFloodlightConfigId = null;
    
    /**
     * Required. Immutable. By setting this field to `true`, you, on behalf of your company, authorize the sharing of information from the given Floodlight configuration to this Display & Video 360 advertiser.
     * 
     * @var ?bool $cmFloodlightLinkingAuthorized
     */
	#[\JMS\Serializer\Annotation\SerializedName('cmFloodlightLinkingAuthorized')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $cmFloodlightLinkingAuthorized = null;
    
    /**
     * A list of CM360 sites whose placements will be synced to DV360 as creatives. If absent or empty in CreateAdvertiser method, the system will automatically create a CM360 site. Removing sites from this list may cause DV360 creatives synced from CM360 to be deleted. At least one site must be specified.
     * 
     * @var ?array<string> $cmSyncableSiteIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('cmSyncableSiteIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $cmSyncableSiteIds = null;
    
    /**
     * Whether or not to report DV360 cost to CM360.
     * 
     * @var ?bool $dv360ToCmCostReportingEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('dv360ToCmCostReportingEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $dv360ToCmCostReportingEnabled = null;
    
    /**
     * Whether or not to include DV360 data in CM360 data transfer reports.
     * 
     * @var ?bool $dv360ToCmDataSharingEnabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('dv360ToCmDataSharingEnabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $dv360ToCmDataSharingEnabled = null;
    
	public function __construct()
	{
		$this->cmAccountId = null;
		$this->cmFloodlightConfigId = null;
		$this->cmFloodlightLinkingAuthorized = null;
		$this->cmSyncableSiteIds = null;
		$this->dv360ToCmCostReportingEnabled = null;
		$this->dv360ToCmDataSharingEnabled = null;
	}
}
