// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FeatureFlagsEnum string

const (
	FeatureFlagsEnumAll FeatureFlagsEnum = "all"
	FeatureFlagsEnumIdp FeatureFlagsEnum = "idp"
	FeatureFlagsEnumLdp FeatureFlagsEnum = "ldp"
	FeatureFlagsEnumHb  FeatureFlagsEnum = "hb"
	FeatureFlagsEnumRpt FeatureFlagsEnum = "rpt"
	FeatureFlagsEnumCas FeatureFlagsEnum = "cas"
	FeatureFlagsEnumLrl FeatureFlagsEnum = "lrl"
	FeatureFlagsEnumCd  FeatureFlagsEnum = "cd"
)

func (e FeatureFlagsEnum) ToPointer() *FeatureFlagsEnum {
	return &e
}

func (e *FeatureFlagsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "all":
		fallthrough
	case "idp":
		fallthrough
	case "ldp":
		fallthrough
	case "hb":
		fallthrough
	case "rpt":
		fallthrough
	case "cas":
		fallthrough
	case "lrl":
		fallthrough
	case "cd":
		*e = FeatureFlagsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FeatureFlagsEnum: %v", v)
	}
}
