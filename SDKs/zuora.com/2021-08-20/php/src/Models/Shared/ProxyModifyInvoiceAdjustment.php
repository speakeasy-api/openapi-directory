<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ProxyModifyInvoiceAdjustment - Container for custom fields of an Invoice Adjustment object.
 * 
 * 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ProxyModifyInvoiceAdjustment
{
    /**
     *  A code identifying the reason for the transaction. Must be an existing reason code or empty. If you do not specify a value, Zuora uses the default reason code.
     * 
     * **Character limit**: 32 **V****alues**: a valid reason code 
     * 
     * @var ?string $reasonCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('ReasonCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reasonCode = null;
    
    /**
     *  The status of the invoice adjustment. This field is required in the Query call, but is automatically generated in other calls.
     * 
     * **Character limit**: 9 **Values**: `Canceled`, `Processed` 
     * 
     * @var ?string $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('Status')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $status = null;
    
    /**
     * Indicates the status of the adjustment's transfer to an external accounting system, such as NetSuite.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ProxyModifyInvoiceAdjustmentTransferredToAccountingEnum $transferredToAccounting
     */
	#[\JMS\Serializer\Annotation\SerializedName('TransferredToAccounting')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ProxyModifyInvoiceAdjustmentTransferredToAccountingEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ProxyModifyInvoiceAdjustmentTransferredToAccountingEnum $transferredToAccounting = null;
    
	public function __construct()
	{
		$this->reasonCode = null;
		$this->status = null;
		$this->transferredToAccounting = null;
	}
}
