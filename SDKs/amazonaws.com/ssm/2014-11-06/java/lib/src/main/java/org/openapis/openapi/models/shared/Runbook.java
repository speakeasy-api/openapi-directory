/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Runbook - &lt;p&gt;Information about an Automation runbook used in a runbook workflow in Change Manager.&lt;/p&gt; &lt;note&gt; &lt;p&gt;The Automation runbooks specified for the runbook workflow can't run until all required approvals for the change request have been received.&lt;/p&gt; &lt;/note&gt;
 */
public class Runbook {
    @JsonProperty("DocumentName")
    public String documentName;
    public Runbook withDocumentName(String documentName) {
        this.documentName = documentName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DocumentVersion")
    public String documentVersion;
    public Runbook withDocumentVersion(String documentVersion) {
        this.documentVersion = documentVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxConcurrency")
    public String maxConcurrency;
    public Runbook withMaxConcurrency(String maxConcurrency) {
        this.maxConcurrency = maxConcurrency;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxErrors")
    public String maxErrors;
    public Runbook withMaxErrors(String maxErrors) {
        this.maxErrors = maxErrors;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Parameters")
    public java.util.Map<String, String[]> parameters;
    public Runbook withParameters(java.util.Map<String, String[]> parameters) {
        this.parameters = parameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TargetLocations")
    public TargetLocation[] targetLocations;
    public Runbook withTargetLocations(TargetLocation[] targetLocations) {
        this.targetLocations = targetLocations;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TargetMaps")
    public java.util.Map<String, String[]>[] targetMaps;
    public Runbook withTargetMaps(java.util.Map<String, String[]>[] targetMaps) {
        this.targetMaps = targetMaps;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TargetParameterName")
    public String targetParameterName;
    public Runbook withTargetParameterName(String targetParameterName) {
        this.targetParameterName = targetParameterName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Targets")
    public Target[] targets;
    public Runbook withTargets(Target[] targets) {
        this.targets = targets;
        return this;
    }
    
}
