/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * InstanceGroup - This entity represents an instance group, which is a group of instances that have common purpose. For example, CORE instance group is used for HDFS.
 */
public class InstanceGroup {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AutoScalingPolicy")
    public AutoScalingPolicyDescription autoScalingPolicy;
    public InstanceGroup withAutoScalingPolicy(AutoScalingPolicyDescription autoScalingPolicy) {
        this.autoScalingPolicy = autoScalingPolicy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BidPrice")
    public String bidPrice;
    public InstanceGroup withBidPrice(String bidPrice) {
        this.bidPrice = bidPrice;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Configurations")
    public Configuration[] configurations;
    public InstanceGroup withConfigurations(Configuration[] configurations) {
        this.configurations = configurations;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConfigurationsVersion")
    public Long configurationsVersion;
    public InstanceGroup withConfigurationsVersion(Long configurationsVersion) {
        this.configurationsVersion = configurationsVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CustomAmiId")
    public String customAmiId;
    public InstanceGroup withCustomAmiId(String customAmiId) {
        this.customAmiId = customAmiId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EbsBlockDevices")
    public EbsBlockDevice[] ebsBlockDevices;
    public InstanceGroup withEbsBlockDevices(EbsBlockDevice[] ebsBlockDevices) {
        this.ebsBlockDevices = ebsBlockDevices;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("EbsOptimized")
    public Boolean ebsOptimized;
    public InstanceGroup withEbsOptimized(Boolean ebsOptimized) {
        this.ebsOptimized = ebsOptimized;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Id")
    public String id;
    public InstanceGroup withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstanceGroupType")
    public InstanceGroupTypeEnum instanceGroupType;
    public InstanceGroup withInstanceGroupType(InstanceGroupTypeEnum instanceGroupType) {
        this.instanceGroupType = instanceGroupType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstanceType")
    public String instanceType;
    public InstanceGroup withInstanceType(String instanceType) {
        this.instanceType = instanceType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LastSuccessfullyAppliedConfigurations")
    public Configuration[] lastSuccessfullyAppliedConfigurations;
    public InstanceGroup withLastSuccessfullyAppliedConfigurations(Configuration[] lastSuccessfullyAppliedConfigurations) {
        this.lastSuccessfullyAppliedConfigurations = lastSuccessfullyAppliedConfigurations;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LastSuccessfullyAppliedConfigurationsVersion")
    public Long lastSuccessfullyAppliedConfigurationsVersion;
    public InstanceGroup withLastSuccessfullyAppliedConfigurationsVersion(Long lastSuccessfullyAppliedConfigurationsVersion) {
        this.lastSuccessfullyAppliedConfigurationsVersion = lastSuccessfullyAppliedConfigurationsVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Market")
    public MarketTypeEnum market;
    public InstanceGroup withMarket(MarketTypeEnum market) {
        this.market = market;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;
    public InstanceGroup withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RequestedInstanceCount")
    public Long requestedInstanceCount;
    public InstanceGroup withRequestedInstanceCount(Long requestedInstanceCount) {
        this.requestedInstanceCount = requestedInstanceCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RunningInstanceCount")
    public Long runningInstanceCount;
    public InstanceGroup withRunningInstanceCount(Long runningInstanceCount) {
        this.runningInstanceCount = runningInstanceCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ShrinkPolicy")
    public ShrinkPolicy shrinkPolicy;
    public InstanceGroup withShrinkPolicy(ShrinkPolicy shrinkPolicy) {
        this.shrinkPolicy = shrinkPolicy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public InstanceGroupStatus status;
    public InstanceGroup withStatus(InstanceGroupStatus status) {
        this.status = status;
        return this;
    }
    
}
