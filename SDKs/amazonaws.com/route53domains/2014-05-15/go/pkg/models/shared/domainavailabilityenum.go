// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DomainAvailabilityEnum string

const (
	DomainAvailabilityEnumAvailable             DomainAvailabilityEnum = "AVAILABLE"
	DomainAvailabilityEnumAvailableReserved     DomainAvailabilityEnum = "AVAILABLE_RESERVED"
	DomainAvailabilityEnumAvailablePreorder     DomainAvailabilityEnum = "AVAILABLE_PREORDER"
	DomainAvailabilityEnumUnavailable           DomainAvailabilityEnum = "UNAVAILABLE"
	DomainAvailabilityEnumUnavailablePremium    DomainAvailabilityEnum = "UNAVAILABLE_PREMIUM"
	DomainAvailabilityEnumUnavailableRestricted DomainAvailabilityEnum = "UNAVAILABLE_RESTRICTED"
	DomainAvailabilityEnumReserved              DomainAvailabilityEnum = "RESERVED"
	DomainAvailabilityEnumDontKnow              DomainAvailabilityEnum = "DONT_KNOW"
)

func (e DomainAvailabilityEnum) ToPointer() *DomainAvailabilityEnum {
	return &e
}

func (e *DomainAvailabilityEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AVAILABLE":
		fallthrough
	case "AVAILABLE_RESERVED":
		fallthrough
	case "AVAILABLE_PREORDER":
		fallthrough
	case "UNAVAILABLE":
		fallthrough
	case "UNAVAILABLE_PREMIUM":
		fallthrough
	case "UNAVAILABLE_RESTRICTED":
		fallthrough
	case "RESERVED":
		fallthrough
	case "DONT_KNOW":
		*e = DomainAvailabilityEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DomainAvailabilityEnum: %v", v)
	}
}
