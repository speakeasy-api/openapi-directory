// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PatchSpacesSpaceIDPersonsIDInvitationSecurity struct {
	GmaAuth string `security:"scheme,type=oauth2,name=Authorization"`
}

type PatchSpacesSpaceIDPersonsIDInvitationRequestBodyClientManagementEnum string

const (
	PatchSpacesSpaceIDPersonsIDInvitationRequestBodyClientManagementEnumNo      PatchSpacesSpaceIDPersonsIDInvitationRequestBodyClientManagementEnum = "no"
	PatchSpacesSpaceIDPersonsIDInvitationRequestBodyClientManagementEnumManager PatchSpacesSpaceIDPersonsIDInvitationRequestBodyClientManagementEnum = "manager"
	PatchSpacesSpaceIDPersonsIDInvitationRequestBodyClientManagementEnumAdn     PatchSpacesSpaceIDPersonsIDInvitationRequestBodyClientManagementEnum = "adn"
)

func (e PatchSpacesSpaceIDPersonsIDInvitationRequestBodyClientManagementEnum) ToPointer() *PatchSpacesSpaceIDPersonsIDInvitationRequestBodyClientManagementEnum {
	return &e
}

func (e *PatchSpacesSpaceIDPersonsIDInvitationRequestBodyClientManagementEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "no":
		fallthrough
	case "manager":
		fallthrough
	case "adn":
		*e = PatchSpacesSpaceIDPersonsIDInvitationRequestBodyClientManagementEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesSpaceIDPersonsIDInvitationRequestBodyClientManagementEnum: %v", v)
	}
}

type PatchSpacesSpaceIDPersonsIDInvitationRequestBodyFoldersRightEnum string

const (
	PatchSpacesSpaceIDPersonsIDInvitationRequestBodyFoldersRightEnumRead  PatchSpacesSpaceIDPersonsIDInvitationRequestBodyFoldersRightEnum = "read"
	PatchSpacesSpaceIDPersonsIDInvitationRequestBodyFoldersRightEnumWrite PatchSpacesSpaceIDPersonsIDInvitationRequestBodyFoldersRightEnum = "write"
)

func (e PatchSpacesSpaceIDPersonsIDInvitationRequestBodyFoldersRightEnum) ToPointer() *PatchSpacesSpaceIDPersonsIDInvitationRequestBodyFoldersRightEnum {
	return &e
}

func (e *PatchSpacesSpaceIDPersonsIDInvitationRequestBodyFoldersRightEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "read":
		fallthrough
	case "write":
		*e = PatchSpacesSpaceIDPersonsIDInvitationRequestBodyFoldersRightEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesSpaceIDPersonsIDInvitationRequestBodyFoldersRightEnum: %v", v)
	}
}

type PatchSpacesSpaceIDPersonsIDInvitationRequestBodyFolders struct {
	ID    *string                                                           `json:"Id,omitempty"`
	Right *PatchSpacesSpaceIDPersonsIDInvitationRequestBodyFoldersRightEnum `json:"Right,omitempty"`
}

type PatchSpacesSpaceIDPersonsIDInvitationRequestBodyPlayerEnum string

const (
	PatchSpacesSpaceIDPersonsIDInvitationRequestBodyPlayerEnumGuest        PatchSpacesSpaceIDPersonsIDInvitationRequestBodyPlayerEnum = "guest"
	PatchSpacesSpaceIDPersonsIDInvitationRequestBodyPlayerEnumOwner        PatchSpacesSpaceIDPersonsIDInvitationRequestBodyPlayerEnum = "owner"
	PatchSpacesSpaceIDPersonsIDInvitationRequestBodyPlayerEnumManager      PatchSpacesSpaceIDPersonsIDInvitationRequestBodyPlayerEnum = "manager"
	PatchSpacesSpaceIDPersonsIDInvitationRequestBodyPlayerEnumAssistant    PatchSpacesSpaceIDPersonsIDInvitationRequestBodyPlayerEnum = "assistant"
	PatchSpacesSpaceIDPersonsIDInvitationRequestBodyPlayerEnumCollaborator PatchSpacesSpaceIDPersonsIDInvitationRequestBodyPlayerEnum = "collaborator"
)

func (e PatchSpacesSpaceIDPersonsIDInvitationRequestBodyPlayerEnum) ToPointer() *PatchSpacesSpaceIDPersonsIDInvitationRequestBodyPlayerEnum {
	return &e
}

func (e *PatchSpacesSpaceIDPersonsIDInvitationRequestBodyPlayerEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "guest":
		fallthrough
	case "owner":
		fallthrough
	case "manager":
		fallthrough
	case "assistant":
		fallthrough
	case "collaborator":
		*e = PatchSpacesSpaceIDPersonsIDInvitationRequestBodyPlayerEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchSpacesSpaceIDPersonsIDInvitationRequestBodyPlayerEnum: %v", v)
	}
}

// PatchSpacesSpaceIDPersonsIDInvitationRequestBody - Invitation to create
type PatchSpacesSpaceIDPersonsIDInvitationRequestBody struct {
	ClientManagement *PatchSpacesSpaceIDPersonsIDInvitationRequestBodyClientManagementEnum `json:"ClientManagement,omitempty"`
	EmployeeAccess   *bool                                                                 `json:"EmployeeAccess,omitempty"`
	Folders          []PatchSpacesSpaceIDPersonsIDInvitationRequestBodyFolders             `json:"Folders,omitempty"`
	GroupIds         []string                                                              `json:"GroupIds,omitempty"`
	IsAdmin          *bool                                                                 `json:"IsAdmin,omitempty"`
	Player           *PatchSpacesSpaceIDPersonsIDInvitationRequestBodyPlayerEnum           `json:"Player,omitempty"`
	PlayerEnd        *string                                                               `json:"PlayerEnd,omitempty"`
}

type PatchSpacesSpaceIDPersonsIDInvitationRequest struct {
	// Invitation to create
	RequestBody PatchSpacesSpaceIDPersonsIDInvitationRequestBody `request:"mediaType=application/json"`
	// Id of the person
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type PatchSpacesSpaceIDPersonsIDInvitationResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
