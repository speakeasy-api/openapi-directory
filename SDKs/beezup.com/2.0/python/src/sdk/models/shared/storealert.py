"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import storealertlinks as shared_storealertlinks
from ..shared import storealertpropertyinfo as shared_storealertpropertyinfo
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StoreAlert:
    
    alert_id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alertId') }})
    r"""Alert identifier"""  
    alert_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alertName') }})
    r"""The alert name"""  
    enabled: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled') }})
    r"""Is the alert enable ?"""  
    links: shared_storealertlinks.StoreAlertLinks = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('links') }})
    r"""The different actions you can make on this alert"""  
    properties: Optional[list[shared_storealertpropertyinfo.StoreAlertPropertyInfo]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('properties'), 'exclude': lambda f: f is None }})
    r"""The current configuration properties of the alert"""  
    