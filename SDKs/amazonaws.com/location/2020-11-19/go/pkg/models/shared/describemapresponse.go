// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// DescribeMapResponsePricingPlanEnum - No longer used. Always returns <code>RequestBasedUsage</code>.Deprecated. Always returns RequestBasedUsage.
type DescribeMapResponsePricingPlanEnum string

const (
	DescribeMapResponsePricingPlanEnumRequestBasedUsage     DescribeMapResponsePricingPlanEnum = "RequestBasedUsage"
	DescribeMapResponsePricingPlanEnumMobileAssetTracking   DescribeMapResponsePricingPlanEnum = "MobileAssetTracking"
	DescribeMapResponsePricingPlanEnumMobileAssetManagement DescribeMapResponsePricingPlanEnum = "MobileAssetManagement"
)

func (e DescribeMapResponsePricingPlanEnum) ToPointer() *DescribeMapResponsePricingPlanEnum {
	return &e
}

func (e *DescribeMapResponsePricingPlanEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RequestBasedUsage":
		fallthrough
	case "MobileAssetTracking":
		fallthrough
	case "MobileAssetManagement":
		*e = DescribeMapResponsePricingPlanEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeMapResponsePricingPlanEnum: %v", v)
	}
}

// DescribeMapResponse - Success
type DescribeMapResponse struct {
	Configuration MapConfiguration                    `json:"Configuration"`
	CreateTime    time.Time                           `json:"CreateTime"`
	DataSource    string                              `json:"DataSource"`
	Description   string                              `json:"Description"`
	MapArn        string                              `json:"MapArn"`
	MapName       string                              `json:"MapName"`
	PricingPlan   *DescribeMapResponsePricingPlanEnum `json:"PricingPlan,omitempty"`
	Tags          map[string]string                   `json:"Tags,omitempty"`
	UpdateTime    time.Time                           `json:"UpdateTime"`
}
