"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import money as shared_money
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateSubscriptionRequest:
    r"""Defines parameters in a
    [CreateSubscription](https://developer.squareup.com/reference/square_2021-08-18/subscriptions-api/create-subscription) endpoint request.
    """
    
    customer_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('customer_id') }})
    r"""The ID of the [customer](https://developer.squareup.com/reference/square_2021-08-18/objects/Customer) profile."""  
    location_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location_id') }})
    r"""The ID of the location the subscription is associated with."""  
    plan_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('plan_id') }})
    r"""The ID of the subscription plan created using the Catalog API.
    For more information, see
    [Set Up and Manage a Subscription Plan](https://developer.squareup.com/docs/subscriptions-api/setup-plan) and 
    [Subscriptions Walkthrough](https://developer.squareup.com/docs/subscriptions-api/walkthrough).
    """  
    canceled_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('canceled_date'), 'exclude': lambda f: f is None }})
    r"""The date when the subscription should be canceled, in
    YYYY-MM-DD format (for example, 2025-02-29). This overrides the plan configuration
    if it comes before the date the subscription would otherwise end.
    """  
    card_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('card_id'), 'exclude': lambda f: f is None }})
    r"""The ID of the [customer](https://developer.squareup.com/reference/square_2021-08-18/objects/Customer) [card](https://developer.squareup.com/reference/square_2021-08-18/objects/Card) to charge.
    If not specified, Square sends an invoice via email. For an example to
    create a customer and add a card on file, see [Subscriptions Walkthrough](https://developer.squareup.com/docs/subscriptions-api/walkthrough).
    """  
    idempotency_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('idempotency_key'), 'exclude': lambda f: f is None }})
    r"""A unique string that identifies this `CreateSubscription` request.
    If you do not provide a unique string (or provide an empty string as the value),
    the endpoint treats each request as independent.
    
    For more information, see [Idempotency keys](https://developer.squareup.com/docs/working-with-apis/idempotency).
    """  
    price_override_money: Optional[shared_money.Money] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('price_override_money'), 'exclude': lambda f: f is None }})
    r"""Represents an amount of money. `Money` fields can be signed or unsigned.
    Fields that do not explicitly define whether they are signed or unsigned are
    considered unsigned and can only hold positive amounts. For signed fields, the
    sign of the value indicates the purpose of the money transfer. See
    [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
    for more information.
    """  
    start_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'exclude': lambda f: f is None }})
    r"""The start date of the subscription, in YYYY-MM-DD format. For example,
    2013-01-15. If the start date is left empty, the subscription begins
    immediately.
    """  
    tax_percentage: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tax_percentage'), 'exclude': lambda f: f is None }})
    r"""The tax to add when billing the subscription.
    The percentage is expressed in decimal form, using a `'.'` as the decimal
    separator and without a `'%'` sign. For example, a value of 7.5
    corresponds to 7.5%.
    """  
    timezone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('timezone'), 'exclude': lambda f: f is None }})
    r"""The timezone that is used in date calculations for the subscription. If unset, defaults to
    the location timezone. If a timezone is not configured for the location, defaults to \"America/New_York\".
    Format: the IANA Timezone Database identifier for the location timezone. For
    a list of time zones, see [List of tz database time zones](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones).
    """  
    