"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import targetstore_enum as shared_targetstore_enum
from typing import Any, Optional


@dataclasses.dataclass
class DeleteRecordRequest:
    
    event_time: str = dataclasses.field(metadata={'query_param': { 'field_name': 'EventTime', 'style': 'form', 'explode': True }})
    r"""Timestamp indicating when the deletion event occurred. <code>EventTime</code> can be used to query data at a certain point in time."""  
    feature_group_name: str = dataclasses.field(metadata={'path_param': { 'field_name': 'FeatureGroupName', 'style': 'simple', 'explode': False }})
    r"""The name of the feature group to delete the record from."""  
    record_identifier_value_as_string: str = dataclasses.field(metadata={'query_param': { 'field_name': 'RecordIdentifierValueAsString', 'style': 'form', 'explode': True }})
    r"""The value for the <code>RecordIdentifier</code> that uniquely identifies the record, in string format."""  
    target_stores: Optional[list[shared_targetstore_enum.TargetStoreEnum]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'TargetStores', 'style': 'form', 'explode': True }})
    r"""A list of stores from which you're deleting the record. By default, Feature Store deletes the record from all of the stores that you're using for the <code>FeatureGroup</code>."""  
    x_amz_algorithm: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Algorithm', 'style': 'simple', 'explode': False }})  
    x_amz_content_sha256: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Content-Sha256', 'style': 'simple', 'explode': False }})  
    x_amz_credential: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Credential', 'style': 'simple', 'explode': False }})  
    x_amz_date: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Date', 'style': 'simple', 'explode': False }})  
    x_amz_security_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Security-Token', 'style': 'simple', 'explode': False }})  
    x_amz_signature: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-Signature', 'style': 'simple', 'explode': False }})  
    x_amz_signed_headers: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Amz-SignedHeaders', 'style': 'simple', 'explode': False }})  
    

@dataclasses.dataclass
class DeleteRecordResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    access_forbidden: Optional[Any] = dataclasses.field(default=None)
    r"""AccessForbidden"""  
    internal_failure: Optional[Any] = dataclasses.field(default=None)
    r"""InternalFailure"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    service_unavailable: Optional[Any] = dataclasses.field(default=None)
    r"""ServiceUnavailable"""  
    validation_error: Optional[Any] = dataclasses.field(default=None)
    r"""ValidationError"""  
    