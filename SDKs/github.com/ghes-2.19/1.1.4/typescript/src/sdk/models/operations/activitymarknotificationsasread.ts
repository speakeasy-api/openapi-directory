/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Transform } from "class-transformer";

export class ActivityMarkNotificationsAsReadRequestBody extends SpeakeasyBase {
  /**
   * Describes the last point that notifications were checked.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_read_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastReadAt?: Date;

  /**
   * Whether the notification has been read.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "read" })
  read?: boolean;
}

/**
 * Response
 */
export class ActivityMarkNotificationsAsRead202ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;
}

export class ActivityMarkNotificationsAsReadResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  activityMarkNotificationsAsRead202ApplicationJSONObject?: ActivityMarkNotificationsAsRead202ApplicationJSON;

  /**
   * Requires authentication
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;
}
