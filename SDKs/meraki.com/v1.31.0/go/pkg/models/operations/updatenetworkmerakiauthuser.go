// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type UpdateNetworkMerakiAuthUserRequestBodyAuthorizations struct {
	// Date for authorization to expire. Default is for authorization to not expire.
	ExpiresAt *string `json:"expiresAt,omitempty"`
	// SSID for which the user is being authorized
	SsidNumber int64 `json:"ssidNumber"`
}

type UpdateNetworkMerakiAuthUserRequestBody struct {
	// Authorization zones and expiration dates for the user.
	Authorizations []UpdateNetworkMerakiAuthUserRequestBodyAuthorizations `json:"authorizations,omitempty"`
	// Whether or not Meraki should email the password to user. Default is false.
	EmailPasswordToUser *bool `json:"emailPasswordToUser,omitempty"`
	// Name of the user. Only allowed If the user is not Dashboard administrator.
	Name *string `json:"name,omitempty"`
	// The password for this user account. Only allowed If the user is not Dashboard administrator.
	Password *string `json:"password,omitempty"`
}

type UpdateNetworkMerakiAuthUserRequest struct {
	RequestBody      *UpdateNetworkMerakiAuthUserRequestBody `request:"mediaType=application/json"`
	MerakiAuthUserID string                                  `pathParam:"style=simple,explode=false,name=merakiAuthUserId"`
	NetworkID        string                                  `pathParam:"style=simple,explode=false,name=networkId"`
}

type UpdateNetworkMerakiAuthUser200ApplicationJSONAuthorizations struct {
	// User is authorized by the account email address
	AuthorizedByEmail *string `json:"authorizedByEmail,omitempty"`
	// User is authorized by the account name
	AuthorizedByName *string `json:"authorizedByName,omitempty"`
	// Authorized zone of the user
	AuthorizedZone *string `json:"authorizedZone,omitempty"`
	// Authorization expiration time
	ExpiresAt *time.Time `json:"expiresAt,omitempty"`
	// SSID number
	SsidNumber *int64 `json:"ssidNumber,omitempty"`
}

// UpdateNetworkMerakiAuthUser200ApplicationJSON - Successful operation
type UpdateNetworkMerakiAuthUser200ApplicationJSON struct {
	// Authorization type for user.
	AccountType *string `json:"accountType,omitempty"`
	// User authorization info
	Authorizations []UpdateNetworkMerakiAuthUser200ApplicationJSONAuthorizations `json:"authorizations,omitempty"`
	// Creation time of the user
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// Email address of the user
	Email *string `json:"email,omitempty"`
	// Meraki auth user id
	ID *string `json:"id,omitempty"`
	// Whether or not the user is a Dashboard administrator
	IsAdmin *bool `json:"isAdmin,omitempty"`
	// Name of the user
	Name *string `json:"name,omitempty"`
}

type UpdateNetworkMerakiAuthUserResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateNetworkMerakiAuthUser200ApplicationJSONObject *UpdateNetworkMerakiAuthUser200ApplicationJSON
}
