// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PhoneNumberFilterNameEnum string

const (
	PhoneNumberFilterNameEnumStatus                    PhoneNumberFilterNameEnum = "status"
	PhoneNumberFilterNameEnumIsoCountryCode            PhoneNumberFilterNameEnum = "iso-country-code"
	PhoneNumberFilterNameEnumMessageType               PhoneNumberFilterNameEnum = "message-type"
	PhoneNumberFilterNameEnumNumberCapability          PhoneNumberFilterNameEnum = "number-capability"
	PhoneNumberFilterNameEnumNumberType                PhoneNumberFilterNameEnum = "number-type"
	PhoneNumberFilterNameEnumTwoWayEnabled             PhoneNumberFilterNameEnum = "two-way-enabled"
	PhoneNumberFilterNameEnumSelfManagedOptOutsEnabled PhoneNumberFilterNameEnum = "self-managed-opt-outs-enabled"
	PhoneNumberFilterNameEnumOptOutListName            PhoneNumberFilterNameEnum = "opt-out-list-name"
	PhoneNumberFilterNameEnumDeletionProtectionEnabled PhoneNumberFilterNameEnum = "deletion-protection-enabled"
)

func (e PhoneNumberFilterNameEnum) ToPointer() *PhoneNumberFilterNameEnum {
	return &e
}

func (e *PhoneNumberFilterNameEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "status":
		fallthrough
	case "iso-country-code":
		fallthrough
	case "message-type":
		fallthrough
	case "number-capability":
		fallthrough
	case "number-type":
		fallthrough
	case "two-way-enabled":
		fallthrough
	case "self-managed-opt-outs-enabled":
		fallthrough
	case "opt-out-list-name":
		fallthrough
	case "deletion-protection-enabled":
		*e = PhoneNumberFilterNameEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PhoneNumberFilterNameEnum: %v", v)
	}
}
