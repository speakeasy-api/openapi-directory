"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import expr as shared_expr
from ..shared import feedoutputconfig as shared_feedoutputconfig
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class FeedContentTypeEnum(str, Enum):
    r"""Asset content type. If not specified, no content but the asset name and type will be returned."""
    CONTENT_TYPE_UNSPECIFIED = 'CONTENT_TYPE_UNSPECIFIED'
    RESOURCE = 'RESOURCE'
    IAM_POLICY = 'IAM_POLICY'
    ORG_POLICY = 'ORG_POLICY'
    ACCESS_POLICY = 'ACCESS_POLICY'
    OS_INVENTORY = 'OS_INVENTORY'
    RELATIONSHIP = 'RELATIONSHIP'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Feed:
    r"""An asset feed used to export asset updates to a destinations. An asset feed filter controls what updates are exported. The asset feed must be created within a project, organization, or folder. Supported destinations are: Pub/Sub topics."""
    
    asset_names: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetNames'), 'exclude': lambda f: f is None }})
    r"""A list of the full names of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. For a list of the full names for supported asset types, see [Resource name format](/asset-inventory/docs/resource-name-format)."""  
    asset_types: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetTypes'), 'exclude': lambda f: f is None }})
    r"""A list of types of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `\\"compute.googleapis.com/Disk\\"` For a list of all supported asset types, see [Supported asset types](/asset-inventory/docs/supported-asset-types)."""  
    condition: Optional[shared_expr.Expr] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('condition'), 'exclude': lambda f: f is None }})
    r"""Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \\"Summary size limit\\" description: \\"Determines if a summary is less than 100 chars\\" expression: \\"document.summary.size() < 100\\" Example (Equality): title: \\"Requestor is owner\\" description: \\"Determines if requestor is the document owner\\" expression: \\"document.owner == request.auth.claims.email\\" Example (Logic): title: \\"Public documents\\" description: \\"Determine whether the document should be publicly visible\\" expression: \\"document.type != 'private' && document.type != 'internal'\\" Example (Data Manipulation): title: \\"Notification string\\" description: \\"Create a notification string with a timestamp.\\" expression: \\"'New message received at ' + string(document.create_time)\\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."""  
    content_type: Optional[FeedContentTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contentType'), 'exclude': lambda f: f is None }})
    r"""Asset content type. If not specified, no content but the asset name and type will be returned."""  
    feed_output_config: Optional[shared_feedoutputconfig.FeedOutputConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('feedOutputConfig'), 'exclude': lambda f: f is None }})
    r"""Output configuration for asset feed destination."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Required. The format will be projects/{project_number}/feeds/{client-assigned_feed_identifier} or folders/{folder_number}/feeds/{client-assigned_feed_identifier} or organizations/{organization_number}/feeds/{client-assigned_feed_identifier} The client-assigned feed identifier must be unique within the parent project/folder/organization."""  
    relationship_types: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('relationshipTypes'), 'exclude': lambda f: f is None }})
    r"""A list of relationship types to output, for example: `INSTANCE_TO_INSTANCEGROUP`. This field should only be specified if content_type=RELATIONSHIP. * If specified: it outputs specified relationship updates on the [asset_names] or the [asset_types]. It returns an error if any of the [relationship_types] doesn't belong to the supported relationship types of the [asset_names] or [asset_types], or any of the [asset_names] or the [asset_types] doesn't belong to the source types of the [relationship_types]. * Otherwise: it outputs the supported relationships of the types of [asset_names] and [asset_types] or returns an error if any of the [asset_names] or the [asset_types] has no replationship support. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types and relationship types."""  
    