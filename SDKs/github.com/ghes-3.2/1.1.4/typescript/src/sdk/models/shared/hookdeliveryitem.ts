/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Delivery made by a webhook, without request and response information.
 */
export class HookDeliveryItem extends SpeakeasyBase {
  /**
   * The type of activity for the event that triggered the delivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action: string;

  /**
   * Time when the webhook delivery occurred.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "delivered_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  deliveredAt: Date;

  /**
   * Time spent delivering.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "duration" })
  duration: number;

  /**
   * The event that triggered the delivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event" })
  event: string;

  /**
   * Unique identifier for the event (shared with all deliveries for all webhooks that subscribe to this event).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "guid" })
  guid: string;

  /**
   * Unique identifier of the webhook delivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * The id of the GitHub App installation associated with this event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "installation_id" })
  installationId: number;

  /**
   * Whether the webhook delivery is a redelivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "redelivery" })
  redelivery: boolean;

  /**
   * The id of the repository associated with this event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repository_id" })
  repositoryId: number;

  /**
   * Describes the response returned after attempting the delivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  /**
   * Status code received when delivery was made.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status_code" })
  statusCode: number;
}
