// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ReturnASandboxAchTransferRequest struct {
	AchTransferID                       string                                     `pathParam:"style=simple,explode=false,name=ach_transfer_id"`
	ReturnASandboxAchTransferParameters shared.ReturnASandboxAchTransferParameters `request:"mediaType=application/json"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON13StatusEnum int64

const (
	ReturnASandboxAchTransferDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ReturnASandboxAchTransferDefaultApplicationJSON13StatusEnum = 429
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON13StatusEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = ReturnASandboxAchTransferDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON13TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON13TypeEnumRateLimitedError ReturnASandboxAchTransferDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON13TypeEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON13 struct {
	Detail     string                                                      `json:"detail"`
	RetryAfter *int64                                                      `json:"retry_after,omitempty"`
	Status     ReturnASandboxAchTransferDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                      `json:"title"`
	Type       ReturnASandboxAchTransferDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON12StatusEnum int64

const (
	ReturnASandboxAchTransferDefaultApplicationJSON12StatusEnumFourHundredAndThree ReturnASandboxAchTransferDefaultApplicationJSON12StatusEnum = 403
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON12StatusEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ReturnASandboxAchTransferDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON12TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON12TypeEnumPrivateFeatureError ReturnASandboxAchTransferDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON12TypeEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON12 struct {
	Detail string                                                      `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON11StatusEnum int64

const (
	ReturnASandboxAchTransferDefaultApplicationJSON11StatusEnumFourHundredAndFour ReturnASandboxAchTransferDefaultApplicationJSON11StatusEnum = 404
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON11StatusEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ReturnASandboxAchTransferDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON11TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON11TypeEnumObjectNotFoundError ReturnASandboxAchTransferDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON11TypeEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON11 struct {
	Detail string                                                      `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON10StatusEnum int64

const (
	ReturnASandboxAchTransferDefaultApplicationJSON10StatusEnumFourHundred ReturnASandboxAchTransferDefaultApplicationJSON10StatusEnum = 400
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON10StatusEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ReturnASandboxAchTransferDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON10TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON10TypeEnumMalformedRequestError ReturnASandboxAchTransferDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON10TypeEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON10 struct {
	Detail string                                                      `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON9StatusEnum int64

const (
	ReturnASandboxAchTransferDefaultApplicationJSON9StatusEnumFourHundred ReturnASandboxAchTransferDefaultApplicationJSON9StatusEnum = 400
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON9StatusEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ReturnASandboxAchTransferDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON9TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON9TypeEnumInvalidParametersError ReturnASandboxAchTransferDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON9TypeEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                   `json:"errors"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON8StatusEnum int64

const (
	ReturnASandboxAchTransferDefaultApplicationJSON8StatusEnumFourHundredAndNine ReturnASandboxAchTransferDefaultApplicationJSON8StatusEnum = 409
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON8StatusEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ReturnASandboxAchTransferDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON8TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON8TypeEnumInvalidOperationError ReturnASandboxAchTransferDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON8TypeEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON8 struct {
	Detail string                                                     `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON7StatusEnum int64

const (
	ReturnASandboxAchTransferDefaultApplicationJSON7StatusEnumFourHundredAndOne ReturnASandboxAchTransferDefaultApplicationJSON7StatusEnum = 401
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON7StatusEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = ReturnASandboxAchTransferDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON7TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ReturnASandboxAchTransferDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON7TypeEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON7 struct {
	Detail string                                                     `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON6StatusEnum int64

const (
	ReturnASandboxAchTransferDefaultApplicationJSON6StatusEnumFiveHundred ReturnASandboxAchTransferDefaultApplicationJSON6StatusEnum = 500
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON6StatusEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = ReturnASandboxAchTransferDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON6TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON6TypeEnumInternalServerError ReturnASandboxAchTransferDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON6TypeEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON6 struct {
	Detail string                                                     `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON5StatusEnum int64

const (
	ReturnASandboxAchTransferDefaultApplicationJSON5StatusEnumFourHundredAndThree ReturnASandboxAchTransferDefaultApplicationJSON5StatusEnum = 403
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON5StatusEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ReturnASandboxAchTransferDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON5TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ReturnASandboxAchTransferDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON5TypeEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON5 struct {
	Detail string                                                     `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON4StatusEnum int64

const (
	ReturnASandboxAchTransferDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ReturnASandboxAchTransferDefaultApplicationJSON4StatusEnum = 422
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON4StatusEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = ReturnASandboxAchTransferDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON4TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ReturnASandboxAchTransferDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON4TypeEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON4 struct {
	Detail string                                                     `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON3StatusEnum int64

const (
	ReturnASandboxAchTransferDefaultApplicationJSON3StatusEnumFourHundredAndNine ReturnASandboxAchTransferDefaultApplicationJSON3StatusEnum = 409
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON3StatusEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ReturnASandboxAchTransferDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON3TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON3TypeEnumIdempotencyConflictError ReturnASandboxAchTransferDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON3TypeEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON3 struct {
	Detail string                                                     `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON2StatusEnum int64

const (
	ReturnASandboxAchTransferDefaultApplicationJSON2StatusEnumFourHundredAndThree ReturnASandboxAchTransferDefaultApplicationJSON2StatusEnum = 403
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON2StatusEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ReturnASandboxAchTransferDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON2TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ReturnASandboxAchTransferDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON2TypeEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON2 struct {
	Detail string                                                     `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferDefaultApplicationJSON1StatusEnum int64

const (
	ReturnASandboxAchTransferDefaultApplicationJSON1StatusEnumFourHundredAndFour ReturnASandboxAchTransferDefaultApplicationJSON1StatusEnum = 404
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON1StatusEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ReturnASandboxAchTransferDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON1TypeEnum string

const (
	ReturnASandboxAchTransferDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ReturnASandboxAchTransferDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e ReturnASandboxAchTransferDefaultApplicationJSON1TypeEnum) ToPointer() *ReturnASandboxAchTransferDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *ReturnASandboxAchTransferDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = ReturnASandboxAchTransferDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReturnASandboxAchTransferDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type ReturnASandboxAchTransferDefaultApplicationJSON1 struct {
	Detail string                                                     `json:"detail"`
	Status ReturnASandboxAchTransferDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   ReturnASandboxAchTransferDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ReturnASandboxAchTransferResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// ACH Transfer
	AchTransfer *shared.AchTransfer
	// Error
	Error interface{}
}
