// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetGroupsRequest struct {
	IfMatch      *string  `header:"style=simple,explode=false,name=If-Match"`
	IfNoneMatch  *string  `header:"style=simple,explode=false,name=If-None-Match"`
	Before       *int64   `queryParam:"style=form,explode=true,name=_before"`
	Fields       []string `queryParam:"style=form,explode=false,name=_fields"`
	Limit        *int64   `queryParam:"style=form,explode=true,name=_limit"`
	Since        *int64   `queryParam:"style=form,explode=true,name=_since"`
	Sort         []string `queryParam:"style=form,explode=false,name=_sort"`
	To           *int64   `queryParam:"style=form,explode=true,name=_to"`
	Token        *string  `queryParam:"style=form,explode=true,name=_token"`
	BucketID     string   `pathParam:"style=simple,explode=false,name=bucket_id"`
	ID           *string  `queryParam:"style=form,explode=true,name=id"`
	LastModified *int64   `queryParam:"style=form,explode=true,name=last_modified"`
}

// GetGroupsErrorSchema - The request is invalid.
type GetGroupsErrorSchema struct {
	Code    int64       `json:"code"`
	Details interface{} `json:"details,omitempty"`
	Errno   int64       `json:"errno"`
	Error   string      `json:"error"`
	Info    *string     `json:"info,omitempty"`
	Message *string     `json:"message,omitempty"`
}

type GetGroupsSchemaData struct {
	Members []string `json:"members,omitempty"`
}

// GetGroupsSchema - Return a list of matching objects.
type GetGroupsSchema struct {
	Data []GetGroupsSchemaData `json:"data,omitempty"`
}

type GetGroupsResponse struct {
	ContentType string
	// The request is invalid.
	ErrorSchema *GetGroupsErrorSchema
	Headers     map[string][]string
	// Return a list of matching objects.
	Schema      *GetGroupsSchema
	StatusCode  int
	RawResponse *http.Response
}
