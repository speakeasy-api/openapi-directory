/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class CampaignRequestFilters extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  attributes?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "contacts" })
  contacts?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];
}

/**
 * Campaign type specifies how it sources contacts and what event triggers its execution  Sort order
 *
 * @remarks
 *   * `M` - Manual
 *   * `S` - Scheduled
 *   * `FU` - File Upload
 *
 */
export enum CampaignRequestTriggerCodeEnum {
  M = "M",
  S = "S",
  Fu = "FU",
}

export class CampaignRequestTrigger extends SpeakeasyBase {
  /**
   * Campaign type specifies how it sources contacts and what event triggers its execution  Sort order
   *
   * @remarks
   *   * `M` - Manual
   *   * `S` - Scheduled
   *   * `FU` - File Upload
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: CampaignRequestTriggerCodeEnum;
}

export class CampaignRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "filters" })
  @Type(() => CampaignRequestFilters)
  filters?: CampaignRequestFilters;

  @SpeakeasyMetadata()
  @Expose({ name: "template" })
  template?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "trigger" })
  @Type(() => CampaignRequestTrigger)
  trigger?: CampaignRequestTrigger;
}
