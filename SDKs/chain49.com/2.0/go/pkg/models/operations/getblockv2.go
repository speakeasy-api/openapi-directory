// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetBlockV2Request struct {
	// Block hash or height
	BlockHashOrHeight string `pathParam:"style=simple,explode=false,name=blockHashOrHeight"`
	// Blockchain name
	Blockchain string `pathParam:"style=simple,explode=false,name=blockchain"`
	// specifies page of returned transactions, starting from 1. If out of range, Blockbook returns the closest possible page.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// number of transactions returned by call (default and maximum 1000)
	PageSize *int64 `queryParam:"style=form,explode=true,name=pageSize"`
}

type GetBlockV2200ApplicationJSONTxsVin struct {
	IsAddress *bool   `json:"isAddress,omitempty"`
	N         *int64  `json:"n,omitempty"`
	Value     *string `json:"value,omitempty"`
}

type GetBlockV2200ApplicationJSONTxsVout struct {
	Addresses []string `json:"addresses,omitempty"`
	IsAddress *bool    `json:"isAddress,omitempty"`
	N         *int64   `json:"n,omitempty"`
	Value     *string  `json:"value,omitempty"`
}

type GetBlockV2200ApplicationJSONTxs struct {
	BlockHash     *string                               `json:"blockHash,omitempty"`
	BlockHeight   *int64                                `json:"blockHeight,omitempty"`
	BlockTime     *int64                                `json:"blockTime,omitempty"`
	Confirmations *int64                                `json:"confirmations,omitempty"`
	Fees          *string                               `json:"fees,omitempty"`
	Txid          *string                               `json:"txid,omitempty"`
	Value         *string                               `json:"value,omitempty"`
	ValueIn       *string                               `json:"valueIn,omitempty"`
	Vin           []GetBlockV2200ApplicationJSONTxsVin  `json:"vin,omitempty"`
	Vout          []GetBlockV2200ApplicationJSONTxsVout `json:"vout,omitempty"`
}

// GetBlockV2200ApplicationJSON - OK
type GetBlockV2200ApplicationJSON struct {
	Bits              *string                           `json:"bits,omitempty"`
	Confirmations     *int64                            `json:"confirmations,omitempty"`
	Difficulty        *string                           `json:"difficulty,omitempty"`
	Hash              *string                           `json:"hash,omitempty"`
	Height            *int64                            `json:"height,omitempty"`
	ItemsOnPage       *int64                            `json:"itemsOnPage,omitempty"`
	MerkleRoot        *string                           `json:"merkleRoot,omitempty"`
	NextBlockHash     *string                           `json:"nextBlockHash,omitempty"`
	Nonce             *string                           `json:"nonce,omitempty"`
	Page              *int64                            `json:"page,omitempty"`
	PreviousBlockHash *string                           `json:"previousBlockHash,omitempty"`
	Size              *int64                            `json:"size,omitempty"`
	Time              *int64                            `json:"time,omitempty"`
	TotalPages        *int64                            `json:"totalPages,omitempty"`
	TxCount           *int64                            `json:"txCount,omitempty"`
	Txs               []GetBlockV2200ApplicationJSONTxs `json:"txs,omitempty"`
	Version           *int64                            `json:"version,omitempty"`
}

type GetBlockV2Response struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	GetBlockV2200ApplicationJSONObject *GetBlockV2200ApplicationJSON
}
