/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Thing group indexing configuration.
 */
export class UpdateIndexingConfigurationRequestBodyThingGroupIndexingConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.Field })
  @Expose({ name: "customFields" })
  @Type(() => shared.Field)
  customFields?: shared.Field[];

  @SpeakeasyMetadata({ elemType: shared.Field })
  @Expose({ name: "managedFields" })
  @Type(() => shared.Field)
  managedFields?: shared.Field[];

  @SpeakeasyMetadata()
  @Expose({ name: "thingGroupIndexingMode" })
  thingGroupIndexingMode?: shared.ThingGroupIndexingModeEnum;
}

/**
 * The thing indexing configuration. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/managing-index.html">Managing Thing Indexing</a>.
 */
export class UpdateIndexingConfigurationRequestBodyThingIndexingConfiguration extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.Field })
  @Expose({ name: "customFields" })
  @Type(() => shared.Field)
  customFields?: shared.Field[];

  @SpeakeasyMetadata()
  @Expose({ name: "deviceDefenderIndexingMode" })
  deviceDefenderIndexingMode?: shared.DeviceDefenderIndexingModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "filter" })
  @Type(() => shared.IndexingFilter)
  filter?: shared.IndexingFilter;

  @SpeakeasyMetadata({ elemType: shared.Field })
  @Expose({ name: "managedFields" })
  @Type(() => shared.Field)
  managedFields?: shared.Field[];

  @SpeakeasyMetadata()
  @Expose({ name: "namedShadowIndexingMode" })
  namedShadowIndexingMode?: shared.NamedShadowIndexingModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "thingConnectivityIndexingMode" })
  thingConnectivityIndexingMode?: shared.ThingConnectivityIndexingModeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "thingIndexingMode" })
  thingIndexingMode?: shared.ThingIndexingModeEnum;
}

export class UpdateIndexingConfigurationRequestBody extends SpeakeasyBase {
  /**
   * Thing group indexing configuration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thingGroupIndexingConfiguration" })
  @Type(
    () => UpdateIndexingConfigurationRequestBodyThingGroupIndexingConfiguration
  )
  thingGroupIndexingConfiguration?: UpdateIndexingConfigurationRequestBodyThingGroupIndexingConfiguration;

  /**
   * The thing indexing configuration. For more information, see <a href="https://docs.aws.amazon.com/iot/latest/developerguide/managing-index.html">Managing Thing Indexing</a>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thingIndexingConfiguration" })
  @Type(() => UpdateIndexingConfigurationRequestBodyThingIndexingConfiguration)
  thingIndexingConfiguration?: UpdateIndexingConfigurationRequestBodyThingIndexingConfiguration;
}

export class UpdateIndexingConfigurationRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: UpdateIndexingConfigurationRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class UpdateIndexingConfigurationResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalFailureException
   */
  @SpeakeasyMetadata()
  internalFailureException?: any;

  /**
   * InvalidRequestException
   */
  @SpeakeasyMetadata()
  invalidRequestException?: any;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ServiceUnavailableException
   */
  @SpeakeasyMetadata()
  serviceUnavailableException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;

  /**
   * UnauthorizedException
   */
  @SpeakeasyMetadata()
  unauthorizedException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  updateIndexingConfigurationResponse?: Record<string, any>;
}
