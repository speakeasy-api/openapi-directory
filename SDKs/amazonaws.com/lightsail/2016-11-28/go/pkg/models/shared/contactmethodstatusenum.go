// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ContactMethodStatusEnum string

const (
	ContactMethodStatusEnumPendingVerification ContactMethodStatusEnum = "PendingVerification"
	ContactMethodStatusEnumValid               ContactMethodStatusEnum = "Valid"
	ContactMethodStatusEnumInvalid             ContactMethodStatusEnum = "Invalid"
)

func (e ContactMethodStatusEnum) ToPointer() *ContactMethodStatusEnum {
	return &e
}

func (e *ContactMethodStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PendingVerification":
		fallthrough
	case "Valid":
		fallthrough
	case "Invalid":
		*e = ContactMethodStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ContactMethodStatusEnum: %v", v)
	}
}
