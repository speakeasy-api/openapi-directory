/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class CreateUpdatePickupPointRequestBodyAddressCountry extends SpeakeasyBase {
  /**
   * Three letter ISO code of the address country.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "acronym" })
  acronym: string;

  /**
   * Address country name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

export class CreateUpdatePickupPointRequestBodyAddressLocation extends SpeakeasyBase {
  /**
   * latitude
   */
  @SpeakeasyMetadata()
  @Expose({ name: "latitude" })
  latitude: number;

  /**
   * longitude
   */
  @SpeakeasyMetadata()
  @Expose({ name: "longitude" })
  longitude: number;
}

export class CreateUpdatePickupPointRequestBodyAddress extends SpeakeasyBase {
  /**
   * Address city.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city: string;

  /**
   * Address complement.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "complement" })
  complement: string;

  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  @Type(() => CreateUpdatePickupPointRequestBodyAddressCountry)
  country: CreateUpdatePickupPointRequestBodyAddressCountry;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => CreateUpdatePickupPointRequestBodyAddressLocation)
  location: CreateUpdatePickupPointRequestBodyAddressLocation;

  /**
   * Address neighborhood.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "neighborhood" })
  neighborhood: string;

  /**
   * Address street number.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number: string;

  /**
   * Postal code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode: string;

  /**
   * Complement that might help locate the shipping address more precisely in case of delivery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference: string;

  /**
   * Address state.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: string;

  /**
   * Address street name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "street" })
  street: string;
}

export class CreateUpdatePickupPointRequestBodyBusinessHour extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "closingTime" })
  closingTime: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dayOfWeek" })
  dayOfWeek: number;

  @SpeakeasyMetadata()
  @Expose({ name: "openingTime" })
  openingTime: string;
}

export class CreateUpdatePickupPointRequestBody extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => CreateUpdatePickupPointRequestBodyAddress)
  address: CreateUpdatePickupPointRequestBodyAddress;

  @SpeakeasyMetadata({
    elemType: CreateUpdatePickupPointRequestBodyBusinessHour,
  })
  @Expose({ name: "businessHours" })
  @Type(() => CreateUpdatePickupPointRequestBodyBusinessHour)
  businessHours: CreateUpdatePickupPointRequestBodyBusinessHour[];

  /**
   * Pickup point description.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  /**
   * Formated address.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "formatted_address" })
  formattedAddress: string;

  /**
   * Pickup Point ID. Cannot contain spaces.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Pickup point instructions.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instructions" })
  instructions: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isActive" })
  isActive: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "isThirdPartyPickup" })
  isThirdPartyPickup?: boolean;

  /**
   * Pickup point name.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tagsLabel" })
  tagsLabel: string[];
}

export class CreateUpdatePickupPointRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation Accept Header. Indicates the types of responses the client can understand
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Type of the content being sent
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: CreateUpdatePickupPointRequestBody;

  /**
   * Pickup Point ID. Cannot contain spaces.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=pickupPointId",
  })
  pickupPointId: string;
}

export class CreateUpdatePickupPointCreateUpdateAddress2Country extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "acronym" })
  acronym: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

export class CreateUpdatePickupPointCreateUpdateAddress2Location5 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "latitude" })
  latitude: number;

  @SpeakeasyMetadata()
  @Expose({ name: "longitude" })
  longitude: number;
}

export class CreateUpdatePickupPointCreateUpdateAddress2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "city" })
  city: string;

  @SpeakeasyMetadata()
  @Expose({ name: "complement" })
  complement: string;

  @SpeakeasyMetadata()
  @Expose({ name: "country" })
  @Type(() => CreateUpdatePickupPointCreateUpdateAddress2Country)
  country: CreateUpdatePickupPointCreateUpdateAddress2Country;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  @Type(() => CreateUpdatePickupPointCreateUpdateAddress2Location5)
  location: CreateUpdatePickupPointCreateUpdateAddress2Location5;

  @SpeakeasyMetadata()
  @Expose({ name: "neighborhood" })
  neighborhood: string;

  @SpeakeasyMetadata()
  @Expose({ name: "number" })
  number: string;

  @SpeakeasyMetadata()
  @Expose({ name: "postalCode" })
  postalCode: string;

  @SpeakeasyMetadata()
  @Expose({ name: "reference" })
  reference: string;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: string;

  @SpeakeasyMetadata()
  @Expose({ name: "street" })
  street: string;
}

export class CreateUpdatePickupPointCreateUpdateBusinessHour extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "closingTime" })
  closingTime: string;

  @SpeakeasyMetadata()
  @Expose({ name: "dayOfWeek" })
  dayOfWeek: number;

  @SpeakeasyMetadata()
  @Expose({ name: "openingTime" })
  openingTime: string;
}

export class CreateUpdatePickupPointCreateUpdate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => CreateUpdatePickupPointCreateUpdateAddress2)
  address: CreateUpdatePickupPointCreateUpdateAddress2;

  @SpeakeasyMetadata({
    elemType: CreateUpdatePickupPointCreateUpdateBusinessHour,
  })
  @Expose({ name: "businessHours" })
  @Type(() => CreateUpdatePickupPointCreateUpdateBusinessHour)
  businessHours: CreateUpdatePickupPointCreateUpdateBusinessHour[];

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "formatted_address" })
  formattedAddress: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "instructions" })
  instructions: string;

  @SpeakeasyMetadata()
  @Expose({ name: "isActive" })
  isActive: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pickupHolidays" })
  pickupHolidays: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "tagsLabel" })
  tagsLabel: string[];
}

export class CreateUpdatePickupPointResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  createUpdate?: CreateUpdatePickupPointCreateUpdate;

  @SpeakeasyMetadata()
  headers?: Record<string, string[]>;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
