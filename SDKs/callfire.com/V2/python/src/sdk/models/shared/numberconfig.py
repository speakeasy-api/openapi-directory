"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import calltrackingconfig as shared_calltrackingconfig
from ..shared import ivrinboundconfig as shared_ivrinboundconfig
from ..shared import textinboundconfig as shared_textinboundconfig
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class NumberConfigConfigTypeEnum(str, Enum):
    r"""A type of config. Available values: TRACKING, IVR"""
    IVR = 'IVR'
    TRACKING = 'TRACKING'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class NumberConfig:
    r"""Represents the configuration of a phone number purchased by user. You can configure number to accept inbound calls, play sounds to customer, make a transfer or setup an IVR script to interact with customer. See [CallFire IVR](https://www.callfire.com/products/ivr) for more info"""
    
    call_tracking_config: Optional[shared_calltrackingconfig.CallTrackingConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('callTrackingConfig'), 'exclude': lambda f: f is None }})
    r"""Call tracking configuration allows you track incoming calls, analyze, respond to customers using sms or voice replies. For more information see [call tracking page](https://www.callfire.com/products/call-tracking)"""  
    config_type: Optional[NumberConfigConfigTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('configType'), 'exclude': lambda f: f is None }})
    r"""A type of config. Available values: TRACKING, IVR"""  
    ivr_inbound_config: Optional[shared_ivrinboundconfig.IvrInboundConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ivrInboundConfig'), 'exclude': lambda f: f is None }})
    r"""~"""  
    number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number'), 'exclude': lambda f: f is None }})
    r"""Phone number in E.164 format (11-digit). Example: 12132000384"""  
    text_inbound_config: Optional[shared_textinboundconfig.TextInboundConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('textInboundConfig'), 'exclude': lambda f: f is None }})
    r"""~"""  
    