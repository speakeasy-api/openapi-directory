"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import documentdetail as shared_documentdetail
from ..shared import errorfieldtype as shared_errorfieldtype
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetUploadedDocumentsResponse:
    r"""OK - the request has succeeded."""
    
    document_details: Optional[list[shared_documentdetail.DocumentDetail]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('documentDetails'), 'exclude': lambda f: f is None }})
    r"""A list of the documents and their details."""  
    invalid_fields: Optional[list[shared_errorfieldtype.ErrorFieldType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('invalidFields'), 'exclude': lambda f: f is None }})
    r"""Contains field validation errors that would prevent requests from being processed."""  
    psp_reference: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pspReference'), 'exclude': lambda f: f is None }})
    r"""The reference of a request. Can be used to uniquely identify the request."""  
    result_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resultCode'), 'exclude': lambda f: f is None }})
    r"""The result code."""  
    