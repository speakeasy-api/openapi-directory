/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LensStatusEnum } from "./lensstatusenum";
import { LensTypeEnum } from "./lenstypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * A lens summary of a lens.
 */
export class LensSummary extends SpeakeasyBase {
  /**
   * The date and time recorded.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The description of the lens.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  /**
   * <p>The alias of the lens.</p> <p>For Amazon Web Services official lenses, this is either the lens alias, such as <code>serverless</code>, or the lens ARN, such as <code>arn:aws:wellarchitected:us-west-2::lens/serverless</code>.</p> <p>For custom lenses, this is the lens ARN, such as <code>arn:aws:wellarchitected:us-east-1:123456789012:lens/my-lens</code>. </p> <p>Each lens is identified by its <a>LensSummary$LensAlias</a>.</p>
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LensAlias" })
  lensAlias?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LensArn" })
  lensArn?: string;

  /**
   * The full name of the lens.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LensName" })
  lensName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LensStatus" })
  lensStatus?: LensStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LensType" })
  lensType?: LensTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LensVersion" })
  lensVersion?: string;

  /**
   * An Amazon Web Services account ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Owner" })
  owner?: string;

  /**
   * The date and time recorded.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}
