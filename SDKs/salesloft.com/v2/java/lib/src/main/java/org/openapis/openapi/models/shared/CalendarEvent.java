/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import java.time.OffsetDateTime;

/**
 * CalendarEvent - Success
 */
public class CalendarEvent {
    /**
     * Whether the calendar event is an all-day event.
     */
    
    public Boolean allDay;

    public CalendarEvent withAllDay(Boolean allDay) {
        this.allDay = allDay;
        return this;
    }
    
    /**
     * The attendees of the calendar event.
     */
    
    public Object[] attendees;

    public CalendarEvent withAttendees(Object[] attendees) {
        this.attendees = attendees;
        return this;
    }
    
    /**
     * Raw body content from Microsoft calendar events
     */
    
    public String bodyHtml;

    public CalendarEvent withBodyHtml(String bodyHtml) {
        this.bodyHtml = bodyHtml;
        return this;
    }
    
    /**
     * Busy/free status of the calendar event
     */
    
    public Boolean busy;

    public CalendarEvent withBusy(Boolean busy) {
        this.busy = busy;
        return this;
    }
    
    /**
     * Calendar ID of the user calendar.
     */
    
    public String calendarId;

    public CalendarEvent withCalendarId(String calendarId) {
        this.calendarId = calendarId;
        return this;
    }
    
    /**
     * The canceled date of the calendar event.
     */
    
    public OffsetDateTime canceledAt;

    public CalendarEvent withCanceledAt(OffsetDateTime canceledAt) {
        this.canceledAt = canceledAt;
        return this;
    }
    
    /**
     * The conference-related information, such as details of a Google Meet conference.
     */
    
    public java.util.Map<String, Object> conferenceData;

    public CalendarEvent withConferenceData(java.util.Map<String, Object> conferenceData) {
        this.conferenceData = conferenceData;
        return this;
    }
    
    /**
     * Creation time of the calendar event.
     */
    
    public OffsetDateTime createdAt;

    public CalendarEvent withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The creator email of the calendar event.
     */
    
    public String creator;

    public CalendarEvent withCreator(String creator) {
        this.creator = creator;
        return this;
    }
    
    /**
     * Description of the calendar event
     */
    
    public String description;

    public CalendarEvent withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The (exclusive) end time of the calendar event.
     */
    
    public OffsetDateTime endTime;

    public CalendarEvent withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * Extended properties of the calendar event.
     */
    
    public java.util.Map<String, Object> extendedProperties;

    public CalendarEvent withExtendedProperties(java.util.Map<String, Object> extendedProperties) {
        this.extendedProperties = extendedProperties;
        return this;
    }
    
    /**
     * An absolute link to this calendar event in the Google Calendar Web UI.
     */
    
    public String htmlLink;

    public CalendarEvent withHtmlLink(String htmlLink) {
        this.htmlLink = htmlLink;
        return this;
    }
    
    /**
     * Calendar event unique identifier (iCalUID)
     */
    
    public String iCalUid;

    public CalendarEvent withICalUid(String iCalUid) {
        this.iCalUid = iCalUid;
        return this;
    }
    
    /**
     * The calendar event original ID from calendar provider
     */
    
    public String id;

    public CalendarEvent withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Location of the calendar event
     */
    
    public String location;

    public CalendarEvent withLocation(String location) {
        this.location = location;
        return this;
    }
    
    /**
     * The organizer email of the calendar event.
     */
    
    public String organizer;

    public CalendarEvent withOrganizer(String organizer) {
        this.organizer = organizer;
        return this;
    }
    
    /**
     * The provider of the calendar event.
     */
    
    public String provider;

    public CalendarEvent withProvider(String provider) {
        this.provider = provider;
        return this;
    }
    
    /**
     * Whether the calendar event is a recurring event.
     */
    
    public Boolean recurring;

    public CalendarEvent withRecurring(Boolean recurring) {
        this.recurring = recurring;
        return this;
    }
    
    /**
     * The (inclusive) start time of the calendar event.
     */
    
    public OffsetDateTime startTime;

    public CalendarEvent withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * The status of the calendar event. It can be empty for non-google events.
     */
    
    public String status;

    public CalendarEvent withStatus(String status) {
        this.status = status;
        return this;
    }
    
    /**
     * Tenant ID of the user calendar
     */
    
    public Long tenantId;

    public CalendarEvent withTenantId(Long tenantId) {
        this.tenantId = tenantId;
        return this;
    }
    
    /**
     * Title of the calendar event
     */
    
    public String title;

    public CalendarEvent withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * Last modification time of the calendar event.
     */
    
    public OffsetDateTime updatedAt;

    public CalendarEvent withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    /**
     * User GUID of the user calendar.
     */
    
    public String userGuid;

    public CalendarEvent withUserGuid(String userGuid) {
        this.userGuid = userGuid;
        return this;
    }
    
    public CalendarEvent(){}
}
