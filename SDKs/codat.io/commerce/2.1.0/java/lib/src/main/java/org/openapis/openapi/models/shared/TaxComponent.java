/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TaxComponent - The Tax Components endpoints return tax rates data from the commerce platform, including tax rate names and values. This is to support the mapping of tax rates from the commerce platform to those in the accounting platform.
 * 
 * Explore our [data coverage](https://knowledge.codat.io/supported-features/commerce?view=tab-by-data-type&amp;dataType=commerce-disputes) for this data type.
 */
public class TaxComponent {
    /**
     * A unique, persistent identifier for this record
     */
    @JsonProperty("id")
    public String id;

    public TaxComponent withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The Boolean flag to indicate when a Tax Rate Component compounds on a sale.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isCompound")
    public Boolean isCompound;

    public TaxComponent withIsCompound(Boolean isCompound) {
        this.isCompound = isCompound;
        return this;
    }
    
    /**
     * In Codat's data model, dates and times are represented using the &lt;a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank"&gt;ISO 8601 standard&lt;/a&gt;. Date and time fields are formatted as strings; for example:
     * 
     * ```
     * 2020-10-08T22:40:50Z
     * 2021-01-01T00:00:00
     * ```
     * 
     * 
     * 
     * When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
     * 
     * - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
     * - Unqualified local time: `2021-11-15T01:00:00`
     * - UTC time offsets: `2021-11-15T01:00:00-05:00`
     * 
     * &gt; Time zones
     * &gt; 
     * &gt; Not all dates from Codat will contain information about time zones.  
     * &gt; Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modifiedDate")
    public String modifiedDate;

    public TaxComponent withModifiedDate(String modifiedDate) {
        this.modifiedDate = modifiedDate;
        return this;
    }
    
    /**
     * Name of the Tax Rate Component in the source commerce platform.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public TaxComponent withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Rate of taxation represented as a fraction of the net price (typically in the range 0.00 - 1.00).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rate")
    public Float rate;

    public TaxComponent withRate(Float rate) {
        this.rate = rate;
        return this;
    }
    
    /**
     * In Codat's data model, dates and times are represented using the &lt;a class="external" href="https://en.wikipedia.org/wiki/ISO_8601" target="_blank"&gt;ISO 8601 standard&lt;/a&gt;. Date and time fields are formatted as strings; for example:
     * 
     * ```
     * 2020-10-08T22:40:50Z
     * 2021-01-01T00:00:00
     * ```
     * 
     * 
     * 
     * When syncing data that contains `DateTime` fields from Codat, make sure you support the following cases when reading time information:
     * 
     * - Coordinated Universal Time (UTC): `2021-11-15T06:00:00Z`
     * - Unqualified local time: `2021-11-15T01:00:00`
     * - UTC time offsets: `2021-11-15T01:00:00-05:00`
     * 
     * &gt; Time zones
     * &gt; 
     * &gt; Not all dates from Codat will contain information about time zones.  
     * &gt; Where it is not available from the underlying platform, Codat will return these as times local to the business whose data has been synced.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceModifiedDate")
    public String sourceModifiedDate;

    public TaxComponent withSourceModifiedDate(String sourceModifiedDate) {
        this.sourceModifiedDate = sourceModifiedDate;
        return this;
    }
    
    public TaxComponent(@JsonProperty("id") String id) {
        this.id = id;
  }
}
