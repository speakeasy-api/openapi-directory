/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * TestGetSubscriptionsSubscription - Subscription information
 */
public class TestGetSubscriptionsSubscription {
    /**
     * Is the subscription currently active?
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;
    public TestGetSubscriptionsSubscription withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    /**
     * Customer limits on concurrent devices
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("concurrentDevicesLimit")
    public Long concurrentDevicesLimit;
    public TestGetSubscriptionsSubscription withConcurrentDevicesLimit(Long concurrentDevicesLimit) {
        this.concurrentDevicesLimit = concurrentDevicesLimit;
        return this;
    }
    
    /**
     * The number of days left in the subscription
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("daysLeft")
    public Double daysLeft;
    public TestGetSubscriptionsSubscription withDaysLeft(Double daysLeft) {
        this.daysLeft = daysLeft;
        return this;
    }
    
    /**
     * The date the subscription will end or ended
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endsAt")
    public String endsAt;
    public TestGetSubscriptionsSubscription withEndsAt(String endsAt) {
        this.endsAt = endsAt;
        return this;
    }
    
    /**
     * Id of the subscription
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public TestGetSubscriptionsSubscription withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Current device concurrency utilization
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runningDevices")
    public Long runningDevices;
    public TestGetSubscriptionsSubscription withRunningDevices(Long runningDevices) {
        this.runningDevices = runningDevices;
        return this;
    }
    
    /**
     * The date the subscription began
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startsAt")
    public String startsAt;
    public TestGetSubscriptionsSubscription withStartsAt(String startsAt) {
        this.startsAt = startsAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tier")
    public TestGetSubscriptionsSubscriptionSubscriptionTier tier;
    public TestGetSubscriptionsSubscription withTier(TestGetSubscriptionsSubscriptionSubscriptionTier tier) {
        this.tier = tier;
        return this;
    }
    
}
