/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * One of `"email"`, `"sms"` or `"auto_call"`
 */
export enum ReminderProfileReminderTemplateTypeEnum {
  Email = "email",
  Sms = "sms",
  Phone = "phone",
  AutoCall = "auto_call",
}

/**
 * One of `"email"`, `"sms"` or `"auto_call"`
 */
export enum ReminderProfileReminderTemplateUnitEnum {
  Minutes = "minutes",
  Hours = "hours",
  Days = "days",
  Weeks = "weeks",
}

/**
 * Array of reminders
 */
export class ReminderProfileReminderTemplate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "amount" })
  amount?: number;

  /**
   * One of `"email"`, `"sms"` or `"auto_call"`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: ReminderProfileReminderTemplateTypeEnum;

  /**
   * One of `"email"`, `"sms"` or `"auto_call"`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unit" })
  unit?: ReminderProfileReminderTemplateUnitEnum;
}

/**
 * Created
 */
export class ReminderProfile extends SpeakeasyBase {
  /**
   * Doctor who created the profile. Other doctors in the practice group may have access to their profiles
   */
  @SpeakeasyMetadata()
  @Expose({ name: "doctor" })
  doctor: number;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Reminders set in the profile
   */
  @SpeakeasyMetadata({ elemType: ReminderProfileReminderTemplate })
  @Expose({ name: "reminders" })
  @Type(() => ReminderProfileReminderTemplate)
  reminders: ReminderProfileReminderTemplate[];
}
