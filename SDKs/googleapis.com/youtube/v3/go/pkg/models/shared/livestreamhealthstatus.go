// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// LiveStreamHealthStatusStatusEnum - The status code of this stream
type LiveStreamHealthStatusStatusEnum string

const (
	LiveStreamHealthStatusStatusEnumGood    LiveStreamHealthStatusStatusEnum = "good"
	LiveStreamHealthStatusStatusEnumOk      LiveStreamHealthStatusStatusEnum = "ok"
	LiveStreamHealthStatusStatusEnumBad     LiveStreamHealthStatusStatusEnum = "bad"
	LiveStreamHealthStatusStatusEnumNoData  LiveStreamHealthStatusStatusEnum = "noData"
	LiveStreamHealthStatusStatusEnumRevoked LiveStreamHealthStatusStatusEnum = "revoked"
)

func (e *LiveStreamHealthStatusStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "good":
		fallthrough
	case "ok":
		fallthrough
	case "bad":
		fallthrough
	case "noData":
		fallthrough
	case "revoked":
		*e = LiveStreamHealthStatusStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for LiveStreamHealthStatusStatusEnum: %s", s)
	}
}

type LiveStreamHealthStatus struct {
	// The configurations issues on this stream
	ConfigurationIssues []LiveStreamConfigurationIssue `json:"configurationIssues,omitempty"`
	// The last time this status was updated (in seconds)
	LastUpdateTimeSeconds *string `json:"lastUpdateTimeSeconds,omitempty"`
	// The status code of this stream
	Status *LiveStreamHealthStatusStatusEnum `json:"status,omitempty"`
}
