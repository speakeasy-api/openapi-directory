// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ParentTypeEnum - Type of the parent of a farm organization.
type ParentTypeEnum string

const (
	ParentTypeEnumFarm ParentTypeEnum = "farm"
)

func (e *ParentTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "farm":
		*e = ParentTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ParentTypeEnum: %s", s)
	}
}

// Parent - A minimal set of attributes regarding the parent of a farm organization.
type Parent struct {
	// Unique identifier for the parent of a farm organization.
	ID string `json:"id"`
	// Type of the parent of a farm organization.
	Type ParentTypeEnum `json:"type"`
}
