<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ImageClassificationModelMetadata - Model metadata for image classification.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ImageClassificationModelMetadata
{
    /**
     * Optional. The ID of the `base` model. If it is specified, the new model will be created based on the `base` model. Otherwise, the new model will be created from scratch. The `base` model must be in the same `project` and `location` as the new model to create, and have the same `model_type`.
     * 
     * @var ?string $baseModelId
     */
	#[\JMS\Serializer\Annotation\SerializedName('baseModelId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $baseModelId = null;
    
    /**
     * Optional. Type of the model. The available values are: * `cloud` - Model to be used via prediction calls to AutoML API. This is the default value. * `mobile-low-latency-1` - A model that, in addition to providing prediction via AutoML API, can also be exported (see AutoMl.ExportModel) and used on a mobile or edge device with TensorFlow afterwards. Expected to have low latency, but may have lower prediction quality than other models. * `mobile-versatile-1` - A model that, in addition to providing prediction via AutoML API, can also be exported (see AutoMl.ExportModel) and used on a mobile or edge device with TensorFlow afterwards. * `mobile-high-accuracy-1` - A model that, in addition to providing prediction via AutoML API, can also be exported (see AutoMl.ExportModel) and used on a mobile or edge device with TensorFlow afterwards. Expected to have a higher latency, but should also have a higher prediction quality than other models. * `mobile-core-ml-low-latency-1` - A model that, in addition to providing prediction via AutoML API, can also be exported (see AutoMl.ExportModel) and used on a mobile device with Core ML afterwards. Expected to have low latency, but may have lower prediction quality than other models. * `mobile-core-ml-versatile-1` - A model that, in addition to providing prediction via AutoML API, can also be exported (see AutoMl.ExportModel) and used on a mobile device with Core ML afterwards. * `mobile-core-ml-high-accuracy-1` - A model that, in addition to providing prediction via AutoML API, can also be exported (see AutoMl.ExportModel) and used on a mobile device with Core ML afterwards. Expected to have a higher latency, but should also have a higher prediction quality than other models.
     * 
     * @var ?string $modelType
     */
	#[\JMS\Serializer\Annotation\SerializedName('modelType')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $modelType = null;
    
    /**
     * Output only. The number of nodes this model is deployed on. A node is an abstraction of a machine resource, which can handle online prediction QPS as given in the node_qps field.
     * 
     * @var ?string $nodeCount
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeCount')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $nodeCount = null;
    
    /**
     * Output only. An approximate number of online prediction QPS that can be supported by this model per each node on which it is deployed.
     * 
     * @var ?float $nodeQps
     */
	#[\JMS\Serializer\Annotation\SerializedName('nodeQps')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $nodeQps = null;
    
    /**
     * Output only. The reason that this create model operation stopped, e.g. `BUDGET_REACHED`, `MODEL_CONVERGED`.
     * 
     * @var ?string $stopReason
     */
	#[\JMS\Serializer\Annotation\SerializedName('stopReason')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stopReason = null;
    
    /**
     * Required. The train budget of creating this model, expressed in hours. The actual `train_cost` will be equal or less than this value.
     * 
     * @var ?string $trainBudget
     */
	#[\JMS\Serializer\Annotation\SerializedName('trainBudget')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $trainBudget = null;
    
    /**
     * Output only. The actual train cost of creating this model, expressed in hours. If this model is created from a `base` model, the train cost used to create the `base` model are not included.
     * 
     * @var ?string $trainCost
     */
	#[\JMS\Serializer\Annotation\SerializedName('trainCost')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $trainCost = null;
    
	public function __construct()
	{
		$this->baseModelId = null;
		$this->modelType = null;
		$this->nodeCount = null;
		$this->nodeQps = null;
		$this->stopReason = null;
		$this->trainBudget = null;
		$this->trainCost = null;
	}
}
