/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class StartingLineups {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayBattingLineup")
    public Lineup[] awayBattingLineup;

    public StartingLineups withAwayBattingLineup(Lineup[] awayBattingLineup) {
        this.awayBattingLineup = awayBattingLineup;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayStartingPitcher")
    public Lineup awayStartingPitcher;

    public StartingLineups withAwayStartingPitcher(Lineup awayStartingPitcher) {
        this.awayStartingPitcher = awayStartingPitcher;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayTeam")
    public String awayTeam;

    public StartingLineups withAwayTeam(String awayTeam) {
        this.awayTeam = awayTeam;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AwayTeamID")
    public Long awayTeamID;

    public StartingLineups withAwayTeamID(Long awayTeamID) {
        this.awayTeamID = awayTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("DateTime")
    public String dateTime;

    public StartingLineups withDateTime(String dateTime) {
        this.dateTime = dateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Day")
    public String day;

    public StartingLineups withDay(String day) {
        this.day = day;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("GameID")
    public Long gameID;

    public StartingLineups withGameID(Long gameID) {
        this.gameID = gameID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeBattingLineup")
    public Lineup[] homeBattingLineup;

    public StartingLineups withHomeBattingLineup(Lineup[] homeBattingLineup) {
        this.homeBattingLineup = homeBattingLineup;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeStartingPitcher")
    public Lineup homeStartingPitcher;

    public StartingLineups withHomeStartingPitcher(Lineup homeStartingPitcher) {
        this.homeStartingPitcher = homeStartingPitcher;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeTeam")
    public String homeTeam;

    public StartingLineups withHomeTeam(String homeTeam) {
        this.homeTeam = homeTeam;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HomeTeamID")
    public Long homeTeamID;

    public StartingLineups withHomeTeamID(Long homeTeamID) {
        this.homeTeamID = homeTeamID;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Season")
    public Long season;

    public StartingLineups withSeason(Long season) {
        this.season = season;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SeasonType")
    public Long seasonType;

    public StartingLineups withSeasonType(Long seasonType) {
        this.seasonType = seasonType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public String status;

    public StartingLineups withStatus(String status) {
        this.status = status;
        return this;
    }
    
    public StartingLineups(){}
}
