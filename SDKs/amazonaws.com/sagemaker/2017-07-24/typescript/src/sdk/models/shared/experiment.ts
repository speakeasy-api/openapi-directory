/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ExperimentSource } from "./experimentsource";
import { Tag } from "./tag";
import { UserContext } from "./usercontext";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The properties of an experiment as returned by the <a>Search</a> API.
 */
export class Experiment extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedBy" })
  @Type(() => UserContext)
  createdBy?: UserContext;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DisplayName" })
  displayName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExperimentArn" })
  experimentArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ExperimentName" })
  experimentName?: string;

  /**
   * Information about the user who created or modified an experiment, trial, trial component, lineage group, project, or model card.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedBy" })
  @Type(() => UserContext)
  lastModifiedBy?: UserContext;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;

  /**
   * The source of the experiment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Source" })
  @Type(() => ExperimentSource)
  source?: ExperimentSource;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
