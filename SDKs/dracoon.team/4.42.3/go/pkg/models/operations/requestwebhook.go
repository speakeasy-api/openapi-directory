// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// RequestWebhookXSdsDateFormatEnum - Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
type RequestWebhookXSdsDateFormatEnum string

const (
	RequestWebhookXSdsDateFormatEnumUtc    RequestWebhookXSdsDateFormatEnum = "UTC"
	RequestWebhookXSdsDateFormatEnumLocal  RequestWebhookXSdsDateFormatEnum = "LOCAL"
	RequestWebhookXSdsDateFormatEnumOffset RequestWebhookXSdsDateFormatEnum = "OFFSET"
	RequestWebhookXSdsDateFormatEnumEpoch  RequestWebhookXSdsDateFormatEnum = "EPOCH"
	RequestWebhookXSdsDateFormatEnumLeet   RequestWebhookXSdsDateFormatEnum = "LEET"
)

func (e RequestWebhookXSdsDateFormatEnum) ToPointer() *RequestWebhookXSdsDateFormatEnum {
	return &e
}

func (e *RequestWebhookXSdsDateFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "UTC":
		fallthrough
	case "LOCAL":
		fallthrough
	case "OFFSET":
		fallthrough
	case "EPOCH":
		fallthrough
	case "LEET":
		*e = RequestWebhookXSdsDateFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RequestWebhookXSdsDateFormatEnum: %v", v)
	}
}

type RequestWebhookRequest struct {
	// Authentication token
	XSdsAuthToken *string `header:"style=simple,explode=false,name=X-Sds-Auth-Token"`
	// Date time format (cf. [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) & [leettime.de](http://leettime.de/))
	XSdsDateFormat *RequestWebhookXSdsDateFormatEnum `header:"style=simple,explode=false,name=X-Sds-Date-Format"`
	// Webhook ID
	WebhookID int64 `pathParam:"style=simple,explode=false,name=webhook_id"`
}

type RequestWebhookResponse struct {
	ContentType string
	// Bad Request
	ErrorResponse *shared.ErrorResponse
	StatusCode    int
	RawResponse   *http.Response
	// OK
	Webhook *shared.Webhook
}
