// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeFlowLogsActionEnum
type POSTDescribeFlowLogsActionEnum string

const (
	POSTDescribeFlowLogsActionEnumDescribeFlowLogs POSTDescribeFlowLogsActionEnum = "DescribeFlowLogs"
)

func (e POSTDescribeFlowLogsActionEnum) ToPointer() *POSTDescribeFlowLogsActionEnum {
	return &e
}

func (e *POSTDescribeFlowLogsActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DescribeFlowLogs":
		*e = POSTDescribeFlowLogsActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeFlowLogsActionEnum: %v", v)
	}
}

// POSTDescribeFlowLogsVersionEnum
type POSTDescribeFlowLogsVersionEnum string

const (
	POSTDescribeFlowLogsVersionEnumTwoThousandAndSixteen1115 POSTDescribeFlowLogsVersionEnum = "2016-11-15"
)

func (e POSTDescribeFlowLogsVersionEnum) ToPointer() *POSTDescribeFlowLogsVersionEnum {
	return &e
}

func (e *POSTDescribeFlowLogsVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTDescribeFlowLogsVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeFlowLogsVersionEnum: %v", v)
	}
}

type POSTDescribeFlowLogsRequest struct {
	Action POSTDescribeFlowLogsActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                         `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       []byte                          `request:"mediaType=text/xml"`
	Version           POSTDescribeFlowLogsVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeFlowLogsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
