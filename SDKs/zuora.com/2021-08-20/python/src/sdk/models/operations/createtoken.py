"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import tokenresponse as shared_tokenresponse
from enum import Enum
from typing import Optional

class CreateTokenRequestBodyGrantTypeEnum(str, Enum):
    r"""The OAuth grant type that will be used to generate the token. The value of this parameter must be `client_credentials`."""
    CLIENT_CREDENTIALS = 'client_credentials'


@dataclasses.dataclass
class CreateTokenRequestBody:
    
    client_id: str = dataclasses.field(metadata={'form': { 'field_name': 'client_id' }})
    r"""The Client ID of the OAuth client."""  
    client_secret: str = dataclasses.field(metadata={'form': { 'field_name': 'client_secret' }})
    r"""The Client Secret that was displayed when the OAuth client was created."""  
    grant_type: CreateTokenRequestBodyGrantTypeEnum = dataclasses.field(metadata={'form': { 'field_name': 'grant_type' }})
    r"""The OAuth grant type that will be used to generate the token. The value of this parameter must be `client_credentials`."""  
    

@dataclasses.dataclass
class CreateTokenRequest:
    
    request_body: CreateTokenRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    zuora_track_id: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'Zuora-Track-Id', 'style': 'simple', 'explode': False }})
    r"""A custom identifier for tracing the API call. If you set a value for this header, Zuora returns the same value in the response headers. This header enables you to associate your system process identifiers with Zuora API calls, to assist with troubleshooting in the event of an issue.
    
    The value of this field must use the US-ASCII character set and must not include any of the following characters: colon (`:`), semicolon (`;`), double quote (`\"`), and quote (`'`).
    """  
    

@dataclasses.dataclass
class CreateTokenResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    token_response: Optional[shared_tokenresponse.TokenResponse] = dataclasses.field(default=None)
    r"""OK"""  
    