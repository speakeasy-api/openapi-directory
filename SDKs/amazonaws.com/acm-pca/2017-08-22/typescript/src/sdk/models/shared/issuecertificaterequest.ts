/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ApiPassthrough } from "./apipassthrough";
import { SigningAlgorithmEnum } from "./signingalgorithmenum";
import { Validity } from "./validity";
import { Expose, Type } from "class-transformer";

export class IssueCertificateRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ApiPassthrough" })
  @Type(() => ApiPassthrough)
  apiPassthrough?: ApiPassthrough;

  @SpeakeasyMetadata()
  @Expose({ name: "CertificateAuthorityArn" })
  certificateAuthorityArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Csr" })
  csr: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IdempotencyToken" })
  idempotencyToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SigningAlgorithm" })
  signingAlgorithm: SigningAlgorithmEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "TemplateArn" })
  templateArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Validity" })
  @Type(() => Validity)
  validity: Validity;

  @SpeakeasyMetadata()
  @Expose({ name: "ValidityNotBefore" })
  @Type(() => Validity)
  validityNotBefore?: Validity;
}
