/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * MoveNode - Moved node information
 */
public class MoveNode {
    /**
     * Source node ID
     */
    @JsonProperty("id")
    public Long id;
    public MoveNode withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * New node name
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public MoveNode withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.22.0
     * 
     * Time the node was created on external file system
     * 
     * (default: current server datetime in UTC format)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timestampCreation")
    public OffsetDateTime timestampCreation;
    public MoveNode withTimestampCreation(OffsetDateTime timestampCreation) {
        this.timestampCreation = timestampCreation;
        return this;
    }
    
    /**
     * &amp;#128640; Since v4.22.0
     * 
     * Time the content of a node was last modified on external file system
     * 
     * (default: current server datetime in UTC format)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("timestampModification")
    public OffsetDateTime timestampModification;
    public MoveNode withTimestampModification(OffsetDateTime timestampModification) {
        this.timestampModification = timestampModification;
        return this;
    }
    
}
