// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TransactionStatusEnum - The transaction status is filled with codes of the ISO 20022 data table:
//
//   - 'ACCC': 'AcceptedSettlementCompleted' -
//     Settlement on the creditor's account has been completed.
//
//   - 'ACCP': 'AcceptedCustomerProfile' -
//     Preceding check of technical validation was successful.
//     Customer profile check was also successful.
//
//   - 'ACSC': 'AcceptedSettlementCompleted' -
//     Settlement on the debtoro?=s account has been completed.
//
//     **Usage:** this can be used by the first agent to report to the debtor that the transaction has been completed.
//
//     **Warning:** this status is provided for transaction status reasons, not for financial information.
//     It can only be used after bilateral agreement.
//   - 'ACSP': 'AcceptedSettlementInProcess' -
//     All preceding checks such as technical validation and customer profile were successful and therefore the payment initiation has been accepted for execution.
//   - 'ACTC': 'AcceptedTechnicalValidation' -
//     Authentication and syntactical and semantical validation are successful.
//   - 'ACWC': 'AcceptedWithChange' -
//     Instruction is accepted but a change will be made, such as date or remittance not sent.
//   - 'ACWP': 'AcceptedWithoutPosting' -
//     Payment instruction included in the credit transfer is accepted without being posted to the creditor customero?=s account.
//   - 'RCVD': 'Received' -
//     Payment initiation has been received by the receiving agent.
//   - 'PDNG': 'Pending' -
//     Payment initiation or individual transaction included in the payment initiation is pending.
//     Further checks and status update will be performed.
//   - 'RJCT': 'Rejected' -
//     Payment initiation or individual transaction included in the payment initiation has been rejected.
//   - 'CANC': 'Cancelled'
//     Payment initiation has been cancelled before execution
//     Remark: This codeis accepted as new code by ISO20022.
//   - 'ACFC': 'AcceptedFundsChecked' -
//     Preceding check of technical validation and customer profile was successful and an automatic funds check was positive .
//     Remark: This code is accepted as new code by ISO20022.
//   - 'PATC': 'PartiallyAcceptedTechnical'
//     Correct The payment initiation needs multiple authentications, where some but not yet all have been performed. Syntactical and semantical validations are successful.
//     Remark: This code is accepted as new code by ISO20022.
//   - 'PART': 'PartiallyAccepted' -
//     A number of transactions have been accepted, whereas another number of transactions have not yet achieved 'accepted' status.
//     Remark: This code may be used only in case of bulk payments. It is only used in a situation where all mandated authorisations have been applied, but some payments have been rejected.
type TransactionStatusEnum string

const (
	TransactionStatusEnumAccc TransactionStatusEnum = "ACCC"
	TransactionStatusEnumAccp TransactionStatusEnum = "ACCP"
	TransactionStatusEnumAcsc TransactionStatusEnum = "ACSC"
	TransactionStatusEnumAcsp TransactionStatusEnum = "ACSP"
	TransactionStatusEnumActc TransactionStatusEnum = "ACTC"
	TransactionStatusEnumAcwc TransactionStatusEnum = "ACWC"
	TransactionStatusEnumAcwp TransactionStatusEnum = "ACWP"
	TransactionStatusEnumRcvd TransactionStatusEnum = "RCVD"
	TransactionStatusEnumPdng TransactionStatusEnum = "PDNG"
	TransactionStatusEnumRjct TransactionStatusEnum = "RJCT"
	TransactionStatusEnumCanc TransactionStatusEnum = "CANC"
	TransactionStatusEnumAcfc TransactionStatusEnum = "ACFC"
	TransactionStatusEnumPatc TransactionStatusEnum = "PATC"
	TransactionStatusEnumPart TransactionStatusEnum = "PART"
)

func (e *TransactionStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ACCC":
		fallthrough
	case "ACCP":
		fallthrough
	case "ACSC":
		fallthrough
	case "ACSP":
		fallthrough
	case "ACTC":
		fallthrough
	case "ACWC":
		fallthrough
	case "ACWP":
		fallthrough
	case "RCVD":
		fallthrough
	case "PDNG":
		fallthrough
	case "RJCT":
		fallthrough
	case "CANC":
		fallthrough
	case "ACFC":
		fallthrough
	case "PATC":
		fallthrough
	case "PART":
		*e = TransactionStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TransactionStatusEnum: %s", s)
	}
}
