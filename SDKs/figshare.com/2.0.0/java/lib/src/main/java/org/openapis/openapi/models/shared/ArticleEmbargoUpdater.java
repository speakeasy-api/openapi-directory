/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ArticleEmbargoUpdater - Embargo description
 */
public class ArticleEmbargoUpdater {
    /**
     * Date when the embargo expires and the article gets published, '0' value will set up permanent embargo
     */
    @JsonProperty("embargo_date")
    public String embargoDate;

    public ArticleEmbargoUpdater withEmbargoDate(String embargoDate) {
        this.embargoDate = embargoDate;
        return this;
    }
    
    /**
     * List of embargo permissions to be associated with the article. The list must contain `id` and can also contain `group_ids`(a field that only applies to 'logged_in' permissions). The new list replaces old options in the database, and an empty list removes all permissions for this article. Administration permission has to be set up alone but logged in and IP range permissions can be set up together.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("embargo_options")
    public java.util.Map<String, Object>[] embargoOptions;

    public ArticleEmbargoUpdater withEmbargoOptions(java.util.Map<String, Object>[] embargoOptions) {
        this.embargoOptions = embargoOptions;
        return this;
    }
    
    /**
     * Reason for setting embargo
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("embargo_reason")
    public String embargoReason;

    public ArticleEmbargoUpdater withEmbargoReason(String embargoReason) {
        this.embargoReason = embargoReason;
        return this;
    }
    
    /**
     * Title for embargo
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("embargo_title")
    public String embargoTitle;

    public ArticleEmbargoUpdater withEmbargoTitle(String embargoTitle) {
        this.embargoTitle = embargoTitle;
        return this;
    }
    
    /**
     * Embargo can be enabled at the article or the file level. Possible values: article, file
     */
    @JsonProperty("embargo_type")
    public ArticleEmbargoUpdaterEmbargoTypeEnum embargoType;

    public ArticleEmbargoUpdater withEmbargoType(ArticleEmbargoUpdaterEmbargoTypeEnum embargoType) {
        this.embargoType = embargoType;
        return this;
    }
    
    /**
     * Embargo status
     */
    @JsonProperty("is_embargoed")
    public Boolean isEmbargoed;

    public ArticleEmbargoUpdater withIsEmbargoed(Boolean isEmbargoed) {
        this.isEmbargoed = isEmbargoed;
        return this;
    }
    
    public ArticleEmbargoUpdater(@JsonProperty("embargo_date") String embargoDate, @JsonProperty("embargo_type") ArticleEmbargoUpdaterEmbargoTypeEnum embargoType, @JsonProperty("is_embargoed") Boolean isEmbargoed) {
        this.embargoDate = embargoDate;
        this.embargoType = embargoType;
        this.isEmbargoed = isEmbargoed;
  }
}
