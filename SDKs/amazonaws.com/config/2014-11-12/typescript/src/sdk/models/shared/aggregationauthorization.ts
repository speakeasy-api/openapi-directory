/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * An object that represents the authorizations granted to aggregator accounts and regions.
 */
export class AggregationAuthorization extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AggregationAuthorizationArn" })
  aggregationAuthorizationArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AuthorizedAccountId" })
  authorizedAccountId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "AuthorizedAwsRegion" })
  authorizedAwsRegion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;
}
