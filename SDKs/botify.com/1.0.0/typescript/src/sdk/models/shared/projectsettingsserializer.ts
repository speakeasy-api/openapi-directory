/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class ProjectSettingsSerializer extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "allowed_domains" })
  allowedDomains: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "blacklisted_domains" })
  blacklistedDomains: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "compare_crawl" })
  compareCrawl?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "crawl_gzip" })
  crawlGzip?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "extra_headers" })
  extraHeaders?: string;

  /**
   * Keep email in case user delete his social auth connection
   */
  @SpeakeasyMetadata()
  @Expose({ name: "google_analytics_account_email" })
  googleAnalyticsAccountEmail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "google_analytics_nb_days" })
  googleAnalyticsNbDays?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "google_analytics_site_id" })
  googleAnalyticsSiteId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "google_social_auth_id" })
  googleSocialAuthId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "has_robots_txt" })
  hasRobotsTxt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "header_settings" })
  headerSettings: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "max_depth" })
  maxDepth?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "max_nb_pages" })
  maxNbPages: number;

  @SpeakeasyMetadata()
  @Expose({ name: "max_pages_per_sec" })
  maxPagesPerSec?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "respect_nofollow" })
  respectNofollow?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "sitemaps" })
  sitemaps: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "start_urls" })
  startUrls: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "user_agent" })
  userAgent?: string;
}
