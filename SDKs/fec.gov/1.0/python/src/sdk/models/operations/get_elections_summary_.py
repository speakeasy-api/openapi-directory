"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import electionsummary as shared_electionsummary
from enum import Enum
from typing import Optional

class GetElectionsSummaryOfficeEnum(str, Enum):
    r"""Federal office candidate runs for: H, S or P"""
    HOUSE = 'house'
    SENATE = 'senate'
    PRESIDENT = 'president'


@dataclasses.dataclass
class GetElectionsSummaryRequest:
    
    api_key: str = dataclasses.field(metadata={'query_param': { 'field_name': 'api_key', 'style': 'form', 'explode': True }})
    r"""API key for https://api.data.gov. Get one at https://api.data.gov/signup."""  
    cycle: int = dataclasses.field(metadata={'query_param': { 'field_name': 'cycle', 'style': 'form', 'explode': True }})
    r"""Two-year election cycle in which a candidate runs for office.
    Calculated from Form 2. The cycle begins with
    an odd year and is named for its ending, even year. This cycle follows
    the traditional house election cycle and subdivides the presidential
    and Senate elections into comparable two-year blocks. To retrieve data for
    the entire four years of a presidential term or six years of a senatorial term,
    you will need the `election_full` flag.
    """  
    office: GetElectionsSummaryOfficeEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'office', 'style': 'form', 'explode': True }})
    r"""Federal office candidate runs for: H, S or P"""  
    district: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'district', 'style': 'form', 'explode': True }})
    r"""Two-digit US House distirict of the office the candidate is running for. Presidential, Senate and House at-large candidates will have District 00."""  
    election_full: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'election_full', 'style': 'form', 'explode': True }})
    r"""`True` indicates that full election period of a candidate.
    `False` indicates that two year election cycle.
    """  
    state: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'state', 'style': 'form', 'explode': True }})
    r"""US state or territory where a candidate runs for office"""  
    

@dataclasses.dataclass
class GetElectionsSummaryResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    election_summary: Optional[shared_electionsummary.ElectionSummary] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    