// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"time"
)

type GetNetworkSmUserAccessDevicesRequest struct {
	// A token used by the server to indicate the end of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	EndingBefore *string `queryParam:"style=form,explode=true,name=endingBefore"`
	NetworkID    string  `pathParam:"style=simple,explode=false,name=networkId"`
	// The number of entries per page returned. Acceptable range is 3 - 1000. Default is 100.
	PerPage *int64 `queryParam:"style=form,explode=true,name=perPage"`
	// A token used by the server to indicate the start of the page. Often this is a timestamp or an ID but it is not limited to those. This parameter should not be defined by client applications. The link for the first, last, prev, or next page in the HTTP Link header should define it.
	StartingAfter *string `queryParam:"style=form,explode=true,name=startingAfter"`
}

type GetNetworkSmUserAccessDevices200ApplicationJSONTrustedAccessConnections struct {
	// time that config was downloaded
	DownloadedAt *string `json:"downloadedAt,omitempty"`
	// time of last connection
	LastConnectedAt *time.Time `json:"lastConnectedAt,omitempty"`
	// time that SCEP completed
	ScepCompletedAt *time.Time `json:"scepCompletedAt,omitempty"`
	// config id
	TrustedAccessConfigID *string `json:"trustedAccessConfigId,omitempty"`
}

type GetNetworkSmUserAccessDevices200ApplicationJSON struct {
	// user email
	Email *string `json:"email,omitempty"`
	// device ID
	ID *string `json:"id,omitempty"`
	// mac address
	Mac *string `json:"mac,omitempty"`
	// device name
	Name *string `json:"name,omitempty"`
	// system type
	SystemType *string `json:"systemType,omitempty"`
	// device tags
	Tags []string `json:"tags,omitempty"`
	// Array of trusted access configs
	TrustedAccessConnections []GetNetworkSmUserAccessDevices200ApplicationJSONTrustedAccessConnections `json:"trustedAccessConnections,omitempty"`
	// username
	Username *string `json:"username,omitempty"`
}

type GetNetworkSmUserAccessDevicesResponse struct {
	ContentType string
	Headers     map[string][]string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	GetNetworkSmUserAccessDevices200ApplicationJSONObjects []GetNetworkSmUserAccessDevices200ApplicationJSON
}
