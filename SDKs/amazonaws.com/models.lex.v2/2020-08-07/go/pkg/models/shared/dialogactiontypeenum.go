// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DialogActionTypeEnum string

const (
	DialogActionTypeEnumElicitIntent         DialogActionTypeEnum = "ElicitIntent"
	DialogActionTypeEnumStartIntent          DialogActionTypeEnum = "StartIntent"
	DialogActionTypeEnumElicitSlot           DialogActionTypeEnum = "ElicitSlot"
	DialogActionTypeEnumEvaluateConditional  DialogActionTypeEnum = "EvaluateConditional"
	DialogActionTypeEnumInvokeDialogCodeHook DialogActionTypeEnum = "InvokeDialogCodeHook"
	DialogActionTypeEnumConfirmIntent        DialogActionTypeEnum = "ConfirmIntent"
	DialogActionTypeEnumFulfillIntent        DialogActionTypeEnum = "FulfillIntent"
	DialogActionTypeEnumCloseIntent          DialogActionTypeEnum = "CloseIntent"
	DialogActionTypeEnumEndConversation      DialogActionTypeEnum = "EndConversation"
)

func (e *DialogActionTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "ElicitIntent":
		fallthrough
	case "StartIntent":
		fallthrough
	case "ElicitSlot":
		fallthrough
	case "EvaluateConditional":
		fallthrough
	case "InvokeDialogCodeHook":
		fallthrough
	case "ConfirmIntent":
		fallthrough
	case "FulfillIntent":
		fallthrough
	case "CloseIntent":
		fallthrough
	case "EndConversation":
		*e = DialogActionTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DialogActionTypeEnum: %s", s)
	}
}
