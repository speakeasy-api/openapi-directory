"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import scalingaction as shared_scalingaction
from ..shared import scalingtrigger as shared_scalingtrigger
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ScalingRule:
    r"""A scale-in or scale-out rule that defines scaling activity, including the CloudWatch metric alarm that triggers activity, how EC2 instances are added or removed, and the periodicity of adjustments. The automatic scaling policy for an instance group can comprise one or more automatic scaling rules."""
    
    action: shared_scalingaction.ScalingAction = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Action') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Name') }})  
    trigger: shared_scalingtrigger.ScalingTrigger = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Trigger') }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Description'), 'exclude': lambda f: f is None }})  
    