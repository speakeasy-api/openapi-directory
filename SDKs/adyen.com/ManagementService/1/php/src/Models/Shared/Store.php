<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Store - OK - the request has succeeded.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Store
{
	#[\JMS\Serializer\Annotation\SerializedName('_links')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Links')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Links $links = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('address')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\StoreLocation')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StoreLocation $address = null;
    
    /**
     * The unique identifiers of the [business lines](https://docs.adyen.com/api-explorer/#/legalentity/latest/post/businesslines__resParam_id) that the store is associated with.
     * 
     *  If not specified, the business line of the merchant account is used. Required when there are multiple business lines under the merchant account.
     * 
     * @var ?array<string> $businessLineIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('businessLineIds')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $businessLineIds = null;
    
    /**
     * The description of the store.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * When using the Zip payment method: The location ID that Zip has assigned to your store.
     * 
     * @var ?string $externalReferenceId
     */
	#[\JMS\Serializer\Annotation\SerializedName('externalReferenceId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $externalReferenceId = null;
    
    /**
     * The unique identifier of the store. This value is generated by Adyen.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The unique identifier of the merchant account that the store belongs to.
     * 
     * @var ?string $merchantId
     */
	#[\JMS\Serializer\Annotation\SerializedName('merchantId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $merchantId = null;
    
    /**
     * The phone number of the store, including '+' and country code.
     * 
     * @var ?string $phoneNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('phoneNumber')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $phoneNumber = null;
    
    /**
     * A reference to recognize the store by. Also known as the store code.
     * 
     *  Allowed characters: Lowercase and uppercase letters without diacritics, numbers 0 through 9, hyphen (-), and underscore (_)
     * 
     * @var ?string $reference
     */
	#[\JMS\Serializer\Annotation\SerializedName('reference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $reference = null;
    
    /**
     * The store name shown on the shopper's bank or credit card statement and on the shopper receipt.
     * 
     * @var ?string $shopperStatement
     */
	#[\JMS\Serializer\Annotation\SerializedName('shopperStatement')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $shopperStatement = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('splitConfiguration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\StoreSplitConfiguration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StoreSplitConfiguration $splitConfiguration = null;
    
    /**
     * The status of the store. Possible values are:
     * 
     * 
     * - **active**. This value is assigned automatically when a store is created. 
     * - **inactive**. The terminals under the store are blocked from accepting new transactions, but capturing outstanding transactions is still possible.
     * - **closed**. This status is irreversible. The terminals under the store are reassigned to the merchant inventory.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\StoreStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\StoreStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?StoreStatusEnum $status = null;
    
	public function __construct()
	{
		$this->links = null;
		$this->address = null;
		$this->businessLineIds = null;
		$this->description = null;
		$this->externalReferenceId = null;
		$this->id = null;
		$this->merchantId = null;
		$this->phoneNumber = null;
		$this->reference = null;
		$this->shopperStatement = null;
		$this->splitConfiguration = null;
		$this->status = null;
	}
}
