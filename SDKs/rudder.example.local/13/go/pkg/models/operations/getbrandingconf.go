// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetBrandingConf200ApplicationJSONActionEnum - The id of the action
type GetBrandingConf200ApplicationJSONActionEnum string

const (
	GetBrandingConf200ApplicationJSONActionEnumGetBrandingConf GetBrandingConf200ApplicationJSONActionEnum = "getBrandingConf"
)

func (e *GetBrandingConf200ApplicationJSONActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "getBrandingConf":
		*e = GetBrandingConf200ApplicationJSONActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBrandingConf200ApplicationJSONActionEnum: %s", s)
	}
}

type GetBrandingConf200ApplicationJSONData struct {
	Branding shared.BrandingConf `json:"branding"`
}

// GetBrandingConf200ApplicationJSONResultEnum - Result of the request
type GetBrandingConf200ApplicationJSONResultEnum string

const (
	GetBrandingConf200ApplicationJSONResultEnumSuccess GetBrandingConf200ApplicationJSONResultEnum = "success"
	GetBrandingConf200ApplicationJSONResultEnumError   GetBrandingConf200ApplicationJSONResultEnum = "error"
)

func (e *GetBrandingConf200ApplicationJSONResultEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "success":
		fallthrough
	case "error":
		*e = GetBrandingConf200ApplicationJSONResultEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetBrandingConf200ApplicationJSONResultEnum: %s", s)
	}
}

// GetBrandingConf200ApplicationJSON - Branding configuration
type GetBrandingConf200ApplicationJSON struct {
	// The id of the action
	Action GetBrandingConf200ApplicationJSONActionEnum `json:"action"`
	Data   GetBrandingConf200ApplicationJSONData       `json:"data"`
	// Result of the request
	Result GetBrandingConf200ApplicationJSONResultEnum `json:"result"`
}

type GetBrandingConfResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Branding configuration
	GetBrandingConf200ApplicationJSONObject *GetBrandingConf200ApplicationJSON
}
