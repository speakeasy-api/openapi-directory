"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CopyOptimisationRequest:
    r"""Copy the optimisation between 2 channels"""
    
    channel_id_source: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channelIdSource') }})
    r"""The channel identifier"""  
    channel_id_target: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channelIdTarget') }})
    r"""The channel identifier"""  
    keep_existing_optimisation: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('keepExistingOptimisation') }})
    r"""If true the existing optimisation will be kept"""  
    