<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Parameters - Parameters of a query or report.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Parameters
{
    /**
     * Filters used to match traffic data in your report.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\FilterPair> $filters
     */
	#[\JMS\Serializer\Annotation\SerializedName('filters')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\FilterPair>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $filters = null;
    
    /**
     * Data is grouped by the filters listed in this field.
     * 
     * @var ?array<string> $groupBys
     */
	#[\JMS\Serializer\Annotation\SerializedName('groupBys')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $groupBys = null;
    
    /**
     * Metrics to include as columns in your report.
     * 
     * @var ?array<string> $metrics
     */
	#[\JMS\Serializer\Annotation\SerializedName('metrics')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $metrics = null;
    
    /**
     * Additional query options.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Options $options
     */
	#[\JMS\Serializer\Annotation\SerializedName('options')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Options')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Options $options = null;
    
    /**
     * The type of the report. The type of the report will dictate what dimesions, filters, and metrics can be used.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ParametersTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\ParametersTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ParametersTypeEnum $type = null;
    
	public function __construct()
	{
		$this->filters = null;
		$this->groupBys = null;
		$this->metrics = null;
		$this->options = null;
		$this->type = null;
	}
}
