// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type FacetAttributeTypeEnum string

const (
	FacetAttributeTypeEnumString   FacetAttributeTypeEnum = "STRING"
	FacetAttributeTypeEnumBinary   FacetAttributeTypeEnum = "BINARY"
	FacetAttributeTypeEnumBoolean  FacetAttributeTypeEnum = "BOOLEAN"
	FacetAttributeTypeEnumNumber   FacetAttributeTypeEnum = "NUMBER"
	FacetAttributeTypeEnumDatetime FacetAttributeTypeEnum = "DATETIME"
)

func (e FacetAttributeTypeEnum) ToPointer() *FacetAttributeTypeEnum {
	return &e
}

func (e *FacetAttributeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "STRING":
		fallthrough
	case "BINARY":
		fallthrough
	case "BOOLEAN":
		fallthrough
	case "NUMBER":
		fallthrough
	case "DATETIME":
		*e = FacetAttributeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for FacetAttributeTypeEnum: %v", v)
	}
}
