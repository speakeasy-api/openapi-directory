/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CloudSqlSettingsInput - Settings for creating a Cloud SQL database instance.
 */
public class CloudSqlSettingsInput {
    /**
     * The activation policy specifies when the instance is activated; it is applicable only when the instance state is 'RUNNABLE'. Valid values: 'ALWAYS': The instance is on, and remains so even in the absence of connection requests. `NEVER`: The instance is off; it is not activated, even if a connection request arrives.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("activationPolicy")
    public CloudSqlSettingsActivationPolicyEnum activationPolicy;
    public CloudSqlSettingsInput withActivationPolicy(CloudSqlSettingsActivationPolicyEnum activationPolicy) {
        this.activationPolicy = activationPolicy;
        return this;
    }
    
    /**
     * [default: ON] If you enable this setting, Cloud SQL checks your available storage every 30 seconds. If the available storage falls below a threshold size, Cloud SQL automatically adds additional storage capacity. If the available storage repeatedly falls below the threshold size, Cloud SQL continues to add storage until it reaches the maximum of 30 TB.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoStorageIncrease")
    public Boolean autoStorageIncrease;
    public CloudSqlSettingsInput withAutoStorageIncrease(Boolean autoStorageIncrease) {
        this.autoStorageIncrease = autoStorageIncrease;
        return this;
    }
    
    /**
     * The storage capacity available to the database, in GB. The minimum (and default) size is 10GB.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataDiskSizeGb")
    public String dataDiskSizeGb;
    public CloudSqlSettingsInput withDataDiskSizeGb(String dataDiskSizeGb) {
        this.dataDiskSizeGb = dataDiskSizeGb;
        return this;
    }
    
    /**
     * The type of storage: `PD_SSD` (default) or `PD_HDD`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataDiskType")
    public CloudSqlSettingsDataDiskTypeEnum dataDiskType;
    public CloudSqlSettingsInput withDataDiskType(CloudSqlSettingsDataDiskTypeEnum dataDiskType) {
        this.dataDiskType = dataDiskType;
        return this;
    }
    
    /**
     * The database flags passed to the Cloud SQL instance at startup. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("databaseFlags")
    public java.util.Map<String, String> databaseFlags;
    public CloudSqlSettingsInput withDatabaseFlags(java.util.Map<String, String> databaseFlags) {
        this.databaseFlags = databaseFlags;
        return this;
    }
    
    /**
     * The database engine type and version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("databaseVersion")
    public CloudSqlSettingsDatabaseVersionEnum databaseVersion;
    public CloudSqlSettingsInput withDatabaseVersion(CloudSqlSettingsDatabaseVersionEnum databaseVersion) {
        this.databaseVersion = databaseVersion;
        return this;
    }
    
    /**
     * IP Management configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipConfig")
    public SqlIpConfig ipConfig;
    public CloudSqlSettingsInput withIpConfig(SqlIpConfig ipConfig) {
        this.ipConfig = ipConfig;
        return this;
    }
    
    /**
     * Input only. Initial root password.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rootPassword")
    public String rootPassword;
    public CloudSqlSettingsInput withRootPassword(String rootPassword) {
        this.rootPassword = rootPassword;
        return this;
    }
    
    /**
     * The Database Migration Service source connection profile ID, in the format: `projects/my_project_name/locations/us-central1/connectionProfiles/connection_profile_ID`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceId")
    public String sourceId;
    public CloudSqlSettingsInput withSourceId(String sourceId) {
        this.sourceId = sourceId;
        return this;
    }
    
    /**
     * The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storageAutoResizeLimit")
    public String storageAutoResizeLimit;
    public CloudSqlSettingsInput withStorageAutoResizeLimit(String storageAutoResizeLimit) {
        this.storageAutoResizeLimit = storageAutoResizeLimit;
        return this;
    }
    
    /**
     * The tier (or machine type) for this instance, for example: `db-n1-standard-1` (MySQL instances). For more information, see [Cloud SQL Instance Settings](https://cloud.google.com/sql/docs/mysql/instance-settings).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tier")
    public String tier;
    public CloudSqlSettingsInput withTier(String tier) {
        this.tier = tier;
        return this;
    }
    
    /**
     * The resource labels for a Cloud SQL instance to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "18kg", "count": "3" }`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userLabels")
    public java.util.Map<String, String> userLabels;
    public CloudSqlSettingsInput withUserLabels(java.util.Map<String, String> userLabels) {
        this.userLabels = userLabels;
        return this;
    }
    
    /**
     * The Google Cloud Platform zone where your Cloud SQL database instance is located.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zone")
    public String zone;
    public CloudSqlSettingsInput withZone(String zone) {
        this.zone = zone;
        return this;
    }
    
}
