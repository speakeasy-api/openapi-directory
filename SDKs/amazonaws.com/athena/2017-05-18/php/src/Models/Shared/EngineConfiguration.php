<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * EngineConfiguration - Contains data processing unit (DPU) configuration settings and parameter mappings for a notebook engine.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class EngineConfiguration
{
    /**
     * $additionalConfigs
     * 
     * @var ?array<string, string> $additionalConfigs
     */
	#[\JMS\Serializer\Annotation\SerializedName('AdditionalConfigs')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $additionalConfigs = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('CoordinatorDpuSize')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $coordinatorDpuSize = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('DefaultExecutorDpuSize')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $defaultExecutorDpuSize = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('MaxConcurrentDpus')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $maxConcurrentDpus;
    
	public function __construct()
	{
		$this->additionalConfigs = null;
		$this->coordinatorDpuSize = null;
		$this->defaultExecutorDpuSize = null;
		$this->maxConcurrentDpus = 0;
	}
}
