// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type CreateUpdatePriceOrFixedPricePathParams struct {
	// SKU unique identifier number.
	ItemID int64 `pathParam:"style=simple,explode=false,name=itemId"`
}

type CreateUpdatePriceOrFixedPriceHeaders struct {
	// HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
	Accept string `header:"style=simple,explode=false,name=Accept"`
	// Describes the type of the content being sent.
	ContentType string `header:"style=simple,explode=false,name=Content-Type"`
}

// CreateUpdatePriceOrFixedPriceRequestBodyFixedPricesDateRange - Period of time when the fixed price will be applied to the SKU.
type CreateUpdatePriceOrFixedPriceRequestBodyFixedPricesDateRange struct {
	// Start date of the price.
	From string `json:"from"`
	// End date of the price.
	To string `json:"to"`
}

// CreateUpdatePriceOrFixedPriceRequestBodyFixedPrices - Array with general information about the SKU's fixed prices.
type CreateUpdatePriceOrFixedPriceRequestBodyFixedPrices struct {
	// Period of time when the fixed price will be applied to the SKU.
	DateRange *CreateUpdatePriceOrFixedPriceRequestBodyFixedPricesDateRange `json:"dateRange,omitempty"`
	// SKU List Fixed Price.
	ListPrice *float64 `json:"listPrice,omitempty"`
	// Minimum quantity of the SKU for the fixed price to be applied.
	MinQuantity int64 `json:"minQuantity"`
	// Trade policy name or ID that will have the fixed price configured.
	TradePolicyID string `json:"tradePolicyId"`
	// Fixed price value.
	Value float64 `json:"value"`
}

type CreateUpdatePriceOrFixedPriceRequestBody struct {
	// SKU selling base price. If you decide to fill only the `basePrice` item, the `markup` and `costPrice` will be automatically generated to adapt to the number inserted in `basePrice`.
	BasePrice float64 `json:"basePrice"`
	// SKU selling cost price. If you decide to fill the `costPrice` item, you must also fill the `markup` and `basePrice` will be automatically generated based on both values.
	CostPrice   *float64                                              `json:"costPrice,omitempty"`
	FixedPrices []CreateUpdatePriceOrFixedPriceRequestBodyFixedPrices `json:"fixedPrices,omitempty"`
	// SKU's suggested selling price.
	ListPrice float64 `json:"listPrice"`
	// The profit percentage that is to be obtained from the sale of that SKU. If you decide to fill the `markup` item, you must also fill the `costPrice`. The `basePrice` will be automatically generated based on both values.
	Markup int64 `json:"markup"`
}

type CreateUpdatePriceOrFixedPriceRequest struct {
	PathParams CreateUpdatePriceOrFixedPricePathParams
	Headers    CreateUpdatePriceOrFixedPriceHeaders
	Request    *CreateUpdatePriceOrFixedPriceRequestBody `request:"mediaType=application/json"`
}

type CreateUpdatePriceOrFixedPriceResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
