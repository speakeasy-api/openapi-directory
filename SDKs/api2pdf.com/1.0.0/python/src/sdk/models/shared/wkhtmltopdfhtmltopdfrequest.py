"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import wkhtmltopdfadvancedoptions as shared_wkhtmltopdfadvancedoptions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WkHTMLToPdfHTMLToPdfRequest:
    r"""A JSON object as a payload is required within the body of the request. The following attributes of the JSON object are detailed below:
    - `html` *(string, required)* - raw HTML to convert to PDF
    - `inlinePdf` *(boolean, optional)* - Open the PDF in a browser window. Default to false.
    - `fileName` *(string, optional)* - Specify a file name for the output PDF. Random name if not specified.
    - `options` *(object, optional)* - Include advanced WkHtmlToPdf options like margins, headers, and footers. [See full list of advanced options here](https://www.api2pdf.com/documentation/advanced-options-wkhtmltopdf/).
    """
    
    html: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('html') }})  
    file_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fileName'), 'exclude': lambda f: f is None }})  
    inline_pdf: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('inlinePdf'), 'exclude': lambda f: f is None }})  
    options: Optional[shared_wkhtmltopdfadvancedoptions.WkHTMLToPdfAdvancedOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options'), 'exclude': lambda f: f is None }})  
    