"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class SpotSetTypeExtendedOperatorEnum(str, Enum):
    r"""Operator"""
    GT = 'gt'
    GTE = 'gte'
    EQ = 'eq'
    IN = 'in'
    NE = 'ne'
    LT = 'lt'
    LTE = 'lte'
    STARTS = 'starts'
    ENDS = 'ends'

class SpotSetTypeExtendedTypeEnum(str, Enum):
    r"""Spot set type `extended`; Items that have the extended property (key) and match the requirement for value using the specified operator, as specified by this set"""
    EXTENDED = 'extended'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SpotSetTypeExtendedInput:
    
    key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key'), 'exclude': lambda f: f is None }})
    r"""Extended data property key"""  
    operator: Optional[SpotSetTypeExtendedOperatorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operator'), 'exclude': lambda f: f is None }})
    r"""Operator"""  
    setid: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('setid'), 'exclude': lambda f: f is None }})
    r"""Spot set unique identifier. Must be unique within a single device"""  
    type: Optional[SpotSetTypeExtendedTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Spot set type `extended`; Items that have the extended property (key) and match the requirement for value using the specified operator, as specified by this set"""  
    value: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""Extended data property value."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SpotSetTypeExtended:
    
    created_by: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_by'), 'exclude': lambda f: f is None }})
    r"""Who was responsible for the creation of this spot list. Value determines who's allowed to manages this object."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier for resource."""  
    key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('key'), 'exclude': lambda f: f is None }})
    r"""Extended data property key"""  
    operator: Optional[SpotSetTypeExtendedOperatorEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('operator'), 'exclude': lambda f: f is None }})
    r"""Operator"""  
    setid: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('setid'), 'exclude': lambda f: f is None }})
    r"""Spot set unique identifier. Must be unique within a single device"""  
    spot_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('spot_id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier for resource."""  
    time_created: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('time_created'), 'exclude': lambda f: f is None }})
    r"""[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) formatted string for when this resource was created."""  
    time_updated: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('time_updated'), 'exclude': lambda f: f is None }})
    r"""[ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) formatted string for when this resource was updated."""  
    type: Optional[SpotSetTypeExtendedTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""Spot set type `extended`; Items that have the extended property (key) and match the requirement for value using the specified operator, as specified by this set"""  
    value: Optional[Any] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""Extended data property value."""  
    