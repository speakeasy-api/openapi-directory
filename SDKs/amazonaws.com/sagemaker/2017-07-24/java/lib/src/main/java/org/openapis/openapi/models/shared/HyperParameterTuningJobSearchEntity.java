/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * HyperParameterTuningJobSearchEntity - An entity returned by the &lt;a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_SearchRecord.html"&gt;SearchRecord&lt;/a&gt; API containing the properties of a hyperparameter tuning job.
 */
public class HyperParameterTuningJobSearchEntity {
    /**
     * The container for the summary information about a training job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BestTrainingJob")
    public HyperParameterTrainingJobSummary bestTrainingJob;
    public HyperParameterTuningJobSearchEntity withBestTrainingJob(HyperParameterTrainingJobSummary bestTrainingJob) {
        this.bestTrainingJob = bestTrainingJob;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ConsumedResources")
    public HyperParameterTuningJobConsumedResources consumedResources;
    public HyperParameterTuningJobSearchEntity withConsumedResources(HyperParameterTuningJobConsumedResources consumedResources) {
        this.consumedResources = consumedResources;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;
    public HyperParameterTuningJobSearchEntity withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailureReason")
    public String failureReason;
    public HyperParameterTuningJobSearchEntity withFailureReason(String failureReason) {
        this.failureReason = failureReason;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("HyperParameterTuningEndTime")
    public OffsetDateTime hyperParameterTuningEndTime;
    public HyperParameterTuningJobSearchEntity withHyperParameterTuningEndTime(OffsetDateTime hyperParameterTuningEndTime) {
        this.hyperParameterTuningEndTime = hyperParameterTuningEndTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HyperParameterTuningJobArn")
    public String hyperParameterTuningJobArn;
    public HyperParameterTuningJobSearchEntity withHyperParameterTuningJobArn(String hyperParameterTuningJobArn) {
        this.hyperParameterTuningJobArn = hyperParameterTuningJobArn;
        return this;
    }
    
    /**
     * Configures a hyperparameter tuning job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HyperParameterTuningJobConfig")
    public HyperParameterTuningJobConfig hyperParameterTuningJobConfig;
    public HyperParameterTuningJobSearchEntity withHyperParameterTuningJobConfig(HyperParameterTuningJobConfig hyperParameterTuningJobConfig) {
        this.hyperParameterTuningJobConfig = hyperParameterTuningJobConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HyperParameterTuningJobName")
    public String hyperParameterTuningJobName;
    public HyperParameterTuningJobSearchEntity withHyperParameterTuningJobName(String hyperParameterTuningJobName) {
        this.hyperParameterTuningJobName = hyperParameterTuningJobName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("HyperParameterTuningJobStatus")
    public HyperParameterTuningJobStatusEnum hyperParameterTuningJobStatus;
    public HyperParameterTuningJobSearchEntity withHyperParameterTuningJobStatus(HyperParameterTuningJobStatusEnum hyperParameterTuningJobStatus) {
        this.hyperParameterTuningJobStatus = hyperParameterTuningJobStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastModifiedTime")
    public OffsetDateTime lastModifiedTime;
    public HyperParameterTuningJobSearchEntity withLastModifiedTime(OffsetDateTime lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }
    
    /**
     * Specifies the number of training jobs that this hyperparameter tuning job launched, categorized by the status of their objective metric. The objective metric status shows whether the final objective metric for the training job has been evaluated by the tuning job and used in the hyperparameter tuning process.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ObjectiveStatusCounters")
    public ObjectiveStatusCounters objectiveStatusCounters;
    public HyperParameterTuningJobSearchEntity withObjectiveStatusCounters(ObjectiveStatusCounters objectiveStatusCounters) {
        this.objectiveStatusCounters = objectiveStatusCounters;
        return this;
    }
    
    /**
     * The container for the summary information about a training job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OverallBestTrainingJob")
    public HyperParameterTrainingJobSummary overallBestTrainingJob;
    public HyperParameterTuningJobSearchEntity withOverallBestTrainingJob(HyperParameterTrainingJobSummary overallBestTrainingJob) {
        this.overallBestTrainingJob = overallBestTrainingJob;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Tags")
    public Tag[] tags;
    public HyperParameterTuningJobSearchEntity withTags(Tag[] tags) {
        this.tags = tags;
        return this;
    }
    
    /**
     * Defines the training jobs launched by a hyperparameter tuning job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrainingJobDefinition")
    public HyperParameterTrainingJobDefinition trainingJobDefinition;
    public HyperParameterTuningJobSearchEntity withTrainingJobDefinition(HyperParameterTrainingJobDefinition trainingJobDefinition) {
        this.trainingJobDefinition = trainingJobDefinition;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrainingJobDefinitions")
    public HyperParameterTrainingJobDefinition[] trainingJobDefinitions;
    public HyperParameterTuningJobSearchEntity withTrainingJobDefinitions(HyperParameterTrainingJobDefinition[] trainingJobDefinitions) {
        this.trainingJobDefinitions = trainingJobDefinitions;
        return this;
    }
    
    /**
     * The numbers of training jobs launched by a hyperparameter tuning job, categorized by status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TrainingJobStatusCounters")
    public TrainingJobStatusCounters trainingJobStatusCounters;
    public HyperParameterTuningJobSearchEntity withTrainingJobStatusCounters(TrainingJobStatusCounters trainingJobStatusCounters) {
        this.trainingJobStatusCounters = trainingJobStatusCounters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TuningJobCompletionDetails")
    public HyperParameterTuningJobCompletionDetails tuningJobCompletionDetails;
    public HyperParameterTuningJobSearchEntity withTuningJobCompletionDetails(HyperParameterTuningJobCompletionDetails tuningJobCompletionDetails) {
        this.tuningJobCompletionDetails = tuningJobCompletionDetails;
        return this;
    }
    
    /**
     * &lt;p&gt;Specifies the configuration for a hyperparameter tuning job that uses one or more previous hyperparameter tuning jobs as a starting point. The results of previous tuning jobs are used to inform which combinations of hyperparameters to search over in the new tuning job.&lt;/p&gt; &lt;p&gt;All training jobs launched by the new hyperparameter tuning job are evaluated by using the objective metric, and the training job that performs the best is compared to the best training jobs from the parent tuning jobs. From these, the training job that performs the best as measured by the objective metric is returned as the overall best training job.&lt;/p&gt; &lt;note&gt; &lt;p&gt;All training jobs launched by parent hyperparameter tuning jobs and the new hyperparameter tuning jobs count against the limit of training jobs for the tuning job.&lt;/p&gt; &lt;/note&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("WarmStartConfig")
    public HyperParameterTuningJobWarmStartConfig warmStartConfig;
    public HyperParameterTuningJobSearchEntity withWarmStartConfig(HyperParameterTuningJobWarmStartConfig warmStartConfig) {
        this.warmStartConfig = warmStartConfig;
        return this;
    }
    
}
