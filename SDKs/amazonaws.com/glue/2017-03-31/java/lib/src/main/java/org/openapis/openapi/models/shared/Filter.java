/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Filter - Specifies a transform that splits a dataset into two, based on a filter condition.
 */
public class Filter {
    @JsonProperty("Filters")
    public FilterExpression[] filters;

    public Filter withFilters(FilterExpression[] filters) {
        this.filters = filters;
        return this;
    }
    
    @JsonProperty("Inputs")
    public String[] inputs;

    public Filter withInputs(String[] inputs) {
        this.inputs = inputs;
        return this;
    }
    
    @JsonProperty("LogicalOperator")
    public FilterLogicalOperatorEnum logicalOperator;

    public Filter withLogicalOperator(FilterLogicalOperatorEnum logicalOperator) {
        this.logicalOperator = logicalOperator;
        return this;
    }
    
    @JsonProperty("Name")
    public String name;

    public Filter withName(String name) {
        this.name = name;
        return this;
    }
    
    public Filter(@JsonProperty("Filters") FilterExpression[] filters, @JsonProperty("Inputs") String[] inputs, @JsonProperty("LogicalOperator") FilterLogicalOperatorEnum logicalOperator, @JsonProperty("Name") String name) {
        this.filters = filters;
        this.inputs = inputs;
        this.logicalOperator = logicalOperator;
        this.name = name;
  }
}
