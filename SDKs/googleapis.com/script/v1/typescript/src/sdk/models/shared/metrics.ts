/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MetricsValue } from "./metricsvalue";
import { Expose, Type } from "class-transformer";

/**
 * Resource containing usage stats for a given script, based on the supplied filter and mask present in the request.
 */
export class Metrics extends SpeakeasyBase {
  /**
   * Number of active users.
   */
  @SpeakeasyMetadata({ elemType: MetricsValue })
  @Expose({ name: "activeUsers" })
  @Type(() => MetricsValue)
  activeUsers?: MetricsValue[];

  /**
   * Number of failed executions.
   */
  @SpeakeasyMetadata({ elemType: MetricsValue })
  @Expose({ name: "failedExecutions" })
  @Type(() => MetricsValue)
  failedExecutions?: MetricsValue[];

  /**
   * Number of total executions.
   */
  @SpeakeasyMetadata({ elemType: MetricsValue })
  @Expose({ name: "totalExecutions" })
  @Type(() => MetricsValue)
  totalExecutions?: MetricsValue[];
}
