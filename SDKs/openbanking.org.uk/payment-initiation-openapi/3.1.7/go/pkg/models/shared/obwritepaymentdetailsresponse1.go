// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum - Status of a transfe, as assigned by the transaction administrator.
type OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum string

const (
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumAccepted                             OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "Accepted"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumAcceptedCancellationRequest          OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "AcceptedCancellationRequest"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumAcceptedCreditSettlementCompleted    OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "AcceptedCreditSettlementCompleted"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumAcceptedCustomerProfile              OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "AcceptedCustomerProfile"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumAcceptedFundsChecked                 OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "AcceptedFundsChecked"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumAcceptedSettlementCompleted          OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "AcceptedSettlementCompleted"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumAcceptedSettlementInProcess          OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "AcceptedSettlementInProcess"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumAcceptedTechnicalValidation          OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "AcceptedTechnicalValidation"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumAcceptedWithChange                   OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "AcceptedWithChange"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumAcceptedWithoutPosting               OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "AcceptedWithoutPosting"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumCancelled                            OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "Cancelled"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumNoCancellationProcess                OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "NoCancellationProcess"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumPartiallyAcceptedCancellationRequest OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "PartiallyAcceptedCancellationRequest"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumPartiallyAcceptedTechnicalCorrect    OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "PartiallyAcceptedTechnicalCorrect"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumPaymentCancelled                     OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "PaymentCancelled"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumPending                              OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "Pending"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumPendingCancellationRequest           OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "PendingCancellationRequest"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumReceived                             OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "Received"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumRejected                             OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "Rejected"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnumRejectedCancellationRequest          OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum = "RejectedCancellationRequest"
)

func (e *OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Accepted":
		fallthrough
	case "AcceptedCancellationRequest":
		fallthrough
	case "AcceptedCreditSettlementCompleted":
		fallthrough
	case "AcceptedCustomerProfile":
		fallthrough
	case "AcceptedFundsChecked":
		fallthrough
	case "AcceptedSettlementCompleted":
		fallthrough
	case "AcceptedSettlementInProcess":
		fallthrough
	case "AcceptedTechnicalValidation":
		fallthrough
	case "AcceptedWithChange":
		fallthrough
	case "AcceptedWithoutPosting":
		fallthrough
	case "Cancelled":
		fallthrough
	case "NoCancellationProcess":
		fallthrough
	case "PartiallyAcceptedCancellationRequest":
		fallthrough
	case "PartiallyAcceptedTechnicalCorrect":
		fallthrough
	case "PaymentCancelled":
		fallthrough
	case "Pending":
		fallthrough
	case "PendingCancellationRequest":
		fallthrough
	case "Received":
		fallthrough
	case "Rejected":
		fallthrough
	case "RejectedCancellationRequest":
		*e = OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum: %s", s)
	}
}

// OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnum - Reason Code provided for the status of a transfer.
type OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnum string

const (
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnumCancelled                OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnum = "Cancelled"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnumPendingFailingSettlement OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnum = "PendingFailingSettlement"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnumPendingSettlement        OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnum = "PendingSettlement"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnumProprietary              OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnum = "Proprietary"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnumProprietaryRejection     OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnum = "ProprietaryRejection"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnumSuspended                OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnum = "Suspended"
	OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnumUnmatched                OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnum = "Unmatched"
)

func (e *OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Cancelled":
		fallthrough
	case "PendingFailingSettlement":
		fallthrough
	case "PendingSettlement":
		fallthrough
	case "Proprietary":
		fallthrough
	case "ProprietaryRejection":
		fallthrough
	case "Suspended":
		fallthrough
	case "Unmatched":
		*e = OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnum: %s", s)
	}
}

// OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetail - Payment status details as per underlying Payment Rail.
type OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetail struct {
	// User community specific instrument.
	// Usage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level.
	LocalInstrument *string `json:"LocalInstrument,omitempty"`
	// Status of a transfer, as assigned by the transaction administrator.
	Status string `json:"Status"`
	// Reason Code provided for the status of a transfer.
	StatusReason *OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetailStatusReasonEnum `json:"StatusReason,omitempty"`
	// Reason provided for the status of a transfer.
	StatusReasonDescription *string `json:"StatusReasonDescription,omitempty"`
}

// OBWritePaymentDetailsResponse1DataPaymentStatus - Payment status details.
type OBWritePaymentDetailsResponse1DataPaymentStatus struct {
	// Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable.
	PaymentTransactionID string `json:"PaymentTransactionId"`
	// Status of a transfe, as assigned by the transaction administrator.
	Status OBWritePaymentDetailsResponse1DataPaymentStatusStatusEnum `json:"Status"`
	// Payment status details as per underlying Payment Rail.
	StatusDetail *OBWritePaymentDetailsResponse1DataPaymentStatusStatusDetail `json:"StatusDetail,omitempty"`
	// Date and time at which the status was assigned to the transfer.All dates in the JSON payloads are represented in ISO 8601 date-time format.
	// All date-time fields in responses must include the timezone. An example is below:
	// 2017-04-05T10:43:07+00:00
	StatusUpdateDateTime time.Time `json:"StatusUpdateDateTime"`
}

type OBWritePaymentDetailsResponse1Data struct {
	PaymentStatus []OBWritePaymentDetailsResponse1DataPaymentStatus `json:"PaymentStatus,omitempty"`
}

// OBWritePaymentDetailsResponse1 - Payment Details Read
type OBWritePaymentDetailsResponse1 struct {
	Data OBWritePaymentDetailsResponse1Data `json:"Data"`
	// Links relevant to the payload
	Links *Links `json:"Links,omitempty"`
	// Meta Data relevant to the payload
	Meta *Meta `json:"Meta,omitempty"`
}
