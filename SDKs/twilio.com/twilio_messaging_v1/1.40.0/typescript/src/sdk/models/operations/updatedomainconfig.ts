/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateDomainConfigServerList = [
  "https://messaging.twilio.com",
] as const;

export class UpdateDomainConfigSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class UpdateDomainConfigUpdateDomainConfigRequest extends SpeakeasyBase {
  /**
   * URL to receive click events to your webhook whenever the recipients click on the shortened links
   */
  @SpeakeasyMetadata({ data: "form, name=CallbackUrl" })
  callbackUrl?: string;

  /**
   * Any requests we receive to this domain that do not match an existing shortened message will be redirected to the fallback url. These will likely be either expired messages, random misdirected traffic, or intentional scraping.
   */
  @SpeakeasyMetadata({ data: "form, name=FallbackUrl" })
  fallbackUrl?: string;

  /**
   * A list of messagingServiceSids (with prefix MG)
   */
  @SpeakeasyMetadata({ data: "form, name=MessagingServiceSids" })
  messagingServiceSids: string[];

  /**
   * An action type for messaging_service_sids operation (ADD, DELETE, REPLACE)
   */
  @SpeakeasyMetadata({ data: "form, name=MessagingServiceSidsAction" })
  messagingServiceSidsAction?: string;
}

export class UpdateDomainConfigRequest extends SpeakeasyBase {
  /**
   * Unique string used to identify the domain that this config should be associated with.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=DomainSid",
  })
  domainSid: string;

  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateDomainConfigUpdateDomainConfigRequest;
}

export class UpdateDomainConfigResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  messagingV1DomainConfig?: shared.MessagingV1DomainConfig;
}
