<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * GoogleCloudDatacatalogV1beta1TagFieldInput - Contains the value and supporting information for a field within a Tag.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class GoogleCloudDatacatalogV1beta1TagFieldInput
{
    /**
     * Holds the value for a tag field with boolean type.
     * 
     * @var ?bool $boolValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('boolValue')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $boolValue = null;
    
    /**
     * Holds the value for a tag field with double type.
     * 
     * @var ?float $doubleValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('doubleValue')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $doubleValue = null;
    
    /**
     * Holds an enum value.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\GoogleCloudDatacatalogV1beta1TagFieldEnumValue $enumValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('enumValue')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\GoogleCloudDatacatalogV1beta1TagFieldEnumValue')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GoogleCloudDatacatalogV1beta1TagFieldEnumValue $enumValue = null;
    
    /**
     * Holds the value for a tag field with string type.
     * 
     * @var ?string $stringValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('stringValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stringValue = null;
    
    /**
     * Holds the value for a tag field with timestamp type.
     * 
     * @var ?string $timestampValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('timestampValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $timestampValue = null;
    
	public function __construct()
	{
		$this->boolValue = null;
		$this->doubleValue = null;
		$this->enumValue = null;
		$this->stringValue = null;
		$this->timestampValue = null;
	}
}
