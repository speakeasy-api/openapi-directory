/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class StorageObjectsRewriteRequest {
    @SpeakeasyMetadata("request:mediaType=application/json")
    public org.openapis.openapi.models.shared.Object object;
    public StorageObjectsRewriteRequest withObject(org.openapis.openapi.models.shared.Object object) {
        this.object = object;
        return this;
    }
    
    /**
     * Data format for the response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=alt")
    public org.openapis.openapi.models.shared.AltEnum alt;
    public StorageObjectsRewriteRequest withAlt(org.openapis.openapi.models.shared.AltEnum alt) {
        this.alt = alt;
        return this;
    }
    
    /**
     * Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=destinationBucket")
    public String destinationBucket;
    public StorageObjectsRewriteRequest withDestinationBucket(String destinationBucket) {
        this.destinationBucket = destinationBucket;
        return this;
    }
    
    /**
     * Resource name of the Cloud KMS key, of the form projects/my-project/locations/global/keyRings/my-kr/cryptoKeys/my-key, that will be used to encrypt the object. Overrides the object metadata's kms_key_name value, if any.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=destinationKmsKeyName")
    public String destinationKmsKeyName;
    public StorageObjectsRewriteRequest withDestinationKmsKeyName(String destinationKmsKeyName) {
        this.destinationKmsKeyName = destinationKmsKeyName;
        return this;
    }
    
    /**
     * Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=destinationObject")
    public String destinationObject;
    public StorageObjectsRewriteRequest withDestinationObject(String destinationObject) {
        this.destinationObject = destinationObject;
        return this;
    }
    
    /**
     * Apply a predefined set of access controls to the destination object.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=destinationPredefinedAcl")
    public StorageObjectsRewriteDestinationPredefinedACLEnum destinationPredefinedAcl;
    public StorageObjectsRewriteRequest withDestinationPredefinedAcl(StorageObjectsRewriteDestinationPredefinedACLEnum destinationPredefinedAcl) {
        this.destinationPredefinedAcl = destinationPredefinedAcl;
        return this;
    }
    
    /**
     * Selector specifying which fields to include in a partial response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;
    public StorageObjectsRewriteRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ifGenerationMatch")
    public String ifGenerationMatch;
    public StorageObjectsRewriteRequest withIfGenerationMatch(String ifGenerationMatch) {
        this.ifGenerationMatch = ifGenerationMatch;
        return this;
    }
    
    /**
     * Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ifGenerationNotMatch")
    public String ifGenerationNotMatch;
    public StorageObjectsRewriteRequest withIfGenerationNotMatch(String ifGenerationNotMatch) {
        this.ifGenerationNotMatch = ifGenerationNotMatch;
        return this;
    }
    
    /**
     * Makes the operation conditional on whether the destination object's current metageneration matches the given value.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ifMetagenerationMatch")
    public String ifMetagenerationMatch;
    public StorageObjectsRewriteRequest withIfMetagenerationMatch(String ifMetagenerationMatch) {
        this.ifMetagenerationMatch = ifMetagenerationMatch;
        return this;
    }
    
    /**
     * Makes the operation conditional on whether the destination object's current metageneration does not match the given value.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ifMetagenerationNotMatch")
    public String ifMetagenerationNotMatch;
    public StorageObjectsRewriteRequest withIfMetagenerationNotMatch(String ifMetagenerationNotMatch) {
        this.ifMetagenerationNotMatch = ifMetagenerationNotMatch;
        return this;
    }
    
    /**
     * Makes the operation conditional on whether the source object's current generation matches the given value.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ifSourceGenerationMatch")
    public String ifSourceGenerationMatch;
    public StorageObjectsRewriteRequest withIfSourceGenerationMatch(String ifSourceGenerationMatch) {
        this.ifSourceGenerationMatch = ifSourceGenerationMatch;
        return this;
    }
    
    /**
     * Makes the operation conditional on whether the source object's current generation does not match the given value.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ifSourceGenerationNotMatch")
    public String ifSourceGenerationNotMatch;
    public StorageObjectsRewriteRequest withIfSourceGenerationNotMatch(String ifSourceGenerationNotMatch) {
        this.ifSourceGenerationNotMatch = ifSourceGenerationNotMatch;
        return this;
    }
    
    /**
     * Makes the operation conditional on whether the source object's current metageneration matches the given value.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ifSourceMetagenerationMatch")
    public String ifSourceMetagenerationMatch;
    public StorageObjectsRewriteRequest withIfSourceMetagenerationMatch(String ifSourceMetagenerationMatch) {
        this.ifSourceMetagenerationMatch = ifSourceMetagenerationMatch;
        return this;
    }
    
    /**
     * Makes the operation conditional on whether the source object's current metageneration does not match the given value.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=ifSourceMetagenerationNotMatch")
    public String ifSourceMetagenerationNotMatch;
    public StorageObjectsRewriteRequest withIfSourceMetagenerationNotMatch(String ifSourceMetagenerationNotMatch) {
        this.ifSourceMetagenerationNotMatch = ifSourceMetagenerationNotMatch;
        return this;
    }
    
    /**
     * API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=key")
    public String key;
    public StorageObjectsRewriteRequest withKey(String key) {
        this.key = key;
        return this;
    }
    
    /**
     * The maximum number of bytes that will be rewritten per rewrite request. Most callers shouldn't need to specify this parameter - it is primarily in place to support testing. If specified the value must be an integral multiple of 1 MiB (1048576). Also, this only applies to requests where the source and destination span locations and/or storage classes. Finally, this value must not change across rewrite calls else you'll get an error that the rewriteToken is invalid.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=maxBytesRewrittenPerCall")
    public String maxBytesRewrittenPerCall;
    public StorageObjectsRewriteRequest withMaxBytesRewrittenPerCall(String maxBytesRewrittenPerCall) {
        this.maxBytesRewrittenPerCall = maxBytesRewrittenPerCall;
        return this;
    }
    
    /**
     * OAuth 2.0 token for the current user.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=oauth_token")
    public String oauthToken;
    public StorageObjectsRewriteRequest withOauthToken(String oauthToken) {
        this.oauthToken = oauthToken;
        return this;
    }
    
    /**
     * Returns response with indentations and line breaks.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=prettyPrint")
    public Boolean prettyPrint;
    public StorageObjectsRewriteRequest withPrettyPrint(Boolean prettyPrint) {
        this.prettyPrint = prettyPrint;
        return this;
    }
    
    /**
     * Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=projection")
    public StorageObjectsRewriteProjectionEnum projection;
    public StorageObjectsRewriteRequest withProjection(StorageObjectsRewriteProjectionEnum projection) {
        this.projection = projection;
        return this;
    }
    
    /**
     * An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=quotaUser")
    public String quotaUser;
    public StorageObjectsRewriteRequest withQuotaUser(String quotaUser) {
        this.quotaUser = quotaUser;
        return this;
    }
    
    /**
     * Include this field (from the previous rewrite response) on each rewrite request after the first one, until the rewrite response 'done' flag is true. Calls that provide a rewriteToken can omit all other request fields, but if included those fields must match the values provided in the first rewrite request.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=rewriteToken")
    public String rewriteToken;
    public StorageObjectsRewriteRequest withRewriteToken(String rewriteToken) {
        this.rewriteToken = rewriteToken;
        return this;
    }
    
    /**
     * Name of the bucket in which to find the source object.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=sourceBucket")
    public String sourceBucket;
    public StorageObjectsRewriteRequest withSourceBucket(String sourceBucket) {
        this.sourceBucket = sourceBucket;
        return this;
    }
    
    /**
     * If present, selects a specific revision of the source object (as opposed to the latest version, the default).
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sourceGeneration")
    public String sourceGeneration;
    public StorageObjectsRewriteRequest withSourceGeneration(String sourceGeneration) {
        this.sourceGeneration = sourceGeneration;
        return this;
    }
    
    /**
     * Name of the source object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=sourceObject")
    public String sourceObject;
    public StorageObjectsRewriteRequest withSourceObject(String sourceObject) {
        this.sourceObject = sourceObject;
        return this;
    }
    
    /**
     * Upload protocol for media (e.g. "media", "multipart", "resumable").
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=uploadType")
    public String uploadType;
    public StorageObjectsRewriteRequest withUploadType(String uploadType) {
        this.uploadType = uploadType;
        return this;
    }
    
    /**
     * Deprecated. Please use quotaUser instead.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=userIp")
    public String userIp;
    public StorageObjectsRewriteRequest withUserIp(String userIp) {
        this.userIp = userIp;
        return this;
    }
    
    /**
     * The project to be billed for this request. Required for Requester Pays buckets.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=userProject")
    public String userProject;
    public StorageObjectsRewriteRequest withUserProject(String userProject) {
        this.userProject = userProject;
        return this;
    }
    
}
