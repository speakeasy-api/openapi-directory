/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonValue;

/**
 * GetHLSStreamingSessionURLRequestBodyContainerFormatEnum - &lt;p&gt;Specifies which format should be used for packaging the media. Specifying the &lt;code&gt;FRAGMENTED_MP4&lt;/code&gt; container format packages the media into MP4 fragments (fMP4 or CMAF). This is the recommended packaging because there is minimal packaging overhead. The other container format option is &lt;code&gt;MPEG_TS&lt;/code&gt;. HLS has supported MPEG TS chunks since it was released and is sometimes the only supported packaging on older HLS players. MPEG TS typically has a 5-25 percent packaging overhead. This means MPEG TS typically requires 5-25 percent more bandwidth and cost than fMP4.&lt;/p&gt; &lt;p&gt;The default is &lt;code&gt;FRAGMENTED_MP4&lt;/code&gt;.&lt;/p&gt;
 */
public enum GetHLSStreamingSessionURLRequestBodyContainerFormatEnum {
    FRAGMENTED_MP4("FRAGMENTED_MP4"),
    MPEG_TS("MPEG_TS");

    @JsonValue
    public final String value;

    private GetHLSStreamingSessionURLRequestBodyContainerFormatEnum(String value) {
        this.value = value;
    }
}
