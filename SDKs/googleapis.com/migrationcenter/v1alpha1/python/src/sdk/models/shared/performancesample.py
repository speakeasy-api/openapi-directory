"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cpuusagesample as shared_cpuusagesample
from ..shared import diskusagesample as shared_diskusagesample
from ..shared import memoryusagesample as shared_memoryusagesample
from ..shared import networkusagesample as shared_networkusagesample
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PerformanceSample:
    r"""Performance data sample."""
    
    cpu: Optional[shared_cpuusagesample.CPUUsageSample] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cpu'), 'exclude': lambda f: f is None }})
    r"""CPU usage sample."""  
    disk: Optional[shared_diskusagesample.DiskUsageSample] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('disk'), 'exclude': lambda f: f is None }})
    r"""Disk usage sample. Values are across all disks."""  
    memory: Optional[shared_memoryusagesample.MemoryUsageSample] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('memory'), 'exclude': lambda f: f is None }})
    r"""Memory usage sample."""  
    network: Optional[shared_networkusagesample.NetworkUsageSample] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('network'), 'exclude': lambda f: f is None }})
    r"""Network usage sample. Values are across all network interfaces."""  
    sample_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sampleTime'), 'exclude': lambda f: f is None }})
    r"""Time the sample was collected."""  
    