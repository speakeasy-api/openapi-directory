<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateDatasetRequestBody
{
    /**
     * A list of actions that create the dataset contents.
     * 
     * @var array<\OpenAPI\OpenAPI\Models\Shared\DatasetAction> $actions
     */
	#[\JMS\Serializer\Annotation\SerializedName('actions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\DatasetAction>')]
    public array $actions;
    
    /**
     * When dataset contents are created, they are delivered to destinations specified here.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DatasetContentDeliveryRule> $contentDeliveryRules
     */
	#[\JMS\Serializer\Annotation\SerializedName('contentDeliveryRules')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\DatasetContentDeliveryRule>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $contentDeliveryRules = null;
    
    /**
     * The name of the dataset.
     * 
     * @var string $datasetName
     */
	#[\JMS\Serializer\Annotation\SerializedName('datasetName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $datasetName;
    
    /**
     * A list of data rules that send notifications to CloudWatch, when data arrives late. To specify <code>lateDataRules</code>, the dataset must use a <a href="https://docs.aws.amazon.com/iotanalytics/latest/APIReference/API_DeltaTime.html">DeltaTimer</a> filter.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\LateDataRule> $lateDataRules
     */
	#[\JMS\Serializer\Annotation\SerializedName('lateDataRules')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\LateDataRule>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $lateDataRules = null;
    
    /**
     * How long, in days, message data is kept.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateDatasetRequestBodyRetentionPeriod $retentionPeriod
     */
	#[\JMS\Serializer\Annotation\SerializedName('retentionPeriod')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateDatasetRequestBodyRetentionPeriod')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateDatasetRequestBodyRetentionPeriod $retentionPeriod = null;
    
    /**
     * Metadata which can be used to manage the dataset.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Tag> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('tags')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Tag>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
    /**
     * A list of triggers. A trigger causes dataset contents to be populated at a specified time interval or when another dataset's contents are created. The list of triggers can be empty or contain up to five <code>DataSetTrigger</code> objects.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DatasetTrigger> $triggers
     */
	#[\JMS\Serializer\Annotation\SerializedName('triggers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\DatasetTrigger>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $triggers = null;
    
    /**
     * Information about the versioning of dataset contents.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateDatasetRequestBodyVersioningConfiguration $versioningConfiguration
     */
	#[\JMS\Serializer\Annotation\SerializedName('versioningConfiguration')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateDatasetRequestBodyVersioningConfiguration')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateDatasetRequestBodyVersioningConfiguration $versioningConfiguration = null;
    
	public function __construct()
	{
		$this->actions = [];
		$this->contentDeliveryRules = null;
		$this->datasetName = "";
		$this->lateDataRules = null;
		$this->retentionPeriod = null;
		$this->tags = null;
		$this->triggers = null;
		$this->versioningConfiguration = null;
	}
}
