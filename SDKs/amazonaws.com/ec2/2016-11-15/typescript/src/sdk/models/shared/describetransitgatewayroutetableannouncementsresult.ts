/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The direction for the route table announcement.
 */
export enum DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsAnnouncementDirectionEnum {
  Outgoing = "outgoing",
  Incoming = "incoming",
}

/**
 * The state of the transit gateway announcement.
 */
export enum DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnum {
  Available = "available",
  Pending = "pending",
  Failing = "failing",
  Failed = "failed",
  Deleting = "deleting",
  Deleted = "deleted",
}

/**
 * Describes a tag.
 */
export class DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Describes a transit gateway route table announcement.
 */
export class DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncements extends SpeakeasyBase {
  @SpeakeasyMetadata()
  announcementDirection?: DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsAnnouncementDirectionEnum;

  @SpeakeasyMetadata()
  coreNetworkId?: string;

  @SpeakeasyMetadata()
  creationTime?: Date;

  @SpeakeasyMetadata()
  peerCoreNetworkId?: string;

  @SpeakeasyMetadata()
  peerTransitGatewayId?: string;

  @SpeakeasyMetadata()
  peeringAttachmentId?: string;

  @SpeakeasyMetadata()
  state?: DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsStateEnum;

  @SpeakeasyMetadata({
    elemType:
      DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsTags,
  })
  tags?: DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncementsTags[];

  @SpeakeasyMetadata()
  transitGatewayId?: string;

  @SpeakeasyMetadata()
  transitGatewayRouteTableAnnouncementId?: string;

  @SpeakeasyMetadata()
  transitGatewayRouteTableId?: string;
}

/**
 * Success
 */
export class DescribeTransitGatewayRouteTableAnnouncementsResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  nextToken?: string;

  @SpeakeasyMetadata({
    elemType:
      DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncements,
  })
  transitGatewayRouteTableAnnouncements?: DescribeTransitGatewayRouteTableAnnouncementsResultTransitGatewayRouteTableAnnouncements[];
}
