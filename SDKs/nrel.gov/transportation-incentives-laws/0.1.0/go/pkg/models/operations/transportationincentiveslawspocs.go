// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// TransportationIncentivesLawsPocsOutputFormatEnum - Response format
type TransportationIncentivesLawsPocsOutputFormatEnum string

const (
	TransportationIncentivesLawsPocsOutputFormatEnumJSON TransportationIncentivesLawsPocsOutputFormatEnum = "json"
	TransportationIncentivesLawsPocsOutputFormatEnumXML  TransportationIncentivesLawsPocsOutputFormatEnum = "xml"
)

func (e *TransportationIncentivesLawsPocsOutputFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "xml":
		*e = TransportationIncentivesLawsPocsOutputFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TransportationIncentivesLawsPocsOutputFormatEnum: %s", s)
	}
}

type TransportationIncentivesLawsPocsPathParams struct {
	// Response format
	OutputFormat TransportationIncentivesLawsPocsOutputFormatEnum `pathParam:"style=simple,explode=false,name=output_format"`
}

type TransportationIncentivesLawsPocsQueryParams struct {
	// API Key
	APIKey string `queryParam:"style=form,explode=true,name=api_key"`
	// Return the points of contact for the given Jurisdiction. Jurisdiction must be given as a two character state code (eg, 'CO' for Colorado). A single jurisdiction, or a comma-separate list of multiple jurisdiction, may be given.  Use the code 'US' for federal laws and the code 'DC' for Washington D.C.
	Jurisdiction string `queryParam:"style=form,explode=true,name=jurisdiction"`
}

type TransportationIncentivesLawsPocsRequest struct {
	PathParams  TransportationIncentivesLawsPocsPathParams
	QueryParams TransportationIncentivesLawsPocsQueryParams
}

type TransportationIncentivesLawsPocsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
