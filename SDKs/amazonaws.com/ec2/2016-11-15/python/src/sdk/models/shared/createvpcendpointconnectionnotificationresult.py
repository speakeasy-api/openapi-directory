"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationStateEnum(str, Enum):
    r"""The state of the notification."""
    ENABLED = 'Enabled'
    DISABLED = 'Disabled'

class CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationTypeEnum(str, Enum):
    r"""The type of notification."""
    TOPIC = 'Topic'


@dataclasses.dataclass
class CreateVpcEndpointConnectionNotificationResultConnectionNotification:
    r"""Information about the notification."""
    
    connection_events: Optional[list[str]] = dataclasses.field(default=None)  
    connection_notification_arn: Optional[str] = dataclasses.field(default=None)  
    connection_notification_id: Optional[str] = dataclasses.field(default=None)  
    connection_notification_state: Optional[CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationStateEnum] = dataclasses.field(default=None)  
    connection_notification_type: Optional[CreateVpcEndpointConnectionNotificationResultConnectionNotificationConnectionNotificationTypeEnum] = dataclasses.field(default=None)  
    service_id: Optional[str] = dataclasses.field(default=None)  
    vpc_endpoint_id: Optional[str] = dataclasses.field(default=None)  
    

@dataclasses.dataclass
class CreateVpcEndpointConnectionNotificationResult:
    r"""Success"""
    
    client_token: Optional[str] = dataclasses.field(default=None)  
    connection_notification: Optional[CreateVpcEndpointConnectionNotificationResultConnectionNotification] = dataclasses.field(default=None)  
    