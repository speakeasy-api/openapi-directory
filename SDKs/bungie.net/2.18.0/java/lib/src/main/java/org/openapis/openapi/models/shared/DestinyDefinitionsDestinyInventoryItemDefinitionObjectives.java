/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * DestinyDefinitionsDestinyInventoryItemDefinitionObjectives - An item can have objectives on it. In practice, these are the exclusive purview of "Quest Step" items: DestinyInventoryItemDefinitions that represent a specific step in a Quest.
 * Quest steps have 1:M objectives that we end up processing and returning in live data as DestinyQuestStatus data, and other useful information.
 */
public class DestinyDefinitionsDestinyInventoryItemDefinitionObjectives {
    /**
     * For every entry in objectiveHashes, there is a corresponding entry in this array at the same index. If the objective is meant to be associated with a specific DestinyActivityDefinition, there will be a valid hash at that index. Otherwise, it will be invalid (0).
     * Rendered somewhat obsolete by perObjectiveDisplayProperties, which currently has much the same information but may end up with more info in the future.
     */
    
    public Long[] displayActivityHashes;
    public DestinyDefinitionsDestinyInventoryItemDefinitionObjectives withDisplayActivityHashes(Long[] displayActivityHashes) {
        this.displayActivityHashes = displayActivityHashes;
        return this;
    }
    
    
    public Boolean displayAsStatTracker;
    public DestinyDefinitionsDestinyInventoryItemDefinitionObjectives withDisplayAsStatTracker(Boolean displayAsStatTracker) {
        this.displayAsStatTracker = displayAsStatTracker;
        return this;
    }
    
    /**
     * The localized string for narrative text related to this quest step, if any.
     */
    
    public String narrative;
    public DestinyDefinitionsDestinyInventoryItemDefinitionObjectives withNarrative(String narrative) {
        this.narrative = narrative;
        return this;
    }
    
    /**
     * The hashes to Objectives (DestinyObjectiveDefinition) that are part of this Quest Step, in the order that they should be rendered.
     */
    
    public Long[] objectiveHashes;
    public DestinyDefinitionsDestinyInventoryItemDefinitionObjectives withObjectiveHashes(Long[] objectiveHashes) {
        this.objectiveHashes = objectiveHashes;
        return this;
    }
    
    /**
     * The localized string describing an action to be performed associated with the objectives, if any.
     */
    
    public String objectiveVerbName;
    public DestinyDefinitionsDestinyInventoryItemDefinitionObjectives withObjectiveVerbName(String objectiveVerbName) {
        this.objectiveVerbName = objectiveVerbName;
        return this;
    }
    
    /**
     * One entry per Objective on the item, it will have related display information.
     */
    
    public DestinyDefinitionsDestinyObjectiveDisplayProperties[] perObjectiveDisplayProperties;
    public DestinyDefinitionsDestinyInventoryItemDefinitionObjectives withPerObjectiveDisplayProperties(DestinyDefinitionsDestinyObjectiveDisplayProperties[] perObjectiveDisplayProperties) {
        this.perObjectiveDisplayProperties = perObjectiveDisplayProperties;
        return this;
    }
    
    /**
     * A hashed value for the questTypeIdentifier, because apparently I like to be redundant.
     */
    
    public Long questTypeHash;
    public DestinyDefinitionsDestinyInventoryItemDefinitionObjectives withQuestTypeHash(Long questTypeHash) {
        this.questTypeHash = questTypeHash;
        return this;
    }
    
    /**
     * The identifier for the type of quest being performed, if any. Not associated with any fixed definition, yet.
     */
    
    public String questTypeIdentifier;
    public DestinyDefinitionsDestinyInventoryItemDefinitionObjectives withQuestTypeIdentifier(String questTypeIdentifier) {
        this.questTypeIdentifier = questTypeIdentifier;
        return this;
    }
    
    /**
     * The hash for the DestinyInventoryItemDefinition representing the Quest to which this Quest Step belongs.
     */
    
    public Long questlineItemHash;
    public DestinyDefinitionsDestinyInventoryItemDefinitionObjectives withQuestlineItemHash(Long questlineItemHash) {
        this.questlineItemHash = questlineItemHash;
        return this;
    }
    
    /**
     * If True, all objectives must be completed for the step to be completed. If False, any one objective can be completed for the step to be completed.
     */
    
    public Boolean requireFullObjectiveCompletion;
    public DestinyDefinitionsDestinyInventoryItemDefinitionObjectives withRequireFullObjectiveCompletion(Boolean requireFullObjectiveCompletion) {
        this.requireFullObjectiveCompletion = requireFullObjectiveCompletion;
        return this;
    }
    
}
