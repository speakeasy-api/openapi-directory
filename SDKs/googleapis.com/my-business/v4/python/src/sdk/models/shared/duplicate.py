"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class DuplicateAccessEnum(str, Enum):
    r"""Indicates whether the user has access to the location it duplicates."""
    ACCESS_UNSPECIFIED = 'ACCESS_UNSPECIFIED'
    ACCESS_UNKNOWN = 'ACCESS_UNKNOWN'
    ALLOWED = 'ALLOWED'
    INSUFFICIENT = 'INSUFFICIENT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Duplicate:
    r"""Information about the location that this location duplicates."""
    
    access: Optional[DuplicateAccessEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the user has access to the location it duplicates."""  
    location_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('locationName'), 'exclude': lambda f: f is None }})
    r"""The resource name of the location that this duplicates. Only populated if the authenticated user has access rights to that location and that location is not deleted."""  
    place_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('placeId'), 'exclude': lambda f: f is None }})
    r"""The place ID of the location that this duplicates."""  
    