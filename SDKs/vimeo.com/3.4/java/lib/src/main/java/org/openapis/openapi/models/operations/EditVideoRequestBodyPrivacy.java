/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class EditVideoRequestBodyPrivacy {
    /**
     * Whether a user can add the video to an album, channel, or group.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("add")
    public Boolean add;
    public EditVideoRequestBodyPrivacy withAdd(Boolean add) {
        this.add = add;
        return this;
    }
    
    /**
     * The privacy level required to comment on the video.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comments")
    public EditVideoRequestBodyPrivacyCommentsEnum comments;
    public EditVideoRequestBodyPrivacy withComments(EditVideoRequestBodyPrivacyCommentsEnum comments) {
        this.comments = comments;
        return this;
    }
    
    /**
     * Whether a user can download the video. Not available to users with a Basic membership.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("download")
    public Boolean download;
    public EditVideoRequestBodyPrivacy withDownload(Boolean download) {
        this.download = download;
        return this;
    }
    
    /**
     * The video's new embed settings. The `whitelist` value enables you to define all valid embed domains. See our [documentation](https://developer.vimeo.com/api/endpoints/videos#/{video_id}/privacy/domains) for details on adding and removing domains.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("embed")
    public EditVideoRequestBodyPrivacyEmbedEnum embed;
    public EditVideoRequestBodyPrivacy withEmbed(EditVideoRequestBodyPrivacyEmbedEnum embed) {
        this.embed = embed;
        return this;
    }
    
    /**
     * The video's new privacy setting. When privacy is `users`, `application/json` is the only valid content type. Basic users can't set privacy to `unlisted`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("view")
    public EditVideoRequestBodyPrivacyViewEnum view;
    public EditVideoRequestBodyPrivacy withView(EditVideoRequestBodyPrivacyViewEnum view) {
        this.view = view;
        return this;
    }
    
}
