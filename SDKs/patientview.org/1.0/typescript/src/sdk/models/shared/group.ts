/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ContactPoint } from "./contactpoint";
import { GroupFeature } from "./groupfeature";
import { Link } from "./link";
import { Location } from "./location";
import { Lookup } from "./lookup";
import { Expose, Transform, Type } from "class-transformer";

export class Group extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address1" })
  address1?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "address2" })
  address2?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "address3" })
  address3?: string;

  @SpeakeasyMetadata({ elemType: Group })
  @Expose({ name: "childGroups" })
  @Type(() => Group)
  childGroups?: Group[];

  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code?: string;

  @SpeakeasyMetadata({ elemType: ContactPoint })
  @Expose({ name: "contactPoints" })
  @Type(() => ContactPoint)
  contactPoints?: ContactPoint[];

  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "fhirResourceId" })
  fhirResourceId?: string;

  @SpeakeasyMetadata({ elemType: GroupFeature })
  @Expose({ name: "groupFeatures" })
  @Type(() => GroupFeature)
  groupFeatures?: GroupFeature[];

  @SpeakeasyMetadata()
  @Expose({ name: "groupType" })
  @Type(() => Lookup)
  groupType?: Lookup;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "lastImportDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastImportDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdate?: Date;

  @SpeakeasyMetadata({ elemType: Link })
  @Expose({ name: "links" })
  @Type(() => Link)
  links?: Link[];

  @SpeakeasyMetadata({ elemType: Location })
  @Expose({ name: "locations" })
  @Type(() => Location)
  locations?: Location[];

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: Group })
  @Expose({ name: "parentGroups" })
  @Type(() => Group)
  parentGroups?: Group[];

  @SpeakeasyMetadata()
  @Expose({ name: "postcode" })
  postcode?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "sftpUser" })
  sftpUser?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "shortName" })
  shortName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "visible" })
  visible?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "visibleToJoin" })
  visibleToJoin?: boolean;
}
