<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * UserProfile - A UserProfile resource lets you list all DFA user profiles that are associated with a Google user account. The profile_id needs to be specified in other API requests. 
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class UserProfile
{
    /**
     * The account ID to which this profile belongs.
     * 
     * @var ?string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountId = null;
    
    /**
     * The account name this profile belongs to.
     * 
     * @var ?string $accountName
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountName = null;
    
    /**
     * Etag of this resource.
     * 
     * @var ?string $etag
     */
	#[\JMS\Serializer\Annotation\SerializedName('etag')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $etag = null;
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "dfareporting#userProfile".
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * The unique ID of the user profile.
     * 
     * @var ?string $profileId
     */
	#[\JMS\Serializer\Annotation\SerializedName('profileId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $profileId = null;
    
    /**
     * The sub account ID this profile belongs to if applicable.
     * 
     * @var ?string $subAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('subAccountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subAccountId = null;
    
    /**
     * The sub account name this profile belongs to if applicable.
     * 
     * @var ?string $subAccountName
     */
	#[\JMS\Serializer\Annotation\SerializedName('subAccountName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subAccountName = null;
    
    /**
     * The user name.
     * 
     * @var ?string $userName
     */
	#[\JMS\Serializer\Annotation\SerializedName('userName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userName = null;
    
	public function __construct()
	{
		$this->accountId = null;
		$this->accountName = null;
		$this->etag = null;
		$this->kind = null;
		$this->profileId = null;
		$this->subAccountId = null;
		$this->subAccountName = null;
		$this->userName = null;
	}
}
