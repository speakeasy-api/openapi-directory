<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * KafkaConfig - The configuration for kafka access
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class KafkaConfig
{
    /**
     * Optional keypass
     * 
     * @var ?string $keyPass
     */
	#[\JMS\Serializer\Annotation\SerializedName('keyPass')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $keyPass = null;
    
    /**
     * Optional path to keystore
     * 
     * @var ?string $keyStore
     */
	#[\JMS\Serializer\Annotation\SerializedName('keyStore')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $keyStore = null;
    
    /**
     * URLs of the kafka servers
     * 
     * @var array<string> $servers
     */
	#[\JMS\Serializer\Annotation\SerializedName('servers')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    public array $servers;
    
    /**
     * Optional kafka topic (otoroshi-events by default)
     * 
     * @var ?string $topic
     */
	#[\JMS\Serializer\Annotation\SerializedName('topic')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $topic = null;
    
    /**
     * Optional path to trustore
     * 
     * @var ?string $trustore
     */
	#[\JMS\Serializer\Annotation\SerializedName('trustore')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $trustore = null;
    
	public function __construct()
	{
		$this->keyPass = null;
		$this->keyStore = null;
		$this->servers = [];
		$this->topic = null;
		$this->trustore = null;
	}
}
