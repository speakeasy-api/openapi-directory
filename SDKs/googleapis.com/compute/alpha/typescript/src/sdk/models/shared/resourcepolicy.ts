/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ResourcePolicyGroupPlacementPolicy } from "./resourcepolicygroupplacementpolicy";
import { ResourcePolicyInstanceSchedulePolicy } from "./resourcepolicyinstanceschedulepolicy";
import { ResourcePolicyResourceStatus } from "./resourcepolicyresourcestatus";
import { ResourcePolicySnapshotSchedulePolicy } from "./resourcepolicysnapshotschedulepolicy";
import { ResourcePolicyVmMaintenancePolicy } from "./resourcepolicyvmmaintenancepolicy";
import { Expose, Type } from "class-transformer";

/**
 * [Output Only] The status of resource policy creation.
 */
export enum ResourcePolicyStatusEnum {
  Creating = "CREATING",
  Deleting = "DELETING",
  Expired = "EXPIRED",
  Invalid = "INVALID",
  Ready = "READY",
}

/**
 * Represents a Resource Policy resource. You can use resource policies to schedule actions for some Compute Engine resources. For example, you can use them to schedule persistent disk snapshots.
 */
export class ResourcePolicy extends SpeakeasyBase {
  /**
   * [Output Only] Creation timestamp in RFC3339 text format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "creationTimestamp" })
  creationTimestamp?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Resource policy for disk consistency groups.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "diskConsistencyGroupPolicy" })
  diskConsistencyGroupPolicy?: Record<string, any>;

  /**
   * A GroupPlacementPolicy specifies resource placement configuration. It specifies the failure bucket separation as well as network locality
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groupPlacementPolicy" })
  @Type(() => ResourcePolicyGroupPlacementPolicy)
  groupPlacementPolicy?: ResourcePolicyGroupPlacementPolicy;

  /**
   * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * An InstanceSchedulePolicy specifies when and how frequent certain operations are performed on the instance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instanceSchedulePolicy" })
  @Type(() => ResourcePolicyInstanceSchedulePolicy)
  instanceSchedulePolicy?: ResourcePolicyInstanceSchedulePolicy;

  /**
   * [Output Only] Type of the resource. Always compute#resource_policies for resource policies.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "region" })
  region?: string;

  /**
   * Contains output only fields. Use this sub-message for all output fields set on ResourcePolicy. The internal structure of this "status" field should mimic the structure of ResourcePolicy proto specification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resourceStatus" })
  @Type(() => ResourcePolicyResourceStatus)
  resourceStatus?: ResourcePolicyResourceStatus;

  /**
   * [Output Only] Server-defined fully-qualified URL for this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * [Output Only] Server-defined URL for this resource with the resource id.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLinkWithId" })
  selfLinkWithId?: string;

  /**
   * A snapshot schedule policy specifies when and how frequently snapshots are to be created for the target disk. Also specifies how many and how long these scheduled snapshots should be retained.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "snapshotSchedulePolicy" })
  @Type(() => ResourcePolicySnapshotSchedulePolicy)
  snapshotSchedulePolicy?: ResourcePolicySnapshotSchedulePolicy;

  /**
   * [Output Only] The status of resource policy creation.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ResourcePolicyStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "vmMaintenancePolicy" })
  @Type(() => ResourcePolicyVmMaintenancePolicy)
  vmMaintenancePolicy?: ResourcePolicyVmMaintenancePolicy;
}
