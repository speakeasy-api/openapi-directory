// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type UpdateorderFormconfigurationRequestApps struct {
	// Array of fields available to the app.
	Fields []string `json:"fields,omitempty"`
	// App ID.
	ID *string `json:"id,omitempty"`
	// App major version.
	Major *int64 `json:"major,omitempty"`
}

// UpdateorderFormconfigurationRequestTaxConfiguration - External tax service configuration.
type UpdateorderFormconfigurationRequestTaxConfiguration struct {
	// Custom data ID sent to the tax system.
	AppID *string `json:"appId,omitempty"`
	// Authorization header.
	AuthorizationHeader *string `json:"authorizationHeader,omitempty"`
	// Endpoint URL.
	URL *string `json:"url,omitempty"`
}

type UpdateorderFormconfigurationRequest struct {
	// Allows the editing of SKU prices right in the cart.
	AllowManualPrice bool `json:"allowManualPrice"`
	// On the same purchase, allows the selection of items from multiple delivery channels.
	AllowMultipleDeliveries bool `json:"allowMultipleDeliveries"`
	// Array of objects containing Apps configuration information.
	Apps []UpdateorderFormconfigurationRequestApps `json:"apps"`
	// Number of price digits.
	DecimalDigitsPrecision int `json:"decimalDigitsPrecision"`
	// Allows, on a first purchase, masking client's data. It could be useful when a shared cart is used and the client doesn't want to share its data.
	MaskFirstPurchaseData *bool `json:"maskFirstPurchaseData,omitempty"`
	// Allows the input of a limit of white label sellers involved on the cart.
	MaxNumberOfWhiteLabelSellers *int64 `json:"maxNumberOfWhiteLabelSellers,omitempty"`
	// Minimum SKU quantity by cart.
	MinimumQuantityAccumulatedForItems int `json:"minimumQuantityAccumulatedForItems"`
	// Minimum cart value.
	MinimumValueAccumulated int64 `json:"minimumValueAccumulated"`
	// Payment Configuration object
	PaymentConfiguration PaymentConfiguration `json:"paymentConfiguration"`
	// If you want to apply a first installment discount to a particular payment system, set this field to that payment system's ID. Learn more: [Configuring a discount for orders prepaid in full](https://help.vtex.com/en/tutorial/configurar-desconto-de-preco-a-vista--7Lfcj9Wb5dpYfA2gKkACIt).
	PaymentSystemToCheckFirstInstallment *string `json:"paymentSystemToCheckFirstInstallment,omitempty"`
	// Configures reCAPTCHA validation for the account, defining in which situations the shopper will be prompted to validate a purchase with reCAPTCHA. Learn more about [reCAPTCHA validation for VTEX stores](https://help.vtex.com/tutorial/recaptcha-no-checkout--18Te3oDd7f4qcjKu9jhNzP)
	//
	// Possible values are:
	// - `"never"`: no purchases are validated with reCAPTCHA.
	// - `"always"`: every purchase is validated with reCAPTCHA.
	// - `"vtexCriteria"`: only some purchases are validated with reCAPTCHA in order to minimize friction and improve shopping experience. VTEXâ€™s algorithm determines which sessions are trustworthy and which should be validated with reCAPTCHA. This is the recommended option.
	RecaptchaValidation *string `json:"recaptchaValidation,omitempty"`
	// External tax service configuration.
	TaxConfiguration UpdateorderFormconfigurationRequestTaxConfiguration `json:"taxConfiguration"`
}
