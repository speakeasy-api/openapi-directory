<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class PublishedOralQuestionGetRequest
{
    /**
     * Which answering body is to respond. A list of answering bodies can be found <a target="_blank" href="http://data.parliament.uk/membersdataplatform/services/mnis/referencedata/AnsweringBodies/">here</a>.
     * 
     * @var ?array<int> $parametersAnsweringBodyIds
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=parameters.answeringBodyIds')]
    public ?array $parametersAnsweringBodyIds = null;
    
    /**
     * Oral Questions where the answering date has been set on or before the date provided. Date format YYYY-MM-DD.
     * 
     * @var ?\DateTime $parametersAnsweringDateEnd
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=parameters.answeringDateEnd,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public ?\DateTime $parametersAnsweringDateEnd = null;
    
    /**
     * Oral Questions where the answering date has been set on or after the date provided. Date format YYYY-MM-DD.
     * 
     * @var ?\DateTime $parametersAnsweringDateStart
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=parameters.answeringDateStart,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public ?\DateTime $parametersAnsweringDateStart = null;
    
    /**
     * The ID of the member asking the question. Lists of member IDs for each house are available <a href="http://data.parliament.uk/membersdataplatform/services/mnis/members/query/house=Commons" target="_blank">Commons</a> and <a href="http://data.parliament.uk/membersdataplatform/services/mnis/members/query/house=Lords" target="_blank">Lords</a>.
     * 
     * @var ?array<int> $parametersAskingMemberIds
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=parameters.askingMemberIds')]
    public ?array $parametersAskingMemberIds = null;
    
    /**
     * Oral Questions where the question is within the question time with the ID provided
     * 
     * @var ?int $parametersOralQuestionTimeId
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=parameters.oralQuestionTimeId')]
    public ?int $parametersOralQuestionTimeId = null;
    
    /**
     * Oral Questions where the question type is the selected type, substantive or topical.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\PublishedOralQuestionGetParametersQuestionTypeEnum $parametersQuestionType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=parameters.questionType')]
    public ?PublishedOralQuestionGetParametersQuestionTypeEnum $parametersQuestionType = null;
    
    /**
     * The number of records to skip from the first, default is 0.
     * 
     * @var ?int $parametersSkip
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=parameters.skip')]
    public ?int $parametersSkip = null;
    
    /**
     * The number of records to return, default is 25, maximum is 100.
     * 
     * @var ?int $parametersTake
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=parameters.take')]
    public ?int $parametersTake = null;
    
    /**
     * The UIN for the question - note that UINs reset at the start of each Parliamentary session.
     * 
     * @var ?array<int> $parametersUINs
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=parameters.uINs')]
    public ?array $parametersUINs = null;
    
	public function __construct()
	{
		$this->parametersAnsweringBodyIds = null;
		$this->parametersAnsweringDateEnd = null;
		$this->parametersAnsweringDateStart = null;
		$this->parametersAskingMemberIds = null;
		$this->parametersOralQuestionTimeId = null;
		$this->parametersQuestionType = null;
		$this->parametersSkip = null;
		$this->parametersTake = null;
		$this->parametersUINs = null;
	}
}
