/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetAllPortfolioTemplatesSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=x-api-key",
  })
  apiSecretKey: string;
}

export class GetAllPortfolioTemplatesRequest extends SpeakeasyBase {
  /**
   * ApiSecretKey
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=x-api-key",
  })
  xApiKey: string;
}

/**
 * System error. Retry later. If the error persist, contact WOS support
 */
export class GetAllPortfolioTemplates500ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
 */
export class GetAllPortfolioTemplates429ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * The specified resource was not found
 */
export class GetAllPortfolioTemplates404ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
 */
export class GetAllPortfolioTemplates403ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * You do not have permissions to access this resource.
 */
export class GetAllPortfolioTemplates401ApplicationJSON extends SpeakeasyBase {
  /**
   * Optional error code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error_code" })
  errorCode?: string;

  /**
   * Human readable description of the error
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

export class GetAllPortfolioTemplates200ApplicationJSONPortfolioTemplatesRatios extends SpeakeasyBase {
  /**
   * must be an investment product id or 'cash'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "investment_product_id" })
  investmentProductId: string;

  /**
   * must be in correct pattern (eg: 25.00, 33.34, 50.25, 100.00)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ratio" })
  ratio: string;
}

export class GetAllPortfolioTemplates200ApplicationJSONPortfolioTemplates extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "owner" })
  owner?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "portfolio_name" })
  portfolioName: string;

  /**
   * system generated id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portfolio_template_id" })
  portfolioTemplateId: string;

  @SpeakeasyMetadata({
    elemType:
      GetAllPortfolioTemplates200ApplicationJSONPortfolioTemplatesRatios,
  })
  @Expose({ name: "ratios" })
  @Type(
    () => GetAllPortfolioTemplates200ApplicationJSONPortfolioTemplatesRatios
  )
  ratios: GetAllPortfolioTemplates200ApplicationJSONPortfolioTemplatesRatios[];

  @SpeakeasyMetadata()
  @Expose({ name: "reference_version" })
  referenceVersion: number;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}

/**
 * Array of all portfolio templates applicable to the investor
 */
export class GetAllPortfolioTemplates200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: GetAllPortfolioTemplates200ApplicationJSONPortfolioTemplates,
  })
  @Expose({ name: "portfolio_templates" })
  @Type(() => GetAllPortfolioTemplates200ApplicationJSONPortfolioTemplates)
  portfolioTemplates: GetAllPortfolioTemplates200ApplicationJSONPortfolioTemplates[];
}

export class GetAllPortfolioTemplatesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * success
   */
  @SpeakeasyMetadata()
  getAllPortfolioTemplates200ApplicationJSONObject?: GetAllPortfolioTemplates200ApplicationJSON;

  /**
   * You do not have permissions to access this resource.
   */
  @SpeakeasyMetadata()
  getAllPortfolioTemplates401ApplicationJSONObject?: GetAllPortfolioTemplates401ApplicationJSON;

  /**
   * Your authentication information is missing or invalid. Please check the keys are properly set and its correct
   */
  @SpeakeasyMetadata()
  getAllPortfolioTemplates403ApplicationJSONObject?: GetAllPortfolioTemplates403ApplicationJSON;

  /**
   * The specified resource was not found
   */
  @SpeakeasyMetadata()
  getAllPortfolioTemplates404ApplicationJSONObject?: GetAllPortfolioTemplates404ApplicationJSON;

  /**
   * You have sent too many requests to the system. Please retry later. If you need to increase your throtteling limits, please contact WOS support
   */
  @SpeakeasyMetadata()
  getAllPortfolioTemplates429ApplicationJSONObject?: GetAllPortfolioTemplates429ApplicationJSON;

  /**
   * System error. Retry later. If the error persist, contact WOS support
   */
  @SpeakeasyMetadata()
  getAllPortfolioTemplates500ApplicationJSONObject?: GetAllPortfolioTemplates500ApplicationJSON;
}
