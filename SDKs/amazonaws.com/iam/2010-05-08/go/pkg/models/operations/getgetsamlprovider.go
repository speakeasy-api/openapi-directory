// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETGETSAMLProviderActionEnum
type GETGETSAMLProviderActionEnum string

const (
	GETGETSAMLProviderActionEnumGetSamlProvider GETGETSAMLProviderActionEnum = "GetSAMLProvider"
)

func (e GETGETSAMLProviderActionEnum) ToPointer() *GETGETSAMLProviderActionEnum {
	return &e
}

func (e *GETGETSAMLProviderActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetSAMLProvider":
		*e = GETGETSAMLProviderActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETSAMLProviderActionEnum: %v", v)
	}
}

// GETGETSAMLProviderVersionEnum
type GETGETSAMLProviderVersionEnum string

const (
	GETGETSAMLProviderVersionEnumTwoThousandAndTen0508 GETGETSAMLProviderVersionEnum = "2010-05-08"
)

func (e GETGETSAMLProviderVersionEnum) ToPointer() *GETGETSAMLProviderVersionEnum {
	return &e
}

func (e *GETGETSAMLProviderVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2010-05-08":
		*e = GETGETSAMLProviderVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETGETSAMLProviderVersionEnum: %v", v)
	}
}

type GETGETSAMLProviderRequest struct {
	Action GETGETSAMLProviderActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// <p>The Amazon Resource Name (ARN) of the SAML provider resource object in IAM to get information about.</p> <p>For more information about ARNs, see <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names (ARNs)</a> in the <i>Amazon Web Services General Reference</i>.</p>
	SAMLProviderArn   string                        `queryParam:"style=form,explode=true,name=SAMLProviderArn"`
	Version           GETGETSAMLProviderVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETGETSAMLProviderResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
