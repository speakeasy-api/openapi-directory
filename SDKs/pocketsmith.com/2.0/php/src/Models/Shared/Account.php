<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Account - Success
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Account
{
    /**
     * When the account was created.
     * 
     * @var ?string $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createdAt = null;
    
    /**
     * The currency code for the account.
     * 
     * @var ?string $currencyCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency_code')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currencyCode = null;
    
    /**
     * The current balance of the account.
     * 
     * @var ?float $currentBalance
     */
	#[\JMS\Serializer\Annotation\SerializedName('current_balance')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $currentBalance = null;
    
    /**
     * The date of the current balance.
     * 
     * @var ?string $currentBalanceDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('current_balance_date')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $currentBalanceDate = null;
    
    /**
     * The exchange rate between the account's currency and the user's base currency, when different. If the currencies are the same, null is returned.
     * 
     * @var ?float $currentBalanceExchangeRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('current_balance_exchange_rate')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $currentBalanceExchangeRate = null;
    
    /**
     * The current balance of the account in the user's base currency.
     * 
     * @var ?float $currentBalanceInBaseCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('current_balance_in_base_currency')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $currentBalanceInBaseCurrency = null;
    
    /**
     * The unique identifier of the account.
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * Whether the account is a net worth asset.
     * 
     * @var ?bool $isNetWorth
     */
	#[\JMS\Serializer\Annotation\SerializedName('is_net_worth')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isNetWorth = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('primary_scenario')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Scenario')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Scenario $primaryScenario = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('primary_transaction_account')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TransactionAccount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TransactionAccount $primaryTransactionAccount = null;
    
    /**
     * The current safe balance, if safe balance is activated on the account. If safe balance is not activated, then null is returned.
     * 
     * @var ?float $safeBalance
     */
	#[\JMS\Serializer\Annotation\SerializedName('safe_balance')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $safeBalance = null;
    
    /**
     * The current safe balance in the user's base currency, if safe balance is activated on the account. If safe balance is not activated, then null is returned.
     * 
     * @var ?float $safeBalanceInBaseCurrency
     */
	#[\JMS\Serializer\Annotation\SerializedName('safe_balance_in_base_currency')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $safeBalanceInBaseCurrency = null;
    
    /**
     * All scenarios that compose the account, including the primary.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Scenario> $scenarios
     */
	#[\JMS\Serializer\Annotation\SerializedName('scenarios')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Scenario>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $scenarios = null;
    
    /**
     * The title of the account.
     * 
     * @var ?string $title
     */
	#[\JMS\Serializer\Annotation\SerializedName('title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $title = null;
    
    /**
     * All transaction accounts that compose the account, including the primary.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TransactionAccount> $transactionAccounts
     */
	#[\JMS\Serializer\Annotation\SerializedName('transaction_accounts')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\TransactionAccount>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $transactionAccounts = null;
    
    /**
     * The type of the account.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AccountTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AccountTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AccountTypeEnum $type = null;
    
    /**
     * When the account was last updated.
     * 
     * @var ?string $updatedAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('updated_at')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $updatedAt = null;
    
	public function __construct()
	{
		$this->createdAt = null;
		$this->currencyCode = null;
		$this->currentBalance = null;
		$this->currentBalanceDate = null;
		$this->currentBalanceExchangeRate = null;
		$this->currentBalanceInBaseCurrency = null;
		$this->id = null;
		$this->isNetWorth = null;
		$this->primaryScenario = null;
		$this->primaryTransactionAccount = null;
		$this->safeBalance = null;
		$this->safeBalanceInBaseCurrency = null;
		$this->scenarios = null;
		$this->title = null;
		$this->transactionAccounts = null;
		$this->type = null;
		$this->updatedAt = null;
	}
}
