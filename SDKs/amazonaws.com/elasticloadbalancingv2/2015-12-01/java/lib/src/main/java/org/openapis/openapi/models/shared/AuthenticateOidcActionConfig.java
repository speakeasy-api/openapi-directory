/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * AuthenticateOidcActionConfig - Request parameters when using an identity provider (IdP) that is compliant with OpenID Connect (OIDC) to authenticate users.
 */
public class AuthenticateOidcActionConfig {
    
    public java.util.Map<String, String> authenticationRequestExtraParams;
    public AuthenticateOidcActionConfig withAuthenticationRequestExtraParams(java.util.Map<String, String> authenticationRequestExtraParams) {
        this.authenticationRequestExtraParams = authenticationRequestExtraParams;
        return this;
    }
    
    
    public String authorizationEndpoint;
    public AuthenticateOidcActionConfig withAuthorizationEndpoint(String authorizationEndpoint) {
        this.authorizationEndpoint = authorizationEndpoint;
        return this;
    }
    
    
    public String clientId;
    public AuthenticateOidcActionConfig withClientId(String clientId) {
        this.clientId = clientId;
        return this;
    }
    
    
    public String clientSecret;
    public AuthenticateOidcActionConfig withClientSecret(String clientSecret) {
        this.clientSecret = clientSecret;
        return this;
    }
    
    
    public String issuer;
    public AuthenticateOidcActionConfig withIssuer(String issuer) {
        this.issuer = issuer;
        return this;
    }
    
    
    public AuthenticateOidcActionConditionalBehaviorEnumEnum onUnauthenticatedRequest;
    public AuthenticateOidcActionConfig withOnUnauthenticatedRequest(AuthenticateOidcActionConditionalBehaviorEnumEnum onUnauthenticatedRequest) {
        this.onUnauthenticatedRequest = onUnauthenticatedRequest;
        return this;
    }
    
    
    public String scope;
    public AuthenticateOidcActionConfig withScope(String scope) {
        this.scope = scope;
        return this;
    }
    
    
    public String sessionCookieName;
    public AuthenticateOidcActionConfig withSessionCookieName(String sessionCookieName) {
        this.sessionCookieName = sessionCookieName;
        return this;
    }
    
    
    public Long sessionTimeout;
    public AuthenticateOidcActionConfig withSessionTimeout(Long sessionTimeout) {
        this.sessionTimeout = sessionTimeout;
        return this;
    }
    
    
    public String tokenEndpoint;
    public AuthenticateOidcActionConfig withTokenEndpoint(String tokenEndpoint) {
        this.tokenEndpoint = tokenEndpoint;
        return this;
    }
    
    
    public Boolean useExistingClientSecret;
    public AuthenticateOidcActionConfig withUseExistingClientSecret(Boolean useExistingClientSecret) {
        this.useExistingClientSecret = useExistingClientSecret;
        return this;
    }
    
    
    public String userInfoEndpoint;
    public AuthenticateOidcActionConfig withUserInfoEndpoint(String userInfoEndpoint) {
        this.userInfoEndpoint = userInfoEndpoint;
        return this;
    }
    
}
