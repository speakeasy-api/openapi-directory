// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type DevicesGetReleaseUpdateDevicesStatusSecurity struct {
	APIToken string `security:"scheme,type=apiKey,subtype=header,name=X-API-Token"`
}

type DevicesGetReleaseUpdateDevicesStatusRequest struct {
	// The name of the application
	AppName string `pathParam:"style=simple,explode=false,name=app_name"`
	// A boolean value that indicates if the provisioning profile should be return in addition to the status. When set to true, the provisioning profile will be returned only when status is 'complete' or 'preparing_for_testers'.
	IncludeProvisioningProfile *bool `queryParam:"style=form,explode=true,name=include_provisioning_profile"`
	// The name of the owner
	OwnerName string `pathParam:"style=simple,explode=false,name=owner_name"`
	// The ID of the release.
	ReleaseID string `pathParam:"style=simple,explode=false,name=release_id"`
	// The ID of the resign operation.
	ResignID string `pathParam:"style=simple,explode=false,name=resign_id"`
}

type DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnum string

const (
	DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnumBadRequest          DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnum = "BadRequest"
	DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnumConflict            DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnum = "Conflict"
	DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnumNotAcceptable       DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnum = "NotAcceptable"
	DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnumNotFound            DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnum = "NotFound"
	DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnumInternalServerError DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnum = "InternalServerError"
	DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnumUnauthorized        DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnum = "Unauthorized"
	DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnumTooManyRequests     DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnum = "TooManyRequests"
)

func (e DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnum) ToPointer() *DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnum {
	return &e
}

func (e *DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnum: %v", v)
	}
}

// DevicesGetReleaseUpdateDevicesStatus404ApplicationJSON - <b>not_found</b>: A distribution group can't be found.
type DevicesGetReleaseUpdateDevicesStatus404ApplicationJSON struct {
	Code    DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONCodeEnum `json:"code"`
	Message string                                                         `json:"message"`
}

type DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnum string

const (
	DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnumBadRequest          DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnum = "BadRequest"
	DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnumConflict            DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnum = "Conflict"
	DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnumNotAcceptable       DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnum = "NotAcceptable"
	DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnumNotFound            DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnum = "NotFound"
	DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnumInternalServerError DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnum = "InternalServerError"
	DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnumUnauthorized        DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnum = "Unauthorized"
	DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnumTooManyRequests     DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnum = "TooManyRequests"
)

func (e DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnum) ToPointer() *DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnum {
	return &e
}

func (e *DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "BadRequest":
		fallthrough
	case "Conflict":
		fallthrough
	case "NotAcceptable":
		fallthrough
	case "NotFound":
		fallthrough
	case "InternalServerError":
		fallthrough
	case "Unauthorized":
		fallthrough
	case "TooManyRequests":
		*e = DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnum: %v", v)
	}
}

// DevicesGetReleaseUpdateDevicesStatus400ApplicationJSON - Error
type DevicesGetReleaseUpdateDevicesStatus400ApplicationJSON struct {
	Code    DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONCodeEnum `json:"code"`
	Message string                                                         `json:"message"`
}

// DevicesGetReleaseUpdateDevicesStatus200ApplicationJSON - The status of the resign operation.
type DevicesGetReleaseUpdateDevicesStatus200ApplicationJSON struct {
	// Error code for any error that occured during the resigning operation.
	ErrorCode *string `json:"error_code,omitempty"`
	// Error message for any error that occured during the resigning operation.
	ErrorMessage *string `json:"error_message,omitempty"`
	// The status of the resign
	Status string `json:"status"`
}

type DevicesGetReleaseUpdateDevicesStatusResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	DevicesGetReleaseUpdateDevicesStatus200ApplicationJSONObject *DevicesGetReleaseUpdateDevicesStatus200ApplicationJSON
	// Error
	DevicesGetReleaseUpdateDevicesStatus400ApplicationJSONObject *DevicesGetReleaseUpdateDevicesStatus400ApplicationJSON
	// <b>not_found</b>: A distribution group can't be found.
	//
	DevicesGetReleaseUpdateDevicesStatus404ApplicationJSONObject *DevicesGetReleaseUpdateDevicesStatus404ApplicationJSON
}
