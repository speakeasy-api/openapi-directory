/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Router - Represents a Cloud Router resource. For more information about Cloud Router, read the Cloud Router overview.
 */
public class Router {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bgp")
    public RouterBgp bgp;

    public Router withBgp(RouterBgp bgp) {
        this.bgp = bgp;
        return this;
    }
    
    /**
     * BGP information that must be configured into the routing stack to establish BGP peering. This information must specify the peer ASN and either the interface name, IP address, or peer IP address. Please refer to RFC4273.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bgpPeers")
    public RouterBgpPeer[] bgpPeers;

    public Router withBgpPeers(RouterBgpPeer[] bgpPeers) {
        this.bgpPeers = bgpPeers;
        return this;
    }
    
    /**
     * [Output Only] Creation timestamp in RFC3339 text format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTimestamp")
    public String creationTimestamp;

    public Router withCreationTimestamp(String creationTimestamp) {
        this.creationTimestamp = creationTimestamp;
        return this;
    }
    
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Router withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Indicates if a router is dedicated for use with encrypted VLAN attachments (interconnectAttachments).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encryptedInterconnectRouter")
    public Boolean encryptedInterconnectRouter;

    public Router withEncryptedInterconnectRouter(Boolean encryptedInterconnectRouter) {
        this.encryptedInterconnectRouter = encryptedInterconnectRouter;
        return this;
    }
    
    /**
     * [Output Only] The unique identifier for the resource. This identifier is defined by the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Router withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Router interfaces. Each interface requires either one linked resource, (for example, linkedVpnTunnel), or IP address and IP address range (for example, ipRange), or both.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("interfaces")
    public RouterInterface[] interfaces;

    public Router withInterfaces(RouterInterface[] interfaces) {
        this.interfaces = interfaces;
        return this;
    }
    
    /**
     * [Output Only] Type of resource. Always compute#router for routers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Router withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Keys used for MD5 authentication.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("md5AuthenticationKeys")
    public RouterMd5AuthenticationKey[] md5AuthenticationKeys;

    public Router withMd5AuthenticationKeys(RouterMd5AuthenticationKey[] md5AuthenticationKeys) {
        this.md5AuthenticationKeys = md5AuthenticationKeys;
        return this;
    }
    
    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Router withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A list of NAT services created in this router.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nats")
    public RouterNat[] nats;

    public Router withNats(RouterNat[] nats) {
        this.nats = nats;
        return this;
    }
    
    /**
     * URI of the network to which this router belongs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;

    public Router withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * [Output Only] URI of the region where the router resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("region")
    public String region;

    public Router withRegion(String region) {
        this.region = region;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLink")
    public String selfLink;

    public Router withSelfLink(String selfLink) {
        this.selfLink = selfLink;
        return this;
    }
    
    /**
     * [Output Only] Server-defined URL for this resource with the resource id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selfLinkWithId")
    public String selfLinkWithId;

    public Router withSelfLinkWithId(String selfLinkWithId) {
        this.selfLinkWithId = selfLinkWithId;
        return this;
    }
    
    public Router(){}
}
