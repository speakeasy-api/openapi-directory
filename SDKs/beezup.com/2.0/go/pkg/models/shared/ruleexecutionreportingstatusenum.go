// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RuleExecutionReportingStatusEnum - The status of the execution of the rule
type RuleExecutionReportingStatusEnum string

const (
	RuleExecutionReportingStatusEnumInProgress        RuleExecutionReportingStatusEnum = "InProgress"
	RuleExecutionReportingStatusEnumSucceeded         RuleExecutionReportingStatusEnum = "Succeeded"
	RuleExecutionReportingStatusEnumAlreadyInProgress RuleExecutionReportingStatusEnum = "AlreadyInProgress"
	RuleExecutionReportingStatusEnumAborted           RuleExecutionReportingStatusEnum = "Aborted"
	RuleExecutionReportingStatusEnumFailed            RuleExecutionReportingStatusEnum = "Failed"
	RuleExecutionReportingStatusEnumUnknown           RuleExecutionReportingStatusEnum = "Unknown"
)

func (e *RuleExecutionReportingStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "InProgress":
		fallthrough
	case "Succeeded":
		fallthrough
	case "AlreadyInProgress":
		fallthrough
	case "Aborted":
		fallthrough
	case "Failed":
		fallthrough
	case "Unknown":
		*e = RuleExecutionReportingStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RuleExecutionReportingStatusEnum: %s", s)
	}
}
