/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum GetProjectWithEnum {
  Client = "client",
  Vendor = "vendor",
  Score = "score",
}

export class GetProjectRequest extends SpeakeasyBase {
  /**
   * Project ID
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: number;

  /**
   * Include detailed information. Possible values 'client', 'vendor', 'score'
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=with[]",
  })
  with?: GetProjectWithEnum[];
}

export class GetProjectResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * ProjectNotFound
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * Project model
   */
  @SpeakeasyMetadata()
  project?: shared.Project;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
