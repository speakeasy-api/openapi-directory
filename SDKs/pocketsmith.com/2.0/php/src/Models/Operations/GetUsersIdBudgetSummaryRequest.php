<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetUsersIdBudgetSummaryRequest
{
    /**
     * The date to stop analysing the budget from. This will be bumped out to make full periods as necessary.
     * 
     * @var string $endDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=end_date')]
    public string $endDate;
    
    /**
     * The unique identifier of the user.
     * 
     * @var int $id
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=id')]
    public int $id;
    
    /**
     * The period interval, e.g. if the interval is 2 and the period is weeks, the budget will be analysed fortnightly.
     * 
     * @var int $interval
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=interval')]
    public int $interval;
    
    /**
     * The period to analyse in, one of `weeks`, `months` or `years`. Also supported is `event`, although event period analysis is only possible when the budget events gathered align, so in this case where all categories are analysed together, it's highly unlikely that event period analysis will be possible.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetUsersIdBudgetSummaryPeriodEnum $period
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=period')]
    public GetUsersIdBudgetSummaryPeriodEnum $period;
    
    /**
     * The date to start analysing the budget from. This will be bumped out to make full periods as necessary.
     * 
     * @var string $startDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=start_date')]
    public string $startDate;
    
	public function __construct()
	{
		$this->endDate = "";
		$this->id = 0;
		$this->interval = 0;
		$this->period = \OpenAPI\OpenAPI\Models\Operations\GetUsersIdBudgetSummaryPeriodEnum::WEEKS;
		$this->startDate = "";
	}
}
