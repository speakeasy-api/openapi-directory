/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateMarketplaceInstalledAddOnServerList = [
  "https://preview.twilio.com",
] as const;

export class CreateMarketplaceInstalledAddOnSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateMarketplaceInstalledAddOnCreateMarketplaceInstalledAddOnRequest extends SpeakeasyBase {
  /**
   * Whether the Terms of Service were accepted.
   */
  @SpeakeasyMetadata({ data: "form, name=AcceptTermsOfService" })
  acceptTermsOfService: boolean;

  /**
   * The SID of the AvaliableAddOn to install.
   */
  @SpeakeasyMetadata({ data: "form, name=AvailableAddOnSid" })
  availableAddOnSid: string;

  /**
   * The JSON object that represents the configuration of the new Add-on being installed.
   */
  @SpeakeasyMetadata({ data: "form, name=Configuration" })
  configuration?: any;

  /**
   * An application-defined string that uniquely identifies the resource. This value must be unique within the Account.
   */
  @SpeakeasyMetadata({ data: "form, name=UniqueName" })
  uniqueName?: string;
}

export class CreateMarketplaceInstalledAddOnResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  previewMarketplaceInstalledAddOn?: shared.PreviewMarketplaceInstalledAddOn;
}
