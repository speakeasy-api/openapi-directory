/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * JobMonitoringSummaryByType - Returns information about the job counts for the events that match the query parameters.
 */
public class JobMonitoringSummaryByType {
    /**
     * Monitoring state of the job used for monitoring tabs.
     */
    @JsonProperty("jobMonitoringState")
    public JobMonitoringStateEnum jobMonitoringState;

    public JobMonitoringSummaryByType withJobMonitoringState(JobMonitoringStateEnum jobMonitoringState) {
        this.jobMonitoringState = jobMonitoringState;
        return this;
    }
    
    /**
     * The time in the cluster time zone at which the counts were updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastUpdatedTime")
    public OffsetDateTime lastUpdatedTime;

    public JobMonitoringSummaryByType withLastUpdatedTime(OffsetDateTime lastUpdatedTime) {
        this.lastUpdatedTime = lastUpdatedTime;
        return this;
    }
    
    @JsonProperty("objectCounts")
    public JobMonitoringObjectsCountByType objectCounts;

    public JobMonitoringSummaryByType withObjectCounts(JobMonitoringObjectsCountByType objectCounts) {
        this.objectCounts = objectCounts;
        return this;
    }
    
    public JobMonitoringSummaryByType(@JsonProperty("jobMonitoringState") JobMonitoringStateEnum jobMonitoringState, @JsonProperty("objectCounts") JobMonitoringObjectsCountByType objectCounts) {
        this.jobMonitoringState = jobMonitoringState;
        this.objectCounts = objectCounts;
  }
}
