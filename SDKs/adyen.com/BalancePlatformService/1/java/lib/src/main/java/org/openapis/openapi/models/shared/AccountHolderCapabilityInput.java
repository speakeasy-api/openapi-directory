/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AccountHolderCapabilityInput {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("allowedSettings")
    public JSONObject allowedSettings;

    public AccountHolderCapabilityInput withAllowedSettings(JSONObject allowedSettings) {
        this.allowedSettings = allowedSettings;
        return this;
    }
    
    /**
     * Indicates whether the capability is enabled. If **false**, the capability is temporarily disabled for the account holder.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;

    public AccountHolderCapabilityInput withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    /**
     * Indicates whether the capability is requested. To check whether the account holder is permitted to use the capability, refer to the `allowed` field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requested")
    public Boolean requested;

    public AccountHolderCapabilityInput withRequested(Boolean requested) {
        this.requested = requested;
        return this;
    }
    
    /**
     * The requested level of the capability. Some capabilities, such as those used in [card issuing](https://docs.adyen.com/issuing/add-capabilities#capability-levels), have different levels. Levels increase the capability, but also require additional checks and increased monitoring.
     * 
     * Possible values: **notApplicable**, **low**, **medium**, **high**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestedLevel")
    public AccountHolderCapabilityRequestedLevelEnum requestedLevel;

    public AccountHolderCapabilityInput withRequestedLevel(AccountHolderCapabilityRequestedLevelEnum requestedLevel) {
        this.requestedLevel = requestedLevel;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requestedSettings")
    public JSONObject requestedSettings;

    public AccountHolderCapabilityInput withRequestedSettings(JSONObject requestedSettings) {
        this.requestedSettings = requestedSettings;
        return this;
    }
    
    /**
     * Contains the status of the transfer instruments associated with this capability. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("transferInstruments")
    public AccountSupportingEntityCapabilityInput[] transferInstruments;

    public AccountHolderCapabilityInput withTransferInstruments(AccountSupportingEntityCapabilityInput[] transferInstruments) {
        this.transferInstruments = transferInstruments;
        return this;
    }
    
    public AccountHolderCapabilityInput(){}
}
