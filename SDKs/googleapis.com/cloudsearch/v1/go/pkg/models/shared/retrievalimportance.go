// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RetrievalImportanceImportanceEnum - Indicates the ranking importance given to property when it is matched during retrieval. Once set, the token importance of a property cannot be changed.
type RetrievalImportanceImportanceEnum string

const (
	RetrievalImportanceImportanceEnumDefault RetrievalImportanceImportanceEnum = "DEFAULT"
	RetrievalImportanceImportanceEnumHighest RetrievalImportanceImportanceEnum = "HIGHEST"
	RetrievalImportanceImportanceEnumHigh    RetrievalImportanceImportanceEnum = "HIGH"
	RetrievalImportanceImportanceEnumLow     RetrievalImportanceImportanceEnum = "LOW"
	RetrievalImportanceImportanceEnumNone    RetrievalImportanceImportanceEnum = "NONE"
)

func (e RetrievalImportanceImportanceEnum) ToPointer() *RetrievalImportanceImportanceEnum {
	return &e
}

func (e *RetrievalImportanceImportanceEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DEFAULT":
		fallthrough
	case "HIGHEST":
		fallthrough
	case "HIGH":
		fallthrough
	case "LOW":
		fallthrough
	case "NONE":
		*e = RetrievalImportanceImportanceEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RetrievalImportanceImportanceEnum: %v", v)
	}
}

type RetrievalImportance struct {
	// Indicates the ranking importance given to property when it is matched during retrieval. Once set, the token importance of a property cannot be changed.
	Importance *RetrievalImportanceImportanceEnum `json:"importance,omitempty"`
}
