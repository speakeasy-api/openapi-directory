// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ImportKeyMaterialXAmzTargetEnum
type ImportKeyMaterialXAmzTargetEnum string

const (
	ImportKeyMaterialXAmzTargetEnumTrentServiceImportKeyMaterial ImportKeyMaterialXAmzTargetEnum = "TrentService.ImportKeyMaterial"
)

func (e ImportKeyMaterialXAmzTargetEnum) ToPointer() *ImportKeyMaterialXAmzTargetEnum {
	return &e
}

func (e *ImportKeyMaterialXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TrentService.ImportKeyMaterial":
		*e = ImportKeyMaterialXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ImportKeyMaterialXAmzTargetEnum: %v", v)
	}
}

type ImportKeyMaterialRequest struct {
	ImportKeyMaterialRequest shared.ImportKeyMaterialRequest `request:"mediaType=application/json"`
	XAmzAlgorithm            *string                         `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256        *string                         `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential           *string                         `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                 *string                         `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken        *string                         `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature            *string                         `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders        *string                         `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget               ImportKeyMaterialXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ImportKeyMaterialResponse struct {
	ContentType string
	// DependencyTimeoutException
	DependencyTimeoutException interface{}
	// ExpiredImportTokenException
	ExpiredImportTokenException interface{}
	// Success
	ImportKeyMaterialResponse map[string]interface{}
	// IncorrectKeyMaterialException
	IncorrectKeyMaterialException interface{}
	// InvalidArnException
	InvalidArnException interface{}
	// InvalidCiphertextException
	InvalidCiphertextException interface{}
	// InvalidImportTokenException
	InvalidImportTokenException interface{}
	// KMSInternalException
	KMSInternalException interface{}
	// KMSInvalidStateException
	KMSInvalidStateException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// UnsupportedOperationException
	UnsupportedOperationException interface{}
}
