// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type PatchBundlesIDPathParams struct {
	// Bundle ID.
	ID int `pathParam:"style=simple,explode=false,name=id"`
}

type PatchBundlesIDRequestBody struct {
	// ID of the clickwrap to use with this bundle.
	ClickwrapID *int `multipartForm:"name=clickwrap_id"`
	// Bundle code.  This code forms the end part of the Public URL.
	Code *string `multipartForm:"name=code"`
	// Public description
	Description *string `multipartForm:"name=description"`
	// Bundle expiration date/time
	ExpiresAt *time.Time `multipartForm:"name=expires_at"`
	// Id of Form Field Set to use with this bundle
	FormFieldSetID *int `multipartForm:"name=form_field_set_id"`
	// ID of the associated inbox, if available.
	InboxID *int `multipartForm:"name=inbox_id"`
	// Maximum number of times bundle can be accessed
	MaxUses *int `multipartForm:"name=max_uses"`
	// Bundle internal note
	Note *string `multipartForm:"name=note"`
	// Password for this bundle.
	Password *string `multipartForm:"name=password"`
	// A list of paths to include in this bundle.
	Paths []string `multipartForm:"name=paths"`
	// Restrict users to previewing files only?
	PreviewOnly *bool `multipartForm:"name=preview_only"`
	// Show a registration page that captures the downloader's name and email address?
	RequireRegistration *bool `multipartForm:"name=require_registration"`
	// Only allow access to recipients who have explicitly received the share via an email sent through the Files.com UI?
	RequireShareRecipient *bool `multipartForm:"name=require_share_recipient"`
}

type PatchBundlesIDRequest struct {
	PathParams PatchBundlesIDPathParams
	Request    *PatchBundlesIDRequestBody `request:"mediaType=multipart/form-data"`
}

type PatchBundlesIDResponse struct {
	// The Bundles object.
	BundleEntity *shared.BundleEntity
	ContentType  string
	StatusCode   int
	RawResponse  *http.Response
}
