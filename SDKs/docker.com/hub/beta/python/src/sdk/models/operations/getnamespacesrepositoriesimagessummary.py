"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import errorresponse as shared_errorresponse
from ..shared import getnamespacerepositoryimagessummaryresponse as shared_getnamespacerepositoryimagessummaryresponse
from typing import Optional


@dataclasses.dataclass
class GetNamespacesRepositoriesImagesSummaryRequest:
    
    namespace: str = dataclasses.field(metadata={'path_param': { 'field_name': 'namespace', 'style': 'simple', 'explode': False }})
    r"""Namespace of the repository."""  
    repository: str = dataclasses.field(metadata={'path_param': { 'field_name': 'repository', 'style': 'simple', 'explode': False }})
    r"""Name of the repository."""  
    active_from: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'active_from', 'style': 'form', 'explode': True }})
    r"""Sets the time from which an image must have been pushed or pulled to
    be counted as active.
    
    Defaults to 1 month before the current time.
    """  
    

@dataclasses.dataclass
class GetNamespacesRepositoriesImagesSummaryResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_response: Optional[shared_errorresponse.ErrorResponse] = dataclasses.field(default=None)
    r"""Unauthorized - user does not have read access to the namespace"""  
    get_namespace_repository_images_summary_response: Optional[shared_getnamespacerepositoryimagessummaryresponse.GetNamespaceRepositoryImagesSummaryResponse] = dataclasses.field(default=None)
    r"""Success"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    