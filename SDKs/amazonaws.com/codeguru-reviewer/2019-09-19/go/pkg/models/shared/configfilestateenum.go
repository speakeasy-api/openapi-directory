// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ConfigFileStateEnum string

const (
	ConfigFileStateEnumPresent           ConfigFileStateEnum = "Present"
	ConfigFileStateEnumAbsent            ConfigFileStateEnum = "Absent"
	ConfigFileStateEnumPresentWithErrors ConfigFileStateEnum = "PresentWithErrors"
)

func (e ConfigFileStateEnum) ToPointer() *ConfigFileStateEnum {
	return &e
}

func (e *ConfigFileStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Present":
		fallthrough
	case "Absent":
		fallthrough
	case "PresentWithErrors":
		*e = ConfigFileStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ConfigFileStateEnum: %v", v)
	}
}
