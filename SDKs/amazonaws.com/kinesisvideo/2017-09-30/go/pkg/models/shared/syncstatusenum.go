// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SyncStatusEnum string

const (
	SyncStatusEnumSyncing      SyncStatusEnum = "SYNCING"
	SyncStatusEnumAcknowledged SyncStatusEnum = "ACKNOWLEDGED"
	SyncStatusEnumInSync       SyncStatusEnum = "IN_SYNC"
	SyncStatusEnumSyncFailed   SyncStatusEnum = "SYNC_FAILED"
	SyncStatusEnumDeleting     SyncStatusEnum = "DELETING"
	SyncStatusEnumDeleteFailed SyncStatusEnum = "DELETE_FAILED"
)

func (e SyncStatusEnum) ToPointer() *SyncStatusEnum {
	return &e
}

func (e *SyncStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SYNCING":
		fallthrough
	case "ACKNOWLEDGED":
		fallthrough
	case "IN_SYNC":
		fallthrough
	case "SYNC_FAILED":
		fallthrough
	case "DELETING":
		fallthrough
	case "DELETE_FAILED":
		*e = SyncStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SyncStatusEnum: %v", v)
	}
}
