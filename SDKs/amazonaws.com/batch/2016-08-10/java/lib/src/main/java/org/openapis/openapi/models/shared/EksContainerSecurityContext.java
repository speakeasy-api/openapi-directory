/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * EksContainerSecurityContext - The security context for a job. For more information, see &lt;a href="https://kubernetes.io/docs/tasks/configure-pod-container/security-context/"&gt;Configure a security context for a pod or container&lt;/a&gt; in the &lt;i&gt;Kubernetes documentation&lt;/i&gt;.
 */
public class EksContainerSecurityContext {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("privileged")
    public Boolean privileged;

    public EksContainerSecurityContext withPrivileged(Boolean privileged) {
        this.privileged = privileged;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readOnlyRootFilesystem")
    public Boolean readOnlyRootFilesystem;

    public EksContainerSecurityContext withReadOnlyRootFilesystem(Boolean readOnlyRootFilesystem) {
        this.readOnlyRootFilesystem = readOnlyRootFilesystem;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runAsGroup")
    public Long runAsGroup;

    public EksContainerSecurityContext withRunAsGroup(Long runAsGroup) {
        this.runAsGroup = runAsGroup;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runAsNonRoot")
    public Boolean runAsNonRoot;

    public EksContainerSecurityContext withRunAsNonRoot(Boolean runAsNonRoot) {
        this.runAsNonRoot = runAsNonRoot;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runAsUser")
    public Long runAsUser;

    public EksContainerSecurityContext withRunAsUser(Long runAsUser) {
        this.runAsUser = runAsUser;
        return this;
    }
    
    public EksContainerSecurityContext(){}
}
