// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// Glossary - Represents a glossary built from user-provided data.
type Glossary struct {
	// Optional. The display name of the glossary.
	DisplayName *string `json:"displayName,omitempty"`
	// Output only. When the glossary creation was finished.
	EndTime *string `json:"endTime,omitempty"`
	// Output only. The number of entries defined in the glossary.
	EntryCount *int `json:"entryCount,omitempty"`
	// Input configuration for glossaries.
	InputConfig *GlossaryInputConfig `json:"inputConfig,omitempty"`
	// Used with equivalent term set glossaries.
	LanguageCodesSet *LanguageCodesSet `json:"languageCodesSet,omitempty"`
	// Used with unidirectional glossaries.
	LanguagePair *LanguageCodePair `json:"languagePair,omitempty"`
	// Required. The resource name of the glossary. Glossary names have the form `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`.
	Name *string `json:"name,omitempty"`
	// Output only. When CreateGlossary was called.
	SubmitTime *string `json:"submitTime,omitempty"`
}

// GlossaryInput - Represents a glossary built from user-provided data.
type GlossaryInput struct {
	// Optional. The display name of the glossary.
	DisplayName *string `json:"displayName,omitempty"`
	// Input configuration for glossaries.
	InputConfig *GlossaryInputConfig `json:"inputConfig,omitempty"`
	// Used with equivalent term set glossaries.
	LanguageCodesSet *LanguageCodesSet `json:"languageCodesSet,omitempty"`
	// Used with unidirectional glossaries.
	LanguagePair *LanguageCodePair `json:"languagePair,omitempty"`
	// Required. The resource name of the glossary. Glossary names have the form `projects/{project-number-or-id}/locations/{location-id}/glossaries/{glossary-id}`.
	Name *string `json:"name,omitempty"`
}
