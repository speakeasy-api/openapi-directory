<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetUsersIdUserConnectionsIdConnectionAccountsIdAccountTransactionsRequest
{
    /**
     * display all transactions, including deleted ones
     * 
     * @var ?bool $all
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=all')]
    public ?bool $all = null;
    
    /**
     * display only deleted transactions
     * 
     * @var ?bool $deleted
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=deleted')]
    public ?bool $deleted = null;
    
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=expand')]
    public ?string $expand = null;
    
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=id_account')]
    public int $idAccount;
    
    /**
     * filter on given category id(s) (comma separated) or "null"
     * 
     * @var ?int $idCategory
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=id_category')]
    public ?int $idCategory = null;
    
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=id_connection')]
    public int $idConnection;
    
    /**
     * Hint: you can use 'me' or 'all'
     * 
     * @var string $idUser
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=id_user')]
    public string $idUser;
    
    /**
     * filter on income or expenditures
     * 
     * @var ?bool $income
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=income')]
    public ?bool $income = null;
    
    /**
     * get only transactions updated after the specified datetime
     * 
     * @var ?\DateTime $lastUpdate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=last_update,dateTimeFormat=Y-m-d\TH:i:s.up')]
    public ?\DateTime $lastUpdate = null;
    
    /**
     * limit number of results
     * 
     * @var ?int $limit
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=limit')]
    public ?int $limit = null;
    
    /**
     * maximum (inclusive) date
     * 
     * @var ?\DateTime $maxDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $maxDate = null;
    
    /**
     * maximum (inclusive) value
     * 
     * @var ?float $maxValue
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=max_value')]
    public ?float $maxValue = null;
    
    /**
     * minimal (inclusive) date
     * 
     * @var ?\DateTime $minDate
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_date,dateTimeFormat=Y-m-d')]
    public ?\DateTime $minDate = null;
    
    /**
     * minimal (inclusive) value
     * 
     * @var ?float $minValue
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=min_value')]
    public ?float $minValue = null;
    
    /**
     * offset of first result
     * 
     * @var ?int $offset
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=offset')]
    public ?int $offset = null;
    
    /**
     * search in labels, dates, values and categories
     * 
     * @var ?string $search
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=search')]
    public ?string $search = null;
    
    /**
     * "XX|-XX" or "Â±XX"
     * 
     * @var ?string $value
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=value')]
    public ?string $value = null;
    
    /**
     * filter transactions containing the given string
     * 
     * @var ?string $wording
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=wording')]
    public ?string $wording = null;
    
	public function __construct()
	{
		$this->all = null;
		$this->deleted = null;
		$this->expand = null;
		$this->idAccount = 0;
		$this->idCategory = null;
		$this->idConnection = 0;
		$this->idUser = "";
		$this->income = null;
		$this->lastUpdate = null;
		$this->limit = null;
		$this->maxDate = null;
		$this->maxValue = null;
		$this->minDate = null;
		$this->minValue = null;
		$this->offset = null;
		$this->search = null;
		$this->value = null;
		$this->wording = null;
	}
}
