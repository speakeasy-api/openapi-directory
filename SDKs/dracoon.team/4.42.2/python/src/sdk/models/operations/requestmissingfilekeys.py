"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import errorresponse as shared_errorresponse
from ..shared import missingkeysresponse as shared_missingkeysresponse
from enum import Enum
from typing import Optional

class RequestMissingFileKeysUseKeyEnum(str, Enum):
    r"""Determines which key should be used (NEW)"""
    ROOM_RESCUE_KEY = 'room_rescue_key'
    SYSTEM_RESCUE_KEY = 'system_rescue_key'
    PREVIOUS_USER_KEY = 'previous_user_key'
    PREVIOUS_ROOM_RESCUE_KEY = 'previous_room_rescue_key'
    PREVIOUS_SYSTEM_RESCUE_KEY = 'previous_system_rescue_key'


@dataclasses.dataclass
class RequestMissingFileKeysRequest:
    
    file_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'file_id', 'style': 'form', 'explode': True }})
    r"""File ID"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Range limit.
    
    Maximum 500.
    
     For more results please use paging (`offset` + `limit`).
    """  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Range offset"""  
    room_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'room_id', 'style': 'form', 'explode': True }})
    r"""Room ID"""  
    use_key: Optional[RequestMissingFileKeysUseKeyEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'use_key', 'style': 'form', 'explode': True }})
    r"""Determines which key should be used (NEW)"""  
    user_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'user_id', 'style': 'form', 'explode': True }})
    r"""User ID"""  
    x_sds_auth_token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'X-Sds-Auth-Token', 'style': 'simple', 'explode': False }})
    r"""Authentication token"""  
    

@dataclasses.dataclass
class RequestMissingFileKeysResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    error_response: Optional[shared_errorresponse.ErrorResponse] = dataclasses.field(default=None)
    r"""Bad Request"""  
    missing_keys_response: Optional[shared_missingkeysresponse.MissingKeysResponse] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    