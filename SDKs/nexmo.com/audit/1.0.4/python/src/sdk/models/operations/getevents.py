"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import auditresp as shared_auditresp
from ..shared import errorforbidden as shared_errorforbidden
from ..shared import errornotfound as shared_errornotfound
from ..shared import errorunauthorized as shared_errorunauthorized
from ..shared import eventtypes_enum as shared_eventtypes_enum
from typing import Optional


@dataclasses.dataclass
class GetEventsSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class GetEventsRequest:
    
    date_from: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'date_from', 'style': 'form', 'explode': True }})
    r"""Start of time range for audit events. DateTime in ISO-8601 format."""  
    date_to: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'date_to', 'style': 'form', 'explode': True }})
    r"""End of time range for audit events. DateTime in ISO-8601 format."""  
    event_type: Optional[shared_eventtypes_enum.EventTypesEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'event_type', 'style': 'form', 'explode': True }})
    r"""Filter results by this event type."""  
    page: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'page', 'style': 'form', 'explode': True }})
    r"""Page number starting with page 1."""  
    search_text: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'search_text', 'style': 'form', 'explode': True }})
    r"""Return only audit events where the JSON object contains this search text. Must be legal text for a JSON attribute value, that is quotes and braces must be escaped."""  
    size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'size', 'style': 'form', 'explode': True }})
    r"""Number of elements per page."""  
    

@dataclasses.dataclass
class GetEventsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    audit_resp: Optional[shared_auditresp.AuditResp] = dataclasses.field(default=None)
    r"""OK"""  
    error_forbidden: Optional[shared_errorforbidden.ErrorForbidden] = dataclasses.field(default=None)
    r"""Forbidden"""  
    error_not_found: Optional[shared_errornotfound.ErrorNotFound] = dataclasses.field(default=None)
    r"""Not Found"""  
    error_unauthorized: Optional[shared_errorunauthorized.ErrorUnauthorized] = dataclasses.field(default=None)
    r"""Unauthorized"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    