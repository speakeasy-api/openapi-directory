// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ErrorV1CodeEnum - A short string indicating the error reported.
type ErrorV1CodeEnum string

const (
	ErrorV1CodeEnumUnauthorized        ErrorV1CodeEnum = "unauthorized"
	ErrorV1CodeEnumNotFound            ErrorV1CodeEnum = "not_found"
	ErrorV1CodeEnumHTTPNotSupported    ErrorV1CodeEnum = "http_not_supported"
	ErrorV1CodeEnumInvalidMethod       ErrorV1CodeEnum = "invalid_method"
	ErrorV1CodeEnumInvalidFormat       ErrorV1CodeEnum = "invalid_format"
	ErrorV1CodeEnumInvalidRequest      ErrorV1CodeEnum = "invalid_request"
	ErrorV1CodeEnumInternalServerError ErrorV1CodeEnum = "internal_server_error"
)

func (e *ErrorV1CodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "unauthorized":
		fallthrough
	case "not_found":
		fallthrough
	case "http_not_supported":
		fallthrough
	case "invalid_method":
		fallthrough
	case "invalid_format":
		fallthrough
	case "invalid_request":
		fallthrough
	case "internal_server_error":
		*e = ErrorV1CodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ErrorV1CodeEnum: %s", s)
	}
}

// ErrorV1 - Object containing details about an [error](https://www.heraldapi.com/docs/errors).
type ErrorV1 struct {
	// A short string indicating the error reported.
	Code ErrorV1CodeEnum `json:"code"`
	// A unique error ID for error tracking and support.
	ID string `json:"id"`
	// Details about the specific manifestation of the error.
	Message string `json:"message"`
}
