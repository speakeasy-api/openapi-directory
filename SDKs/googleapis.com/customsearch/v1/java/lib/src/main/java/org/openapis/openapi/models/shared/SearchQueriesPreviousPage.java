/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SearchQueriesPreviousPage - Custom search request metadata.
 */
public class SearchQueriesPreviousPage {
    /**
     * Number of search results returned in this set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("count")
    public Integer count;

    public SearchQueriesPreviousPage withCount(Integer count) {
        this.count = count;
        return this;
    }
    
    /**
     * Restricts search results to documents originating in a particular country. You may use [Boolean operators](https://developers.google.com/custom-search/docs/json_api_reference#BooleanOrSearch) in the `cr` parameter's value. Google WebSearch determines the country of a document by analyzing the following: * The top-level domain (TLD) of the document's URL. * The geographic location of the web server's IP address. See [Country (cr) Parameter Values](https://developers.google.com/custom-search/docs/json_api_reference#countryCollections) for a list of valid values for this parameter.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cr")
    public String cr;

    public SearchQueriesPreviousPage withCr(String cr) {
        this.cr = cr;
        return this;
    }
    
    /**
     * The identifier of an engine created using the Programmable Search Engine [Control Panel](https://programmablesearchengine.google.com/). This is a custom property not defined in the OpenSearch spec. This parameter is **required**.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cx")
    public String cx;

    public SearchQueriesPreviousPage withCx(String cx) {
        this.cx = cx;
        return this;
    }
    
    /**
     * Restricts results to URLs based on date. Supported values include: * `d[number]`: requests results from the specified number of past days. * `w[number]`: requests results from the specified number of past weeks. * `m[number]`: requests results from the specified number of past months. * `y[number]`: requests results from the specified number of past years.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dateRestrict")
    public String dateRestrict;

    public SearchQueriesPreviousPage withDateRestrict(String dateRestrict) {
        this.dateRestrict = dateRestrict;
        return this;
    }
    
    /**
     * Enables or disables the [Simplified and Traditional Chinese Search](https://developers.google.com/custom-search/docs/json_api_reference#chineseSearch) feature. Supported values are: * `0`: enabled (default) * `1`: disabled
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("disableCnTwTranslation")
    public String disableCnTwTranslation;

    public SearchQueriesPreviousPage withDisableCnTwTranslation(String disableCnTwTranslation) {
        this.disableCnTwTranslation = disableCnTwTranslation;
        return this;
    }
    
    /**
     * Identifies a phrase that all documents in the search results must contain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exactTerms")
    public String exactTerms;

    public SearchQueriesPreviousPage withExactTerms(String exactTerms) {
        this.exactTerms = exactTerms;
        return this;
    }
    
    /**
     * Identifies a word or phrase that should not appear in any documents in the search results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("excludeTerms")
    public String excludeTerms;

    public SearchQueriesPreviousPage withExcludeTerms(String excludeTerms) {
        this.excludeTerms = excludeTerms;
        return this;
    }
    
    /**
     * Restricts results to files of a specified extension. Filetypes supported by Google include: * Adobe Portable Document Format (`pdf`) * Adobe PostScript (`ps`) * Lotus 1-2-3 (`wk1`, `wk2`, `wk3`, `wk4`, `wk5`, `wki`, `wks`, `wku`) * Lotus WordPro (`lwp`) * Macwrite (`mw`) * Microsoft Excel (`xls`) * Microsoft PowerPoint (`ppt`) * Microsoft Word (`doc`) * Microsoft Works (`wks`, `wps`, `wdb`) * Microsoft Write (`wri`) * Rich Text Format (`rtf`) * Shockwave Flash (`swf`) * Text (`ans`, `txt`). Additional filetypes may be added in the future. An up-to-date list can always be found in Google's [file type FAQ](https://support.google.com/webmasters/answer/35287).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fileType")
    public String fileType;

    public SearchQueriesPreviousPage withFileType(String fileType) {
        this.fileType = fileType;
        return this;
    }
    
    /**
     * Activates or deactivates the automatic filtering of Google search results. See [Automatic Filtering](https://developers.google.com/custom-search/docs/json_api_reference#automaticFiltering) for more information about Google's search results filters. Valid values for this parameter are: * `0`: Disabled * `1`: Enabled (default) **Note**: By default, Google applies filtering to all search results to improve the quality of those results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("filter")
    public String filter;

    public SearchQueriesPreviousPage withFilter(String filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * Boosts search results whose country of origin matches the parameter value. See [Country Codes](https://developers.google.com/custom-search/docs/json_api_reference#countryCodes) for a list of valid values. Specifying a `gl` parameter value in WebSearch requests should improve the relevance of results. This is particularly true for international customers and, even more specifically, for customers in English-speaking countries other than the United States.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gl")
    public String gl;

    public SearchQueriesPreviousPage withGl(String gl) {
        this.gl = gl;
        return this;
    }
    
    /**
     * Specifies the Google domain (for example, google.com, google.de, or google.fr) to which the search should be limited.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("googleHost")
    public String googleHost;

    public SearchQueriesPreviousPage withGoogleHost(String googleHost) {
        this.googleHost = googleHost;
        return this;
    }
    
    /**
     * Specifies the ending value for a search range. Use `cse:lowRange` and `cse:highrange` to append an inclusive search range of `lowRange...highRange` to the query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("highRange")
    public String highRange;

    public SearchQueriesPreviousPage withHighRange(String highRange) {
        this.highRange = highRange;
        return this;
    }
    
    /**
     * Specifies the interface language (host language) of your user interface. Explicitly setting this parameter improves the performance and the quality of your search results. See the [Interface Languages](https://developers.google.com/custom-search/docs/json_api_reference#wsInterfaceLanguages) section of [Internationalizing Queries and Results Presentation](https://developers.google.com/custom-search/docs/json_api_reference#wsInternationalizing) for more information, and [Supported Interface Languages](https://developers.google.com/custom-search/docs/json_api_reference#interfaceLanguages) for a list of supported languages.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hl")
    public String hl;

    public SearchQueriesPreviousPage withHl(String hl) {
        this.hl = hl;
        return this;
    }
    
    /**
     * Appends the specified query terms to the query, as if they were combined with a logical `AND` operator.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hq")
    public String hq;

    public SearchQueriesPreviousPage withHq(String hq) {
        this.hq = hq;
        return this;
    }
    
    /**
     * Restricts results to images of a specified color type. Supported values are: * `mono` (black and white) * `gray` (grayscale) * `color` (color)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imgColorType")
    public String imgColorType;

    public SearchQueriesPreviousPage withImgColorType(String imgColorType) {
        this.imgColorType = imgColorType;
        return this;
    }
    
    /**
     * Restricts results to images with a specific dominant color. Supported values are: * `red` * `orange` * `yellow` * `green` * `teal` * `blue` * `purple` * `pink` * `white` * `gray` * `black` * `brown`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imgDominantColor")
    public String imgDominantColor;

    public SearchQueriesPreviousPage withImgDominantColor(String imgDominantColor) {
        this.imgDominantColor = imgDominantColor;
        return this;
    }
    
    /**
     * Restricts results to images of a specified size. Supported values are: * `icon` (small) * `small | medium | large | xlarge` (medium) * `xxlarge` (large) * `huge` (extra-large)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imgSize")
    public String imgSize;

    public SearchQueriesPreviousPage withImgSize(String imgSize) {
        this.imgSize = imgSize;
        return this;
    }
    
    /**
     * Restricts results to images of a specified type. Supported values are: * `clipart` (Clip art) * `face` (Face) * `lineart` (Line drawing) * `photo` (Photo) * `animated` (Animated) * `stock` (Stock)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imgType")
    public String imgType;

    public SearchQueriesPreviousPage withImgType(String imgType) {
        this.imgType = imgType;
        return this;
    }
    
    /**
     * The character encoding supported for search requests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inputEncoding")
    public String inputEncoding;

    public SearchQueriesPreviousPage withInputEncoding(String inputEncoding) {
        this.inputEncoding = inputEncoding;
        return this;
    }
    
    /**
     * The language of the search results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("language")
    public String language;

    public SearchQueriesPreviousPage withLanguage(String language) {
        this.language = language;
        return this;
    }
    
    /**
     * Specifies that all results should contain a link to a specific URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkSite")
    public String linkSite;

    public SearchQueriesPreviousPage withLinkSite(String linkSite) {
        this.linkSite = linkSite;
        return this;
    }
    
    /**
     * Specifies the starting value for a search range. Use `cse:lowRange` and `cse:highrange` to append an inclusive search range of `lowRange...highRange` to the query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lowRange")
    public String lowRange;

    public SearchQueriesPreviousPage withLowRange(String lowRange) {
        this.lowRange = lowRange;
        return this;
    }
    
    /**
     * Provides additional search terms to check for in a document, where each document in the search results must contain at least one of the additional search terms. You can also use the [Boolean OR](https://developers.google.com/custom-search/docs/json_api_reference#BooleanOrSearch) query term for this type of query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("orTerms")
    public String orTerms;

    public SearchQueriesPreviousPage withOrTerms(String orTerms) {
        this.orTerms = orTerms;
        return this;
    }
    
    /**
     * The character encoding supported for search results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outputEncoding")
    public String outputEncoding;

    public SearchQueriesPreviousPage withOutputEncoding(String outputEncoding) {
        this.outputEncoding = outputEncoding;
        return this;
    }
    
    /**
     * Specifies that all search results should be pages that are related to the specified URL. The parameter value should be a URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("relatedSite")
    public String relatedSite;

    public SearchQueriesPreviousPage withRelatedSite(String relatedSite) {
        this.relatedSite = relatedSite;
        return this;
    }
    
    /**
     * Filters based on licensing. Supported values include: * `cc_publicdomain` * `cc_attribute` * `cc_sharealike` * `cc_noncommercial` * `cc_nonderived`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rights")
    public String rights;

    public SearchQueriesPreviousPage withRights(String rights) {
        this.rights = rights;
        return this;
    }
    
    /**
     * Specifies the [SafeSearch level](https://developers.google.com/custom-search/docs/json_api_reference#safeSearchLevels) used for filtering out adult results. This is a custom property not defined in the OpenSearch spec. Valid parameter values are: * `"off"`: Disable SafeSearch * `"active"`: Enable SafeSearch
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("safe")
    public String safe;

    public SearchQueriesPreviousPage withSafe(String safe) {
        this.safe = safe;
        return this;
    }
    
    /**
     * The search terms entered by the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("searchTerms")
    public String searchTerms;

    public SearchQueriesPreviousPage withSearchTerms(String searchTerms) {
        this.searchTerms = searchTerms;
        return this;
    }
    
    /**
     * Allowed values are `web` or `image`. If unspecified, results are limited to webpages.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("searchType")
    public String searchType;

    public SearchQueriesPreviousPage withSearchType(String searchType) {
        this.searchType = searchType;
        return this;
    }
    
    /**
     * Restricts results to URLs from a specified site.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("siteSearch")
    public String siteSearch;

    public SearchQueriesPreviousPage withSiteSearch(String siteSearch) {
        this.siteSearch = siteSearch;
        return this;
    }
    
    /**
     * Specifies whether to include or exclude results from the site named in the `sitesearch` parameter. Supported values are: * `i`: include content from site * `e`: exclude content from site
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("siteSearchFilter")
    public String siteSearchFilter;

    public SearchQueriesPreviousPage withSiteSearchFilter(String siteSearchFilter) {
        this.siteSearchFilter = siteSearchFilter;
        return this;
    }
    
    /**
     * Specifies that results should be sorted according to the specified expression. For example, sort by date.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sort")
    public String sort;

    public SearchQueriesPreviousPage withSort(String sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * The index of the current set of search results into the total set of results, where the index of the first result is 1.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startIndex")
    public Integer startIndex;

    public SearchQueriesPreviousPage withStartIndex(Integer startIndex) {
        this.startIndex = startIndex;
        return this;
    }
    
    /**
     * The page number of this set of results, where the page length is set by the `count` property.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startPage")
    public Integer startPage;

    public SearchQueriesPreviousPage withStartPage(Integer startPage) {
        this.startPage = startPage;
        return this;
    }
    
    /**
     * A description of the query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public SearchQueriesPreviousPage withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * Estimated number of total search results. May not be accurate.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("totalResults")
    public String totalResults;

    public SearchQueriesPreviousPage withTotalResults(String totalResults) {
        this.totalResults = totalResults;
        return this;
    }
    
    public SearchQueriesPreviousPage(){}
}
