/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export enum GETDeregisterTransitGatewayMulticastGroupSourcesActionEnum {
  DeregisterTransitGatewayMulticastGroupSources = "DeregisterTransitGatewayMulticastGroupSources",
}

export enum GETDeregisterTransitGatewayMulticastGroupSourcesVersionEnum {
  TwoThousandAndSixteen1115 = "2016-11-15",
}

export class GETDeregisterTransitGatewayMulticastGroupSourcesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETDeregisterTransitGatewayMulticastGroupSourcesActionEnum;

  /**
   * Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DryRun",
  })
  dryRun?: boolean;

  /**
   * The IP address assigned to the transit gateway multicast group.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=GroupIpAddress",
  })
  groupIpAddress?: string;

  /**
   * The IDs of the group sources' network interfaces.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=NetworkInterfaceIds",
  })
  networkInterfaceIds?: string[];

  /**
   * The ID of the transit gateway multicast domain.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=TransitGatewayMulticastDomainId",
  })
  transitGatewayMulticastDomainId?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETDeregisterTransitGatewayMulticastGroupSourcesVersionEnum;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETDeregisterTransitGatewayMulticastGroupSourcesResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
