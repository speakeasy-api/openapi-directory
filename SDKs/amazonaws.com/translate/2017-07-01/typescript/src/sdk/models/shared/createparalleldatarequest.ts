/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EncryptionKey } from "./encryptionkey";
import { ParallelDataConfig } from "./paralleldataconfig";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateParallelDataRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ClientToken" })
  clientToken: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  /**
   * The encryption key used to encrypt this object.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EncryptionKey" })
  @Type(() => EncryptionKey)
  encryptionKey?: EncryptionKey;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ParallelDataConfig" })
  @Type(() => ParallelDataConfig)
  parallelDataConfig: ParallelDataConfig;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
