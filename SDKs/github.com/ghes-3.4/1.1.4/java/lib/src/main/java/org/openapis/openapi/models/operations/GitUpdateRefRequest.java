/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GitUpdateRefRequest {
    @SpeakeasyMetadata("request:mediaType=application/json")
    public GitUpdateRefRequestBody requestBody;

    public GitUpdateRefRequest withRequestBody(GitUpdateRefRequestBody requestBody) {
        this.requestBody = requestBody;
        return this;
    }
    
    /**
     * The account owner of the repository. The name is not case sensitive.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=owner")
    public String owner;

    public GitUpdateRefRequest withOwner(String owner) {
        this.owner = owner;
        return this;
    }
    
    /**
     * The name of the fully qualified reference to update. For example, `refs/heads/master`. If the value doesn't start with `refs` and have at least two slashes, it will be rejected.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=ref")
    public String ref;

    public GitUpdateRefRequest withRef(String ref) {
        this.ref = ref;
        return this;
    }
    
    /**
     * The name of the repository. The name is not case sensitive.
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=repo")
    public String repo;

    public GitUpdateRefRequest withRepo(String repo) {
        this.repo = repo;
        return this;
    }
    
    public GitUpdateRefRequest(@JsonProperty("RequestBody") GitUpdateRefRequestBody requestBody, @JsonProperty("owner") String owner, @JsonProperty("ref") String ref, @JsonProperty("repo") String repo) {
        this.requestBody = requestBody;
        this.owner = owner;
        this.ref = ref;
        this.repo = repo;
  }
}
