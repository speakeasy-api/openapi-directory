/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Alert - A search alert that the user has created so that they can be notified when new posts match the search query specified by the alert.
 */
public class Alert {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("alert_id")
    public String alertId;
    public Alert withAlertId(String alertId) {
        this.alertId = alertId;
        return this;
    }
    
    /**
     * The UTC date and time when the alert was last triggered and sent out (may be null).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("last_sent")
    public OffsetDateTime lastSent;
    public Alert withLastSent(OffsetDateTime lastSent) {
        this.lastSent = lastSent;
        return this;
    }
    
    /**
     * The search phrase that the alert triggers on.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("search")
    public String search;
    public Alert withSearch(String search) {
        this.search = search;
        return this;
    }
    
    /**
     * The number of time the alert has triggered and been send out.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("send_count")
    public Long sendCount;
    public Alert withSendCount(Long sendCount) {
        this.sendCount = sendCount;
        return this;
    }
    
    /**
     * A list of the post types that the alert is set to match against.  The available post types are: offer, wanted &lt;br /&gt;&lt;br /&gt; NOTE: Additional post types may be added in the future (eg. events) so clients should take care to support arbitrary types being returned.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("types")
    public String[] types;
    public Alert withTypes(String[] types) {
        this.types = types;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("user_id")
    public String userId;
    public Alert withUserId(String userId) {
        this.userId = userId;
        return this;
    }
    
}
