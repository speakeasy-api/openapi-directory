/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CancelBookingQuoteServerList = [
  /**
   * Sandbox server (uses test data)
   */
  "https://api.sandbox.viator.com/partner",
] as const;

export class CancelBookingQuoteRequest extends SpeakeasyBase {
  /**
   * Unique numeric identifier of the booking for which to retrieve a cancellation quote
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=booking-reference",
  })
  bookingReference: string;
}

export class CancelBookingQuoteResponse extends SpeakeasyBase {
  /**
   * Unauthorized
   */
  @SpeakeasyMetadata()
  fourHundredAndOneUNAUTHORIZED?: shared.FourHundredAndOneUNAUTHORIZED;

  /**
   * Not Acceptable
   */
  @SpeakeasyMetadata()
  fourHundredAndSixNOTACCEPTABLE?: shared.FourHundredAndSixNOTACCEPTABLE;

  /**
   * Internal Server Error
   */
  @SpeakeasyMetadata()
  fiveHundredINTERNALSERVERERROR?: shared.FiveHundredINTERNALSERVERERROR;

  /**
   * Service Unavailable
   */
  @SpeakeasyMetadata()
  fiveHundredAndThreeSERVICEUNAVAILABLE?: shared.FiveHundredAndThreeSERVICEUNAVAILABLE;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  cancelBookingQuoteResponse?: shared.CancelBookingQuoteResponse;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
