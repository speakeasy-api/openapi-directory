/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export enum DeleteRegexMatchSetXAmzTargetEnum {
  AWSWAFRegional20161128DeleteRegexMatchSet = "AWSWAF_Regional_20161128.DeleteRegexMatchSet",
}

export class DeleteRegexMatchSetRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  deleteRegexMatchSetRequest: shared.DeleteRegexMatchSetRequest;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Target",
  })
  xAmzTarget: DeleteRegexMatchSetXAmzTargetEnum;
}

export class DeleteRegexMatchSetResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  deleteRegexMatchSetResponse?: shared.DeleteRegexMatchSetResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * WAFInternalErrorException
   */
  @SpeakeasyMetadata()
  wafInternalErrorException?: any;

  /**
   * WAFInvalidAccountException
   */
  @SpeakeasyMetadata()
  wafInvalidAccountException?: any;

  /**
   * WAFNonEmptyEntityException
   */
  @SpeakeasyMetadata()
  wafNonEmptyEntityException?: any;

  /**
   * WAFNonexistentItemException
   */
  @SpeakeasyMetadata()
  wafNonexistentItemException?: any;

  /**
   * WAFReferencedItemException
   */
  @SpeakeasyMetadata()
  wafReferencedItemException?: any;

  /**
   * WAFStaleDataException
   */
  @SpeakeasyMetadata()
  wafStaleDataException?: any;
}
