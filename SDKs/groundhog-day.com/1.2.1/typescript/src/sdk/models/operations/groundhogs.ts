/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Filter groundhogs by type (actual, alive groundhogs, or other prognosticators)
 */
export enum GroundhogsIsGroundhogEnum {
  One = "1",
  Zero = "0",
  True = "true",
  False = "false",
}

export class GroundhogsRequest extends SpeakeasyBase {
  /**
   * Filter groundhogs by country of origin (USA or Canada).
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=country",
  })
  country?: string;

  /**
   * Filter groundhogs by type (actual, alive groundhogs, or other prognosticators)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=isGroundhog",
  })
  isGroundhog?: GroundhogsIsGroundhogEnum;
}

/**
 * OK
 */
export class Groundhogs200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: shared.Groundhog })
  @Expose({ name: "groundhogs" })
  @Type(() => shared.Groundhog)
  groundhogs?: shared.Groundhog[];
}

export class GroundhogsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  groundhogs200ApplicationJSONObject?: Groundhogs200ApplicationJSON;
}
