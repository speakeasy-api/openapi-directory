/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

/**
 * True if you want to display licensed content
 */
export enum GetSegmentIncludeLicensedContentEnum {
  Yes = "yes",
  No = " no",
}

export class GetSegmentRequest extends SpeakeasyBase {
  /**
   * ID of the segment
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: string;

  /**
   * True if you want to display licensed content
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=includeLicensedContent",
  })
  includeLicensedContent?: GetSegmentIncludeLicensedContentEnum;

  /**
   * The locale in ISO code format. Multiple comma-separated values can be provided. When omitting the country part of the code (e.g. only 'en' or 'fr') then the first matching locale is used. When using a '*' it matches all locales. '*' can only be used at the end (e.g. 'en-us,en,*')
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=locale",
  })
  locale?: string;
}

export class GetSegmentResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
