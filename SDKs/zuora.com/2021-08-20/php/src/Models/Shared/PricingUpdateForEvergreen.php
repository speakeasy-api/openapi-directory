<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class PricingUpdateForEvergreen
{
    /**
     * Container for charge model configuration data.
     * 
     * 
     * **Note**: This field is only available if you have the High Water Mark, Pre-Rated Pricing, or Multi-Attribute Pricing charge models enabled. The charge models are available for customers with Enterprise and Nine editions by default. If you are a Growth customer, see [Zuora Editions](https://knowledgecenter.zuora.com/BB_Introducing_Z_Business/C_Zuora_Editions) for pricing information.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ChargeModelDataOverride $chargeModelData
     */
	#[\JMS\Serializer\Annotation\SerializedName('chargeModelData')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ChargeModelDataOverride')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ChargeModelDataOverride $chargeModelData = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('discount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\DiscountPricingUpdate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DiscountPricingUpdate $discount = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('recurringFlatFee')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RecurringFlatFeePricingUpdate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RecurringFlatFeePricingUpdate $recurringFlatFee = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('recurringPerUnit')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RecurringPerUnitPricingUpdate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RecurringPerUnitPricingUpdate $recurringPerUnit = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('recurringTiered')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RecurringTieredPricingUpdate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RecurringTieredPricingUpdate $recurringTiered = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('recurringVolume')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RecurringVolumePricingUpdate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RecurringVolumePricingUpdate $recurringVolume = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('usageFlatFee')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UsageFlatFeePricingUpdate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsageFlatFeePricingUpdate $usageFlatFee = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('usageOverage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UsageOveragePricingUpdate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsageOveragePricingUpdate $usageOverage = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('usagePerUnit')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UsagePerUnitPricingUpdate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsagePerUnitPricingUpdate $usagePerUnit = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('usageTiered')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UsageTieredPricingUpdate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsageTieredPricingUpdate $usageTiered = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('usageTieredWithOverage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UsageTieredWithOveragePricingUpdate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsageTieredWithOveragePricingUpdate $usageTieredWithOverage = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('usageVolume')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\UsageVolumePricingUpdate')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?UsageVolumePricingUpdate $usageVolume = null;
    
	public function __construct()
	{
		$this->chargeModelData = null;
		$this->discount = null;
		$this->recurringFlatFee = null;
		$this->recurringPerUnit = null;
		$this->recurringTiered = null;
		$this->recurringVolume = null;
		$this->usageFlatFee = null;
		$this->usageOverage = null;
		$this->usagePerUnit = null;
		$this->usageTiered = null;
		$this->usageTieredWithOverage = null;
		$this->usageVolume = null;
	}
}
