"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateIpamPoolRequest = exports.CreateIpamPoolRequestTagSpecifications = exports.CreateIpamPoolRequestTagSpecificationsTags = exports.CreateIpamPoolRequestTagSpecificationsResourceTypeEnum = exports.CreateIpamPoolRequestAllocationResourceTags = void 0;
var utils_1 = require("../../../internal/utils");
var addressfamilyenum_1 = require("./addressfamilyenum");
var ipampoolawsserviceenum_1 = require("./ipampoolawsserviceenum");
var ipampoolpublicipsourceenum_1 = require("./ipampoolpublicipsourceenum");
/**
 * A tag on an IPAM resource.
 */
var CreateIpamPoolRequestAllocationResourceTags = /** @class */ (function (_super) {
    __extends(CreateIpamPoolRequestAllocationResourceTags, _super);
    function CreateIpamPoolRequestAllocationResourceTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateIpamPoolRequestAllocationResourceTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateIpamPoolRequestAllocationResourceTags.prototype, "value", void 0);
    return CreateIpamPoolRequestAllocationResourceTags;
}(utils_1.SpeakeasyBase));
exports.CreateIpamPoolRequestAllocationResourceTags = CreateIpamPoolRequestAllocationResourceTags;
/**
 * The type of resource to tag on creation.
 */
var CreateIpamPoolRequestTagSpecificationsResourceTypeEnum;
(function (CreateIpamPoolRequestTagSpecificationsResourceTypeEnum) {
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["CapacityReservation"] = "capacity-reservation";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["ClientVpnEndpoint"] = "client-vpn-endpoint";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["CustomerGateway"] = "customer-gateway";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["CarrierGateway"] = "carrier-gateway";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["CoipPool"] = "coip-pool";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["DedicatedHost"] = "dedicated-host";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["DhcpOptions"] = "dhcp-options";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["EgressOnlyInternetGateway"] = "egress-only-internet-gateway";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["ElasticIp"] = "elastic-ip";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["ElasticGpu"] = "elastic-gpu";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["ExportImageTask"] = "export-image-task";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["ExportInstanceTask"] = "export-instance-task";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["Fleet"] = "fleet";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["FpgaImage"] = "fpga-image";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["HostReservation"] = "host-reservation";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["Image"] = "image";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["ImportImageTask"] = "import-image-task";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["ImportSnapshotTask"] = "import-snapshot-task";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["Instance"] = "instance";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["InstanceEventWindow"] = "instance-event-window";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["InternetGateway"] = "internet-gateway";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["Ipam"] = "ipam";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["IpamPool"] = "ipam-pool";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["IpamScope"] = "ipam-scope";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["Ipv4poolEc2"] = "ipv4pool-ec2";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["Ipv6poolEc2"] = "ipv6pool-ec2";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["KeyPair"] = "key-pair";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["LaunchTemplate"] = "launch-template";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["LocalGateway"] = "local-gateway";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["LocalGatewayRouteTable"] = "local-gateway-route-table";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["LocalGatewayVirtualInterface"] = "local-gateway-virtual-interface";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["LocalGatewayVirtualInterfaceGroup"] = "local-gateway-virtual-interface-group";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["LocalGatewayRouteTableVpcAssociation"] = "local-gateway-route-table-vpc-association";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["LocalGatewayRouteTableVirtualInterfaceGroupAssociation"] = "local-gateway-route-table-virtual-interface-group-association";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["Natgateway"] = "natgateway";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["NetworkAcl"] = "network-acl";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["NetworkInterface"] = "network-interface";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["NetworkInsightsAnalysis"] = "network-insights-analysis";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["NetworkInsightsPath"] = "network-insights-path";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["NetworkInsightsAccessScope"] = "network-insights-access-scope";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["NetworkInsightsAccessScopeAnalysis"] = "network-insights-access-scope-analysis";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["PlacementGroup"] = "placement-group";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["PrefixList"] = "prefix-list";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["ReplaceRootVolumeTask"] = "replace-root-volume-task";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["ReservedInstances"] = "reserved-instances";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["RouteTable"] = "route-table";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["SecurityGroup"] = "security-group";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["SecurityGroupRule"] = "security-group-rule";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["Snapshot"] = "snapshot";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["SpotFleetRequest"] = "spot-fleet-request";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["SpotInstancesRequest"] = "spot-instances-request";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["Subnet"] = "subnet";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["SubnetCidrReservation"] = "subnet-cidr-reservation";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["TrafficMirrorFilter"] = "traffic-mirror-filter";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["TrafficMirrorSession"] = "traffic-mirror-session";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["TrafficMirrorTarget"] = "traffic-mirror-target";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["TransitGateway"] = "transit-gateway";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["TransitGatewayAttachment"] = "transit-gateway-attachment";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["TransitGatewayConnectPeer"] = "transit-gateway-connect-peer";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["TransitGatewayMulticastDomain"] = "transit-gateway-multicast-domain";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["TransitGatewayPolicyTable"] = "transit-gateway-policy-table";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["TransitGatewayRouteTable"] = "transit-gateway-route-table";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["TransitGatewayRouteTableAnnouncement"] = "transit-gateway-route-table-announcement";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["Volume"] = "volume";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["Vpc"] = "vpc";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["VpcEndpoint"] = "vpc-endpoint";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["VpcEndpointConnection"] = "vpc-endpoint-connection";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["VpcEndpointService"] = "vpc-endpoint-service";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["VpcEndpointServicePermission"] = "vpc-endpoint-service-permission";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["VpcPeeringConnection"] = "vpc-peering-connection";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["VpnConnection"] = "vpn-connection";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["VpnGateway"] = "vpn-gateway";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["VpcFlowLog"] = "vpc-flow-log";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["CapacityReservationFleet"] = "capacity-reservation-fleet";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["TrafficMirrorFilterRule"] = "traffic-mirror-filter-rule";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["VpcEndpointConnectionDeviceType"] = "vpc-endpoint-connection-device-type";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["VerifiedAccessInstance"] = "verified-access-instance";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["VerifiedAccessGroup"] = "verified-access-group";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["VerifiedAccessEndpoint"] = "verified-access-endpoint";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["VerifiedAccessPolicy"] = "verified-access-policy";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["VerifiedAccessTrustProvider"] = "verified-access-trust-provider";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["VpnConnectionDeviceType"] = "vpn-connection-device-type";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["VpcBlockPublicAccessExclusion"] = "vpc-block-public-access-exclusion";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["IpamResourceDiscovery"] = "ipam-resource-discovery";
    CreateIpamPoolRequestTagSpecificationsResourceTypeEnum["IpamResourceDiscoveryAssociation"] = "ipam-resource-discovery-association";
})(CreateIpamPoolRequestTagSpecificationsResourceTypeEnum = exports.CreateIpamPoolRequestTagSpecificationsResourceTypeEnum || (exports.CreateIpamPoolRequestTagSpecificationsResourceTypeEnum = {}));
/**
 * Describes a tag.
 */
var CreateIpamPoolRequestTagSpecificationsTags = /** @class */ (function (_super) {
    __extends(CreateIpamPoolRequestTagSpecificationsTags, _super);
    function CreateIpamPoolRequestTagSpecificationsTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateIpamPoolRequestTagSpecificationsTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateIpamPoolRequestTagSpecificationsTags.prototype, "value", void 0);
    return CreateIpamPoolRequestTagSpecificationsTags;
}(utils_1.SpeakeasyBase));
exports.CreateIpamPoolRequestTagSpecificationsTags = CreateIpamPoolRequestTagSpecificationsTags;
/**
 * <p>The tags to apply to a resource when the resource is being created. When you specify a tag, you must specify the resource type to tag, otherwise the request will fail.</p> <note> <p>The <code>Valid Values</code> lists all the resource types that can be tagged. However, the action you're using might not support tagging all of these resource types. If you try to tag a resource type that is unsupported for the action you're using, you'll get an error.</p> </note>
 */
var CreateIpamPoolRequestTagSpecifications = /** @class */ (function (_super) {
    __extends(CreateIpamPoolRequestTagSpecifications, _super);
    function CreateIpamPoolRequestTagSpecifications() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateIpamPoolRequestTagSpecifications.prototype, "resourceType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: CreateIpamPoolRequestTagSpecificationsTags }),
        __metadata("design:type", Array)
    ], CreateIpamPoolRequestTagSpecifications.prototype, "tags", void 0);
    return CreateIpamPoolRequestTagSpecifications;
}(utils_1.SpeakeasyBase));
exports.CreateIpamPoolRequestTagSpecifications = CreateIpamPoolRequestTagSpecifications;
var CreateIpamPoolRequest = /** @class */ (function (_super) {
    __extends(CreateIpamPoolRequest, _super);
    function CreateIpamPoolRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateIpamPoolRequest.prototype, "addressFamily", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CreateIpamPoolRequest.prototype, "allocationDefaultNetmaskLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CreateIpamPoolRequest.prototype, "allocationMaxNetmaskLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], CreateIpamPoolRequest.prototype, "allocationMinNetmaskLength", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: CreateIpamPoolRequestAllocationResourceTags }),
        __metadata("design:type", Array)
    ], CreateIpamPoolRequest.prototype, "allocationResourceTags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], CreateIpamPoolRequest.prototype, "autoImport", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateIpamPoolRequest.prototype, "awsService", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateIpamPoolRequest.prototype, "clientToken", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateIpamPoolRequest.prototype, "description", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], CreateIpamPoolRequest.prototype, "dryRun", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateIpamPoolRequest.prototype, "ipamScopeId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateIpamPoolRequest.prototype, "locale", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateIpamPoolRequest.prototype, "publicIpSource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], CreateIpamPoolRequest.prototype, "publiclyAdvertisable", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateIpamPoolRequest.prototype, "sourceIpamPoolId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: CreateIpamPoolRequestTagSpecifications }),
        __metadata("design:type", Array)
    ], CreateIpamPoolRequest.prototype, "tagSpecifications", void 0);
    return CreateIpamPoolRequest;
}(utils_1.SpeakeasyBase));
exports.CreateIpamPoolRequest = CreateIpamPoolRequest;
