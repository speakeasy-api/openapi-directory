<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CustomObjectDefinitionUpdateActionResponseRelationship
{
    /**
     * The cardinality of the relationship from this object to another object.
     * 
     * 
     * A `manyToOne` relationship means this object is the child object (the "many" side), and the referenced object (the "one" side) is the parent.
     * 
     * A `oneToMany` relationship means this object is the parent object (the "one" side), and the referenced object (the "many" side) is the child.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CustomObjectDefinitionUpdateActionResponseRelationshipCardinalityEnum $cardinality
     */
	#[\JMS\Serializer\Annotation\SerializedName('cardinality')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\CustomObjectDefinitionUpdateActionResponseRelationshipCardinalityEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CustomObjectDefinitionUpdateActionResponseRelationshipCardinalityEnum $cardinality = null;
    
    /**
     * Field mappings in the form of `<this-object-field-name>`: `<other-object-field-name>`.
     * 
     * 
     * 
     * @var ?array<string, string> $fields
     */
	#[\JMS\Serializer\Annotation\SerializedName('fields')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $fields = null;
    
    /**
     * The namespace where the related object is located
     * 
     * @var ?string $namespace
     */
	#[\JMS\Serializer\Annotation\SerializedName('namespace')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $namespace = null;
    
    /**
     * The API name of the related object
     * 
     * @var ?string $object
     */
	#[\JMS\Serializer\Annotation\SerializedName('object')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $object = null;
    
    /**
     * Specifies contraints to apply to custom object records.
     * 
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\CustomObjectDefinitionUpdateActionResponseRelationshipRecordConstraints $recordConstraints
     */
	#[\JMS\Serializer\Annotation\SerializedName('recordConstraints')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\CustomObjectDefinitionUpdateActionResponseRelationshipRecordConstraints')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CustomObjectDefinitionUpdateActionResponseRelationshipRecordConstraints $recordConstraints = null;
    
	public function __construct()
	{
		$this->cardinality = null;
		$this->fields = null;
		$this->namespace = null;
		$this->object = null;
		$this->recordConstraints = null;
	}
}
