// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteMatchmakingConfigurationXAmzTargetEnum
type DeleteMatchmakingConfigurationXAmzTargetEnum string

const (
	DeleteMatchmakingConfigurationXAmzTargetEnumGameLiftDeleteMatchmakingConfiguration DeleteMatchmakingConfigurationXAmzTargetEnum = "GameLift.DeleteMatchmakingConfiguration"
)

func (e *DeleteMatchmakingConfigurationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GameLift.DeleteMatchmakingConfiguration":
		*e = DeleteMatchmakingConfigurationXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteMatchmakingConfigurationXAmzTargetEnum: %s", s)
	}
}

type DeleteMatchmakingConfigurationRequest struct {
	DeleteMatchmakingConfigurationInput shared.DeleteMatchmakingConfigurationInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                       *string                                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                   *string                                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                      *string                                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                            *string                                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                   *string                                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                       *string                                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                   *string                                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                          DeleteMatchmakingConfigurationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteMatchmakingConfigurationResponse struct {
	ContentType string
	// Success
	DeleteMatchmakingConfigurationOutput map[string]interface{}
	// InternalServiceException
	InternalServiceException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// NotFoundException
	NotFoundException interface{}
	StatusCode        int
	RawResponse       *http.Response
	// TaggingFailedException
	TaggingFailedException interface{}
	// UnsupportedRegionException
	UnsupportedRegionException interface{}
}
