// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DisassociateApplicationFleetXAmzTargetEnum
type DisassociateApplicationFleetXAmzTargetEnum string

const (
	DisassociateApplicationFleetXAmzTargetEnumPhotonAdminProxyServiceDisassociateApplicationFleet DisassociateApplicationFleetXAmzTargetEnum = "PhotonAdminProxyService.DisassociateApplicationFleet"
)

func (e DisassociateApplicationFleetXAmzTargetEnum) ToPointer() *DisassociateApplicationFleetXAmzTargetEnum {
	return &e
}

func (e *DisassociateApplicationFleetXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PhotonAdminProxyService.DisassociateApplicationFleet":
		*e = DisassociateApplicationFleetXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DisassociateApplicationFleetXAmzTargetEnum: %v", v)
	}
}

type DisassociateApplicationFleetRequest struct {
	DisassociateApplicationFleetRequest shared.DisassociateApplicationFleetRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                       *string                                    `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                   *string                                    `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                      *string                                    `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                            *string                                    `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                   *string                                    `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                       *string                                    `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                   *string                                    `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                          DisassociateApplicationFleetXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DisassociateApplicationFleetResponse struct {
	// ConcurrentModificationException
	ConcurrentModificationException interface{}
	ContentType                     string
	// Success
	DisassociateApplicationFleetResult map[string]interface{}
	// InvalidParameterCombinationException
	InvalidParameterCombinationException interface{}
	// OperationNotPermittedException
	OperationNotPermittedException interface{}
	StatusCode                     int
	RawResponse                    *http.Response
}
