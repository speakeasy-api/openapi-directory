// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type UpdateNetworkSwitchRoutingOspfPathParams struct {
	NetworkID string `pathParam:"style=simple,explode=false,name=networkId"`
}

// UpdateNetworkSwitchRoutingOspfRequestBodyAreasAreaTypeEnum - Area types in OSPF. Must be one of: ["normal", "stub", "nssa"]
type UpdateNetworkSwitchRoutingOspfRequestBodyAreasAreaTypeEnum string

const (
	UpdateNetworkSwitchRoutingOspfRequestBodyAreasAreaTypeEnumNormal UpdateNetworkSwitchRoutingOspfRequestBodyAreasAreaTypeEnum = "normal"
	UpdateNetworkSwitchRoutingOspfRequestBodyAreasAreaTypeEnumNssa   UpdateNetworkSwitchRoutingOspfRequestBodyAreasAreaTypeEnum = "nssa"
	UpdateNetworkSwitchRoutingOspfRequestBodyAreasAreaTypeEnumStub   UpdateNetworkSwitchRoutingOspfRequestBodyAreasAreaTypeEnum = "stub"
)

func (e *UpdateNetworkSwitchRoutingOspfRequestBodyAreasAreaTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "normal":
		fallthrough
	case "nssa":
		fallthrough
	case "stub":
		*e = UpdateNetworkSwitchRoutingOspfRequestBodyAreasAreaTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkSwitchRoutingOspfRequestBodyAreasAreaTypeEnum: %s", s)
	}
}

type UpdateNetworkSwitchRoutingOspfRequestBodyAreas struct {
	// OSPF area ID
	AreaID string `json:"areaId"`
	// Name of the OSPF area
	AreaName string `json:"areaName"`
	// Area types in OSPF. Must be one of: ["normal", "stub", "nssa"]
	AreaType UpdateNetworkSwitchRoutingOspfRequestBodyAreasAreaTypeEnum `json:"areaType"`
}

// UpdateNetworkSwitchRoutingOspfRequestBodyMd5AuthenticationKey - MD5 authentication credentials. This param is only relevant if md5AuthenticationEnabled is true
type UpdateNetworkSwitchRoutingOspfRequestBodyMd5AuthenticationKey struct {
	// MD5 authentication key index. Key index must be between 1 to 255
	ID *int64 `json:"id,omitempty"`
	// MD5 authentication passphrase
	Passphrase *string `json:"passphrase,omitempty"`
}

// UpdateNetworkSwitchRoutingOspfRequestBodyV3AreasAreaTypeEnum - Area types in OSPF. Must be one of: ["normal", "stub", "nssa"]
type UpdateNetworkSwitchRoutingOspfRequestBodyV3AreasAreaTypeEnum string

const (
	UpdateNetworkSwitchRoutingOspfRequestBodyV3AreasAreaTypeEnumNormal UpdateNetworkSwitchRoutingOspfRequestBodyV3AreasAreaTypeEnum = "normal"
	UpdateNetworkSwitchRoutingOspfRequestBodyV3AreasAreaTypeEnumNssa   UpdateNetworkSwitchRoutingOspfRequestBodyV3AreasAreaTypeEnum = "nssa"
	UpdateNetworkSwitchRoutingOspfRequestBodyV3AreasAreaTypeEnumStub   UpdateNetworkSwitchRoutingOspfRequestBodyV3AreasAreaTypeEnum = "stub"
)

func (e *UpdateNetworkSwitchRoutingOspfRequestBodyV3AreasAreaTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "normal":
		fallthrough
	case "nssa":
		fallthrough
	case "stub":
		*e = UpdateNetworkSwitchRoutingOspfRequestBodyV3AreasAreaTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateNetworkSwitchRoutingOspfRequestBodyV3AreasAreaTypeEnum: %s", s)
	}
}

type UpdateNetworkSwitchRoutingOspfRequestBodyV3Areas struct {
	// OSPF area ID
	AreaID string `json:"areaId"`
	// Name of the OSPF area
	AreaName string `json:"areaName"`
	// Area types in OSPF. Must be one of: ["normal", "stub", "nssa"]
	AreaType UpdateNetworkSwitchRoutingOspfRequestBodyV3AreasAreaTypeEnum `json:"areaType"`
}

// UpdateNetworkSwitchRoutingOspfRequestBodyV3 - OSPF v3 configuration
type UpdateNetworkSwitchRoutingOspfRequestBodyV3 struct {
	// OSPF v3 areas
	Areas []UpdateNetworkSwitchRoutingOspfRequestBodyV3Areas `json:"areas,omitempty"`
	// Time interval to determine when the peer will be declared inactive/dead. Value must be between 1 and 65535
	DeadTimerInSeconds *int64 `json:"deadTimerInSeconds,omitempty"`
	// Boolean value to enable or disable V3 OSPF routing. OSPF V3 routing is disabled by default.
	Enabled *bool `json:"enabled,omitempty"`
	// Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds.
	HelloTimerInSeconds *int64 `json:"helloTimerInSeconds,omitempty"`
}

type UpdateNetworkSwitchRoutingOspfRequestBody struct {
	// OSPF areas
	Areas []UpdateNetworkSwitchRoutingOspfRequestBodyAreas `json:"areas,omitempty"`
	// Time interval to determine when the peer will be declared inactive/dead. Value must be between 1 and 65535
	DeadTimerInSeconds *int64 `json:"deadTimerInSeconds,omitempty"`
	// Boolean value to enable or disable OSPF routing. OSPF routing is disabled by default.
	Enabled *bool `json:"enabled,omitempty"`
	// Time interval in seconds at which hello packet will be sent to OSPF neighbors to maintain connectivity. Value must be between 1 and 255. Default is 10 seconds.
	HelloTimerInSeconds *int64 `json:"helloTimerInSeconds,omitempty"`
	// Boolean value to enable or disable MD5 authentication. MD5 authentication is disabled by default.
	Md5AuthenticationEnabled *bool `json:"md5AuthenticationEnabled,omitempty"`
	// MD5 authentication credentials. This param is only relevant if md5AuthenticationEnabled is true
	Md5AuthenticationKey *UpdateNetworkSwitchRoutingOspfRequestBodyMd5AuthenticationKey `json:"md5AuthenticationKey,omitempty"`
	// OSPF v3 configuration
	V3 *UpdateNetworkSwitchRoutingOspfRequestBodyV3 `json:"v3,omitempty"`
}

type UpdateNetworkSwitchRoutingOspfRequest struct {
	PathParams UpdateNetworkSwitchRoutingOspfPathParams
	Request    *UpdateNetworkSwitchRoutingOspfRequestBody `request:"mediaType=application/json"`
}

type UpdateNetworkSwitchRoutingOspfResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	UpdateNetworkSwitchRoutingOspf200ApplicationJSONObject map[string]interface{}
}
