"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import availability_enum as shared_availability_enum
from ..shared import lang_enum as shared_lang_enum
from ..shared import rights_enum as shared_rights_enum
from typing import Any, Optional


@dataclasses.dataclass
class SearchSuggestRequest:
    
    availability: shared_availability_enum.AvailabilityEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'availability', 'style': 'form', 'explode': True }})
    r"""Whether to return all, or available programmes"""  
    lang: shared_lang_enum.LangEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'lang', 'style': 'form', 'explode': True }})
    r"""The language for any applicable localised strings."""  
    q: str = dataclasses.field(metadata={'query_param': { 'field_name': 'q', 'style': 'form', 'explode': True }})
    r"""The term to search for."""  
    rights: shared_rights_enum.RightsEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'rights', 'style': 'form', 'explode': True }})
    r"""The rights group to limit results to."""  
    

@dataclasses.dataclass
class SearchSuggestResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    ibl: Optional[Any] = dataclasses.field(default=None)
    r"""Default response"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    