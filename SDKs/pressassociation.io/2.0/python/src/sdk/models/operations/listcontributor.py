"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Any, Optional


@dataclasses.dataclass
class ListContributorSecurity:
    
    apikey: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'apiKey', 'sub_type': 'header', 'field_name': 'apikey' }})  
    

@dataclasses.dataclass
class ListContributorRequest:
    
    aliases: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'aliases', 'style': 'form', 'explode': True }})
    r"""Flag to display Legacy and Provider Ids."""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Limit the the number of items to be returned per page. For example: 5."""  
    updated_after: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'updatedAfter', 'style': 'form', 'explode': True }})
    r"""Updated After"""  
    

@dataclasses.dataclass
class ListContributorResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    list_contributor_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    