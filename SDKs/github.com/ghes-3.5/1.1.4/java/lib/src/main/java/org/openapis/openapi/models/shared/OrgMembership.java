/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OrgMembership - Org Membership
 */
public class OrgMembership {
    /**
     * A GitHub organization.
     */
    @JsonProperty("organization")
    public OrganizationSimple organization;

    public OrgMembership withOrganization(OrganizationSimple organization) {
        this.organization = organization;
        return this;
    }
    
    @JsonProperty("organization_url")
    public String organizationUrl;

    public OrgMembership withOrganizationUrl(String organizationUrl) {
        this.organizationUrl = organizationUrl;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissions")
    public OrgMembershipPermissions permissions;

    public OrgMembership withPermissions(OrgMembershipPermissions permissions) {
        this.permissions = permissions;
        return this;
    }
    
    /**
     * The user's membership type in the organization.
     */
    @JsonProperty("role")
    public OrgMembershipRoleEnum role;

    public OrgMembership withRole(OrgMembershipRoleEnum role) {
        this.role = role;
        return this;
    }
    
    /**
     * The state of the member in the organization. The `pending` state indicates the user has not yet accepted an invitation.
     */
    @JsonProperty("state")
    public OrgMembershipStateEnum state;

    public OrgMembership withState(OrgMembershipStateEnum state) {
        this.state = state;
        return this;
    }
    
    @JsonProperty("url")
    public String url;

    public OrgMembership withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * A GitHub user.
     */
    @JsonProperty("user")
    public NullableSimpleUser user;

    public OrgMembership withUser(NullableSimpleUser user) {
        this.user = user;
        return this;
    }
    
    public OrgMembership(@JsonProperty("organization") OrganizationSimple organization, @JsonProperty("organization_url") String organizationUrl, @JsonProperty("role") OrgMembershipRoleEnum role, @JsonProperty("state") OrgMembershipStateEnum state, @JsonProperty("url") String url, @JsonProperty("user") NullableSimpleUser user) {
        this.organization = organization;
        this.organizationUrl = organizationUrl;
        this.role = role;
        this.state = state;
        this.url = url;
        this.user = user;
  }
}
