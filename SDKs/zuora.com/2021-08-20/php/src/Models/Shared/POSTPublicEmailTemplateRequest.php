<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * POSTPublicEmailTemplateRequest - The request body to create an email template.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class POSTPublicEmailTemplateRequest
{
    /**
     * The status of the email template. The default value is true.
     * 
     * @var ?bool $active
     */
	#[\JMS\Serializer\Annotation\SerializedName('active')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $active = null;
    
    /**
     * The email bcc address.
     * 
     * @var ?string $bccEmailAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('bccEmailAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $bccEmailAddress = null;
    
    /**
     * The email CC address.
     * 
     * @var ?string $ccEmailAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('ccEmailAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ccEmailAddress = null;
    
    /**
     * Email CC type:
     * 
     * * When EventType is CDC/External and 'ReferenceObjectType' in EventType is associated to Account, ccEmailType can be ALL values in enum. 
     * * When EventType is CDC/External and 'ReferenceObjectType' in EventType is not associated to Account, ccEmailType MUST be TenantAdmin, RunOwner or SpecificEmail. 
     * * When EventType is CDC/External and 'ReferenceObjectType' in EventType is EMPTY, ccEmailType MUST be TenantAdmin, RunOwner or SpecificEmail.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\POSTPublicEmailTemplateRequestCcEmailTypeEnum $ccEmailType
     */
	#[\JMS\Serializer\Annotation\SerializedName('ccEmailType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\POSTPublicEmailTemplateRequestCcEmailTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?POSTPublicEmailTemplateRequestCcEmailTypeEnum $ccEmailType = null;
    
    /**
     * The description of the email template.
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * The email body. You can add merge fields in the email object using angle brackets. 
     * 
     * You can also embed HTML tags if 'isHtml' is true.
     * 
     * @var string $emailBody
     */
	#[\JMS\Serializer\Annotation\SerializedName('emailBody')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $emailBody;
    
    /**
     * The email subject. Users can add merge fields in the email subject using angle brackets.
     * 
     * @var string $emailSubject
     */
	#[\JMS\Serializer\Annotation\SerializedName('emailSubject')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $emailSubject;
    
    /**
     * The endcode type of the email body.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\POSTPublicEmailTemplateRequestEncodingTypeEnum $encodingType
     */
	#[\JMS\Serializer\Annotation\SerializedName('encodingType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\POSTPublicEmailTemplateRequestEncodingTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?POSTPublicEmailTemplateRequestEncodingTypeEnum $encodingType = null;
    
    /**
     * The name of the event type. 
     * 
     * 
     * 
     * @var string $eventTypeName
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventTypeName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $eventTypeName;
    
    /**
     * The namespace of the `eventTypeName` field. The `eventTypeName` has the `user.notification` namespace by default. 
     * 
     * 
     * Note that if the `eventTypeName` is a standard event type, you must specify the `com.zuora.notification` namespace; otherwise, you will get an error.
     * 
     * For example, if you want to create an email template on the `OrderActionProcessed` event, you must specify `com.zuora.notification` for this field.         
     * 
     * 
     * @var ?string $eventTypeNamespace
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventTypeNamespace')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventTypeNamespace = null;
    
    /**
     * If fromEmailType is SpecificEmail, this field is required.
     * 
     * @var ?string $fromEmailAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('fromEmailAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fromEmailAddress = null;
    
    /**
     * The type of the email.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\POSTPublicEmailTemplateRequestFromEmailTypeEnum $fromEmailType
     */
	#[\JMS\Serializer\Annotation\SerializedName('fromEmailType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\POSTPublicEmailTemplateRequestFromEmailTypeEnum>')]
    public POSTPublicEmailTemplateRequestFromEmailTypeEnum $fromEmailType;
    
    /**
     * The name of the email sender.
     * 
     * @var ?string $fromName
     */
	#[\JMS\Serializer\Annotation\SerializedName('fromName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fromName = null;
    
    /**
     * Specifies whether the style of email body is HTML. The default value is false.
     * 
     * @var ?bool $isHtml
     */
	#[\JMS\Serializer\Annotation\SerializedName('isHtml')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isHtml = null;
    
    /**
     * The name of the email template, a unique name in a tenant.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * If replyToEmailType is SpecificEmail, this field is required.
     * 
     * @var ?string $replyToEmailAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('replyToEmailAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $replyToEmailAddress = null;
    
    /**
     * Type of the replyTo email.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\POSTPublicEmailTemplateRequestReplyToEmailTypeEnum $replyToEmailType
     */
	#[\JMS\Serializer\Annotation\SerializedName('replyToEmailType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\POSTPublicEmailTemplateRequestReplyToEmailTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?POSTPublicEmailTemplateRequestReplyToEmailTypeEnum $replyToEmailType = null;
    
    /**
     * If toEmailType is SpecificEmail, this field is required.
     * 
     * @var ?string $toEmailAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('toEmailAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $toEmailAddress = null;
    
    /**
     * Email receive type.
     * 
     * * When EventType is CDC/External and 'ReferenceObjectType' in EventType is associated to Account, toEmailType can be ALL values in enum. 
     * * When EventType is CDC/External and 'ReferenceObjectType' in EventType is not associated to Account, toEmailType MUST be TenantAdmin, RunOwner or SpecificEmail.
     * * When EventType is CDC/External and 'ReferenceObjectType' in EventType is EMPTY, toEmailType MUST be TenantAdmin, RunOwner or SpecificEmail.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\POSTPublicEmailTemplateRequestToEmailTypeEnum $toEmailType
     */
	#[\JMS\Serializer\Annotation\SerializedName('toEmailType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\POSTPublicEmailTemplateRequestToEmailTypeEnum>')]
    public POSTPublicEmailTemplateRequestToEmailTypeEnum $toEmailType;
    
	public function __construct()
	{
		$this->active = null;
		$this->bccEmailAddress = null;
		$this->ccEmailAddress = null;
		$this->ccEmailType = null;
		$this->description = null;
		$this->emailBody = "";
		$this->emailSubject = "";
		$this->encodingType = null;
		$this->eventTypeName = "";
		$this->eventTypeNamespace = null;
		$this->fromEmailAddress = null;
		$this->fromEmailType = \OpenAPI\OpenAPI\Models\Shared\POSTPublicEmailTemplateRequestFromEmailTypeEnum::TENANT_EMAIL;
		$this->fromName = null;
		$this->isHtml = null;
		$this->name = "";
		$this->replyToEmailAddress = null;
		$this->replyToEmailType = null;
		$this->toEmailAddress = null;
		$this->toEmailType = \OpenAPI\OpenAPI\Models\Shared\POSTPublicEmailTemplateRequestToEmailTypeEnum::BILL_TO_CONTACT;
	}
}
