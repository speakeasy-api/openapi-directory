/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Access permissions that the user has for the blog (ADMIN, AUTHOR, or READER).
 */
export enum BlogPerUserInfoRoleEnum {
  ViewTypeUnspecified = "VIEW_TYPE_UNSPECIFIED",
  Reader = "READER",
  Author = "AUTHOR",
  Admin = "ADMIN",
}

export class BlogPerUserInfo extends SpeakeasyBase {
  /**
   * ID of the Blog resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blogId" })
  blogId?: string;

  /**
   * True if the user has Admin level access to the blog.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hasAdminAccess" })
  hasAdminAccess?: boolean;

  /**
   * The kind of this entity. Always blogger#blogPerUserInfo.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * The Photo Album Key for the user when adding photos to the blog.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "photosAlbumKey" })
  photosAlbumKey?: string;

  /**
   * Access permissions that the user has for the blog (ADMIN, AUTHOR, or READER).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "role" })
  role?: BlogPerUserInfoRoleEnum;

  /**
   * ID of the User.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId?: string;
}
