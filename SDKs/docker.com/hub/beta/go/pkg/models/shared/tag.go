// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TagStatusEnum - whether a tag has been pushed to or pulled in the past month
type TagStatusEnum string

const (
	TagStatusEnumActive   TagStatusEnum = "active"
	TagStatusEnumInactive TagStatusEnum = "inactive"
)

func (e *TagStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "active":
		fallthrough
	case "inactive":
		*e = TagStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TagStatusEnum: %s", s)
	}
}

// Tag - repository tag
type Tag struct {
	// ID of the user that pushed the tag
	Creator *int64 `json:"creator,omitempty"`
	// compressed size (sum of all layers) of the tagged image
	FullSize *int64 `json:"full_size,omitempty"`
	// tag ID
	ID     *int64 `json:"id,omitempty"`
	Images *Image `json:"images,omitempty"`
	// datetime of last update
	LastUpdated *string `json:"last_updated,omitempty"`
	// ID of the last user that updated the tag
	LastUpdater *int64 `json:"last_updater,omitempty"`
	// Hub username of the user that updated the tag
	LastUpdaterUsername *string `json:"last_updater_username,omitempty"`
	// name of the tag
	Name *string `json:"name,omitempty"`
	// repository ID
	Repository *int64 `json:"repository,omitempty"`
	// whether a tag has been pushed to or pulled in the past month
	Status *TagStatusEnum `json:"status,omitempty"`
	// datetime of last pull
	TagLastPulled *string `json:"tag_last_pulled,omitempty"`
	// datetime of last push
	TagLastPushed *string `json:"tag_last_pushed,omitempty"`
	// repository API version
	V2 *string `json:"v2,omitempty"`
}
