"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import instancequota as shared_instancequota
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ProvisioningQuotaAssetTypeEnum(str, Enum):
    r"""The asset type of this provisioning quota."""
    ASSET_TYPE_UNSPECIFIED = 'ASSET_TYPE_UNSPECIFIED'
    ASSET_TYPE_SERVER = 'ASSET_TYPE_SERVER'
    ASSET_TYPE_STORAGE = 'ASSET_TYPE_STORAGE'
    ASSET_TYPE_NETWORK = 'ASSET_TYPE_NETWORK'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ProvisioningQuota:
    r"""A provisioning quota for a given project."""
    
    asset_type: Optional[ProvisioningQuotaAssetTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assetType'), 'exclude': lambda f: f is None }})
    r"""The asset type of this provisioning quota."""  
    available_count: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('availableCount'), 'exclude': lambda f: f is None }})
    r"""The available count of the provisioning quota."""  
    gcp_service: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gcpService'), 'exclude': lambda f: f is None }})
    r"""The gcp service of the provisioning quota."""  
    instance_quota: Optional[shared_instancequota.InstanceQuota] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instanceQuota'), 'exclude': lambda f: f is None }})
    r"""A resource budget."""  
    location: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('location'), 'exclude': lambda f: f is None }})
    r"""The specific location of the provisioining quota."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. The name of the provisioning quota."""  
    network_bandwidth: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('networkBandwidth'), 'exclude': lambda f: f is None }})
    r"""Network bandwidth, Gbps"""  
    server_count: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('serverCount'), 'exclude': lambda f: f is None }})
    r"""Server count."""  
    storage_gib: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('storageGib'), 'exclude': lambda f: f is None }})
    r"""Storage size (GB)."""  
    