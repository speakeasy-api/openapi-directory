"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import netlicensing as shared_netlicensing
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class CreateTokenSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    
class CreateTokenRequestBodyActionEnum(str, Enum):
    r"""For <i>type=ACTION</i> only; defines token action to be perfromed"""
    LICENSEE_LOGIN = 'licenseeLogin'

class CreateTokenRequestBodyAPIKeyRoleEnum(str, Enum):
    r"""For <i>tokenType=APIKEY</i> only (default: ROLE_APIKEY_LICENSEE); defines token RoleID"""
    ROLE_APIKEY_LICENSEE = 'ROLE_APIKEY_LICENSEE'
    ROLE_APIKEY_ANALYTICS = 'ROLE_APIKEY_ANALYTICS'
    ROLE_APIKEY_OPERATION = 'ROLE_APIKEY_OPERATION'
    ROLE_APIKEY_MAINTENANCE = 'ROLE_APIKEY_MAINTENANCE'
    ROLE_APIKEY_ADMIN = 'ROLE_APIKEY_ADMIN'

class CreateTokenRequestBodyTokenTypeEnum(str, Enum):
    r"""Token type to be generated"""
    DEFAULT = 'DEFAULT'
    SHOP = 'SHOP'
    APIKEY = 'APIKEY'

class CreateTokenRequestBodyTypeEnum(str, Enum):
    r"""For <i>tokenType=DEFAULT</i> only; action type to be set"""
    ACTION = 'ACTION'


@dataclasses.dataclass
class CreateTokenRequestBody:
    
    token_type: CreateTokenRequestBodyTokenTypeEnum = dataclasses.field(metadata={'form': { 'field_name': 'tokenType' }})
    r"""Token type to be generated"""  
    action: Optional[CreateTokenRequestBodyActionEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'action' }})
    r"""For <i>type=ACTION</i> only; defines token action to be perfromed"""  
    api_key_role: Optional[CreateTokenRequestBodyAPIKeyRoleEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'apiKeyRole' }})
    r"""For <i>tokenType=APIKEY</i> only (default: ROLE_APIKEY_LICENSEE); defines token RoleID"""  
    cancel_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'cancelURL' }})
    r"""For <i>tokenType=SHOP</i> only; take customers to this URL when they cancel their checkout"""  
    cancel_url_title: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'cancelURLTitle' }})
    r"""For <i>tokenType=SHOP</i> only; shop link title for cancel checkout process"""  
    licensee_number: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'licenseeNumber' }})
    r"""For <i>tokenType=SHOP</i> or <i>type=ACTION</i> only (mandatory); identifies Licensee that will be assigned to the shop token"""  
    license_template_number: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'licenseTemplateNumber' }})
    r"""For <i>tokenType=SHOP</i> only; identifies LicenseTemplate that will be assigned to the shop token"""  
    predefined_shopping_item: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'predefinedShoppingItem' }})
    r"""For <i>tokenType=SHOP</i> only; identifies Shopping Item name that will be shown to the customer"""  
    private_key: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'privateKey' }})
    r"""For <i>tokenType=APIKEY</i> only (optional); defines PrivateKey to be used with the validate method<br/><strong>Please Note:</strong> PrivateKey need to be provided as one line without spaces"""  
    product_number: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'productNumber' }})
    r"""For <i>tokenType=SHOP</i> only (mandatory); identifies Product that will be assigned to the shop token"""  
    success_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'successURL' }})
    r"""For <i>tokenType=SHOP</i> only; take customers to this URL when they finish checkout"""  
    success_url_title: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'successURLTitle' }})
    r"""For <i>tokenType=SHOP</i> only; shop link title for successful checkout process"""  
    type: Optional[CreateTokenRequestBodyTypeEnum] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'type' }})
    r"""For <i>tokenType=DEFAULT</i> only; action type to be set"""  
    

@dataclasses.dataclass
class CreateTokenResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    netlicensing: Optional[shared_netlicensing.Netlicensing] = dataclasses.field(default=None)
    r"""Successful request"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    