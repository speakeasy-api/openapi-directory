/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Version - A Version resource is a specific set of source code and configuration files that are deployed into a service.
 */
public class Version {
    /**
     * Google Cloud Endpoints (https://cloud.google.com/endpoints) configuration for API handlers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiConfig")
    public ApiConfigHandler apiConfig;

    public Version withApiConfig(ApiConfigHandler apiConfig) {
        this.apiConfig = apiConfig;
        return this;
    }
    
    /**
     * Allows App Engine second generation runtimes to access the legacy bundled services.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appEngineApis")
    public Boolean appEngineApis;

    public Version withAppEngineApis(Boolean appEngineApis) {
        this.appEngineApis = appEngineApis;
        return this;
    }
    
    /**
     * Automatic scaling is based on request rate, response latencies, and other application metrics.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("automaticScaling")
    public AutomaticScaling automaticScaling;

    public Version withAutomaticScaling(AutomaticScaling automaticScaling) {
        this.automaticScaling = automaticScaling;
        return this;
    }
    
    /**
     * A service with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("basicScaling")
    public BasicScaling basicScaling;

    public Version withBasicScaling(BasicScaling basicScaling) {
        this.basicScaling = basicScaling;
        return this;
    }
    
    /**
     * Metadata settings that are supplied to this version to enable beta runtime features.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("betaSettings")
    public java.util.Map<String, String> betaSettings;

    public Version withBetaSettings(java.util.Map<String, String> betaSettings) {
        this.betaSettings = betaSettings;
        return this;
    }
    
    /**
     * Environment variables available to the build environment.Only returned in GET requests if view=FULL is set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buildEnvVariables")
    public java.util.Map<String, String> buildEnvVariables;

    public Version withBuildEnvVariables(java.util.Map<String, String> buildEnvVariables) {
        this.buildEnvVariables = buildEnvVariables;
        return this;
    }
    
    /**
     * Time that this version was created.@OutputOnly
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public Version withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Email address of the user who created this version.@OutputOnly
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createdBy")
    public String createdBy;

    public Version withCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }
    
    /**
     * Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding StaticFilesHandler (https://cloud.google.com/appengine/docs/admin-api/reference/rest/v1/apps.services.versions#StaticFilesHandler) does not specify its own expiration time.Only returned in GET requests if view=FULL is set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultExpiration")
    public String defaultExpiration;

    public Version withDefaultExpiration(String defaultExpiration) {
        this.defaultExpiration = defaultExpiration;
        return this;
    }
    
    /**
     * Code and application artifacts used to deploy a version to App Engine.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deployment")
    public Deployment deployment;

    public Version withDeployment(Deployment deployment) {
        this.deployment = deployment;
        return this;
    }
    
    /**
     * Total size in bytes of all the files that are included in this version and currently hosted on the App Engine disk.@OutputOnly
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("diskUsageBytes")
    public String diskUsageBytes;

    public Version withDiskUsageBytes(String diskUsageBytes) {
        this.diskUsageBytes = diskUsageBytes;
        return this;
    }
    
    /**
     * Google Cloud Endpoints (https://cloud.google.com/endpoints) configuration. The Endpoints API Service provides tooling for serving Open API and gRPC endpoints via an NGINX proxy. Only valid for App Engine Flexible environment deployments.The fields here refer to the name and configuration ID of a "service" resource in the Service Management API (https://cloud.google.com/service-management/overview).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("endpointsApiService")
    public EndpointsApiService endpointsApiService;

    public Version withEndpointsApiService(EndpointsApiService endpointsApiService) {
        this.endpointsApiService = endpointsApiService;
        return this;
    }
    
    /**
     * The entrypoint for the application.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("entrypoint")
    public Entrypoint entrypoint;

    public Version withEntrypoint(Entrypoint entrypoint) {
        this.entrypoint = entrypoint;
        return this;
    }
    
    /**
     * App Engine execution environment for this version.Defaults to standard.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("env")
    public String env;

    public Version withEnv(String env) {
        this.env = env;
        return this;
    }
    
    /**
     * Environment variables available to the application.Only returned in GET requests if view=FULL is set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("envVariables")
    public java.util.Map<String, String> envVariables;

    public Version withEnvVariables(java.util.Map<String, String> envVariables) {
        this.envVariables = envVariables;
        return this;
    }
    
    /**
     * Custom static error pages. Limited to 10KB per page.Only returned in GET requests if view=FULL is set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("errorHandlers")
    public ErrorHandler[] errorHandlers;

    public Version withErrorHandlers(ErrorHandler[] errorHandlers) {
        this.errorHandlers = errorHandlers;
        return this;
    }
    
    /**
     * Runtime settings for the App Engine flexible environment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("flexibleRuntimeSettings")
    public FlexibleRuntimeSettings flexibleRuntimeSettings;

    public Version withFlexibleRuntimeSettings(FlexibleRuntimeSettings flexibleRuntimeSettings) {
        this.flexibleRuntimeSettings = flexibleRuntimeSettings;
        return this;
    }
    
    /**
     * An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the request and other request handlers are not attempted.Only returned in GET requests if view=FULL is set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("handlers")
    public UrlMap[] handlers;

    public Version withHandlers(UrlMap[] handlers) {
        this.handlers = handlers;
        return this;
    }
    
    /**
     * Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances. Only applicable for instances in App Engine flexible environment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("healthCheck")
    public HealthCheck healthCheck;

    public Version withHealthCheck(HealthCheck healthCheck) {
        this.healthCheck = healthCheck;
        return this;
    }
    
    /**
     * Relative name of the version within the service. Example: v1. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names: "default", "latest", and any name with the prefix "ah-".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Version withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Before an application can receive email or XMPP messages, the application must be configured to enable the service.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inboundServices")
    public VersionInboundServicesEnum[] inboundServices;

    public Version withInboundServices(VersionInboundServicesEnum[] inboundServices) {
        this.inboundServices = inboundServices;
        return this;
    }
    
    /**
     * Instance class that is used to run this version. Valid values are: AutomaticScaling: F1, F2, F4, F4_1G ManualScaling or BasicScaling: B1, B2, B4, B8, B4_1GDefaults to F1 for AutomaticScaling and B1 for ManualScaling or BasicScaling.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("instanceClass")
    public String instanceClass;

    public Version withInstanceClass(String instanceClass) {
        this.instanceClass = instanceClass;
        return this;
    }
    
    /**
     * Configuration for third-party Python runtime libraries that are required by the application.Only returned in GET requests if view=FULL is set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("libraries")
    public Library[] libraries;

    public Version withLibraries(Library[] libraries) {
        this.libraries = libraries;
        return this;
    }
    
    /**
     * Health checking configuration for VM instances. Unhealthy instances are killed and replaced with new instances.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("livenessCheck")
    public LivenessCheck livenessCheck;

    public Version withLivenessCheck(LivenessCheck livenessCheck) {
        this.livenessCheck = livenessCheck;
        return this;
    }
    
    /**
     * A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("manualScaling")
    public ManualScaling manualScaling;

    public Version withManualScaling(ManualScaling manualScaling) {
        this.manualScaling = manualScaling;
        return this;
    }
    
    /**
     * Full path to the Version resource in the API. Example: apps/myapp/services/default/versions/v1.@OutputOnly
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Version withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Extra network settings. Only applicable in the App Engine flexible environment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public Network network;

    public Version withNetwork(Network network) {
        this.network = network;
        return this;
    }
    
    /**
     * Files that match this pattern will not be built into this version. Only applicable for Go runtimes.Only returned in GET requests if view=FULL is set.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nobuildFilesRegex")
    public String nobuildFilesRegex;

    public Version withNobuildFilesRegex(String nobuildFilesRegex) {
        this.nobuildFilesRegex = nobuildFilesRegex;
        return this;
    }
    
    /**
     * Readiness checking configuration for VM instances. Unhealthy instances are removed from traffic rotation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("readinessCheck")
    public ReadinessCheck readinessCheck;

    public Version withReadinessCheck(ReadinessCheck readinessCheck) {
        this.readinessCheck = readinessCheck;
        return this;
    }
    
    /**
     * Machine resources for a version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resources")
    public Resources resources;

    public Version withResources(Resources resources) {
        this.resources = resources;
        return this;
    }
    
    /**
     * Desired runtime. Example: python27.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runtime")
    public String runtime;

    public Version withRuntime(String runtime) {
        this.runtime = runtime;
        return this;
    }
    
    /**
     * The version of the API in the given runtime environment. Please see the app.yaml reference for valid values at https://cloud.google.com/appengine/docs/standard//config/appref
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runtimeApiVersion")
    public String runtimeApiVersion;

    public Version withRuntimeApiVersion(String runtimeApiVersion) {
        this.runtimeApiVersion = runtimeApiVersion;
        return this;
    }
    
    /**
     * The channel of the runtime to use. Only available for some runtimes. Defaults to the default channel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runtimeChannel")
    public String runtimeChannel;

    public Version withRuntimeChannel(String runtimeChannel) {
        this.runtimeChannel = runtimeChannel;
        return this;
    }
    
    /**
     * The path or name of the app's main executable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("runtimeMainExecutablePath")
    public String runtimeMainExecutablePath;

    public Version withRuntimeMainExecutablePath(String runtimeMainExecutablePath) {
        this.runtimeMainExecutablePath = runtimeMainExecutablePath;
        return this;
    }
    
    /**
     * The identity that the deployed version will run as. Admin API will use the App Engine Appspot service account as default if this field is neither provided in app.yaml file nor through CLI flag.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccount")
    public String serviceAccount;

    public Version withServiceAccount(String serviceAccount) {
        this.serviceAccount = serviceAccount;
        return this;
    }
    
    /**
     * Current serving status of this version. Only the versions with a SERVING status create instances and can be billed.SERVING_STATUS_UNSPECIFIED is an invalid value. Defaults to SERVING.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("servingStatus")
    public VersionServingStatusEnum servingStatus;

    public Version withServingStatus(VersionServingStatusEnum servingStatus) {
        this.servingStatus = servingStatus;
        return this;
    }
    
    /**
     * Whether multiple requests can be dispatched to this version at once.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("threadsafe")
    public Boolean threadsafe;

    public Version withThreadsafe(Boolean threadsafe) {
        this.threadsafe = threadsafe;
        return this;
    }
    
    /**
     * Serving URL for this version. Example: "https://myversion-dot-myservice-dot-myapp.appspot.com"@OutputOnly
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("versionUrl")
    public String versionUrl;

    public Version withVersionUrl(String versionUrl) {
        this.versionUrl = versionUrl;
        return this;
    }
    
    /**
     * Whether to deploy this version in a container on a virtual machine.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vm")
    public Boolean vm;

    public Version withVm(Boolean vm) {
        this.vm = vm;
        return this;
    }
    
    /**
     * VPC access connector specification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vpcAccessConnector")
    public VpcAccessConnector vpcAccessConnector;

    public Version withVpcAccessConnector(VpcAccessConnector vpcAccessConnector) {
        this.vpcAccessConnector = vpcAccessConnector;
        return this;
    }
    
    /**
     * The Google Compute Engine zones that are supported by this version in the App Engine flexible environment. Deprecated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zones")
    public String[] zones;

    public Version withZones(String[] zones) {
        this.zones = zones;
        return this;
    }
    
    public Version(){}
}
