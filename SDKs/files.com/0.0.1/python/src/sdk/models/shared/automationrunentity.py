"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class AutomationRunEntityStatusEnum(str, Enum):
    r"""The success status of the AutomationRun. One of `running`, `success`, `partial_failure`, or `failure`."""
    RUNNING = 'running'
    SUCCESS = 'success'
    PARTIAL_FAILURE = 'partial_failure'
    FAILURE = 'failure'
    SKIPPED = 'skipped'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AutomationRunEntity:
    r"""List Automation Runs"""
    
    automation_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('automation_id'), 'exclude': lambda f: f is None }})
    r"""ID of the associated Automation."""  
    completed_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('completed_at'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Automation run completion/failure date/time."""  
    created_at: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created_at'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""Automation run start date/time."""  
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""ID."""  
    status: Optional[AutomationRunEntityStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The success status of the AutomationRun. One of `running`, `success`, `partial_failure`, or `failure`."""  
    status_messages_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status_messages_url'), 'exclude': lambda f: f is None }})
    r"""Link to status messages log file."""  
    