/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class PlaceOrder200ApplicationJSONTransactionDataMerchantTransactionsPayments {
    /**
     * Account ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public PlaceOrder200ApplicationJSONTransactionDataMerchantTransactionsPayments withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Payment bin.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bin")
    public String bin;
    public PlaceOrder200ApplicationJSONTransactionDataMerchantTransactionsPayments withBin(String bin) {
        this.bin = bin;
        return this;
    }
    
    /**
     * Gift card ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("giftCardId")
    public String giftCardId;
    public PlaceOrder200ApplicationJSONTransactionDataMerchantTransactionsPayments withGiftCardId(String giftCardId) {
        this.giftCardId = giftCardId;
        return this;
    }
    
    /**
     * Gift card provider.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("giftCardProvider")
    public String giftCardProvider;
    public PlaceOrder200ApplicationJSONTransactionDataMerchantTransactionsPayments withGiftCardProvider(String giftCardProvider) {
        this.giftCardProvider = giftCardProvider;
        return this;
    }
    
    /**
     * Gift card redemption code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("giftCardRedemptionCode")
    public String giftCardRedemptionCode;
    public PlaceOrder200ApplicationJSONTransactionDataMerchantTransactionsPayments withGiftCardRedemptionCode(String giftCardRedemptionCode) {
        this.giftCardRedemptionCode = giftCardRedemptionCode;
        return this;
    }
    
    /**
     * Payment system.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("paymentSystem")
    public String paymentSystem;
    public PlaceOrder200ApplicationJSONTransactionDataMerchantTransactionsPayments withPaymentSystem(String paymentSystem) {
        this.paymentSystem = paymentSystem;
        return this;
    }
    
    /**
     * Reference value over which interests may be applied.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("referenceValue")
    public Long referenceValue;
    public PlaceOrder200ApplicationJSONTransactionDataMerchantTransactionsPayments withReferenceValue(Long referenceValue) {
        this.referenceValue = referenceValue;
        return this;
    }
    
    /**
     * Token ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tokenId")
    public String tokenId;
    public PlaceOrder200ApplicationJSONTransactionDataMerchantTransactionsPayments withTokenId(String tokenId) {
        this.tokenId = tokenId;
        return this;
    }
    
    /**
     * Total value to be paid in this payment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public Long value;
    public PlaceOrder200ApplicationJSONTransactionDataMerchantTransactionsPayments withValue(Long value) {
        this.value = value;
        return this;
    }
    
}
