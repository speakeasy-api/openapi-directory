/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class PutApiV1ListsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  bearerAuth: string;
}

/**
 * Enumerable oneOf followed list none. Defaults to list.
 */
export enum PutApiV1ListsRequestBodyRepliesPolicyEnum {
  Followed = "followed",
  List = "list",
  None = "none",
}

export class PutApiV1ListsRequestBody extends SpeakeasyBase {
  /**
   * Enumerable oneOf followed list none. Defaults to list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "replies_policy" })
  repliesPolicy?: PutApiV1ListsRequestBodyRepliesPolicyEnum;

  /**
   * The title of the list to be created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "title" })
  title?: string;
}

export class PutApiV1ListsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Invalid or missing Authorization header
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * A list was updated successfully
   */
  @SpeakeasyMetadata()
  list?: shared.List;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
