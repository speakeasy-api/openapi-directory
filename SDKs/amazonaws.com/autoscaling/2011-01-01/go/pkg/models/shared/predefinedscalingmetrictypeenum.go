// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PredefinedScalingMetricTypeEnum string

const (
	PredefinedScalingMetricTypeEnumAsgAverageCPUUtilization PredefinedScalingMetricTypeEnum = "ASGAverageCPUUtilization"
	PredefinedScalingMetricTypeEnumAsgAverageNetworkIn      PredefinedScalingMetricTypeEnum = "ASGAverageNetworkIn"
	PredefinedScalingMetricTypeEnumAsgAverageNetworkOut     PredefinedScalingMetricTypeEnum = "ASGAverageNetworkOut"
	PredefinedScalingMetricTypeEnumAlbRequestCountPerTarget PredefinedScalingMetricTypeEnum = "ALBRequestCountPerTarget"
)

func (e PredefinedScalingMetricTypeEnum) ToPointer() *PredefinedScalingMetricTypeEnum {
	return &e
}

func (e *PredefinedScalingMetricTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ASGAverageCPUUtilization":
		fallthrough
	case "ASGAverageNetworkIn":
		fallthrough
	case "ASGAverageNetworkOut":
		fallthrough
	case "ALBRequestCountPerTarget":
		*e = PredefinedScalingMetricTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PredefinedScalingMetricTypeEnum: %v", v)
	}
}
