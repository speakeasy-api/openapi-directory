// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
)

// PostTaxationItemTypeTaxModeEnum - The tax mode of the invoice item, indicating whether the amount of the invoice item includes tax.
type PostTaxationItemTypeTaxModeEnum string

const (
	PostTaxationItemTypeTaxModeEnumTaxInclusive PostTaxationItemTypeTaxModeEnum = "TaxInclusive"
	PostTaxationItemTypeTaxModeEnumTaxExclusive PostTaxationItemTypeTaxModeEnum = "TaxExclusive"
)

func (e *PostTaxationItemTypeTaxModeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "TaxInclusive":
		fallthrough
	case "TaxExclusive":
		*e = PostTaxationItemTypeTaxModeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostTaxationItemTypeTaxModeEnum: %s", s)
	}
}

// PostTaxationItemTypeTaxRateTypeEnum - The type of the tax rate applied to the invoice item.
type PostTaxationItemTypeTaxRateTypeEnum string

const (
	PostTaxationItemTypeTaxRateTypeEnumPercentage PostTaxationItemTypeTaxRateTypeEnum = "Percentage"
	PostTaxationItemTypeTaxRateTypeEnumFlatFee    PostTaxationItemTypeTaxRateTypeEnum = "FlatFee"
)

func (e *PostTaxationItemTypeTaxRateTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Percentage":
		fallthrough
	case "FlatFee":
		*e = PostTaxationItemTypeTaxRateTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PostTaxationItemTypeTaxRateTypeEnum: %s", s)
	}
}

// PostTaxationItemType - Container for custom fields of a Taxation Item object.
type PostTaxationItemType struct {
	// The amount of taxes or VAT, for which your customer has an exemption.
	//
	ExemptAmount *string `json:"exemptAmount,omitempty"`
	// The jurisdiction that applies the tax or VAT. This value is typically a state, province, county, or city.
	//
	Jurisdiction *string `json:"jurisdiction,omitempty"`
	// The identifier for the location based on the value of the `taxCode` field.
	//
	LocationCode *string `json:"locationCode,omitempty"`
	// The name of taxation.
	//
	Name string `json:"name"`
	// The amount of the taxation item in the invoice item.
	//
	TaxAmount string `json:"taxAmount"`
	// The tax code identifies which tax rules and tax rates to apply to a specific invoice item.
	//
	TaxCode string `json:"taxCode"`
	// The description of the tax code.
	//
	TaxCodeDescription *string `json:"taxCodeDescription,omitempty"`
	// The date that the tax is applied to the invoice item, in `yyyy-mm-dd` format.
	//
	TaxDate types.Date `json:"taxDate"`
	// The tax mode of the invoice item, indicating whether the amount of the invoice item includes tax.
	//
	TaxMode PostTaxationItemTypeTaxModeEnum `json:"taxMode"`
	// The tax rate applied to the invoice item.
	//
	TaxRate string `json:"taxRate"`
	// The description of the tax rate.
	//
	TaxRateDescription *string `json:"taxRateDescription,omitempty"`
	// The type of the tax rate applied to the invoice item.
	//
	TaxRateType PostTaxationItemTypeTaxRateTypeEnum `json:"taxRateType"`
}
