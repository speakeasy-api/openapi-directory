/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateNotificationByIdUpdateNotificationByIdRequestBody {
    /**
     * Type of action be notified about. Notifications will only be sent for the given type of action. Valid choices are **upload**, **download**, **delete** or **all** (upload/download/delete)
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("action")
    public UpdateNotificationByIdUpdateNotificationByIdRequestBodyActionEnum action;
    public UpdateNotificationByIdUpdateNotificationByIdRequestBody withAction(UpdateNotificationByIdUpdateNotificationByIdRequestBodyActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * Custom message to insert into the notification emails, along with the matching activity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("message")
    public String message;
    public UpdateNotificationByIdUpdateNotificationByIdRequestBody withMessage(String message) {
        this.message = message;
        return this;
    }
    
    /**
     * Email addresses to send notification emails to. If empty, sends to the current user's email address.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recipients")
    public String[] recipients;
    public UpdateNotificationByIdUpdateNotificationByIdRequestBody withRecipients(String[] recipients) {
        this.recipients = recipients;
        return this;
    }
    
    /**
     * Whether an email should be sent to the recipients when matching activity happens.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sendEmail")
    public Boolean sendEmail;
    public UpdateNotificationByIdUpdateNotificationByIdRequestBody withSendEmail(Boolean sendEmail) {
        this.sendEmail = sendEmail;
        return this;
    }
    
    /**
     * Determines which users' actions should trigger the notification. 
     * 
     * Rather than listing  individual users, you can also use 3 special options:
     * 
     * - **notice\_user\_all** for activity by any user or share recipient
     * - **notice\_user\_all\_users** for activity only by user accounts
     * - **notice\_user\_all\_recipients** for activity only by share recipients
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usernames")
    public String[] usernames;
    public UpdateNotificationByIdUpdateNotificationByIdRequestBody withUsernames(String[] usernames) {
        this.usernames = usernames;
        return this;
    }
    
}
