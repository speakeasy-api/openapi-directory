"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import searchloyaltyrewardsrequestloyaltyrewardquery as shared_searchloyaltyrewardsrequestloyaltyrewardquery
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SearchLoyaltyRewardsRequest:
    r"""A request to search for loyalty rewards."""
    
    cursor: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cursor'), 'exclude': lambda f: f is None }})
    r"""A pagination cursor returned by a previous call to
    this endpoint. Provide this to retrieve the next set of 
    results for the original query.
    For more information, 
    see [Pagination](https://developer.squareup.com/docs/basics/api101/pagination).
    """  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('limit'), 'exclude': lambda f: f is None }})
    r"""The maximum number of results to return in the response."""  
    query: Optional[shared_searchloyaltyrewardsrequestloyaltyrewardquery.SearchLoyaltyRewardsRequestLoyaltyRewardQuery] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query'), 'exclude': lambda f: f is None }})
    r"""The set of search requirements."""  
    