// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GetBlockchainRequest struct {
	// Blockchain name
	Blockchain string `pathParam:"style=simple,explode=false,name=blockchain"`
}

type GetBlockchain200ApplicationJSONBackend struct {
	BestBlockHash   *string `json:"bestBlockHash,omitempty"`
	Blocks          *int64  `json:"blocks,omitempty"`
	Chain           *string `json:"chain,omitempty"`
	Difficulty      *string `json:"difficulty,omitempty"`
	Headers         *int64  `json:"headers,omitempty"`
	ProtocolVersion *string `json:"protocolVersion,omitempty"`
	SizeOnDisk      *int64  `json:"sizeOnDisk,omitempty"`
	Subversion      *string `json:"subversion,omitempty"`
	Version         *string `json:"version,omitempty"`
}

type GetBlockchain200ApplicationJSONBlockbook struct {
	About                   *string `json:"about,omitempty"`
	BestHeight              *int64  `json:"bestHeight,omitempty"`
	BuildTime               *string `json:"buildTime,omitempty"`
	Coin                    *string `json:"coin,omitempty"`
	CurrentFiatRatesTime    *string `json:"currentFiatRatesTime,omitempty"`
	DbSize                  *int64  `json:"dbSize,omitempty"`
	Decimals                *int64  `json:"decimals,omitempty"`
	GitCommit               *string `json:"gitCommit,omitempty"`
	HasFiatRates            *bool   `json:"hasFiatRates,omitempty"`
	HistoricalFiatRatesTime *string `json:"historicalFiatRatesTime,omitempty"`
	Host                    *string `json:"host,omitempty"`
	InSync                  *bool   `json:"inSync,omitempty"`
	InSyncMempool           *bool   `json:"inSyncMempool,omitempty"`
	InitialSync             *bool   `json:"initialSync,omitempty"`
	LastBlockTime           *string `json:"lastBlockTime,omitempty"`
	LastMempoolTime         *string `json:"lastMempoolTime,omitempty"`
	MempoolSize             *int64  `json:"mempoolSize,omitempty"`
	SyncMode                *bool   `json:"syncMode,omitempty"`
	Version                 *string `json:"version,omitempty"`
}

// GetBlockchain200ApplicationJSON - OK
type GetBlockchain200ApplicationJSON struct {
	Backend   *GetBlockchain200ApplicationJSONBackend   `json:"backend,omitempty"`
	Blockbook *GetBlockchain200ApplicationJSONBlockbook `json:"blockbook,omitempty"`
}

type GetBlockchainResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// OK
	GetBlockchain200ApplicationJSONObject *GetBlockchain200ApplicationJSON
}
