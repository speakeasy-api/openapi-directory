// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PublicKeyFormatEnum - Required. The format of the public key.
type PublicKeyFormatEnum string

const (
	PublicKeyFormatEnumKeyFormatUnspecified PublicKeyFormatEnum = "KEY_FORMAT_UNSPECIFIED"
	PublicKeyFormatEnumPem                  PublicKeyFormatEnum = "PEM"
)

func (e *PublicKeyFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "KEY_FORMAT_UNSPECIFIED":
		fallthrough
	case "PEM":
		*e = PublicKeyFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PublicKeyFormatEnum: %s", s)
	}
}

// PublicKey - A PublicKey describes a public key.
type PublicKey struct {
	// Required. The format of the public key.
	Format *PublicKeyFormatEnum `json:"format,omitempty"`
	// Required. A public key. The padding and encoding must match with the `KeyFormat` value specified for the `format` field.
	Key *string `json:"key,omitempty"`
}
