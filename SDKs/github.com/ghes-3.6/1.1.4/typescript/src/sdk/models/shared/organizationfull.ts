/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class OrganizationFullPlan extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "filled_seats" })
  filledSeats?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "private_repos" })
  privateRepos: number;

  @SpeakeasyMetadata()
  @Expose({ name: "seats" })
  seats?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "space" })
  space: number;
}

/**
 * Organization Full
 */
export class OrganizationFull extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "avatar_url" })
  avatarUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "billing_email" })
  billingEmail?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "blog" })
  blog?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "collaborators" })
  collaborators?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "company" })
  company?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "default_repository_permission" })
  defaultRepositoryPermission?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "disk_usage" })
  diskUsage?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "events_url" })
  eventsUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "followers" })
  followers: number;

  @SpeakeasyMetadata()
  @Expose({ name: "following" })
  following: number;

  @SpeakeasyMetadata()
  @Expose({ name: "has_organization_projects" })
  hasOrganizationProjects: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "has_repository_projects" })
  hasRepositoryProjects: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "hooks_url" })
  hooksUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "is_verified" })
  isVerified?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "issues_url" })
  issuesUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "location" })
  location?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "login" })
  login: string;

  @SpeakeasyMetadata()
  @Expose({ name: "members_allowed_repository_creation_type" })
  membersAllowedRepositoryCreationType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "members_can_create_internal_repositories" })
  membersCanCreateInternalRepositories?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "members_can_create_pages" })
  membersCanCreatePages?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "members_can_create_private_pages" })
  membersCanCreatePrivatePages?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "members_can_create_private_repositories" })
  membersCanCreatePrivateRepositories?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "members_can_create_public_pages" })
  membersCanCreatePublicPages?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "members_can_create_public_repositories" })
  membersCanCreatePublicRepositories?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "members_can_create_repositories" })
  membersCanCreateRepositories?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "members_can_fork_private_repositories" })
  membersCanForkPrivateRepositories?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "members_url" })
  membersUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "owned_private_repos" })
  ownedPrivateRepos?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "plan" })
  @Type(() => OrganizationFullPlan)
  plan?: OrganizationFullPlan;

  @SpeakeasyMetadata()
  @Expose({ name: "private_gists" })
  privateGists?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "public_gists" })
  publicGists: number;

  @SpeakeasyMetadata()
  @Expose({ name: "public_members_url" })
  publicMembersUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "public_repos" })
  publicRepos: number;

  @SpeakeasyMetadata()
  @Expose({ name: "repos_url" })
  reposUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "total_private_repos" })
  totalPrivateRepos?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "twitter_username" })
  twitterUsername?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "two_factor_requirement_enabled" })
  twoFactorRequirementEnabled?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;

  @SpeakeasyMetadata()
  @Expose({ name: "web_commit_signoff_required" })
  webCommitSignoffRequired?: boolean;
}
