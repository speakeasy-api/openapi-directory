/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class RegistrantInput {
    /**
     * Address of the registrant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public String address;

    public RegistrantInput withAddress(String address) {
        this.address = address;
        return this;
    }
    
    /**
     * City of the registrant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("city")
    public String city;

    public RegistrantInput withCity(String city) {
        this.city = city;
        return this;
    }
    
    /**
     * Company name of the registrant.&lt;br /&gt;
     * The registrant is a company if not empty, otherwise the registrant is an individual when validating extra fields.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("company_name")
    public String companyName;

    public RegistrantInput withCompanyName(String companyName) {
        this.companyName = companyName;
        return this;
    }
    
    /**
     * Country code of the registrant.
     * Syntax: 'BE', 'NL, 'FR', ...
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("country_code")
    public String countryCode;

    public RegistrantInput withCountryCode(String countryCode) {
        this.countryCode = countryCode;
        return this;
    }
    
    /**
     * Email of the registrant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;

    public RegistrantInput withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Enterprise number of the registrant.&lt;br /&gt;
     * Syntax: 'BE0123456789'
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enterprise_number")
    public String enterpriseNumber;

    public RegistrantInput withEnterpriseNumber(String enterpriseNumber) {
        this.enterpriseNumber = enterpriseNumber;
        return this;
    }
    
    /**
     * List of registrant extra fields for the domain name.
     * &lt;table&gt;&lt;tr&gt;&lt;th&gt;Extension&lt;/th&gt;&lt;th&gt;Registrant specifics&lt;/th&gt;&lt;th&gt;Required extra field(s)&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;.dk&lt;/td&gt;&lt;td&gt;is a company&lt;/td&gt;&lt;td&gt;CompanyNumber&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;.es&lt;/td&gt;&lt;td&gt;is a company&lt;/td&gt;&lt;td&gt;CompanyNumber&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;.es&lt;/td&gt;&lt;td&gt;is an individual&lt;/td&gt;&lt;td&gt;PassportNumber&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;.fr&lt;/td&gt;&lt;td&gt;is a company&lt;/td&gt;&lt;td&gt;CompanyNumber&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;.it&lt;/td&gt;&lt;td&gt;is an individual and has country code 'IT'&lt;/td&gt;&lt;td&gt;CodiceFiscal&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;.it&lt;/td&gt;&lt;td&gt;is an individual and has not country code 'IT'&lt;/td&gt;&lt;td&gt;PassportNumber&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;.nu&lt;/td&gt;&lt;td&gt;is a company&lt;/td&gt;&lt;td&gt;CompanyNumber&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;.nu&lt;/td&gt;&lt;td&gt;is an individual&lt;/td&gt;&lt;td&gt;PassportNumber&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;.se&lt;/td&gt;&lt;td&gt;is a company&lt;/td&gt;&lt;td&gt;CompanyNumber&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;.se&lt;/td&gt;&lt;td&gt;is an individual&lt;/td&gt;&lt;td&gt;PassportNumber&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("extra_fields")
    public ExtraField[] extraFields;

    public RegistrantInput withExtraFields(ExtraField[] extraFields) {
        this.extraFields = extraFields;
        return this;
    }
    
    /**
     * Fax of the registrant.
     * Syntax: '+32.123456789'
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fax")
    public String fax;

    public RegistrantInput withFax(String fax) {
        this.fax = fax;
        return this;
    }
    
    /**
     * First name of the registrant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("first_name")
    public String firstName;

    public RegistrantInput withFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }
    
    /**
     * Language code of the registrant.
     * Syntax: 'nl', 'fr', 'en', 'de', ...
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("language_code")
    public String languageCode;

    public RegistrantInput withLanguageCode(String languageCode) {
        this.languageCode = languageCode;
        return this;
    }
    
    /**
     * Last name of the registrant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("last_name")
    public String lastName;

    public RegistrantInput withLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }
    
    /**
     * Phone of the registrant.&lt;br /&gt;
     * Syntax: '+32.123456789'
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone")
    public String phone;

    public RegistrantInput withPhone(String phone) {
        this.phone = phone;
        return this;
    }
    
    /**
     * Postal code of the registrant.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("postal_code")
    public String postalCode;

    public RegistrantInput withPostalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }
    
    public RegistrantInput(){}
}
