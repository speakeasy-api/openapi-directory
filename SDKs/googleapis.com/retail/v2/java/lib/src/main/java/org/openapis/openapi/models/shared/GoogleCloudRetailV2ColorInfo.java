/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRetailV2ColorInfo - The color information of a Product.
 */
public class GoogleCloudRetailV2ColorInfo {
    /**
     * The standard color families. Strongly recommended to use the following standard color groups: "Red", "Pink", "Orange", "Yellow", "Purple", "Green", "Cyan", "Blue", "Brown", "White", "Gray", "Black" and "Mixed". Normally it is expected to have only 1 color family. May consider using single "Mixed" instead of multiple values. A maximum of 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("colorFamilies")
    public String[] colorFamilies;

    public GoogleCloudRetailV2ColorInfo withColorFamilies(String[] colorFamilies) {
        this.colorFamilies = colorFamilies;
        return this;
    }
    
    /**
     * The color display names, which may be different from standard color family names, such as the color aliases used in the website frontend. Normally it is expected to have only 1 color. May consider using single "Mixed" instead of multiple values. A maximum of 75 colors are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [color](https://support.google.com/merchants/answer/6324487). Schema.org property [Product.color](https://schema.org/color).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("colors")
    public String[] colors;

    public GoogleCloudRetailV2ColorInfo withColors(String[] colors) {
        this.colors = colors;
        return this;
    }
    
    public GoogleCloudRetailV2ColorInfo(){}
}
