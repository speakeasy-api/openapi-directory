"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional


@dataclasses.dataclass
class GetAPIV1DonationsCryptoCalculateSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    
class GetAPIV1DonationsCryptoCalculateCurrencyEnum(str, Enum):
    r"""The currency of the transaction."""
    ETH = 'eth'
    BTC = 'btc'


@dataclasses.dataclass
class GetAPIV1DonationsCryptoCalculateRequest:
    
    currency: GetAPIV1DonationsCryptoCalculateCurrencyEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'currency', 'style': 'form', 'explode': True }})
    r"""The currency of the transaction."""  
    count: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'count', 'style': 'form', 'explode': True }})
    r"""The number of transactions to offset."""  
    

@dataclasses.dataclass
class GetAPIV1DonationsCryptoCalculateResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    