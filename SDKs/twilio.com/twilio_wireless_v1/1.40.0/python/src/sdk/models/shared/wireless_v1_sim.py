"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import sim_enum_reset_status_enum as shared_sim_enum_reset_status_enum
from ..shared import sim_enum_status_enum as shared_sim_enum_status_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Any, Optional

class WirelessV1SimCommandsCallbackMethodEnum(str, Enum):
    r"""The HTTP method we use to call `commands_callback_url`.  Can be: `POST` or `GET`. Default is `POST`."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'

class WirelessV1SimSmsFallbackMethodEnum(str, Enum):
    r"""Deprecated."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'

class WirelessV1SimSmsMethodEnum(str, Enum):
    r"""Deprecated."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'

class WirelessV1SimVoiceFallbackMethodEnum(str, Enum):
    r"""Deprecated. The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`. Default is `POST`."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'

class WirelessV1SimVoiceMethodEnum(str, Enum):
    r"""Deprecated. The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`. Default is `POST`."""
    HEAD = 'HEAD'
    GET = 'GET'
    POST = 'POST'
    PATCH = 'PATCH'
    PUT = 'PUT'
    DELETE = 'DELETE'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WirelessV1Sim:
    r"""OK"""
    
    account_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the [Account](https://www.twilio.com/docs/iam/api/account) to which the Sim resource belongs."""  
    commands_callback_method: Optional[WirelessV1SimCommandsCallbackMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commands_callback_method'), 'exclude': lambda f: f is None }})
    r"""The HTTP method we use to call `commands_callback_url`.  Can be: `POST` or `GET`. Default is `POST`."""  
    commands_callback_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commands_callback_url'), 'exclude': lambda f: f is None }})
    r"""The URL we call using the `commands_callback_method` when the SIM originates a machine-to-machine [Command](https://www.twilio.com/docs/wireless/api/command-resource). Your server should respond with an HTTP status code in the 200 range; any response body will be ignored."""  
    date_created: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_created'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date and time in GMT when the resource was created specified in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format."""  
    date_updated: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('date_updated'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date and time in GMT when the Sim resource was last updated specified in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format."""  
    e_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('e_id'), 'exclude': lambda f: f is None }})
    r"""Deprecated."""  
    friendly_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('friendly_name'), 'exclude': lambda f: f is None }})
    r"""The string that you assigned to describe the Sim resource."""  
    iccid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('iccid'), 'exclude': lambda f: f is None }})
    r"""The [ICCID](https://en.wikipedia.org/wiki/SIM_card#ICCID) associated with the SIM."""  
    ip_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ip_address'), 'exclude': lambda f: f is None }})
    r"""Deprecated."""  
    links: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('links'), 'exclude': lambda f: f is None }})
    r"""The URLs of related subresources."""  
    rate_plan_sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('rate_plan_sid'), 'exclude': lambda f: f is None }})
    r"""The SID of the [RatePlan resource](https://www.twilio.com/docs/wireless/api/rateplan-resource) to which the Sim resource is assigned."""  
    reset_status: Optional[shared_sim_enum_reset_status_enum.SimEnumResetStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reset_status'), 'exclude': lambda f: f is None }})  
    sid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sid'), 'exclude': lambda f: f is None }})
    r"""The unique string that we created to identify the Sim resource."""  
    sms_fallback_method: Optional[WirelessV1SimSmsFallbackMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sms_fallback_method'), 'exclude': lambda f: f is None }})
    r"""Deprecated."""  
    sms_fallback_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sms_fallback_url'), 'exclude': lambda f: f is None }})
    r"""Deprecated."""  
    sms_method: Optional[WirelessV1SimSmsMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sms_method'), 'exclude': lambda f: f is None }})
    r"""Deprecated."""  
    sms_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sms_url'), 'exclude': lambda f: f is None }})
    r"""Deprecated."""  
    status: Optional[shared_sim_enum_status_enum.SimEnumStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    unique_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('unique_name'), 'exclude': lambda f: f is None }})
    r"""An application-defined string that uniquely identifies the resource. It can be used in place of the resource's `sid` in the URL to address the resource."""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""The absolute URL of the resource."""  
    voice_fallback_method: Optional[WirelessV1SimVoiceFallbackMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voice_fallback_method'), 'exclude': lambda f: f is None }})
    r"""Deprecated. The HTTP method we use to call `voice_fallback_url`. Can be: `GET` or `POST`. Default is `POST`."""  
    voice_fallback_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voice_fallback_url'), 'exclude': lambda f: f is None }})
    r"""Deprecated. The URL we call using the `voice_fallback_method` when an error occurs while retrieving or executing the TwiML requested from `voice_url`."""  
    voice_method: Optional[WirelessV1SimVoiceMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voice_method'), 'exclude': lambda f: f is None }})
    r"""Deprecated. The HTTP method we use to call `voice_url`. Can be: `GET` or `POST`. Default is `POST`."""  
    voice_url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('voice_url'), 'exclude': lambda f: f is None }})
    r"""Deprecated. The URL we call using the `voice_method` when the SIM-connected device makes a voice call."""  
    