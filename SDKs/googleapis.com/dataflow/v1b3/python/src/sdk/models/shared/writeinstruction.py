"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import instructioninput as shared_instructioninput
from ..shared import sink as shared_sink
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class WriteInstruction:
    r"""An instruction that writes records. Takes one input, produces no outputs."""
    
    input: Optional[shared_instructioninput.InstructionInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('input'), 'exclude': lambda f: f is None }})
    r"""An input of an instruction, as a reference to an output of a producer instruction."""  
    sink: Optional[shared_sink.Sink] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sink'), 'exclude': lambda f: f is None }})
    r"""A sink that records can be encoded and written to."""  
    