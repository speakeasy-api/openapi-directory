"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TextStyleSuggestionState:
    r"""A mask that indicates which of the fields on the base TextStyle have been changed in this suggestion. For any field set to true, there's a new suggested value."""
    
    background_color_suggested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('backgroundColorSuggested'), 'exclude': lambda f: f is None }})
    r"""Indicates if there was a suggested change to background_color."""  
    baseline_offset_suggested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('baselineOffsetSuggested'), 'exclude': lambda f: f is None }})
    r"""Indicates if there was a suggested change to baseline_offset."""  
    bold_suggested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('boldSuggested'), 'exclude': lambda f: f is None }})
    r"""Indicates if there was a suggested change to bold."""  
    font_size_suggested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fontSizeSuggested'), 'exclude': lambda f: f is None }})
    r"""Indicates if there was a suggested change to font_size."""  
    foreground_color_suggested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('foregroundColorSuggested'), 'exclude': lambda f: f is None }})
    r"""Indicates if there was a suggested change to foreground_color."""  
    italic_suggested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('italicSuggested'), 'exclude': lambda f: f is None }})
    r"""Indicates if there was a suggested change to italic."""  
    link_suggested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('linkSuggested'), 'exclude': lambda f: f is None }})
    r"""Indicates if there was a suggested change to link."""  
    small_caps_suggested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('smallCapsSuggested'), 'exclude': lambda f: f is None }})
    r"""Indicates if there was a suggested change to small_caps."""  
    strikethrough_suggested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('strikethroughSuggested'), 'exclude': lambda f: f is None }})
    r"""Indicates if there was a suggested change to strikethrough."""  
    underline_suggested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('underlineSuggested'), 'exclude': lambda f: f is None }})
    r"""Indicates if there was a suggested change to underline."""  
    weighted_font_family_suggested: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weightedFontFamilySuggested'), 'exclude': lambda f: f is None }})
    r"""Indicates if there was a suggested change to weighted_font_family."""  
    