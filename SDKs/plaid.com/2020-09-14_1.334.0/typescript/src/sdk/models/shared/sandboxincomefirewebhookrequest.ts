/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * `VERIFICATION_STATUS_PROCESSING_COMPLETE`: The income verification status processing has completed. If the user uploaded multiple documents, this webhook will fire when all documents have finished processing. Call the `/income/verification/paystubs/get` endpoint and check the document metadata to see which documents were successfully parsed.
 *
 * @remarks
 *
 * `VERIFICATION_STATUS_PROCESSING_FAILED`: A failure occurred when attempting to process the verification documentation.
 *
 * `VERIFICATION_STATUS_PENDING_APPROVAL`: (deprecated) The income verification has been sent to the user for review.
 */
export enum SandboxIncomeFireWebhookRequestVerificationStatusEnum {
  VerificationStatusProcessingComplete = "VERIFICATION_STATUS_PROCESSING_COMPLETE",
  VerificationStatusProcessingFailed = "VERIFICATION_STATUS_PROCESSING_FAILED",
  VerificationStatusPendingApproval = "VERIFICATION_STATUS_PENDING_APPROVAL",
}

/**
 * SandboxIncomeFireWebhookRequest defines the request schema for `/sandbox/income/fire_webhook`
 */
export class SandboxIncomeFireWebhookRequest extends SpeakeasyBase {
  /**
   * Your Plaid API `client_id`. The `client_id` is required and may be provided either in the `PLAID-CLIENT-ID` header or as part of a request body.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "client_id" })
  clientId?: string;

  /**
   * The Item ID associated with the verification.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "item_id" })
  itemId: string;

  /**
   * Your Plaid API `secret`. The `secret` is required and may be provided either in the `PLAID-SECRET` header or as part of a request body.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "secret" })
  secret?: string;

  /**
   * The Plaid `user_id` of the User associated with this webhook, warning, or error.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId?: string;

  /**
   * `VERIFICATION_STATUS_PROCESSING_COMPLETE`: The income verification status processing has completed. If the user uploaded multiple documents, this webhook will fire when all documents have finished processing. Call the `/income/verification/paystubs/get` endpoint and check the document metadata to see which documents were successfully parsed.
   *
   * @remarks
   *
   * `VERIFICATION_STATUS_PROCESSING_FAILED`: A failure occurred when attempting to process the verification documentation.
   *
   * `VERIFICATION_STATUS_PENDING_APPROVAL`: (deprecated) The income verification has been sent to the user for review.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "verification_status" })
  verificationStatus: SandboxIncomeFireWebhookRequestVerificationStatusEnum;

  /**
   * The URL to which the webhook should be sent.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "webhook" })
  webhook: string;
}
