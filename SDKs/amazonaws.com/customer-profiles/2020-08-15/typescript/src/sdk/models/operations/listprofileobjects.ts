/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The filter applied to ListProfileObjects response to include profile objects with the specified index values. This filter is only supported for ObjectTypeName _asset, _case and _order.
 */
export class ListProfileObjectsRequestBodyObjectFilter extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "KeyName" })
  keyName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Values" })
  values?: string[];
}

export class ListProfileObjectsRequestBody extends SpeakeasyBase {
  /**
   * The filter applied to ListProfileObjects response to include profile objects with the specified index values. This filter is only supported for ObjectTypeName _asset, _case and _order.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ObjectFilter" })
  @Type(() => ListProfileObjectsRequestBodyObjectFilter)
  objectFilter?: ListProfileObjectsRequestBodyObjectFilter;

  /**
   * The name of the profile object type.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ObjectTypeName" })
  objectTypeName: string;

  /**
   * The unique identifier of a customer profile.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "ProfileId" })
  profileId: string;
}

export class ListProfileObjectsRequest extends SpeakeasyBase {
  /**
   * The unique name of the domain.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=DomainName",
  })
  domainName: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ListProfileObjectsRequestBody;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;

  /**
   * The maximum number of objects returned per page.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=max-results",
  })
  maxResults?: number;

  /**
   * The pagination token from the previous call to ListProfileObjects.
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=next-token",
  })
  nextToken?: string;
}

export class ListProfileObjectsResponse extends SpeakeasyBase {
  /**
   * AccessDeniedException
   */
  @SpeakeasyMetadata()
  accessDeniedException?: any;

  /**
   * BadRequestException
   */
  @SpeakeasyMetadata()
  badRequestException?: any;

  @SpeakeasyMetadata()
  contentType: string;

  /**
   * InternalServerException
   */
  @SpeakeasyMetadata()
  internalServerException?: any;

  /**
   * Success
   */
  @SpeakeasyMetadata()
  listProfileObjectsResponse?: shared.ListProfileObjectsResponse;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * ResourceNotFoundException
   */
  @SpeakeasyMetadata()
  resourceNotFoundException?: any;

  /**
   * ThrottlingException
   */
  @SpeakeasyMetadata()
  throttlingException?: any;
}
