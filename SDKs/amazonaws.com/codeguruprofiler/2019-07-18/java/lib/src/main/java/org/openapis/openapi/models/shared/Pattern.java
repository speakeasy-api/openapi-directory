/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Pattern -  A set of rules used to make a recommendation during an analysis. 
 */
public class Pattern {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("countersToAggregate")
    public String[] countersToAggregate;

    public Pattern withCountersToAggregate(String[] countersToAggregate) {
        this.countersToAggregate = countersToAggregate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Pattern withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public Pattern withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public Pattern withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resolutionSteps")
    public String resolutionSteps;

    public Pattern withResolutionSteps(String resolutionSteps) {
        this.resolutionSteps = resolutionSteps;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetFrames")
    public String[][] targetFrames;

    public Pattern withTargetFrames(String[][] targetFrames) {
        this.targetFrames = targetFrames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("thresholdPercent")
    public Double thresholdPercent;

    public Pattern withThresholdPercent(Double thresholdPercent) {
        this.thresholdPercent = thresholdPercent;
        return this;
    }
    
    public Pattern(){}
}
