// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// ActionARealTimeDecisionParametersCardAuthorizationDecisionEnum - Whether the card authorization should be approved or declined.
type ActionARealTimeDecisionParametersCardAuthorizationDecisionEnum string

const (
	ActionARealTimeDecisionParametersCardAuthorizationDecisionEnumApprove ActionARealTimeDecisionParametersCardAuthorizationDecisionEnum = "approve"
	ActionARealTimeDecisionParametersCardAuthorizationDecisionEnumDecline ActionARealTimeDecisionParametersCardAuthorizationDecisionEnum = "decline"
)

func (e ActionARealTimeDecisionParametersCardAuthorizationDecisionEnum) ToPointer() *ActionARealTimeDecisionParametersCardAuthorizationDecisionEnum {
	return &e
}

func (e *ActionARealTimeDecisionParametersCardAuthorizationDecisionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "approve":
		fallthrough
	case "decline":
		*e = ActionARealTimeDecisionParametersCardAuthorizationDecisionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionParametersCardAuthorizationDecisionEnum: %v", v)
	}
}

// ActionARealTimeDecisionParametersCardAuthorization - If the Real-Time Decision relates to a card authorization attempt, this object contains your response to the authorization.
type ActionARealTimeDecisionParametersCardAuthorization struct {
	// Whether the card authorization should be approved or declined.
	Decision ActionARealTimeDecisionParametersCardAuthorizationDecisionEnum `json:"decision"`
}

// ActionARealTimeDecisionParametersDigitalWalletAuthenticationResultEnum - Whether your application was able to deliver the one-time passcode.
type ActionARealTimeDecisionParametersDigitalWalletAuthenticationResultEnum string

const (
	ActionARealTimeDecisionParametersDigitalWalletAuthenticationResultEnumSuccess ActionARealTimeDecisionParametersDigitalWalletAuthenticationResultEnum = "success"
	ActionARealTimeDecisionParametersDigitalWalletAuthenticationResultEnumFailure ActionARealTimeDecisionParametersDigitalWalletAuthenticationResultEnum = "failure"
)

func (e ActionARealTimeDecisionParametersDigitalWalletAuthenticationResultEnum) ToPointer() *ActionARealTimeDecisionParametersDigitalWalletAuthenticationResultEnum {
	return &e
}

func (e *ActionARealTimeDecisionParametersDigitalWalletAuthenticationResultEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "failure":
		*e = ActionARealTimeDecisionParametersDigitalWalletAuthenticationResultEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ActionARealTimeDecisionParametersDigitalWalletAuthenticationResultEnum: %v", v)
	}
}

// ActionARealTimeDecisionParametersDigitalWalletAuthentication - If the Real-Time Decision relates to a digital wallet authentication attempt, this object contains your response to the authentication.
type ActionARealTimeDecisionParametersDigitalWalletAuthentication struct {
	// Whether your application was able to deliver the one-time passcode.
	Result ActionARealTimeDecisionParametersDigitalWalletAuthenticationResultEnum `json:"result"`
}

// ActionARealTimeDecisionParametersDigitalWalletTokenApproval - If your application approves the provisioning attempt, this contains metadata about the digital wallet token that will be generated.
type ActionARealTimeDecisionParametersDigitalWalletTokenApproval struct {
	// The identifier of the Card Profile to assign to the Digital Wallet token.
	CardProfileID string `json:"card_profile_id"`
	// An email address that can be used to verify the cardholder via one-time passcode.
	Email *string `json:"email,omitempty"`
	// A phone number that can be used to verify the cardholder via one-time passcode over SMS.
	Phone *string `json:"phone,omitempty"`
}

// ActionARealTimeDecisionParametersDigitalWalletTokenDecline - If your application declines the provisioning attempt, this contains details about the decline.
type ActionARealTimeDecisionParametersDigitalWalletTokenDecline struct {
	// Why the tokenization attempt was declined. This is for logging purposes only and is not displayed to the end-user.
	Reason *string `json:"reason,omitempty"`
}

// ActionARealTimeDecisionParametersDigitalWalletToken - If the Real-Time Decision relates to a digital wallet token provisioning attempt, this object contains your response to the attempt.
type ActionARealTimeDecisionParametersDigitalWalletToken struct {
	// If your application approves the provisioning attempt, this contains metadata about the digital wallet token that will be generated.
	Approval *ActionARealTimeDecisionParametersDigitalWalletTokenApproval `json:"approval,omitempty"`
	// If your application declines the provisioning attempt, this contains details about the decline.
	Decline *ActionARealTimeDecisionParametersDigitalWalletTokenDecline `json:"decline,omitempty"`
}

type ActionARealTimeDecisionParameters struct {
	// If the Real-Time Decision relates to a card authorization attempt, this object contains your response to the authorization.
	CardAuthorization *ActionARealTimeDecisionParametersCardAuthorization `json:"card_authorization,omitempty"`
	// If the Real-Time Decision relates to a digital wallet authentication attempt, this object contains your response to the authentication.
	DigitalWalletAuthentication *ActionARealTimeDecisionParametersDigitalWalletAuthentication `json:"digital_wallet_authentication,omitempty"`
	// If the Real-Time Decision relates to a digital wallet token provisioning attempt, this object contains your response to the attempt.
	DigitalWalletToken *ActionARealTimeDecisionParametersDigitalWalletToken `json:"digital_wallet_token,omitempty"`
}
