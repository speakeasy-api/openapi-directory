// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type GetSpacesSpaceIDFoldersIDMessagesMessageIDRequest struct {
	// Id of the folder
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Id of the mesage
	MessageID string `pathParam:"style=simple,explode=false,name=messageId"`
	// Id of the space
	SpaceID string `pathParam:"style=simple,explode=false,name=spaceId"`
}

type GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSONLevelEnum string

const (
	GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSONLevelEnumConfidential GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSONLevelEnum = "confidential"
	GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSONLevelEnumRegular      GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSONLevelEnum = "regular"
)

func (e GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSONLevelEnum) ToPointer() *GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSONLevelEnum {
	return &e
}

func (e *GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSONLevelEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "confidential":
		fallthrough
	case "regular":
		*e = GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSONLevelEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSONLevelEnum: %v", v)
	}
}

// GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSON - A message
type GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSON struct {
	Author             *string                                                                `json:"Author,omitempty"`
	ID                 *string                                                                `json:"Id,omitempty"`
	Level              *GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSONLevelEnum `json:"Level,omitempty"`
	MessageDate        *string                                                                `json:"MessageDate,omitempty"`
	ModificationAuthor *string                                                                `json:"ModificationAuthor,omitempty"`
	ModificationDate   *string                                                                `json:"ModificationDate,omitempty"`
	Text               *string                                                                `json:"Text,omitempty"`
}

type GetSpacesSpaceIDFoldersIDMessagesMessageIDResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// A message
	GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSONObject *GetSpacesSpaceIDFoldersIDMessagesMessageID200ApplicationJSON
}
