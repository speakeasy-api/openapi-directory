"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GetTermsOfServiceDocumentResponseTypeEnum(str, Enum):
    r"""The type of Terms of Service."""
    ADYEN_ACCOUNT = 'adyenAccount'
    ADYEN_CAPITAL = 'adyenCapital'
    ADYEN_CARD = 'adyenCard'
    ADYEN_FOR_PLATFORMS_ADVANCED = 'adyenForPlatformsAdvanced'
    ADYEN_FOR_PLATFORMS_MANAGE = 'adyenForPlatformsManage'
    ADYEN_FRANCHISEE = 'adyenFranchisee'
    ADYEN_ISSUING = 'adyenIssuing'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetTermsOfServiceDocumentResponse:
    r"""OK - the request has succeeded."""
    
    document: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('document'), 'exclude': lambda f: f is None }})
    r"""The Terms of Service document in Base64-encoded format."""  
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the legal entity."""  
    language: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('language'), 'exclude': lambda f: f is None }})
    r"""The language used for the Terms of Service document, specified by the two letter [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) language code. For example, **nl** for Dutch."""  
    terms_of_service_document_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('termsOfServiceDocumentId'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of the Terms of Service document."""  
    type: Optional[GetTermsOfServiceDocumentResponseTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""The type of Terms of Service."""  
    