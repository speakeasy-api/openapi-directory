/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Building - Public API: Resources.buildings
 */
public class Building {
    /**
     * Public API: Resources.buildings
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("address")
    public BuildingAddress address;

    public Building withAddress(BuildingAddress address) {
        this.address = address;
        return this;
    }
    
    /**
     * Unique identifier for the building. The maximum length is 100 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buildingId")
    public String buildingId;

    public Building withBuildingId(String buildingId) {
        this.buildingId = buildingId;
        return this;
    }
    
    /**
     * The building name as seen by users in Calendar. Must be unique for the customer. For example, "NYC-CHEL". The maximum length is 100 characters.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buildingName")
    public String buildingName;

    public Building withBuildingName(String buildingName) {
        this.buildingName = buildingName;
        return this;
    }
    
    /**
     * Public API: Resources.buildings
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("coordinates")
    public BuildingCoordinates coordinates;

    public Building withCoordinates(BuildingCoordinates coordinates) {
        this.coordinates = coordinates;
        return this;
    }
    
    /**
     * A brief description of the building. For example, "Chelsea Market".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public Building withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * ETag of the resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etags")
    public String etags;

    public Building withEtags(String etags) {
        this.etags = etags;
        return this;
    }
    
    /**
     * The display names for all floors in this building. The floors are expected to be sorted in ascending order, from lowest floor to highest floor. For example, ["B2", "B1", "L", "1", "2", "2M", "3", "PH"] Must contain at least one entry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("floorNames")
    public String[] floorNames;

    public Building withFloorNames(String[] floorNames) {
        this.floorNames = floorNames;
        return this;
    }
    
    /**
     * Kind of resource this is.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public Building withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    public Building(){}
}
