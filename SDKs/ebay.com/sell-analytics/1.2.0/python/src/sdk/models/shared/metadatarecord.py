"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import value as shared_value
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MetadataRecord:
    r"""A complex type that defines the data records returned in the report."""
    
    metadata_values: Optional[list[shared_value.Value]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metadataValues'), 'exclude': lambda f: f is None }})
    r"""A list of data in a row returned in the traffic report. The data in each of the cells match the labels in headers of the report."""  
    value: Optional[shared_value.Value] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('value'), 'exclude': lambda f: f is None }})
    r"""A complex type that contains a value, plus the veracity of that value."""  
    