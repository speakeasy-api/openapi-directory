// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type EmailTypeEnum string

const (
	EmailTypeEnumPrimary   EmailTypeEnum = "primary"
	EmailTypeEnumSecondary EmailTypeEnum = "secondary"
	EmailTypeEnumWork      EmailTypeEnum = "work"
	EmailTypeEnumPersonal  EmailTypeEnum = "personal"
	EmailTypeEnumBilling   EmailTypeEnum = "billing"
	EmailTypeEnumOther     EmailTypeEnum = "other"
)

func (e *EmailTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "primary":
		fallthrough
	case "secondary":
		fallthrough
	case "work":
		fallthrough
	case "personal":
		fallthrough
	case "billing":
		fallthrough
	case "other":
		*e = EmailTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EmailTypeEnum: %s", s)
	}
}

type Email struct {
	Email string         `json:"email"`
	ID    *string        `json:"id,omitempty"`
	Type  *EmailTypeEnum `json:"type,omitempty"`
}
