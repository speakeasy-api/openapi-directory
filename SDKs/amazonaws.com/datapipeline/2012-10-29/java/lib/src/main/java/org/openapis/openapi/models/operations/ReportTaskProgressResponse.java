/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class ReportTaskProgressResponse {
    
    public String contentType;
    public ReportTaskProgressResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * InternalServiceError
     */
    
    public Object internalServiceError;
    public ReportTaskProgressResponse withInternalServiceError(Object internalServiceError) {
        this.internalServiceError = internalServiceError;
        return this;
    }
    
    /**
     * InvalidRequestException
     */
    
    public Object invalidRequestException;
    public ReportTaskProgressResponse withInvalidRequestException(Object invalidRequestException) {
        this.invalidRequestException = invalidRequestException;
        return this;
    }
    
    /**
     * PipelineDeletedException
     */
    
    public Object pipelineDeletedException;
    public ReportTaskProgressResponse withPipelineDeletedException(Object pipelineDeletedException) {
        this.pipelineDeletedException = pipelineDeletedException;
        return this;
    }
    
    /**
     * PipelineNotFoundException
     */
    
    public Object pipelineNotFoundException;
    public ReportTaskProgressResponse withPipelineNotFoundException(Object pipelineNotFoundException) {
        this.pipelineNotFoundException = pipelineNotFoundException;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.ReportTaskProgressOutput reportTaskProgressOutput;
    public ReportTaskProgressResponse withReportTaskProgressOutput(org.openapis.openapi.models.shared.ReportTaskProgressOutput reportTaskProgressOutput) {
        this.reportTaskProgressOutput = reportTaskProgressOutput;
        return this;
    }
    
    
    public Integer statusCode;
    public ReportTaskProgressResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public ReportTaskProgressResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * TaskNotFoundException
     */
    
    public Object taskNotFoundException;
    public ReportTaskProgressResponse withTaskNotFoundException(Object taskNotFoundException) {
        this.taskNotFoundException = taskNotFoundException;
        return this;
    }
    
}
