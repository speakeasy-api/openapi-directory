/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleAppsCardV1TextInput - A field in which users can enter text. Supports suggestions and on-change actions. Chat apps receive and can process the value of entered text during form input events. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/how-tos/dialogs#receive_form_data_from_dialogs). When you need to collect abstract data from users, use a text input. To collect defined data from users, use the selection input widget instead.
 */
public class GoogleAppsCardV1TextInput {
    /**
     * An action that describes the behavior when the form is submitted. For example, an Apps Script can be invoked to handle the form. If the action is triggered, the form values are sent to the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoCompleteAction")
    public GoogleAppsCardV1Action autoCompleteAction;
    public GoogleAppsCardV1TextInput withAutoCompleteAction(GoogleAppsCardV1Action autoCompleteAction) {
        this.autoCompleteAction = autoCompleteAction;
        return this;
    }
    
    /**
     * Text that appears below the text input field meant to assist users by prompting them to enter a certain value. This text is always visible. Required if `label` is unspecified. Otherwise, optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hintText")
    public String hintText;
    public GoogleAppsCardV1TextInput withHintText(String hintText) {
        this.hintText = hintText;
        return this;
    }
    
    /**
     * Suggested values that users can enter. These values appear when users click inside the text input field. As users type, the suggested values dynamically filter to match what the users have typed. For example, a text input field for programming language might suggest Java, JavaScript, Python, and C++. When users start typing "Jav", the list of suggestions filters to show just Java and JavaScript. Suggested values help guide users to enter values that your app can make sense of. When referring to JavaScript, some users might enter "javascript" and others "java script". Suggesting "JavaScript" can standardize how users interact with your app. When specified, `TextInput.type` is always `SINGLE_LINE`, even if it is set to `MULTIPLE_LINE`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("initialSuggestions")
    public GoogleAppsCardV1Suggestions initialSuggestions;
    public GoogleAppsCardV1TextInput withInitialSuggestions(GoogleAppsCardV1Suggestions initialSuggestions) {
        this.initialSuggestions = initialSuggestions;
        return this;
    }
    
    /**
     * The text that appears above the text input field in the user interface. Specify text that helps the user enter the information your app needs. For example, if you are asking someone's name, but specifically need their surname, write "surname" instead of "name". Required if `hintText` is unspecified. Otherwise, optional.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    public String label;
    public GoogleAppsCardV1TextInput withLabel(String label) {
        this.label = label;
        return this;
    }
    
    /**
     * The name by which the text input is identified in a form input event. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/how-tos/dialogs#receive_form_data_from_dialogs).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public GoogleAppsCardV1TextInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * An action that describes the behavior when the form is submitted. For example, an Apps Script can be invoked to handle the form. If the action is triggered, the form values are sent to the server.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("onChangeAction")
    public GoogleAppsCardV1Action onChangeAction;
    public GoogleAppsCardV1TextInput withOnChangeAction(GoogleAppsCardV1Action onChangeAction) {
        this.onChangeAction = onChangeAction;
        return this;
    }
    
    /**
     * How a text input field appears in the user interface. For example, whether the field is single or multi-line.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public GoogleAppsCardV1TextInputTypeEnum type;
    public GoogleAppsCardV1TextInput withType(GoogleAppsCardV1TextInputTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The value entered by a user, returned as part of a form input event. For details about working with form inputs, see [Receive form data](https://developers.google.com/chat/how-tos/dialogs#receive_form_data_from_dialogs).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("value")
    public String value;
    public GoogleAppsCardV1TextInput withValue(String value) {
        this.value = value;
        return this;
    }
    
}
