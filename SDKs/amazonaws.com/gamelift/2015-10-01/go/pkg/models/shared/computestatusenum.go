// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ComputeStatusEnum string

const (
	ComputeStatusEnumPending     ComputeStatusEnum = "PENDING"
	ComputeStatusEnumActive      ComputeStatusEnum = "ACTIVE"
	ComputeStatusEnumTerminating ComputeStatusEnum = "TERMINATING"
)

func (e ComputeStatusEnum) ToPointer() *ComputeStatusEnum {
	return &e
}

func (e *ComputeStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PENDING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "TERMINATING":
		*e = ComputeStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ComputeStatusEnum: %v", v)
	}
}
