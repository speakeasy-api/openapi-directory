/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The status of the attachment. For example : ACTIVE, DELETED
 */
export enum ScoutingObservationAttachmentStatusEnum {
  Active = "ACTIVE",
  Deleted = "DELETED",
}

export class ScoutingObservationAttachment extends SpeakeasyBase {
  /**
   * The content type of the attachment, e.g. image/png.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "contentType" })
  contentType: string;

  /**
   * id of the attachment
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The number of bytes in the attachment.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "length" })
  length: number;

  /**
   * The status of the attachment. For example : ACTIVE, DELETED
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: ScoutingObservationAttachmentStatusEnum;

  /**
   * The time the attachment was last updated.
   *
   * @remarks
   * Time in ISO 8601 format with UTC timezone, 3 fractional seconds.
   * (https://tools.ietf.org/html/rfc3339)
   *
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updatedAt" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;
}
