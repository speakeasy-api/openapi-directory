// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// SetUserSettingsXAmzTargetEnum
type SetUserSettingsXAmzTargetEnum string

const (
	SetUserSettingsXAmzTargetEnumAwsCognitoIdentityProviderServiceSetUserSettings SetUserSettingsXAmzTargetEnum = "AWSCognitoIdentityProviderService.SetUserSettings"
)

func (e SetUserSettingsXAmzTargetEnum) ToPointer() *SetUserSettingsXAmzTargetEnum {
	return &e
}

func (e *SetUserSettingsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSCognitoIdentityProviderService.SetUserSettings":
		*e = SetUserSettingsXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SetUserSettingsXAmzTargetEnum: %v", v)
	}
}

type SetUserSettingsRequest struct {
	SetUserSettingsRequest shared.SetUserSettingsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm          *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256      *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential         *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate               *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken      *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature          *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders      *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget             SetUserSettingsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type SetUserSettingsResponse struct {
	ContentType string
	// ForbiddenException
	ForbiddenException interface{}
	// InternalErrorException
	InternalErrorException interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// NotAuthorizedException
	NotAuthorizedException interface{}
	// PasswordResetRequiredException
	PasswordResetRequiredException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	SetUserSettingsResponse map[string]interface{}
	StatusCode              int
	RawResponse             *http.Response
	// UserNotConfirmedException
	UserNotConfirmedException interface{}
	// UserNotFoundException
	UserNotFoundException interface{}
}
