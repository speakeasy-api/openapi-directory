"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MacVerifyResponseProtectionLevelEnum(str, Enum):
    r"""The ProtectionLevel of the CryptoKeyVersion used for verification."""
    PROTECTION_LEVEL_UNSPECIFIED = 'PROTECTION_LEVEL_UNSPECIFIED'
    SOFTWARE = 'SOFTWARE'
    HSM = 'HSM'
    EXTERNAL = 'EXTERNAL'
    EXTERNAL_VPC = 'EXTERNAL_VPC'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MacVerifyResponse:
    r"""Response message for KeyManagementService.MacVerify."""
    
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The resource name of the CryptoKeyVersion used for verification. Check this field to verify that the intended resource was used for verification."""  
    protection_level: Optional[MacVerifyResponseProtectionLevelEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('protectionLevel'), 'exclude': lambda f: f is None }})
    r"""The ProtectionLevel of the CryptoKeyVersion used for verification."""  
    success: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('success'), 'exclude': lambda f: f is None }})
    r"""This field indicates whether or not the verification operation for MacVerifyRequest.mac over MacVerifyRequest.data was successful."""  
    verified_data_crc32c: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verifiedDataCrc32c'), 'exclude': lambda f: f is None }})
    r"""Integrity verification field. A flag indicating whether MacVerifyRequest.data_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that MacVerifyRequest.data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set MacVerifyRequest.data_crc32c but this field is still false, discard the response and perform a limited number of retries."""  
    verified_mac_crc32c: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verifiedMacCrc32c'), 'exclude': lambda f: f is None }})
    r"""Integrity verification field. A flag indicating whether MacVerifyRequest.mac_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that MacVerifyRequest.mac_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set MacVerifyRequest.mac_crc32c but this field is still false, discard the response and perform a limited number of retries."""  
    verified_success_integrity: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verifiedSuccessIntegrity'), 'exclude': lambda f: f is None }})
    r"""Integrity verification field. This value is used for the integrity verification of [MacVerifyResponse.success]. If the value of this field contradicts the value of [MacVerifyResponse.success], discard the response and perform a limited number of retries."""  
    