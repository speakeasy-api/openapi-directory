/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * GdataCompositeMedia - A sequence of media data references representing composite data. Introduced to support Bigstore composite objects. For details, visit http://go/bigstore-composites.
 */
public class GdataCompositeMedia {
    /**
     * Blobstore v1 reference, set if reference_type is BLOBSTORE_REF This should be the byte representation of a blobstore.BlobRef. Since Blobstore is deprecating v1, use blobstore2_info instead. For now, any v2 blob will also be represented in this field as v1 BlobRef.
     */
    
    public String blobRef;
    public GdataCompositeMedia withBlobRef(String blobRef) {
        this.blobRef = blobRef;
        return this;
    }
    
    /**
     * Information to read/write to blobstore2.
     */
    
    public GdataBlobstore2Info blobstore2Info;
    public GdataCompositeMedia withBlobstore2Info(GdataBlobstore2Info blobstore2Info) {
        this.blobstore2Info = blobstore2Info;
        return this;
    }
    
    /**
     * A binary data reference for a media download. Serves as a technology-agnostic binary reference in some Google infrastructure. This value is a serialized storage_cosmo.BinaryReference proto. Storing it as bytes is a hack to get around the fact that the cosmo proto (as well as others it includes) doesn't support JavaScript. This prevents us from including the actual type of this field.
     */
    
    public String cosmoBinaryReference;
    public GdataCompositeMedia withCosmoBinaryReference(String cosmoBinaryReference) {
        this.cosmoBinaryReference = cosmoBinaryReference;
        return this;
    }
    
    /**
     * crc32.c hash for the payload.
     */
    
    public Long crc32cHash;
    public GdataCompositeMedia withCrc32cHash(Long crc32cHash) {
        this.crc32cHash = crc32cHash;
        return this;
    }
    
    /**
     * Media data, set if reference_type is INLINE
     */
    
    public String inline;
    public GdataCompositeMedia withInline(String inline) {
        this.inline = inline;
        return this;
    }
    
    /**
     * Size of the data, in bytes
     */
    
    public String length;
    public GdataCompositeMedia withLength(String length) {
        this.length = length;
        return this;
    }
    
    /**
     * MD5 hash for the payload.
     */
    
    public String md5Hash;
    public GdataCompositeMedia withMd5Hash(String md5Hash) {
        this.md5Hash = md5Hash;
        return this;
    }
    
    /**
     * This is a copy of the tech.blob.ObjectId proto, which could not be used directly here due to transitive closure issues with JavaScript support; see http://b/8801763.
     */
    
    public GdataObjectId objectId;
    public GdataCompositeMedia withObjectId(GdataObjectId objectId) {
        this.objectId = objectId;
        return this;
    }
    
    /**
     * Path to the data, set if reference_type is PATH
     */
    
    public String path;
    public GdataCompositeMedia withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * Describes what the field reference contains.
     */
    
    public GdataCompositeMediaReferenceTypeEnum referenceType;
    public GdataCompositeMedia withReferenceType(GdataCompositeMediaReferenceTypeEnum referenceType) {
        this.referenceType = referenceType;
        return this;
    }
    
    /**
     * SHA-1 hash for the payload.
     */
    
    public String sha1Hash;
    public GdataCompositeMedia withSha1Hash(String sha1Hash) {
        this.sha1Hash = sha1Hash;
        return this;
    }
    
}
