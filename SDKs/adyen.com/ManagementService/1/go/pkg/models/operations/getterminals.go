// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type GetTerminalsSecurity struct {
	APIKeyAuth *shared.SchemeAPIKeyAuth `security:"scheme,type=apiKey,subtype=header"`
	BasicAuth  *shared.SchemeBasicAuth  `security:"scheme,type=http,subtype=basic"`
}

type GetTerminalsQueryParams struct {
	// Returns terminals of the [models](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/companies/{companyId}/terminalModels) specified in the format *brand.model*.
	BrandModels *string `queryParam:"style=form,explode=true,name=brandModels"`
	// Returns terminals located in the countries specified by their [two-letter country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2).
	Countries *string `queryParam:"style=form,explode=true,name=countries"`
	// Returns terminals that belong to the merchant accounts specified by their unique merchant account ID.
	MerchantIds *string `queryParam:"style=form,explode=true,name=merchantIds"`
	// The number of the page to fetch.
	PageNumber *int `queryParam:"style=form,explode=true,name=pageNumber"`
	// The number of items to have on a page, maximum 100. The default is 20 items on a page.
	PageSize *int `queryParam:"style=form,explode=true,name=pageSize"`
	// Returns terminals with an ID that contains the specified string. If present, other query parameters are ignored.
	SearchQuery *string `queryParam:"style=form,explode=true,name=searchQuery"`
	// Returns terminals that are assigned to the [stores](https://docs.adyen.com/api-explorer/#/ManagementService/latest/get/stores) specified by their unique store ID.
	StoreIds *string `queryParam:"style=form,explode=true,name=storeIds"`
}

type GetTerminalsRequest struct {
	QueryParams GetTerminalsQueryParams
	Security    GetTerminalsSecurity
}

type GetTerminalsResponse struct {
	ContentType string
	// OK - the request has succeeded.
	ListTerminalsResponse *shared.ListTerminalsResponse
	// Bad Request - a problem reading or understanding the request.
	RestServiceError *shared.RestServiceError
	StatusCode       int
	RawResponse      *http.Response
}
