/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The amount that YouTube needs to rotate the original source content to properly display the video.
 */
export enum VideoFileDetailsVideoStreamRotationEnum {
  None = "none",
  Clockwise = "clockwise",
  UpsideDown = "upsideDown",
  CounterClockwise = "counterClockwise",
  Other = "other",
}

/**
 * Information about a video stream.
 */
export class VideoFileDetailsVideoStream extends SpeakeasyBase {
  /**
   * The video content's display aspect ratio, which specifies the aspect ratio in which the video should be displayed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "aspectRatio" })
  aspectRatio?: number;

  /**
   * The video stream's bitrate, in bits per second.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "bitrateBps" })
  bitrateBps?: string;

  /**
   * The video codec that the stream uses.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "codec" })
  codec?: string;

  /**
   * The video stream's frame rate, in frames per second.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "frameRateFps" })
  frameRateFps?: number;

  /**
   * The encoded video content's height in pixels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "heightPixels" })
  heightPixels?: number;

  /**
   * The amount that YouTube needs to rotate the original source content to properly display the video.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rotation" })
  rotation?: VideoFileDetailsVideoStreamRotationEnum;

  /**
   * A value that uniquely identifies a video vendor. Typically, the value is a four-letter vendor code.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "vendor" })
  vendor?: string;

  /**
   * The encoded video content's width in pixels. You can calculate the video's encoding aspect ratio as width_pixels / height_pixels.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "widthPixels" })
  widthPixels?: number;
}
