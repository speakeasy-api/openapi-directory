/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The currency in which the <code>upfrontPrice</code> and <code>hourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.
 */
export enum DescribeHostReservationsResultHostReservationSetCurrencyCodeEnum {
  Usd = "USD",
}

/**
 * The payment option selected for this reservation.
 */
export enum DescribeHostReservationsResultHostReservationSetPaymentOptionEnum {
  AllUpfront = "AllUpfront",
  PartialUpfront = "PartialUpfront",
  NoUpfront = "NoUpfront",
}

/**
 * The state of the reservation.
 */
export enum DescribeHostReservationsResultHostReservationSetStateEnum {
  PaymentPending = "payment-pending",
  PaymentFailed = "payment-failed",
  Active = "active",
  Retired = "retired",
}

/**
 * Describes a tag.
 */
export class DescribeHostReservationsResultHostReservationSetTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Details about the Dedicated Host Reservation and associated Dedicated Hosts.
 */
export class DescribeHostReservationsResultHostReservationSet extends SpeakeasyBase {
  @SpeakeasyMetadata()
  count?: number;

  @SpeakeasyMetadata()
  currencyCode?: DescribeHostReservationsResultHostReservationSetCurrencyCodeEnum;

  @SpeakeasyMetadata()
  duration?: number;

  @SpeakeasyMetadata()
  end?: Date;

  @SpeakeasyMetadata()
  hostIdSet?: string[];

  @SpeakeasyMetadata()
  hostReservationId?: string;

  @SpeakeasyMetadata()
  hourlyPrice?: string;

  @SpeakeasyMetadata()
  instanceFamily?: string;

  @SpeakeasyMetadata()
  offeringId?: string;

  @SpeakeasyMetadata()
  paymentOption?: DescribeHostReservationsResultHostReservationSetPaymentOptionEnum;

  @SpeakeasyMetadata()
  start?: Date;

  @SpeakeasyMetadata()
  state?: DescribeHostReservationsResultHostReservationSetStateEnum;

  @SpeakeasyMetadata({
    elemType: DescribeHostReservationsResultHostReservationSetTags,
  })
  tags?: DescribeHostReservationsResultHostReservationSetTags[];

  @SpeakeasyMetadata()
  upfrontPrice?: string;
}

/**
 * Success
 */
export class DescribeHostReservationsResult extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: DescribeHostReservationsResultHostReservationSet,
  })
  hostReservationSet?: DescribeHostReservationsResultHostReservationSet[];

  @SpeakeasyMetadata()
  nextToken?: string;
}
