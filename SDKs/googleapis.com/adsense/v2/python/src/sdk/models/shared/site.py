"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SiteStateEnum(str, Enum):
    r"""Output only. State of a site."""
    STATE_UNSPECIFIED = 'STATE_UNSPECIFIED'
    REQUIRES_REVIEW = 'REQUIRES_REVIEW'
    GETTING_READY = 'GETTING_READY'
    READY = 'READY'
    NEEDS_ATTENTION = 'NEEDS_ATTENTION'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Site:
    r"""Representation of a Site."""
    
    auto_ads_enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('autoAdsEnabled'), 'exclude': lambda f: f is None }})
    r"""Whether auto ads is turned on for the site."""  
    domain: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domain'), 'exclude': lambda f: f is None }})
    r"""Domain (or subdomain) of the site, e.g. \\"example.com\\" or \\"www.example.com\\". This is used in the `OWNED_SITE_DOMAIN_NAME` reporting dimension."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Output only. Resource name of a site. Format: accounts/{account}/sites/{site}"""  
    reporting_dimension_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reportingDimensionId'), 'exclude': lambda f: f is None }})
    r"""Output only. Unique ID of the site as used in the `OWNED_SITE_ID` reporting dimension."""  
    state: Optional[SiteStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""Output only. State of a site."""  
    