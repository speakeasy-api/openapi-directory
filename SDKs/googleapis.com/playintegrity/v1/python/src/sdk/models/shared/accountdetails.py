"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import accountactivity as shared_accountactivity
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class AccountDetailsAppLicensingVerdictEnum(str, Enum):
    r"""Required. Details about the licensing status of the user for the app in the scope."""
    UNKNOWN = 'UNKNOWN'
    LICENSED = 'LICENSED'
    UNLICENSED = 'UNLICENSED'
    UNEVALUATED = 'UNEVALUATED'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccountDetails:
    r"""Contains the account information such as the licensing status for the user in the scope."""
    
    account_activity: Optional[shared_accountactivity.AccountActivity] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountActivity'), 'exclude': lambda f: f is None }})
    r"""Contains a signal helping apps differentiating between likely genuine users and likely non-genuine traffic (such as accounts being used for fraud, accounts used by automated traffic, or accounts used in device farms) based on the presence and volume of Play store activity."""  
    app_licensing_verdict: Optional[AccountDetailsAppLicensingVerdictEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appLicensingVerdict'), 'exclude': lambda f: f is None }})
    r"""Required. Details about the licensing status of the user for the app in the scope."""  
    