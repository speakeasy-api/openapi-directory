<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetScreenshotsTargetScreenshotTestIdTargetVersionIdTargetResultIdComparisonBaseResultIdRequest
{
    /**
     * result id of the base Screenshot Test
     * 
     * @var int $baseResultId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=base_result_id')]
    public int $baseResultId;
    
    /**
     * Name of callback method for JSONP requests.
     * 
     * @var ?string $callback
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=callback')]
    public ?string $callback = null;
    
    /**
     * The format of the returned data. Possible values are "json" or "jsonp".
     * 
     * @var ?string $format
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=format')]
    public ?string $format = null;
    
    /**
     * result id of the target Screenshot Test
     * 
     * @var int $targetResultId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=target_result_id')]
    public int $targetResultId;
    
    /**
     * test id of the target Screenshot Test
     * 
     * @var int $targetScreenshotTestId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=target_screenshot_test_id')]
    public int $targetScreenshotTestId;
    
    /**
     * version id of the target Screenshot Test
     * 
     * @var int $targetVersionId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=target_version_id')]
    public int $targetVersionId;
    
    /**
     * Used as the basis for detecting box model differences in element positioning and dimensions that should be flagged and reported back to the comparison results. The default is 30px which is a good basis for finding notable layout differences.
     * 
     * @var ?float $tolerance
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=tolerance')]
    public ?float $tolerance = null;
    
	public function __construct()
	{
		$this->baseResultId = 0;
		$this->callback = null;
		$this->format = null;
		$this->targetResultId = 0;
		$this->targetScreenshotTestId = 0;
		$this->targetVersionId = 0;
		$this->tolerance = null;
	}
}
