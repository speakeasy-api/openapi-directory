// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TestMatrixInvalidMatrixDetailsEnum - Output only. Describes why the matrix is considered invalid. Only useful for matrices in the INVALID state.
type TestMatrixInvalidMatrixDetailsEnum string

const (
	TestMatrixInvalidMatrixDetailsEnumInvalidMatrixDetailsUnspecified         TestMatrixInvalidMatrixDetailsEnum = "INVALID_MATRIX_DETAILS_UNSPECIFIED"
	TestMatrixInvalidMatrixDetailsEnumDetailsUnavailable                      TestMatrixInvalidMatrixDetailsEnum = "DETAILS_UNAVAILABLE"
	TestMatrixInvalidMatrixDetailsEnumMalformedApk                            TestMatrixInvalidMatrixDetailsEnum = "MALFORMED_APK"
	TestMatrixInvalidMatrixDetailsEnumMalformedTestApk                        TestMatrixInvalidMatrixDetailsEnum = "MALFORMED_TEST_APK"
	TestMatrixInvalidMatrixDetailsEnumNoManifest                              TestMatrixInvalidMatrixDetailsEnum = "NO_MANIFEST"
	TestMatrixInvalidMatrixDetailsEnumNoPackageName                           TestMatrixInvalidMatrixDetailsEnum = "NO_PACKAGE_NAME"
	TestMatrixInvalidMatrixDetailsEnumInvalidPackageName                      TestMatrixInvalidMatrixDetailsEnum = "INVALID_PACKAGE_NAME"
	TestMatrixInvalidMatrixDetailsEnumTestSameAsApp                           TestMatrixInvalidMatrixDetailsEnum = "TEST_SAME_AS_APP"
	TestMatrixInvalidMatrixDetailsEnumNoInstrumentation                       TestMatrixInvalidMatrixDetailsEnum = "NO_INSTRUMENTATION"
	TestMatrixInvalidMatrixDetailsEnumNoSignature                             TestMatrixInvalidMatrixDetailsEnum = "NO_SIGNATURE"
	TestMatrixInvalidMatrixDetailsEnumInstrumentationOrchestratorIncompatible TestMatrixInvalidMatrixDetailsEnum = "INSTRUMENTATION_ORCHESTRATOR_INCOMPATIBLE"
	TestMatrixInvalidMatrixDetailsEnumNoTestRunnerClass                       TestMatrixInvalidMatrixDetailsEnum = "NO_TEST_RUNNER_CLASS"
	TestMatrixInvalidMatrixDetailsEnumNoLauncherActivity                      TestMatrixInvalidMatrixDetailsEnum = "NO_LAUNCHER_ACTIVITY"
	TestMatrixInvalidMatrixDetailsEnumForbiddenPermissions                    TestMatrixInvalidMatrixDetailsEnum = "FORBIDDEN_PERMISSIONS"
	TestMatrixInvalidMatrixDetailsEnumInvalidRoboDirectives                   TestMatrixInvalidMatrixDetailsEnum = "INVALID_ROBO_DIRECTIVES"
	TestMatrixInvalidMatrixDetailsEnumInvalidResourceName                     TestMatrixInvalidMatrixDetailsEnum = "INVALID_RESOURCE_NAME"
	TestMatrixInvalidMatrixDetailsEnumInvalidDirectiveAction                  TestMatrixInvalidMatrixDetailsEnum = "INVALID_DIRECTIVE_ACTION"
	TestMatrixInvalidMatrixDetailsEnumTestLoopIntentFilterNotFound            TestMatrixInvalidMatrixDetailsEnum = "TEST_LOOP_INTENT_FILTER_NOT_FOUND"
	TestMatrixInvalidMatrixDetailsEnumScenarioLabelNotDeclared                TestMatrixInvalidMatrixDetailsEnum = "SCENARIO_LABEL_NOT_DECLARED"
	TestMatrixInvalidMatrixDetailsEnumScenarioLabelMalformed                  TestMatrixInvalidMatrixDetailsEnum = "SCENARIO_LABEL_MALFORMED"
	TestMatrixInvalidMatrixDetailsEnumScenarioNotDeclared                     TestMatrixInvalidMatrixDetailsEnum = "SCENARIO_NOT_DECLARED"
	TestMatrixInvalidMatrixDetailsEnumDeviceAdminReceiver                     TestMatrixInvalidMatrixDetailsEnum = "DEVICE_ADMIN_RECEIVER"
	TestMatrixInvalidMatrixDetailsEnumMalformedXcTestZip                      TestMatrixInvalidMatrixDetailsEnum = "MALFORMED_XC_TEST_ZIP"
	TestMatrixInvalidMatrixDetailsEnumBuiltForIosSimulator                    TestMatrixInvalidMatrixDetailsEnum = "BUILT_FOR_IOS_SIMULATOR"
	TestMatrixInvalidMatrixDetailsEnumNoTestsInXcTestZip                      TestMatrixInvalidMatrixDetailsEnum = "NO_TESTS_IN_XC_TEST_ZIP"
	TestMatrixInvalidMatrixDetailsEnumUseDestinationArtifacts                 TestMatrixInvalidMatrixDetailsEnum = "USE_DESTINATION_ARTIFACTS"
	TestMatrixInvalidMatrixDetailsEnumTestNotAppHosted                        TestMatrixInvalidMatrixDetailsEnum = "TEST_NOT_APP_HOSTED"
	TestMatrixInvalidMatrixDetailsEnumPlistCannotBeParsed                     TestMatrixInvalidMatrixDetailsEnum = "PLIST_CANNOT_BE_PARSED"
	TestMatrixInvalidMatrixDetailsEnumTestOnlyApk                             TestMatrixInvalidMatrixDetailsEnum = "TEST_ONLY_APK"
	TestMatrixInvalidMatrixDetailsEnumMalformedIpa                            TestMatrixInvalidMatrixDetailsEnum = "MALFORMED_IPA"
	TestMatrixInvalidMatrixDetailsEnumMissingURLScheme                        TestMatrixInvalidMatrixDetailsEnum = "MISSING_URL_SCHEME"
	TestMatrixInvalidMatrixDetailsEnumMalformedAppBundle                      TestMatrixInvalidMatrixDetailsEnum = "MALFORMED_APP_BUNDLE"
	TestMatrixInvalidMatrixDetailsEnumNoCodeApk                               TestMatrixInvalidMatrixDetailsEnum = "NO_CODE_APK"
	TestMatrixInvalidMatrixDetailsEnumInvalidInputApk                         TestMatrixInvalidMatrixDetailsEnum = "INVALID_INPUT_APK"
	TestMatrixInvalidMatrixDetailsEnumInvalidApkPreviewSDK                    TestMatrixInvalidMatrixDetailsEnum = "INVALID_APK_PREVIEW_SDK"
	TestMatrixInvalidMatrixDetailsEnumMatrixTooLarge                          TestMatrixInvalidMatrixDetailsEnum = "MATRIX_TOO_LARGE"
	TestMatrixInvalidMatrixDetailsEnumTestQuotaExceeded                       TestMatrixInvalidMatrixDetailsEnum = "TEST_QUOTA_EXCEEDED"
	TestMatrixInvalidMatrixDetailsEnumServiceNotActivated                     TestMatrixInvalidMatrixDetailsEnum = "SERVICE_NOT_ACTIVATED"
	TestMatrixInvalidMatrixDetailsEnumUnknownPermissionError                  TestMatrixInvalidMatrixDetailsEnum = "UNKNOWN_PERMISSION_ERROR"
)

func (e TestMatrixInvalidMatrixDetailsEnum) ToPointer() *TestMatrixInvalidMatrixDetailsEnum {
	return &e
}

func (e *TestMatrixInvalidMatrixDetailsEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INVALID_MATRIX_DETAILS_UNSPECIFIED":
		fallthrough
	case "DETAILS_UNAVAILABLE":
		fallthrough
	case "MALFORMED_APK":
		fallthrough
	case "MALFORMED_TEST_APK":
		fallthrough
	case "NO_MANIFEST":
		fallthrough
	case "NO_PACKAGE_NAME":
		fallthrough
	case "INVALID_PACKAGE_NAME":
		fallthrough
	case "TEST_SAME_AS_APP":
		fallthrough
	case "NO_INSTRUMENTATION":
		fallthrough
	case "NO_SIGNATURE":
		fallthrough
	case "INSTRUMENTATION_ORCHESTRATOR_INCOMPATIBLE":
		fallthrough
	case "NO_TEST_RUNNER_CLASS":
		fallthrough
	case "NO_LAUNCHER_ACTIVITY":
		fallthrough
	case "FORBIDDEN_PERMISSIONS":
		fallthrough
	case "INVALID_ROBO_DIRECTIVES":
		fallthrough
	case "INVALID_RESOURCE_NAME":
		fallthrough
	case "INVALID_DIRECTIVE_ACTION":
		fallthrough
	case "TEST_LOOP_INTENT_FILTER_NOT_FOUND":
		fallthrough
	case "SCENARIO_LABEL_NOT_DECLARED":
		fallthrough
	case "SCENARIO_LABEL_MALFORMED":
		fallthrough
	case "SCENARIO_NOT_DECLARED":
		fallthrough
	case "DEVICE_ADMIN_RECEIVER":
		fallthrough
	case "MALFORMED_XC_TEST_ZIP":
		fallthrough
	case "BUILT_FOR_IOS_SIMULATOR":
		fallthrough
	case "NO_TESTS_IN_XC_TEST_ZIP":
		fallthrough
	case "USE_DESTINATION_ARTIFACTS":
		fallthrough
	case "TEST_NOT_APP_HOSTED":
		fallthrough
	case "PLIST_CANNOT_BE_PARSED":
		fallthrough
	case "TEST_ONLY_APK":
		fallthrough
	case "MALFORMED_IPA":
		fallthrough
	case "MISSING_URL_SCHEME":
		fallthrough
	case "MALFORMED_APP_BUNDLE":
		fallthrough
	case "NO_CODE_APK":
		fallthrough
	case "INVALID_INPUT_APK":
		fallthrough
	case "INVALID_APK_PREVIEW_SDK":
		fallthrough
	case "MATRIX_TOO_LARGE":
		fallthrough
	case "TEST_QUOTA_EXCEEDED":
		fallthrough
	case "SERVICE_NOT_ACTIVATED":
		fallthrough
	case "UNKNOWN_PERMISSION_ERROR":
		*e = TestMatrixInvalidMatrixDetailsEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TestMatrixInvalidMatrixDetailsEnum: %v", v)
	}
}

// TestMatrixOutcomeSummaryEnum - Output Only. The overall outcome of the test. Only set when the test matrix state is FINISHED.
type TestMatrixOutcomeSummaryEnum string

const (
	TestMatrixOutcomeSummaryEnumOutcomeSummaryUnspecified TestMatrixOutcomeSummaryEnum = "OUTCOME_SUMMARY_UNSPECIFIED"
	TestMatrixOutcomeSummaryEnumSuccess                   TestMatrixOutcomeSummaryEnum = "SUCCESS"
	TestMatrixOutcomeSummaryEnumFailure                   TestMatrixOutcomeSummaryEnum = "FAILURE"
	TestMatrixOutcomeSummaryEnumInconclusive              TestMatrixOutcomeSummaryEnum = "INCONCLUSIVE"
	TestMatrixOutcomeSummaryEnumSkipped                   TestMatrixOutcomeSummaryEnum = "SKIPPED"
)

func (e TestMatrixOutcomeSummaryEnum) ToPointer() *TestMatrixOutcomeSummaryEnum {
	return &e
}

func (e *TestMatrixOutcomeSummaryEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OUTCOME_SUMMARY_UNSPECIFIED":
		fallthrough
	case "SUCCESS":
		fallthrough
	case "FAILURE":
		fallthrough
	case "INCONCLUSIVE":
		fallthrough
	case "SKIPPED":
		*e = TestMatrixOutcomeSummaryEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TestMatrixOutcomeSummaryEnum: %v", v)
	}
}

// TestMatrixStateEnum - Output only. Indicates the current progress of the test matrix.
type TestMatrixStateEnum string

const (
	TestMatrixStateEnumTestStateUnspecified     TestMatrixStateEnum = "TEST_STATE_UNSPECIFIED"
	TestMatrixStateEnumValidating               TestMatrixStateEnum = "VALIDATING"
	TestMatrixStateEnumPending                  TestMatrixStateEnum = "PENDING"
	TestMatrixStateEnumRunning                  TestMatrixStateEnum = "RUNNING"
	TestMatrixStateEnumFinished                 TestMatrixStateEnum = "FINISHED"
	TestMatrixStateEnumError                    TestMatrixStateEnum = "ERROR"
	TestMatrixStateEnumUnsupportedEnvironment   TestMatrixStateEnum = "UNSUPPORTED_ENVIRONMENT"
	TestMatrixStateEnumIncompatibleEnvironment  TestMatrixStateEnum = "INCOMPATIBLE_ENVIRONMENT"
	TestMatrixStateEnumIncompatibleArchitecture TestMatrixStateEnum = "INCOMPATIBLE_ARCHITECTURE"
	TestMatrixStateEnumCancelled                TestMatrixStateEnum = "CANCELLED"
	TestMatrixStateEnumInvalid                  TestMatrixStateEnum = "INVALID"
)

func (e TestMatrixStateEnum) ToPointer() *TestMatrixStateEnum {
	return &e
}

func (e *TestMatrixStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TEST_STATE_UNSPECIFIED":
		fallthrough
	case "VALIDATING":
		fallthrough
	case "PENDING":
		fallthrough
	case "RUNNING":
		fallthrough
	case "FINISHED":
		fallthrough
	case "ERROR":
		fallthrough
	case "UNSUPPORTED_ENVIRONMENT":
		fallthrough
	case "INCOMPATIBLE_ENVIRONMENT":
		fallthrough
	case "INCOMPATIBLE_ARCHITECTURE":
		fallthrough
	case "CANCELLED":
		fallthrough
	case "INVALID":
		*e = TestMatrixStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TestMatrixStateEnum: %v", v)
	}
}

// TestMatrix - TestMatrix captures all details about a test. It contains the environment configuration, test specification, test executions and overall state and outcome.
type TestMatrix struct {
	// Information about the client which invoked the test.
	ClientInfo *ClientInfo `json:"clientInfo,omitempty"`
	// The matrix of environments in which the test is to be executed.
	EnvironmentMatrix *EnvironmentMatrix `json:"environmentMatrix,omitempty"`
	// If true, only a single attempt at most will be made to run each execution/shard in the matrix. Flaky test attempts are not affected. Normally, 2 or more attempts are made if a potential infrastructure issue is detected. This feature is for latency sensitive workloads. The incidence of execution failures may be significantly greater for fail-fast matrices and support is more limited because of that expectation.
	FailFast *bool `json:"failFast,omitempty"`
	// The number of times a TestExecution should be re-attempted if one or more of its test cases fail for any reason. The maximum number of reruns allowed is 10. Default is 0, which implies no reruns.
	FlakyTestAttempts *int `json:"flakyTestAttempts,omitempty"`
	// Output only. Describes why the matrix is considered invalid. Only useful for matrices in the INVALID state.
	InvalidMatrixDetails *TestMatrixInvalidMatrixDetailsEnum `json:"invalidMatrixDetails,omitempty"`
	// Output Only. The overall outcome of the test. Only set when the test matrix state is FINISHED.
	OutcomeSummary *TestMatrixOutcomeSummaryEnum `json:"outcomeSummary,omitempty"`
	// The cloud project that owns the test matrix.
	ProjectID *string `json:"projectId,omitempty"`
	// Locations where the results of running the test are stored.
	ResultStorage *ResultStorage `json:"resultStorage,omitempty"`
	// Output only. Indicates the current progress of the test matrix.
	State *TestMatrixStateEnum `json:"state,omitempty"`
	// Output only. The list of test executions that the service creates for this matrix.
	TestExecutions []TestExecution `json:"testExecutions,omitempty"`
	// Output only. Unique id set by the service.
	TestMatrixID *string `json:"testMatrixId,omitempty"`
	// A description of how to run the test.
	TestSpecification *TestSpecification `json:"testSpecification,omitempty"`
	// Output only. The time this test matrix was initially created.
	Timestamp *string `json:"timestamp,omitempty"`
}
