"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import ondemandcapacityreservationpreference_enum as shared_ondemandcapacityreservationpreference_enum
from ..shared import ondemandcapacityreservationusagestrategy_enum as shared_ondemandcapacityreservationusagestrategy_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OnDemandCapacityReservationOptions:
    r"""Describes the strategy for using unused Capacity Reservations for fulfilling On-Demand capacity."""
    
    capacity_reservation_preference: Optional[shared_ondemandcapacityreservationpreference_enum.OnDemandCapacityReservationPreferenceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CapacityReservationPreference'), 'exclude': lambda f: f is None }})  
    capacity_reservation_resource_group_arn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('CapacityReservationResourceGroupArn'), 'exclude': lambda f: f is None }})  
    usage_strategy: Optional[shared_ondemandcapacityreservationusagestrategy_enum.OnDemandCapacityReservationUsageStrategyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('UsageStrategy'), 'exclude': lambda f: f is None }})  
    