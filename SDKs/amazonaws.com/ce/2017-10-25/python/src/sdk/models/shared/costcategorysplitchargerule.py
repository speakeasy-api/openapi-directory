"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import costcategorysplitchargemethod_enum as shared_costcategorysplitchargemethod_enum
from ..shared import costcategorysplitchargeruleparameter as shared_costcategorysplitchargeruleparameter
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CostCategorySplitChargeRule:
    r"""Use the split charge rule to split the cost of one Cost Category value across several other target values."""
    
    method: shared_costcategorysplitchargemethod_enum.CostCategorySplitChargeMethodEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Method') }})  
    source: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Source') }})  
    targets: list[str] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Targets') }})  
    parameters: Optional[list[shared_costcategorysplitchargeruleparameter.CostCategorySplitChargeRuleParameter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Parameters'), 'exclude': lambda f: f is None }})  
    