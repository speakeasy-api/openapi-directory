// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// BatchDetectSentimentXAmzTargetEnum
type BatchDetectSentimentXAmzTargetEnum string

const (
	BatchDetectSentimentXAmzTargetEnumComprehend20171127BatchDetectSentiment BatchDetectSentimentXAmzTargetEnum = "Comprehend_20171127.BatchDetectSentiment"
)

func (e *BatchDetectSentimentXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Comprehend_20171127.BatchDetectSentiment":
		*e = BatchDetectSentimentXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchDetectSentimentXAmzTargetEnum: %s", s)
	}
}

type BatchDetectSentimentRequest struct {
	BatchDetectSentimentRequest shared.BatchDetectSentimentRequest `request:"mediaType=application/json"`
	XAmzAlgorithm               *string                            `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256           *string                            `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential              *string                            `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                    *string                            `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken           *string                            `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature               *string                            `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders           *string                            `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                  BatchDetectSentimentXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type BatchDetectSentimentResponse struct {
	// Success
	BatchDetectSentimentResponse *shared.BatchDetectSentimentResponse
	// BatchSizeLimitExceededException
	BatchSizeLimitExceededException interface{}
	ContentType                     string
	// InternalServerException
	InternalServerException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// TextSizeLimitExceededException
	TextSizeLimitExceededException interface{}
	// UnsupportedLanguageException
	UnsupportedLanguageException interface{}
}
