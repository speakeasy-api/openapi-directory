/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The type of confidence interval to build
 */
export enum PostPortfolioAnalysisSharpeRatioConfidenceIntervalRequestBodyConfidenceIntervalTypeEnum {
  TwoSided = "twoSided",
  LowerOneSided = "lowerOneSided",
  UpperOneSided = "upperOneSided",
}

export class PostPortfolioAnalysisSharpeRatioConfidenceIntervalRequestBodyPortfolios extends SpeakeasyBase {
  /**
   * portfolioValues[t] is the value of the portfolio at the time t
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portfolioValues" })
  portfolioValues: number[];
}

export class PostPortfolioAnalysisSharpeRatioConfidenceIntervalRequestBody extends SpeakeasyBase {
  /**
   * The type of confidence interval to build
   */
  @SpeakeasyMetadata()
  @Expose({ name: "confidenceIntervalType" })
  confidenceIntervalType?: PostPortfolioAnalysisSharpeRatioConfidenceIntervalRequestBodyConfidenceIntervalTypeEnum;

  /**
   * The confidence level of the confidence interval to build, in percentage
   */
  @SpeakeasyMetadata()
  @Expose({ name: "confidenceLevel" })
  confidenceLevel?: number;

  @SpeakeasyMetadata({
    elemType:
      PostPortfolioAnalysisSharpeRatioConfidenceIntervalRequestBodyPortfolios,
  })
  @Expose({ name: "portfolios" })
  @Type(
    () =>
      PostPortfolioAnalysisSharpeRatioConfidenceIntervalRequestBodyPortfolios
  )
  portfolios: PostPortfolioAnalysisSharpeRatioConfidenceIntervalRequestBodyPortfolios[];

  /**
   * The risk free rate
   */
  @SpeakeasyMetadata()
  @Expose({ name: "riskFreeRate" })
  riskFreeRate: number;
}

export class PostPortfolioAnalysisSharpeRatioConfidenceInterval200ApplicationJSONPortfolios extends SpeakeasyBase {
  /**
   * portfolioSharpeRatioConfidenceInterval[0] (resp. portfolioSharpeRatioConfidenceInterval[1]) is the lower (resp. upper) bound of the built confidence interval, possibly equal to null in case of a negative infinite (resp. positive infinite) bound
   */
  @SpeakeasyMetadata()
  @Expose({ name: "portfolioSharpeRatioConfidenceInterval" })
  portfolioSharpeRatioConfidenceInterval: number[];
}

/**
 * OK
 */
export class PostPortfolioAnalysisSharpeRatioConfidenceInterval200ApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType:
      PostPortfolioAnalysisSharpeRatioConfidenceInterval200ApplicationJSONPortfolios,
  })
  @Expose({ name: "portfolios" })
  @Type(
    () =>
      PostPortfolioAnalysisSharpeRatioConfidenceInterval200ApplicationJSONPortfolios
  )
  portfolios: PostPortfolioAnalysisSharpeRatioConfidenceInterval200ApplicationJSONPortfolios[];
}

export class PostPortfolioAnalysisSharpeRatioConfidenceIntervalResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  postPortfolioAnalysisSharpeRatioConfidenceInterval200ApplicationJSONObject?: PostPortfolioAnalysisSharpeRatioConfidenceInterval200ApplicationJSON;
}
