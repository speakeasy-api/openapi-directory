// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTCopyDBSnapshotActionEnum
type POSTCopyDBSnapshotActionEnum string

const (
	POSTCopyDBSnapshotActionEnumCopyDbSnapshot POSTCopyDBSnapshotActionEnum = "CopyDBSnapshot"
)

func (e POSTCopyDBSnapshotActionEnum) ToPointer() *POSTCopyDBSnapshotActionEnum {
	return &e
}

func (e *POSTCopyDBSnapshotActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CopyDBSnapshot":
		*e = POSTCopyDBSnapshotActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCopyDBSnapshotActionEnum: %v", v)
	}
}

// POSTCopyDBSnapshotVersionEnum
type POSTCopyDBSnapshotVersionEnum string

const (
	POSTCopyDBSnapshotVersionEnumTwoThousandAndThirteen0909 POSTCopyDBSnapshotVersionEnum = "2013-09-09"
)

func (e POSTCopyDBSnapshotVersionEnum) ToPointer() *POSTCopyDBSnapshotVersionEnum {
	return &e
}

func (e *POSTCopyDBSnapshotVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2013-09-09":
		*e = POSTCopyDBSnapshotVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTCopyDBSnapshotVersionEnum: %v", v)
	}
}

type POSTCopyDBSnapshotRequest struct {
	Action            POSTCopyDBSnapshotActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	RequestBody       []byte                        `request:"mediaType=text/xml"`
	Version           POSTCopyDBSnapshotVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTCopyDBSnapshotResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
