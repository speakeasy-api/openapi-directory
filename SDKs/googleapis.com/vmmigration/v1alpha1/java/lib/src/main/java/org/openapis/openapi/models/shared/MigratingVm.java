/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * MigratingVm - MigratingVm describes the VM that will be migrated from a Source environment and its replication state.
 */
public class MigratingVm {
    /**
     * Represent the source AWS VM details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("awsSourceVmDetails")
    public AwsSourceVmDetails awsSourceVmDetails;
    public MigratingVm withAwsSourceVmDetails(AwsSourceVmDetails awsSourceVmDetails) {
        this.awsSourceVmDetails = awsSourceVmDetails;
        return this;
    }
    
    /**
     * ComputeEngineTargetDefaults is a collection of details for creating a VM in a target Compute Engine project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("computeEngineTargetDefaults")
    public ComputeEngineTargetDefaults computeEngineTargetDefaults;
    public MigratingVm withComputeEngineTargetDefaults(ComputeEngineTargetDefaults computeEngineTargetDefaults) {
        this.computeEngineTargetDefaults = computeEngineTargetDefaults;
        return this;
    }
    
    /**
     * TargetVMDetails is a collection of details for creating a VM in a target Compute Engine project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("computeEngineVmDefaults")
    public TargetVMDetails computeEngineVmDefaults;
    public MigratingVm withComputeEngineVmDefaults(TargetVMDetails computeEngineVmDefaults) {
        this.computeEngineVmDefaults = computeEngineVmDefaults;
        return this;
    }
    
    /**
     * Output only. The time the migrating VM was created (this refers to this resource and not to the time it was installed in the source).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;
    public MigratingVm withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * ReplicationCycle contains information about the current replication cycle status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("currentSyncInfo")
    public ReplicationCycle currentSyncInfo;
    public MigratingVm withCurrentSyncInfo(ReplicationCycle currentSyncInfo) {
        this.currentSyncInfo = currentSyncInfo;
        return this;
    }
    
    /**
     * The description attached to the migrating VM by the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public MigratingVm withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * The display name attached to the MigratingVm by the user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public MigratingVm withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    /**
     * The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public Status error;
    public MigratingVm withError(Status error) {
        this.error = error;
        return this;
    }
    
    /**
     * Output only. The group this migrating vm is included in, if any. The group is represented by the full path of the appropriate Group resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("group")
    public String group;
    public MigratingVm withGroup(String group) {
        this.group = group;
        return this;
    }
    
    /**
     * The labels of the migrating VM.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public MigratingVm withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * ReplicationCycle contains information about the current replication cycle status.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastReplicationCycle")
    public ReplicationCycle lastReplicationCycle;
    public MigratingVm withLastReplicationCycle(ReplicationCycle lastReplicationCycle) {
        this.lastReplicationCycle = lastReplicationCycle;
        return this;
    }
    
    /**
     * ReplicationSync contain information about the last replica sync to the cloud.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastSync")
    public ReplicationSync lastSync;
    public MigratingVm withLastSync(ReplicationSync lastSync) {
        this.lastSync = lastSync;
        return this;
    }
    
    /**
     * Output only. The identifier of the MigratingVm.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public MigratingVm withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A policy for scheduling replications.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("policy")
    public SchedulePolicy policy;
    public MigratingVm withPolicy(SchedulePolicy policy) {
        this.policy = policy;
        return this;
    }
    
    /**
     * Output only. The recent clone jobs performed on the migrating VM. This field holds the vm's last completed clone job and the vm's running clone job, if one exists. Note: To have this field populated you need to explicitly request it via the "view" parameter of the Get/List request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recentCloneJobs")
    public CloneJob[] recentCloneJobs;
    public MigratingVm withRecentCloneJobs(CloneJob[] recentCloneJobs) {
        this.recentCloneJobs = recentCloneJobs;
        return this;
    }
    
    /**
     * Output only. The recent cutover jobs performed on the migrating VM. This field holds the vm's last completed cutover job and the vm's running cutover job, if one exists. Note: To have this field populated you need to explicitly request it via the "view" parameter of the Get/List request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recentCutoverJobs")
    public CutoverJob[] recentCutoverJobs;
    public MigratingVm withRecentCutoverJobs(CutoverJob[] recentCutoverJobs) {
        this.recentCutoverJobs = recentCutoverJobs;
        return this;
    }
    
    /**
     * The unique ID of the VM in the source. The VM's name in vSphere can be changed, so this is not the VM's name but rather its moRef id. This id is of the form vm-.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceVmId")
    public String sourceVmId;
    public MigratingVm withSourceVmId(String sourceVmId) {
        this.sourceVmId = sourceVmId;
        return this;
    }
    
    /**
     * Output only. State of the MigratingVm.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public MigratingVmStateEnum state;
    public MigratingVm withState(MigratingVmStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Output only. The last time the migrating VM state was updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stateTime")
    public String stateTime;
    public MigratingVm withStateTime(String stateTime) {
        this.stateTime = stateTime;
        return this;
    }
    
    /**
     * TargetVMDetails is a collection of details for creating a VM in a target Compute Engine project.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetDefaults")
    public TargetVMDetails targetDefaults;
    public MigratingVm withTargetDefaults(TargetVMDetails targetDefaults) {
        this.targetDefaults = targetDefaults;
        return this;
    }
    
    /**
     * Output only. The last time the migrating VM resource was updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;
    public MigratingVm withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
}
