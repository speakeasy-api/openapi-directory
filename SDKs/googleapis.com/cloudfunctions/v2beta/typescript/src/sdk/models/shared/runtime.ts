/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * The environment for the runtime.
 */
export enum RuntimeEnvironmentEnum {
  EnvironmentUnspecified = "ENVIRONMENT_UNSPECIFIED",
  Gen1 = "GEN_1",
  Gen2 = "GEN_2",
}

/**
 * The stage of life this runtime is in, e.g., BETA, GA, etc.
 */
export enum RuntimeStageEnum {
  RuntimeStageUnspecified = "RUNTIME_STAGE_UNSPECIFIED",
  Development = "DEVELOPMENT",
  Alpha = "ALPHA",
  Beta = "BETA",
  Ga = "GA",
  Deprecated = "DEPRECATED",
  Decommissioned = "DECOMMISSIONED",
}

/**
 * Describes a runtime and any special information (e.g., deprecation status) related to it.
 */
export class Runtime extends SpeakeasyBase {
  /**
   * The user facing name, eg 'Go 1.13', 'Node.js 12', etc.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "displayName" })
  displayName?: string;

  /**
   * The environment for the runtime.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "environment" })
  environment?: RuntimeEnvironmentEnum;

  /**
   * The name of the runtime, e.g., 'go113', 'nodejs12', etc.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * The stage of life this runtime is in, e.g., BETA, GA, etc.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "stage" })
  stage?: RuntimeStageEnum;

  /**
   * Warning messages, e.g., a deprecation warning.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "warnings" })
  warnings?: string[];
}
