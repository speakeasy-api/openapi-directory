// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type InstanceStateChangeReasonCodeEnum string

const (
	InstanceStateChangeReasonCodeEnumInternalError     InstanceStateChangeReasonCodeEnum = "INTERNAL_ERROR"
	InstanceStateChangeReasonCodeEnumValidationError   InstanceStateChangeReasonCodeEnum = "VALIDATION_ERROR"
	InstanceStateChangeReasonCodeEnumInstanceFailure   InstanceStateChangeReasonCodeEnum = "INSTANCE_FAILURE"
	InstanceStateChangeReasonCodeEnumBootstrapFailure  InstanceStateChangeReasonCodeEnum = "BOOTSTRAP_FAILURE"
	InstanceStateChangeReasonCodeEnumClusterTerminated InstanceStateChangeReasonCodeEnum = "CLUSTER_TERMINATED"
)

func (e *InstanceStateChangeReasonCodeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INTERNAL_ERROR":
		fallthrough
	case "VALIDATION_ERROR":
		fallthrough
	case "INSTANCE_FAILURE":
		fallthrough
	case "BOOTSTRAP_FAILURE":
		fallthrough
	case "CLUSTER_TERMINATED":
		*e = InstanceStateChangeReasonCodeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for InstanceStateChangeReasonCodeEnum: %s", s)
	}
}
