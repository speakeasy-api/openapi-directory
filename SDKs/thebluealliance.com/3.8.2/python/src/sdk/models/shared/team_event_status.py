"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import team_event_status_alliance as shared_team_event_status_alliance
from ..shared import team_event_status_playoff as shared_team_event_status_playoff
from ..shared import team_event_status_rank as shared_team_event_status_rank
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TeamEventStatus:
    r"""Successful response"""
    
    alliance: Optional[shared_team_event_status_alliance.TeamEventStatusAlliance] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alliance'), 'exclude': lambda f: f is None }})  
    alliance_status_str: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('alliance_status_str'), 'exclude': lambda f: f is None }})
    r"""An HTML formatted string suitable for display to the user containing the team's alliance pick status."""  
    last_match_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('last_match_key'), 'exclude': lambda f: f is None }})
    r"""TBA match key for the last match the team played in at this event, or null."""  
    next_match_key: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_match_key'), 'exclude': lambda f: f is None }})
    r"""TBA match key for the next match the team is scheduled to play in at this event, or null."""  
    overall_status_str: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('overall_status_str'), 'exclude': lambda f: f is None }})
    r"""An HTML formatted string suitable for display to the user containing the team's overall status summary of the event."""  
    playoff: Optional[shared_team_event_status_playoff.TeamEventStatusPlayoff] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('playoff'), 'exclude': lambda f: f is None }})
    r"""Playoff status for this team, may be null if the team did not make playoffs, or playoffs have not begun."""  
    playoff_status_str: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('playoff_status_str'), 'exclude': lambda f: f is None }})
    r"""An HTML formatter string suitable for display to the user containing the team's playoff status."""  
    qual: Optional[shared_team_event_status_rank.TeamEventStatusRank] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('qual'), 'exclude': lambda f: f is None }})  
    