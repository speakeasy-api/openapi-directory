// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

type CodeSourceTypeEnum string

const (
	CodeSourceTypeEnumPatientview CodeSourceTypeEnum = "PATIENTVIEW"
	CodeSourceTypeEnumNhsChoices  CodeSourceTypeEnum = "NHS_CHOICES"
)

func (e *CodeSourceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PATIENTVIEW":
		fallthrough
	case "NHS_CHOICES":
		*e = CodeSourceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CodeSourceTypeEnum: %s", s)
	}
}

type Code struct {
	Code                *string                `json:"code,omitempty"`
	CodeCategories      []CodeCategory         `json:"codeCategories,omitempty"`
	CodeType            *Lookup                `json:"codeType,omitempty"`
	Created             *time.Time             `json:"created,omitempty"`
	Description         *string                `json:"description,omitempty"`
	DisplayOrder        *int                   `json:"displayOrder,omitempty"`
	ExternalStandards   []CodeExternalStandard `json:"externalStandards,omitempty"`
	FullDescription     *string                `json:"fullDescription,omitempty"`
	HideFromPatients    *bool                  `json:"hideFromPatients,omitempty"`
	ID                  *int64                 `json:"id,omitempty"`
	LastUpdate          *time.Time             `json:"lastUpdate,omitempty"`
	Links               []Link                 `json:"links,omitempty"`
	PatientFriendlyName *string                `json:"patientFriendlyName,omitempty"`
	RemovedExternally   *bool                  `json:"removedExternally,omitempty"`
	SourceType          *CodeSourceTypeEnum    `json:"sourceType,omitempty"`
	StandardType        *Lookup                `json:"standardType,omitempty"`
}
