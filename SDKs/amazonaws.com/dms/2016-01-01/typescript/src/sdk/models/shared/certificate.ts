/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The SSL certificate that can be used to encrypt connections between the endpoints and the replication instance.
 */
export class Certificate extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CertificateArn" })
  certificateArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CertificateCreationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  certificateCreationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CertificateIdentifier" })
  certificateIdentifier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CertificateOwner" })
  certificateOwner?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CertificatePem" })
  certificatePem?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CertificateWallet" })
  certificateWallet?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "KeyLength" })
  keyLength?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "SigningAlgorithm" })
  signingAlgorithm?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ValidFromDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  validFromDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ValidToDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  validToDate?: Date;
}
