<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSON
{
    /**
     * Client id of the server if available.
     * 
     * @var ?string $clientId
     */
	#[\JMS\Serializer\Annotation\SerializedName('clientId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $clientId = null;
    
    /**
     * Attributes of the server when it's a device.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONDevice $device
     */
	#[\JMS\Serializer\Annotation\SerializedName('device')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONDevice')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONDevice $device = null;
    
    /**
     * IPv4 attributes of the server.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONIpv4 $ipv4
     */
	#[\JMS\Serializer\Annotation\SerializedName('ipv4')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONIpv4')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONIpv4 $ipv4 = null;
    
    /**
     * Whether the server is allowed or blocked. Always true for configured servers.
     * 
     * @var ?bool $isAllowed
     */
	#[\JMS\Serializer\Annotation\SerializedName('isAllowed')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isAllowed = null;
    
    /**
     * Whether the server is configured.
     * 
     * @var ?bool $isConfigured
     */
	#[\JMS\Serializer\Annotation\SerializedName('isConfigured')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $isConfigured = null;
    
    /**
     * Attributes of the server's last ack.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastAck $lastAck
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastAck')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastAck')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastAck $lastAck = null;
    
    /**
     * Last packet the server received.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastPacket $lastPacket
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastPacket')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastPacket')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONLastPacket $lastPacket = null;
    
    /**
     * Last time the server was seen.
     * 
     * @var ?\DateTime $lastSeenAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('lastSeenAt')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $lastSeenAt = null;
    
    /**
     * Mac address of the server.
     * 
     * @var ?string $mac
     */
	#[\JMS\Serializer\Annotation\SerializedName('mac')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $mac = null;
    
    /**
     * Devices that saw the server.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Operations\GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONSeenBy> $seenBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('seenBy')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Operations\GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONSeenBy>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $seenBy = null;
    
    /**
     * server type. Can be a 'device', 'stack', or 'discovered' (i.e client).
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Operations\GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?GetNetworkSwitchDhcpV4ServersSeen200ApplicationJSONTypeEnum $type = null;
    
    /**
     * Vlan id of the server.
     * 
     * @var ?int $vlan
     */
	#[\JMS\Serializer\Annotation\SerializedName('vlan')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $vlan = null;
    
	public function __construct()
	{
		$this->clientId = null;
		$this->device = null;
		$this->ipv4 = null;
		$this->isAllowed = null;
		$this->isConfigured = null;
		$this->lastAck = null;
		$this->lastPacket = null;
		$this->lastSeenAt = null;
		$this->mac = null;
		$this->seenBy = null;
		$this->type = null;
		$this->vlan = null;
	}
}
