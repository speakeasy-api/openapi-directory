// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// NotifyProvisionProductEngineWorkflowResultXAmzTargetEnum
type NotifyProvisionProductEngineWorkflowResultXAmzTargetEnum string

const (
	NotifyProvisionProductEngineWorkflowResultXAmzTargetEnumAws242ServiceCatalogServiceNotifyProvisionProductEngineWorkflowResult NotifyProvisionProductEngineWorkflowResultXAmzTargetEnum = "AWS242ServiceCatalogService.NotifyProvisionProductEngineWorkflowResult"
)

func (e NotifyProvisionProductEngineWorkflowResultXAmzTargetEnum) ToPointer() *NotifyProvisionProductEngineWorkflowResultXAmzTargetEnum {
	return &e
}

func (e *NotifyProvisionProductEngineWorkflowResultXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWS242ServiceCatalogService.NotifyProvisionProductEngineWorkflowResult":
		*e = NotifyProvisionProductEngineWorkflowResultXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NotifyProvisionProductEngineWorkflowResultXAmzTargetEnum: %v", v)
	}
}

type NotifyProvisionProductEngineWorkflowResultRequest struct {
	NotifyProvisionProductEngineWorkflowResultInput shared.NotifyProvisionProductEngineWorkflowResultInput   `request:"mediaType=application/json"`
	XAmzAlgorithm                                   *string                                                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                               *string                                                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                                  *string                                                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                                        *string                                                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                               *string                                                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                                   *string                                                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                               *string                                                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                                      NotifyProvisionProductEngineWorkflowResultXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type NotifyProvisionProductEngineWorkflowResultResponse struct {
	ContentType string
	// InvalidParametersException
	InvalidParametersException interface{}
	// Success
	NotifyProvisionProductEngineWorkflowResultOutput map[string]interface{}
	StatusCode                                       int
	RawResponse                                      *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
}
