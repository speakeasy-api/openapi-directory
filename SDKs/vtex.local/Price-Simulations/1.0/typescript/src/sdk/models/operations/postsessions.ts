/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * Contains every schema criteria. This is a serialized JSON object
 */
export class PostSessionsRequestBodyPublicCustomSessionKeys extends SpeakeasyBase {
  /**
   * Order Configuration criteria
   */
  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value: string;
}

/**
 * Object to register session criteria
 */
export class PostSessionsRequestBodyPublic extends SpeakeasyBase {
  /**
   * Contains every schema criteria. This is a serialized JSON object
   */
  @SpeakeasyMetadata()
  @Expose({ name: "customSessionKeys" })
  @Type(() => PostSessionsRequestBodyPublicCustomSessionKeys)
  customSessionKeys: PostSessionsRequestBodyPublicCustomSessionKeys;
}

export class PostSessionsRequestBody extends SpeakeasyBase {
  /**
   * Object to register session criteria
   */
  @SpeakeasyMetadata()
  @Expose({ name: "public" })
  @Type(() => PostSessionsRequestBodyPublic)
  public: PostSessionsRequestBodyPublic;
}

export class PostSessionsRequest extends SpeakeasyBase {
  /**
   * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand
   */
  @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=Accept" })
  accept: string;

  /**
   * Describes the type of the content being sent
   */
  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=Content-Type",
  })
  contentType: string;

  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody?: PostSessionsRequestBody;
}

export class PostSessionsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  postSessions200ApplicationJSONAny?: any;
}
