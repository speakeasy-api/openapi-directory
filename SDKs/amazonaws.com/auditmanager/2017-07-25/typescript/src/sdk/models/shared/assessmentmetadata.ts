/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AssessmentReportsDestination } from "./assessmentreportsdestination";
import { AssessmentStatusEnum } from "./assessmentstatusenum";
import { Delegation } from "./delegation";
import { Role } from "./role";
import { Scope } from "./scope";
import { Expose, Transform, Type } from "class-transformer";

/**
 *  The metadata that's associated with the specified assessment.
 */
export class AssessmentMetadata extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "assessmentReportsDestination" })
  @Type(() => AssessmentReportsDestination)
  assessmentReportsDestination?: AssessmentReportsDestination;

  @SpeakeasyMetadata()
  @Expose({ name: "complianceType" })
  complianceType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata({ elemType: Delegation })
  @Expose({ name: "delegations" })
  @Type(() => Delegation)
  delegations?: Delegation[];

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata({ elemType: Role })
  @Expose({ name: "roles" })
  @Type(() => Role)
  roles?: Role[];

  @SpeakeasyMetadata()
  @Expose({ name: "scope" })
  @Type(() => Scope)
  scope?: Scope;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: AssessmentStatusEnum;
}
