/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AnalysisTypeEnum } from "./analysistypeenum";
import { ConfigFileStateEnum } from "./configfilestateenum";
import { JobStateEnum } from "./jobstateenum";
import { Metrics } from "./metrics";
import { ProviderTypeEnum } from "./providertypeenum";
import { SourceCodeType } from "./sourcecodetype";
import { TypeEnum } from "./typeenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about a code review. A code review belongs to the associated repository that contains the reviewed code.
 */
export class CodeReview extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AnalysisTypes" })
  analysisTypes?: AnalysisTypeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "AssociationArn" })
  associationArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CodeReviewArn" })
  codeReviewArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ConfigFileState" })
  configFileState?: ConfigFileStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedTimeStamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTimeStamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedTimeStamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTimeStamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Metrics" })
  @Type(() => Metrics)
  metrics?: Metrics;

  @SpeakeasyMetadata()
  @Expose({ name: "Name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Owner" })
  owner?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProviderType" })
  providerType?: ProviderTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "PullRequestId" })
  pullRequestId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "RepositoryName" })
  repositoryName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceCodeType" })
  @Type(() => SourceCodeType)
  sourceCodeType?: SourceCodeType;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: JobStateEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StateReason" })
  stateReason?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: TypeEnum;
}
