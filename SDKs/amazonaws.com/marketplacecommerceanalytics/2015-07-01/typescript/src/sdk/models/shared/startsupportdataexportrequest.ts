/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { SupportDataSetTypeEnum } from "./supportdatasettypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Container for the parameters to the StartSupportDataExport operation.
 */
export class StartSupportDataExportRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "customerDefinedValues" })
  customerDefinedValues?: Record<string, string>;

  @SpeakeasyMetadata()
  @Expose({ name: "dataSetType" })
  dataSetType: SupportDataSetTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "destinationS3BucketName" })
  destinationS3BucketName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "destinationS3Prefix" })
  destinationS3Prefix?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fromDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  fromDate: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "roleNameArn" })
  roleNameArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "snsTopicArn" })
  snsTopicArn: string;
}
