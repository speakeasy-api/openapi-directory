/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class RepositoryConfigurationsListSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

export class RepositoryConfigurationsListRequest extends SpeakeasyBase {
  /**
   * The name of the application
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=app_name",
  })
  appName: string;

  /**
   * Include inactive configurations if none are active
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=includeInactive",
  })
  includeInactive?: boolean;

  /**
   * The name of the owner
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner_name",
  })
  ownerName: string;
}

/**
 * Bad Request
 */
export class RepositoryConfigurationsListDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * State of the configuration
 */
export enum RepositoryConfigurationsList200ApplicationJSONStateEnum {
  Unauthorized = "unauthorized",
  Inactive = "inactive",
  Active = "active",
}

export class RepositoryConfigurationsList200ApplicationJSON extends SpeakeasyBase {
  /**
   * The external user id from the repository provider. Required for GitLab.com repositories
   */
  @SpeakeasyMetadata()
  @Expose({ name: "external_user_id" })
  externalUserId?: string;

  /**
   * Repository configuration identifier
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The GitHub App Installation id. Required for repositories connected from GitHub App
   */
  @SpeakeasyMetadata()
  @Expose({ name: "installation_id" })
  installationId?: string;

  /**
   * The repository id from the repository provider. Required for repositories connected from GitHub App and GitLab.com
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repo_id" })
  repoId?: string;

  /**
   * The repository's git url, must be a HTTPS URL
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repo_url" })
  repoUrl: string;

  /**
   * The id of the service connection (private). Required for GitLab self-hosted repositories
   */
  @SpeakeasyMetadata()
  @Expose({ name: "service_connection_id" })
  serviceConnectionId?: string;

  /**
   * State of the configuration
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: RepositoryConfigurationsList200ApplicationJSONStateEnum;

  /**
   * Type of repository
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;

  /**
   * Email of the user who linked the repository
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user_email" })
  userEmail?: string;
}

export class RepositoryConfigurationsListResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * List of repository configurations
   */
  @SpeakeasyMetadata({
    elemType: RepositoryConfigurationsList200ApplicationJSON,
  })
  repositoryConfigurationsList200ApplicationJSONAnies?: RepositoryConfigurationsList200ApplicationJSON[];

  /**
   * Bad Request
   */
  @SpeakeasyMetadata()
  repositoryConfigurationsListDefaultApplicationJSONObject?: RepositoryConfigurationsListDefaultApplicationJSON;
}
