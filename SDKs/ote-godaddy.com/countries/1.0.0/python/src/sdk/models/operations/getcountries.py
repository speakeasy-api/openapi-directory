"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import countrysummary as shared_countrysummary
from ..shared import error as shared_error
from ..shared import errorlimit as shared_errorlimit
from enum import Enum
from typing import Optional

class GetCountriesOrderEnum(str, Enum):
    r"""The direction to sort the result countries by."""
    ASCENDING = 'ascending'
    DESCENDING = 'descending'

class GetCountriesSortEnum(str, Enum):
    r"""The term to sort the result countries by."""
    KEY = 'key'
    LABEL = 'label'


@dataclasses.dataclass
class GetCountriesRequest:
    
    market_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'marketId', 'style': 'form', 'explode': True }})
    r"""MarketId in which the request is being made, and for which responses should be localized"""  
    order: Optional[GetCountriesOrderEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'order', 'style': 'form', 'explode': True }})
    r"""The direction to sort the result countries by."""  
    region_name: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'regionName', 'style': 'form', 'explode': True }})
    r"""Restrict countries to this region name; required if regionTypeId is supplied"""  
    region_type_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'regionTypeId', 'style': 'form', 'explode': True }})
    r"""Restrict countries to this region type; required if regionName is supplied"""  
    sort: Optional[GetCountriesSortEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'sort', 'style': 'form', 'explode': True }})
    r"""The term to sort the result countries by."""  
    

@dataclasses.dataclass
class GetCountriesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    array_of_country_summary: Optional[list[shared_countrysummary.CountrySummary]] = dataclasses.field(default=None)
    r"""Request was successful"""  
    error: Optional[shared_error.Error] = dataclasses.field(default=None)
    r"""marketId is required<br>regionTypeId is not a valid integer<br>regionName is required when regionTypeId is provided<br>regionTypeId is required when regionName is provided"""  
    error_limit: Optional[shared_errorlimit.ErrorLimit] = dataclasses.field(default=None)
    r"""Too many requests received within interval"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    