// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type BigqueryJobsListSecurityOption1 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type BigqueryJobsListSecurityOption2 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type BigqueryJobsListSecurityOption3 struct {
	Oauth2  string `security:"scheme,type=oauth2,name=Authorization"`
	Oauth2c string `security:"scheme,type=oauth2,name=Authorization"`
}

type BigqueryJobsListSecurity struct {
	Option1 *BigqueryJobsListSecurityOption1 `security:"option"`
	Option2 *BigqueryJobsListSecurityOption2 `security:"option"`
	Option3 *BigqueryJobsListSecurityOption3 `security:"option"`
}

// BigqueryJobsListProjectionEnum - Restrict information returned to a set of selected fields
type BigqueryJobsListProjectionEnum string

const (
	BigqueryJobsListProjectionEnumFull    BigqueryJobsListProjectionEnum = "full"
	BigqueryJobsListProjectionEnumMinimal BigqueryJobsListProjectionEnum = "minimal"
)

func (e BigqueryJobsListProjectionEnum) ToPointer() *BigqueryJobsListProjectionEnum {
	return &e
}

func (e *BigqueryJobsListProjectionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "full":
		fallthrough
	case "minimal":
		*e = BigqueryJobsListProjectionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BigqueryJobsListProjectionEnum: %v", v)
	}
}

type BigqueryJobsListStateFilterEnum string

const (
	BigqueryJobsListStateFilterEnumDone    BigqueryJobsListStateFilterEnum = "done"
	BigqueryJobsListStateFilterEnumPending BigqueryJobsListStateFilterEnum = "pending"
	BigqueryJobsListStateFilterEnumRunning BigqueryJobsListStateFilterEnum = "running"
)

func (e BigqueryJobsListStateFilterEnum) ToPointer() *BigqueryJobsListStateFilterEnum {
	return &e
}

func (e *BigqueryJobsListStateFilterEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "done":
		fallthrough
	case "pending":
		fallthrough
	case "running":
		*e = BigqueryJobsListStateFilterEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BigqueryJobsListStateFilterEnum: %v", v)
	}
}

type BigqueryJobsListRequest struct {
	// Whether to display jobs owned by all users in the project. Default false
	AllUsers *bool `queryParam:"style=form,explode=true,name=allUsers"`
	// Data format for the response.
	Alt *shared.AltEnum `queryParam:"style=form,explode=true,name=alt"`
	// Selector specifying which fields to include in a partial response.
	Fields *string `queryParam:"style=form,explode=true,name=fields"`
	// API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
	Key *string `queryParam:"style=form,explode=true,name=key"`
	// Max value for job creation time, in milliseconds since the POSIX epoch. If set, only jobs created before or at this timestamp are returned
	MaxCreationTime *string `queryParam:"style=form,explode=true,name=maxCreationTime"`
	// Maximum number of results to return
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// Min value for job creation time, in milliseconds since the POSIX epoch. If set, only jobs created after or at this timestamp are returned
	MinCreationTime *string `queryParam:"style=form,explode=true,name=minCreationTime"`
	// OAuth 2.0 token for the current user.
	OauthToken *string `queryParam:"style=form,explode=true,name=oauth_token"`
	// Page token, returned by a previous call, to request the next page of results
	PageToken *string `queryParam:"style=form,explode=true,name=pageToken"`
	// If set, retrieves only jobs whose parent is this job. Otherwise, retrieves only jobs which have no parent
	ParentJobID *string `queryParam:"style=form,explode=true,name=parentJobId"`
	// Returns response with indentations and line breaks.
	PrettyPrint *bool `queryParam:"style=form,explode=true,name=prettyPrint"`
	// Project ID of the jobs to list
	ProjectID string `pathParam:"style=simple,explode=false,name=projectId"`
	// Restrict information returned to a set of selected fields
	Projection *BigqueryJobsListProjectionEnum `queryParam:"style=form,explode=true,name=projection"`
	// An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
	QuotaUser *string `queryParam:"style=form,explode=true,name=quotaUser"`
	// Filter for job state
	StateFilter []BigqueryJobsListStateFilterEnum `queryParam:"style=form,explode=true,name=stateFilter"`
	// Deprecated. Please use quotaUser instead.
	UserIP *string `queryParam:"style=form,explode=true,name=userIp"`
}

type BigqueryJobsListResponse struct {
	ContentType string
	// Successful response
	JobList     *shared.JobList
	StatusCode  int
	RawResponse *http.Response
}
