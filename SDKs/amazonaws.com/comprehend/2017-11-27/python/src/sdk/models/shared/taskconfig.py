"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import documentclassificationconfig as shared_documentclassificationconfig
from ..shared import entityrecognitionconfig as shared_entityrecognitionconfig
from ..shared import languagecode_enum as shared_languagecode_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TaskConfig:
    r"""Configuration about the custom classifier associated with the flywheel."""
    
    language_code: shared_languagecode_enum.LanguageCodeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LanguageCode') }})  
    document_classification_config: Optional[shared_documentclassificationconfig.DocumentClassificationConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DocumentClassificationConfig'), 'exclude': lambda f: f is None }})  
    entity_recognition_config: Optional[shared_entityrecognitionconfig.EntityRecognitionConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('EntityRecognitionConfig'), 'exclude': lambda f: f is None }})  
    