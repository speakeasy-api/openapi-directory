/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Media - The `Media` object contains a reference for most any media associated with a team or event on TBA.
 */
public class Media {
    /**
     * If required, a JSON dict of additional media information.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("details")
    public java.util.Map<String, Object> details;

    public Media withDetails(java.util.Map<String, Object> details) {
        this.details = details;
        return this;
    }
    
    /**
     * Direct URL to the media.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("direct_url")
    public String directUrl;

    public Media withDirectUrl(String directUrl) {
        this.directUrl = directUrl;
        return this;
    }
    
    /**
     * The key used to identify this media on the media site.
     */
    @JsonProperty("foreign_key")
    public String foreignKey;

    public Media withForeignKey(String foreignKey) {
        this.foreignKey = foreignKey;
        return this;
    }
    
    /**
     * True if the media is of high quality.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("preferred")
    public Boolean preferred;

    public Media withPreferred(Boolean preferred) {
        this.preferred = preferred;
        return this;
    }
    
    /**
     * String type of the media element.
     */
    @JsonProperty("type")
    public MediaTypeEnum type;

    public Media withType(MediaTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * The URL that leads to the full web page for the media, if one exists.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("view_url")
    public String viewUrl;

    public Media withViewUrl(String viewUrl) {
        this.viewUrl = viewUrl;
        return this;
    }
    
    public Media(@JsonProperty("foreign_key") String foreignKey, @JsonProperty("type") MediaTypeEnum type) {
        this.foreignKey = foreignKey;
        this.type = type;
  }
}
