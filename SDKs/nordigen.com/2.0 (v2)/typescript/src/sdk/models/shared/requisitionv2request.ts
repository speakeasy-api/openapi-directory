/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * RequisitionV2Serializer.
 */
export class RequisitionV2Request extends SpeakeasyBase {
  /**
   * option to enable account selection view for the end user
   */
  @SpeakeasyMetadata({
    data: "form, name=account_selection, multipart_form, name=account_selection",
  })
  @Expose({ name: "account_selection" })
  accountSelection?: boolean;

  /**
   * EUA associated with this requisition
   */
  @SpeakeasyMetadata({
    data: "form, name=agreement, multipart_form, name=agreement",
  })
  @Expose({ name: "agreement" })
  agreement?: string;

  /**
   * an Institution ID for this Requisition
   */
  @SpeakeasyMetadata({
    data: "form, name=institution_id, multipart_form, name=institution_id",
  })
  @Expose({ name: "institution_id" })
  institutionId: string;

  /**
   * redirect URL to your application after end-user authorization with ASPSP
   */
  @SpeakeasyMetadata({
    data: "form, name=redirect, multipart_form, name=redirect",
  })
  @Expose({ name: "redirect" })
  redirect: string;

  /**
   * enable redirect back to the client after account list received
   */
  @SpeakeasyMetadata({
    data: "form, name=redirect_immediate, multipart_form, name=redirect_immediate",
  })
  @Expose({ name: "redirect_immediate" })
  redirectImmediate?: boolean;

  /**
   * additional ID to identify the end user
   */
  @SpeakeasyMetadata({
    data: "form, name=reference, multipart_form, name=reference",
  })
  @Expose({ name: "reference" })
  reference?: string;

  /**
   * optional SSN field to verify ownership of the account
   */
  @SpeakeasyMetadata({ data: "form, name=ssn, multipart_form, name=ssn" })
  @Expose({ name: "ssn" })
  ssn?: string;

  /**
   * A two-letter country code (ISO 639-1)
   */
  @SpeakeasyMetadata({
    data: "form, name=user_language, multipart_form, name=user_language",
  })
  @Expose({ name: "user_language" })
  userLanguage?: string;
}
