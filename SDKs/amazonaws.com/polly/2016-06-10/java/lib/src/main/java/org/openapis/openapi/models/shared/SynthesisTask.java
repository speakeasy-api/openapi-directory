/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * SynthesisTask - SynthesisTask object that provides information about a speech synthesis task.
 */
public class SynthesisTask {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;
    public SynthesisTask withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Engine")
    public EngineEnum engine;
    public SynthesisTask withEngine(EngineEnum engine) {
        this.engine = engine;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LanguageCode")
    public LanguageCodeEnum languageCode;
    public SynthesisTask withLanguageCode(LanguageCodeEnum languageCode) {
        this.languageCode = languageCode;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LexiconNames")
    public String[] lexiconNames;
    public SynthesisTask withLexiconNames(String[] lexiconNames) {
        this.lexiconNames = lexiconNames;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OutputFormat")
    public OutputFormatEnum outputFormat;
    public SynthesisTask withOutputFormat(OutputFormatEnum outputFormat) {
        this.outputFormat = outputFormat;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OutputUri")
    public String outputUri;
    public SynthesisTask withOutputUri(String outputUri) {
        this.outputUri = outputUri;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("RequestCharacters")
    public Long requestCharacters;
    public SynthesisTask withRequestCharacters(Long requestCharacters) {
        this.requestCharacters = requestCharacters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SampleRate")
    public String sampleRate;
    public SynthesisTask withSampleRate(String sampleRate) {
        this.sampleRate = sampleRate;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SnsTopicArn")
    public String snsTopicArn;
    public SynthesisTask withSnsTopicArn(String snsTopicArn) {
        this.snsTopicArn = snsTopicArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SpeechMarkTypes")
    public SpeechMarkTypeEnum[] speechMarkTypes;
    public SynthesisTask withSpeechMarkTypes(SpeechMarkTypeEnum[] speechMarkTypes) {
        this.speechMarkTypes = speechMarkTypes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaskId")
    public String taskId;
    public SynthesisTask withTaskId(String taskId) {
        this.taskId = taskId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaskStatus")
    public TaskStatusEnum taskStatus;
    public SynthesisTask withTaskStatus(TaskStatusEnum taskStatus) {
        this.taskStatus = taskStatus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TaskStatusReason")
    public String taskStatusReason;
    public SynthesisTask withTaskStatusReason(String taskStatusReason) {
        this.taskStatusReason = taskStatusReason;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TextType")
    public TextTypeEnum textType;
    public SynthesisTask withTextType(TextTypeEnum textType) {
        this.textType = textType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("VoiceId")
    public VoiceIdEnum voiceId;
    public SynthesisTask withVoiceId(VoiceIdEnum voiceId) {
        this.voiceId = voiceId;
        return this;
    }
    
}
