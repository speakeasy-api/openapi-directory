/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { OpsItemDataValue } from "./opsitemdatavalue";
import { OpsItemStatusEnum } from "./opsitemstatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * A count of OpsItems.
 */
export class OpsItemSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "ActualEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  actualEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ActualStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  actualStartTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Category" })
  category?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedBy" })
  createdBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "CreatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedBy" })
  lastModifiedBy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LastModifiedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastModifiedTime?: Date;

  @SpeakeasyMetadata({ elemType: OpsItemDataValue })
  @Expose({ name: "OperationalData" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, OpsItemDataValue> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], OpsItemDataValue);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  operationalData?: Record<string, OpsItemDataValue>;

  @SpeakeasyMetadata()
  @Expose({ name: "OpsItemId" })
  opsItemId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OpsItemType" })
  opsItemType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PlannedEndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  plannedEndTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "PlannedStartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  plannedStartTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Priority" })
  priority?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Severity" })
  severity?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Source" })
  source?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: OpsItemStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Title" })
  title?: string;
}
