"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RecordingSettingUpdateResponse = exports.RecordingSettingUpdateRecordingSettings = exports.RecordingSettingUpdateRecordingSettingsShareRecordingEnum = exports.RecordingSettingUpdateRecordingSettingsApprovalTypeEnum = exports.RecordingSettingUpdateRequest = exports.RecordingSettingUpdateSecurity = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var RecordingSettingUpdateSecurity = /** @class */ (function (_super) {
    __extends(RecordingSettingUpdateSecurity, _super);
    function RecordingSettingUpdateSecurity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "security, scheme=true;type=oauth2;name=Authorization",
        }),
        __metadata("design:type", String)
    ], RecordingSettingUpdateSecurity.prototype, "oAuth", void 0);
    return RecordingSettingUpdateSecurity;
}(utils_1.SpeakeasyBase));
exports.RecordingSettingUpdateSecurity = RecordingSettingUpdateSecurity;
var RecordingSettingUpdateRequest = /** @class */ (function (_super) {
    __extends(RecordingSettingUpdateRequest, _super);
    function RecordingSettingUpdateRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=meetingId",
        }),
        __metadata("design:type", String)
    ], RecordingSettingUpdateRequest.prototype, "meetingId", void 0);
    return RecordingSettingUpdateRequest;
}(utils_1.SpeakeasyBase));
exports.RecordingSettingUpdateRequest = RecordingSettingUpdateRequest;
/**
 * Approval type for the registration.<br>
 *
 * @remarks
 * `0`- Automatically approve the registration when a user registers.<br>
 * `1` - Manually approve or deny the registration of a user.<br>
 * `2` - No registration required to view the recording.
 */
var RecordingSettingUpdateRecordingSettingsApprovalTypeEnum;
(function (RecordingSettingUpdateRecordingSettingsApprovalTypeEnum) {
    RecordingSettingUpdateRecordingSettingsApprovalTypeEnum["Zero"] = "0";
    RecordingSettingUpdateRecordingSettingsApprovalTypeEnum["One"] = "1";
    RecordingSettingUpdateRecordingSettingsApprovalTypeEnum["Two"] = "2";
})(RecordingSettingUpdateRecordingSettingsApprovalTypeEnum = exports.RecordingSettingUpdateRecordingSettingsApprovalTypeEnum || (exports.RecordingSettingUpdateRecordingSettingsApprovalTypeEnum = {}));
/**
 * Determine how the meeting recording is shared.
 */
var RecordingSettingUpdateRecordingSettingsShareRecordingEnum;
(function (RecordingSettingUpdateRecordingSettingsShareRecordingEnum) {
    RecordingSettingUpdateRecordingSettingsShareRecordingEnum["Publicly"] = "publicly";
    RecordingSettingUpdateRecordingSettingsShareRecordingEnum["Internally"] = "internally";
    RecordingSettingUpdateRecordingSettingsShareRecordingEnum["None"] = "none";
})(RecordingSettingUpdateRecordingSettingsShareRecordingEnum = exports.RecordingSettingUpdateRecordingSettingsShareRecordingEnum || (exports.RecordingSettingUpdateRecordingSettingsShareRecordingEnum = {}));
/**
 * **HTTP Status Code:** `200` <br>
 *
 * @remarks
 * Meeting recording settings returned
 */
var RecordingSettingUpdateRecordingSettings = /** @class */ (function (_super) {
    __extends(RecordingSettingUpdateRecordingSettings, _super);
    function RecordingSettingUpdateRecordingSettings() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "approval_type" }),
        __metadata("design:type", String)
    ], RecordingSettingUpdateRecordingSettings.prototype, "approvalType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authentication_domains" }),
        __metadata("design:type", String)
    ], RecordingSettingUpdateRecordingSettings.prototype, "authenticationDomains", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "authentication_option" }),
        __metadata("design:type", String)
    ], RecordingSettingUpdateRecordingSettings.prototype, "authenticationOption", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "on_demand" }),
        __metadata("design:type", Boolean)
    ], RecordingSettingUpdateRecordingSettings.prototype, "onDemand", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "password" }),
        __metadata("design:type", String)
    ], RecordingSettingUpdateRecordingSettings.prototype, "password", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "recording_authentication" }),
        __metadata("design:type", Boolean)
    ], RecordingSettingUpdateRecordingSettings.prototype, "recordingAuthentication", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "send_email_to_host" }),
        __metadata("design:type", Boolean)
    ], RecordingSettingUpdateRecordingSettings.prototype, "sendEmailToHost", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "share_recording" }),
        __metadata("design:type", String)
    ], RecordingSettingUpdateRecordingSettings.prototype, "shareRecording", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "show_social_share_buttons" }),
        __metadata("design:type", Boolean)
    ], RecordingSettingUpdateRecordingSettings.prototype, "showSocialShareButtons", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "topic" }),
        __metadata("design:type", String)
    ], RecordingSettingUpdateRecordingSettings.prototype, "topic", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "viewer_download" }),
        __metadata("design:type", Boolean)
    ], RecordingSettingUpdateRecordingSettings.prototype, "viewerDownload", void 0);
    return RecordingSettingUpdateRecordingSettings;
}(utils_1.SpeakeasyBase));
exports.RecordingSettingUpdateRecordingSettings = RecordingSettingUpdateRecordingSettings;
var RecordingSettingUpdateResponse = /** @class */ (function (_super) {
    __extends(RecordingSettingUpdateResponse, _super);
    function RecordingSettingUpdateResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], RecordingSettingUpdateResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], RecordingSettingUpdateResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", RecordingSettingUpdateRecordingSettings)
    ], RecordingSettingUpdateResponse.prototype, "recordingSettings", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], RecordingSettingUpdateResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], RecordingSettingUpdateResponse.prototype, "rawResponse", void 0);
    return RecordingSettingUpdateResponse;
}(utils_1.SpeakeasyBase));
exports.RecordingSettingUpdateResponse = RecordingSettingUpdateResponse;
