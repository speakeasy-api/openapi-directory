// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetGlobalwinescoresLatestColorEnum - The lowercase color of the wine.
type GetGlobalwinescoresLatestColorEnum string

const (
	GetGlobalwinescoresLatestColorEnumRed   GetGlobalwinescoresLatestColorEnum = "red"
	GetGlobalwinescoresLatestColorEnumWhite GetGlobalwinescoresLatestColorEnum = "white"
	GetGlobalwinescoresLatestColorEnumPink  GetGlobalwinescoresLatestColorEnum = "pink"
)

func (e *GetGlobalwinescoresLatestColorEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "red":
		fallthrough
	case "white":
		fallthrough
	case "pink":
		*e = GetGlobalwinescoresLatestColorEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGlobalwinescoresLatestColorEnum: %s", s)
	}
}

// GetGlobalwinescoresLatestOrderingEnum - Which field to use when ordering the results.
type GetGlobalwinescoresLatestOrderingEnum string

const (
	GetGlobalwinescoresLatestOrderingEnumDate       GetGlobalwinescoresLatestOrderingEnum = "date"
	GetGlobalwinescoresLatestOrderingEnumMinusDate  GetGlobalwinescoresLatestOrderingEnum = "-date"
	GetGlobalwinescoresLatestOrderingEnumScore      GetGlobalwinescoresLatestOrderingEnum = "score"
	GetGlobalwinescoresLatestOrderingEnumMinusScore GetGlobalwinescoresLatestOrderingEnum = "-score"
)

func (e *GetGlobalwinescoresLatestOrderingEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "date":
		fallthrough
	case "-date":
		fallthrough
	case "score":
		fallthrough
	case "-score":
		*e = GetGlobalwinescoresLatestOrderingEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetGlobalwinescoresLatestOrderingEnum: %s", s)
	}
}

type GetGlobalwinescoresLatestRequest struct {
	Authorization *string `header:"style=simple,explode=false,name=Authorization"`
	// The lowercase color of the wine.
	Color *GetGlobalwinescoresLatestColorEnum `queryParam:"style=form,explode=true,name=color"`
	// Only show the <a href="See https://en.wikipedia.org/wiki/En_primeur">en primeur</a> GlobalWineScores
	//
	IsPrimeurs *bool `queryParam:"style=form,explode=true,name=is_primeurs"`
	// Number of results to return per page.
	Limit *int64 `queryParam:"style=form,explode=true,name=limit"`
	// L-WIN wine identifier (See definition <a href="https://www.liv-ex.com/lwin/" target="_blank">here</a>)
	//
	Lwin *string `queryParam:"style=form,explode=true,name=lwin"`
	// L-WIN wine/vintage identifier (See definition <a href="https://www.liv-ex.com/lwin/" target="_blank">here</a>)
	//
	Lwin11 *string `queryParam:"style=form,explode=true,name=lwin_11"`
	// The initial index from which to return the results.
	Offset *int64 `queryParam:"style=form,explode=true,name=offset"`
	// Which field to use when ordering the results.
	Ordering *GetGlobalwinescoresLatestOrderingEnum `queryParam:"style=form,explode=true,name=ordering"`
	// The vintage you want to search against.
	Vintage *string `queryParam:"style=form,explode=true,name=vintage"`
	// The exact `id` of the wine. Can be used multiple times (e.g `?wine_id=114959&wine_id=114952`) <br/> If you need to find the `wine_id` for your wines, use our <a href="https://api.globalwinescore.com/search/" target="_blank">search page</a>
	//
	WineID []int64 `queryParam:"style=form,explode=true,name=wine_id"`
}

type GetGlobalwinescoresLatestResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
