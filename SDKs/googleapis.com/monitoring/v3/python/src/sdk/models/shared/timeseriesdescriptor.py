"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import labeldescriptor as shared_labeldescriptor
from ..shared import valuedescriptor as shared_valuedescriptor
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TimeSeriesDescriptor:
    r"""A descriptor for the labels and points in a time series."""
    
    label_descriptors: Optional[list[shared_labeldescriptor.LabelDescriptor]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('labelDescriptors'), 'exclude': lambda f: f is None }})
    r"""Descriptors for the labels."""  
    point_descriptors: Optional[list[shared_valuedescriptor.ValueDescriptor]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pointDescriptors'), 'exclude': lambda f: f is None }})
    r"""Descriptors for the point data value columns."""  
    