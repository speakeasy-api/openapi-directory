/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class UpdateNumberOfDomainControllersResponse {
    /**
     * ClientException
     */
    
    public Object clientException;

    public UpdateNumberOfDomainControllersResponse withClientException(Object clientException) {
        this.clientException = clientException;
        return this;
    }
    
    
    public String contentType;

    public UpdateNumberOfDomainControllersResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * DirectoryUnavailableException
     */
    
    public Object directoryUnavailableException;

    public UpdateNumberOfDomainControllersResponse withDirectoryUnavailableException(Object directoryUnavailableException) {
        this.directoryUnavailableException = directoryUnavailableException;
        return this;
    }
    
    /**
     * DomainControllerLimitExceededException
     */
    
    public Object domainControllerLimitExceededException;

    public UpdateNumberOfDomainControllersResponse withDomainControllerLimitExceededException(Object domainControllerLimitExceededException) {
        this.domainControllerLimitExceededException = domainControllerLimitExceededException;
        return this;
    }
    
    /**
     * EntityDoesNotExistException
     */
    
    public Object entityDoesNotExistException;

    public UpdateNumberOfDomainControllersResponse withEntityDoesNotExistException(Object entityDoesNotExistException) {
        this.entityDoesNotExistException = entityDoesNotExistException;
        return this;
    }
    
    /**
     * InvalidParameterException
     */
    
    public Object invalidParameterException;

    public UpdateNumberOfDomainControllersResponse withInvalidParameterException(Object invalidParameterException) {
        this.invalidParameterException = invalidParameterException;
        return this;
    }
    
    
    public Integer statusCode;

    public UpdateNumberOfDomainControllersResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public UpdateNumberOfDomainControllersResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * ServiceException
     */
    
    public Object serviceException;

    public UpdateNumberOfDomainControllersResponse withServiceException(Object serviceException) {
        this.serviceException = serviceException;
        return this;
    }
    
    /**
     * UnsupportedOperationException
     */
    
    public Object unsupportedOperationException;

    public UpdateNumberOfDomainControllersResponse withUnsupportedOperationException(Object unsupportedOperationException) {
        this.unsupportedOperationException = unsupportedOperationException;
        return this;
    }
    
    /**
     * Success
     */
    
    public java.util.Map<String, Object> updateNumberOfDomainControllersResult;

    public UpdateNumberOfDomainControllersResponse withUpdateNumberOfDomainControllersResult(java.util.Map<String, Object> updateNumberOfDomainControllersResult) {
        this.updateNumberOfDomainControllersResult = updateNumberOfDomainControllersResult;
        return this;
    }
    
    public UpdateNumberOfDomainControllersResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
