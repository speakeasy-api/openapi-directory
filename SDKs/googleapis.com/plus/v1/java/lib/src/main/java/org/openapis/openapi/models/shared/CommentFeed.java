/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CommentFeed - Successful response
 */
public class CommentFeed {
    /**
     * ETag of this response for caching purposes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public CommentFeed withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * The ID of this collection of comments.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;

    public CommentFeed withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * The comments in this page of results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("items")
    public Comment[] items;

    public CommentFeed withItems(Comment[] items) {
        this.items = items;
        return this;
    }
    
    /**
     * Identifies this resource as a collection of comments. Value: "plus#commentFeed".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;

    public CommentFeed withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Link to the next page of activities.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextLink")
    public String nextLink;

    public CommentFeed withNextLink(String nextLink) {
        this.nextLink = nextLink;
        return this;
    }
    
    /**
     * The continuation token, which is used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("nextPageToken")
    public String nextPageToken;

    public CommentFeed withNextPageToken(String nextPageToken) {
        this.nextPageToken = nextPageToken;
        return this;
    }
    
    /**
     * The title of this collection of comments.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("title")
    public String title;

    public CommentFeed withTitle(String title) {
        this.title = title;
        return this;
    }
    
    /**
     * The time at which this collection of comments was last updated. Formatted as an RFC 3339 timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated")
    public OffsetDateTime updated;

    public CommentFeed withUpdated(OffsetDateTime updated) {
        this.updated = updated;
        return this;
    }
    
    public CommentFeed(){}
}
