/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Picture } from "./picture";
import { Expose, Type } from "class-transformer";

/**
 * Information about the channels related to this category.
 */
export class CategoryMetadataConnectionsChannels extends SpeakeasyBase {
  /**
   * An array of HTTP methods permitted on this URI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "options" })
  options: string[];

  /**
   * The total number of channels on this connection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total: number;

  /**
   * The API URI that resolves to the connection data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri: string;
}

/**
 * Information about the groups related to this category.
 */
export class CategoryMetadataConnectionsGroups extends SpeakeasyBase {
  /**
   * An array of HTTP methods permitted on this URI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "options" })
  options: string[];

  /**
   * The total number of groups on this connection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total: number;

  /**
   * The API URI that resolves to the connection data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri: string;
}

/**
 * Information about the users related to this category.
 */
export class CategoryMetadataConnectionsUsers extends SpeakeasyBase {
  /**
   * An array of HTTP methods permitted on this URI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "options" })
  options: string[];

  /**
   * The total number of users on this connection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total: number;

  /**
   * The API URI that resolves to the connection data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri: string;
}

/**
 * Information about the videos related to this category.
 */
export class CategoryMetadataConnectionsVideos extends SpeakeasyBase {
  /**
   * An array of HTTP methods permitted on this URI.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "options" })
  options: string[];

  /**
   * The total number of videos on this connection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total: number;

  /**
   * The API URI that resolves to the connection data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri: string;
}

/**
 * A collection of information that is connected to this resource.
 */
export class CategoryMetadataConnections extends SpeakeasyBase {
  /**
   * Information about the channels related to this category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "channels" })
  @Type(() => CategoryMetadataConnectionsChannels)
  channels: CategoryMetadataConnectionsChannels;

  /**
   * Information about the groups related to this category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "groups" })
  @Type(() => CategoryMetadataConnectionsGroups)
  groups: CategoryMetadataConnectionsGroups;

  /**
   * Information about the users related to this category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "users" })
  @Type(() => CategoryMetadataConnectionsUsers)
  users: CategoryMetadataConnectionsUsers;

  /**
   * Information about the videos related to this category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "videos" })
  @Type(() => CategoryMetadataConnectionsVideos)
  videos: CategoryMetadataConnectionsVideos;
}

/**
 * An action indicating if the authenticated user has followed this category.
 */
export class CategoryMetadataInteractionsFollow extends SpeakeasyBase {
  /**
   * Whether the authenticated user has followed this category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "added" })
  added: boolean;

  /**
   * The time in ISO 8601 format that the user followed this category, or the null value if the user hasn't followed this category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "added_time" })
  addedTime: string;

  /**
   * The URI for following or unfollowing this category: PUT to this URI to follow the category, or DELETE to this URI to unfollow the category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri: string;
}

/**
 * The permissible actions related to the category.
 */
export class CategoryMetadataInteractions extends SpeakeasyBase {
  /**
   * An action indicating if the authenticated user has followed this category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "follow" })
  @Type(() => CategoryMetadataInteractionsFollow)
  follow: CategoryMetadataInteractionsFollow;
}

/**
 * Metadata about the category.
 */
export class CategoryMetadata extends SpeakeasyBase {
  /**
   * A collection of information that is connected to this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "connections" })
  @Type(() => CategoryMetadataConnections)
  connections: CategoryMetadataConnections;

  /**
   * The permissible actions related to the category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "interactions" })
  @Type(() => CategoryMetadataInteractions)
  interactions: CategoryMetadataInteractions;
}

/**
 * The container of this category's parent category, if the current category is a subcategory.
 */
export class CategoryParent extends SpeakeasyBase {
  /**
   * The URL to access the parent category in a browser.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link: string;

  /**
   * The display name that identifies the parent category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The unique identifier to access the parent of this category resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri: string;
}

export class CategorySubcategories extends SpeakeasyBase {
  /**
   * The URL to access the subcategory in a browser.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link: string;

  /**
   * The display name that identifies the subcategory.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The unique identifier to access the subcategory resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri: string;
}

/**
 * The category was returned.
 */
export class Category extends SpeakeasyBase {
  /**
   * The active icon for the category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "icon" })
  @Type(() => Picture)
  icon?: Picture;

  /**
   * The last time, in ISO 8601 format, that a video was featured.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "last_video_featured_time" })
  lastVideoFeaturedTime: string;

  /**
   * The URL to access the category in a browser.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link: string;

  /**
   * Metadata about the category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "metadata" })
  @Type(() => CategoryMetadata)
  metadata: CategoryMetadata;

  /**
   * The display name that identifies the category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The container of this category's parent category, if the current category is a subcategory.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent" })
  @Type(() => CategoryParent)
  parent: CategoryParent;

  /**
   * The active picture for this category; defaults to vertical color bars.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pictures" })
  @Type(() => Picture)
  pictures: Picture;

  /**
   * The resource key of the category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resource_key" })
  resourceKey: string;

  /**
   * All the subcategories that belong to this category, if the current category is a top-level parent.
   */
  @SpeakeasyMetadata({ elemType: CategorySubcategories })
  @Expose({ name: "subcategories" })
  @Type(() => CategorySubcategories)
  subcategories?: CategorySubcategories[];

  /**
   * Whether the category isn't a subcategory of another category.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "top_level" })
  topLevel: boolean;

  /**
   * The unique identifier to access the category resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "uri" })
  uri: string;
}
