/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DataRepositoryTaskStatus - Provides the task status showing a running total of the total number of files to be processed, the number successfully processed, and the number of files the task failed to process.
 */
public class DataRepositoryTaskStatus {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailedCount")
    public Long failedCount;
    public DataRepositoryTaskStatus withFailedCount(Long failedCount) {
        this.failedCount = failedCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastUpdatedTime")
    public OffsetDateTime lastUpdatedTime;
    public DataRepositoryTaskStatus withLastUpdatedTime(OffsetDateTime lastUpdatedTime) {
        this.lastUpdatedTime = lastUpdatedTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ReleasedCapacity")
    public Long releasedCapacity;
    public DataRepositoryTaskStatus withReleasedCapacity(Long releasedCapacity) {
        this.releasedCapacity = releasedCapacity;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SucceededCount")
    public Long succeededCount;
    public DataRepositoryTaskStatus withSucceededCount(Long succeededCount) {
        this.succeededCount = succeededCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("TotalCount")
    public Long totalCount;
    public DataRepositoryTaskStatus withTotalCount(Long totalCount) {
        this.totalCount = totalCount;
        return this;
    }
    
}
