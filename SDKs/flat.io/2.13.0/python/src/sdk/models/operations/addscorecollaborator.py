"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import flaterrorresponse as shared_flaterrorresponse
from ..shared import resourcecollaborator as shared_resourcecollaborator
from ..shared import resourcecollaboratorcreation as shared_resourcecollaboratorcreation
from typing import Optional


@dataclasses.dataclass
class AddScoreCollaboratorSecurity:
    
    o_auth2: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})  
    

@dataclasses.dataclass
class AddScoreCollaboratorRequest:
    
    resource_collaborator_creation: shared_resourcecollaboratorcreation.ResourceCollaboratorCreation = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    score: str = dataclasses.field(metadata={'path_param': { 'field_name': 'score', 'style': 'simple', 'explode': False }})
    r"""Unique identifier of the score document. This can be a Flat Score unique identifier (i.e. `ScoreDetails.id`) or, if the score is also a Google Drive file, the Drive file unique identifier prefixed with `drive-` (e.g. `drive-0B000000000`)."""  
    

@dataclasses.dataclass
class AddScoreCollaboratorResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    flat_error_response: Optional[shared_flaterrorresponse.FlatErrorResponse] = dataclasses.field(default=None)
    r"""Account overquota"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    resource_collaborator: Optional[shared_resourcecollaborator.ResourceCollaborator] = dataclasses.field(default=None)
    r"""The newly added collaborator metadata"""  
    