/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { MatchAlliance } from "./matchalliance";
import { Expose, Type } from "class-transformer";

/**
 * A list of alliances, the teams on the alliances, and their score.
 */
export class MatchSimpleAlliances extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "blue" })
  @Type(() => MatchAlliance)
  blue?: MatchAlliance;

  @SpeakeasyMetadata()
  @Expose({ name: "red" })
  @Type(() => MatchAlliance)
  red?: MatchAlliance;
}

/**
 * The competition level the match was played at.
 */
export enum MatchSimpleCompLevelEnum {
  Qm = "qm",
  Ef = "ef",
  Qf = "qf",
  Sf = "sf",
  F = "f",
}

/**
 * The color (red/blue) of the winning alliance. Will contain an empty string in the event of no winner, or a tie.
 */
export enum MatchSimpleWinningAllianceEnum {
  Red = "red",
  Blue = "blue",
  Unknown = "",
}

/**
 * Successful response
 */
export class MatchSimple extends SpeakeasyBase {
  /**
   * UNIX timestamp (seconds since 1-Jan-1970 00:00:00) of actual match start time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actual_time" })
  actualTime?: number;

  /**
   * A list of alliances, the teams on the alliances, and their score.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alliances" })
  @Type(() => MatchSimpleAlliances)
  alliances?: MatchSimpleAlliances;

  /**
   * The competition level the match was played at.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "comp_level" })
  compLevel: MatchSimpleCompLevelEnum;

  /**
   * Event key of the event the match was played at.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event_key" })
  eventKey: string;

  /**
   * TBA match key with the format `yyyy[EVENT_CODE]_[COMP_LEVEL]m[MATCH_NUMBER]`, where `yyyy` is the year, and `EVENT_CODE` is the event code of the event, `COMP_LEVEL` is (qm, ef, qf, sf, f), and `MATCH_NUMBER` is the match number in the competition level. A set number may append the competition level if more than one match in required per set.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "key" })
  key: string;

  /**
   * The match number of the match in the competition level.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "match_number" })
  matchNumber: number;

  /**
   * UNIX timestamp (seconds since 1-Jan-1970 00:00:00) of the TBA predicted match start time.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "predicted_time" })
  predictedTime?: number;

  /**
   * The set number in a series of matches where more than one match is required in the match series.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "set_number" })
  setNumber: number;

  /**
   * UNIX timestamp (seconds since 1-Jan-1970 00:00:00) of the scheduled match time, as taken from the published schedule.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "time" })
  time?: number;

  /**
   * The color (red/blue) of the winning alliance. Will contain an empty string in the event of no winner, or a tie.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "winning_alliance" })
  winningAlliance?: MatchSimpleWinningAllianceEnum;
}
