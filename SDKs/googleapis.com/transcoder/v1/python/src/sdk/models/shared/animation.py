"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import animationend as shared_animationend
from ..shared import animationfade as shared_animationfade
from ..shared import animationstatic as shared_animationstatic
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Animation:
    r"""Animation types."""
    
    animation_end: Optional[shared_animationend.AnimationEnd] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('animationEnd'), 'exclude': lambda f: f is None }})
    r"""End previous overlay animation from the video. Without AnimationEnd, the overlay object will keep the state of previous animation until the end of the video."""  
    animation_fade: Optional[shared_animationfade.AnimationFade] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('animationFade'), 'exclude': lambda f: f is None }})
    r"""Display overlay object with fade animation."""  
    animation_static: Optional[shared_animationstatic.AnimationStatic] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('animationStatic'), 'exclude': lambda f: f is None }})
    r"""Display static overlay object."""  
    