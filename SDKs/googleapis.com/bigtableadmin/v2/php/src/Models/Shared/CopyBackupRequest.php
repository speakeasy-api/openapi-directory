<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * CopyBackupRequest - The request for CopyBackup.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class CopyBackupRequest
{
    /**
     * Required. The id of the new backup. The `backup_id` along with `parent` are combined as {parent}/backups/{backup_id} to create the full backup name, of the form: `projects/{project}/instances/{instance}/clusters/{cluster}/backups/{backup_id}`. This string must be between 1 and 50 characters in length and match the regex _a-zA-Z0-9*.
     * 
     * @var ?string $backupId
     */
	#[\JMS\Serializer\Annotation\SerializedName('backupId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $backupId = null;
    
    /**
     * Required. Required. The expiration time of the copied backup with microsecond granularity that must be at least 6 hours and at most 30 days from the time the request is received. Once the `expire_time` has passed, Cloud Bigtable will delete the backup and free the resources used by the backup.
     * 
     * @var ?string $expireTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('expireTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $expireTime = null;
    
    /**
     * Required. The source backup to be copied from. The source backup needs to be in READY state for it to be copied. Copying a copied backup is not allowed. Once CopyBackup is in progress, the source backup cannot be deleted or cleaned up on expiration until CopyBackup is finished. Values are of the form: `projects//instances//clusters//backups/`.
     * 
     * @var ?string $sourceBackup
     */
	#[\JMS\Serializer\Annotation\SerializedName('sourceBackup')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceBackup = null;
    
	public function __construct()
	{
		$this->backupId = null;
		$this->expireTime = null;
		$this->sourceBackup = null;
	}
}
