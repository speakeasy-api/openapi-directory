// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DescribeCustomRoutingListenerXAmzTargetEnum
type DescribeCustomRoutingListenerXAmzTargetEnum string

const (
	DescribeCustomRoutingListenerXAmzTargetEnumGlobalAcceleratorV20180706DescribeCustomRoutingListener DescribeCustomRoutingListenerXAmzTargetEnum = "GlobalAccelerator_V20180706.DescribeCustomRoutingListener"
)

func (e DescribeCustomRoutingListenerXAmzTargetEnum) ToPointer() *DescribeCustomRoutingListenerXAmzTargetEnum {
	return &e
}

func (e *DescribeCustomRoutingListenerXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GlobalAccelerator_V20180706.DescribeCustomRoutingListener":
		*e = DescribeCustomRoutingListenerXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DescribeCustomRoutingListenerXAmzTargetEnum: %v", v)
	}
}

type DescribeCustomRoutingListenerRequest struct {
	DescribeCustomRoutingListenerRequest shared.DescribeCustomRoutingListenerRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                       *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                             *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken                    *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                        *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders                    *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                           DescribeCustomRoutingListenerXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DescribeCustomRoutingListenerResponse struct {
	ContentType string
	// Success
	DescribeCustomRoutingListenerResponse *shared.DescribeCustomRoutingListenerResponse
	// InternalServiceErrorException
	InternalServiceErrorException interface{}
	// InvalidArgumentException
	InvalidArgumentException interface{}
	// ListenerNotFoundException
	ListenerNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
}
