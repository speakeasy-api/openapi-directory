<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AggregationQuery - Datastore query for running an aggregation over a Query.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AggregationQuery
{
    /**
     * Optional. Series of aggregations to apply over the results of the `nested_query`. Requires: * A minimum of one and maximum of five aggregations per query.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Aggregation> $aggregations
     */
	#[\JMS\Serializer\Annotation\SerializedName('aggregations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Aggregation>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $aggregations = null;
    
    /**
     * A query for entities.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Query $nestedQuery
     */
	#[\JMS\Serializer\Annotation\SerializedName('nestedQuery')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Query')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Query $nestedQuery = null;
    
	public function __construct()
	{
		$this->aggregations = null;
		$this->nestedQuery = null;
	}
}
