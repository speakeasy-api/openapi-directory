/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ItemUpdate - A JSON object containing item information
 */
public class ItemUpdate {
    /**
     * Object containing the new configuration. This will be applied automatically when the values are valid.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("config_request")
    public java.util.Map<String, Object> configRequest;

    public ItemUpdate withConfigRequest(java.util.Map<String, Object> configRequest) {
        this.configRequest = configRequest;
        return this;
    }
    
    /**
     * The `custom` value is only for your custom references, you may use it to save additional attributes. The custom value is not used in any other place. This field may contain any datatype that you like: null (default), string, integer, boolean, object etc...
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("custom")
    public Object custom;

    public ItemUpdate withCustom(Object custom) {
        this.custom = custom;
        return this;
    }
    
    /**
     * A name or a label for this resource. This is used in the user interface, may be empty.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("label")
    public String label;

    public ItemUpdate withLabel(String label) {
        this.label = label;
        return this;
    }
    
    /**
     * Instruction for the location engine to forcibly localize the item at the specified location id as soon as possible. Cleared automatically.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location_request")
    public String locationRequest;

    public ItemUpdate withLocationRequest(String locationRequest) {
        this.locationRequest = locationRequest;
        return this;
    }
    
    /**
     * Object of searchable metadata for this resource. Can be freely used to store metadata properties.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("metadata")
    public java.util.Map<String, Object> metadata;

    public ItemUpdate withMetadata(java.util.Map<String, Object> metadata) {
        this.metadata = metadata;
        return this;
    }
    
    public ItemUpdate(){}
}
