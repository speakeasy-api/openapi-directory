// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// DeleteVappSnapshotV1LocationEnum - Location of the snapshot to delete. Use _local_ to delete only the local copy of the snapshot. Use _all_ to delete the snapshot locally, on a replication target, and at an archival location.
type DeleteVappSnapshotV1LocationEnum string

const (
	DeleteVappSnapshotV1LocationEnumAll   DeleteVappSnapshotV1LocationEnum = "all"
	DeleteVappSnapshotV1LocationEnumLocal DeleteVappSnapshotV1LocationEnum = "local"
)

func (e DeleteVappSnapshotV1LocationEnum) ToPointer() *DeleteVappSnapshotV1LocationEnum {
	return &e
}

func (e *DeleteVappSnapshotV1LocationEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "all":
		fallthrough
	case "local":
		*e = DeleteVappSnapshotV1LocationEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteVappSnapshotV1LocationEnum: %v", v)
	}
}

type DeleteVappSnapshotV1Request struct {
	// ID assigned to a snapshot object.
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Location of the snapshot to delete. Use _local_ to delete only the local copy of the snapshot. Use _all_ to delete the snapshot locally, on a replication target, and at an archival location.
	Location DeleteVappSnapshotV1LocationEnum `queryParam:"style=form,explode=true,name=location"`
}

type DeleteVappSnapshotV1Response struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
