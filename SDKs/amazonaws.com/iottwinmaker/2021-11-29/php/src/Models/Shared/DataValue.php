<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DataValue - An object that specifies a value for a property.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DataValue
{
	#[\JMS\Serializer\Annotation\SerializedName('booleanValue')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $booleanValue = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('doubleValue')]
    #[\JMS\Serializer\Annotation\Type('float')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?float $doubleValue = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('expression')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $expression = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('integerValue')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $integerValue = null;
    
    /**
     * $listValue
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\DataValue> $listValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('listValue')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\DataValue>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $listValue = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('longValue')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $longValue = null;
    
    /**
     * $mapValue
     * 
     * @var ?array<string, \OpenAPI\OpenAPI\Models\Shared\DataValue> $mapValue
     */
	#[\JMS\Serializer\Annotation\SerializedName('mapValue')]
    #[\JMS\Serializer\Annotation\Type('array<string, OpenAPI\OpenAPI\Models\Shared\DataValue>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $mapValue = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('relationshipValue')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RelationshipValue')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?RelationshipValue $relationshipValue = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('stringValue')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $stringValue = null;
    
	public function __construct()
	{
		$this->booleanValue = null;
		$this->doubleValue = null;
		$this->expression = null;
		$this->integerValue = null;
		$this->listValue = null;
		$this->longValue = null;
		$this->mapValue = null;
		$this->relationshipValue = null;
		$this->stringValue = null;
	}
}
