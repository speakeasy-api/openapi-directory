"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import enginetype_enum as shared_enginetype_enum
from ..shared import environmentlifecycle_enum as shared_environmentlifecycle_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EnvironmentSummary:
    r"""Contains a subset of the possible runtime environment attributes. Used in the environment list."""
    
    creation_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creationTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    engine_type: shared_enginetype_enum.EngineTypeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('engineType') }})  
    engine_version: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('engineVersion') }})  
    environment_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('environmentArn') }})  
    environment_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('environmentId') }})  
    instance_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instanceType') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    status: shared_environmentlifecycle_enum.EnvironmentLifecycleEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})  
    