"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Any, Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkApplianceTrafficShapingRequestBodyGlobalBandwidthLimits:
    r"""Global per-client bandwidth limit"""
    
    limit_down: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('limitDown'), 'exclude': lambda f: f is None }})
    r"""The download bandwidth limit in Kbps. (0 represents no limit.)"""  
    limit_up: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('limitUp'), 'exclude': lambda f: f is None }})
    r"""The upload bandwidth limit in Kbps. (0 represents no limit.)"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateNetworkApplianceTrafficShapingRequestBody:
    
    global_bandwidth_limits: Optional[UpdateNetworkApplianceTrafficShapingRequestBodyGlobalBandwidthLimits] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('globalBandwidthLimits'), 'exclude': lambda f: f is None }})
    r"""Global per-client bandwidth limit"""  
    

@dataclasses.dataclass
class UpdateNetworkApplianceTrafficShapingRequest:
    
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    request_body: Optional[UpdateNetworkApplianceTrafficShapingRequestBody] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class UpdateNetworkApplianceTrafficShapingResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    update_network_appliance_traffic_shaping_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    