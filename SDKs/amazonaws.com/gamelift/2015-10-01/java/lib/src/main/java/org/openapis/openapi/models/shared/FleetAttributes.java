/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * FleetAttributes - &lt;p&gt;Describes a Amazon GameLift fleet of game hosting resources.&lt;/p&gt; &lt;p&gt; &lt;b&gt;Related actions&lt;/b&gt; &lt;/p&gt;
 */
public class FleetAttributes {
    /**
     * Amazon GameLift Anywhere configuration options for your Anywhere fleets.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AnywhereConfiguration")
    public AnywhereConfiguration anywhereConfiguration;

    public FleetAttributes withAnywhereConfiguration(AnywhereConfiguration anywhereConfiguration) {
        this.anywhereConfiguration = anywhereConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BuildArn")
    public String buildArn;

    public FleetAttributes withBuildArn(String buildArn) {
        this.buildArn = buildArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("BuildId")
    public String buildId;

    public FleetAttributes withBuildId(String buildId) {
        this.buildId = buildId;
        return this;
    }
    
    /**
     * Determines whether a TLS/SSL certificate is generated for a fleet. This feature must be enabled when creating the fleet. All instances in a fleet share the same certificate. The certificate can be retrieved by calling the &lt;a href="https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-serversdk.html"&gt;Amazon GameLift Server SDK&lt;/a&gt; operation &lt;code&gt;GetInstanceCertificate&lt;/code&gt;. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CertificateConfiguration")
    public CertificateConfiguration certificateConfiguration;

    public FleetAttributes withCertificateConfiguration(CertificateConfiguration certificateConfiguration) {
        this.certificateConfiguration = certificateConfiguration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ComputeType")
    public ComputeTypeEnum computeType;

    public FleetAttributes withComputeType(ComputeTypeEnum computeType) {
        this.computeType = computeType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreationTime")
    public OffsetDateTime creationTime;

    public FleetAttributes withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;

    public FleetAttributes withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FleetArn")
    public String fleetArn;

    public FleetAttributes withFleetArn(String fleetArn) {
        this.fleetArn = fleetArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FleetId")
    public String fleetId;

    public FleetAttributes withFleetId(String fleetId) {
        this.fleetId = fleetId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FleetType")
    public FleetTypeEnum fleetType;

    public FleetAttributes withFleetType(FleetTypeEnum fleetType) {
        this.fleetType = fleetType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstanceRoleArn")
    public String instanceRoleArn;

    public FleetAttributes withInstanceRoleArn(String instanceRoleArn) {
        this.instanceRoleArn = instanceRoleArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("InstanceType")
    public Ec2InstanceTypeEnum instanceType;

    public FleetAttributes withInstanceType(Ec2InstanceTypeEnum instanceType) {
        this.instanceType = instanceType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("LogPaths")
    public String[] logPaths;

    public FleetAttributes withLogPaths(String[] logPaths) {
        this.logPaths = logPaths;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MetricGroups")
    public String[] metricGroups;

    public FleetAttributes withMetricGroups(String[] metricGroups) {
        this.metricGroups = metricGroups;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Name")
    public String name;

    public FleetAttributes withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("NewGameSessionProtectionPolicy")
    public ProtectionPolicyEnum newGameSessionProtectionPolicy;

    public FleetAttributes withNewGameSessionProtectionPolicy(ProtectionPolicyEnum newGameSessionProtectionPolicy) {
        this.newGameSessionProtectionPolicy = newGameSessionProtectionPolicy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("OperatingSystem")
    public OperatingSystemEnum operatingSystem;

    public FleetAttributes withOperatingSystem(OperatingSystemEnum operatingSystem) {
        this.operatingSystem = operatingSystem;
        return this;
    }
    
    /**
     * &lt;p&gt;A policy that puts limits on the number of game sessions that a player can create within a specified span of time. With this policy, you can control players' ability to consume available resources.&lt;/p&gt; &lt;p&gt;The policy is evaluated when a player tries to create a new game session. On receiving a &lt;code&gt;CreateGameSession&lt;/code&gt; request, Amazon GameLift checks that the player (identified by &lt;code&gt;CreatorId&lt;/code&gt;) has created fewer than game session limit in the specified time period.&lt;/p&gt;
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ResourceCreationLimitPolicy")
    public ResourceCreationLimitPolicy resourceCreationLimitPolicy;

    public FleetAttributes withResourceCreationLimitPolicy(ResourceCreationLimitPolicy resourceCreationLimitPolicy) {
        this.resourceCreationLimitPolicy = resourceCreationLimitPolicy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ScriptArn")
    public String scriptArn;

    public FleetAttributes withScriptArn(String scriptArn) {
        this.scriptArn = scriptArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ScriptId")
    public String scriptId;

    public FleetAttributes withScriptId(String scriptId) {
        this.scriptId = scriptId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ServerLaunchParameters")
    public String serverLaunchParameters;

    public FleetAttributes withServerLaunchParameters(String serverLaunchParameters) {
        this.serverLaunchParameters = serverLaunchParameters;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ServerLaunchPath")
    public String serverLaunchPath;

    public FleetAttributes withServerLaunchPath(String serverLaunchPath) {
        this.serverLaunchPath = serverLaunchPath;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Status")
    public FleetStatusEnum status;

    public FleetAttributes withStatus(FleetStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StoppedActions")
    public FleetActionEnum[] stoppedActions;

    public FleetAttributes withStoppedActions(FleetActionEnum[] stoppedActions) {
        this.stoppedActions = stoppedActions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("TerminationTime")
    public OffsetDateTime terminationTime;

    public FleetAttributes withTerminationTime(OffsetDateTime terminationTime) {
        this.terminationTime = terminationTime;
        return this;
    }
    
    public FleetAttributes(){}
}
