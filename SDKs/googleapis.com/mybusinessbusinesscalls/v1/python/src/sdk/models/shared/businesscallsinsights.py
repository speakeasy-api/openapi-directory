"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import aggregatemetrics as shared_aggregatemetrics
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class BusinessCallsInsightsMetricTypeEnum(str, Enum):
    r"""The metric for which the value applies."""
    METRIC_TYPE_UNSPECIFIED = 'METRIC_TYPE_UNSPECIFIED'
    AGGREGATE_COUNT = 'AGGREGATE_COUNT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BusinessCallsInsights:
    r"""Insights for calls made to a location."""
    
    aggregate_metrics: Optional[shared_aggregatemetrics.AggregateMetrics] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aggregateMetrics'), 'exclude': lambda f: f is None }})
    r"""Metrics aggregated over the input time range."""  
    metric_type: Optional[BusinessCallsInsightsMetricTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('metricType'), 'exclude': lambda f: f is None }})
    r"""The metric for which the value applies."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Required. The resource name of the calls insights. Format: locations/{location}/businesscallsinsights"""  
    