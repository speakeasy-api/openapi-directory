/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * A string->string map value that can hold a map of string keys to string values. The maximum length of each string is 200 characters and there can be a maximum of 50 key-value pairs in the map.
 */
export class GoogleCloudResourcesettingsV1ValueStringMap extends SpeakeasyBase {
  /**
   * The key-value pairs in the map
   */
  @SpeakeasyMetadata()
  @Expose({ name: "mappings" })
  mappings?: Record<string, string>;
}
