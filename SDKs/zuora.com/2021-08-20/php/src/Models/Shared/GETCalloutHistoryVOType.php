<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class GETCalloutHistoryVOType
{
    /**
     * The number of times the callout was retried.
     * 
     * 
     * 
     * @var ?string $attemptedNum
     */
	#[\JMS\Serializer\Annotation\SerializedName('attemptedNum')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $attemptedNum = null;
    
    /**
     * The time that the calloutHistory record was made.
     * 
     * 
     * 
     * @var ?string $createTime
     */
	#[\JMS\Serializer\Annotation\SerializedName('createTime')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $createTime = null;
    
    /**
     * The event category for the callout.
     * 
     * 
     * 
     * @var ?string $eventCategory
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventCategory')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventCategory = null;
    
    /**
     * The context of the callout event.
     * 
     * 
     * 
     * @var ?string $eventContext
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventContext')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventContext = null;
    
    /**
     * The name of the notification.
     * 
     * 
     * 
     * @var ?string $notification
     */
	#[\JMS\Serializer\Annotation\SerializedName('notification')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $notification = null;
    
    /**
     * The request method set in notifications settings.
     * 
     * 
     * 
     * @var ?string $requestMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('requestMethod')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $requestMethod = null;
    
    /**
     * The base url set in notifications settings.
     * 
     * 
     * 
     * @var ?string $requestUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('requestUrl')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $requestUrl = null;
    
    /**
     * The responseCode of the request.
     * 
     * 
     * 
     * @var ?string $responseCode
     */
	#[\JMS\Serializer\Annotation\SerializedName('responseCode')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $responseCode = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('responseContent')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $responseContent = null;
    
	public function __construct()
	{
		$this->attemptedNum = null;
		$this->createTime = null;
		$this->eventCategory = null;
		$this->eventContext = null;
		$this->notification = null;
		$this->requestMethod = null;
		$this->requestUrl = null;
		$this->responseCode = null;
		$this->responseContent = null;
	}
}
