// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type GETListsBestSellersHistoryJSONSecurity struct {
	APIKey string `security:"scheme,type=apiKey,subtype=query,name=api-key"`
}

type GETListsBestSellersHistoryJSONRequest struct {
	// The target age group for the best seller.
	AgeGroup *string `queryParam:"style=form,explode=true,name=age-group"`
	// The author of the best seller. The author field does not include additional contributors (see Data Structure for more details about the author and contributor fields).
	//
	// When searching the author field, you can specify any combination of first, middle and last names.
	//
	// When sort-by is set to author, the results will be sorted by author's first name.
	Author *string `queryParam:"style=form,explode=true,name=author"`
	// The author of the best seller, as well as other contributors such as the illustrator (to search or sort by author name only, use author instead).
	//
	// When searching, you can specify any combination of first, middle and last names of any of the contributors.
	//
	// When sort-by is set to contributor, the results will be sorted by the first name of the first contributor listed.
	Contributor *string `queryParam:"style=form,explode=true,name=contributor"`
	// International Standard Book Number, 10 or 13 digits
	//
	// A best seller may have both 10-digit and 13-digit ISBNs, and may have multiple ISBNs of each type. To search on multiple ISBNs, separate the ISBNs with semicolons (example: 9780446579933;0061374229).
	Isbn *string `queryParam:"style=form,explode=true,name=isbn"`
	// The publisher's list price of the best seller, including decimal point
	Price *string `queryParam:"style=form,explode=true,name=price"`
	// The standardized name of the publisher
	Publisher *string `queryParam:"style=form,explode=true,name=publisher"`
	// The title of the best seller
	//
	// When searching, you can specify a portion of a title or a full title.
	Title *string `queryParam:"style=form,explode=true,name=title"`
}

type GETListsBestSellersHistoryJSON200ApplicationJSONResultsIsbns struct {
	Isbn10 *string `json:"isbn10,omitempty"`
	Isbn13 *string `json:"isbn13,omitempty"`
}

type GETListsBestSellersHistoryJSON200ApplicationJSONResultsRanksHistory struct {
	Asterisk        *int64      `json:"asterisk,omitempty"`
	BestsellersDate *string     `json:"bestsellers_date,omitempty"`
	Dagger          *int64      `json:"dagger,omitempty"`
	DisplayName     *string     `json:"display_name,omitempty"`
	ListName        *string     `json:"list_name,omitempty"`
	PrimaryIsbn10   *string     `json:"primary_isbn10,omitempty"`
	PrimaryIsbn13   *string     `json:"primary_isbn13,omitempty"`
	PublishedDate   *string     `json:"published_date,omitempty"`
	Rank            *int64      `json:"rank,omitempty"`
	RanksLastWeek   interface{} `json:"ranks_last_week,omitempty"`
	WeeksOnList     *int64      `json:"weeks_on_list,omitempty"`
}

type GETListsBestSellersHistoryJSON200ApplicationJSONResultsReviews struct {
	ArticleChapterLink *string `json:"article_chapter_link,omitempty"`
	BookReviewLink     *string `json:"book_review_link,omitempty"`
	FirstChapterLink   *string `json:"first_chapter_link,omitempty"`
	SundayReviewLink   *string `json:"sunday_review_link,omitempty"`
}

type GETListsBestSellersHistoryJSON200ApplicationJSONResults struct {
	AgeGroup        *string                                                               `json:"age_group,omitempty"`
	Author          *string                                                               `json:"author,omitempty"`
	Contributor     *string                                                               `json:"contributor,omitempty"`
	ContributorNote *string                                                               `json:"contributor_note,omitempty"`
	Description     *string                                                               `json:"description,omitempty"`
	Isbns           []GETListsBestSellersHistoryJSON200ApplicationJSONResultsIsbns        `json:"isbns,omitempty"`
	Price           *int64                                                                `json:"price,omitempty"`
	Publisher       *string                                                               `json:"publisher,omitempty"`
	RanksHistory    []GETListsBestSellersHistoryJSON200ApplicationJSONResultsRanksHistory `json:"ranks_history,omitempty"`
	Reviews         []GETListsBestSellersHistoryJSON200ApplicationJSONResultsReviews      `json:"reviews,omitempty"`
	Title           *string                                                               `json:"title,omitempty"`
}

type GETListsBestSellersHistoryJSON200ApplicationJSON struct {
	Copyright  *string                                                   `json:"copyright,omitempty"`
	NumResults *int64                                                    `json:"num_results,omitempty"`
	Results    []GETListsBestSellersHistoryJSON200ApplicationJSONResults `json:"results,omitempty"`
	Status     *string                                                   `json:"status,omitempty"`
}

type GETListsBestSellersHistoryJSONResponse struct {
	ContentType                                            string
	GETListsBestSellersHistoryJSON200ApplicationJSONObject *GETListsBestSellersHistoryJSON200ApplicationJSON
	StatusCode                                             int
	RawResponse                                            *http.Response
}
