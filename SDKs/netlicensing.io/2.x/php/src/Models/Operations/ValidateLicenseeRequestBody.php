<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ValidateLicenseeRequestBody
{
    /**
     * 'Floating' licensing model: check-out or check-in session action, to allocate or return it from/to the pool of available sessions
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ValidateLicenseeRequestBodyActionEnum $action
     */
	#[SpeakeasyMetadata('form:name=action')]
    public ?ValidateLicenseeRequestBodyActionEnum $action = null;
    
    /**
     * Human-readable name for the auto-created Licensee (will be set as custom Licensee property)
     * 
     * @var ?string $licenseeName
     */
	#[SpeakeasyMetadata('form:name=licenseeName')]
    public ?string $licenseeName = null;
    
    /**
     * 'Node-Locked' licensing model: specifies unique secret
     * 
     * @var ?string $nodeSecret
     */
	#[SpeakeasyMetadata('form:name=nodeSecret')]
    public ?string $nodeSecret = null;
    
    /**
     * 'Node-Locked' licensing model: product module number
     * 
     * @var ?string $productModuleNumber
     */
	#[SpeakeasyMetadata('form:name=productModuleNumber')]
    public ?string $productModuleNumber = null;
    
    /**
     * Product number, must be provided when 'Licensee auto-create' is enabled (see also Product JavaDoc). Identifies the Product to which new Licensee should be added
     * 
     * @var ?string $productNumber
     */
	#[SpeakeasyMetadata('form:name=productNumber')]
    public ?string $productNumber = null;
    
    /**
     * 'Floating' licensing model: specifies unique session identifier
     * 
     * @var ?string $sessionId
     */
	#[SpeakeasyMetadata('form:name=sessionId')]
    public ?string $sessionId = null;
    
	public function __construct()
	{
		$this->action = null;
		$this->licenseeName = null;
		$this->nodeSecret = null;
		$this->productModuleNumber = null;
		$this->productNumber = null;
		$this->sessionId = null;
	}
}
