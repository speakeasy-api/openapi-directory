<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * AuditEvent - OK
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class AuditEvent
{
    /**
     * A link to this audit event object if you were to retrieve it individually.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EventLink $links
     */
	#[\JMS\Serializer\Annotation\SerializedName('_links')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EventLink')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EventLink $links = null;
    
    /**
     * The NEXMO_API_KEY of the Vonage API account that the audit event is associated with.
     * 
     * @var ?string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountId = null;
    
    /**
     * A valid JSON object with information detailing the context of the audit event.
     * 
     * @var mixed $context
     */
	#[\JMS\Serializer\Annotation\SerializedName('context')]
    #[\JMS\Serializer\Annotation\Type('mixed')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public mixed $context = null;
    
    /**
     * When the audit event was created.
     * 
     * @var ?\DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d', '', '|Y-m-d'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $createdAt = null;
    
    /**
     * The type of the audit event.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\EventTypesEnum $eventType
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\EventTypesEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?EventTypesEnum $eventType = null;
    
    /**
     * A description of the event type
     * 
     * @var ?string $eventTypeDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('event_type_description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $eventTypeDescription = null;
    
    /**
     * UUID of the audit event
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * The source of the event.
     * 
     * CD: Customer Dashboard DEVAPI: via Developer API
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AuditEventSourceEnum $source
     */
	#[\JMS\Serializer\Annotation\SerializedName('source')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AuditEventSourceEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AuditEventSourceEnum $source = null;
    
    /**
     * ISO 3166-1 Alpha-2 country code recorded for the event.
     * 
     * @var ?string $sourceCountry
     */
	#[\JMS\Serializer\Annotation\SerializedName('source_country')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceCountry = null;
    
    /**
     * Description of the audit event source.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\AuditEventSourceDescriptionEnum $sourceDescription
     */
	#[\JMS\Serializer\Annotation\SerializedName('source_description')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\AuditEventSourceDescriptionEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?AuditEventSourceDescriptionEnum $sourceDescription = null;
    
    /**
     * The IP address used to make the account change.
     * 
     * @var ?string $sourceIp
     */
	#[\JMS\Serializer\Annotation\SerializedName('source_ip')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $sourceIp = null;
    
    /**
     * Email of the user whose account the audit event is associated with.
     * 
     * @var ?string $userEmail
     */
	#[\JMS\Serializer\Annotation\SerializedName('user_email')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $userEmail = null;
    
    /**
     * The ID of the user that the audit event is associated with.
     * 
     * @var ?int $userId
     */
	#[\JMS\Serializer\Annotation\SerializedName('user_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $userId = null;
    
	public function __construct()
	{
		$this->links = null;
		$this->accountId = null;
		$this->context = null;
		$this->createdAt = null;
		$this->eventType = null;
		$this->eventTypeDescription = null;
		$this->id = null;
		$this->source = null;
		$this->sourceCountry = null;
		$this->sourceDescription = null;
		$this->sourceIp = null;
		$this->userEmail = null;
		$this->userId = null;
	}
}
