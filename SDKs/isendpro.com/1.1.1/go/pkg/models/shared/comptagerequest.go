// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ComptageRequestComptageEnum string

const (
	ComptageRequestComptageEnumOne ComptageRequestComptageEnum = "1"
)

func (e *ComptageRequestComptageEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		*e = ComptageRequestComptageEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ComptageRequestComptageEnum: %s", s)
	}
}

// ComptageRequestGmtZoneEnum - Fuseau horaire de la date d'envoi
type ComptageRequestGmtZoneEnum string

const (
	ComptageRequestGmtZoneEnumPacificMidway               ComptageRequestGmtZoneEnum = "Pacific/Midway"
	ComptageRequestGmtZoneEnumAmericaAdak                 ComptageRequestGmtZoneEnum = "America/Adak"
	ComptageRequestGmtZoneEnumEtcGmtPlus10                ComptageRequestGmtZoneEnum = "Etc/GMT+10"
	ComptageRequestGmtZoneEnumPacificMarquesas            ComptageRequestGmtZoneEnum = "Pacific/Marquesas"
	ComptageRequestGmtZoneEnumPacificGambier              ComptageRequestGmtZoneEnum = "Pacific/Gambier"
	ComptageRequestGmtZoneEnumAmericaAnchorage            ComptageRequestGmtZoneEnum = "America/Anchorage"
	ComptageRequestGmtZoneEnumAmericaEnsenada             ComptageRequestGmtZoneEnum = "America/Ensenada"
	ComptageRequestGmtZoneEnumEtcGmtPlus8                 ComptageRequestGmtZoneEnum = "Etc/GMT+8"
	ComptageRequestGmtZoneEnumAmericaLosAngeles           ComptageRequestGmtZoneEnum = "America/Los_Angeles"
	ComptageRequestGmtZoneEnumAmericaDenver               ComptageRequestGmtZoneEnum = "America/Denver"
	ComptageRequestGmtZoneEnumAmericaChihuahua            ComptageRequestGmtZoneEnum = "America/Chihuahua"
	ComptageRequestGmtZoneEnumAmericaDawsonCreek          ComptageRequestGmtZoneEnum = "America/Dawson_Creek"
	ComptageRequestGmtZoneEnumAmericaBelize               ComptageRequestGmtZoneEnum = "America/Belize"
	ComptageRequestGmtZoneEnumAmericaCancun               ComptageRequestGmtZoneEnum = "America/Cancun"
	ComptageRequestGmtZoneEnumChileEasterIsland           ComptageRequestGmtZoneEnum = "Chile/EasterIsland"
	ComptageRequestGmtZoneEnumAmericaChicago              ComptageRequestGmtZoneEnum = "America/Chicago"
	ComptageRequestGmtZoneEnumAmericaNewYork              ComptageRequestGmtZoneEnum = "America/New_York"
	ComptageRequestGmtZoneEnumAmericaHavana               ComptageRequestGmtZoneEnum = "America/Havana"
	ComptageRequestGmtZoneEnumAmericaBogota               ComptageRequestGmtZoneEnum = "America/Bogota"
	ComptageRequestGmtZoneEnumAmericaCaracas              ComptageRequestGmtZoneEnum = "America/Caracas"
	ComptageRequestGmtZoneEnumAmericaSantiago             ComptageRequestGmtZoneEnum = "America/Santiago"
	ComptageRequestGmtZoneEnumAmericaLaPaz                ComptageRequestGmtZoneEnum = "America/La_Paz"
	ComptageRequestGmtZoneEnumAtlanticStanley             ComptageRequestGmtZoneEnum = "Atlantic/Stanley"
	ComptageRequestGmtZoneEnumAmericaCampoGrande          ComptageRequestGmtZoneEnum = "America/Campo_Grande"
	ComptageRequestGmtZoneEnumAmericaGooseBay             ComptageRequestGmtZoneEnum = "America/Goose_Bay"
	ComptageRequestGmtZoneEnumAmericaGlaceBay             ComptageRequestGmtZoneEnum = "America/Glace_Bay"
	ComptageRequestGmtZoneEnumAmericaStJohns              ComptageRequestGmtZoneEnum = "America/St_Johns"
	ComptageRequestGmtZoneEnumAmericaAraguaina            ComptageRequestGmtZoneEnum = "America/Araguaina"
	ComptageRequestGmtZoneEnumAmericaMontevideo           ComptageRequestGmtZoneEnum = "America/Montevideo"
	ComptageRequestGmtZoneEnumAmericaMiquelon             ComptageRequestGmtZoneEnum = "America/Miquelon"
	ComptageRequestGmtZoneEnumAmericaGodthab              ComptageRequestGmtZoneEnum = "America/Godthab"
	ComptageRequestGmtZoneEnumAmericaArgentinaBuenosAires ComptageRequestGmtZoneEnum = "America/Argentina/Buenos_Aires"
	ComptageRequestGmtZoneEnumAmericaSaoPaulo             ComptageRequestGmtZoneEnum = "America/Sao_Paulo"
	ComptageRequestGmtZoneEnumAmericaNoronha              ComptageRequestGmtZoneEnum = "America/Noronha"
	ComptageRequestGmtZoneEnumAtlanticCapeVerde           ComptageRequestGmtZoneEnum = "Atlantic/Cape_Verde"
	ComptageRequestGmtZoneEnumAtlanticAzores              ComptageRequestGmtZoneEnum = "Atlantic/Azores"
	ComptageRequestGmtZoneEnumEuropeBelfast               ComptageRequestGmtZoneEnum = "Europe/Belfast"
	ComptageRequestGmtZoneEnumEuropeDublin                ComptageRequestGmtZoneEnum = "Europe/Dublin"
	ComptageRequestGmtZoneEnumEuropeLisbon                ComptageRequestGmtZoneEnum = "Europe/Lisbon"
	ComptageRequestGmtZoneEnumEuropeLondon                ComptageRequestGmtZoneEnum = "Europe/London"
	ComptageRequestGmtZoneEnumAfricaAbidjan               ComptageRequestGmtZoneEnum = "Africa/Abidjan"
	ComptageRequestGmtZoneEnumEuropeAmsterdam             ComptageRequestGmtZoneEnum = "Europe/Amsterdam"
	ComptageRequestGmtZoneEnumEuropeBelgrade              ComptageRequestGmtZoneEnum = "Europe/Belgrade"
	ComptageRequestGmtZoneEnumEuropeBrussels              ComptageRequestGmtZoneEnum = "Europe/Brussels"
	ComptageRequestGmtZoneEnumAfricaAlgiers               ComptageRequestGmtZoneEnum = "Africa/Algiers"
	ComptageRequestGmtZoneEnumAfricaWindhoek              ComptageRequestGmtZoneEnum = "Africa/Windhoek"
	ComptageRequestGmtZoneEnumAsiaBeirut                  ComptageRequestGmtZoneEnum = "Asia/Beirut"
	ComptageRequestGmtZoneEnumAfricaCairo                 ComptageRequestGmtZoneEnum = "Africa/Cairo"
	ComptageRequestGmtZoneEnumAsiaGaza                    ComptageRequestGmtZoneEnum = "Asia/Gaza"
	ComptageRequestGmtZoneEnumAfricaBlantyre              ComptageRequestGmtZoneEnum = "Africa/Blantyre"
	ComptageRequestGmtZoneEnumAsiaJerusalem               ComptageRequestGmtZoneEnum = "Asia/Jerusalem"
	ComptageRequestGmtZoneEnumEuropeMinsk                 ComptageRequestGmtZoneEnum = "Europe/Minsk"
	ComptageRequestGmtZoneEnumAsiaDamascus                ComptageRequestGmtZoneEnum = "Asia/Damascus"
	ComptageRequestGmtZoneEnumEuropeMoscow                ComptageRequestGmtZoneEnum = "Europe/Moscow"
	ComptageRequestGmtZoneEnumAfricaAddisAbaba            ComptageRequestGmtZoneEnum = "Africa/Addis_Ababa"
	ComptageRequestGmtZoneEnumAsiaTehran                  ComptageRequestGmtZoneEnum = "Asia/Tehran"
	ComptageRequestGmtZoneEnumAsiaDubai                   ComptageRequestGmtZoneEnum = "Asia/Dubai"
	ComptageRequestGmtZoneEnumAsiaYerevan                 ComptageRequestGmtZoneEnum = "Asia/Yerevan"
	ComptageRequestGmtZoneEnumAsiaKabul                   ComptageRequestGmtZoneEnum = "Asia/Kabul"
	ComptageRequestGmtZoneEnumAsiaYekaterinburg           ComptageRequestGmtZoneEnum = "Asia/Yekaterinburg"
	ComptageRequestGmtZoneEnumAsiaTashkent                ComptageRequestGmtZoneEnum = "Asia/Tashkent"
	ComptageRequestGmtZoneEnumAsiaKolkata                 ComptageRequestGmtZoneEnum = "Asia/Kolkata"
	ComptageRequestGmtZoneEnumAsiaKatmandu                ComptageRequestGmtZoneEnum = "Asia/Katmandu"
	ComptageRequestGmtZoneEnumAsiaDhaka                   ComptageRequestGmtZoneEnum = "Asia/Dhaka"
	ComptageRequestGmtZoneEnumAsiaNovosibirsk             ComptageRequestGmtZoneEnum = "Asia/Novosibirsk"
	ComptageRequestGmtZoneEnumAsiaRangoon                 ComptageRequestGmtZoneEnum = "Asia/Rangoon"
	ComptageRequestGmtZoneEnumAsiaBangkok                 ComptageRequestGmtZoneEnum = "Asia/Bangkok"
	ComptageRequestGmtZoneEnumAsiaKrasnoyarsk             ComptageRequestGmtZoneEnum = "Asia/Krasnoyarsk"
	ComptageRequestGmtZoneEnumAsiaHongKong                ComptageRequestGmtZoneEnum = "Asia/Hong_Kong"
	ComptageRequestGmtZoneEnumAsiaIrkutsk                 ComptageRequestGmtZoneEnum = "Asia/Irkutsk"
	ComptageRequestGmtZoneEnumAustraliaPerth              ComptageRequestGmtZoneEnum = "Australia/Perth"
	ComptageRequestGmtZoneEnumAustraliaEucla              ComptageRequestGmtZoneEnum = "Australia/Eucla"
	ComptageRequestGmtZoneEnumAsiaTokyo                   ComptageRequestGmtZoneEnum = "Asia/Tokyo"
	ComptageRequestGmtZoneEnumAsiaSeoul                   ComptageRequestGmtZoneEnum = "Asia/Seoul"
	ComptageRequestGmtZoneEnumAsiaYakutsk                 ComptageRequestGmtZoneEnum = "Asia/Yakutsk"
	ComptageRequestGmtZoneEnumAustraliaAdelaide           ComptageRequestGmtZoneEnum = "Australia/Adelaide"
	ComptageRequestGmtZoneEnumAustraliaDarwin             ComptageRequestGmtZoneEnum = "Australia/Darwin"
	ComptageRequestGmtZoneEnumAustraliaBrisbane           ComptageRequestGmtZoneEnum = "Australia/Brisbane"
	ComptageRequestGmtZoneEnumAustraliaHobart             ComptageRequestGmtZoneEnum = "Australia/Hobart"
	ComptageRequestGmtZoneEnumAsiaVladivostok             ComptageRequestGmtZoneEnum = "Asia/Vladivostok"
	ComptageRequestGmtZoneEnumAustraliaLordHowe           ComptageRequestGmtZoneEnum = "Australia/Lord_Howe"
	ComptageRequestGmtZoneEnumEtcGmt11                    ComptageRequestGmtZoneEnum = "Etc/GMT-11"
	ComptageRequestGmtZoneEnumAsiaMagadan                 ComptageRequestGmtZoneEnum = "Asia/Magadan"
	ComptageRequestGmtZoneEnumPacificNorfolk              ComptageRequestGmtZoneEnum = "Pacific/Norfolk"
	ComptageRequestGmtZoneEnumAsiaAnadyr                  ComptageRequestGmtZoneEnum = "Asia/Anadyr"
	ComptageRequestGmtZoneEnumPacificAuckland             ComptageRequestGmtZoneEnum = "Pacific/Auckland"
	ComptageRequestGmtZoneEnumEtcGmt12                    ComptageRequestGmtZoneEnum = "Etc/GMT-12"
	ComptageRequestGmtZoneEnumPacificChatham              ComptageRequestGmtZoneEnum = "Pacific/Chatham"
	ComptageRequestGmtZoneEnumPacificTongatapu            ComptageRequestGmtZoneEnum = "Pacific/Tongatapu"
	ComptageRequestGmtZoneEnumPacificKiritimati           ComptageRequestGmtZoneEnum = "Pacific/Kiritimati"
)

func (e *ComptageRequestGmtZoneEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Pacific/Midway":
		fallthrough
	case "America/Adak":
		fallthrough
	case "Etc/GMT+10":
		fallthrough
	case "Pacific/Marquesas":
		fallthrough
	case "Pacific/Gambier":
		fallthrough
	case "America/Anchorage":
		fallthrough
	case "America/Ensenada":
		fallthrough
	case "Etc/GMT+8":
		fallthrough
	case "America/Los_Angeles":
		fallthrough
	case "America/Denver":
		fallthrough
	case "America/Chihuahua":
		fallthrough
	case "America/Dawson_Creek":
		fallthrough
	case "America/Belize":
		fallthrough
	case "America/Cancun":
		fallthrough
	case "Chile/EasterIsland":
		fallthrough
	case "America/Chicago":
		fallthrough
	case "America/New_York":
		fallthrough
	case "America/Havana":
		fallthrough
	case "America/Bogota":
		fallthrough
	case "America/Caracas":
		fallthrough
	case "America/Santiago":
		fallthrough
	case "America/La_Paz":
		fallthrough
	case "Atlantic/Stanley":
		fallthrough
	case "America/Campo_Grande":
		fallthrough
	case "America/Goose_Bay":
		fallthrough
	case "America/Glace_Bay":
		fallthrough
	case "America/St_Johns":
		fallthrough
	case "America/Araguaina":
		fallthrough
	case "America/Montevideo":
		fallthrough
	case "America/Miquelon":
		fallthrough
	case "America/Godthab":
		fallthrough
	case "America/Argentina/Buenos_Aires":
		fallthrough
	case "America/Sao_Paulo":
		fallthrough
	case "America/Noronha":
		fallthrough
	case "Atlantic/Cape_Verde":
		fallthrough
	case "Atlantic/Azores":
		fallthrough
	case "Europe/Belfast":
		fallthrough
	case "Europe/Dublin":
		fallthrough
	case "Europe/Lisbon":
		fallthrough
	case "Europe/London":
		fallthrough
	case "Africa/Abidjan":
		fallthrough
	case "Europe/Amsterdam":
		fallthrough
	case "Europe/Belgrade":
		fallthrough
	case "Europe/Brussels":
		fallthrough
	case "Africa/Algiers":
		fallthrough
	case "Africa/Windhoek":
		fallthrough
	case "Asia/Beirut":
		fallthrough
	case "Africa/Cairo":
		fallthrough
	case "Asia/Gaza":
		fallthrough
	case "Africa/Blantyre":
		fallthrough
	case "Asia/Jerusalem":
		fallthrough
	case "Europe/Minsk":
		fallthrough
	case "Asia/Damascus":
		fallthrough
	case "Europe/Moscow":
		fallthrough
	case "Africa/Addis_Ababa":
		fallthrough
	case "Asia/Tehran":
		fallthrough
	case "Asia/Dubai":
		fallthrough
	case "Asia/Yerevan":
		fallthrough
	case "Asia/Kabul":
		fallthrough
	case "Asia/Yekaterinburg":
		fallthrough
	case "Asia/Tashkent":
		fallthrough
	case "Asia/Kolkata":
		fallthrough
	case "Asia/Katmandu":
		fallthrough
	case "Asia/Dhaka":
		fallthrough
	case "Asia/Novosibirsk":
		fallthrough
	case "Asia/Rangoon":
		fallthrough
	case "Asia/Bangkok":
		fallthrough
	case "Asia/Krasnoyarsk":
		fallthrough
	case "Asia/Hong_Kong":
		fallthrough
	case "Asia/Irkutsk":
		fallthrough
	case "Australia/Perth":
		fallthrough
	case "Australia/Eucla":
		fallthrough
	case "Asia/Tokyo":
		fallthrough
	case "Asia/Seoul":
		fallthrough
	case "Asia/Yakutsk":
		fallthrough
	case "Australia/Adelaide":
		fallthrough
	case "Australia/Darwin":
		fallthrough
	case "Australia/Brisbane":
		fallthrough
	case "Australia/Hobart":
		fallthrough
	case "Asia/Vladivostok":
		fallthrough
	case "Australia/Lord_Howe":
		fallthrough
	case "Etc/GMT-11":
		fallthrough
	case "Asia/Magadan":
		fallthrough
	case "Pacific/Norfolk":
		fallthrough
	case "Asia/Anadyr":
		fallthrough
	case "Pacific/Auckland":
		fallthrough
	case "Etc/GMT-12":
		fallthrough
	case "Pacific/Chatham":
		fallthrough
	case "Pacific/Tongatapu":
		fallthrough
	case "Pacific/Kiritimati":
		*e = ComptageRequestGmtZoneEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ComptageRequestGmtZoneEnum: %s", s)
	}
}

type ComptageRequestNumAzurEnum string

const (
	ComptageRequestNumAzurEnumOne ComptageRequestNumAzurEnum = "1"
)

func (e *ComptageRequestNumAzurEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		*e = ComptageRequestNumAzurEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ComptageRequestNumAzurEnum: %s", s)
	}
}

// ComptageRequestSmslongEnum - Le SMS long permet de dépasser la limite de 160 caractères en envoyant un message constitué
// de plusieurs SMS.
// Il est possible d’envoyer jusqu’à 6 SMS concaténés pour une longueur totale maximale de 918
// caractères par message.
// Pour des raisons technique, la limite par SMS concaténé étant de 153 caractères.
// En cas de modification de l’émetteur, il faut considérer l’ajout automatique de 12 caractères
// du « STOP SMS ».
// Pour envoyer un smslong, il faut ajouter le paramètre smslong aux appels. La valeur de SMS doit être le nombre maximum de sms concaténé autorisé.   Pour ne pas avoir ce message d’erreur et obtenir un calcul dynamique du nombre de SMS alors il faut renseigner smslong = "999"
type ComptageRequestSmslongEnum string

const (
	ComptageRequestSmslongEnumNineHundredAndNinetyNine ComptageRequestSmslongEnum = "999"
)

func (e *ComptageRequestSmslongEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "999":
		*e = ComptageRequestSmslongEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ComptageRequestSmslongEnum: %s", s)
	}
}

// ComptageRequest - sms request
type ComptageRequest struct {
	Comptage ComptageRequestComptageEnum `json:"comptage"`
	// Date d'envoi au format YYYY-MM-DD hh:mm . Ce paramètre est optionnel, si il est omis l'envoi est réalisé immédiatement.
	DateEnvoi *string `json:"date_envoi,omitempty"`
	// - L'emetteur doit être une chaîne alphanumérique comprise entre 4 et 11 caractères.
	//
	// - Les caractères acceptés sont les chiffres entre 0 et 9, les lettres entre A et Z et l’espace.
	//
	// - Il ne peut pas comporter uniquement des chiffres.
	//
	// - Pour la modification de l'émetteur et dans le cadre de campagnes commerciales, les opérateurs imposent contractuellement d'ajouter en fin de message le texte "STOP XXXXX". De ce fait, le message envoyé ne pourra excéder une longueur de 148 caractères au lieu des 160 caractères, le « STOP » étant rajouté automatiquement.
	//
	Emetteur *string `json:"emetteur,omitempty"`
	// Fuseau horaire de la date d'envoi
	GmtZone *ComptageRequestGmtZoneEnum `json:"gmt_zone,omitempty"`
	// Clé API
	Keyid string `json:"keyid"`
	// Si le message n’est pas à but commercial, vous pouvez faire une demande pour retirer l’obligation du STOP. Une fois votre demande validée par nos services, vous pourrez supprimer la mention STOP SMS en ajoutant nostop = "1"
	Nostop *string `json:"nostop,omitempty"`
	// Numero de téléphone au format national (exemple 0680010203) ou international (example 33680010203)
	Num     string                      `json:"num"`
	NumAzur *ComptageRequestNumAzurEnum `json:"numAzur,omitempty"`
	// Message à envoyer aux destinataires. Le message doit être encodé au format utf-8 et ne contenir que des caractères existant dans l'alphabet GSM. Il est également possible d'envoyer (à l'étranger uniquement) des SMS en UCS-2, cf paramètre ucs2 pour plus de détails.
	Sms string `json:"sms"`
	// Le SMS long permet de dépasser la limite de 160 caractères en envoyant un message constitué
	// de plusieurs SMS.
	// Il est possible d’envoyer jusqu’à 6 SMS concaténés pour une longueur totale maximale de 918
	// caractères par message.
	// Pour des raisons technique, la limite par SMS concaténé étant de 153 caractères.
	// En cas de modification de l’émetteur, il faut considérer l’ajout automatique de 12 caractères
	// du « STOP SMS ».
	// Pour envoyer un smslong, il faut ajouter le paramètre smslong aux appels. La valeur de SMS doit être le nombre maximum de sms concaténé autorisé.   Pour ne pas avoir ce message d’erreur et obtenir un calcul dynamique du nombre de SMS alors il faut renseigner smslong = "999"
	//
	Smslong *ComptageRequestSmslongEnum `json:"smslong,omitempty"`
	// Le tracker doit être une chaine alphanumérique de moins de 50 caractères. Ce tracker sera ensuite renvoyé en paramètre des urls pour les retours des accusés de réception.
	Tracker *string `json:"tracker,omitempty"`
	// Il est également possible d’envoyer des SMS en alphabet non latin (russe, chinois, arabe, etc) sur
	// les numéros hors France métropolitaine.
	// Pour ce faire, la requête devrait être encodée au format UTF-8 et contenir l’argument ucs2 = "1"
	// Du fait de contraintes techniques, 1 SMS unique ne pourra pas dépasser 70 caractères (au lieu
	// des 160 usuels) et dans le cas de SMS long, chaque sms ne pourra dépasser 67 caractères.
	//
	Ucs2 *string `json:"ucs2,omitempty"`
}
