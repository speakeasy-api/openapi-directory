"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apierror as shared_apierror
from ..shared import response as shared_response
from typing import Optional


@dataclasses.dataclass
class UnbanRequest:
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'id', 'serialization': 'json' }})  
    target_user_id: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'target_user_id', 'serialization': 'json' }})  
    type: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'type', 'serialization': 'json' }})  
    

@dataclasses.dataclass
class UnbanResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_error: Optional[shared_apierror.APIError] = dataclasses.field(default=None)
    r"""Bad request"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    response: Optional[shared_response.Response] = dataclasses.field(default=None)
    r"""Successful response"""  
    