"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import apiexception as shared_apiexception
from ..shared import defaultresponsedtooflistofpackagesearchdto as shared_defaultresponsedtooflistofpackagesearchdto
from ..shared import defaultresponsedtoofpackagesearchdto as shared_defaultresponsedtoofpackagesearchdto
from typing import Optional


@dataclasses.dataclass
class PackageSearchRequest:
    
    active_status: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'activeStatus', 'style': 'form', 'explode': True }})
    r"""active status active : 1, inactive : 2, all 3, deafult : 1"""  
    category_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'categoryId', 'style': 'form', 'explode': True }})
    r"""Packge Category Id"""  
    end_price: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'endPrice', 'style': 'form', 'explode': True }})
    r"""End Price of the price Range"""  
    gym_id: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'gymId', 'style': 'form', 'explode': True }})
    r"""primary key of TL gym entity"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""number of recode in result and default is 100. use negative numbers to order by desc"""  
    offset: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""number of recodes to skip"""  
    order_by: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'orderBy', 'style': 'form', 'explode': True }})
    r"""order by column.!-- invalid column will give internal server error"""  
    request_source: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'requestSource', 'style': 'form', 'explode': True }})
    r"""1 : MRM, 2 : Mobile"""  
    search_text: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'searchText', 'style': 'form', 'explode': True }})
    r"""part of package name"""  
    startp_price: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'startpPrice', 'style': 'form', 'explode': True }})
    r"""Start price of the price Range"""  
    type: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'type', 'style': 'form', 'explode': True }})
    r"""filter package type.!-- default is 'all'"""  
    

@dataclasses.dataclass
class PackageSearchResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_exception: Optional[shared_apiexception.APIException] = dataclasses.field(default=None)  
    default_response_dto_of_list_of_package_search_dto: Optional[shared_defaultresponsedtooflistofpackagesearchdto.DefaultResponseDTOOfListOfPackageSearchDTO] = dataclasses.field(default=None)  
    default_response_dto_of_package_search_dtos: Optional[list[shared_defaultresponsedtoofpackagesearchdto.DefaultResponseDTOOfPackageSearchDTO]] = dataclasses.field(default=None)
    r"""basic information of package entity"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    