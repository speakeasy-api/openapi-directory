/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RealmRepresentation - JSON representation of the realm
 */
public class RealmRepresentation {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessCodeLifespan")
    public Integer accessCodeLifespan;
    public RealmRepresentation withAccessCodeLifespan(Integer accessCodeLifespan) {
        this.accessCodeLifespan = accessCodeLifespan;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessCodeLifespanLogin")
    public Integer accessCodeLifespanLogin;
    public RealmRepresentation withAccessCodeLifespanLogin(Integer accessCodeLifespanLogin) {
        this.accessCodeLifespanLogin = accessCodeLifespanLogin;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessCodeLifespanUserAction")
    public Integer accessCodeLifespanUserAction;
    public RealmRepresentation withAccessCodeLifespanUserAction(Integer accessCodeLifespanUserAction) {
        this.accessCodeLifespanUserAction = accessCodeLifespanUserAction;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessTokenLifespan")
    public Integer accessTokenLifespan;
    public RealmRepresentation withAccessTokenLifespan(Integer accessTokenLifespan) {
        this.accessTokenLifespan = accessTokenLifespan;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accessTokenLifespanForImplicitFlow")
    public Integer accessTokenLifespanForImplicitFlow;
    public RealmRepresentation withAccessTokenLifespanForImplicitFlow(Integer accessTokenLifespanForImplicitFlow) {
        this.accessTokenLifespanForImplicitFlow = accessTokenLifespanForImplicitFlow;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountTheme")
    public String accountTheme;
    public RealmRepresentation withAccountTheme(String accountTheme) {
        this.accountTheme = accountTheme;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("actionTokenGeneratedByAdminLifespan")
    public Integer actionTokenGeneratedByAdminLifespan;
    public RealmRepresentation withActionTokenGeneratedByAdminLifespan(Integer actionTokenGeneratedByAdminLifespan) {
        this.actionTokenGeneratedByAdminLifespan = actionTokenGeneratedByAdminLifespan;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("actionTokenGeneratedByUserLifespan")
    public Integer actionTokenGeneratedByUserLifespan;
    public RealmRepresentation withActionTokenGeneratedByUserLifespan(Integer actionTokenGeneratedByUserLifespan) {
        this.actionTokenGeneratedByUserLifespan = actionTokenGeneratedByUserLifespan;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adminEventsDetailsEnabled")
    public Boolean adminEventsDetailsEnabled;
    public RealmRepresentation withAdminEventsDetailsEnabled(Boolean adminEventsDetailsEnabled) {
        this.adminEventsDetailsEnabled = adminEventsDetailsEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adminEventsEnabled")
    public Boolean adminEventsEnabled;
    public RealmRepresentation withAdminEventsEnabled(Boolean adminEventsEnabled) {
        this.adminEventsEnabled = adminEventsEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("adminTheme")
    public String adminTheme;
    public RealmRepresentation withAdminTheme(String adminTheme) {
        this.adminTheme = adminTheme;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributes")
    public java.util.Map<String, Object> attributes;
    public RealmRepresentation withAttributes(java.util.Map<String, Object> attributes) {
        this.attributes = attributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authenticationFlows")
    public AuthenticationFlowRepresentation[] authenticationFlows;
    public RealmRepresentation withAuthenticationFlows(AuthenticationFlowRepresentation[] authenticationFlows) {
        this.authenticationFlows = authenticationFlows;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authenticatorConfig")
    public AuthenticatorConfigRepresentation[] authenticatorConfig;
    public RealmRepresentation withAuthenticatorConfig(AuthenticatorConfigRepresentation[] authenticatorConfig) {
        this.authenticatorConfig = authenticatorConfig;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("browserFlow")
    public String browserFlow;
    public RealmRepresentation withBrowserFlow(String browserFlow) {
        this.browserFlow = browserFlow;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("browserSecurityHeaders")
    public java.util.Map<String, Object> browserSecurityHeaders;
    public RealmRepresentation withBrowserSecurityHeaders(java.util.Map<String, Object> browserSecurityHeaders) {
        this.browserSecurityHeaders = browserSecurityHeaders;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bruteForceProtected")
    public Boolean bruteForceProtected;
    public RealmRepresentation withBruteForceProtected(Boolean bruteForceProtected) {
        this.bruteForceProtected = bruteForceProtected;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientAuthenticationFlow")
    public String clientAuthenticationFlow;
    public RealmRepresentation withClientAuthenticationFlow(String clientAuthenticationFlow) {
        this.clientAuthenticationFlow = clientAuthenticationFlow;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientScopeMappings")
    public java.util.Map<String, Object> clientScopeMappings;
    public RealmRepresentation withClientScopeMappings(java.util.Map<String, Object> clientScopeMappings) {
        this.clientScopeMappings = clientScopeMappings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientScopes")
    public ClientScopeRepresentation[] clientScopes;
    public RealmRepresentation withClientScopes(ClientScopeRepresentation[] clientScopes) {
        this.clientScopes = clientScopes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientSessionIdleTimeout")
    public Integer clientSessionIdleTimeout;
    public RealmRepresentation withClientSessionIdleTimeout(Integer clientSessionIdleTimeout) {
        this.clientSessionIdleTimeout = clientSessionIdleTimeout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clientSessionMaxLifespan")
    public Integer clientSessionMaxLifespan;
    public RealmRepresentation withClientSessionMaxLifespan(Integer clientSessionMaxLifespan) {
        this.clientSessionMaxLifespan = clientSessionMaxLifespan;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clients")
    public ClientRepresentation[] clients;
    public RealmRepresentation withClients(ClientRepresentation[] clients) {
        this.clients = clients;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("components")
    public MultivaluedHashMap components;
    public RealmRepresentation withComponents(MultivaluedHashMap components) {
        this.components = components;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultDefaultClientScopes")
    public String[] defaultDefaultClientScopes;
    public RealmRepresentation withDefaultDefaultClientScopes(String[] defaultDefaultClientScopes) {
        this.defaultDefaultClientScopes = defaultDefaultClientScopes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultGroups")
    public String[] defaultGroups;
    public RealmRepresentation withDefaultGroups(String[] defaultGroups) {
        this.defaultGroups = defaultGroups;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultLocale")
    public String defaultLocale;
    public RealmRepresentation withDefaultLocale(String defaultLocale) {
        this.defaultLocale = defaultLocale;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultOptionalClientScopes")
    public String[] defaultOptionalClientScopes;
    public RealmRepresentation withDefaultOptionalClientScopes(String[] defaultOptionalClientScopes) {
        this.defaultOptionalClientScopes = defaultOptionalClientScopes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultRoles")
    public String[] defaultRoles;
    public RealmRepresentation withDefaultRoles(String[] defaultRoles) {
        this.defaultRoles = defaultRoles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultSignatureAlgorithm")
    public String defaultSignatureAlgorithm;
    public RealmRepresentation withDefaultSignatureAlgorithm(String defaultSignatureAlgorithm) {
        this.defaultSignatureAlgorithm = defaultSignatureAlgorithm;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("directGrantFlow")
    public String directGrantFlow;
    public RealmRepresentation withDirectGrantFlow(String directGrantFlow) {
        this.directGrantFlow = directGrantFlow;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayName")
    public String displayName;
    public RealmRepresentation withDisplayName(String displayName) {
        this.displayName = displayName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayNameHtml")
    public String displayNameHtml;
    public RealmRepresentation withDisplayNameHtml(String displayNameHtml) {
        this.displayNameHtml = displayNameHtml;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dockerAuthenticationFlow")
    public String dockerAuthenticationFlow;
    public RealmRepresentation withDockerAuthenticationFlow(String dockerAuthenticationFlow) {
        this.dockerAuthenticationFlow = dockerAuthenticationFlow;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duplicateEmailsAllowed")
    public Boolean duplicateEmailsAllowed;
    public RealmRepresentation withDuplicateEmailsAllowed(Boolean duplicateEmailsAllowed) {
        this.duplicateEmailsAllowed = duplicateEmailsAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("editUsernameAllowed")
    public Boolean editUsernameAllowed;
    public RealmRepresentation withEditUsernameAllowed(Boolean editUsernameAllowed) {
        this.editUsernameAllowed = editUsernameAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emailTheme")
    public String emailTheme;
    public RealmRepresentation withEmailTheme(String emailTheme) {
        this.emailTheme = emailTheme;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabled")
    public Boolean enabled;
    public RealmRepresentation withEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enabledEventTypes")
    public String[] enabledEventTypes;
    public RealmRepresentation withEnabledEventTypes(String[] enabledEventTypes) {
        this.enabledEventTypes = enabledEventTypes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventsEnabled")
    public Boolean eventsEnabled;
    public RealmRepresentation withEventsEnabled(Boolean eventsEnabled) {
        this.eventsEnabled = eventsEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventsExpiration")
    public Long eventsExpiration;
    public RealmRepresentation withEventsExpiration(Long eventsExpiration) {
        this.eventsExpiration = eventsExpiration;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventsListeners")
    public String[] eventsListeners;
    public RealmRepresentation withEventsListeners(String[] eventsListeners) {
        this.eventsListeners = eventsListeners;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failureFactor")
    public Integer failureFactor;
    public RealmRepresentation withFailureFactor(Integer failureFactor) {
        this.failureFactor = failureFactor;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("federatedUsers")
    public UserRepresentation[] federatedUsers;
    public RealmRepresentation withFederatedUsers(UserRepresentation[] federatedUsers) {
        this.federatedUsers = federatedUsers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("groups")
    public GroupRepresentation[] groups;
    public RealmRepresentation withGroups(GroupRepresentation[] groups) {
        this.groups = groups;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public RealmRepresentation withId(String id) {
        this.id = id;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("identityProviderMappers")
    public IdentityProviderMapperRepresentation[] identityProviderMappers;
    public RealmRepresentation withIdentityProviderMappers(IdentityProviderMapperRepresentation[] identityProviderMappers) {
        this.identityProviderMappers = identityProviderMappers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("identityProviders")
    public IdentityProviderRepresentation[] identityProviders;
    public RealmRepresentation withIdentityProviders(IdentityProviderRepresentation[] identityProviders) {
        this.identityProviders = identityProviders;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("internationalizationEnabled")
    public Boolean internationalizationEnabled;
    public RealmRepresentation withInternationalizationEnabled(Boolean internationalizationEnabled) {
        this.internationalizationEnabled = internationalizationEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keycloakVersion")
    public String keycloakVersion;
    public RealmRepresentation withKeycloakVersion(String keycloakVersion) {
        this.keycloakVersion = keycloakVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loginTheme")
    public String loginTheme;
    public RealmRepresentation withLoginTheme(String loginTheme) {
        this.loginTheme = loginTheme;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loginWithEmailAllowed")
    public Boolean loginWithEmailAllowed;
    public RealmRepresentation withLoginWithEmailAllowed(Boolean loginWithEmailAllowed) {
        this.loginWithEmailAllowed = loginWithEmailAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxDeltaTimeSeconds")
    public Integer maxDeltaTimeSeconds;
    public RealmRepresentation withMaxDeltaTimeSeconds(Integer maxDeltaTimeSeconds) {
        this.maxDeltaTimeSeconds = maxDeltaTimeSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxFailureWaitSeconds")
    public Integer maxFailureWaitSeconds;
    public RealmRepresentation withMaxFailureWaitSeconds(Integer maxFailureWaitSeconds) {
        this.maxFailureWaitSeconds = maxFailureWaitSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minimumQuickLoginWaitSeconds")
    public Integer minimumQuickLoginWaitSeconds;
    public RealmRepresentation withMinimumQuickLoginWaitSeconds(Integer minimumQuickLoginWaitSeconds) {
        this.minimumQuickLoginWaitSeconds = minimumQuickLoginWaitSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("notBefore")
    public Integer notBefore;
    public RealmRepresentation withNotBefore(Integer notBefore) {
        this.notBefore = notBefore;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offlineSessionIdleTimeout")
    public Integer offlineSessionIdleTimeout;
    public RealmRepresentation withOfflineSessionIdleTimeout(Integer offlineSessionIdleTimeout) {
        this.offlineSessionIdleTimeout = offlineSessionIdleTimeout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offlineSessionMaxLifespan")
    public Integer offlineSessionMaxLifespan;
    public RealmRepresentation withOfflineSessionMaxLifespan(Integer offlineSessionMaxLifespan) {
        this.offlineSessionMaxLifespan = offlineSessionMaxLifespan;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offlineSessionMaxLifespanEnabled")
    public Boolean offlineSessionMaxLifespanEnabled;
    public RealmRepresentation withOfflineSessionMaxLifespanEnabled(Boolean offlineSessionMaxLifespanEnabled) {
        this.offlineSessionMaxLifespanEnabled = offlineSessionMaxLifespanEnabled;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("otpPolicyAlgorithm")
    public String otpPolicyAlgorithm;
    public RealmRepresentation withOtpPolicyAlgorithm(String otpPolicyAlgorithm) {
        this.otpPolicyAlgorithm = otpPolicyAlgorithm;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("otpPolicyDigits")
    public Integer otpPolicyDigits;
    public RealmRepresentation withOtpPolicyDigits(Integer otpPolicyDigits) {
        this.otpPolicyDigits = otpPolicyDigits;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("otpPolicyInitialCounter")
    public Integer otpPolicyInitialCounter;
    public RealmRepresentation withOtpPolicyInitialCounter(Integer otpPolicyInitialCounter) {
        this.otpPolicyInitialCounter = otpPolicyInitialCounter;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("otpPolicyLookAheadWindow")
    public Integer otpPolicyLookAheadWindow;
    public RealmRepresentation withOtpPolicyLookAheadWindow(Integer otpPolicyLookAheadWindow) {
        this.otpPolicyLookAheadWindow = otpPolicyLookAheadWindow;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("otpPolicyPeriod")
    public Integer otpPolicyPeriod;
    public RealmRepresentation withOtpPolicyPeriod(Integer otpPolicyPeriod) {
        this.otpPolicyPeriod = otpPolicyPeriod;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("otpPolicyType")
    public String otpPolicyType;
    public RealmRepresentation withOtpPolicyType(String otpPolicyType) {
        this.otpPolicyType = otpPolicyType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("otpSupportedApplications")
    public String[] otpSupportedApplications;
    public RealmRepresentation withOtpSupportedApplications(String[] otpSupportedApplications) {
        this.otpSupportedApplications = otpSupportedApplications;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("passwordPolicy")
    public String passwordPolicy;
    public RealmRepresentation withPasswordPolicy(String passwordPolicy) {
        this.passwordPolicy = passwordPolicy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permanentLockout")
    public Boolean permanentLockout;
    public RealmRepresentation withPermanentLockout(Boolean permanentLockout) {
        this.permanentLockout = permanentLockout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("protocolMappers")
    public ProtocolMapperRepresentation[] protocolMappers;
    public RealmRepresentation withProtocolMappers(ProtocolMapperRepresentation[] protocolMappers) {
        this.protocolMappers = protocolMappers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quickLoginCheckMilliSeconds")
    public Long quickLoginCheckMilliSeconds;
    public RealmRepresentation withQuickLoginCheckMilliSeconds(Long quickLoginCheckMilliSeconds) {
        this.quickLoginCheckMilliSeconds = quickLoginCheckMilliSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("realm")
    public String realm;
    public RealmRepresentation withRealm(String realm) {
        this.realm = realm;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("refreshTokenMaxReuse")
    public Integer refreshTokenMaxReuse;
    public RealmRepresentation withRefreshTokenMaxReuse(Integer refreshTokenMaxReuse) {
        this.refreshTokenMaxReuse = refreshTokenMaxReuse;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registrationAllowed")
    public Boolean registrationAllowed;
    public RealmRepresentation withRegistrationAllowed(Boolean registrationAllowed) {
        this.registrationAllowed = registrationAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registrationEmailAsUsername")
    public Boolean registrationEmailAsUsername;
    public RealmRepresentation withRegistrationEmailAsUsername(Boolean registrationEmailAsUsername) {
        this.registrationEmailAsUsername = registrationEmailAsUsername;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("registrationFlow")
    public String registrationFlow;
    public RealmRepresentation withRegistrationFlow(String registrationFlow) {
        this.registrationFlow = registrationFlow;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("rememberMe")
    public Boolean rememberMe;
    public RealmRepresentation withRememberMe(Boolean rememberMe) {
        this.rememberMe = rememberMe;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requiredActions")
    public RequiredActionProviderRepresentation[] requiredActions;
    public RealmRepresentation withRequiredActions(RequiredActionProviderRepresentation[] requiredActions) {
        this.requiredActions = requiredActions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resetCredentialsFlow")
    public String resetCredentialsFlow;
    public RealmRepresentation withResetCredentialsFlow(String resetCredentialsFlow) {
        this.resetCredentialsFlow = resetCredentialsFlow;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resetPasswordAllowed")
    public Boolean resetPasswordAllowed;
    public RealmRepresentation withResetPasswordAllowed(Boolean resetPasswordAllowed) {
        this.resetPasswordAllowed = resetPasswordAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revokeRefreshToken")
    public Boolean revokeRefreshToken;
    public RealmRepresentation withRevokeRefreshToken(Boolean revokeRefreshToken) {
        this.revokeRefreshToken = revokeRefreshToken;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("roles")
    public RolesRepresentation roles;
    public RealmRepresentation withRoles(RolesRepresentation roles) {
        this.roles = roles;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scopeMappings")
    public ScopeMappingRepresentation[] scopeMappings;
    public RealmRepresentation withScopeMappings(ScopeMappingRepresentation[] scopeMappings) {
        this.scopeMappings = scopeMappings;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("smtpServer")
    public java.util.Map<String, Object> smtpServer;
    public RealmRepresentation withSmtpServer(java.util.Map<String, Object> smtpServer) {
        this.smtpServer = smtpServer;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sslRequired")
    public String sslRequired;
    public RealmRepresentation withSslRequired(String sslRequired) {
        this.sslRequired = sslRequired;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssoSessionIdleTimeout")
    public Integer ssoSessionIdleTimeout;
    public RealmRepresentation withSsoSessionIdleTimeout(Integer ssoSessionIdleTimeout) {
        this.ssoSessionIdleTimeout = ssoSessionIdleTimeout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssoSessionIdleTimeoutRememberMe")
    public Integer ssoSessionIdleTimeoutRememberMe;
    public RealmRepresentation withSsoSessionIdleTimeoutRememberMe(Integer ssoSessionIdleTimeoutRememberMe) {
        this.ssoSessionIdleTimeoutRememberMe = ssoSessionIdleTimeoutRememberMe;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssoSessionMaxLifespan")
    public Integer ssoSessionMaxLifespan;
    public RealmRepresentation withSsoSessionMaxLifespan(Integer ssoSessionMaxLifespan) {
        this.ssoSessionMaxLifespan = ssoSessionMaxLifespan;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ssoSessionMaxLifespanRememberMe")
    public Integer ssoSessionMaxLifespanRememberMe;
    public RealmRepresentation withSsoSessionMaxLifespanRememberMe(Integer ssoSessionMaxLifespanRememberMe) {
        this.ssoSessionMaxLifespanRememberMe = ssoSessionMaxLifespanRememberMe;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supportedLocales")
    public String[] supportedLocales;
    public RealmRepresentation withSupportedLocales(String[] supportedLocales) {
        this.supportedLocales = supportedLocales;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userFederationMappers")
    public UserFederationMapperRepresentation[] userFederationMappers;
    public RealmRepresentation withUserFederationMappers(UserFederationMapperRepresentation[] userFederationMappers) {
        this.userFederationMappers = userFederationMappers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userFederationProviders")
    public UserFederationProviderRepresentation[] userFederationProviders;
    public RealmRepresentation withUserFederationProviders(UserFederationProviderRepresentation[] userFederationProviders) {
        this.userFederationProviders = userFederationProviders;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("userManagedAccessAllowed")
    public Boolean userManagedAccessAllowed;
    public RealmRepresentation withUserManagedAccessAllowed(Boolean userManagedAccessAllowed) {
        this.userManagedAccessAllowed = userManagedAccessAllowed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("users")
    public UserRepresentation[] users;
    public RealmRepresentation withUsers(UserRepresentation[] users) {
        this.users = users;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("verifyEmail")
    public Boolean verifyEmail;
    public RealmRepresentation withVerifyEmail(Boolean verifyEmail) {
        this.verifyEmail = verifyEmail;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("waitIncrementSeconds")
    public Integer waitIncrementSeconds;
    public RealmRepresentation withWaitIncrementSeconds(Integer waitIncrementSeconds) {
        this.waitIncrementSeconds = waitIncrementSeconds;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyAcceptableAaguids")
    public String[] webAuthnPolicyAcceptableAaguids;
    public RealmRepresentation withWebAuthnPolicyAcceptableAaguids(String[] webAuthnPolicyAcceptableAaguids) {
        this.webAuthnPolicyAcceptableAaguids = webAuthnPolicyAcceptableAaguids;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyAttestationConveyancePreference")
    public String webAuthnPolicyAttestationConveyancePreference;
    public RealmRepresentation withWebAuthnPolicyAttestationConveyancePreference(String webAuthnPolicyAttestationConveyancePreference) {
        this.webAuthnPolicyAttestationConveyancePreference = webAuthnPolicyAttestationConveyancePreference;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyAuthenticatorAttachment")
    public String webAuthnPolicyAuthenticatorAttachment;
    public RealmRepresentation withWebAuthnPolicyAuthenticatorAttachment(String webAuthnPolicyAuthenticatorAttachment) {
        this.webAuthnPolicyAuthenticatorAttachment = webAuthnPolicyAuthenticatorAttachment;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyAvoidSameAuthenticatorRegister")
    public Boolean webAuthnPolicyAvoidSameAuthenticatorRegister;
    public RealmRepresentation withWebAuthnPolicyAvoidSameAuthenticatorRegister(Boolean webAuthnPolicyAvoidSameAuthenticatorRegister) {
        this.webAuthnPolicyAvoidSameAuthenticatorRegister = webAuthnPolicyAvoidSameAuthenticatorRegister;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyCreateTimeout")
    public Integer webAuthnPolicyCreateTimeout;
    public RealmRepresentation withWebAuthnPolicyCreateTimeout(Integer webAuthnPolicyCreateTimeout) {
        this.webAuthnPolicyCreateTimeout = webAuthnPolicyCreateTimeout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyPasswordlessAcceptableAaguids")
    public String[] webAuthnPolicyPasswordlessAcceptableAaguids;
    public RealmRepresentation withWebAuthnPolicyPasswordlessAcceptableAaguids(String[] webAuthnPolicyPasswordlessAcceptableAaguids) {
        this.webAuthnPolicyPasswordlessAcceptableAaguids = webAuthnPolicyPasswordlessAcceptableAaguids;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyPasswordlessAttestationConveyancePreference")
    public String webAuthnPolicyPasswordlessAttestationConveyancePreference;
    public RealmRepresentation withWebAuthnPolicyPasswordlessAttestationConveyancePreference(String webAuthnPolicyPasswordlessAttestationConveyancePreference) {
        this.webAuthnPolicyPasswordlessAttestationConveyancePreference = webAuthnPolicyPasswordlessAttestationConveyancePreference;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyPasswordlessAuthenticatorAttachment")
    public String webAuthnPolicyPasswordlessAuthenticatorAttachment;
    public RealmRepresentation withWebAuthnPolicyPasswordlessAuthenticatorAttachment(String webAuthnPolicyPasswordlessAuthenticatorAttachment) {
        this.webAuthnPolicyPasswordlessAuthenticatorAttachment = webAuthnPolicyPasswordlessAuthenticatorAttachment;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister")
    public Boolean webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister;
    public RealmRepresentation withWebAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister(Boolean webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister) {
        this.webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister = webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyPasswordlessCreateTimeout")
    public Integer webAuthnPolicyPasswordlessCreateTimeout;
    public RealmRepresentation withWebAuthnPolicyPasswordlessCreateTimeout(Integer webAuthnPolicyPasswordlessCreateTimeout) {
        this.webAuthnPolicyPasswordlessCreateTimeout = webAuthnPolicyPasswordlessCreateTimeout;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyPasswordlessRequireResidentKey")
    public String webAuthnPolicyPasswordlessRequireResidentKey;
    public RealmRepresentation withWebAuthnPolicyPasswordlessRequireResidentKey(String webAuthnPolicyPasswordlessRequireResidentKey) {
        this.webAuthnPolicyPasswordlessRequireResidentKey = webAuthnPolicyPasswordlessRequireResidentKey;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyPasswordlessRpEntityName")
    public String webAuthnPolicyPasswordlessRpEntityName;
    public RealmRepresentation withWebAuthnPolicyPasswordlessRpEntityName(String webAuthnPolicyPasswordlessRpEntityName) {
        this.webAuthnPolicyPasswordlessRpEntityName = webAuthnPolicyPasswordlessRpEntityName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyPasswordlessRpId")
    public String webAuthnPolicyPasswordlessRpId;
    public RealmRepresentation withWebAuthnPolicyPasswordlessRpId(String webAuthnPolicyPasswordlessRpId) {
        this.webAuthnPolicyPasswordlessRpId = webAuthnPolicyPasswordlessRpId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyPasswordlessSignatureAlgorithms")
    public String[] webAuthnPolicyPasswordlessSignatureAlgorithms;
    public RealmRepresentation withWebAuthnPolicyPasswordlessSignatureAlgorithms(String[] webAuthnPolicyPasswordlessSignatureAlgorithms) {
        this.webAuthnPolicyPasswordlessSignatureAlgorithms = webAuthnPolicyPasswordlessSignatureAlgorithms;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyPasswordlessUserVerificationRequirement")
    public String webAuthnPolicyPasswordlessUserVerificationRequirement;
    public RealmRepresentation withWebAuthnPolicyPasswordlessUserVerificationRequirement(String webAuthnPolicyPasswordlessUserVerificationRequirement) {
        this.webAuthnPolicyPasswordlessUserVerificationRequirement = webAuthnPolicyPasswordlessUserVerificationRequirement;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyRequireResidentKey")
    public String webAuthnPolicyRequireResidentKey;
    public RealmRepresentation withWebAuthnPolicyRequireResidentKey(String webAuthnPolicyRequireResidentKey) {
        this.webAuthnPolicyRequireResidentKey = webAuthnPolicyRequireResidentKey;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyRpEntityName")
    public String webAuthnPolicyRpEntityName;
    public RealmRepresentation withWebAuthnPolicyRpEntityName(String webAuthnPolicyRpEntityName) {
        this.webAuthnPolicyRpEntityName = webAuthnPolicyRpEntityName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyRpId")
    public String webAuthnPolicyRpId;
    public RealmRepresentation withWebAuthnPolicyRpId(String webAuthnPolicyRpId) {
        this.webAuthnPolicyRpId = webAuthnPolicyRpId;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicySignatureAlgorithms")
    public String[] webAuthnPolicySignatureAlgorithms;
    public RealmRepresentation withWebAuthnPolicySignatureAlgorithms(String[] webAuthnPolicySignatureAlgorithms) {
        this.webAuthnPolicySignatureAlgorithms = webAuthnPolicySignatureAlgorithms;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("webAuthnPolicyUserVerificationRequirement")
    public String webAuthnPolicyUserVerificationRequirement;
    public RealmRepresentation withWebAuthnPolicyUserVerificationRequirement(String webAuthnPolicyUserVerificationRequirement) {
        this.webAuthnPolicyUserVerificationRequirement = webAuthnPolicyUserVerificationRequirement;
        return this;
    }
    
}
