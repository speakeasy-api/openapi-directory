/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class ReportCloudRecording200ApplicationJSONCloudRecordingStorage {
    /**
     * Date of the usage
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date")
    public OffsetDateTime date;
    public ReportCloudRecording200ApplicationJSONCloudRecordingStorage withDate(OffsetDateTime date) {
        this.date = date;
        return this;
    }
    
    /**
     * Free storage
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("free_usage")
    public String freeUsage;
    public ReportCloudRecording200ApplicationJSONCloudRecordingStorage withFreeUsage(String freeUsage) {
        this.freeUsage = freeUsage;
        return this;
    }
    
    /**
     * Paid storage
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("plan_usage")
    public String planUsage;
    public ReportCloudRecording200ApplicationJSONCloudRecordingStorage withPlanUsage(String planUsage) {
        this.planUsage = planUsage;
        return this;
    }
    
    /**
     * Storage used on the date
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("usage")
    public String usage;
    public ReportCloudRecording200ApplicationJSONCloudRecordingStorage withUsage(String usage) {
        this.usage = usage;
        return this;
    }
    
}
