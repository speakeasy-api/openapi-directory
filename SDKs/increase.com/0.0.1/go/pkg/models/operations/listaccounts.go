// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

// ListAccountsStatusEnum - Filter Accounts for those with the specified status.
type ListAccountsStatusEnum string

const (
	ListAccountsStatusEnumOpen   ListAccountsStatusEnum = "open"
	ListAccountsStatusEnumClosed ListAccountsStatusEnum = "closed"
)

func (e ListAccountsStatusEnum) ToPointer() *ListAccountsStatusEnum {
	return &e
}

func (e *ListAccountsStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "open":
		fallthrough
	case "closed":
		*e = ListAccountsStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsStatusEnum: %v", v)
	}
}

type ListAccountsRequest struct {
	CreatedAtAfter      *time.Time `queryParam:"style=form,explode=true,name=created_at.after"`
	CreatedAtBefore     *time.Time `queryParam:"style=form,explode=true,name=created_at.before"`
	CreatedAtOnOrAfter  *time.Time `queryParam:"style=form,explode=true,name=created_at.on_or_after"`
	CreatedAtOnOrBefore *time.Time `queryParam:"style=form,explode=true,name=created_at.on_or_before"`
	Cursor              *string    `queryParam:"style=form,explode=true,name=cursor"`
	EntityID            *string    `queryParam:"style=form,explode=true,name=entity_id"`
	Limit               *int64     `queryParam:"style=form,explode=true,name=limit"`
	// Filter Accounts for those with the specified status.
	Status *ListAccountsStatusEnum `queryParam:"style=form,explode=true,name=status"`
}

type ListAccountsDefaultApplicationJSON13StatusEnum int64

const (
	ListAccountsDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ListAccountsDefaultApplicationJSON13StatusEnum = 429
)

func (e ListAccountsDefaultApplicationJSON13StatusEnum) ToPointer() *ListAccountsDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = ListAccountsDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON13TypeEnum string

const (
	ListAccountsDefaultApplicationJSON13TypeEnumRateLimitedError ListAccountsDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e ListAccountsDefaultApplicationJSON13TypeEnum) ToPointer() *ListAccountsDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = ListAccountsDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON13 struct {
	Detail     string                                         `json:"detail"`
	RetryAfter *int64                                         `json:"retry_after,omitempty"`
	Status     ListAccountsDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                         `json:"title"`
	Type       ListAccountsDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ListAccountsDefaultApplicationJSON12StatusEnum int64

const (
	ListAccountsDefaultApplicationJSON12StatusEnumFourHundredAndThree ListAccountsDefaultApplicationJSON12StatusEnum = 403
)

func (e ListAccountsDefaultApplicationJSON12StatusEnum) ToPointer() *ListAccountsDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListAccountsDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON12TypeEnum string

const (
	ListAccountsDefaultApplicationJSON12TypeEnumPrivateFeatureError ListAccountsDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e ListAccountsDefaultApplicationJSON12TypeEnum) ToPointer() *ListAccountsDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = ListAccountsDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON12 struct {
	Detail string                                         `json:"detail"`
	Status ListAccountsDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                         `json:"title"`
	Type   ListAccountsDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ListAccountsDefaultApplicationJSON11StatusEnum int64

const (
	ListAccountsDefaultApplicationJSON11StatusEnumFourHundredAndFour ListAccountsDefaultApplicationJSON11StatusEnum = 404
)

func (e ListAccountsDefaultApplicationJSON11StatusEnum) ToPointer() *ListAccountsDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ListAccountsDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON11TypeEnum string

const (
	ListAccountsDefaultApplicationJSON11TypeEnumObjectNotFoundError ListAccountsDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e ListAccountsDefaultApplicationJSON11TypeEnum) ToPointer() *ListAccountsDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = ListAccountsDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON11 struct {
	Detail string                                         `json:"detail"`
	Status ListAccountsDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                         `json:"title"`
	Type   ListAccountsDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ListAccountsDefaultApplicationJSON10StatusEnum int64

const (
	ListAccountsDefaultApplicationJSON10StatusEnumFourHundred ListAccountsDefaultApplicationJSON10StatusEnum = 400
)

func (e ListAccountsDefaultApplicationJSON10StatusEnum) ToPointer() *ListAccountsDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ListAccountsDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON10TypeEnum string

const (
	ListAccountsDefaultApplicationJSON10TypeEnumMalformedRequestError ListAccountsDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e ListAccountsDefaultApplicationJSON10TypeEnum) ToPointer() *ListAccountsDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = ListAccountsDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON10 struct {
	Detail string                                         `json:"detail"`
	Status ListAccountsDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                         `json:"title"`
	Type   ListAccountsDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ListAccountsDefaultApplicationJSON9StatusEnum int64

const (
	ListAccountsDefaultApplicationJSON9StatusEnumFourHundred ListAccountsDefaultApplicationJSON9StatusEnum = 400
)

func (e ListAccountsDefaultApplicationJSON9StatusEnum) ToPointer() *ListAccountsDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ListAccountsDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON9TypeEnum string

const (
	ListAccountsDefaultApplicationJSON9TypeEnumInvalidParametersError ListAccountsDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e ListAccountsDefaultApplicationJSON9TypeEnum) ToPointer() *ListAccountsDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = ListAccountsDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                      `json:"errors"`
	Status ListAccountsDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListAccountsDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ListAccountsDefaultApplicationJSON8StatusEnum int64

const (
	ListAccountsDefaultApplicationJSON8StatusEnumFourHundredAndNine ListAccountsDefaultApplicationJSON8StatusEnum = 409
)

func (e ListAccountsDefaultApplicationJSON8StatusEnum) ToPointer() *ListAccountsDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ListAccountsDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON8TypeEnum string

const (
	ListAccountsDefaultApplicationJSON8TypeEnumInvalidOperationError ListAccountsDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e ListAccountsDefaultApplicationJSON8TypeEnum) ToPointer() *ListAccountsDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = ListAccountsDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON8 struct {
	Detail string                                        `json:"detail"`
	Status ListAccountsDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListAccountsDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ListAccountsDefaultApplicationJSON7StatusEnum int64

const (
	ListAccountsDefaultApplicationJSON7StatusEnumFourHundredAndOne ListAccountsDefaultApplicationJSON7StatusEnum = 401
)

func (e ListAccountsDefaultApplicationJSON7StatusEnum) ToPointer() *ListAccountsDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = ListAccountsDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON7TypeEnum string

const (
	ListAccountsDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ListAccountsDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e ListAccountsDefaultApplicationJSON7TypeEnum) ToPointer() *ListAccountsDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = ListAccountsDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON7 struct {
	Detail string                                        `json:"detail"`
	Status ListAccountsDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListAccountsDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ListAccountsDefaultApplicationJSON6StatusEnum int64

const (
	ListAccountsDefaultApplicationJSON6StatusEnumFiveHundred ListAccountsDefaultApplicationJSON6StatusEnum = 500
)

func (e ListAccountsDefaultApplicationJSON6StatusEnum) ToPointer() *ListAccountsDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = ListAccountsDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON6TypeEnum string

const (
	ListAccountsDefaultApplicationJSON6TypeEnumInternalServerError ListAccountsDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e ListAccountsDefaultApplicationJSON6TypeEnum) ToPointer() *ListAccountsDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = ListAccountsDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON6 struct {
	Detail string                                        `json:"detail"`
	Status ListAccountsDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListAccountsDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ListAccountsDefaultApplicationJSON5StatusEnum int64

const (
	ListAccountsDefaultApplicationJSON5StatusEnumFourHundredAndThree ListAccountsDefaultApplicationJSON5StatusEnum = 403
)

func (e ListAccountsDefaultApplicationJSON5StatusEnum) ToPointer() *ListAccountsDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListAccountsDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON5TypeEnum string

const (
	ListAccountsDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ListAccountsDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e ListAccountsDefaultApplicationJSON5TypeEnum) ToPointer() *ListAccountsDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = ListAccountsDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON5 struct {
	Detail string                                        `json:"detail"`
	Status ListAccountsDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListAccountsDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ListAccountsDefaultApplicationJSON4StatusEnum int64

const (
	ListAccountsDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ListAccountsDefaultApplicationJSON4StatusEnum = 422
)

func (e ListAccountsDefaultApplicationJSON4StatusEnum) ToPointer() *ListAccountsDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = ListAccountsDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON4TypeEnum string

const (
	ListAccountsDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ListAccountsDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e ListAccountsDefaultApplicationJSON4TypeEnum) ToPointer() *ListAccountsDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = ListAccountsDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON4 struct {
	Detail string                                        `json:"detail"`
	Status ListAccountsDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListAccountsDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ListAccountsDefaultApplicationJSON3StatusEnum int64

const (
	ListAccountsDefaultApplicationJSON3StatusEnumFourHundredAndNine ListAccountsDefaultApplicationJSON3StatusEnum = 409
)

func (e ListAccountsDefaultApplicationJSON3StatusEnum) ToPointer() *ListAccountsDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ListAccountsDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON3TypeEnum string

const (
	ListAccountsDefaultApplicationJSON3TypeEnumIdempotencyConflictError ListAccountsDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e ListAccountsDefaultApplicationJSON3TypeEnum) ToPointer() *ListAccountsDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = ListAccountsDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON3 struct {
	Detail string                                        `json:"detail"`
	Status ListAccountsDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListAccountsDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ListAccountsDefaultApplicationJSON2StatusEnum int64

const (
	ListAccountsDefaultApplicationJSON2StatusEnumFourHundredAndThree ListAccountsDefaultApplicationJSON2StatusEnum = 403
)

func (e ListAccountsDefaultApplicationJSON2StatusEnum) ToPointer() *ListAccountsDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ListAccountsDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON2TypeEnum string

const (
	ListAccountsDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ListAccountsDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e ListAccountsDefaultApplicationJSON2TypeEnum) ToPointer() *ListAccountsDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = ListAccountsDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON2 struct {
	Detail string                                        `json:"detail"`
	Status ListAccountsDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListAccountsDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ListAccountsDefaultApplicationJSON1StatusEnum int64

const (
	ListAccountsDefaultApplicationJSON1StatusEnumFourHundredAndFour ListAccountsDefaultApplicationJSON1StatusEnum = 404
)

func (e ListAccountsDefaultApplicationJSON1StatusEnum) ToPointer() *ListAccountsDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ListAccountsDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON1TypeEnum string

const (
	ListAccountsDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ListAccountsDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e ListAccountsDefaultApplicationJSON1TypeEnum) ToPointer() *ListAccountsDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *ListAccountsDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = ListAccountsDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListAccountsDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type ListAccountsDefaultApplicationJSON1 struct {
	Detail string                                        `json:"detail"`
	Status ListAccountsDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                        `json:"title"`
	Type   ListAccountsDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ListAccountsResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Account List
	AccountList *shared.AccountList
	// Error
	Error interface{}
}
