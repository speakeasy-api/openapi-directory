"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TrafficRule:
    r"""Network emulation parameters."""
    
    bandwidth: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bandwidth'), 'exclude': lambda f: f is None }})
    r"""Bandwidth in kbits/second."""  
    burst: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('burst'), 'exclude': lambda f: f is None }})
    r"""Burst size in kbits."""  
    delay: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('delay'), 'exclude': lambda f: f is None }})
    r"""Packet delay, must be >= 0."""  
    packet_duplication_ratio: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('packetDuplicationRatio'), 'exclude': lambda f: f is None }})
    r"""Packet duplication ratio (0.0 - 1.0)."""  
    packet_loss_ratio: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('packetLossRatio'), 'exclude': lambda f: f is None }})
    r"""Packet loss ratio (0.0 - 1.0)."""  
    