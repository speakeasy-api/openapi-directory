"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class GetNetworkWebhooksWebhookTestRequest:
    
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    webhook_test_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'webhookTestId', 'style': 'simple', 'explode': False }})  
    
class GetNetworkWebhooksWebhookTest200ApplicationJSONStatusEnum(str, Enum):
    r"""Current status of the webhook delivery"""
    ABANDONED = 'abandoned'
    DELIVERED = 'delivered'
    ENQUEUED = 'enqueued'
    PROCESSING = 'processing'
    RETRYING = 'retrying'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetNetworkWebhooksWebhookTest200ApplicationJSON:
    r"""Successful operation"""
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Webhook delivery identifier"""  
    status: Optional[GetNetworkWebhooksWebhookTest200ApplicationJSONStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""Current status of the webhook delivery"""  
    url: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url'), 'exclude': lambda f: f is None }})
    r"""URL where the webhook was delivered"""  
    

@dataclasses.dataclass
class GetNetworkWebhooksWebhookTestResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_network_webhooks_webhook_test_200_application_json_object: Optional[GetNetworkWebhooksWebhookTest200ApplicationJSON] = dataclasses.field(default=None)
    r"""Successful operation"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    