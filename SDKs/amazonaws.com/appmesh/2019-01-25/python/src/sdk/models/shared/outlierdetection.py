"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import duration as shared_duration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OutlierDetection:
    r"""An object that represents the outlier detection for a virtual node's listener."""
    
    base_ejection_duration: shared_duration.Duration = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('baseEjectionDuration') }})  
    interval: shared_duration.Duration = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interval') }})  
    max_ejection_percent: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxEjectionPercent') }})  
    max_server_errors: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('maxServerErrors') }})  
    