<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetRoutingVersionNumberCalculateReachableRangeOriginContentTypeRequest
{
    /**
     * Specifies the efficiency of converting chemical energy stored in fuel to kinetic energy when the vehicle accelerates (i.e. KineticEnergyGained/ChemicalEnergyConsumed).
     * 
     * @var ?float $accelerationEfficiency
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=accelerationEfficiency')]
    public ?float $accelerationEfficiency = null;
    
    /**
     * The date and time of arrival at the destination point. It must be specified as a dateTime.
     * 
     * @var ?string $arriveAt
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=arriveAt')]
    public ?string $arriveAt = null;
    
    /**
     * Specifies the amount of fuel consumed for sustaining auxiliary systems of the vehicle, in liters per hour.
     * 
     * @var ?float $auxiliaryPowerInLitersPerHour
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=auxiliaryPowerInLitersPerHour')]
    public ?float $auxiliaryPowerInLitersPerHour = null;
    
    /**
     * Specifies whether the routing engine should try to avoid specific types of road segment when calculating the route. Can be specified multiple times.
     * 
     * Possible values:
     *   - tollRoads
     *   - motorways
     *   - ferries
     *   - unpavedRoads
     *   - carpools
     * 
     * @var ?string $avoid
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=avoid')]
    public ?string $avoid = null;
    
    /**
     * Specifies the jsonp callback method.
     * 
     * @var ?string $callback
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=callback')]
    public ?string $callback = null;
    
    /**
     * Specifies the speed-dependent component of consumption. Provided as an unordered list of speed/consumption-rate pairs.
     * 
     * @var ?string $constantSpeedConsumptionInLitersPerHundredkm
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=constantSpeedConsumptionInLitersPerHundredkm')]
    public ?string $constantSpeedConsumptionInLitersPerHundredkm = null;
    
    /**
     * Specifies the speed-dependent component of consumption. Provided as an unordered list of speed/consumption-rate pairs.
     * 
     * @var ?string $constantSpeedConsumptionInkWhPerHundredkm
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=constantSpeedConsumptionInkWhPerHundredkm')]
    public ?string $constantSpeedConsumptionInkWhPerHundredkm = null;
    
    /**
     * The content type of the response structure. If the content type is jsonp, a callback method can be specified in the query parameters.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\ContentTypeEnum $contentType
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=contentType')]
    public \OpenAPI\OpenAPI\Models\Shared\ContentTypeEnum $contentType;
    
    /**
     * Specifies the current supply of fuel in liters.
     * 
     * @var ?float $currentFuelInLiters
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=currentFuelInLiters')]
    public ?float $currentFuelInLiters = null;
    
    /**
     * Specifies the efficiency of converting kinetic energy to saved (not consumed) fuel when the vehicle decelerates (i.e. ChemicalEnergySaved/KineticEnergyLost).
     * 
     * @var ?float $decelerationEfficiency
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=decelerationEfficiency')]
    public ?float $decelerationEfficiency = null;
    
    /**
     * The date and time of departure from the origin point. Departure times apart from <i>now</i> must be specified as a dateTime.
     * 
     * @var ?string $departAt
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=departAt')]
    public ?string $departAt = null;
    
    /**
     * Specifies the efficiency of converting potential energy to saved (not consumed) fuel when the vehicle loses elevation (i.e. ChemicalEnergySaved/PotentialEnergyLost).
     * 
     * @var ?float $downhillEfficiency
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=downhillEfficiency')]
    public ?float $downhillEfficiency = null;
    
    /**
     * Electric energy budget in kilowatt hours (kWh). Determines the maximum vehicle range using the specified Electric Consumption Model.
     * 
     * @var ?float $energyBudgetInkWh
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=energyBudgetInkWh')]
    public ?float $energyBudgetInkWh = null;
    
    /**
     * Fuel budget in liters. Determines the maximum vehicle range using the specified Combustion Consumption Model.
     * 
     * @var ?float $fuelBudgetInLiters
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=fuelBudgetInLiters')]
    public ?float $fuelBudgetInLiters = null;
    
    /**
     * Specifies the amount of chemical energy stored in one liter of fuel in megajoules (MJ).
     * 
     * @var ?float $fuelEnergyDensityInMJoulesPerLiter
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=fuelEnergyDensityInMJoulesPerLiter')]
    public ?float $fuelEnergyDensityInMJoulesPerLiter = null;
    
    /**
     * Degree of hilliness for calculating a thrilling route.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\HillinessEnum $hilliness
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=hilliness')]
    public ?\OpenAPI\OpenAPI\Models\Shared\HillinessEnum $hilliness = null;
    
    /**
     * Point from which the range calculation should start.
     * 
     * @var string $origin
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=origin')]
    public string $origin;
    
    /**
     * Specifies which data should be reported for diagnosis purposes.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ReportEnum $report
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=report')]
    public ?\OpenAPI\OpenAPI\Models\Shared\ReportEnum $report = null;
    
    /**
     * The type of route requested.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\RouteTypeEnum $routeType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=routeType')]
    public ?\OpenAPI\OpenAPI\Models\Shared\RouteTypeEnum $routeType = null;
    
    /**
     * Time budget in seconds. Determines the maximum vehicle range using the specified driving time. The consumption parameters in the request will only affect eco-routes, and thereby indirectly the driving time.
     * 
     * @var ?float $timeBudgetInSec
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=timeBudgetInSec')]
    public ?float $timeBudgetInSec = null;
    
    /**
     * Determines whether current traffic is used in route calculations. Note that information on historic road speeds is always used.
     * 
     * @var ?bool $traffic
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=traffic')]
    public ?bool $traffic = null;
    
    /**
     * The mode of travel for the requested route.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TravelModeEnum $travelMode
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=travelMode')]
    public ?\OpenAPI\OpenAPI\Models\Shared\TravelModeEnum $travelMode = null;
    
    /**
     * Specifies the efficiency of converting chemical energy stored in fuel to potential energy when the vehicle gains elevation (i.e. PotentialEnergyGained/ChemicalEnergyConsumed).
     * 
     * @var ?float $uphillEfficiency
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=uphillEfficiency')]
    public ?float $uphillEfficiency = null;
    
    /**
     * Weight per axle of the vehicle in kg.
     * 
     * @var ?int $vehicleAxleWeight
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=vehicleAxleWeight')]
    public ?int $vehicleAxleWeight = null;
    
    /**
     * Indicates that the vehicle is used for commercial purposes. This means it may not be allowed on certain roads.
     * 
     * @var ?bool $vehicleCommercial
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=vehicleCommercial')]
    public ?bool $vehicleCommercial = null;
    
    /**
     * Engine type of the vehicle.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetRoutingVersionNumberCalculateReachableRangeOriginContentTypeVehicleEngineTypeEnum $vehicleEngineType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=vehicleEngineType')]
    public ?GetRoutingVersionNumberCalculateReachableRangeOriginContentTypeVehicleEngineTypeEnum $vehicleEngineType = null;
    
    /**
     * Height of the vehicle in meters.
     * 
     * @var ?float $vehicleHeight
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=vehicleHeight')]
    public ?float $vehicleHeight = null;
    
    /**
     * Length of the vehicle in meters.
     * 
     * @var ?float $vehicleLength
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=vehicleLength')]
    public ?float $vehicleLength = null;
    
    /**
     * Indicates what kinds of hazardous materials the vehicle is carrying (if any). This means it may not be allowed on certain roads.
     * 
     * Use these for routing in the US:
     * 
     *   - <i>USHazmatClass1</i> Explosives
     *   - <i>USHazmatClass2</i> Compressed gas
     *   - <i>USHazmatClass3</i> Flammable liquids
     *   - <i>USHazmatClass4</i> Flammable solids
     *   - <i>USHazmatClass5</i> Oxidizers
     *   - <i>USHazmatClass6</i> Poisons
     *   - <i>USHazmatClass7</i> Radioactive
     *   - <i>USHazmatClass8</i> Corrosives
     *   - <i>USHazmatClass9</i> Miscellaneous
     * 
     * Use these for routing in all other countries:
     * 
     *   - <i>otherHazmatExplosive</i> Explosives
     *   - <i>otherHazmatGeneral</i> Miscellaneous
     *   - <i>otherHazmatHarmfulToWater</i> Harmful to water
     * 
     * vehicleLoadType can be specified multiple times. This parameter is currently only considered for <b>travelMode</b>=<i>truck</i>.
     * 
     * @var ?string $vehicleLoadType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=vehicleLoadType')]
    public ?string $vehicleLoadType = null;
    
    /**
     * Maximum speed of the vehicle in km/hour.
     * 
     * @var ?int $vehicleMaxSpeed
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=vehicleMaxSpeed')]
    public ?int $vehicleMaxSpeed = null;
    
    /**
     * Weight of the vehicle in kilograms.
     * 
     * @var ?int $vehicleWeight
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=vehicleWeight')]
    public ?int $vehicleWeight = null;
    
    /**
     * Width of the vehicle in meters.
     * 
     * @var ?float $vehicleWidth
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=vehicleWidth')]
    public ?float $vehicleWidth = null;
    
    /**
     * Service version number. The current value is 1.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\VersionNumberEnum $versionNumber
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=versionNumber')]
    public \OpenAPI\OpenAPI\Models\Shared\VersionNumberEnum $versionNumber;
    
    /**
     * Amount that a thrilling route should wind.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\WindingnessEnum $windingness
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=windingness')]
    public ?\OpenAPI\OpenAPI\Models\Shared\WindingnessEnum $windingness = null;
    
	public function __construct()
	{
		$this->accelerationEfficiency = null;
		$this->arriveAt = null;
		$this->auxiliaryPowerInLitersPerHour = null;
		$this->avoid = null;
		$this->callback = null;
		$this->constantSpeedConsumptionInLitersPerHundredkm = null;
		$this->constantSpeedConsumptionInkWhPerHundredkm = null;
		$this->contentType = \OpenAPI\OpenAPI\Models\Shared\ContentTypeEnum::XML;
		$this->currentFuelInLiters = null;
		$this->decelerationEfficiency = null;
		$this->departAt = null;
		$this->downhillEfficiency = null;
		$this->energyBudgetInkWh = null;
		$this->fuelBudgetInLiters = null;
		$this->fuelEnergyDensityInMJoulesPerLiter = null;
		$this->hilliness = null;
		$this->origin = "";
		$this->report = null;
		$this->routeType = null;
		$this->timeBudgetInSec = null;
		$this->traffic = null;
		$this->travelMode = null;
		$this->uphillEfficiency = null;
		$this->vehicleAxleWeight = null;
		$this->vehicleCommercial = null;
		$this->vehicleEngineType = null;
		$this->vehicleHeight = null;
		$this->vehicleLength = null;
		$this->vehicleLoadType = null;
		$this->vehicleMaxSpeed = null;
		$this->vehicleWeight = null;
		$this->vehicleWidth = null;
		$this->versionNumber = \OpenAPI\OpenAPI\Models\Shared\VersionNumberEnum::ONE;
		$this->windingness = null;
	}
}
