/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class PostPrimaryIpsIdActionsUnassignRequest extends SpeakeasyBase {
  /**
   * ID of the Primary IP
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: number;
}

/**
 * Error message for the Action if error occurred, otherwise null
 */
export class PostPrimaryIpsIdActionsUnassignActionResponseActionError extends SpeakeasyBase {
  /**
   * Fixed machine readable code
   */
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: string;

  /**
   * Humanized error message
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

export class PostPrimaryIpsIdActionsUnassignActionResponseActionResources extends SpeakeasyBase {
  /**
   * ID of the Resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Type of resource referenced
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;
}

/**
 * Status of the Action
 */
export enum PostPrimaryIpsIdActionsUnassignActionResponseActionStatusEnum {
  Success = "success",
  Running = "running",
  Error = "error",
}

export class PostPrimaryIpsIdActionsUnassignActionResponseAction extends SpeakeasyBase {
  /**
   * Command executed in the Action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "command" })
  command: string;

  /**
   * Error message for the Action if error occurred, otherwise null
   */
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => PostPrimaryIpsIdActionsUnassignActionResponseActionError)
  error: PostPrimaryIpsIdActionsUnassignActionResponseActionError;

  /**
   * Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "finished" })
  finished: string;

  /**
   * ID of the Resource
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  /**
   * Progress of Action in percent
   */
  @SpeakeasyMetadata()
  @Expose({ name: "progress" })
  progress: number;

  /**
   * Resources the Action relates to
   */
  @SpeakeasyMetadata({
    elemType: PostPrimaryIpsIdActionsUnassignActionResponseActionResources,
  })
  @Expose({ name: "resources" })
  @Type(() => PostPrimaryIpsIdActionsUnassignActionResponseActionResources)
  resources: PostPrimaryIpsIdActionsUnassignActionResponseActionResources[];

  /**
   * Point in time when the Action was started (in ISO-8601 format)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "started" })
  started: string;

  /**
   * Status of the Action
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: PostPrimaryIpsIdActionsUnassignActionResponseActionStatusEnum;
}

/**
 * The `action` key in the reply contains an Action object with this structure
 */
export class PostPrimaryIpsIdActionsUnassignActionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  @Type(() => PostPrimaryIpsIdActionsUnassignActionResponseAction)
  action: PostPrimaryIpsIdActionsUnassignActionResponseAction;
}

export class PostPrimaryIpsIdActionsUnassignResponse extends SpeakeasyBase {
  /**
   * The `action` key in the reply contains an Action object with this structure
   */
  @SpeakeasyMetadata()
  actionResponse?: PostPrimaryIpsIdActionsUnassignActionResponse;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
