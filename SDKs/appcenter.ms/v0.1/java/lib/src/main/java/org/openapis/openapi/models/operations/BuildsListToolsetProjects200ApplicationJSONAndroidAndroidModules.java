/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class BuildsListToolsetProjects200ApplicationJSONAndroidAndroidModules {
    /**
     * The detected build configurations of the Android module
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buildConfigurations")
    public BuildsListToolsetProjects200ApplicationJSONAndroidAndroidModulesBuildConfigurations[] buildConfigurations;
    public BuildsListToolsetProjects200ApplicationJSONAndroidAndroidModules withBuildConfigurations(BuildsListToolsetProjects200ApplicationJSONAndroidAndroidModulesBuildConfigurations[] buildConfigurations) {
        this.buildConfigurations = buildConfigurations;
        return this;
    }
    
    /**
     * The detected build types of the Android module
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buildTypes")
    public String[] buildTypes;
    public BuildsListToolsetProjects200ApplicationJSONAndroidAndroidModules withBuildTypes(String[] buildTypes) {
        this.buildTypes = buildTypes;
        return this;
    }
    
    /**
     * The detected build variants of the Android module (matrix of product flavor + build type (debug|release))
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buildVariants")
    public String[] buildVariants;
    public BuildsListToolsetProjects200ApplicationJSONAndroidAndroidModules withBuildVariants(String[] buildVariants) {
        this.buildVariants = buildVariants;
        return this;
    }
    
    /**
     * Module contains bundle settings
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hasBundle")
    public Boolean hasBundle;
    public BuildsListToolsetProjects200ApplicationJSONAndroidAndroidModules withHasBundle(Boolean hasBundle) {
        this.hasBundle = hasBundle;
        return this;
    }
    
    /**
     * Whether the module is at the root level of the project
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isRoot")
    public Boolean isRoot;
    public BuildsListToolsetProjects200ApplicationJSONAndroidAndroidModules withIsRoot(Boolean isRoot) {
        this.isRoot = isRoot;
        return this;
    }
    
    /**
     * Name of the Android module
     */
    @JsonProperty("name")
    public String name;
    public BuildsListToolsetProjects200ApplicationJSONAndroidAndroidModules withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The product flavors of the Android module
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productFlavors")
    public String[] productFlavors;
    public BuildsListToolsetProjects200ApplicationJSONAndroidAndroidModules withProductFlavors(String[] productFlavors) {
        this.productFlavors = productFlavors;
        return this;
    }
    
}
