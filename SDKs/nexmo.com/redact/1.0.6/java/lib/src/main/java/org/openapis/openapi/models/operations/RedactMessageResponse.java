/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class RedactMessageResponse {
    
    public String contentType;

    public RedactMessageResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * No such record
     */
    
    public org.openapis.openapi.models.shared.ErrorInvalidId errorInvalidId;

    public RedactMessageResponse withErrorInvalidId(org.openapis.openapi.models.shared.ErrorInvalidId errorInvalidId) {
        this.errorInvalidId = errorInvalidId;
        return this;
    }
    
    /**
     * Rate Limited
     */
    
    public org.openapis.openapi.models.shared.ErrorThrottled errorThrottled;

    public RedactMessageResponse withErrorThrottled(org.openapis.openapi.models.shared.ErrorThrottled errorThrottled) {
        this.errorThrottled = errorThrottled;
        return this;
    }
    
    /**
     * Authentication failure
     */
    
    public org.openapis.openapi.models.shared.ErrorUnauthorized errorUnauthorized;

    public RedactMessageResponse withErrorUnauthorized(org.openapis.openapi.models.shared.ErrorUnauthorized errorUnauthorized) {
        this.errorUnauthorized = errorUnauthorized;
        return this;
    }
    
    
    public Integer statusCode;

    public RedactMessageResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public RedactMessageResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * Authorisation denied
     */
    
    public Object redactMessage403ApplicationJSONOneOf;

    public RedactMessageResponse withRedactMessage403ApplicationJSONOneOf(Object redactMessage403ApplicationJSONOneOf) {
        this.redactMessage403ApplicationJSONOneOf = redactMessage403ApplicationJSONOneOf;
        return this;
    }
    
    /**
     * Invalid JSON body
     */
    
    public Object redactMessage422ApplicationJSONOneOf;

    public RedactMessageResponse withRedactMessage422ApplicationJSONOneOf(Object redactMessage422ApplicationJSONOneOf) {
        this.redactMessage422ApplicationJSONOneOf = redactMessage422ApplicationJSONOneOf;
        return this;
    }
    
    public RedactMessageResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
