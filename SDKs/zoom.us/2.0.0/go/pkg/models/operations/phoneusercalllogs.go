// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
	"openapi/pkg/types"
)

type PhoneUserCallLogsSecurity struct {
	OAuth shared.SchemeOAuth `security:"scheme,type=oauth2"`
}

type PhoneUserCallLogsPathParams struct {
	// The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.
	UserID string `pathParam:"style=simple,explode=false,name=userId"`
}

// PhoneUserCallLogsTimeTypeEnum - Enables you to sort call logs by start or end time. Choose the sort time value. Values include `startTime` or `endTime`.
type PhoneUserCallLogsTimeTypeEnum string

const (
	PhoneUserCallLogsTimeTypeEnumStartTime PhoneUserCallLogsTimeTypeEnum = "startTime"
	PhoneUserCallLogsTimeTypeEnumEndTime   PhoneUserCallLogsTimeTypeEnum = "endTime"
)

func (e *PhoneUserCallLogsTimeTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "startTime":
		fallthrough
	case "endTime":
		*e = PhoneUserCallLogsTimeTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PhoneUserCallLogsTimeTypeEnum: %s", s)
	}
}

// PhoneUserCallLogsTypeEnum
type PhoneUserCallLogsTypeEnum string

const (
	PhoneUserCallLogsTypeEnumAll    PhoneUserCallLogsTypeEnum = "all"
	PhoneUserCallLogsTypeEnumMissed PhoneUserCallLogsTypeEnum = "missed"
)

func (e *PhoneUserCallLogsTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "missed":
		*e = PhoneUserCallLogsTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PhoneUserCallLogsTypeEnum: %s", s)
	}
}

type PhoneUserCallLogsQueryParams struct {
	// Start date in 'yyyy-mm-dd' format. The date range defined by the "from" and "to" parameters should only be one month as the report includes only one month worth of data at once.
	From types.Date `queryParam:"style=form,explode=true,name=from"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `queryParam:"style=form,explode=true,name=next_page_token"`
	// The number of records returned within a single API call.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page_size"`
	// Filter API responses to include call logs of only the phone number defined in this field.
	PhoneNumber *string `queryParam:"style=form,explode=true,name=phone_number"`
	// Enables you to sort call logs by start or end time. Choose the sort time value. Values include `startTime` or `endTime`.
	TimeType *PhoneUserCallLogsTimeTypeEnum `queryParam:"style=form,explode=true,name=time_type"`
	// End date.
	To   types.Date                 `queryParam:"style=form,explode=true,name=to"`
	Type *PhoneUserCallLogsTypeEnum `queryParam:"style=form,explode=true,name=type"`
}

type PhoneUserCallLogsRequest struct {
	PathParams  PhoneUserCallLogsPathParams
	QueryParams PhoneUserCallLogsQueryParams
	Security    PhoneUserCallLogsSecurity
}

// PhoneUserCallLogs200ApplicationXMLCallLogsAcceptedBy - Indicates who accepted the call.
type PhoneUserCallLogs200ApplicationXMLCallLogsAcceptedBy struct {
	ExtensionNumber *string
	Location        *string
	Name            *string
	NumberType      *string
	PhoneNumber     *string
}

// PhoneUserCallLogs200ApplicationXMLCallLogsForwardedBy - Indicates where the call was forwarded from.
type PhoneUserCallLogs200ApplicationXMLCallLogsForwardedBy struct {
	ExtensionNumber *string
	Location        *string
	Name            *string
	NumberType      *string
	PhoneNumber     *string
}

// PhoneUserCallLogs200ApplicationXMLCallLogsForwardedTo - Indicates who the call was forwarded to.
type PhoneUserCallLogs200ApplicationXMLCallLogsForwardedTo struct {
	ExtensionNumber *string
	Location        *string
	Name            *string
	NumberType      *string
	PhoneNumber     *string
}

type PhoneUserCallLogs200ApplicationXMLCallLogsOutgoingBy struct {
	ExtensionNumber *string
	Location        *string
	Name            *string
	NumberType      *string
	PhoneNumber     *string
}

type PhoneUserCallLogs200ApplicationXMLCallLogsSite struct {
	// Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.
	ID *string
	// Name of the site where the phone number is assigned.
	Name *string
}

type PhoneUserCallLogs200ApplicationXMLCallLogs struct {
	// Indicates who accepted the call.
	AcceptedBy *PhoneUserCallLogs200ApplicationXMLCallLogsAcceptedBy
	// Unique identifier of the phone call.
	CallID *string
	// Contact name of callee
	CalleeName *string
	// Number of callee
	CalleeNumber *string
	// Type of callee's number. 1 - internal | 2 - external
	CalleeNumberType *string
	// Contact name of caller
	CallerName *string
	// Number of caller
	CallerNumber *string
	// Type of caller's number. 1 - internal | 2 - external
	CallerNumberType *string
	// Billing charge for the call.
	Charge *string
	// Client code.
	ClientCode *string
	// Start time of the call
	DateTime *string
	// Direction of the call. "inbound" | "outbound"
	Direction *string
	// Duration of the call in seconds.
	Duration *int64
	// Indicates where the call was forwarded from.
	ForwardedBy *PhoneUserCallLogs200ApplicationXMLCallLogsForwardedBy
	// Indicates who the call was forwarded to.
	ForwardedTo *PhoneUserCallLogs200ApplicationXMLCallLogsForwardedTo
	// Whether the call has a recording or not.
	HasRecording *bool
	// Whether the call has voicemail or not.
	HasVoicemail *bool
	// Call Log ID
	ID         *string
	OutgoingBy *PhoneUserCallLogs200ApplicationXMLCallLogsOutgoingBy
	// Path of the call log.
	Path *string
	// Billing rate for the call.
	Rate *string
	// Recording type. <br>
	// * `1` - On-demand recording.<br>
	// * `2` - Automatic recording.
	RecordingType *string
	// Result of the call. "call_connected" | "recorded" | "no_answer"
	Result *string
	Site   *PhoneUserCallLogs200ApplicationXMLCallLogsSite
	// User ID or user email.
	UserID *string
	// Waiting time for the call, in seconds.
	WaitingTime *int64
}

// PhoneUserCallLogs200ApplicationXML - Phone User Call Logs
type PhoneUserCallLogs200ApplicationXML struct {
	// Call Log
	CallLogs []PhoneUserCallLogs200ApplicationXMLCallLogs
	// Date from which you would like to view the logs.
	From *string
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string
	// Total number of pages
	PageCount *int64
	// The number of records returned within a single API call for each page.
	PageSize *int64
	// Date up to which you would like to view the phone log.
	To *string
	// The total number of records returned.
	TotalRecords *int64
}

// PhoneUserCallLogs200ApplicationJSONCallLogsAcceptedBy - Indicates who accepted the call.
type PhoneUserCallLogs200ApplicationJSONCallLogsAcceptedBy struct {
	ExtensionNumber *string `json:"extension_number,omitempty"`
	Location        *string `json:"location,omitempty"`
	Name            *string `json:"name,omitempty"`
	NumberType      *string `json:"number_type,omitempty"`
	PhoneNumber     *string `json:"phone_number,omitempty"`
}

// PhoneUserCallLogs200ApplicationJSONCallLogsForwardedBy - Indicates where the call was forwarded from.
type PhoneUserCallLogs200ApplicationJSONCallLogsForwardedBy struct {
	ExtensionNumber *string `json:"extension_number,omitempty"`
	Location        *string `json:"location,omitempty"`
	Name            *string `json:"name,omitempty"`
	NumberType      *string `json:"number_type,omitempty"`
	PhoneNumber     *string `json:"phone_number,omitempty"`
}

// PhoneUserCallLogs200ApplicationJSONCallLogsForwardedTo - Indicates who the call was forwarded to.
type PhoneUserCallLogs200ApplicationJSONCallLogsForwardedTo struct {
	ExtensionNumber *string `json:"extension_number,omitempty"`
	Location        *string `json:"location,omitempty"`
	Name            *string `json:"name,omitempty"`
	NumberType      *string `json:"number_type,omitempty"`
	PhoneNumber     *string `json:"phone_number,omitempty"`
}

type PhoneUserCallLogs200ApplicationJSONCallLogsOutgoingBy struct {
	ExtensionNumber *string `json:"extension_number,omitempty"`
	Location        *string `json:"location,omitempty"`
	Name            *string `json:"name,omitempty"`
	NumberType      *string `json:"number_type,omitempty"`
	PhoneNumber     *string `json:"phone_number,omitempty"`
}

type PhoneUserCallLogs200ApplicationJSONCallLogsSite struct {
	// Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.
	ID *string `json:"id,omitempty"`
	// Name of the site where the phone number is assigned.
	Name *string `json:"name,omitempty"`
}

type PhoneUserCallLogs200ApplicationJSONCallLogs struct {
	// Indicates who accepted the call.
	AcceptedBy *PhoneUserCallLogs200ApplicationJSONCallLogsAcceptedBy `json:"accepted_by,omitempty"`
	// Unique identifier of the phone call.
	CallID *string `json:"call_id,omitempty"`
	// Contact name of callee
	CalleeName *string `json:"callee_name,omitempty"`
	// Number of callee
	CalleeNumber *string `json:"callee_number,omitempty"`
	// Type of callee's number. 1 - internal | 2 - external
	CalleeNumberType *string `json:"callee_number_type,omitempty"`
	// Contact name of caller
	CallerName *string `json:"caller_name,omitempty"`
	// Number of caller
	CallerNumber *string `json:"caller_number,omitempty"`
	// Type of caller's number. 1 - internal | 2 - external
	CallerNumberType *string `json:"caller_number_type,omitempty"`
	// Billing charge for the call.
	Charge *string `json:"charge,omitempty"`
	// Client code.
	ClientCode *string `json:"client_code,omitempty"`
	// Start time of the call
	DateTime *string `json:"date_time,omitempty"`
	// Direction of the call. "inbound" | "outbound"
	Direction *string `json:"direction,omitempty"`
	// Duration of the call in seconds.
	Duration *int64 `json:"duration,omitempty"`
	// Indicates where the call was forwarded from.
	ForwardedBy *PhoneUserCallLogs200ApplicationJSONCallLogsForwardedBy `json:"forwarded_by,omitempty"`
	// Indicates who the call was forwarded to.
	ForwardedTo *PhoneUserCallLogs200ApplicationJSONCallLogsForwardedTo `json:"forwarded_to,omitempty"`
	// Whether the call has a recording or not.
	HasRecording *bool `json:"has_recording,omitempty"`
	// Whether the call has voicemail or not.
	HasVoicemail *bool `json:"has_voicemail,omitempty"`
	// Call Log ID
	ID         *string                                                `json:"id,omitempty"`
	OutgoingBy *PhoneUserCallLogs200ApplicationJSONCallLogsOutgoingBy `json:"outgoing_by,omitempty"`
	// Path of the call log.
	Path *string `json:"path,omitempty"`
	// Billing rate for the call.
	Rate *string `json:"rate,omitempty"`
	// Recording type. <br>
	// * `1` - On-demand recording.<br>
	// * `2` - Automatic recording.
	RecordingType *string `json:"recording_type,omitempty"`
	// Result of the call. "call_connected" | "recorded" | "no_answer"
	Result *string                                          `json:"result,omitempty"`
	Site   *PhoneUserCallLogs200ApplicationJSONCallLogsSite `json:"site,omitempty"`
	// User ID or user email.
	UserID *string `json:"user_id,omitempty"`
	// Waiting time for the call, in seconds.
	WaitingTime *int64 `json:"waiting_time,omitempty"`
}

// PhoneUserCallLogs200ApplicationJSON - Phone User Call Logs
type PhoneUserCallLogs200ApplicationJSON struct {
	// Call Log
	CallLogs []PhoneUserCallLogs200ApplicationJSONCallLogs `json:"call_logs,omitempty"`
	// Date from which you would like to view the logs.
	From *string `json:"from,omitempty"`
	// The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
	NextPageToken *string `json:"next_page_token,omitempty"`
	// Total number of pages
	PageCount *int64 `json:"page_count,omitempty"`
	// The number of records returned within a single API call for each page.
	PageSize *int64 `json:"page_size,omitempty"`
	// Date up to which you would like to view the phone log.
	To *string `json:"to,omitempty"`
	// The total number of records returned.
	TotalRecords *int64 `json:"total_records,omitempty"`
}

type PhoneUserCallLogsResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// **HTTP Status code:** `200`
	// User's call logs returned.
	PhoneUserCallLogs200ApplicationJSONObject *PhoneUserCallLogs200ApplicationJSON
}
