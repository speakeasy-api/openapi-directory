"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class SGLocalAccountIdentificationTypeEnum(str, Enum):
    r"""**sgLocal**"""
    SG_LOCAL = 'sgLocal'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SGLocalAccountIdentification:
    r"""Bank account identification."""
    
    account_number: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('accountNumber') }})
    r"""The 4- to 19-digit bank account number, without separators or whitespace."""  
    bic: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bic') }})
    r"""The bank's 8- or 11-character BIC or SWIFT code."""  
    type: Optional[SGLocalAccountIdentificationTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type'), 'exclude': lambda f: f is None }})
    r"""**sgLocal**"""  
    