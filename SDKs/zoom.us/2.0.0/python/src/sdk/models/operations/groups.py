"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclasses.dataclass
class Groups200ApplicationXMLGroups:
    r"""Group object."""
    
    id: Optional[str] = dataclasses.field(default=None)
    r"""Group ID."""  
    name: Optional[str] = dataclasses.field(default=None)
    r"""Group name."""  
    total_members: Optional[int] = dataclasses.field(default=None)
    r"""Total number of members in this group."""  
    

@dataclasses.dataclass
class Groups200ApplicationXML:
    r"""List of Groups."""
    
    groups: Optional[list[Groups200ApplicationXMLGroups]] = dataclasses.field(default=None)
    r"""List of Group objects."""  
    total_records: Optional[int] = dataclasses.field(default=None)
    r"""Total records."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Groups200ApplicationJSONGroups:
    r"""Group object."""
    
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""Group ID."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Group name."""  
    total_members: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_members'), 'exclude': lambda f: f is None }})
    r"""Total number of members in this group."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Groups200ApplicationJSON:
    r"""List of Groups."""
    
    groups: Optional[list[Groups200ApplicationJSONGroups]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('groups'), 'exclude': lambda f: f is None }})
    r"""List of Group objects."""  
    total_records: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('total_records'), 'exclude': lambda f: f is None }})
    r"""Total records."""  
    

@dataclasses.dataclass
class GroupsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    body: Optional[bytes] = dataclasses.field(default=None)  
    groups_200_application_json_object: Optional[Groups200ApplicationJSON] = dataclasses.field(default=None)
    r"""**HTTP Status Code:** `200`<br>
    List of groups returned.<br>
    **Error Code:** `200`
    Only available for paid accounts.
    """  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    