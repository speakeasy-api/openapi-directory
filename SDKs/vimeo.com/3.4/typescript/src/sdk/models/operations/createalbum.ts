/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class CreateAlbumSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oauth2: string;
}

/**
 * The type of layout for presenting the album.
 */
export enum CreateAlbumRequestBodyLayoutEnum {
  Grid = "grid",
  Player = "player",
}

/**
 * The privacy level of the album.
 */
export enum CreateAlbumRequestBodyPrivacyEnum {
  Anybody = "anybody",
  EmbedOnly = "embed_only",
  Password = "password",
}

/**
 * The default sort order of the album's videos.
 */
export enum CreateAlbumRequestBodySortEnum {
  AddedFirst = "added_first",
  AddedLast = "added_last",
  Alphabetical = "alphabetical",
  Arranged = "arranged",
  Comments = "comments",
  Likes = "likes",
  Newest = "newest",
  Oldest = "oldest",
  Plays = "plays",
}

/**
 * The color theme of the album.
 */
export enum CreateAlbumRequestBodyThemeEnum {
  Dark = "dark",
  Standard = "standard",
}

export class CreateAlbumRequestBody extends SpeakeasyBase {
  /**
   * The hexadecimal code for the color of the player buttons.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "brand_color" })
  brandColor?: string;

  /**
   * The description of the album.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  /**
   * Whether to hide Vimeo navigation when displaying the album.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hide_nav" })
  hideNav?: boolean;

  /**
   * The type of layout for presenting the album.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "layout" })
  layout?: CreateAlbumRequestBodyLayoutEnum;

  /**
   * The name of the album.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The album's password. Required only if **privacy** is `password`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "password" })
  password?: string;

  /**
   * The privacy level of the album.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "privacy" })
  privacy?: CreateAlbumRequestBodyPrivacyEnum;

  /**
   * Whether album videos should use the review mode URL.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "review_mode" })
  reviewMode?: boolean;

  /**
   * The default sort order of the album's videos.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sort" })
  sort?: CreateAlbumRequestBodySortEnum;

  /**
   * The color theme of the album.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "theme" })
  theme?: CreateAlbumRequestBodyThemeEnum;
}

export class CreateAlbumRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/vnd.vimeo.album+json",
  })
  requestBody: CreateAlbumRequestBody;

  /**
   * The ID of the user.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=user_id",
  })
  userId: number;
}

export class CreateAlbumResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * The album was created.
   */
  @SpeakeasyMetadata()
  album?: shared.Album;

  /**
   * A parameter is invalid.
   */
  @SpeakeasyMetadata()
  legacyError?: shared.LegacyError;
}
