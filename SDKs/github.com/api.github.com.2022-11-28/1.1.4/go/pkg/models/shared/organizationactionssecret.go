// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// OrganizationActionsSecretVisibilityEnum - Visibility of a secret
type OrganizationActionsSecretVisibilityEnum string

const (
	OrganizationActionsSecretVisibilityEnumAll      OrganizationActionsSecretVisibilityEnum = "all"
	OrganizationActionsSecretVisibilityEnumPrivate  OrganizationActionsSecretVisibilityEnum = "private"
	OrganizationActionsSecretVisibilityEnumSelected OrganizationActionsSecretVisibilityEnum = "selected"
)

func (e *OrganizationActionsSecretVisibilityEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "all":
		fallthrough
	case "private":
		fallthrough
	case "selected":
		*e = OrganizationActionsSecretVisibilityEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for OrganizationActionsSecretVisibilityEnum: %s", s)
	}
}

// OrganizationActionsSecret - Secrets for GitHub Actions for an organization.
type OrganizationActionsSecret struct {
	CreatedAt time.Time `json:"created_at"`
	// The name of the secret.
	Name                    string    `json:"name"`
	SelectedRepositoriesURL *string   `json:"selected_repositories_url,omitempty"`
	UpdatedAt               time.Time `json:"updated_at"`
	// Visibility of a secret
	Visibility OrganizationActionsSecretVisibilityEnum `json:"visibility"`
}
