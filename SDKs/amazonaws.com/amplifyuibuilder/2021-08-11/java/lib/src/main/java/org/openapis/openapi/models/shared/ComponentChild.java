/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ComponentChild - A nested UI configuration within a parent &lt;code&gt;Component&lt;/code&gt;.
 */
public class ComponentChild {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("children")
    public ComponentChild[] children;

    public ComponentChild withChildren(ComponentChild[] children) {
        this.children = children;
        return this;
    }
    
    @JsonProperty("componentType")
    public String componentType;

    public ComponentChild withComponentType(String componentType) {
        this.componentType = componentType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("events")
    public java.util.Map<String, ComponentEvent> events;

    public ComponentChild withEvents(java.util.Map<String, ComponentEvent> events) {
        this.events = events;
        return this;
    }
    
    @JsonProperty("name")
    public String name;

    public ComponentChild withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Describes the properties of the child component. You can't specify &lt;code&gt;tags&lt;/code&gt; as a valid property for &lt;code&gt;properties&lt;/code&gt;.
     */
    @JsonProperty("properties")
    public Object properties;

    public ComponentChild withProperties(Object properties) {
        this.properties = properties;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceId")
    public String sourceId;

    public ComponentChild withSourceId(String sourceId) {
        this.sourceId = sourceId;
        return this;
    }
    
    public ComponentChild(@JsonProperty("componentType") String componentType, @JsonProperty("name") String name, @JsonProperty("properties") Object properties) {
        this.componentType = componentType;
        this.name = name;
        this.properties = properties;
  }
}
