/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export enum GraphTemplateLanguageEnum {
  Django = "django",
  Jinja2 = "jinja2",
}

export class GraphInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source: string;

  @SpeakeasyMetadata()
  @Expose({ name: "template_language" })
  templateLanguage?: GraphTemplateLanguageEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;

  @SpeakeasyMetadata()
  @Expose({ name: "weight" })
  weight?: number;
}

export class Graph extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "link" })
  link?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "source" })
  source: string;

  @SpeakeasyMetadata()
  @Expose({ name: "template_language" })
  templateLanguage?: GraphTemplateLanguageEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type: string;

  @SpeakeasyMetadata()
  @Expose({ name: "weight" })
  weight?: number;
}
