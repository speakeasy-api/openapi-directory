<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * UnidirectionalEvent - Abstract bean representing a Service or API Exchange.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class UnidirectionalEvent
{
	#[\JMS\Serializer\Annotation\SerializedName('eventMessage')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\EventMessage')]
    public EventMessage $eventMessage;
    
    /**
     * Discriminant type for identifying kind of exchange
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\UnidirectionalEventTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\UnidirectionalEventTypeEnum>')]
    public UnidirectionalEventTypeEnum $type;
    
	public function __construct()
	{
		$this->eventMessage = new \OpenAPI\OpenAPI\Models\Shared\EventMessage();
		$this->type = \OpenAPI\OpenAPI\Models\Shared\UnidirectionalEventTypeEnum::REQ_RESP_PAIR;
	}
}
