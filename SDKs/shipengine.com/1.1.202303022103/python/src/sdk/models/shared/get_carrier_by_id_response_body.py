"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dimensions as shared_dimensions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCarrierByIDResponseBodyCarrierAdvancedOption:
    r"""Advanced options that are specific to the carrier"""
    
    default_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('default_value'), 'exclude': lambda f: f is None }})
    r"""Default value of option"""  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Description of option"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name of advanced option"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCarrierByIDResponseBodyPackageType:
    r"""A package type that a carrier supports for shipment."""
    
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    package_code: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('package_code') }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Provides a helpful description for the custom package."""  
    dimensions: Optional[shared_dimensions.Dimensions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimensions'), 'exclude': lambda f: f is None }})
    r"""The custom dimensions for the package."""  
    package_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('package_id'), 'exclude': lambda f: f is None }})
    r"""A string that uniquely identifies the package."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCarrierByIDResponseBodyService:
    r"""A service offered by the carrier"""
    
    carrier_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carrier_code'), 'exclude': lambda f: f is None }})  
    carrier_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carrier_id'), 'exclude': lambda f: f is None }})
    r"""A string that uniquely identifies the carrier"""  
    domestic: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domestic'), 'exclude': lambda f: f is None }})
    r"""Supports domestic shipping"""  
    international: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('international'), 'exclude': lambda f: f is None }})
    r"""Supports international shipping."""  
    is_multi_package_supported: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('is_multi_package_supported'), 'exclude': lambda f: f is None }})
    r"""Carrier supports multiple packages per shipment"""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""User friendly service name"""  
    service_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('service_code'), 'exclude': lambda f: f is None }})
    r"""service code"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetCarrierByIDResponseBody:
    r"""A carrier object that represents a provider such as UPS, USPS, DHL, etc
    that has been tied to the current account.
    """
    
    account_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_number'), 'exclude': lambda f: f is None }})
    r"""The account number that the carrier is connected to."""  
    balance: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('balance'), 'exclude': lambda f: f is None }})
    r"""Current available balance"""  
    carrier_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carrier_code'), 'exclude': lambda f: f is None }})
    r"""A string that uniquely identifies the carrier."""  
    carrier_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('carrier_id'), 'exclude': lambda f: f is None }})
    r"""A string that uniquely identifies the carrier."""  
    friendly_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('friendly_name'), 'exclude': lambda f: f is None }})
    r"""Screen readable name"""  
    has_multi_package_supporting_services: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('has_multi_package_supporting_services'), 'exclude': lambda f: f is None }})
    r"""Carrier supports multiple packages per shipment"""  
    nickname: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nickname'), 'exclude': lambda f: f is None }})
    r"""Nickname given to the account when initially setting up the carrier."""  
    options: Optional[list[GetCarrierByIDResponseBodyCarrierAdvancedOption]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('options'), 'exclude': lambda f: f is None }})
    r"""A list of options that are available to that carrier"""  
    packages: Optional[list[GetCarrierByIDResponseBodyPackageType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('packages'), 'exclude': lambda f: f is None }})
    r"""A list of package types that are supported by the carrier"""  
    primary: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('primary'), 'exclude': lambda f: f is None }})
    r"""Is this the primary carrier that is used by default when no carrier is specified in label/shipment creation"""  
    requires_funded_amount: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('requires_funded_amount'), 'exclude': lambda f: f is None }})
    r"""Indicates whether the carrier requires funding to use its services"""  
    services: Optional[list[GetCarrierByIDResponseBodyService]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('services'), 'exclude': lambda f: f is None }})
    r"""A list of services that are offered by the carrier"""  
    supports_label_messages: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('supports_label_messages'), 'exclude': lambda f: f is None }})
    r"""The carrier supports adding custom label messages to an order."""  
    