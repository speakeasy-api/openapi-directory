/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AppointmentTemplate - Appointment templates are blocks of time during which a doctor usually sees appointments with the same profile. These may have a longer duration then the corresponding profile, in which case they may allow multiple appointments to be booked during that period.
 */
public class AppointmentTemplate {
    /**
     * Indicats that the object has been soft-deleted and should not be used
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("archived")
    public Boolean archived;
    public AppointmentTemplate withArchived(Boolean archived) {
        this.archived = archived;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_end")
    public String dateEnd;
    public AppointmentTemplate withDateEnd(String dateEnd) {
        this.dateEnd = dateEnd;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("date_start")
    public String dateStart;
    public AppointmentTemplate withDateStart(String dateStart) {
        this.dateStart = dateStart;
        return this;
    }
    
    /**
     * Length of an appointment in minutes
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("duration")
    public Long duration;
    public AppointmentTemplate withDuration(Long duration) {
        this.duration = duration;
        return this;
    }
    
    /**
     * **1-based** index for the exam room
     */
    @JsonProperty("exam_room")
    public Long examRoom;
    public AppointmentTemplate withExamRoom(Long examRoom) {
        this.examRoom = examRoom;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public AppointmentTemplate withId(Long id) {
        this.id = id;
        return this;
    }
    
    @JsonProperty("office")
    public Long office;
    public AppointmentTemplate withOffice(Long office) {
        this.office = office;
        return this;
    }
    
    /**
     * Array of time intervals during which the template is available. Only computed if the available and verbose query parameters are passed. Note that only slots long enough to fit an appointment with the corresponding profile are included.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("open_slots")
    public AppointmentTemplateOpenSlot[] openSlots;
    public AppointmentTemplate withOpenSlots(AppointmentTemplateOpenSlot[] openSlots) {
        this.openSlots = openSlots;
        return this;
    }
    
    /**
     * ID of the appointment profile to default to
     */
    @JsonProperty("profile")
    public Long profile;
    public AppointmentTemplate withProfile(Long profile) {
        this.profile = profile;
        return this;
    }
    
    @JsonProperty("scheduled_time")
    public String scheduledTime;
    public AppointmentTemplate withScheduledTime(String scheduledTime) {
        this.scheduledTime = scheduledTime;
        return this;
    }
    
    /**
     * Array of integers that indicate week days (`0` = Monday, ..., `6` = Sunday)
     */
    @JsonProperty("week_days")
    public Long[] weekDays;
    public AppointmentTemplate withWeekDays(Long[] weekDays) {
        this.weekDays = weekDays;
        return this;
    }
    
}
