/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PackageLanguageRequest extends SpeakeasyBase {
  /**
   * If you want to package and download the translation synchronously, mark this parameter as '0'. It will package the translation and then return the packaged file in the response, identical to /download call after an asynchronous /package call.
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=async" })
  async?: number;

  /**
   * Project ID
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=id" })
  id: number;

  /**
   * Language code. You can package the translation of only a specific language.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=language",
  })
  language: string;
}

export class PackageLanguageResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * ProjectNotLaunchedYet
   */
  @SpeakeasyMetadata()
  error?: shared.ErrorT;

  /**
   * Packaging status and tracking code. With the package key, you can track the progress of translation packaging.Also packaged translation streamed.
   */
  @SpeakeasyMetadata()
  package?: shared.Package;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Packaging status and tracking code. With the package key, you can track the progress of translation packaging.Also packaged translation streamed.
   */
  @SpeakeasyMetadata()
  packageLanguage200ApplicationOctetStreamBinaryString?: Uint8Array;
}
