<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * UserRole - Contains properties of auser role, which is used to manage user access.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class UserRole
{
    /**
     * Account ID of this user role. This is a read-only field that can be left blank.
     * 
     * @var ?string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('accountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $accountId = null;
    
    /**
     * Whether this is a default user role. Default user roles are created by the system for the account/subaccount and cannot be modified or deleted. Each default user role comes with a basic set of preassigned permissions.
     * 
     * @var ?bool $defaultUserRole
     */
	#[\JMS\Serializer\Annotation\SerializedName('defaultUserRole')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $defaultUserRole = null;
    
    /**
     * ID of this user role. This is a read-only, auto-generated field.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "dfareporting#userRole".
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
    /**
     * Name of this user role. This is a required field. Must be less than 256 characters long. If this user role is under a subaccount, the name must be unique among sites of the same subaccount. Otherwise, this user role is a top-level user role, and the name must be unique among top-level user roles of the same account.
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * ID of the user role that this user role is based on or copied from. This is a required field.
     * 
     * @var ?string $parentUserRoleId
     */
	#[\JMS\Serializer\Annotation\SerializedName('parentUserRoleId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $parentUserRoleId = null;
    
    /**
     * List of permissions associated with this user role.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\UserRolePermission> $permissions
     */
	#[\JMS\Serializer\Annotation\SerializedName('permissions')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\UserRolePermission>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $permissions = null;
    
    /**
     * Subaccount ID of this user role. This is a read-only field that can be left blank.
     * 
     * @var ?string $subaccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('subaccountId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $subaccountId = null;
    
	public function __construct()
	{
		$this->accountId = null;
		$this->defaultUserRole = null;
		$this->id = null;
		$this->kind = null;
		$this->name = null;
		$this->parentUserRoleId = null;
		$this->permissions = null;
		$this->subaccountId = null;
	}
}
