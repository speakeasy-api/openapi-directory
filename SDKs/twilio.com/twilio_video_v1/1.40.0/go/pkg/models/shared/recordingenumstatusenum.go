// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// RecordingEnumStatusEnum - Read only the recordings that have this status. Can be: `processing`, `completed`, or `deleted`.
type RecordingEnumStatusEnum string

const (
	RecordingEnumStatusEnumProcessing RecordingEnumStatusEnum = "processing"
	RecordingEnumStatusEnumCompleted  RecordingEnumStatusEnum = "completed"
	RecordingEnumStatusEnumDeleted    RecordingEnumStatusEnum = "deleted"
	RecordingEnumStatusEnumFailed     RecordingEnumStatusEnum = "failed"
)

func (e *RecordingEnumStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "processing":
		fallthrough
	case "completed":
		fallthrough
	case "deleted":
		fallthrough
	case "failed":
		*e = RecordingEnumStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for RecordingEnumStatusEnum: %s", s)
	}
}
