// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// VerificationAttemptEnumConversionStatusEnum - Filter used to query Verification Attempts by conversion status. Valid values are `UNCONVERTED`, for attempts that were not converted, and `CONVERTED`, for attempts that were confirmed.
type VerificationAttemptEnumConversionStatusEnum string

const (
	VerificationAttemptEnumConversionStatusEnumConverted   VerificationAttemptEnumConversionStatusEnum = "converted"
	VerificationAttemptEnumConversionStatusEnumUnconverted VerificationAttemptEnumConversionStatusEnum = "unconverted"
)

func (e VerificationAttemptEnumConversionStatusEnum) ToPointer() *VerificationAttemptEnumConversionStatusEnum {
	return &e
}

func (e *VerificationAttemptEnumConversionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "converted":
		fallthrough
	case "unconverted":
		*e = VerificationAttemptEnumConversionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VerificationAttemptEnumConversionStatusEnum: %v", v)
	}
}
