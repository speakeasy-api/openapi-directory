// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type CreateOrganizationAdminPathParams struct {
	OrganizationID string `pathParam:"style=simple,explode=false,name=organizationId"`
}

// CreateOrganizationAdminRequestBodyAuthenticationMethodEnum - The method of authentication the user will use to sign in to the Meraki dashboard. Can be one of 'Email' or 'Cisco SecureX Sign-On'. The default is Email authentication
type CreateOrganizationAdminRequestBodyAuthenticationMethodEnum string

const (
	CreateOrganizationAdminRequestBodyAuthenticationMethodEnumCiscoSecureXSignOn CreateOrganizationAdminRequestBodyAuthenticationMethodEnum = "Cisco SecureX Sign-On"
	CreateOrganizationAdminRequestBodyAuthenticationMethodEnumEmail              CreateOrganizationAdminRequestBodyAuthenticationMethodEnum = "Email"
)

func (e *CreateOrganizationAdminRequestBodyAuthenticationMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Cisco SecureX Sign-On":
		fallthrough
	case "Email":
		*e = CreateOrganizationAdminRequestBodyAuthenticationMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateOrganizationAdminRequestBodyAuthenticationMethodEnum: %s", s)
	}
}

type CreateOrganizationAdminRequestBodyNetworks struct {
	// The privilege of the dashboard administrator on the network
	Access string `json:"access"`
	// The network ID
	ID string `json:"id"`
}

// CreateOrganizationAdminRequestBodyOrgAccessEnum - The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'
type CreateOrganizationAdminRequestBodyOrgAccessEnum string

const (
	CreateOrganizationAdminRequestBodyOrgAccessEnumEnterprise CreateOrganizationAdminRequestBodyOrgAccessEnum = "enterprise"
	CreateOrganizationAdminRequestBodyOrgAccessEnumFull       CreateOrganizationAdminRequestBodyOrgAccessEnum = "full"
	CreateOrganizationAdminRequestBodyOrgAccessEnumNone       CreateOrganizationAdminRequestBodyOrgAccessEnum = "none"
	CreateOrganizationAdminRequestBodyOrgAccessEnumReadOnly   CreateOrganizationAdminRequestBodyOrgAccessEnum = "read-only"
)

func (e *CreateOrganizationAdminRequestBodyOrgAccessEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enterprise":
		fallthrough
	case "full":
		fallthrough
	case "none":
		fallthrough
	case "read-only":
		*e = CreateOrganizationAdminRequestBodyOrgAccessEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateOrganizationAdminRequestBodyOrgAccessEnum: %s", s)
	}
}

type CreateOrganizationAdminRequestBodyTags struct {
	// The privilege of the dashboard administrator on the tag
	Access string `json:"access"`
	// The name of the tag
	Tag string `json:"tag"`
}

type CreateOrganizationAdminRequestBody struct {
	// The method of authentication the user will use to sign in to the Meraki dashboard. Can be one of 'Email' or 'Cisco SecureX Sign-On'. The default is Email authentication
	AuthenticationMethod *CreateOrganizationAdminRequestBodyAuthenticationMethodEnum `json:"authenticationMethod,omitempty"`
	// The email of the dashboard administrator. This attribute can not be updated.
	Email string `json:"email"`
	// The name of the dashboard administrator
	Name string `json:"name"`
	// The list of networks that the dashboard administrator has privileges on
	Networks []CreateOrganizationAdminRequestBodyNetworks `json:"networks,omitempty"`
	// The privilege of the dashboard administrator on the organization. Can be one of 'full', 'read-only', 'enterprise' or 'none'
	OrgAccess CreateOrganizationAdminRequestBodyOrgAccessEnum `json:"orgAccess"`
	// The list of tags that the dashboard administrator has privileges on
	Tags []CreateOrganizationAdminRequestBodyTags `json:"tags,omitempty"`
}

type CreateOrganizationAdminRequest struct {
	PathParams CreateOrganizationAdminPathParams
	Request    CreateOrganizationAdminRequestBody `request:"mediaType=application/json"`
}

type CreateOrganizationAdminResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	CreateOrganizationAdmin201ApplicationJSONObject map[string]interface{}
}
