/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LocalTime } from "./localtime";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Event's Start Dates
 */
export class StartDates extends SpeakeasyBase {
  /**
   * Boolean flag to indicate whether or not the start date is TBA
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateTBA" })
  dateTBA?: boolean;

  /**
   * Boolean flag to indicate whether or not the start date is TBD
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateTBD" })
  dateTBD?: boolean;

  /**
   * The event start datetime
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  dateTime?: Date;

  /**
   * The event start date in local date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "localDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  localDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "localTime" })
  @Type(() => LocalTime)
  localTime?: LocalTime;

  /**
   * Boolean flag to indicate whether or not the event has no specific time
   */
  @SpeakeasyMetadata()
  @Expose({ name: "noSpecificTime" })
  noSpecificTime?: boolean;

  /**
   * Boolean flag to indicate whether or not the start time is TBA
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeTBA" })
  timeTBA?: boolean;
}
