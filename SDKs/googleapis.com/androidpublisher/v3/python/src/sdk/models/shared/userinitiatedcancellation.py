"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import cancelsurveyresult as shared_cancelsurveyresult
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UserInitiatedCancellation:
    r"""Information specific to cancellations initiated by users."""
    
    cancel_survey_result: Optional[shared_cancelsurveyresult.CancelSurveyResult] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancelSurveyResult'), 'exclude': lambda f: f is None }})
    r"""Result of the cancel survey when the subscription was canceled by the user."""  
    cancel_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('cancelTime'), 'exclude': lambda f: f is None }})
    r"""The time at which the subscription was canceled by the user. The user might still have access to the subscription after this time. Use line_items.expiry_time to determine if a user still has access."""  
    