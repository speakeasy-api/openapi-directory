// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"openapi/pkg/types"
	"time"
)

// PayRunPayRunPayFrequencyEnum - The pay runs' pay frequency
type PayRunPayRunPayFrequencyEnum string

const (
	PayRunPayRunPayFrequencyEnumWeekly     PayRunPayRunPayFrequencyEnum = "Weekly"
	PayRunPayRunPayFrequencyEnumMonthly    PayRunPayRunPayFrequencyEnum = "Monthly"
	PayRunPayRunPayFrequencyEnumTwoWeekly  PayRunPayRunPayFrequencyEnum = "TwoWeekly"
	PayRunPayRunPayFrequencyEnumFourWeekly PayRunPayRunPayFrequencyEnum = "FourWeekly"
	PayRunPayRunPayFrequencyEnumYearly     PayRunPayRunPayFrequencyEnum = "Yearly"
)

func (e PayRunPayRunPayFrequencyEnum) ToPointer() *PayRunPayRunPayFrequencyEnum {
	return &e
}

func (e *PayRunPayRunPayFrequencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Weekly":
		fallthrough
	case "Monthly":
		fallthrough
	case "TwoWeekly":
		fallthrough
	case "FourWeekly":
		fallthrough
	case "Yearly":
		*e = PayRunPayRunPayFrequencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PayRunPayRunPayFrequencyEnum: %v", v)
	}
}

// PayRunPayRunPaySchedule - The pay runs' pay schedule
type PayRunPayRunPaySchedule struct {
	// The links' href
	AtHref *string `json:"@href,omitempty"`
	// The links' target type
	AtRel *string `json:"@rel,omitempty"`
	// The links' title
	AtTitle *string `json:"@title,omitempty"`
}

// PayRunPayRunProceedingPayRun - The pay runs' proceeding pay run
type PayRunPayRunProceedingPayRun struct {
	// The links' href
	AtHref *string `json:"@href,omitempty"`
	// The links' target type
	AtRel *string `json:"@rel,omitempty"`
	// The links' title
	AtTitle *string `json:"@title,omitempty"`
}

type PayRunPayRun struct {
	// The pay runs' executed
	Executed *time.Time `json:"Executed,omitempty"`
	// The pay runs' is supplementary
	IsSupplementary *bool `json:"IsSupplementary,omitempty"`
	// The pay runs' pay frequency
	PayFrequency *PayRunPayRunPayFrequencyEnum `json:"PayFrequency,omitempty"`
	// The pay runs' pay schedule
	PaySchedule *PayRunPayRunPaySchedule `json:"PaySchedule,omitempty"`
	// The pay runs' payment date
	PaymentDate *types.Date `json:"PaymentDate,omitempty"`
	// The pay runs' period end
	PeriodEnd *types.Date `json:"PeriodEnd,omitempty"`
	// The pay runs' period start
	PeriodStart *types.Date `json:"PeriodStart,omitempty"`
	// The pay runs' proceeding pay run
	ProceedingPayRun *PayRunPayRunProceedingPayRun `json:"ProceedingPayRun,omitempty"`
	// The pay runs' sequence
	Sequence *int `json:"Sequence,omitempty"`
	// The pay runs' tax period
	TaxPeriod *int `json:"TaxPeriod,omitempty"`
	// The pay runs' tax year
	TaxYear *int `json:"TaxYear,omitempty"`
}

// PayRun - The pay run object.
type PayRun struct {
	PayRun *PayRunPayRun `json:"PayRun,omitempty"`
}
