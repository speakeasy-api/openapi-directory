/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * WorkflowInput - Workflow program to be executed by Workflows.
 */
public class WorkflowInput {
    /**
     * Description of the workflow provided by the user. Must be at most 1000 unicode characters long.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;

    public WorkflowInput withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Labels associated with this workflow. Labels can contain at most 64 entries. Keys and values can be no longer than 63 characters and can only contain lowercase letters, numeric characters, underscores and dashes. Label keys must start with a letter. International characters are allowed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public WorkflowInput withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * The resource name of the workflow. Format: projects/{project}/locations/{location}/workflows/{workflow}
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public WorkflowInput withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * The service account associated with the latest workflow version. This service account represents the identity of the workflow and determines what permissions the workflow has. Format: projects/{project}/serviceAccounts/{account} or {account} Using `-` as a wildcard for the `{project}` or not providing one at all will infer the project from the account. The `{account}` value can be the `email` address or the `unique_id` of the service account. If not provided, workflow will use the project's default service account. Modifying this field for an existing workflow results in a new workflow revision.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccount")
    public String serviceAccount;

    public WorkflowInput withServiceAccount(String serviceAccount) {
        this.serviceAccount = serviceAccount;
        return this;
    }
    
    /**
     * Workflow code to be executed. The size limit is 128KB.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceContents")
    public String sourceContents;

    public WorkflowInput withSourceContents(String sourceContents) {
        this.sourceContents = sourceContents;
        return this;
    }
    
    public WorkflowInput(){}
}
