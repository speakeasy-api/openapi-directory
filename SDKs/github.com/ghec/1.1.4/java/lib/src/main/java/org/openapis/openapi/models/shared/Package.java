/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Package - A software package
 */
public class Package {
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;
    public Package withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    @JsonProperty("html_url")
    public String htmlUrl;
    public Package withHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
        return this;
    }
    
    /**
     * Unique identifier of the package.
     */
    @JsonProperty("id")
    public Long id;
    public Package withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * The name of the package.
     */
    @JsonProperty("name")
    public String name;
    public Package withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A GitHub user.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner")
    public NullableSimpleUser owner;
    public Package withOwner(NullableSimpleUser owner) {
        this.owner = owner;
        return this;
    }
    
    @JsonProperty("package_type")
    public PackagePackageTypeEnum packageType;
    public Package withPackageType(PackagePackageTypeEnum packageType) {
        this.packageType = packageType;
        return this;
    }
    
    /**
     * Minimal Repository
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("repository")
    public NullableMinimalRepository repository;
    public Package withRepository(NullableMinimalRepository repository) {
        this.repository = repository;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;
    public Package withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    @JsonProperty("url")
    public String url;
    public Package withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * The number of versions of the package.
     */
    @JsonProperty("version_count")
    public Long versionCount;
    public Package withVersionCount(Long versionCount) {
        this.versionCount = versionCount;
        return this;
    }
    
    @JsonProperty("visibility")
    public PackageVisibilityEnum1 visibility;
    public Package withVisibility(PackageVisibilityEnum1 visibility) {
        this.visibility = visibility;
        return this;
    }
    
}
