"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import contactgroup as shared_contactgroup
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreateContactGroupRequestInput:
    r"""A request to create a new contact group."""
    
    contact_group: Optional[shared_contactgroup.ContactGroupInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('contactGroup'), 'exclude': lambda f: f is None }})
    r"""A contact group."""  
    read_group_fields: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('readGroupFields'), 'exclude': lambda f: f is None }})
    r"""Optional. A field mask to restrict which fields on the group are returned. Defaults to `metadata`, `groupType`, and `name` if not set or set to empty. Valid fields are: * clientData * groupType * metadata * name"""  
    