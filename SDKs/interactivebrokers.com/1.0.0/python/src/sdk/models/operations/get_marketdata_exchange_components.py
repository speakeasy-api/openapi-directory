"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetMarketdataExchangeComponents200ApplicationJSONMapping:
    
    bit: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bit'), 'exclude': lambda f: f is None }})  
    code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('code'), 'exclude': lambda f: f is None }})  
    exchange: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exchange'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GetMarketdataExchangeComponents200ApplicationJSON:
    
    complete: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Complete'), 'exclude': lambda f: f is None }})  
    con_id: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConId'), 'exclude': lambda f: f is None }})  
    mapping: Optional[list[GetMarketdataExchangeComponents200ApplicationJSONMapping]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('mapping'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class GetMarketdataExchangeComponentsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    get_marketdata_exchange_components_200_application_json_objects: Optional[list[GetMarketdataExchangeComponents200ApplicationJSON]] = dataclasses.field(default=None)
    r"""Exchange Components"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    