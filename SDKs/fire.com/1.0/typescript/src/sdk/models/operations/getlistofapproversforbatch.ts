/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Transform, Type } from "class-transformer";

export class GetListofApproversForBatchRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=batchUuid",
  })
  batchUuid: string;
}

export class GetListofApproversForBatchBatchApproversApprovals extends SpeakeasyBase {
  /**
   * User email address
   */
  @SpeakeasyMetadata()
  @Expose({ name: "emailAddress" })
  emailAddress?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "firstName" })
  firstName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastName" })
  lastName?: string;

  /**
   * The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "mobileNumber" })
  mobileNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;

  /**
   * User id assigned by fire.com
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userId" })
  userId?: number;
}

/**
 * A list of approvers for this batch.
 */
export class GetListofApproversForBatchBatchApprovers extends SpeakeasyBase {
  @SpeakeasyMetadata({
    elemType: GetListofApproversForBatchBatchApproversApprovals,
  })
  @Expose({ name: "approvals" })
  @Type(() => GetListofApproversForBatchBatchApproversApprovals)
  approvals?: GetListofApproversForBatchBatchApproversApprovals[];
}

export class GetListofApproversForBatchResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * A list of approvers for this batch.
   */
  @SpeakeasyMetadata()
  batchApprovers?: GetListofApproversForBatchBatchApprovers;
}
