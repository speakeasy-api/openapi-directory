// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// SessionPositionAssignedTargetingOptionDetailsSessionPositionEnum - The position where the ad will show in a session.
type SessionPositionAssignedTargetingOptionDetailsSessionPositionEnum string

const (
	SessionPositionAssignedTargetingOptionDetailsSessionPositionEnumSessionPositionUnspecified     SessionPositionAssignedTargetingOptionDetailsSessionPositionEnum = "SESSION_POSITION_UNSPECIFIED"
	SessionPositionAssignedTargetingOptionDetailsSessionPositionEnumSessionPositionFirstImpression SessionPositionAssignedTargetingOptionDetailsSessionPositionEnum = "SESSION_POSITION_FIRST_IMPRESSION"
)

func (e SessionPositionAssignedTargetingOptionDetailsSessionPositionEnum) ToPointer() *SessionPositionAssignedTargetingOptionDetailsSessionPositionEnum {
	return &e
}

func (e *SessionPositionAssignedTargetingOptionDetailsSessionPositionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SESSION_POSITION_UNSPECIFIED":
		fallthrough
	case "SESSION_POSITION_FIRST_IMPRESSION":
		*e = SessionPositionAssignedTargetingOptionDetailsSessionPositionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SessionPositionAssignedTargetingOptionDetailsSessionPositionEnum: %v", v)
	}
}

// SessionPositionAssignedTargetingOptionDetails - Details for session position assigned targeting option. This will be populated in the session_position_details field when targeting_type is `TARGETING_TYPE_SESSION_POSITION`.
type SessionPositionAssignedTargetingOptionDetails struct {
	// The position where the ad will show in a session.
	SessionPosition *SessionPositionAssignedTargetingOptionDetailsSessionPositionEnum `json:"sessionPosition,omitempty"`
}
