// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PaymentInitiationConsentScopeEnum - Payment consent scope. Defines possible directions for payments made with the given consent.
//
// `ME_TO_ME`: Allows moving money between accounts owned by the same user.
//
// `EXTERNAL`: Allows initiating payments from the user's account to third parties.
type PaymentInitiationConsentScopeEnum string

const (
	PaymentInitiationConsentScopeEnumMeToMe   PaymentInitiationConsentScopeEnum = "ME_TO_ME"
	PaymentInitiationConsentScopeEnumExternal PaymentInitiationConsentScopeEnum = "EXTERNAL"
)

func (e PaymentInitiationConsentScopeEnum) ToPointer() *PaymentInitiationConsentScopeEnum {
	return &e
}

func (e *PaymentInitiationConsentScopeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ME_TO_ME":
		fallthrough
	case "EXTERNAL":
		*e = PaymentInitiationConsentScopeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PaymentInitiationConsentScopeEnum: %v", v)
	}
}
