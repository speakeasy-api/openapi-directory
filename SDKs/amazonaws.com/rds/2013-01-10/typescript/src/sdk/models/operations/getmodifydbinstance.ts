/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";

export enum GETModifyDBInstanceActionEnum {
  ModifyDBInstance = "ModifyDBInstance",
}

export enum GETModifyDBInstanceVersionEnum {
  TwoThousandAndThirteen0110 = "2013-01-10",
}

export class GETModifyDBInstanceRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Action",
  })
  action: GETModifyDBInstanceActionEnum;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AllocatedStorage",
  })
  allocatedStorage?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AllowMajorVersionUpgrade",
  })
  allowMajorVersionUpgrade?: boolean;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=ApplyImmediately",
  })
  applyImmediately?: boolean;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=AutoMinorVersionUpgrade",
  })
  autoMinorVersionUpgrade?: boolean;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=BackupRetentionPeriod",
  })
  backupRetentionPeriod?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DBInstanceClass",
  })
  dbInstanceClass?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DBInstanceIdentifier",
  })
  dbInstanceIdentifier: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DBParameterGroupName",
  })
  dbParameterGroupName?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=DBSecurityGroups",
  })
  dbSecurityGroups?: string[];

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=EngineVersion",
  })
  engineVersion?: string;

  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=Iops" })
  iops?: number;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=MasterUserPassword",
  })
  masterUserPassword?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=MultiAZ",
  })
  multiAZ?: boolean;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=NewDBInstanceIdentifier",
  })
  newDBInstanceIdentifier?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=OptionGroupName",
  })
  optionGroupName?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PreferredBackupWindow",
  })
  preferredBackupWindow?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=PreferredMaintenanceWindow",
  })
  preferredMaintenanceWindow?: string;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=Version",
  })
  version: GETModifyDBInstanceVersionEnum;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=VpcSecurityGroupIds",
  })
  vpcSecurityGroupIds?: string[];

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Algorithm",
  })
  xAmzAlgorithm?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Content-Sha256",
  })
  xAmzContentSha256?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Credential",
  })
  xAmzCredential?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Date",
  })
  xAmzDate?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Security-Token",
  })
  xAmzSecurityToken?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-Signature",
  })
  xAmzSignature?: string;

  @SpeakeasyMetadata({
    data: "header, style=simple;explode=false;name=X-Amz-SignedHeaders",
  })
  xAmzSignedHeaders?: string;
}

export class GETModifyDBInstanceResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
