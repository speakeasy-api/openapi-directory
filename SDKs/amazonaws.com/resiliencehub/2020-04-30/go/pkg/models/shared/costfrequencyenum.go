// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CostFrequencyEnum string

const (
	CostFrequencyEnumHourly  CostFrequencyEnum = "Hourly"
	CostFrequencyEnumDaily   CostFrequencyEnum = "Daily"
	CostFrequencyEnumMonthly CostFrequencyEnum = "Monthly"
	CostFrequencyEnumYearly  CostFrequencyEnum = "Yearly"
)

func (e CostFrequencyEnum) ToPointer() *CostFrequencyEnum {
	return &e
}

func (e *CostFrequencyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Hourly":
		fallthrough
	case "Daily":
		fallthrough
	case "Monthly":
		fallthrough
	case "Yearly":
		*e = CostFrequencyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CostFrequencyEnum: %v", v)
	}
}
