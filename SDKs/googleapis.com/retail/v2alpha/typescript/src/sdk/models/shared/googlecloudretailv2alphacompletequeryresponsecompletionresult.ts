/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { GoogleCloudRetailV2alphaCustomAttribute } from "./googlecloudretailv2alphacustomattribute";
import { Expose, Transform } from "class-transformer";

/**
 * Resource that represents completion results.
 */
export class GoogleCloudRetailV2alphaCompleteQueryResponseCompletionResult extends SpeakeasyBase {
  /**
   * Custom attributes for the suggestion term. * For "user-data", the attributes are additional custom attributes ingested through BigQuery. * For "cloud-retail", the attributes are product attributes generated by Cloud Retail. It requires UserEvent.product_details is imported properly.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudRetailV2alphaCustomAttribute })
  @Expose({ name: "attributes" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, GoogleCloudRetailV2alphaCustomAttribute> = {};
      for (const key in value) {
        obj[key] = objectToClass(
          value[key],
          GoogleCloudRetailV2alphaCustomAttribute
        );
      }
      return obj;
    },
    { toClassOnly: true }
  )
  attributes?: Record<string, GoogleCloudRetailV2alphaCustomAttribute>;

  /**
   * The suggestion for the query.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "suggestion" })
  suggestion?: string;
}
