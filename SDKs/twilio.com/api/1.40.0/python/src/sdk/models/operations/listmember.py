"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import api_v2010_account_queue_member as shared_api_v2010_account_queue_member
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional

LIST_MEMBER_SERVERS = [
	"https://api.twilio.com",
]


@dataclasses.dataclass
class ListMemberSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class ListMemberRequest:
    
    account_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'AccountSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Member resource(s) to read."""  
    queue_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'QueueSid', 'style': 'simple', 'explode': False }})
    r"""The SID of the Queue in which to find the members"""  
    page: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'Page', 'style': 'form', 'explode': True }})
    r"""The page index. This value is simply for client state."""  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'PageSize', 'style': 'form', 'explode': True }})
    r"""How many resources to return in each list page. The default is 50, and the maximum is 1000."""  
    page_token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'PageToken', 'style': 'form', 'explode': True }})
    r"""The page token. This is provided by the API."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListMemberListMemberResponse:
    r"""OK"""
    
    end: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end'), 'exclude': lambda f: f is None }})  
    first_page_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('first_page_uri'), 'exclude': lambda f: f is None }})  
    next_page_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('next_page_uri'), 'exclude': lambda f: f is None }})  
    page: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page'), 'exclude': lambda f: f is None }})  
    page_size: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('page_size'), 'exclude': lambda f: f is None }})  
    previous_page_uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('previous_page_uri'), 'exclude': lambda f: f is None }})  
    queue_members: Optional[list[shared_api_v2010_account_queue_member.APIV2010AccountQueueMember]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('queue_members'), 'exclude': lambda f: f is None }})  
    start: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start'), 'exclude': lambda f: f is None }})  
    uri: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('uri'), 'exclude': lambda f: f is None }})  
    

@dataclasses.dataclass
class ListMemberResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    list_member_response: Optional[ListMemberListMemberResponse] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    