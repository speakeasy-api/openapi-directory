<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DisjunctiveMatchStatement - Represents a Disjunctive Match Statement resource, which is a conjunction (and) of disjunctive (or) boolean statements.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DisjunctiveMatchStatement
{
    /**
     * The event filters contained within this disjunctive match statement.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EventFilter> $eventFilters
     */
	#[\JMS\Serializer\Annotation\SerializedName('eventFilters')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\EventFilter>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $eventFilters = null;
    
    /**
     * The kind of resource this is, in this case dfareporting#disjunctiveMatchStatement.
     * 
     * @var ?string $kind
     */
	#[\JMS\Serializer\Annotation\SerializedName('kind')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $kind = null;
    
	public function __construct()
	{
		$this->eventFilters = null;
		$this->kind = null;
	}
}
