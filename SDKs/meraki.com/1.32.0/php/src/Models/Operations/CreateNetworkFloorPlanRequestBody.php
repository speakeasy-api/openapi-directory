<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class CreateNetworkFloorPlanRequestBody
{
    /**
     * The longitude and latitude of the bottom left corner of your floor plan.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateNetworkFloorPlanRequestBodyBottomLeftCorner $bottomLeftCorner
     */
	#[\JMS\Serializer\Annotation\SerializedName('bottomLeftCorner')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateNetworkFloorPlanRequestBodyBottomLeftCorner')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateNetworkFloorPlanRequestBodyBottomLeftCorner $bottomLeftCorner = null;
    
    /**
     * The longitude and latitude of the bottom right corner of your floor plan.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateNetworkFloorPlanRequestBodyBottomRightCorner $bottomRightCorner
     */
	#[\JMS\Serializer\Annotation\SerializedName('bottomRightCorner')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateNetworkFloorPlanRequestBodyBottomRightCorner')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateNetworkFloorPlanRequestBodyBottomRightCorner $bottomRightCorner = null;
    
    /**
     * The longitude and latitude of the center of your floor plan. The 'center' or two adjacent corners (e.g. 'topLeftCorner' and 'bottomLeftCorner') must be specified. If 'center' is specified, the floor plan is placed over that point with no rotation. If two adjacent corners are specified, the floor plan is rotated to line up with the two specified points. The aspect ratio of the floor plan's image is preserved regardless of which corners/center are specified. (This means if that more than two corners are specified, only two corners may be used to preserve the floor plan's aspect ratio.). No two points can have the same latitude, longitude pair.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateNetworkFloorPlanRequestBodyCenter $center
     */
	#[\JMS\Serializer\Annotation\SerializedName('center')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateNetworkFloorPlanRequestBodyCenter')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateNetworkFloorPlanRequestBodyCenter $center = null;
    
    /**
     * The file contents (a base 64 encoded string) of your image. Supported formats are PNG, GIF, and JPG. Note that all images are saved as PNG files, regardless of the format they are uploaded in.
     * 
     * @var string $imageContents
     */
	#[\JMS\Serializer\Annotation\SerializedName('imageContents')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $imageContents;
    
    /**
     * The name of your floor plan.
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * The longitude and latitude of the top left corner of your floor plan.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateNetworkFloorPlanRequestBodyTopLeftCorner $topLeftCorner
     */
	#[\JMS\Serializer\Annotation\SerializedName('topLeftCorner')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateNetworkFloorPlanRequestBodyTopLeftCorner')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateNetworkFloorPlanRequestBodyTopLeftCorner $topLeftCorner = null;
    
    /**
     * The longitude and latitude of the top right corner of your floor plan.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\CreateNetworkFloorPlanRequestBodyTopRightCorner $topRightCorner
     */
	#[\JMS\Serializer\Annotation\SerializedName('topRightCorner')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\CreateNetworkFloorPlanRequestBodyTopRightCorner')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?CreateNetworkFloorPlanRequestBodyTopRightCorner $topRightCorner = null;
    
	public function __construct()
	{
		$this->bottomLeftCorner = null;
		$this->bottomRightCorner = null;
		$this->center = null;
		$this->imageContents = "";
		$this->name = "";
		$this->topLeftCorner = null;
		$this->topRightCorner = null;
	}
}
