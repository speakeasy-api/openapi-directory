<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * VexAssessment - VexAssessment provides all publisher provided Vex information that is related to this vulnerability.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class VexAssessment
{
    /**
     * Holds the MITRE standard Common Vulnerabilities and Exposures (CVE) tracking number for the vulnerability.
     * 
     * @var ?string $cve
     */
	#[\JMS\Serializer\Annotation\SerializedName('cve')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $cve = null;
    
    /**
     * Contains information about the impact of this vulnerability, this will change with time.
     * 
     * @var ?array<string> $impacts
     */
	#[\JMS\Serializer\Annotation\SerializedName('impacts')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $impacts = null;
    
    /**
     * Justification provides the justification when the state of the assessment if NOT_AFFECTED.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Justification $justification
     */
	#[\JMS\Serializer\Annotation\SerializedName('justification')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Justification')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Justification $justification = null;
    
    /**
     * The VulnerabilityAssessment note from which this VexAssessment was generated. This will be of the form: `projects/[PROJECT_ID]/notes/[NOTE_ID]`.
     * 
     * @var ?string $noteName
     */
	#[\JMS\Serializer\Annotation\SerializedName('noteName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $noteName = null;
    
    /**
     * Holds a list of references associated with this vulnerability item and assessment.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\RelatedUrl> $relatedUris
     */
	#[\JMS\Serializer\Annotation\SerializedName('relatedUris')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\RelatedUrl>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $relatedUris = null;
    
    /**
     * Specifies details on how to handle (and presumably, fix) a vulnerability.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Remediation> $remediations
     */
	#[\JMS\Serializer\Annotation\SerializedName('remediations')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Remediation>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $remediations = null;
    
    /**
     * Provides the state of this Vulnerability assessment.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VexAssessmentStateEnum $state
     */
	#[\JMS\Serializer\Annotation\SerializedName('state')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VexAssessmentStateEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VexAssessmentStateEnum $state = null;
    
	public function __construct()
	{
		$this->cve = null;
		$this->impacts = null;
		$this->justification = null;
		$this->noteName = null;
		$this->relatedUris = null;
		$this->remediations = null;
		$this->state = null;
	}
}
