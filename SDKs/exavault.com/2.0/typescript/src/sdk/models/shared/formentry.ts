/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FormEntryField } from "./formentryfield";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Form entry status
 */
export enum FormEntryAttributesStatusEnum {
  Pending = "pending",
  Completed = "completed",
}

export class FormEntryAttributes extends SpeakeasyBase {
  /**
   * Timestamp of the submission
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  @SpeakeasyMetadata({ elemType: FormEntryField })
  @Expose({ name: "fields" })
  @Type(() => FormEntryField)
  fields?: FormEntryField[];

  /**
   * Timestamp of the field modified date
   */
  @SpeakeasyMetadata()
  @Expose({ name: "modified" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  modified?: Date;

  /**
   * Full paths to files associated with the form submission
   */
  @SpeakeasyMetadata()
  @Expose({ name: "paths" })
  paths?: string[];

  /**
   * Form entry status
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: FormEntryAttributesStatusEnum;
}

/**
 * Contains the data submitted for a form.
 */
export class FormEntry extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => FormEntryAttributes)
  attributes?: FormEntryAttributes;

  /**
   * Form entry id
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Type of item. "formEntry"
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
