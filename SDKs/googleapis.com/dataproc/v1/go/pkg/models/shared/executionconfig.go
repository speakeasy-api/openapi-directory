// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// ExecutionConfig - Execution configuration for a workload.
type ExecutionConfig struct {
	// Optional. The duration to keep the session alive while it's idling. Passing this threshold will cause the session to be terminated. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). Defaults to 4 hours if not set. If both ttl and idle_ttl are specified, the conditions are treated as and OR: the workload will be terminated when it has been idle for idle_ttl or when the ttl has passed, whichever comes first.
	IdleTTL *string `json:"idleTtl,omitempty"`
	// Optional. The Cloud KMS key to use for encryption.
	KmsKey *string `json:"kmsKey,omitempty"`
	// Optional. Tags used for network traffic control.
	NetworkTags []string `json:"networkTags,omitempty"`
	// Optional. Network URI to connect workload to.
	NetworkURI *string `json:"networkUri,omitempty"`
	// Optional. Service account that used to execute workload.
	ServiceAccount *string `json:"serviceAccount,omitempty"`
	// Optional. A Cloud Storage bucket used to stage workload dependencies, config files, and store workload output and other ephemeral data, such as Spark history files. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location according to the region where your workload is running, and then create and manage project-level, per-location staging and temporary buckets. This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
	StagingBucket *string `json:"stagingBucket,omitempty"`
	// Optional. Subnetwork URI to connect workload to.
	SubnetworkURI *string `json:"subnetworkUri,omitempty"`
	// Optional. The duration after which the workload will be terminated. When the workload passes this ttl, it will be unconditionally killed without waiting for ongoing work to finish. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). If both ttl and idle_ttl are specified, the conditions are treated as and OR: the workload will be terminated when it has been idle for idle_ttl or when the ttl has passed, whichever comes first. If ttl is not specified for a session, it defaults to 24h.
	TTL *string `json:"ttl,omitempty"`
}
