// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

// NeoVIN - Describes the NeoVIN specification
type NeoVIN struct {
	// Listing of all options and packages with detailed equipment identified that could have been installed on the vehicle
	AvailableOptionsDetails map[string]interface{} `json:"available_options_details,omitempty"`
	// Body subtype (cab) of the vehicle
	BodySubtype *string `json:"body_subtype,omitempty"`
	// Body type of the vehicle
	BodyType *string `json:"body_type,omitempty"`
	// City miles per gallon
	CityMpg *float64 `json:"city_mpg,omitempty"`
	// Calculated combination of base MSRP with the delivery charges and the installed options MSRP
	CombinedMsrp *float64 `json:"combined_msrp,omitempty"`
	// vin first decoded at timestamp
	CreatedAt *int64 `json:"created_at,omitempty"`
	// vin first decoded at date
	CreatedAtDate *string `json:"created_at_date,omitempty"`
	// This will represent if previous vin decode values are updated
	DecodeVersion *int64 `json:"decode_version,omitempty"`
	// Manufacturer defined delivery charges
	DeliveryCharges *float64 `json:"delivery_charges,omitempty"`
	// Number of doors on the vehicle
	Doors *int64 `json:"doors,omitempty"`
	// Identified drivetrain of the vehicle
	Drivetrain *string `json:"drivetrain,omitempty"`
	// Base identification of the number of cylinders and configuration of the installed engine on the vehicle
	Engine *string `json:"engine,omitempty"`
	// The manufacturer defined option code and name for the exterior color of the vehicle
	ExteriorColor map[string]interface{} `json:"exterior_color,omitempty"`
	// Normalized feature set of equipment identified that have been identified as installed on the vehicle, including whether that item was standard to the version of the vehicle or was added as an installed option
	Features map[string]interface{} `json:"features,omitempty"`
	// Identified Fuel type of the vehicle
	FuelType *string `json:"fuel_type,omitempty"`
	// Overall height of the vehicle (in)
	Height *float64 `json:"height,omitempty"`
	// Highway miles per gallon
	HighwayMpg *float64 `json:"highway_mpg,omitempty"`
	// Detailed equipment identified as installed on the vehicle, including whether that item was standard to the version of the vehicle or was added as an installed option
	InstalledEquipment map[string]interface{} `json:"installed_equipment,omitempty"`
	// Listing of all options and packages with detailed equipment identified that have been identified as installed on the vehicle
	InstalledOptionsDetails map[string]interface{} `json:"installed_options_details,omitempty"`
	// Calculated combination of the MSRP for the installed options and packages
	InstalledOptionsMsrp *float64 `json:"installed_options_msrp,omitempty"`
	// The manufacturer defined option code and name for the interior color of the vehicle
	InteriorColor map[string]interface{} `json:"interior_color,omitempty"`
	// Overall length of the vehicle (in)
	Length *float64 `json:"length,omitempty"`
	// Identification of primary source data used for trim and installed colors and options
	ListingConfidence *string `json:"listing_confidence,omitempty"`
	// Make of the vehicle
	Make *string `json:"make,omitempty"`
	// Manufacturer code of the vehicle
	ManufacturerCode *string `json:"manufacturer_code,omitempty"`
	// Model of the vehicle
	Model *string `json:"model,omitempty"`
	// Base MSRP as defined for the defined version of that vehicle with no options installed
	Msrp *float64 `json:"msrp,omitempty"`
	// Option and package codes installed on the vehicle
	OptionsPackages *string `json:"options_packages,omitempty"`
	// Extracted manufacturer package code related to selection of the vehicle version (where available / applicable)
	PackageCode *string `json:"package_code,omitempty"`
	// Extracted manufacturer package code description (where available / applicable)
	PackageDescription *string `json:"package_description,omitempty"`
	// Identified seating capacity of the vehicle
	SeatingCapacity *float64 `json:"seating_capacity,omitempty"`
	// Vin prefix identification used in the decoding of the vehicle
	SquishVin *string `json:"squish_vin,omitempty"`
	// Identified installed Transmission of the vehicle
	Transmission *string `json:"transmission,omitempty"`
	// Identification of confidence related to the selection of the installed transmission
	TransmissionConfidence *string `json:"transmission_confidence,omitempty"`
	// The description of the installed transmission
	TransmissionDescription *string `json:"transmission_description,omitempty"`
	// Trim of the vehicle
	Trim *string `json:"trim,omitempty"`
	// Identification of confidence related to the selection of the trim
	TrimConfidence *string `json:"trim_confidence,omitempty"`
	// vin last decoded at timestamp
	UpdatedAt *int64 `json:"updated_at,omitempty"`
	// vin last decoded at date
	UpdatedAtDate *string `json:"updated_at_date,omitempty"`
	// Version Name of the vehicle
	Version *string `json:"version,omitempty"`
	// Identification of confidence related to the selection of the vehicle version
	VersionConfidence *string `json:"version_confidence,omitempty"`
	// 17 char long VIN of the vehicle
	Vin *string `json:"vin,omitempty"`
	// Gross vehicle weight (lbs)
	Weight *float64 `json:"weight,omitempty"`
	// Overall width of the vehicle (in)
	Width *float64 `json:"width,omitempty"`
	// Model Year of the vehicle
	Year *int64 `json:"year,omitempty"`
}
