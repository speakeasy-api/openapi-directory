"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class VmxNetworkDevicesClaimRequestBodySizeEnum(str, Enum):
    r"""The size of the vMX you claim. It can be one of: small, medium, large, 100"""
    ONE_HUNDRED = '100'
    LARGE = 'large'
    MEDIUM = 'medium'
    SMALL = 'small'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class VmxNetworkDevicesClaimRequestBody:
    
    size: VmxNetworkDevicesClaimRequestBodySizeEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('size') }})
    r"""The size of the vMX you claim. It can be one of: small, medium, large, 100"""  
    

@dataclasses.dataclass
class VmxNetworkDevicesClaimRequest:
    
    network_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'networkId', 'style': 'simple', 'explode': False }})  
    request_body: VmxNetworkDevicesClaimRequestBody = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})  
    

@dataclasses.dataclass
class VmxNetworkDevicesClaimResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    vmx_network_devices_claim_200_application_json_object: Optional[dict[str, Any]] = dataclasses.field(default=None)
    r"""Successful operation"""  
    