"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import api_core_dto_clickstream_hitlistpage as shared_api_core_dto_clickstream_hitlistpage
from enum import Enum
from typing import Optional

class GroupsGetHitsFilterEnum(str, Enum):
    r"""Filter event type (\\"spiders\\"/\\"uniques\\"/\\"nonuniques\\"/\\"conversions\\")"""
    SPIDERS = 'spiders'
    UNIQUES = 'uniques'
    NONUNIQUES = 'nonuniques'
    CONVERSIONS = 'conversions'

class GroupsGetHitsTimeframeEnum(str, Enum):
    r"""Timeframe of the request. See list at $timeframeList"""
    YESTERDAY = 'yesterday'
    LAST7 = 'last7'
    LAST30 = 'last30'
    LASTMONTH = 'lastmonth'
    CURRENTMONTH = 'currentmonth'
    PREVIOUSMONTH = 'previousmonth'
    LAST90 = 'last90'
    LAST120 = 'last120'
    LAST180 = 'last180'
    CUSTOM = 'custom'


@dataclasses.dataclass
class GroupsGetHitsRequest:
    
    id: int = dataclasses.field(metadata={'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': False }})
    r"""Id of the group"""  
    timeframe: GroupsGetHitsTimeframeEnum = dataclasses.field(metadata={'query_param': { 'field_name': 'timeframe', 'style': 'form', 'explode': True }})
    r"""Timeframe of the request. See list at $timeframeList"""  
    filter: Optional[GroupsGetHitsFilterEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'filter', 'style': 'form', 'explode': True }})
    r"""Filter event type (\\"spiders\\"/\\"uniques\\"/\\"nonuniques\\"/\\"conversions\\")"""  
    from_day: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fromDay', 'style': 'form', 'explode': True }})
    r"""If using a \\"custom\\" timeFrame you can specify the starting day (YYYYMMDD)"""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Limit results to this number"""  
    offset: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': True }})
    r"""Offset where to start from (it's the lastKey field in the response object)"""  
    to_day: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'toDay', 'style': 'form', 'explode': True }})
    r"""If using a \\"custom\\" timeFrame you can specify the ending day (YYYYMMDD)"""  
    

@dataclasses.dataclass
class GroupsGetHitsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_core_dto_click_stream_hit_list_page: Optional[shared_api_core_dto_clickstream_hitlistpage.APICoreDtoClickStreamHitListPage] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    