"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import spotprovisioningallocationstrategy_enum as shared_spotprovisioningallocationstrategy_enum
from ..shared import spotprovisioningtimeoutaction_enum as shared_spotprovisioningtimeoutaction_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SpotProvisioningSpecification:
    r"""<p>The launch specification for Spot Instances in the instance fleet, which determines the defined duration, provisioning timeout behavior, and allocation strategy.</p> <note> <p>The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions. Spot Instance allocation strategy is available in Amazon EMR version 5.12.1 and later.</p> </note> <note> <p>Spot Instances with a defined duration (also known as Spot blocks) are no longer available to new customers from July 1, 2021. For customers who have previously used the feature, we will continue to support Spot Instances with a defined duration until December 31, 2022. </p> </note>"""
    
    timeout_action: shared_spotprovisioningtimeoutaction_enum.SpotProvisioningTimeoutActionEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TimeoutAction') }})  
    timeout_duration_minutes: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TimeoutDurationMinutes') }})  
    allocation_strategy: Optional[shared_spotprovisioningallocationstrategy_enum.SpotProvisioningAllocationStrategyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AllocationStrategy'), 'exclude': lambda f: f is None }})  
    block_duration_minutes: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('BlockDurationMinutes'), 'exclude': lambda f: f is None }})  
    