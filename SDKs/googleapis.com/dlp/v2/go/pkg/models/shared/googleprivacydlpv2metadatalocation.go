// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GooglePrivacyDlpV2MetadataLocationTypeEnum - Type of metadata containing the finding.
type GooglePrivacyDlpV2MetadataLocationTypeEnum string

const (
	GooglePrivacyDlpV2MetadataLocationTypeEnumMetadatatypeUnspecified GooglePrivacyDlpV2MetadataLocationTypeEnum = "METADATATYPE_UNSPECIFIED"
	GooglePrivacyDlpV2MetadataLocationTypeEnumStorageMetadata         GooglePrivacyDlpV2MetadataLocationTypeEnum = "STORAGE_METADATA"
)

func (e GooglePrivacyDlpV2MetadataLocationTypeEnum) ToPointer() *GooglePrivacyDlpV2MetadataLocationTypeEnum {
	return &e
}

func (e *GooglePrivacyDlpV2MetadataLocationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "METADATATYPE_UNSPECIFIED":
		fallthrough
	case "STORAGE_METADATA":
		*e = GooglePrivacyDlpV2MetadataLocationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GooglePrivacyDlpV2MetadataLocationTypeEnum: %v", v)
	}
}

// GooglePrivacyDlpV2MetadataLocation - Metadata Location
type GooglePrivacyDlpV2MetadataLocation struct {
	// Storage metadata label to indicate which metadata entry contains findings.
	StorageLabel *GooglePrivacyDlpV2StorageMetadataLabel `json:"storageLabel,omitempty"`
	// Type of metadata containing the finding.
	Type *GooglePrivacyDlpV2MetadataLocationTypeEnum `json:"type,omitempty"`
}
