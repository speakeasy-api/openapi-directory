import dataclasses
from typing import Optional
from enum import Enum
from dataclasses_json import dataclass_json
from sdk import utils
from ..shared import cvss as shared_cvss
from ..shared import packageissue as shared_packageissue
from ..shared import relatedurl as shared_relatedurl

class VulnerabilityOccurrenceCvssVersionEnum(str, Enum):
    CVSS_VERSION_UNSPECIFIED = "CVSS_VERSION_UNSPECIFIED"
    CVSS_VERSION_2 = "CVSS_VERSION_2"
    CVSS_VERSION_3 = "CVSS_VERSION_3"

class VulnerabilityOccurrenceEffectiveSeverityEnum(str, Enum):
    SEVERITY_UNSPECIFIED = "SEVERITY_UNSPECIFIED"
    MINIMAL = "MINIMAL"
    LOW = "LOW"
    MEDIUM = "MEDIUM"
    HIGH = "HIGH"
    CRITICAL = "CRITICAL"

class VulnerabilityOccurrenceSeverityEnum(str, Enum):
    SEVERITY_UNSPECIFIED = "SEVERITY_UNSPECIFIED"
    MINIMAL = "MINIMAL"
    LOW = "LOW"
    MEDIUM = "MEDIUM"
    HIGH = "HIGH"
    CRITICAL = "CRITICAL"


@dataclass_json
@dataclasses.dataclass
class VulnerabilityOccurrence:
    r"""VulnerabilityOccurrence
    An occurrence of a severity vulnerability on a resource.
    """
    
    cvss_score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('cvssScore') }})
    cvss_version: Optional[VulnerabilityOccurrenceCvssVersionEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('cvssVersion') }})
    cvssv3: Optional[shared_cvss.Cvss] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('cvssv3') }})
    effective_severity: Optional[VulnerabilityOccurrenceEffectiveSeverityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('effectiveSeverity') }})
    fix_available: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('fixAvailable') }})
    long_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('longDescription') }})
    package_issue: Optional[list[shared_packageissue.PackageIssue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('packageIssue') }})
    related_urls: Optional[list[shared_relatedurl.RelatedURL]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('relatedUrls') }})
    severity: Optional[VulnerabilityOccurrenceSeverityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('severity') }})
    short_description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('shortDescription') }})
    type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('type') }})
    
