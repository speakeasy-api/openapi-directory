// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SessionStatusEnum string

const (
	SessionStatusEnumProvisioning SessionStatusEnum = "PROVISIONING"
	SessionStatusEnumReady        SessionStatusEnum = "READY"
	SessionStatusEnumFailed       SessionStatusEnum = "FAILED"
	SessionStatusEnumTimeout      SessionStatusEnum = "TIMEOUT"
	SessionStatusEnumStopping     SessionStatusEnum = "STOPPING"
	SessionStatusEnumStopped      SessionStatusEnum = "STOPPED"
)

func (e SessionStatusEnum) ToPointer() *SessionStatusEnum {
	return &e
}

func (e *SessionStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PROVISIONING":
		fallthrough
	case "READY":
		fallthrough
	case "FAILED":
		fallthrough
	case "TIMEOUT":
		fallthrough
	case "STOPPING":
		fallthrough
	case "STOPPED":
		*e = SessionStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SessionStatusEnum: %v", v)
	}
}
