/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ImportTaskHistory } from "./importtaskhistory";
import { Expose, Transform, Type } from "class-transformer";

export class ImportTask extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt: Date;

  @SpeakeasyMetadata({ elemType: ImportTaskHistory })
  @Expose({ name: "history" })
  @Type(() => ImportTaskHistory)
  history: ImportTaskHistory[];

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  @SpeakeasyMetadata()
  @Expose({ name: "mode" })
  mode: string;

  @SpeakeasyMetadata()
  @Expose({ name: "path" })
  path: string;

  @SpeakeasyMetadata()
  @Expose({ name: "result" })
  result?: any;

  @SpeakeasyMetadata()
  @Expose({ name: "size" })
  size?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state: string;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt: Date;
}
