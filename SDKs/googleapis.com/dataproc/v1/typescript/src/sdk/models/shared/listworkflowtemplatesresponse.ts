/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { WorkflowTemplate } from "./workflowtemplate";
import { Expose, Type } from "class-transformer";

/**
 * A response to a request to list workflow templates in a project.
 */
export class ListWorkflowTemplatesResponse extends SpeakeasyBase {
  /**
   * Output only. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent ListWorkflowTemplatesRequest.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * Output only. WorkflowTemplates list.
   */
  @SpeakeasyMetadata({ elemType: WorkflowTemplate })
  @Expose({ name: "templates" })
  @Type(() => WorkflowTemplate)
  templates?: WorkflowTemplate[];
}
