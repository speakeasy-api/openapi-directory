"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import game as shared_game
from ..shared import period as shared_period
from ..shared import playergame as shared_playergame
from ..shared import teamgame as shared_teamgame
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class BoxScore:
    
    game: Optional[shared_game.Game] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Game'), 'exclude': lambda f: f is None }})  
    periods: Optional[list[shared_period.Period]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Periods'), 'exclude': lambda f: f is None }})  
    player_games: Optional[list[shared_playergame.PlayerGame]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PlayerGames'), 'exclude': lambda f: f is None }})  
    team_games: Optional[list[shared_teamgame.TeamGame]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('TeamGames'), 'exclude': lambda f: f is None }})  
    