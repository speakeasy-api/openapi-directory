/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EvaluationRule } from "./evaluationrule";
import { FeatureEvaluationStrategyEnum } from "./featureevaluationstrategyenum";
import { FeatureStatusEnum } from "./featurestatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * This structure contains information about one Evidently feature in your account.
 */
export class FeatureSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "arn" })
  arn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "createdTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "defaultVariation" })
  defaultVariation?: string;

  @SpeakeasyMetadata({ elemType: EvaluationRule })
  @Expose({ name: "evaluationRules" })
  @Type(() => EvaluationRule)
  evaluationRules?: EvaluationRule[];

  @SpeakeasyMetadata()
  @Expose({ name: "evaluationStrategy" })
  evaluationStrategy: FeatureEvaluationStrategyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdatedTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTime: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "project" })
  project?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: FeatureStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: Record<string, string>;
}
