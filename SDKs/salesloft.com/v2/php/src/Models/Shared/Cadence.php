<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Cadence - Success
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Cadence
{
	
    public ?EmbeddedResource $addedStage = null;
    
    /**
     * Datetime of when the cadence was archived, if archived
     * 
     * @var ?\DateTime $archivedAt
     */
	
    public ?\DateTime $archivedAt = null;
    
	
    public ?EmbeddedResource $bouncedStage = null;
    
    /**
     * ID of the cadence framework used to create steps for the cadence
     * 
     * @var ?int $cadenceFrameworkId
     */
	
    public ?int $cadenceFrameworkId = null;
    
    /**
     * The use case of the cadence. Possible values are:
     * 
     * 
     * outbound: Denotes an outbound cadence, typically for sales purposes
     * 
     * inbound: Denotes an inbound sales cadence
     * 
     * event: Denotes a cadence used for an upcoming event
     * 
     * other: Denotes a cadence outside of the standard process
     * 
     * 
     * @var ?string $cadenceFunction
     */
	
    public ?string $cadenceFunction = null;
    
	
    public ?EmbeddedResource $cadencePriority = null;
    
	
    public ?CadenceCounts $counts = null;
    
    /**
     * Datetime of when the cadence was created
     * 
     * @var ?\DateTime $createdAt
     */
	
    public ?\DateTime $createdAt = null;
    
	
    public ?EmbeddedResource $creator = null;
    
    /**
     * Whether this cadence is in draft mode
     * 
     * @var ?bool $draft
     */
	
    public ?bool $draft = null;
    
    /**
     * Cadence External ID
     * 
     * @var ?string $externalIdentifier
     */
	
    public ?string $externalIdentifier = null;
    
	
    public ?EmbeddedResource $finishedStage = null;
    
    /**
     * Groups to which this cadence is assigned, if any
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\EmbeddedResource> $groups
     */
	
    public ?array $groups = null;
    
    /**
     * ID of cadence
     * 
     * @var ?int $id
     */
	
    public ?int $id = null;
    
    /**
     * Cadence name
     * 
     * @var ?string $name
     */
	
    public ?string $name = null;
    
    /**
     * Whether this cadence is configured to include an opt-out link by default
     * 
     * @var ?bool $optOutLinkIncluded
     */
	
    public ?bool $optOutLinkIncluded = null;
    
	
    public ?EmbeddedResource $owner = null;
    
    /**
     * Whether this cadence is configured to automatically remove people who have bounced
     * 
     * @var ?bool $removeBouncesEnabled
     */
	
    public ?bool $removeBouncesEnabled = null;
    
    /**
     * Whether this cadence is configured to automatically remove people who have replied
     * 
     * @var ?bool $removeRepliesEnabled
     */
	
    public ?bool $removeRepliesEnabled = null;
    
	
    public ?EmbeddedResource $repliedStage = null;
    
    /**
     * Whether this cadence is visible to team members (shared)
     * 
     * @var ?bool $shared
     */
	
    public ?bool $shared = null;
    
    /**
     * All tags applied to this cadence
     * 
     * @var ?array<string> $tags
     */
	
    public ?array $tags = null;
    
    /**
     * Whether this cadence is a team cadence.  A team cadence is created by an admin and can be run by all users
     * 
     * @var ?bool $teamCadence
     */
	
    public ?bool $teamCadence = null;
    
    /**
     * Datetime of when the cadence was last updated
     * 
     * @var ?\DateTime $updatedAt
     */
	
    public ?\DateTime $updatedAt = null;
    
	public function __construct()
	{
		$this->addedStage = null;
		$this->archivedAt = null;
		$this->bouncedStage = null;
		$this->cadenceFrameworkId = null;
		$this->cadenceFunction = null;
		$this->cadencePriority = null;
		$this->counts = null;
		$this->createdAt = null;
		$this->creator = null;
		$this->draft = null;
		$this->externalIdentifier = null;
		$this->finishedStage = null;
		$this->groups = null;
		$this->id = null;
		$this->name = null;
		$this->optOutLinkIncluded = null;
		$this->owner = null;
		$this->removeBouncesEnabled = null;
		$this->removeRepliesEnabled = null;
		$this->repliedStage = null;
		$this->shared = null;
		$this->tags = null;
		$this->teamCadence = null;
		$this->updatedAt = null;
	}
}
