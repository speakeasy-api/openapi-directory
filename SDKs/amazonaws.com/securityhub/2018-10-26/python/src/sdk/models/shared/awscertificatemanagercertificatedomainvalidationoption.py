"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awscertificatemanagercertificateresourcerecord as shared_awscertificatemanagercertificateresourcerecord
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsCertificateManagerCertificateDomainValidationOption:
    r"""<p>Contains information about one of the following:</p> <ul> <li> <p>The initial validation of each domain name that occurs as a result of the <code>RequestCertificate</code> request</p> </li> <li> <p>The validation of each domain name in the certificate, as it pertains to Certificate Manager managed renewal</p> </li> </ul>"""
    
    domain_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DomainName'), 'exclude': lambda f: f is None }})  
    resource_record: Optional[shared_awscertificatemanagercertificateresourcerecord.AwsCertificateManagerCertificateResourceRecord] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ResourceRecord'), 'exclude': lambda f: f is None }})  
    validation_domain: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ValidationDomain'), 'exclude': lambda f: f is None }})  
    validation_emails: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ValidationEmails'), 'exclude': lambda f: f is None }})  
    validation_method: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ValidationMethod'), 'exclude': lambda f: f is None }})  
    validation_status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ValidationStatus'), 'exclude': lambda f: f is None }})  
    