/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class EventRankingRankings {
    /**
     * Number of times disqualified.
     */
    @JsonProperty("dq")
    public Long dq;
    public EventRankingRankings withDq(Long dq) {
        this.dq = dq;
        return this;
    }
    
    /**
     * Additional special data on the team's performance calculated by TBA.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("extra_stats")
    public Double[] extraStats;
    public EventRankingRankings withExtraStats(Double[] extraStats) {
        this.extraStats = extraStats;
        return this;
    }
    
    /**
     * Number of matches played by this team.
     */
    @JsonProperty("matches_played")
    public Long matchesPlayed;
    public EventRankingRankings withMatchesPlayed(Long matchesPlayed) {
        this.matchesPlayed = matchesPlayed;
        return this;
    }
    
    /**
     * The average match score during qualifications. Year specific. May be null if not relevant for a given year.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("qual_average")
    public Long qualAverage;
    public EventRankingRankings withQualAverage(Long qualAverage) {
        this.qualAverage = qualAverage;
        return this;
    }
    
    /**
     * The team's rank at the event as provided by FIRST.
     */
    @JsonProperty("rank")
    public Long rank;
    public EventRankingRankings withRank(Long rank) {
        this.rank = rank;
        return this;
    }
    
    /**
     * A Win-Loss-Tie record for a team, or an alliance.
     */
    @JsonProperty("record")
    public WLTRecord record;
    public EventRankingRankings withRecord(WLTRecord record) {
        this.record = record;
        return this;
    }
    
    /**
     * Additional year-specific information, may be null. See parent `sort_order_info` for details.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sort_orders")
    public Double[] sortOrders;
    public EventRankingRankings withSortOrders(Double[] sortOrders) {
        this.sortOrders = sortOrders;
        return this;
    }
    
    /**
     * The team with this rank.
     */
    @JsonProperty("team_key")
    public String teamKey;
    public EventRankingRankings withTeamKey(String teamKey) {
        this.teamKey = teamKey;
        return this;
    }
    
}
