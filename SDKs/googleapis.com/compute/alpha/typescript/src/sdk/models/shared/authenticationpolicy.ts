/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OriginAuthenticationMethod } from "./originauthenticationmethod";
import { PeerAuthenticationMethod } from "./peerauthenticationmethod";
import { TlsContext } from "./tlscontext";
import { Expose, Type } from "class-transformer";

/**
 * Define whether peer or origin identity should be used for principal. Default value is USE_PEER. If peer (or origin) identity is not available, either because peer/origin authentication is not defined, or failed, principal will be left unset. In other words, binding rule does not affect the decision to accept or reject request. This field can be set to one of the following: USE_PEER: Principal will be set to the identity from peer authentication. USE_ORIGIN: Principal will be set to the identity from origin authentication.
 */
export enum AuthenticationPolicyPrincipalBindingEnum {
  Invalid = "INVALID",
  UseOrigin = "USE_ORIGIN",
  UsePeer = "USE_PEER",
}

/**
 * [Deprecated] The authentication settings for the backend service. The authentication settings for the backend service.
 */
export class AuthenticationPolicy extends SpeakeasyBase {
  /**
   * List of authentication methods that can be used for origin authentication. Similar to peers, these will be evaluated in order the first valid one will be used to set origin identity. If none of these methods pass, the request will be rejected with authentication failed error (401). Leave the list empty if origin authentication is not required.
   */
  @SpeakeasyMetadata({ elemType: OriginAuthenticationMethod })
  @Expose({ name: "origins" })
  @Type(() => OriginAuthenticationMethod)
  origins?: OriginAuthenticationMethod[];

  /**
   * List of authentication methods that can be used for peer authentication. They will be evaluated in order the first valid one will be used to set peer identity. If none of these methods pass, the request will be rejected with authentication failed error (401). Leave the list empty if peer authentication is not required.
   */
  @SpeakeasyMetadata({ elemType: PeerAuthenticationMethod })
  @Expose({ name: "peers" })
  @Type(() => PeerAuthenticationMethod)
  peers?: PeerAuthenticationMethod[];

  /**
   * Define whether peer or origin identity should be used for principal. Default value is USE_PEER. If peer (or origin) identity is not available, either because peer/origin authentication is not defined, or failed, principal will be left unset. In other words, binding rule does not affect the decision to accept or reject request. This field can be set to one of the following: USE_PEER: Principal will be set to the identity from peer authentication. USE_ORIGIN: Principal will be set to the identity from origin authentication.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "principalBinding" })
  principalBinding?: AuthenticationPolicyPrincipalBindingEnum;

  /**
   * [Deprecated] The TLS settings for the client or server. The TLS settings for the client or server.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serverTlsContext" })
  @Type(() => TlsContext)
  serverTlsContext?: TlsContext;
}
