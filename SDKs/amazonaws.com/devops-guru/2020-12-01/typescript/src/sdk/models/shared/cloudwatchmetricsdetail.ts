/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CloudWatchMetricsDataSummary } from "./cloudwatchmetricsdatasummary";
import { CloudWatchMetricsDimension } from "./cloudwatchmetricsdimension";
import { CloudWatchMetricsStatEnum } from "./cloudwatchmetricsstatenum";
import { Expose, Type } from "class-transformer";

/**
 *  Information about an Amazon CloudWatch metric.
 */
export class CloudWatchMetricsDetail extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: CloudWatchMetricsDimension })
  @Expose({ name: "Dimensions" })
  @Type(() => CloudWatchMetricsDimension)
  dimensions?: CloudWatchMetricsDimension[];

  @SpeakeasyMetadata()
  @Expose({ name: "MetricDataSummary" })
  @Type(() => CloudWatchMetricsDataSummary)
  metricDataSummary?: CloudWatchMetricsDataSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "MetricName" })
  metricName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Namespace" })
  namespace?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Period" })
  period?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "Stat" })
  stat?: CloudWatchMetricsStatEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Unit" })
  unit?: string;
}
