/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export enum ScanDefinitionAssetsCriticityEnum {
  Low = "low",
  Medium = "medium",
  High = "high",
}

export enum ScanDefinitionAssetsDatatypeEnum {
  Ip = "ip",
  IpRange = "ip-range",
  IpSubnet = "ip-subnet",
  Fqdn = "fqdn",
  Domain = "domain",
  Url = "url",
  Keyword = "keyword",
  Person = "person",
  Organisation = "organisation",
  Path = "path",
  Application = "application",
}

export class ScanDefinitionAssets extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "criticity" })
  criticity?: ScanDefinitionAssetsCriticityEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "datatype" })
  datatype?: ScanDefinitionAssetsDatatypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "value" })
  value?: string;
}

export class ScanDefinition extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ScanDefinitionAssets })
  @Expose({ name: "assets" })
  @Type(() => ScanDefinitionAssets)
  assets?: ScanDefinitionAssets[];

  @SpeakeasyMetadata()
  @Expose({ name: "options" })
  options?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "scan_id" })
  scanId?: number;
}
