// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetIntersectionsWithinOutputFormatOutputFormatEnum - Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>.
//
// Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
type GetIntersectionsWithinOutputFormatOutputFormatEnum string

const (
	GetIntersectionsWithinOutputFormatOutputFormatEnumJSON    GetIntersectionsWithinOutputFormatOutputFormatEnum = "json"
	GetIntersectionsWithinOutputFormatOutputFormatEnumGeojson GetIntersectionsWithinOutputFormatOutputFormatEnum = "geojson"
	GetIntersectionsWithinOutputFormatOutputFormatEnumXhtml   GetIntersectionsWithinOutputFormatOutputFormatEnum = "xhtml"
	GetIntersectionsWithinOutputFormatOutputFormatEnumKml     GetIntersectionsWithinOutputFormatOutputFormatEnum = "kml"
	GetIntersectionsWithinOutputFormatOutputFormatEnumGml     GetIntersectionsWithinOutputFormatOutputFormatEnum = "gml"
	GetIntersectionsWithinOutputFormatOutputFormatEnumCsv     GetIntersectionsWithinOutputFormatOutputFormatEnum = "csv"
	GetIntersectionsWithinOutputFormatOutputFormatEnumShpz    GetIntersectionsWithinOutputFormatOutputFormatEnum = "shpz"
)

func (e *GetIntersectionsWithinOutputFormatOutputFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "json":
		fallthrough
	case "geojson":
		fallthrough
	case "xhtml":
		fallthrough
	case "kml":
		fallthrough
	case "gml":
		fallthrough
	case "csv":
		fallthrough
	case "shpz":
		*e = GetIntersectionsWithinOutputFormatOutputFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetIntersectionsWithinOutputFormatOutputFormatEnum: %s", s)
	}
}

// GetIntersectionsWithinOutputFormatOutputSrsEnum - The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
type GetIntersectionsWithinOutputFormatOutputSrsEnum string

const (
	GetIntersectionsWithinOutputFormatOutputSrsEnumFourThousandThreeHundredAndTwentySix  GetIntersectionsWithinOutputFormatOutputSrsEnum = "4326"
	GetIntersectionsWithinOutputFormatOutputSrsEnumFourThousandTwoHundredAndSixtyNine    GetIntersectionsWithinOutputFormatOutputSrsEnum = "4269"
	GetIntersectionsWithinOutputFormatOutputSrsEnumThreeThousandAndFive                  GetIntersectionsWithinOutputFormatOutputSrsEnum = "3005"
	GetIntersectionsWithinOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndSeven  GetIntersectionsWithinOutputFormatOutputSrsEnum = "26907"
	GetIntersectionsWithinOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndEight  GetIntersectionsWithinOutputFormatOutputSrsEnum = "26908"
	GetIntersectionsWithinOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndNine   GetIntersectionsWithinOutputFormatOutputSrsEnum = "26909"
	GetIntersectionsWithinOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndTen    GetIntersectionsWithinOutputFormatOutputSrsEnum = "26910"
	GetIntersectionsWithinOutputFormatOutputSrsEnumTwentySixThousandNineHundredAndEleven GetIntersectionsWithinOutputFormatOutputSrsEnum = "26911"
)

func (e *GetIntersectionsWithinOutputFormatOutputSrsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "4326":
		fallthrough
	case "4269":
		fallthrough
	case "3005":
		fallthrough
	case "26907":
		fallthrough
	case "26908":
		fallthrough
	case "26909":
		fallthrough
	case "26910":
		fallthrough
	case "26911":
		*e = GetIntersectionsWithinOutputFormatOutputSrsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetIntersectionsWithinOutputFormatOutputSrsEnum: %s", s)
	}
}

type GetIntersectionsWithinOutputFormatRequest struct {
	// A bounding box (xmin,ymin,xmax,ymax) used to limit the search area. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#bbox target="_blank">bbox</a>
	Bbox string `queryParam:"style=form,explode=true,name=bbox"`
	// The maximum degree an interesection can have to be included in results. A four-way stop has a degree of 4.
	MaxDegree *int64 `queryParam:"style=form,explode=true,name=maxDegree"`
	// The maximum number of search results
	MaxResults *int64 `queryParam:"style=form,explode=true,name=maxResults"`
	// The minimum degree an intersection can have to be included in results. A dead-end has a degree of 1.
	MinDegree *int64 `queryParam:"style=form,explode=true,name=minDegree"`
	// Results format. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputFormat target="_blank">outputFormat</a>.
	//
	// Note: GeoJSON and KML formats only support EPSG:4326 (outputSRS=4326)
	OutputFormat GetIntersectionsWithinOutputFormatOutputFormatEnum `pathParam:"style=simple,explode=false,name=outputFormat"`
	// The EPSG code of the spatial reference system (SRS) to use for output geometries. See <a href=https://github.com/bcgov/ols-geocoder/blob/gh-pages/glossary.md#outputSRS target="_blank">outputSRS</a>
	OutputSRS *GetIntersectionsWithinOutputFormatOutputSrsEnum `queryParam:"style=form,explode=true,name=outputSRS"`
}

type GetIntersectionsWithinOutputFormatResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
