/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Subnetwork - Represents a subnet that was created or discovered by a private access management service.
 */
public class Subnetwork {
    /**
     * Subnetwork CIDR range in `10.x.x.x/y` format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipCidrRange")
    public String ipCidrRange;
    public Subnetwork withIpCidrRange(String ipCidrRange) {
        this.ipCidrRange = ipCidrRange;
        return this;
    }
    
    /**
     * Subnetwork name. See https://cloud.google.com/compute/docs/vpc/
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Subnetwork withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * In the Shared VPC host project, the VPC network that's peered with the consumer network. For example: `projects/1234321/global/networks/host-network`
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("network")
    public String network;
    public Subnetwork withNetwork(String network) {
        this.network = network;
        return this;
    }
    
    /**
     * This is a discovered subnet that is not within the current consumer allocated ranges.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("outsideAllocation")
    public Boolean outsideAllocation;
    public Subnetwork withOutsideAllocation(Boolean outsideAllocation) {
        this.outsideAllocation = outsideAllocation;
        return this;
    }
    
    /**
     * GCP region where the subnetwork is located.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("region")
    public String region;
    public Subnetwork withRegion(String region) {
        this.region = region;
        return this;
    }
    
    /**
     * List of secondary IP ranges in this subnetwork.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secondaryIpRanges")
    public SecondaryIpRange[] secondaryIpRanges;
    public Subnetwork withSecondaryIpRanges(SecondaryIpRange[] secondaryIpRanges) {
        this.secondaryIpRanges = secondaryIpRanges;
        return this;
    }
    
}
