/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The state of the association.
 */
export enum DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnum {
  Associating = "associating",
  Associated = "associated",
  Disassociating = "disassociating",
  Disassociated = "disassociated",
}

/**
 * The association.
 */
export class DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  state?: DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociationStateEnum;

  @SpeakeasyMetadata()
  transitGatewayRouteTableId?: string;
}

/**
 * The resource type. Note that the <code>tgw-peering</code> resource type has been deprecated.
 */
export enum DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnum {
  Vpc = "vpc",
  Vpn = "vpn",
  DirectConnectGateway = "direct-connect-gateway",
  Connect = "connect",
  Peering = "peering",
  TgwPeering = "tgw-peering",
}

/**
 * The attachment state. Note that the <code>initiating</code> state has been deprecated.
 */
export enum DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum {
  Initiating = "initiating",
  InitiatingRequest = "initiatingRequest",
  PendingAcceptance = "pendingAcceptance",
  RollingBack = "rollingBack",
  Pending = "pending",
  Available = "available",
  Modifying = "modifying",
  Deleting = "deleting",
  Deleted = "deleted",
  Failed = "failed",
  Rejected = "rejected",
  Rejecting = "rejecting",
  Failing = "failing",
}

/**
 * Describes a tag.
 */
export class DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsTags extends SpeakeasyBase {
  @SpeakeasyMetadata()
  key?: string;

  @SpeakeasyMetadata()
  value?: string;
}

/**
 * Describes an attachment between a resource and a transit gateway.
 */
export class DescribeTransitGatewayAttachmentsResultTransitGatewayAttachments extends SpeakeasyBase {
  @SpeakeasyMetadata()
  association?: DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsAssociation;

  @SpeakeasyMetadata()
  creationTime?: Date;

  @SpeakeasyMetadata()
  resourceId?: string;

  @SpeakeasyMetadata()
  resourceOwnerId?: string;

  @SpeakeasyMetadata()
  resourceType?: DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsResourceTypeEnum;

  @SpeakeasyMetadata()
  state?: DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsStateEnum;

  @SpeakeasyMetadata({
    elemType:
      DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsTags,
  })
  tags?: DescribeTransitGatewayAttachmentsResultTransitGatewayAttachmentsTags[];

  @SpeakeasyMetadata()
  transitGatewayAttachmentId?: string;

  @SpeakeasyMetadata()
  transitGatewayId?: string;

  @SpeakeasyMetadata()
  transitGatewayOwnerId?: string;
}

/**
 * Success
 */
export class DescribeTransitGatewayAttachmentsResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  nextToken?: string;

  @SpeakeasyMetadata({
    elemType: DescribeTransitGatewayAttachmentsResultTransitGatewayAttachments,
  })
  transitGatewayAttachments?: DescribeTransitGatewayAttachmentsResultTransitGatewayAttachments[];
}
