"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Optional


@dataclasses.dataclass
class IPGeolocationWithConfidenceAreaAndHazardReportAPIRequest:
    
    ip: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'ip', 'style': 'form', 'explode': True }})
    r"""IPv4 IP address in a string or numeric format. If omitted, the callerâ€™s IP address is assumed"""  
    key: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'key', 'style': 'form', 'explode': True }})
    r"""Your API key"""  
    locality_language: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'localityLanguage', 'style': 'form', 'explode': True }})
    r"""Preferred language for locality names in ISO 639-1 format, such as 'en' for English, 'es' for Spanish etc. Please note: 147 common world languages are supported, full list here, but not all languages are available for every location. If requested language is not available for a requested location it will default to English, if no English is available, the native, local names will be provided"""  
    

@dataclasses.dataclass
class IPGeolocationWithConfidenceAreaAndHazardReportAPIResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    