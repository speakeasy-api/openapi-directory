/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Deployment - Code and application artifacts used to deploy a version to App Engine.
 */
public class Deployment {
    /**
     * Options for the build operations performed as a part of the version deployment. Only applicable for App Engine flexible environment when creating a version using source code directly.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cloudBuildOptions")
    public CloudBuildOptions cloudBuildOptions;
    public Deployment withCloudBuildOptions(CloudBuildOptions cloudBuildOptions) {
        this.cloudBuildOptions = cloudBuildOptions;
        return this;
    }
    
    /**
     * Docker image that is used to create a container and start a VM instance for the version that you deploy. Only applicable for instances running in the App Engine flexible environment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("container")
    public ContainerInfo container;
    public Deployment withContainer(ContainerInfo container) {
        this.container = container;
        return this;
    }
    
    /**
     * Manifest of the files stored in Google Cloud Storage that are included as part of this version. All files must be readable using the credentials supplied with this call.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("files")
    public java.util.Map<String, FileInfo> files;
    public Deployment withFiles(java.util.Map<String, FileInfo> files) {
        this.files = files;
        return this;
    }
    
    /**
     * The zip file information for a zip deployment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("zip")
    public ZipInfo zip;
    public Deployment withZip(ZipInfo zip) {
        this.zip = zip;
        return this;
    }
    
}
