// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

type PromotionFields struct {
	// Creation date of the promotion (requires 'lasts' param - 'date')
	BeginsAt *string `json:"begins_at,omitempty"`
	// Products Categories where the promotion will be applied (requires 'discount_target' param - 'categories')
	Categories []ID `json:"categories,omitempty"`
	// Code of the promotion
	Code *string `json:"code,omitempty"`
	// Minimum order amount to validate the promotion
	ConditionPrice *float32 `json:"condition_price,omitempty"`
	// Minimum quantity of ordered itens to validate the promotion
	ConditionQty *int `json:"condition_qty,omitempty"`
	// True if the promotion can be acumulated with others
	Cumulative *bool `json:"cumulative,omitempty"`
	// Customer Categories to whom the promotion will be applied (requires 'customers' param - 'categories')
	CustomerCategories []ID `json:"customer_categories,omitempty"`
	// Fixed discount amount of the promotion
	DiscountAmountFix *float32 `json:"discount_amount_fix,omitempty"`
	// Percentual discount amount of the promotion
	DiscountAmountPercent *float32 `json:"discount_amount_percent,omitempty"`
	// Where the promotion will be applied ('order', 'shipping', 'categories', 'buy_x_get_y)
	DiscountTarget *string `json:"discount_target,omitempty"`
	// If the promotion is currently enabled
	Enabled *bool `json:"enabled,omitempty"`
	// Expiration date of the promotion (requires 'lasts' param - 'date')
	ExpiresAt *string `json:"expires_at,omitempty"`
	// Unique identifier of the product
	ID *int `json:"id,omitempty"`
	// Controls when the promotion will expire ('none', 'date', 'max_times_used')
	Lasts *string `json:"lasts,omitempty"`
	// Maximum amount a promotion can be used (requires 'lasts' param - 'max_times_used')
	MaxTimesUsed *int `json:"max_times_used,omitempty"`
	// Name of the product
	Name *string `json:"name,omitempty"`
	// Products where the promotion will be applied (requires 'discount_target' param - 'categories' or 'buy_x_get_y')
	Products []ID `json:"products,omitempty"`
	// Products required to apply the promotion (requires 'discount_target' param - 'buy_x_get_y')
	ProductsX []ID `json:"products_x,omitempty"`
	// Number of sets of products_x needed to be able to apply the promotion (requires 'discount_target' param - 'buy_x_get_y')
	QuantityX *int `json:"quantity_x,omitempty"`
	// Status of the promotion ('active', 'expired')
	Status *string `json:"status,omitempty"`
	// Amount of times the promotion was used
	TimesUsed *int `json:"times_used,omitempty"`
}
