"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import conformancepackinputparameter as shared_conformancepackinputparameter
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrganizationConformancePack:
    r"""An organization conformance pack that has information about conformance packs that Config creates in member accounts."""
    
    last_update_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LastUpdateTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    organization_conformance_pack_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OrganizationConformancePackArn') }})  
    organization_conformance_pack_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OrganizationConformancePackName') }})  
    conformance_pack_input_parameters: Optional[list[shared_conformancepackinputparameter.ConformancePackInputParameter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ConformancePackInputParameters'), 'exclude': lambda f: f is None }})  
    delivery_s3_bucket: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeliveryS3Bucket'), 'exclude': lambda f: f is None }})  
    delivery_s3_key_prefix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DeliveryS3KeyPrefix'), 'exclude': lambda f: f is None }})  
    excluded_accounts: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ExcludedAccounts'), 'exclude': lambda f: f is None }})  
    