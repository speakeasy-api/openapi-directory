"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import api_core_responses_countresponce as shared_api_core_responses_countresponce
from enum import Enum
from typing import Optional

class GroupsCountStatusEnum(str, Enum):
    r"""Status of the datapoint"""
    DELETED = 'deleted'
    ACTIVE = 'active'


@dataclasses.dataclass
class GroupsCountRequest:
    
    created_after: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'createdAfter', 'style': 'form', 'explode': True }})
    r"""Exclude groups created before this date (YYYYMMDD)"""  
    created_before: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'createdBefore', 'style': 'form', 'explode': True }})
    r"""Exclude groups created after this date (YYYYMMDD)"""  
    status: Optional[GroupsCountStatusEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'status', 'style': 'form', 'explode': True }})
    r"""Status of the datapoint"""  
    tags: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'tags', 'style': 'form', 'explode': True }})
    r"""A comma separated list of tags you want to filter with."""  
    text_search: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'textSearch', 'style': 'form', 'explode': True }})
    r"""Filter fields by this pattern"""  
    write: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'write', 'style': 'form', 'explode': True }})
    r"""Write permission"""  
    

@dataclasses.dataclass
class GroupsCountResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    api_core_responses_count_responce: Optional[shared_api_core_responses_countresponce.APICoreResponsesCountResponce] = dataclasses.field(default=None)  
    body: Optional[bytes] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    