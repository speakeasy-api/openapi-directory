"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlecloudrecaptchaenterprisev1firewallpolicy as shared_googlecloudrecaptchaenterprisev1firewallpolicy
from ..shared import googlerpcstatus as shared_googlerpcstatus
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleCloudRecaptchaenterpriseV1FirewallPolicyAssessment:
    r"""Policy config assessment."""
    
    error: Optional[shared_googlerpcstatus.GoogleRPCStatus] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('error'), 'exclude': lambda f: f is None }})
    r"""The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."""  
    firewall_policy: Optional[shared_googlecloudrecaptchaenterprisev1firewallpolicy.GoogleCloudRecaptchaenterpriseV1FirewallPolicy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firewallPolicy'), 'exclude': lambda f: f is None }})
    r"""A FirewallPolicy represents a single matching pattern and resulting actions to take."""  
    