/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Tag } from "./tag";
import { Expose, Type } from "class-transformer";

export class CreateServiceInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "branchName" })
  branchName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "repositoryConnectionArn" })
  repositoryConnectionArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "repositoryId" })
  repositoryId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "spec" })
  spec: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "templateMajorVersion" })
  templateMajorVersion: string;

  @SpeakeasyMetadata()
  @Expose({ name: "templateMinorVersion" })
  templateMinorVersion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "templateName" })
  templateName: string;
}
