/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GoogleCloudRunV2Task - Task represents a single run of a container to completion.
 */
public class GoogleCloudRunV2Task {
    /**
     * Output only. Unstructured key value map that may be set by external tools to store and arbitrary metadata. They are not queryable and should be preserved when modifying objects.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("annotations")
    public java.util.Map<String, String> annotations;

    public GoogleCloudRunV2Task withAnnotations(java.util.Map<String, String> annotations) {
        this.annotations = annotations;
        return this;
    }
    
    /**
     * Output only. Represents time when the Task was completed. It is not guaranteed to be set in happens-before order across separate operations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("completionTime")
    public String completionTime;

    public GoogleCloudRunV2Task withCompletionTime(String completionTime) {
        this.completionTime = completionTime;
        return this;
    }
    
    /**
     * Output only. The Condition of this Task, containing its readiness status, and detailed error information in case it did not reach the desired state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("conditions")
    public GoogleCloudRunV2Condition[] conditions;

    public GoogleCloudRunV2Task withConditions(GoogleCloudRunV2Condition[] conditions) {
        this.conditions = conditions;
        return this;
    }
    
    /**
     * Holds the single container that defines the unit of execution for this task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containers")
    public GoogleCloudRunV2Container[] containers;

    public GoogleCloudRunV2Task withContainers(GoogleCloudRunV2Container[] containers) {
        this.containers = containers;
        return this;
    }
    
    /**
     * Output only. Represents time when the task was created by the job controller. It is not guaranteed to be set in happens-before order across separate operations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createTime")
    public String createTime;

    public GoogleCloudRunV2Task withCreateTime(String createTime) {
        this.createTime = createTime;
        return this;
    }
    
    /**
     * Output only. For a deleted resource, the deletion time. It is only populated as a response to a Delete request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deleteTime")
    public String deleteTime;

    public GoogleCloudRunV2Task withDeleteTime(String deleteTime) {
        this.deleteTime = deleteTime;
        return this;
    }
    
    /**
     * Output only. A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encryptionKey")
    public String encryptionKey;

    public GoogleCloudRunV2Task withEncryptionKey(String encryptionKey) {
        this.encryptionKey = encryptionKey;
        return this;
    }
    
    /**
     * Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;

    public GoogleCloudRunV2Task withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Output only. The name of the parent Execution.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("execution")
    public String execution;

    public GoogleCloudRunV2Task withExecution(String execution) {
        this.execution = execution;
        return this;
    }
    
    /**
     * The execution environment being used to host this Task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("executionEnvironment")
    public GoogleCloudRunV2TaskExecutionEnvironmentEnum executionEnvironment;

    public GoogleCloudRunV2Task withExecutionEnvironment(GoogleCloudRunV2TaskExecutionEnvironmentEnum executionEnvironment) {
        this.executionEnvironment = executionEnvironment;
        return this;
    }
    
    /**
     * Output only. For a deleted resource, the time after which it will be permamently deleted. It is only populated as a response to a Delete request.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expireTime")
    public String expireTime;

    public GoogleCloudRunV2Task withExpireTime(String expireTime) {
        this.expireTime = expireTime;
        return this;
    }
    
    /**
     * Output only. A number that monotonically increases every time the user modifies the desired state.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("generation")
    public String generation;

    public GoogleCloudRunV2Task withGeneration(String generation) {
        this.generation = generation;
        return this;
    }
    
    /**
     * Output only. Index of the Task, unique per execution, and beginning at 0.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("index")
    public Integer index;

    public GoogleCloudRunV2Task withIndex(Integer index) {
        this.index = index;
        return this;
    }
    
    /**
     * Output only. The name of the parent Job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("job")
    public String job;

    public GoogleCloudRunV2Task withJob(String job) {
        this.job = job;
        return this;
    }
    
    /**
     * Output only. Unstructured key value map that can be used to organize and categorize objects. User-provided labels are shared with Google's billing system, so they can be used to filter, or break down billing charges by team, component, environment, state, etc. For more information, visit https://cloud.google.com/resource-manager/docs/creating-managing-labels or https://cloud.google.com/run/docs/configuring/labels
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;

    public GoogleCloudRunV2Task withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Result of a task attempt.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastAttemptResult")
    public GoogleCloudRunV2TaskAttemptResult lastAttemptResult;

    public GoogleCloudRunV2Task withLastAttemptResult(GoogleCloudRunV2TaskAttemptResult lastAttemptResult) {
        this.lastAttemptResult = lastAttemptResult;
        return this;
    }
    
    /**
     * Output only. URI where logs for this execution can be found in Cloud Console.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("logUri")
    public String logUri;

    public GoogleCloudRunV2Task withLogUri(String logUri) {
        this.logUri = logUri;
        return this;
    }
    
    /**
     * Number of retries allowed per Task, before marking this Task failed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxRetries")
    public Integer maxRetries;

    public GoogleCloudRunV2Task withMaxRetries(Integer maxRetries) {
        this.maxRetries = maxRetries;
        return this;
    }
    
    /**
     * Output only. The unique name of this Task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public GoogleCloudRunV2Task withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Output only. The generation of this Task. See comments in `Job.reconciling` for additional information on reconciliation process in Cloud Run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("observedGeneration")
    public String observedGeneration;

    public GoogleCloudRunV2Task withObservedGeneration(String observedGeneration) {
        this.observedGeneration = observedGeneration;
        return this;
    }
    
    /**
     * Output only. Indicates whether the resource's reconciliation is still in progress. See comments in `Job.reconciling` for additional information on reconciliation process in Cloud Run.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reconciling")
    public Boolean reconciling;

    public GoogleCloudRunV2Task withReconciling(Boolean reconciling) {
        this.reconciling = reconciling;
        return this;
    }
    
    /**
     * Output only. The number of times this Task was retried. Tasks are retried when they fail up to the maxRetries limit.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retried")
    public Integer retried;

    public GoogleCloudRunV2Task withRetried(Integer retried) {
        this.retried = retried;
        return this;
    }
    
    /**
     * Output only. Reserved for future use.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("satisfiesPzs")
    public Boolean satisfiesPzs;

    public GoogleCloudRunV2Task withSatisfiesPzs(Boolean satisfiesPzs) {
        this.satisfiesPzs = satisfiesPzs;
        return this;
    }
    
    /**
     * Email address of the IAM service account associated with the Task of a Job. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project's default service account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("serviceAccount")
    public String serviceAccount;

    public GoogleCloudRunV2Task withServiceAccount(String serviceAccount) {
        this.serviceAccount = serviceAccount;
        return this;
    }
    
    /**
     * Output only. Represents time when the task started to run. It is not guaranteed to be set in happens-before order across separate operations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("startTime")
    public String startTime;

    public GoogleCloudRunV2Task withStartTime(String startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeout")
    public String timeout;

    public GoogleCloudRunV2Task withTimeout(String timeout) {
        this.timeout = timeout;
        return this;
    }
    
    /**
     * Output only. Server assigned unique identifier for the Task. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("uid")
    public String uid;

    public GoogleCloudRunV2Task withUid(String uid) {
        this.uid = uid;
        return this;
    }
    
    /**
     * Output only. The last-modified time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public GoogleCloudRunV2Task withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    /**
     * A list of Volumes to make available to containers.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("volumes")
    public GoogleCloudRunV2Volume[] volumes;

    public GoogleCloudRunV2Task withVolumes(GoogleCloudRunV2Volume[] volumes) {
        this.volumes = volumes;
        return this;
    }
    
    /**
     * VPC Access settings. For more information on creating a VPC Connector, visit https://cloud.google.com/vpc/docs/configure-serverless-vpc-access For information on how to configure Cloud Run with an existing VPC Connector, visit https://cloud.google.com/run/docs/configuring/connecting-vpc
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("vpcAccess")
    public GoogleCloudRunV2VpcAccess vpcAccess;

    public GoogleCloudRunV2Task withVpcAccess(GoogleCloudRunV2VpcAccess vpcAccess) {
        this.vpcAccess = vpcAccess;
        return this;
    }
    
    public GoogleCloudRunV2Task(){}
}
