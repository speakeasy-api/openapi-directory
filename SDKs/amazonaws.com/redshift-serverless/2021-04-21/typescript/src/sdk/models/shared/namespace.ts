/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LogExportEnum } from "./logexportenum";
import { NamespaceStatusEnum } from "./namespacestatusenum";
import { Expose, Transform } from "class-transformer";

/**
 * A collection of database objects and users.
 */
export class Namespace extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "adminUsername" })
  adminUsername?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creationDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "dbName" })
  dbName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "defaultIamRoleArn" })
  defaultIamRoleArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "iamRoles" })
  iamRoles?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "kmsKeyId" })
  kmsKeyId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "logExports" })
  logExports?: LogExportEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "namespaceArn" })
  namespaceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "namespaceId" })
  namespaceId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "namespaceName" })
  namespaceName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: NamespaceStatusEnum;
}
