// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CompilationJobStatusEnum string

const (
	CompilationJobStatusEnumInprogress CompilationJobStatusEnum = "INPROGRESS"
	CompilationJobStatusEnumCompleted  CompilationJobStatusEnum = "COMPLETED"
	CompilationJobStatusEnumFailed     CompilationJobStatusEnum = "FAILED"
	CompilationJobStatusEnumStarting   CompilationJobStatusEnum = "STARTING"
	CompilationJobStatusEnumStopping   CompilationJobStatusEnum = "STOPPING"
	CompilationJobStatusEnumStopped    CompilationJobStatusEnum = "STOPPED"
)

func (e CompilationJobStatusEnum) ToPointer() *CompilationJobStatusEnum {
	return &e
}

func (e *CompilationJobStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "INPROGRESS":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "FAILED":
		fallthrough
	case "STARTING":
		fallthrough
	case "STOPPING":
		fallthrough
	case "STOPPED":
		*e = CompilationJobStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CompilationJobStatusEnum: %v", v)
	}
}
