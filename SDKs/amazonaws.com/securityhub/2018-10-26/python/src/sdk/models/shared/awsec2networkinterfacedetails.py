"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import awsec2networkinterfaceattachment as shared_awsec2networkinterfaceattachment
from ..shared import awsec2networkinterfaceipv6addressdetail as shared_awsec2networkinterfaceipv6addressdetail
from ..shared import awsec2networkinterfaceprivateipaddressdetail as shared_awsec2networkinterfaceprivateipaddressdetail
from ..shared import awsec2networkinterfacesecuritygroup as shared_awsec2networkinterfacesecuritygroup
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AwsEc2NetworkInterfaceDetails:
    r"""Details about the network interface"""
    
    attachment: Optional[shared_awsec2networkinterfaceattachment.AwsEc2NetworkInterfaceAttachment] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Attachment'), 'exclude': lambda f: f is None }})  
    ip_v6_addresses: Optional[list[shared_awsec2networkinterfaceipv6addressdetail.AwsEc2NetworkInterfaceIPV6AddressDetail]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('IpV6Addresses'), 'exclude': lambda f: f is None }})  
    network_interface_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NetworkInterfaceId'), 'exclude': lambda f: f is None }})  
    private_ip_addresses: Optional[list[shared_awsec2networkinterfaceprivateipaddressdetail.AwsEc2NetworkInterfacePrivateIPAddressDetail]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PrivateIpAddresses'), 'exclude': lambda f: f is None }})  
    public_dns_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PublicDnsName'), 'exclude': lambda f: f is None }})  
    public_ip: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('PublicIp'), 'exclude': lambda f: f is None }})  
    security_groups: Optional[list[shared_awsec2networkinterfacesecuritygroup.AwsEc2NetworkInterfaceSecurityGroup]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SecurityGroups'), 'exclude': lambda f: f is None }})  
    source_dest_check: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SourceDestCheck'), 'exclude': lambda f: f is None }})  
    