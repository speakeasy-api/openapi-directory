// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DashboardFilterFilterTypeEnum - The specified filter type
type DashboardFilterFilterTypeEnum string

const (
	DashboardFilterFilterTypeEnumFilterTypeUnspecified DashboardFilterFilterTypeEnum = "FILTER_TYPE_UNSPECIFIED"
	DashboardFilterFilterTypeEnumResourceLabel         DashboardFilterFilterTypeEnum = "RESOURCE_LABEL"
	DashboardFilterFilterTypeEnumMetricLabel           DashboardFilterFilterTypeEnum = "METRIC_LABEL"
	DashboardFilterFilterTypeEnumUserMetadataLabel     DashboardFilterFilterTypeEnum = "USER_METADATA_LABEL"
	DashboardFilterFilterTypeEnumSystemMetadataLabel   DashboardFilterFilterTypeEnum = "SYSTEM_METADATA_LABEL"
	DashboardFilterFilterTypeEnumGroup                 DashboardFilterFilterTypeEnum = "GROUP"
)

func (e *DashboardFilterFilterTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FILTER_TYPE_UNSPECIFIED":
		fallthrough
	case "RESOURCE_LABEL":
		fallthrough
	case "METRIC_LABEL":
		fallthrough
	case "USER_METADATA_LABEL":
		fallthrough
	case "SYSTEM_METADATA_LABEL":
		fallthrough
	case "GROUP":
		*e = DashboardFilterFilterTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DashboardFilterFilterTypeEnum: %s", s)
	}
}

// DashboardFilter - A filter to reduce the amount of data charted in relevant widgets.
type DashboardFilter struct {
	// The specified filter type
	FilterType *DashboardFilterFilterTypeEnum `json:"filterType,omitempty"`
	// Required. The key for the label
	LabelKey *string `json:"labelKey,omitempty"`
	// A variable-length string value.
	StringValue *string `json:"stringValue,omitempty"`
	// The placeholder text that can be referenced in a filter string or MQL query. If omitted, the dashboard filter will be applied to all relevant widgets in the dashboard.
	TemplateVariable *string `json:"templateVariable,omitempty"`
}
