/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Dataset - Information about a dataset.
 */
public class Dataset {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("actions")
    public DatasetAction[] actions;
    public Dataset withActions(DatasetAction[] actions) {
        this.actions = actions;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("arn")
    public String arn;
    public Dataset withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("contentDeliveryRules")
    public DatasetContentDeliveryRule[] contentDeliveryRules;
    public Dataset withContentDeliveryRules(DatasetContentDeliveryRule[] contentDeliveryRules) {
        this.contentDeliveryRules = contentDeliveryRules;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("creationTime")
    public OffsetDateTime creationTime;
    public Dataset withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastUpdateTime")
    public OffsetDateTime lastUpdateTime;
    public Dataset withLastUpdateTime(OffsetDateTime lastUpdateTime) {
        this.lastUpdateTime = lastUpdateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lateDataRules")
    public LateDataRule[] lateDataRules;
    public Dataset withLateDataRules(LateDataRule[] lateDataRules) {
        this.lateDataRules = lateDataRules;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Dataset withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retentionPeriod")
    public RetentionPeriod retentionPeriod;
    public Dataset withRetentionPeriod(RetentionPeriod retentionPeriod) {
        this.retentionPeriod = retentionPeriod;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public DatasetStatusEnum status;
    public Dataset withStatus(DatasetStatusEnum status) {
        this.status = status;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("triggers")
    public DatasetTrigger[] triggers;
    public Dataset withTriggers(DatasetTrigger[] triggers) {
        this.triggers = triggers;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("versioningConfiguration")
    public VersioningConfiguration versioningConfiguration;
    public Dataset withVersioningConfiguration(VersioningConfiguration versioningConfiguration) {
        this.versioningConfiguration = versioningConfiguration;
        return this;
    }
    
}
