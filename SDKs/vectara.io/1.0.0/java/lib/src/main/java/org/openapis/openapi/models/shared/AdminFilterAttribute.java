/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AdminFilterAttribute - Defines metadata fields that can be used in predicate queries.
 */
public class AdminFilterAttribute {
    /**
     * An optional description.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public AdminFilterAttribute withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Whether the field is indexed for maximum query speed.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("indexed")
    public Boolean indexed;
    public AdminFilterAttribute withIndexed(Boolean indexed) {
        this.indexed = indexed;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("level")
    public AdminFilterAttributeLevelEnum level;
    public AdminFilterAttribute withLevel(AdminFilterAttributeLevelEnum level) {
        this.level = level;
        return this;
    }
    
    /**
     * Name of the field, as seen in metadata.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public AdminFilterAttribute withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public AdminFilterAttributeTypeEnum type;
    public AdminFilterAttribute withType(AdminFilterAttributeTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
