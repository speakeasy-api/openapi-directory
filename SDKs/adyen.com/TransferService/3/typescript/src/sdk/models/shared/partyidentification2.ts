/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Address2 } from "./address2";
import { Expose, Type } from "class-transformer";

/**
 * The type of entity that owns the bank account.
 *
 * @remarks
 *
 *  Possible values: **individual**, **organization**, or **unknown**.
 */
export enum PartyIdentification2TypeEnum {
  Individual = "individual",
  Organization = "organization",
  Unknown = "unknown",
}

export class PartyIdentification2 extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "address" })
  @Type(() => Address2)
  address?: Address2;

  /**
   * First name of the individual. Required when `type` is **individual**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstName" })
  firstName?: string;

  /**
   * The name of the entity.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "fullName" })
  fullName: string;

  /**
   * Last name of the individual. Required when `type` is **individual**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "lastName" })
  lastName?: string;

  /**
   * The type of entity that owns the bank account.
   *
   * @remarks
   *
   *  Possible values: **individual**, **organization**, or **unknown**.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: PartyIdentification2TypeEnum;
}
