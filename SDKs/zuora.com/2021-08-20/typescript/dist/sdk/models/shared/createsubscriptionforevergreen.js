"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateSubscriptionForEvergreen = exports.CreateSubscriptionForEvergreenTerms = exports.CreateSubscriptionForEvergreenTermsRenewalSettingEnum = exports.CreateSubscriptionForEvergreenTermsInitialTerm = exports.CreateSubscriptionForEvergreenTermsInitialTermTermTypeEnum = exports.CreateSubscriptionForEvergreenTermsInitialTermPeriodTypeEnum = exports.CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount = void 0;
var utils_1 = require("../../../internal/utils");
var billtocontact_1 = require("./billtocontact");
var creditcard_1 = require("./creditcard");
var paymentmethod_1 = require("./paymentmethod");
var rateplanoverrideforevergreen_1 = require("./rateplanoverrideforevergreen");
var renewalterm_1 = require("./renewalterm");
var soldtocontact_1 = require("./soldtocontact");
var taxinfo_1 = require("./taxinfo");
var class_transformer_1 = require("class-transformer");
/**
 * Information about a new account that will own the subscription. Only available if you have enabled the Owner Transfer feature.
 *
 * @remarks
 *
 * **Note:** The Owner Transfer feature is in **Limited Availability**. If you wish to have access to the feature, submit a request at [Zuora Global Support](http://support.zuora.com/).
 *
 * If you do not set this field or the `subscriptionOwnerAccountNumber` field, the account that owns the order will also own the subscription. Zuora will return an error if you set this field and the `subscriptionOwnerAccountNumber` field.
 *
 */
var CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount = /** @class */ (function (_super) {
    __extends(CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount, _super);
    function CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "accountNumber" }),
        __metadata("design:type", String)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "accountNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "autoPay" }),
        __metadata("design:type", Boolean)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "autoPay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "batch" }),
        __metadata("design:type", String)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "batch", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "billCycleDay" }),
        __metadata("design:type", Number)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "billCycleDay", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "billToContact" }),
        (0, class_transformer_1.Type)(function () { return billtocontact_1.BillToContact; }),
        __metadata("design:type", billtocontact_1.BillToContact)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "billToContact", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "communicationProfileId" }),
        __metadata("design:type", String)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "communicationProfileId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "creditCard" }),
        (0, class_transformer_1.Type)(function () { return creditcard_1.CreditCard; }),
        __metadata("design:type", creditcard_1.CreditCard)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "creditCard", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "crmId" }),
        __metadata("design:type", String)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "crmId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "currency" }),
        __metadata("design:type", String)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "currency", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "customFields" }),
        __metadata("design:type", Object)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "customFields", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "hpmCreditCardPaymentMethodId" }),
        __metadata("design:type", String)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "hpmCreditCardPaymentMethodId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "invoiceDeliveryPrefsEmail" }),
        __metadata("design:type", Boolean)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "invoiceDeliveryPrefsEmail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "invoiceDeliveryPrefsPrint" }),
        __metadata("design:type", Boolean)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "invoiceDeliveryPrefsPrint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "invoiceTemplateId" }),
        __metadata("design:type", String)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "invoiceTemplateId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notes" }),
        __metadata("design:type", String)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "notes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "parentId" }),
        __metadata("design:type", String)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "parentId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paymentGateway" }),
        __metadata("design:type", String)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "paymentGateway", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paymentMethod" }),
        (0, class_transformer_1.Type)(function () { return paymentmethod_1.PaymentMethod; }),
        __metadata("design:type", paymentmethod_1.PaymentMethod)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "paymentMethod", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "paymentTerm" }),
        __metadata("design:type", String)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "paymentTerm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "soldToContact" }),
        (0, class_transformer_1.Type)(function () { return soldtocontact_1.SoldToContact; }),
        __metadata("design:type", soldtocontact_1.SoldToContact)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "soldToContact", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "taxInfo" }),
        (0, class_transformer_1.Type)(function () { return taxinfo_1.TaxInfo; }),
        __metadata("design:type", taxinfo_1.TaxInfo)
    ], CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount.prototype, "taxInfo", void 0);
    return CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount;
}(utils_1.SpeakeasyBase));
exports.CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount = CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount;
/**
 * Unit of time that the first term is measured in. Only applicable if the value of the `termType` field is `TERMED`.
 *
 * @remarks
 *
 */
var CreateSubscriptionForEvergreenTermsInitialTermPeriodTypeEnum;
(function (CreateSubscriptionForEvergreenTermsInitialTermPeriodTypeEnum) {
    CreateSubscriptionForEvergreenTermsInitialTermPeriodTypeEnum["Month"] = "Month";
    CreateSubscriptionForEvergreenTermsInitialTermPeriodTypeEnum["Year"] = "Year";
    CreateSubscriptionForEvergreenTermsInitialTermPeriodTypeEnum["Day"] = "Day";
    CreateSubscriptionForEvergreenTermsInitialTermPeriodTypeEnum["Week"] = "Week";
})(CreateSubscriptionForEvergreenTermsInitialTermPeriodTypeEnum = exports.CreateSubscriptionForEvergreenTermsInitialTermPeriodTypeEnum || (exports.CreateSubscriptionForEvergreenTermsInitialTermPeriodTypeEnum = {}));
/**
 * Type of the first term. If the value of this field is `TERMED`, the first term has a predefined duration based on the value of the `period` field. If the value of this field is `EVERGREEN`, the first term does not have a predefined duration.
 *
 * @remarks
 *
 */
var CreateSubscriptionForEvergreenTermsInitialTermTermTypeEnum;
(function (CreateSubscriptionForEvergreenTermsInitialTermTermTypeEnum) {
    CreateSubscriptionForEvergreenTermsInitialTermTermTypeEnum["Termed"] = "TERMED";
    CreateSubscriptionForEvergreenTermsInitialTermTermTypeEnum["Evergreen"] = "EVERGREEN";
})(CreateSubscriptionForEvergreenTermsInitialTermTermTypeEnum = exports.CreateSubscriptionForEvergreenTermsInitialTermTermTypeEnum || (exports.CreateSubscriptionForEvergreenTermsInitialTermTermTypeEnum = {}));
/**
 * Information about the first term of the subscription.
 *
 * @remarks
 *
 */
var CreateSubscriptionForEvergreenTermsInitialTerm = /** @class */ (function (_super) {
    __extends(CreateSubscriptionForEvergreenTermsInitialTerm, _super);
    function CreateSubscriptionForEvergreenTermsInitialTerm() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "period" }),
        __metadata("design:type", Number)
    ], CreateSubscriptionForEvergreenTermsInitialTerm.prototype, "period", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "periodType" }),
        __metadata("design:type", String)
    ], CreateSubscriptionForEvergreenTermsInitialTerm.prototype, "periodType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "startDate" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], CreateSubscriptionForEvergreenTermsInitialTerm.prototype, "startDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "termType" }),
        __metadata("design:type", String)
    ], CreateSubscriptionForEvergreenTermsInitialTerm.prototype, "termType", void 0);
    return CreateSubscriptionForEvergreenTermsInitialTerm;
}(utils_1.SpeakeasyBase));
exports.CreateSubscriptionForEvergreenTermsInitialTerm = CreateSubscriptionForEvergreenTermsInitialTerm;
/**
 * Specifies the type of the terms that follow the first term if the subscription is renewed. Only applicable if the type of the first term is `TERMED`.
 *
 * @remarks
 *
 * * `RENEW_WITH_SPECIFIC_TERM` - Each renewal term has a predefined duration. The first entry in `renewalTerms` specifies the duration of the second term of the subscription, the second entry in `renewalTerms` specifies the duration of the third term of the subscription, and so on. The last entry in `renewalTerms` specifies the ultimate duration of each renewal term.
 * * `RENEW_TO_EVERGREEN` - The second term of the subscription does not have a predefined duration.
 *
 */
var CreateSubscriptionForEvergreenTermsRenewalSettingEnum;
(function (CreateSubscriptionForEvergreenTermsRenewalSettingEnum) {
    CreateSubscriptionForEvergreenTermsRenewalSettingEnum["RenewWithSpecificTerm"] = "RENEW_WITH_SPECIFIC_TERM";
    CreateSubscriptionForEvergreenTermsRenewalSettingEnum["RenewToEvergreen"] = "RENEW_TO_EVERGREEN";
})(CreateSubscriptionForEvergreenTermsRenewalSettingEnum = exports.CreateSubscriptionForEvergreenTermsRenewalSettingEnum || (exports.CreateSubscriptionForEvergreenTermsRenewalSettingEnum = {}));
/**
 * Container for the terms and renewal settings of the subscription.
 *
 * @remarks
 *
 */
var CreateSubscriptionForEvergreenTerms = /** @class */ (function (_super) {
    __extends(CreateSubscriptionForEvergreenTerms, _super);
    function CreateSubscriptionForEvergreenTerms() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "autoRenew" }),
        __metadata("design:type", Boolean)
    ], CreateSubscriptionForEvergreenTerms.prototype, "autoRenew", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "initialTerm" }),
        (0, class_transformer_1.Type)(function () { return CreateSubscriptionForEvergreenTermsInitialTerm; }),
        __metadata("design:type", CreateSubscriptionForEvergreenTermsInitialTerm)
    ], CreateSubscriptionForEvergreenTerms.prototype, "initialTerm", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "renewalSetting" }),
        __metadata("design:type", String)
    ], CreateSubscriptionForEvergreenTerms.prototype, "renewalSetting", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: renewalterm_1.RenewalTerm }),
        (0, class_transformer_1.Expose)({ name: "renewalTerms" }),
        (0, class_transformer_1.Type)(function () { return renewalterm_1.RenewalTerm; }),
        __metadata("design:type", Array)
    ], CreateSubscriptionForEvergreenTerms.prototype, "renewalTerms", void 0);
    return CreateSubscriptionForEvergreenTerms;
}(utils_1.SpeakeasyBase));
exports.CreateSubscriptionForEvergreenTerms = CreateSubscriptionForEvergreenTerms;
/**
 * Information about an order action of type `CreateSubscription`.
 *
 * @remarks
 *
 */
var CreateSubscriptionForEvergreen = /** @class */ (function (_super) {
    __extends(CreateSubscriptionForEvergreen, _super);
    function CreateSubscriptionForEvergreen() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "invoiceSeparately" }),
        __metadata("design:type", Boolean)
    ], CreateSubscriptionForEvergreen.prototype, "invoiceSeparately", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "newSubscriptionOwnerAccount" }),
        (0, class_transformer_1.Type)(function () { return CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount; }),
        __metadata("design:type", CreateSubscriptionForEvergreenNewSubscriptionOwnerAccount)
    ], CreateSubscriptionForEvergreen.prototype, "newSubscriptionOwnerAccount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "notes" }),
        __metadata("design:type", String)
    ], CreateSubscriptionForEvergreen.prototype, "notes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: rateplanoverrideforevergreen_1.RatePlanOverrideForEvergreen }),
        (0, class_transformer_1.Expose)({ name: "subscribeToRatePlans" }),
        (0, class_transformer_1.Type)(function () { return rateplanoverrideforevergreen_1.RatePlanOverrideForEvergreen; }),
        __metadata("design:type", Array)
    ], CreateSubscriptionForEvergreen.prototype, "subscribeToRatePlans", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subscriptionNumber" }),
        __metadata("design:type", String)
    ], CreateSubscriptionForEvergreen.prototype, "subscriptionNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "subscriptionOwnerAccountNumber" }),
        __metadata("design:type", String)
    ], CreateSubscriptionForEvergreen.prototype, "subscriptionOwnerAccountNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "terms" }),
        (0, class_transformer_1.Type)(function () { return CreateSubscriptionForEvergreenTerms; }),
        __metadata("design:type", CreateSubscriptionForEvergreenTerms)
    ], CreateSubscriptionForEvergreen.prototype, "terms", void 0);
    return CreateSubscriptionForEvergreen;
}(utils_1.SpeakeasyBase));
exports.CreateSubscriptionForEvergreen = CreateSubscriptionForEvergreen;
