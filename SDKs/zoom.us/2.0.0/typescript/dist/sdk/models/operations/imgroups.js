"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ImGroupsResponse = exports.IMGroupsIMGroupList = exports.IMGroupsIMGroupListGroups = exports.IMGroupsIMGroupListGroupsTypeEnum = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
/**
 * IM Group types:<br>`normal` - Only members can see the other members in the group. Other people can search for members in the group.<br>`shared` - Everyone in the account can see the group and members. <br>`restricted` - No one except group members can see the group or search for other group members.
 */
var IMGroupsIMGroupListGroupsTypeEnum;
(function (IMGroupsIMGroupListGroupsTypeEnum) {
    IMGroupsIMGroupListGroupsTypeEnum["Normal"] = "normal";
    IMGroupsIMGroupListGroupsTypeEnum["Shared"] = "shared";
    IMGroupsIMGroupListGroupsTypeEnum["Restricted"] = "restricted";
})(IMGroupsIMGroupListGroupsTypeEnum = exports.IMGroupsIMGroupListGroupsTypeEnum || (exports.IMGroupsIMGroupListGroupsTypeEnum = {}));
/**
 * Group object.
 */
var IMGroupsIMGroupListGroups = /** @class */ (function (_super) {
    __extends(IMGroupsIMGroupListGroups, _super);
    function IMGroupsIMGroupListGroups() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], IMGroupsIMGroupListGroups.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], IMGroupsIMGroupListGroups.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "search_by_account" }),
        __metadata("design:type", Boolean)
    ], IMGroupsIMGroupListGroups.prototype, "searchByAccount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "search_by_domain" }),
        __metadata("design:type", Boolean)
    ], IMGroupsIMGroupListGroups.prototype, "searchByDomain", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "search_by_ma_account" }),
        __metadata("design:type", Boolean)
    ], IMGroupsIMGroupListGroups.prototype, "searchByMaAccount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "total_members" }),
        __metadata("design:type", Number)
    ], IMGroupsIMGroupListGroups.prototype, "totalMembers", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "type" }),
        __metadata("design:type", String)
    ], IMGroupsIMGroupListGroups.prototype, "type", void 0);
    return IMGroupsIMGroupListGroups;
}(utils_1.SpeakeasyBase));
exports.IMGroupsIMGroupListGroups = IMGroupsIMGroupListGroups;
/**
 * List of IM Groups.
 */
var IMGroupsIMGroupList = /** @class */ (function (_super) {
    __extends(IMGroupsIMGroupList, _super);
    function IMGroupsIMGroupList() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: IMGroupsIMGroupListGroups }),
        (0, class_transformer_1.Expose)({ name: "groups" }),
        (0, class_transformer_1.Type)(function () { return IMGroupsIMGroupListGroups; }),
        __metadata("design:type", Array)
    ], IMGroupsIMGroupList.prototype, "groups", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "total_records" }),
        __metadata("design:type", Number)
    ], IMGroupsIMGroupList.prototype, "totalRecords", void 0);
    return IMGroupsIMGroupList;
}(utils_1.SpeakeasyBase));
exports.IMGroupsIMGroupList = IMGroupsIMGroupList;
var ImGroupsResponse = /** @class */ (function (_super) {
    __extends(ImGroupsResponse, _super);
    function ImGroupsResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], ImGroupsResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], ImGroupsResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", IMGroupsIMGroupList)
    ], ImGroupsResponse.prototype, "imGroupList", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], ImGroupsResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], ImGroupsResponse.prototype, "rawResponse", void 0);
    return ImGroupsResponse;
}(utils_1.SpeakeasyBase));
exports.ImGroupsResponse = ImGroupsResponse;
