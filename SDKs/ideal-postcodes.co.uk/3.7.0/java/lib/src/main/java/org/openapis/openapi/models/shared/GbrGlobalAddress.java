/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * GbrGlobalAddress - Global (non-UK) address in the UK address format
 */
public class GbrGlobalAddress {
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("administrative_county")
    public GbrGlobalAddressAdministrativeCountyEnum administrativeCounty;
    public GbrGlobalAddress withAdministrativeCounty(GbrGlobalAddressAdministrativeCountyEnum administrativeCounty) {
        this.administrativeCounty = administrativeCounty;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("building_name")
    public GbrGlobalAddressBuildingNameEnum buildingName;
    public GbrGlobalAddress withBuildingName(GbrGlobalAddressBuildingNameEnum buildingName) {
        this.buildingName = buildingName;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("building_number")
    public GbrGlobalAddressBuildingNumberEnum buildingNumber;
    public GbrGlobalAddress withBuildingNumber(GbrGlobalAddressBuildingNumberEnum buildingNumber) {
        this.buildingNumber = buildingNumber;
        return this;
    }
    
    /**
     *   Full country names (ISO 3166)
     * 
     */
    @JsonProperty("country")
    public CountryEnum country;
    public GbrGlobalAddress withCountry(CountryEnum country) {
        this.country = country;
        return this;
    }
    
    /**
     *   3 letter country code (ISO 3166-1)
     * 
     */
    @JsonProperty("country_iso")
    public CountryISOEnum countryIso;
    public GbrGlobalAddress withCountryIso(CountryISOEnum countryIso) {
        this.countryIso = countryIso;
        return this;
    }
    
    /**
     *  2 letter country code (ISO 3166-1)
     * 
     */
    @JsonProperty("country_iso_2")
    public CountryIso2Enum countryIso2;
    public GbrGlobalAddress withCountryIso2(CountryIso2Enum countryIso2) {
        this.countryIso2 = countryIso2;
        return this;
    }
    
    /**
     * State or county name
     */
    @JsonProperty("county")
    public String county;
    public GbrGlobalAddress withCounty(String county) {
        this.county = county;
        return this;
    }
    
    /**
     * Code abbreviation for state or county used in some countries.
     */
    @JsonProperty("county_code")
    public String countyCode;
    public GbrGlobalAddress withCountyCode(String countyCode) {
        this.countyCode = countyCode;
        return this;
    }
    
    /**
     * Indicates the provenance of an address.
     * 
     *   - `paf` (GBR) Postcode Address File
     *   - `mr` (GBR) Multiple Residence File
     *   - `nyb` (GBR) Not Yet Built File
     *   - `pafa` (GBR) Alias File
     *   - `pafw` (GBR) Welsh File
     *   - `ecaf` (IRL) Eircode ECAF
     *   - `ecad` (IRL) Eircode ECAD
     *   - `usps` (USA) USPS Zip+4
     */
    @JsonProperty("dataset")
    public DatasetEnum dataset;
    public GbrGlobalAddress withDataset(DatasetEnum dataset) {
        this.dataset = dataset;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("delivery_point_suffix")
    public GbrGlobalAddressDeliveryPointSuffixEnum deliveryPointSuffix;
    public GbrGlobalAddress withDeliveryPointSuffix(GbrGlobalAddressDeliveryPointSuffixEnum deliveryPointSuffix) {
        this.deliveryPointSuffix = deliveryPointSuffix;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("department_name")
    public GbrGlobalAddressDepartmentNameEnum departmentName;
    public GbrGlobalAddress withDepartmentName(GbrGlobalAddressDepartmentNameEnum departmentName) {
        this.departmentName = departmentName;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("dependant_locality")
    public GbrGlobalAddressDependantLocalityEnum dependantLocality;
    public GbrGlobalAddress withDependantLocality(GbrGlobalAddressDependantLocalityEnum dependantLocality) {
        this.dependantLocality = dependantLocality;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("dependant_thoroughfare")
    public GbrGlobalAddressDependantThoroughfareEnum dependantThoroughfare;
    public GbrGlobalAddress withDependantThoroughfare(GbrGlobalAddressDependantThoroughfareEnum dependantThoroughfare) {
        this.dependantThoroughfare = dependantThoroughfare;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("district")
    public GbrGlobalAddressDistrictEnum district;
    public GbrGlobalAddress withDistrict(GbrGlobalAddressDistrictEnum district) {
        this.district = district;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("double_dependant_locality")
    public GbrGlobalAddressDoubleDependantLocalityEnum doubleDependantLocality;
    public GbrGlobalAddress withDoubleDependantLocality(GbrGlobalAddressDoubleDependantLocalityEnum doubleDependantLocality) {
        this.doubleDependantLocality = doubleDependantLocality;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("eastings")
    public GbrGlobalAddressEastingsEnum eastings;
    public GbrGlobalAddress withEastings(GbrGlobalAddressEastingsEnum eastings) {
        this.eastings = eastings;
        return this;
    }
    
    /**
     * Global unique internally generated identifier for an address
     */
    @JsonProperty("id")
    public String id;
    public GbrGlobalAddress withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Language represented by 2 letter ISO Code (639-1)
     * 
     */
    @JsonProperty("language")
    public LanguageEnum language;
    public GbrGlobalAddress withLanguage(LanguageEnum language) {
        this.language = language;
        return this;
    }
    
    /**
     * The latitude of the postcode (WGS84/ETRS89).
     * 
     * Can be a positive or negative decimal. E.g. `51.5083983`.
     * 
     * Returns an empty string if no location data is available. 
     */
    @JsonProperty("latitude")
    public Object latitude;
    public GbrGlobalAddress withLatitude(Object latitude) {
        this.latitude = latitude;
        return this;
    }
    
    /**
     * First line of the address. Typically the building number and street name
     */
    @JsonProperty("line_1")
    public String line1;
    public GbrGlobalAddress withLine1(String line1) {
        this.line1 = line1;
        return this;
    }
    
    /**
     * Second line of the address. Can be blank
     */
    @JsonProperty("line_2")
    public String line2;
    public GbrGlobalAddress withLine2(String line2) {
        this.line2 = line2;
        return this;
    }
    
    /**
     * Third line of the address. Can also be blank
     */
    @JsonProperty("line_3")
    public String line3;
    public GbrGlobalAddress withLine3(String line3) {
        this.line3 = line3;
        return this;
    }
    
    /**
     * The longitude of the postcode (WGS84/ETRS89).
     * 
     * Can be a positive or negative decimal. E.g. -0.1283983
     * 
     * Returns an empty string if no location data is available. 
     */
    @JsonProperty("longitude")
    public Object longitude;
    public GbrGlobalAddress withLongitude(Object longitude) {
        this.longitude = longitude;
        return this;
    }
    
    /**
     * The native representation of a non-UK address
     */
    @JsonProperty("native")
    public Object native_;
    public GbrGlobalAddress withNative(Object native_) {
        this.native_ = native_;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("northings")
    public GbrGlobalAddressNorthingsEnum northings;
    public GbrGlobalAddress withNorthings(GbrGlobalAddressNorthingsEnum northings) {
        this.northings = northings;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("organisation_name")
    public GbrGlobalAddressOrganisationNameEnum organisationName;
    public GbrGlobalAddress withOrganisationName(GbrGlobalAddressOrganisationNameEnum organisationName) {
        this.organisationName = organisationName;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("po_box")
    public GbrGlobalAddressPoBoxEnum poBox;
    public GbrGlobalAddress withPoBox(GbrGlobalAddressPoBoxEnum poBox) {
        this.poBox = poBox;
        return this;
    }
    
    /**
     * The city, town or other primary locality
     * 
     */
    @JsonProperty("post_town")
    public String postTown;
    public GbrGlobalAddress withPostTown(String postTown) {
        this.postTown = postTown;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("postal_county")
    public GbrGlobalAddressPostalCountyEnum postalCounty;
    public GbrGlobalAddress withPostalCounty(GbrGlobalAddressPostalCountyEnum postalCounty) {
        this.postalCounty = postalCounty;
        return this;
    }
    
    /**
     * Represents the postal or zip code
     */
    @JsonProperty("postcode")
    public String postcode;
    public GbrGlobalAddress withPostcode(String postcode) {
        this.postcode = postcode;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("postcode_inward")
    public GbrGlobalAddressPostcodeInwardEnum postcodeInward;
    public GbrGlobalAddress withPostcodeInward(GbrGlobalAddressPostcodeInwardEnum postcodeInward) {
        this.postcodeInward = postcodeInward;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("postcode_outward")
    public GbrGlobalAddressPostcodeOutwardEnum postcodeOutward;
    public GbrGlobalAddress withPostcodeOutward(GbrGlobalAddressPostcodeOutwardEnum postcodeOutward) {
        this.postcodeOutward = postcodeOutward;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("postcode_type")
    public GbrGlobalAddressPostcodeTypeEnum postcodeType;
    public GbrGlobalAddress withPostcodeType(GbrGlobalAddressPostcodeTypeEnum postcodeType) {
        this.postcodeType = postcodeType;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("premise")
    public GbrGlobalAddressPremiseEnum premise;
    public GbrGlobalAddress withPremise(GbrGlobalAddressPremiseEnum premise) {
        this.premise = premise;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("su_organisation_indicator")
    public GbrGlobalAddressSuOrganisationIndicatorEnum suOrganisationIndicator;
    public GbrGlobalAddress withSuOrganisationIndicator(GbrGlobalAddressSuOrganisationIndicatorEnum suOrganisationIndicator) {
        this.suOrganisationIndicator = suOrganisationIndicator;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("sub_building_name")
    public GbrGlobalAddressSubBuildingNameEnum subBuildingName;
    public GbrGlobalAddress withSubBuildingName(GbrGlobalAddressSubBuildingNameEnum subBuildingName) {
        this.subBuildingName = subBuildingName;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("thoroughfare")
    public GbrGlobalAddressThoroughfareEnum thoroughfare;
    public GbrGlobalAddress withThoroughfare(GbrGlobalAddressThoroughfareEnum thoroughfare) {
        this.thoroughfare = thoroughfare;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("traditional_county")
    public GbrGlobalAddressTraditionalCountyEnum traditionalCounty;
    public GbrGlobalAddress withTraditionalCounty(GbrGlobalAddressTraditionalCountyEnum traditionalCounty) {
        this.traditionalCounty = traditionalCounty;
        return this;
    }
    
    /**
     * Not available for non-UK addresses. See `id` for address identifier
     */
    @JsonProperty("udprn")
    public String udprn;
    public GbrGlobalAddress withUdprn(String udprn) {
        this.udprn = udprn;
        return this;
    }
    
    /**
     * Not available for non-UK addresses. See `id` for address identifier
     */
    @JsonProperty("umprn")
    public GbrGlobalAddressUmprnEnum umprn;
    public GbrGlobalAddress withUmprn(GbrGlobalAddressUmprnEnum umprn) {
        this.umprn = umprn;
        return this;
    }
    
    /**
     * Not available for non-UK addresses. See `id` for address identifier
     */
    @JsonProperty("uprn")
    public GbrGlobalAddressUprnEnum uprn;
    public GbrGlobalAddress withUprn(GbrGlobalAddressUprnEnum uprn) {
        this.uprn = uprn;
        return this;
    }
    
    /**
     * Not available for non-UK addresses
     */
    @JsonProperty("ward")
    public GbrGlobalAddressWardEnum ward;
    public GbrGlobalAddress withWard(GbrGlobalAddressWardEnum ward) {
        this.ward = ward;
        return this;
    }
    
}
