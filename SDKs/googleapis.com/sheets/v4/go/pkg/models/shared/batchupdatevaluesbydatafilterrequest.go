// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// BatchUpdateValuesByDataFilterRequestResponseDateTimeRenderOptionEnum - Determines how dates, times, and durations in the response should be rendered. This is ignored if response_value_render_option is FORMATTED_VALUE. The default dateTime render option is SERIAL_NUMBER.
type BatchUpdateValuesByDataFilterRequestResponseDateTimeRenderOptionEnum string

const (
	BatchUpdateValuesByDataFilterRequestResponseDateTimeRenderOptionEnumSerialNumber    BatchUpdateValuesByDataFilterRequestResponseDateTimeRenderOptionEnum = "SERIAL_NUMBER"
	BatchUpdateValuesByDataFilterRequestResponseDateTimeRenderOptionEnumFormattedString BatchUpdateValuesByDataFilterRequestResponseDateTimeRenderOptionEnum = "FORMATTED_STRING"
)

func (e *BatchUpdateValuesByDataFilterRequestResponseDateTimeRenderOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SERIAL_NUMBER":
		fallthrough
	case "FORMATTED_STRING":
		*e = BatchUpdateValuesByDataFilterRequestResponseDateTimeRenderOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchUpdateValuesByDataFilterRequestResponseDateTimeRenderOptionEnum: %s", s)
	}
}

// BatchUpdateValuesByDataFilterRequestResponseValueRenderOptionEnum - Determines how values in the response should be rendered. The default render option is FORMATTED_VALUE.
type BatchUpdateValuesByDataFilterRequestResponseValueRenderOptionEnum string

const (
	BatchUpdateValuesByDataFilterRequestResponseValueRenderOptionEnumFormattedValue   BatchUpdateValuesByDataFilterRequestResponseValueRenderOptionEnum = "FORMATTED_VALUE"
	BatchUpdateValuesByDataFilterRequestResponseValueRenderOptionEnumUnformattedValue BatchUpdateValuesByDataFilterRequestResponseValueRenderOptionEnum = "UNFORMATTED_VALUE"
	BatchUpdateValuesByDataFilterRequestResponseValueRenderOptionEnumFormula          BatchUpdateValuesByDataFilterRequestResponseValueRenderOptionEnum = "FORMULA"
)

func (e *BatchUpdateValuesByDataFilterRequestResponseValueRenderOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "FORMATTED_VALUE":
		fallthrough
	case "UNFORMATTED_VALUE":
		fallthrough
	case "FORMULA":
		*e = BatchUpdateValuesByDataFilterRequestResponseValueRenderOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchUpdateValuesByDataFilterRequestResponseValueRenderOptionEnum: %s", s)
	}
}

// BatchUpdateValuesByDataFilterRequestValueInputOptionEnum - How the input data should be interpreted.
type BatchUpdateValuesByDataFilterRequestValueInputOptionEnum string

const (
	BatchUpdateValuesByDataFilterRequestValueInputOptionEnumInputValueOptionUnspecified BatchUpdateValuesByDataFilterRequestValueInputOptionEnum = "INPUT_VALUE_OPTION_UNSPECIFIED"
	BatchUpdateValuesByDataFilterRequestValueInputOptionEnumRaw                         BatchUpdateValuesByDataFilterRequestValueInputOptionEnum = "RAW"
	BatchUpdateValuesByDataFilterRequestValueInputOptionEnumUserEntered                 BatchUpdateValuesByDataFilterRequestValueInputOptionEnum = "USER_ENTERED"
)

func (e *BatchUpdateValuesByDataFilterRequestValueInputOptionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "INPUT_VALUE_OPTION_UNSPECIFIED":
		fallthrough
	case "RAW":
		fallthrough
	case "USER_ENTERED":
		*e = BatchUpdateValuesByDataFilterRequestValueInputOptionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchUpdateValuesByDataFilterRequestValueInputOptionEnum: %s", s)
	}
}

// BatchUpdateValuesByDataFilterRequest - The request for updating more than one range of values in a spreadsheet.
type BatchUpdateValuesByDataFilterRequest struct {
	// The new values to apply to the spreadsheet. If more than one range is matched by the specified DataFilter the specified values are applied to all of those ranges.
	Data []DataFilterValueRange `json:"data,omitempty"`
	// Determines if the update response should include the values of the cells that were updated. By default, responses do not include the updated values. The `updatedData` field within each of the BatchUpdateValuesResponse.responses contains the updated values. If the range to write was larger than the range actually written, the response includes all values in the requested range (excluding trailing empty rows and columns).
	IncludeValuesInResponse *bool `json:"includeValuesInResponse,omitempty"`
	// Determines how dates, times, and durations in the response should be rendered. This is ignored if response_value_render_option is FORMATTED_VALUE. The default dateTime render option is SERIAL_NUMBER.
	ResponseDateTimeRenderOption *BatchUpdateValuesByDataFilterRequestResponseDateTimeRenderOptionEnum `json:"responseDateTimeRenderOption,omitempty"`
	// Determines how values in the response should be rendered. The default render option is FORMATTED_VALUE.
	ResponseValueRenderOption *BatchUpdateValuesByDataFilterRequestResponseValueRenderOptionEnum `json:"responseValueRenderOption,omitempty"`
	// How the input data should be interpreted.
	ValueInputOption *BatchUpdateValuesByDataFilterRequestValueInputOptionEnum `json:"valueInputOption,omitempty"`
}
