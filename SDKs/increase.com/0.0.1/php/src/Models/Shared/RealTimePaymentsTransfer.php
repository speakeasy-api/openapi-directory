<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * RealTimePaymentsTransfer - Real Time Payments transfers move funds, within seconds, between your Increase account and any other account on the Real Time Payments network.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class RealTimePaymentsTransfer
{
    /**
     * The Account from which the transfer was sent.
     * 
     * @var string $accountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $accountId;
    
    /**
     * The transfer amount in USD cents.
     * 
     * @var int $amount
     */
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('int')]
    public int $amount;
    
    /**
     * If your account requires approvals for transfers and the transfer was approved, this will contain details of the approval.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferTransferApproval $approval
     */
	#[\JMS\Serializer\Annotation\SerializedName('approval')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferTransferApproval')]
    public RealTimePaymentsTransferTransferApproval $approval;
    
    /**
     * If your account requires approvals for transfers and the transfer was not approved, this will contain details of the cancellation.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferTransferCancellation $cancellation
     */
	#[\JMS\Serializer\Annotation\SerializedName('cancellation')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferTransferCancellation')]
    public RealTimePaymentsTransferTransferCancellation $cancellation;
    
    /**
     * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time at which the transfer was created.
     * 
     * @var \DateTime $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    public \DateTime $createdAt;
    
    /**
     * The name of the transfer's recipient as provided by the sender.
     * 
     * @var string $creditorName
     */
	#[\JMS\Serializer\Annotation\SerializedName('creditor_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $creditorName;
    
    /**
     * The [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) code for the transfer's currency. For real time payments transfers this is always equal to `USD`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferCurrencyEnum $currency
     */
	#[\JMS\Serializer\Annotation\SerializedName('currency')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferCurrencyEnum>')]
    public RealTimePaymentsTransferCurrencyEnum $currency;
    
    /**
     * The destination account number.
     * 
     * @var string $destinationAccountNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('destination_account_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $destinationAccountNumber;
    
    /**
     * The destination American Bankers' Association (ABA) Routing Transit Number (RTN).
     * 
     * @var string $destinationRoutingNumber
     */
	#[\JMS\Serializer\Annotation\SerializedName('destination_routing_number')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $destinationRoutingNumber;
    
    /**
     * The identifier of the External Account the transfer was made to, if any.
     * 
     * @var string $externalAccountId
     */
	#[\JMS\Serializer\Annotation\SerializedName('external_account_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $externalAccountId;
    
    /**
     * The Real Time Payments Transfer's identifier.
     * 
     * @var string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $id;
    
    /**
     * If the transfer is rejected by Real Time Payments or the destination financial institution, this will contain supplemental details.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferRealTimePaymentsTransferRejection $rejection
     */
	#[\JMS\Serializer\Annotation\SerializedName('rejection')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferRealTimePaymentsTransferRejection')]
    public RealTimePaymentsTransferRealTimePaymentsTransferRejection $rejection;
    
    /**
     * Unstructured information that will show on the recipient's bank statement.
     * 
     * @var string $remittanceInformation
     */
	#[\JMS\Serializer\Annotation\SerializedName('remittance_information')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $remittanceInformation;
    
    /**
     * The Account Number the recipient will see as having sent the transfer.
     * 
     * @var string $sourceAccountNumberId
     */
	#[\JMS\Serializer\Annotation\SerializedName('source_account_number_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $sourceAccountNumberId;
    
    /**
     * The lifecycle status of the transfer.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferStatusEnum>')]
    public RealTimePaymentsTransferStatusEnum $status;
    
    /**
     * After the transfer is submitted to Real Time Payments, this will contain supplemental details.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferRealTimePaymentsTransferSubmission $submission
     */
	#[\JMS\Serializer\Annotation\SerializedName('submission')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferRealTimePaymentsTransferSubmission')]
    public RealTimePaymentsTransferRealTimePaymentsTransferSubmission $submission;
    
    /**
     * The Transaction funding the transfer once it is complete.
     * 
     * @var string $transactionId
     */
	#[\JMS\Serializer\Annotation\SerializedName('transaction_id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $transactionId;
    
    /**
     * A constant representing the object's type. For this resource it will always be `real_time_payments_transfer`.
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferTypeEnum>')]
    public RealTimePaymentsTransferTypeEnum $type;
    
	public function __construct()
	{
		$this->accountId = "";
		$this->amount = 0;
		$this->approval = new \OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferTransferApproval();
		$this->cancellation = new \OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferTransferCancellation();
		$this->createdAt = new \DateTime();
		$this->creditorName = "";
		$this->currency = \OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferCurrencyEnum::CAD;
		$this->destinationAccountNumber = "";
		$this->destinationRoutingNumber = "";
		$this->externalAccountId = "";
		$this->id = "";
		$this->rejection = new \OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferRealTimePaymentsTransferRejection();
		$this->remittanceInformation = "";
		$this->sourceAccountNumberId = "";
		$this->status = \OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferStatusEnum::PENDING_APPROVAL;
		$this->submission = new \OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferRealTimePaymentsTransferSubmission();
		$this->transactionId = "";
		$this->type = \OpenAPI\OpenAPI\Models\Shared\RealTimePaymentsTransferTypeEnum::REAL_TIME_PAYMENTS_TRANSFER;
	}
}
