// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDisassociateNatGatewayAddressActionEnum
type GETDisassociateNatGatewayAddressActionEnum string

const (
	GETDisassociateNatGatewayAddressActionEnumDisassociateNatGatewayAddress GETDisassociateNatGatewayAddressActionEnum = "DisassociateNatGatewayAddress"
)

func (e *GETDisassociateNatGatewayAddressActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DisassociateNatGatewayAddress":
		*e = GETDisassociateNatGatewayAddressActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDisassociateNatGatewayAddressActionEnum: %s", s)
	}
}

// GETDisassociateNatGatewayAddressVersionEnum
type GETDisassociateNatGatewayAddressVersionEnum string

const (
	GETDisassociateNatGatewayAddressVersionEnumTwoThousandAndSixteen1115 GETDisassociateNatGatewayAddressVersionEnum = "2016-11-15"
)

func (e *GETDisassociateNatGatewayAddressVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2016-11-15":
		*e = GETDisassociateNatGatewayAddressVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDisassociateNatGatewayAddressVersionEnum: %s", s)
	}
}

type GETDisassociateNatGatewayAddressRequest struct {
	Action GETDisassociateNatGatewayAddressActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// The association IDs of EIPs that have been associated with the NAT gateway.
	AssociationID []string `queryParam:"style=form,explode=true,name=AssociationId"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The maximum amount of time to wait (in seconds) before forcibly releasing the IP addresses if connections are still in progress. Default value is 350 seconds.
	MaxDrainDurationSeconds *int64 `queryParam:"style=form,explode=true,name=MaxDrainDurationSeconds"`
	// The NAT gateway ID.
	NatGatewayID      string                                      `queryParam:"style=form,explode=true,name=NatGatewayId"`
	Version           GETDisassociateNatGatewayAddressVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDisassociateNatGatewayAddressResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
