"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import range as shared_range
from ..shared import sectionstyle as shared_sectionstyle
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class UpdateSectionStyleRequest:
    r"""Updates the SectionStyle."""
    
    fields_: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fields'), 'exclude': lambda f: f is None }})
    r"""The fields that should be updated. At least one field must be specified. The root `section_style` is implied and must not be specified. A single `\\"*\\"` can be used as short-hand for listing every field. For example to update the left margin, set `fields` to `\\"margin_left\\"`."""  
    range: Optional[shared_range.Range] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('range'), 'exclude': lambda f: f is None }})
    r"""Specifies a contiguous range of text."""  
    section_style: Optional[shared_sectionstyle.SectionStyle] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sectionStyle'), 'exclude': lambda f: f is None }})
    r"""The styling that applies to a section."""  
    