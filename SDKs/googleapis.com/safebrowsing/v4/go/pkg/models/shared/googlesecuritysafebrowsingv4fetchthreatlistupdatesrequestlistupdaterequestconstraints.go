// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestConstraintsSupportedCompressionsEnum string

const (
	GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestConstraintsSupportedCompressionsEnumCompressionTypeUnspecified GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestConstraintsSupportedCompressionsEnum = "COMPRESSION_TYPE_UNSPECIFIED"
	GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestConstraintsSupportedCompressionsEnumRaw                        GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestConstraintsSupportedCompressionsEnum = "RAW"
	GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestConstraintsSupportedCompressionsEnumRice                       GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestConstraintsSupportedCompressionsEnum = "RICE"
)

func (e *GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestConstraintsSupportedCompressionsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "COMPRESSION_TYPE_UNSPECIFIED":
		fallthrough
	case "RAW":
		fallthrough
	case "RICE":
		*e = GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestConstraintsSupportedCompressionsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestConstraintsSupportedCompressionsEnum: %s", s)
	}
}

// GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestConstraints - The constraints for this update.
type GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestConstraints struct {
	// A client's physical location, expressed as a ISO 31166-1 alpha-2 region code.
	DeviceLocation *string `json:"deviceLocation,omitempty"`
	// Requests the lists for a specific language. Expects ISO 639 alpha-2 format.
	Language *string `json:"language,omitempty"`
	// Sets the maximum number of entries that the client is willing to have in the local database for the specified list. This should be a power of 2 between 2**10 and 2**20. If zero, no database size limit is set.
	MaxDatabaseEntries *int `json:"maxDatabaseEntries,omitempty"`
	// The maximum size in number of entries. The update will not contain more entries than this value. This should be a power of 2 between 2**10 and 2**20. If zero, no update size limit is set.
	MaxUpdateEntries *int `json:"maxUpdateEntries,omitempty"`
	// Requests the list for a specific geographic location. If not set the server may pick that value based on the user's IP address. Expects ISO 3166-1 alpha-2 format.
	Region *string `json:"region,omitempty"`
	// The compression types supported by the client.
	SupportedCompressions []GoogleSecuritySafebrowsingV4FetchThreatListUpdatesRequestListUpdateRequestConstraintsSupportedCompressionsEnum `json:"supportedCompressions,omitempty"`
}
