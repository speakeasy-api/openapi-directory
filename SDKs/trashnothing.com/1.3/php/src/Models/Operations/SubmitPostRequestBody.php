<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class SubmitPostRequestBody
{
    /**
     * A longer description of the item(s).
     * 
     * @var ?string $content
     */
	#[SpeakeasyMetadata('multipartForm:name=content')]
    public ?string $content = null;
    
    /**
     * When the post should expire.  Defaults to 90 days. Any amount of time from 1 hour to 90 days can be provided.  To pass a number of hours, provide the number of hours prefixed by 'h' (eg. 1hr 24hr). To pass a number of days, provide the number of days prefixed by 'd' (eg. 1d 90d). <br /><br /> Note that posts may not appear instantly after submission because the volunteer moderators of many groups may have additional automatic or manual review processes in place that can cause delays.  So with short expirations (eg. < 8 hours), there is a chance that the post may expire before it's approved and so it will never be published.
     * 
     * 
     * 
     * @var ?string $expiresIn
     */
	#[SpeakeasyMetadata('multipartForm:name=expires_in')]
    public ?string $expiresIn = null;
    
    /**
     * If set to 1, the post will be posted with the Fair Offer Policy (only valid for offer posts - see https://trashnothing.com/fair_offer_policy ).
     * 
     * @var ?int $fairOffer
     */
	#[SpeakeasyMetadata('multipartForm:name=fair_offer')]
    public ?int $fairOffer = null;
    
    /**
     * A comma separated list of group IDs to submit the post to (if any).
     * 
     * @var ?string $groupIds
     */
	#[SpeakeasyMetadata('multipartForm:name=group_ids')]
    public ?string $groupIds = null;
    
    /**
     * The latitude corresponding to the location description provided. <br /><br /> If latitude and longitude are not provided, an attempt will be made to automatically geocode the location.  If the location is unable to be geocoded, the post will be rejected* and will have to be resubmitted with a latitude and longitude corresponding to the location or resubmitted with a different location that can be automatically geocoded. <br /><br /> NOTE: The latitude and longitude should NOT be the users' exact location because we don't want to publicize their exact location unless their location description is their full address (which is not recommended). <br /><br /> *When a post is rejected because it can't be geocoded, the returned error will have its identifier property set to 'unknown-location'.
     * 
     * 
     * 
     * @var ?float $latitude
     */
	#[SpeakeasyMetadata('multipartForm:name=latitude')]
    public ?float $latitude = null;
    
    /**
     * A short location description.
     * 
     * @var string $location
     */
	#[SpeakeasyMetadata('multipartForm:name=location')]
    public string $location;
    
    /**
     * The longitude corresponding to the location description provided. (see the NOTE in latitude description)
     * 
     * @var ?float $longitude
     */
	#[SpeakeasyMetadata('multipartForm:name=longitude')]
    public ?float $longitude = null;
    
    /**
     * A comma separated list of the IDs of the photos that should be attached to this post.
     * 
     * @var ?string $photoIds
     */
	#[SpeakeasyMetadata('multipartForm:name=photo_ids')]
    public ?string $photoIds = null;
    
    /**
     * A JSON string representing a permanent object that the client persists and modifies based on warnings returned by the post submission process and user input.  Some warnings returned after submitting  a post have a preference_key string property so that users can opt out of those warnings in the future.  To save this opt-out preference, set the property indicated by the preference_key in the preferences object (eg. preferences[preference_key] = 1).  The preferences object is never modified by the server - it is up to the client to initialize, modify and persist the preferences object.
     * 
     * 
     * 
     * @var ?string $preferences
     */
	#[SpeakeasyMetadata('multipartForm:name=preferences')]
    public ?string $preferences = null;
    
    /**
     * If the post is a repost of an existing post, this should be set to the post_id of the post that is being reposted.
     * 
     * 
     * 
     * @var ?string $repost
     */
	#[SpeakeasyMetadata('multipartForm:name=repost')]
    public ?string $repost = null;
    
    /**
     * For wanted posts only. If set to 1, the wanted post will show that the poster intends to resell any items that they receive in response to this post.  Posters must declare if they intend to resell items.
     * 
     * 
     * 
     * @var ?string $reselling
     */
	#[SpeakeasyMetadata('multipartForm:name=reselling')]
    public ?string $reselling = null;
    
    /**
     * A JSON string representing a temporary object that is used to store data about the submission process for a single post.  The first time a post is submitted, session should be a new empty object (eg. '{}').  The session object should be persisted by the client until that post is successfully submitted and then it  can be discarded so that the next post will start over with a new empty session object.  Every time a post is submitted and the response indicates that the submission was not successful, the session object returned in the response should override the clients copy of the session.
     * 
     * 
     * 
     * @var string $session
     */
	#[SpeakeasyMetadata('multipartForm:name=session')]
    public string $session;
    
    /**
     * A short description of the item(s).
     * 
     * @var string $title
     */
	#[SpeakeasyMetadata('multipartForm:name=title')]
    public string $title;
    
    /**
     * The type of post.  One of: offer, wanted
     * 
     * 
     * 
     * @var string $type
     */
	#[SpeakeasyMetadata('multipartForm:name=type')]
    public string $type;
    
	public function __construct()
	{
		$this->content = null;
		$this->expiresIn = null;
		$this->fairOffer = null;
		$this->groupIds = null;
		$this->latitude = null;
		$this->location = "";
		$this->longitude = null;
		$this->photoIds = null;
		$this->preferences = null;
		$this->repost = null;
		$this->reselling = null;
		$this->session = "";
		$this->title = "";
		$this->type = "";
	}
}
