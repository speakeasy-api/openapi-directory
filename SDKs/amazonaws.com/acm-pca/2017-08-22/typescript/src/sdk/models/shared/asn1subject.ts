/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CustomAttribute } from "./customattribute";
import { Expose, Type } from "class-transformer";

/**
 * Contains information about the certificate subject. The <code>Subject</code> field in the certificate identifies the entity that owns or controls the public key in the certificate. The entity can be a user, computer, device, or service. The <code>Subject </code>must contain an X.500 distinguished name (DN). A DN is a sequence of relative distinguished names (RDNs). The RDNs are separated by commas in the certificate.
 */
export class Asn1Subject extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CommonName" })
  commonName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Country" })
  country?: string;

  @SpeakeasyMetadata({ elemType: CustomAttribute })
  @Expose({ name: "CustomAttributes" })
  @Type(() => CustomAttribute)
  customAttributes?: CustomAttribute[];

  @SpeakeasyMetadata()
  @Expose({ name: "DistinguishedNameQualifier" })
  distinguishedNameQualifier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GenerationQualifier" })
  generationQualifier?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "GivenName" })
  givenName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Initials" })
  initials?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Locality" })
  locality?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Organization" })
  organization?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "OrganizationalUnit" })
  organizationalUnit?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Pseudonym" })
  pseudonym?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SerialNumber" })
  serialNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "State" })
  state?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Surname" })
  surname?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Title" })
  title?: string;
}
