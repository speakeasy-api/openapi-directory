/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ProvisioningPreferences - &lt;p&gt;The user-defined preferences that will be applied when updating a provisioned product. Not all preferences are applicable to all provisioned product type&lt;/p&gt; &lt;p&gt;One or more Amazon Web Services accounts that will have access to the provisioned product.&lt;/p&gt; &lt;p&gt;Applicable only to a &lt;code&gt;CFN_STACKSET&lt;/code&gt; provisioned product type.&lt;/p&gt; &lt;p&gt;The Amazon Web Services accounts specified should be within the list of accounts in the &lt;code&gt;STACKSET&lt;/code&gt; constraint. To get the list of accounts in the &lt;code&gt;STACKSET&lt;/code&gt; constraint, use the &lt;code&gt;DescribeProvisioningParameters&lt;/code&gt; operation.&lt;/p&gt; &lt;p&gt;If no values are specified, the default value is all accounts from the &lt;code&gt;STACKSET&lt;/code&gt; constraint.&lt;/p&gt;
 */
public class ProvisioningPreferences {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StackSetAccounts")
    public String[] stackSetAccounts;

    public ProvisioningPreferences withStackSetAccounts(String[] stackSetAccounts) {
        this.stackSetAccounts = stackSetAccounts;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StackSetFailureToleranceCount")
    public Long stackSetFailureToleranceCount;

    public ProvisioningPreferences withStackSetFailureToleranceCount(Long stackSetFailureToleranceCount) {
        this.stackSetFailureToleranceCount = stackSetFailureToleranceCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StackSetFailureTolerancePercentage")
    public Long stackSetFailureTolerancePercentage;

    public ProvisioningPreferences withStackSetFailureTolerancePercentage(Long stackSetFailureTolerancePercentage) {
        this.stackSetFailureTolerancePercentage = stackSetFailureTolerancePercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StackSetMaxConcurrencyCount")
    public Long stackSetMaxConcurrencyCount;

    public ProvisioningPreferences withStackSetMaxConcurrencyCount(Long stackSetMaxConcurrencyCount) {
        this.stackSetMaxConcurrencyCount = stackSetMaxConcurrencyCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StackSetMaxConcurrencyPercentage")
    public Long stackSetMaxConcurrencyPercentage;

    public ProvisioningPreferences withStackSetMaxConcurrencyPercentage(Long stackSetMaxConcurrencyPercentage) {
        this.stackSetMaxConcurrencyPercentage = stackSetMaxConcurrencyPercentage;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StackSetRegions")
    public String[] stackSetRegions;

    public ProvisioningPreferences withStackSetRegions(String[] stackSetRegions) {
        this.stackSetRegions = stackSetRegions;
        return this;
    }
    
    public ProvisioningPreferences(){}
}
