/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CustomerTextFilter - A filter to select customers based on exact or fuzzy matching of
 * customer attributes against a specified query. Depending on the customer attributes, 
 * the filter can be case-sensitive. This filter can be exact or fuzzy, but it cannot be both.
 */
public class CustomerTextFilter {
    /**
     * Use the exact filter to select customers whose attributes match exactly the specified query.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("exact")
    public String exact;
    public CustomerTextFilter withExact(String exact) {
        this.exact = exact;
        return this;
    }
    
    /**
     * Use the fuzzy filter to select customers whose attributes match the specified query 
     * in a fuzzy manner. When the fuzzy option is used, search queries are tokenized, and then 
     * each query token must be matched somewhere in the searched attribute. For single token queries, 
     * this is effectively the same behavior as a partial match operation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fuzzy")
    public String fuzzy;
    public CustomerTextFilter withFuzzy(String fuzzy) {
        this.fuzzy = fuzzy;
        return this;
    }
    
}
