/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AttributeEnum } from "./attributeenum";
import { Image } from "./image";
import { QualityFilterEnum } from "./qualityfilterenum";
import { Expose, Type } from "class-transformer";

export class IndexFacesRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CollectionId" })
  collectionId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "DetectionAttributes" })
  detectionAttributes?: AttributeEnum[];

  @SpeakeasyMetadata()
  @Expose({ name: "ExternalImageId" })
  externalImageId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Image" })
  @Type(() => Image)
  image: Image;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxFaces" })
  maxFaces?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "QualityFilter" })
  qualityFilter?: QualityFilterEnum;
}
