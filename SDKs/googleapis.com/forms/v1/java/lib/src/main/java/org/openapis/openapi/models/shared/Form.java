/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Form - A Google Forms document. A form is created in Drive, and deleting a form or changing its access protections is done via the [Drive API](https://developers.google.com/drive/api/v3/about-sdk).
 */
public class Form {
    /**
     * Output only. The form ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("formId")
    public String formId;
    public Form withFormId(String formId) {
        this.formId = formId;
        return this;
    }
    
    /**
     * The general information for a form.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("info")
    public Info info;
    public Form withInfo(Info info) {
        this.info = info;
        return this;
    }
    
    /**
     * Required. A list of the form's items, which can include section headers, questions, embedded media, etc.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("items")
    public Item[] items;
    public Form withItems(Item[] items) {
        this.items = items;
        return this;
    }
    
    /**
     * Output only. The ID of the linked Google Sheet which is accumulating responses from this Form (if such a Sheet exists).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkedSheetId")
    public String linkedSheetId;
    public Form withLinkedSheetId(String linkedSheetId) {
        this.linkedSheetId = linkedSheetId;
        return this;
    }
    
    /**
     * Output only. The form URI to share with responders. This opens a page that allows the user to submit responses but not edit the questions.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("responderUri")
    public String responderUri;
    public Form withResponderUri(String responderUri) {
        this.responderUri = responderUri;
        return this;
    }
    
    /**
     * Output only. The revision ID of the form. Used in the WriteControl in update requests to identify the revision on which the changes are based. The format of the revision ID may change over time, so it should be treated opaquely. A returned revision ID is only guaranteed to be valid for 24 hours after it has been returned and cannot be shared across users. If the revision ID is unchanged between calls, then the form has not changed. Conversely, a changed ID (for the same form and user) usually means the form has been updated; however, a changed ID can also be due to internal factors such as ID format changes.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("revisionId")
    public String revisionId;
    public Form withRevisionId(String revisionId) {
        this.revisionId = revisionId;
        return this;
    }
    
    /**
     * A form's settings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("settings")
    public FormSettings settings;
    public Form withSettings(FormSettings settings) {
        this.settings = settings;
        return this;
    }
    
}
