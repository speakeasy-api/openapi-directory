/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PutUsersIdUserConnectionsIdConnectionRequest extends SpeakeasyBase {
  /**
   * do the connection synchronization in background
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=background",
  })
  background?: boolean;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expand",
  })
  expand?: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_connection",
  })
  idConnection: number;

  /**
   * Hint: you can use 'me' or 'all'
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_user",
  })
  idUser: string;

  /**
   * if supplied, get transactions inserted since this date
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=last_update;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  lastUpdate?: Date;

  /**
   * Whether the connection synchronization is asked by the PSU or not (default is true)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=psu_requested",
  })
  psuRequested?: boolean;
}

export class PutUsersIdUserConnectionsIdConnectionResponse extends SpeakeasyBase {
  /**
   * Successful PUT on Connection resource
   */
  @SpeakeasyMetadata()
  connection?: shared.Connection;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
