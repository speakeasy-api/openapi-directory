/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * DatasetGroup - &lt;p&gt;A dataset group is a collection of related datasets (Interactions, User, and Item). You create a dataset group by calling &lt;a href="https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDatasetGroup.html"&gt;CreateDatasetGroup&lt;/a&gt;. You then create a dataset and add it to a dataset group by calling &lt;a href="https://docs.aws.amazon.com/personalize/latest/dg/API_CreateDataset.html"&gt;CreateDataset&lt;/a&gt;. The dataset group is used to create and train a solution by calling &lt;a href="https://docs.aws.amazon.com/personalize/latest/dg/API_CreateSolution.html"&gt;CreateSolution&lt;/a&gt;. A dataset group can contain only one of each type of dataset.&lt;/p&gt; &lt;p&gt;You can specify an Key Management Service (KMS) key to encrypt the datasets in the group.&lt;/p&gt;
 */
public class DatasetGroup {
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("creationDateTime")
    public OffsetDateTime creationDateTime;

    public DatasetGroup withCreationDateTime(OffsetDateTime creationDateTime) {
        this.creationDateTime = creationDateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("datasetGroupArn")
    public String datasetGroupArn;

    public DatasetGroup withDatasetGroupArn(String datasetGroupArn) {
        this.datasetGroupArn = datasetGroupArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domain")
    public DomainEnum domain;

    public DatasetGroup withDomain(DomainEnum domain) {
        this.domain = domain;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failureReason")
    public String failureReason;

    public DatasetGroup withFailureReason(String failureReason) {
        this.failureReason = failureReason;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kmsKeyArn")
    public String kmsKeyArn;

    public DatasetGroup withKmsKeyArn(String kmsKeyArn) {
        this.kmsKeyArn = kmsKeyArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastUpdatedDateTime")
    public OffsetDateTime lastUpdatedDateTime;

    public DatasetGroup withLastUpdatedDateTime(OffsetDateTime lastUpdatedDateTime) {
        this.lastUpdatedDateTime = lastUpdatedDateTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public DatasetGroup withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("roleArn")
    public String roleArn;

    public DatasetGroup withRoleArn(String roleArn) {
        this.roleArn = roleArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public String status;

    public DatasetGroup withStatus(String status) {
        this.status = status;
        return this;
    }
    
    public DatasetGroup(){}
}
