/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * HttpFaultInjection - The specification for fault injection introduced into traffic to test the resiliency of clients to backend service failure. As part of fault injection, when clients send requests to a backend service, delays can be introduced by the load balancer on a percentage of requests before sending those request to the backend service. Similarly requests from clients can be aborted by the load balancer for a percentage of requests.
 */
public class HttpFaultInjection {
    /**
     * Specification for how requests are aborted as part of fault injection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("abort")
    public HttpFaultAbort abort;

    public HttpFaultInjection withAbort(HttpFaultAbort abort) {
        this.abort = abort;
        return this;
    }
    
    /**
     * Specifies the delay introduced by the load balancer before forwarding the request to the backend service as part of fault injection.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("delay")
    public HttpFaultDelay delay;

    public HttpFaultInjection withDelay(HttpFaultDelay delay) {
        this.delay = delay;
        return this;
    }
    
    public HttpFaultInjection(){}
}
