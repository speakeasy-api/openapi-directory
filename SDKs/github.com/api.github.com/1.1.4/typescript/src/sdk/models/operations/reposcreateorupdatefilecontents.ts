/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

/**
 * The author of the file. Default: The `committer` or the authenticated user if you omit `committer`.
 */
export class ReposCreateOrUpdateFileContentsRequestBodyAuthor extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  date?: string;

  /**
   * The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  /**
   * The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

/**
 * The person that committed the file. Default: the authenticated user.
 */
export class ReposCreateOrUpdateFileContentsRequestBodyCommitter extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  date?: string;

  /**
   * The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "email" })
  email: string;

  /**
   * The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;
}

export class ReposCreateOrUpdateFileContentsRequestBody extends SpeakeasyBase {
  /**
   * The author of the file. Default: The `committer` or the authenticated user if you omit `committer`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "author" })
  @Type(() => ReposCreateOrUpdateFileContentsRequestBodyAuthor)
  author?: ReposCreateOrUpdateFileContentsRequestBodyAuthor;

  /**
   * The branch name. Default: the repositoryâ€™s default branch (usually `master`)
   */
  @SpeakeasyMetadata()
  @Expose({ name: "branch" })
  branch?: string;

  /**
   * The person that committed the file. Default: the authenticated user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "committer" })
  @Type(() => ReposCreateOrUpdateFileContentsRequestBodyCommitter)
  committer?: ReposCreateOrUpdateFileContentsRequestBodyCommitter;

  /**
   * The new file content, using Base64 encoding.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "content" })
  content: string;

  /**
   * The commit message.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;

  /**
   * **Required if you are updating a file**. The blob SHA of the file being replaced.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sha" })
  sha?: string;
}

export class ReposCreateOrUpdateFileContentsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: ReposCreateOrUpdateFileContentsRequestBody;

  /**
   * The account owner of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=owner",
  })
  owner: string;

  /**
   * path parameter
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=path",
  })
  path: string;

  /**
   * The name of the repository. The name is not case sensitive.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=repo",
  })
  repo: string;
}

export class ReposCreateOrUpdateFileContentsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Resource not found
   */
  @SpeakeasyMetadata()
  basicError?: shared.BasicError;

  /**
   * Response
   */
  @SpeakeasyMetadata()
  fileCommit?: shared.FileCommit;

  /**
   * Validation failed, or the endpoint has been spammed.
   */
  @SpeakeasyMetadata()
  validationError?: shared.ValidationError;
}
