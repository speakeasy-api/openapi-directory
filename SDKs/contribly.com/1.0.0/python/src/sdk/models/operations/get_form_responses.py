"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import formresponse as shared_formresponse
from typing import Optional


@dataclasses.dataclass
class GetFormResponsesRequest:
    
    contribution: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'contribution', 'style': 'form', 'explode': True }})
    r"""Restrict results to responses relating to this contribution."""  
    form: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'form', 'style': 'form', 'explode': True }})
    r"""Restrict results to responses submitted to this form."""  
    user: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'user', 'style': 'form', 'explode': True }})
    r"""Restrict results to responses submitted by this user."""  
    

@dataclasses.dataclass
class GetFormResponsesResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    form_responses: Optional[list[shared_formresponse.FormResponse]] = dataclasses.field(default=None)
    r"""A list of form responses"""  
    headers: Optional[dict[str, list[str]]] = dataclasses.field(default=None)  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    