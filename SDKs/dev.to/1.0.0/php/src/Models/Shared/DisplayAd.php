<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * DisplayAd - A Display Ad, aka Billboard, aka Widget
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class DisplayAd
{
    /**
     * Ad must be both published and approved to be in rotation
     * 
     * @var ?bool $approved
     */
	#[\JMS\Serializer\Annotation\SerializedName('approved')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $approved = null;
    
    /**
     * Articles this ad should *not* appear on (blank means no articles are disallowed, and this ad can appear next to any/all articles). Comma-separated list of integer Article IDs
     * 
     * @var ?string $articleExcludeIds
     */
	#[\JMS\Serializer\Annotation\SerializedName('article_exclude_ids')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $articleExcludeIds = null;
    
    /**
     * The text (in markdown) of the ad (required)
     * 
     * @var string $bodyMarkdown
     */
	#[\JMS\Serializer\Annotation\SerializedName('body_markdown')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $bodyMarkdown;
    
    /**
     * Identifies the user who created the ad.
     * 
     * @var ?int $creatorId
     */
	#[\JMS\Serializer\Annotation\SerializedName('creator_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $creatorId = null;
    
    /**
     * Potentially limits visitors to whom the ad is visible
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DisplayAdDisplayToEnum $displayTo
     */
	#[\JMS\Serializer\Annotation\SerializedName('display_to')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DisplayAdDisplayToEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DisplayAdDisplayToEnum $displayTo = null;
    
    /**
     * The ID of the Display Ad
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * For internal use, helps distinguish ads from one another
     * 
     * @var string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $name;
    
    /**
     * Identifies the organization to which the ad belongs
     * 
     * @var ?int $organizationId
     */
	#[\JMS\Serializer\Annotation\SerializedName('organization_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $organizationId = null;
    
    /**
     * Identifies which area of site layout the ad can appear in
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\DisplayAdPlacementAreaEnum $placementArea
     */
	#[\JMS\Serializer\Annotation\SerializedName('placement_area')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DisplayAdPlacementAreaEnum>')]
    public DisplayAdPlacementAreaEnum $placementArea;
    
    /**
     * Ad must be both published and approved to be in rotation
     * 
     * @var ?bool $published
     */
	#[\JMS\Serializer\Annotation\SerializedName('published')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $published = null;
    
    /**
     * Tags on which this ad can be displayed (blank is all/any tags)
     * 
     * @var ?string $tagList
     */
	#[\JMS\Serializer\Annotation\SerializedName('tag_list')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $tagList = null;
    
    /**
     * Types of the billboards:
     * 
     * in_house (created by admins),
     * community (created by an entity, appears on entity's content),
     * external ( created by an entity, or a non-entity, can appear everywhere)
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\DisplayAdTypeOfEnum $typeOf
     */
	#[\JMS\Serializer\Annotation\SerializedName('type_of')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\DisplayAdTypeOfEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?DisplayAdTypeOfEnum $typeOf = null;
    
	public function __construct()
	{
		$this->approved = null;
		$this->articleExcludeIds = null;
		$this->bodyMarkdown = "";
		$this->creatorId = null;
		$this->displayTo = null;
		$this->id = null;
		$this->name = "";
		$this->organizationId = null;
		$this->placementArea = \OpenAPI\OpenAPI\Models\Shared\DisplayAdPlacementAreaEnum::SIDEBAR_LEFT;
		$this->published = null;
		$this->tagList = null;
		$this->typeOf = null;
	}
}
