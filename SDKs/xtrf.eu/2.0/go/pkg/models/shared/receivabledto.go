// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ReceivableDTORateOriginEnum string

const (
	ReceivableDTORateOriginEnumPriceProfile   ReceivableDTORateOriginEnum = "PRICE_PROFILE"
	ReceivableDTORateOriginEnumPriceList      ReceivableDTORateOriginEnum = "PRICE_LIST"
	ReceivableDTORateOriginEnumFilledManually ReceivableDTORateOriginEnum = "FILLED_MANUALLY"
	ReceivableDTORateOriginEnumAutocalculated ReceivableDTORateOriginEnum = "AUTOCALCULATED"
)

func (e *ReceivableDTORateOriginEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "PRICE_PROFILE":
		fallthrough
	case "PRICE_LIST":
		fallthrough
	case "FILLED_MANUALLY":
		fallthrough
	case "AUTOCALCULATED":
		*e = ReceivableDTORateOriginEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReceivableDTORateOriginEnum: %s", s)
	}
}

type ReceivableDTOTypeEnum string

const (
	ReceivableDTOTypeEnumSimple ReceivableDTOTypeEnum = "SIMPLE"
	ReceivableDTOTypeEnumCat    ReceivableDTOTypeEnum = "CAT"
)

func (e *ReceivableDTOTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "SIMPLE":
		fallthrough
	case "CAT":
		*e = ReceivableDTOTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ReceivableDTOTypeEnum: %s", s)
	}
}

// ReceivableDTO - Success
type ReceivableDTO struct {
	CalculationUnitID           *int64                        `json:"calculationUnitId,omitempty"`
	CurrencyID                  *int64                        `json:"currencyId,omitempty"`
	Description                 *string                       `json:"description,omitempty"`
	ID                          *int64                        `json:"id,omitempty"`
	IgnoreMinimumCharge         *bool                         `json:"ignoreMinimumCharge,omitempty"`
	InvoiceID                   *string                       `json:"invoiceId,omitempty"`
	JobTypeID                   *int64                        `json:"jobTypeId,omitempty"`
	LanguageCombination         *ChargeLanguageCombinationDTO `json:"languageCombination,omitempty"`
	LanguageCombinationIDNumber *string                       `json:"languageCombinationIdNumber,omitempty"`
	MinimumCharge               *float64                      `json:"minimumCharge,omitempty"`
	Quantity                    *float64                      `json:"quantity,omitempty"`
	Rate                        *float64                      `json:"rate,omitempty"`
	RateOrigin                  *ReceivableDTORateOriginEnum  `json:"rateOrigin,omitempty"`
	TaskID                      *int64                        `json:"taskId,omitempty"`
	Total                       *float64                      `json:"total,omitempty"`
	Type                        *ReceivableDTOTypeEnum        `json:"type,omitempty"`
}
