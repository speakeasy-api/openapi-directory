<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * BeezUPColumnConfiguration - Describe a BeezUP column
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class BeezUPColumnConfiguration
{
    /**
     * The BeezUP column name
     * 
     * @var string $beezUPColumnName
     */
	#[\JMS\Serializer\Annotation\SerializedName('beezUPColumnName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $beezUPColumnName;
    
    /**
     * If the size of the value is greater than the limit we can truncate the value instead of failing...
     * 
     * @var ?bool $canBeTruncated
     */
	#[\JMS\Serializer\Annotation\SerializedName('canBeTruncated')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $canBeTruncated = null;
    
    /**
     * Data type of the column, will be used for parsing and for consolidation proces
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BeezUPCommonColumnDataTypeEnum $columnDataType
     */
	#[\JMS\Serializer\Annotation\SerializedName('columnDataType')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\BeezUPCommonColumnDataTypeEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BeezUPCommonColumnDataTypeEnum $columnDataType = null;
    
    /**
     * Importance of the column
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\BeezUPCommonColumnImportanceEnum $columnImportance
     */
	#[\JMS\Serializer\Annotation\SerializedName('columnImportance')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\BeezUPCommonColumnImportanceEnum>')]
    public BeezUPCommonColumnImportanceEnum $columnImportance;
    
    /**
     * Describe the BeezUP column
     * 
     * @var ?string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $description = null;
    
    /**
     * Indicate the display group name where the column must be putted
     * 
     * @var string $displayGroupName
     */
	#[\JMS\Serializer\Annotation\SerializedName('displayGroupName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $displayGroupName;
    
    /**
     * /!\ ONLY AVAILABLE ON CATALOG COLUMN NOT ON CUSTOM COLUMNS!!
     * 
     * If true, an error happen at the second occurence of the same value for this column
     * This information will be used during the importation process and later for mapping proposal
     * 
     * @var ?bool $unique
     */
	#[\JMS\Serializer\Annotation\SerializedName('unique')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $unique = null;
    
	public function __construct()
	{
		$this->beezUPColumnName = "";
		$this->canBeTruncated = null;
		$this->columnDataType = null;
		$this->columnImportance = \OpenAPI\OpenAPI\Models\Shared\BeezUPCommonColumnImportanceEnum::REQUIRED;
		$this->description = null;
		$this->displayGroupName = "";
		$this->unique = null;
	}
}
