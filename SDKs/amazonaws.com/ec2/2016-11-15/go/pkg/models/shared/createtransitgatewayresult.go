// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"time"
)

// CreateTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum - Indicates whether attachment requests are automatically accepted.
type CreateTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum string

const (
	CreateTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnumEnable  CreateTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum = "enable"
	CreateTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnumDisable CreateTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum = "disable"
)

func (e *CreateTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = CreateTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum: %s", s)
	}
}

// CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum - Indicates whether resource attachments are automatically associated with the default association route table.
type CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum string

const (
	CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnumEnable  CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum = "enable"
	CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnumDisable CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum = "disable"
)

func (e *CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum: %s", s)
	}
}

// CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum - Indicates whether resource attachments automatically propagate routes to the default propagation route table.
type CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum string

const (
	CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnumEnable  CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum = "enable"
	CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnumDisable CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum = "disable"
)

func (e *CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum: %s", s)
	}
}

// CreateTransitGatewayResultTransitGatewayOptionsDNSSupportEnum - Indicates whether DNS support is enabled.
type CreateTransitGatewayResultTransitGatewayOptionsDNSSupportEnum string

const (
	CreateTransitGatewayResultTransitGatewayOptionsDNSSupportEnumEnable  CreateTransitGatewayResultTransitGatewayOptionsDNSSupportEnum = "enable"
	CreateTransitGatewayResultTransitGatewayOptionsDNSSupportEnumDisable CreateTransitGatewayResultTransitGatewayOptionsDNSSupportEnum = "disable"
)

func (e *CreateTransitGatewayResultTransitGatewayOptionsDNSSupportEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = CreateTransitGatewayResultTransitGatewayOptionsDNSSupportEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayResultTransitGatewayOptionsDNSSupportEnum: %s", s)
	}
}

// CreateTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum - Indicates whether multicast is enabled on the transit gateway
type CreateTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum string

const (
	CreateTransitGatewayResultTransitGatewayOptionsMulticastSupportEnumEnable  CreateTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum = "enable"
	CreateTransitGatewayResultTransitGatewayOptionsMulticastSupportEnumDisable CreateTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum = "disable"
)

func (e *CreateTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = CreateTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum: %s", s)
	}
}

// CreateTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum - Indicates whether Equal Cost Multipath Protocol support is enabled.
type CreateTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum string

const (
	CreateTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnumEnable  CreateTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum = "enable"
	CreateTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnumDisable CreateTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum = "disable"
)

func (e *CreateTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "enable":
		fallthrough
	case "disable":
		*e = CreateTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum: %s", s)
	}
}

// CreateTransitGatewayResultTransitGatewayOptions - The transit gateway options.
type CreateTransitGatewayResultTransitGatewayOptions struct {
	AmazonSideAsn                  *int64
	AssociationDefaultRouteTableID *string
	AutoAcceptSharedAttachments    *CreateTransitGatewayResultTransitGatewayOptionsAutoAcceptSharedAttachmentsEnum
	DefaultRouteTableAssociation   *CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTableAssociationEnum
	DefaultRouteTablePropagation   *CreateTransitGatewayResultTransitGatewayOptionsDefaultRouteTablePropagationEnum
	DNSSupport                     *CreateTransitGatewayResultTransitGatewayOptionsDNSSupportEnum
	MulticastSupport               *CreateTransitGatewayResultTransitGatewayOptionsMulticastSupportEnum
	PropagationDefaultRouteTableID *string
	TransitGatewayCidrBlocks       []string
	VpnEcmpSupport                 *CreateTransitGatewayResultTransitGatewayOptionsVpnEcmpSupportEnum
}

// CreateTransitGatewayResultTransitGatewayStateEnum - The state of the transit gateway.
type CreateTransitGatewayResultTransitGatewayStateEnum string

const (
	CreateTransitGatewayResultTransitGatewayStateEnumPending   CreateTransitGatewayResultTransitGatewayStateEnum = "pending"
	CreateTransitGatewayResultTransitGatewayStateEnumAvailable CreateTransitGatewayResultTransitGatewayStateEnum = "available"
	CreateTransitGatewayResultTransitGatewayStateEnumModifying CreateTransitGatewayResultTransitGatewayStateEnum = "modifying"
	CreateTransitGatewayResultTransitGatewayStateEnumDeleting  CreateTransitGatewayResultTransitGatewayStateEnum = "deleting"
	CreateTransitGatewayResultTransitGatewayStateEnumDeleted   CreateTransitGatewayResultTransitGatewayStateEnum = "deleted"
)

func (e *CreateTransitGatewayResultTransitGatewayStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "available":
		fallthrough
	case "modifying":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = CreateTransitGatewayResultTransitGatewayStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateTransitGatewayResultTransitGatewayStateEnum: %s", s)
	}
}

// CreateTransitGatewayResultTransitGatewayTags - Describes a tag.
type CreateTransitGatewayResultTransitGatewayTags struct {
	Key   *string
	Value *string
}

// CreateTransitGatewayResultTransitGateway - Information about the transit gateway.
type CreateTransitGatewayResultTransitGateway struct {
	CreationTime      *time.Time
	Description       *string
	Options           *CreateTransitGatewayResultTransitGatewayOptions
	OwnerID           *string
	State             *CreateTransitGatewayResultTransitGatewayStateEnum
	Tags              []CreateTransitGatewayResultTransitGatewayTags
	TransitGatewayArn *string
	TransitGatewayID  *string
}

// CreateTransitGatewayResult - Success
type CreateTransitGatewayResult struct {
	TransitGateway *CreateTransitGatewayResultTransitGateway
}
