"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleSecuritySafebrowsingV4RiceDeltaEncoding:
    r"""The Rice-Golomb encoded data. Used for sending compressed 4-byte hashes or compressed removal indices."""
    
    encoded_data: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('encodedData'), 'exclude': lambda f: f is None }})
    r"""The encoded deltas that are encoded using the Golomb-Rice coder."""  
    first_value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('firstValue'), 'exclude': lambda f: f is None }})
    r"""The offset of the first entry in the encoded data, or, if only a single integer was encoded, that single integer's value. If the field is empty or missing, assume zero."""  
    num_entries: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('numEntries'), 'exclude': lambda f: f is None }})
    r"""The number of entries that are delta encoded in the encoded data. If only a single integer was encoded, this will be zero and the single value will be stored in `first_value`."""  
    rice_parameter: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('riceParameter'), 'exclude': lambda f: f is None }})
    r"""The Golomb-Rice parameter, which is a number between 2 and 28. This field is missing (that is, zero) if `num_entries` is zero."""  
    