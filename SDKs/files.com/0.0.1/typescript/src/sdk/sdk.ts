/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ActionNotificationExportResults } from "./actionnotificationexportresults";
import { ActionNotificationExports } from "./actionnotificationexports";
import { ActionWebhookFailures } from "./actionwebhookfailures";
import { ApiKey } from "./apikey";
import { ApiKeys } from "./apikeys";
import { Apps } from "./apps";
import { As2IncomingMessages } from "./as2incomingmessages";
import { As2OutgoingMessages } from "./as2outgoingmessages";
import { As2Partners } from "./as2partners";
import { As2Stations } from "./as2stations";
import { AutomationRuns } from "./automationruns";
import { Automations } from "./automations";
import { BandwidthSnapshots } from "./bandwidthsnapshots";
import { Behaviors } from "./behaviors";
import { BundleDownloads } from "./bundledownloads";
import { BundleNotifications } from "./bundlenotifications";
import { BundleRecipients } from "./bundlerecipients";
import { BundleRegistrations } from "./bundleregistrations";
import { Bundles } from "./bundles";
import { Clickwraps } from "./clickwraps";
import { DnsRecords } from "./dnsrecords";
import { ExternalEvents } from "./externalevents";
import { FileActions } from "./fileactions";
import { FileCommentReactions } from "./filecommentreactions";
import { FileComments } from "./filecomments";
import { FileMigrations } from "./filemigrations";
import { Files } from "./files";
import { Folders } from "./folders";
import { FormFieldSets } from "./formfieldsets";
import { Groups } from "./groups";
import { GroupUsers } from "./groupusers";
import { History } from "./history";
import { HistoryExportResults } from "./historyexportresults";
import { HistoryExports } from "./historyexports";
import { InboxRecipients } from "./inboxrecipients";
import { InboxRegistrations } from "./inboxregistrations";
import { InboxUploads } from "./inboxuploads";
import { Invoices } from "./invoices";
import { IpAddresses } from "./ipaddresses";
import { Locks } from "./locks";
import { MessageCommentReactions } from "./messagecommentreactions";
import { MessageComments } from "./messagecomments";
import { MessageReactions } from "./messagereactions";
import { Messages } from "./messages";
import { Notifications } from "./notifications";
import { Payments } from "./payments";
import { Permissions } from "./permissions";
import { Priorities } from "./priorities";
import { Projects } from "./projects";
import { PublicKeys } from "./publickeys";
import { RemoteBandwidthSnapshots } from "./remotebandwidthsnapshots";
import { RemoteServers } from "./remoteservers";
import { Requests } from "./requests";
import { Sessions } from "./sessions";
import { SettingsChanges } from "./settingschanges";
import { SftpHostKeys } from "./sftphostkeys";
import { Site } from "./site";
import { SsoStrategies } from "./ssostrategies";
import { Styles } from "./styles";
import { UsageDailySnapshots } from "./usagedailysnapshots";
import { UsageSnapshots } from "./usagesnapshots";
import { User } from "./user";
import { UserCipherUses } from "./usercipheruses";
import { UserRequests } from "./userrequests";
import { Users } from "./users";
import { WebhookTests } from "./webhooktests";
import axios, { AxiosInstance } from "axios";

/**
 * Contains the list of servers available to the SDK
 */
export const ServerList = ["//app.files.com/api/rest/v1"] as const;

/**
 * The available configuration options for the SDK
 */
export type SDKProps = {
  /**
   * Allows overriding the default axios client used by the SDK
   */
  defaultClient?: AxiosInstance;
  /**
   * Allows overriding the default server URL used by the SDK
   */
  serverURL?: string;
};

export class SDK {
  /**
   * Operations about action_notification_export_results
   */
  public actionNotificationExportResults: ActionNotificationExportResults;
  /**
   * Operations about action_notification_exports
   */
  public actionNotificationExports: ActionNotificationExports;
  /**
   * Operations about action_webhook_failures
   */
  public actionWebhookFailures: ActionWebhookFailures;
  /**
   * Operations about api_keys
   */
  public apiKey: ApiKey;
  /**
   * Operations about api_keys
   */
  public apiKeys: ApiKeys;
  /**
   * Operations about apps
   */
  public apps: Apps;
  /**
   * Operations about as2_incoming_messages
   */
  public as2IncomingMessages: As2IncomingMessages;
  /**
   * Operations about as2_outgoing_messages
   */
  public as2OutgoingMessages: As2OutgoingMessages;
  /**
   * Operations about as2_partners
   */
  public as2Partners: As2Partners;
  /**
   * Operations about as2_stations
   */
  public as2Stations: As2Stations;
  /**
   * Operations about automation_runs
   */
  public automationRuns: AutomationRuns;
  /**
   * Operations about automations
   */
  public automations: Automations;
  /**
   * Operations about bandwidth_snapshots
   */
  public bandwidthSnapshots: BandwidthSnapshots;
  /**
   * Operations about behaviors
   */
  public behaviors: Behaviors;
  /**
   * Operations about bundle_downloads
   */
  public bundleDownloads: BundleDownloads;
  /**
   * Operations about bundle_notifications
   */
  public bundleNotifications: BundleNotifications;
  /**
   * Operations about bundle_recipients
   */
  public bundleRecipients: BundleRecipients;
  /**
   * Operations about bundle_registrations
   */
  public bundleRegistrations: BundleRegistrations;
  /**
   * Operations about bundles
   */
  public bundles: Bundles;
  /**
   * Operations about clickwraps
   */
  public clickwraps: Clickwraps;
  /**
   * Operations about dns_records
   */
  public dnsRecords: DnsRecords;
  /**
   * Operations about external_events
   */
  public externalEvents: ExternalEvents;
  /**
   * Operations about file_actions
   */
  public fileActions: FileActions;
  /**
   * Operations about file_comment_reactions
   */
  public fileCommentReactions: FileCommentReactions;
  /**
   * Operations about file_comments
   */
  public fileComments: FileComments;
  /**
   * Operations about file_migrations
   */
  public fileMigrations: FileMigrations;
  /**
   * Operations about files
   */
  public files: Files;
  /**
   * Operations about folders
   */
  public folders: Folders;
  /**
   * Operations about form_field_sets
   */
  public formFieldSets: FormFieldSets;
  /**
   * Operations about group_users
   */
  public groupUsers: GroupUsers;
  /**
   * Operations about groups
   */
  public groups: Groups;
  /**
   * Operations about histories
   */
  public history: History;
  /**
   * Operations about history_export_results
   */
  public historyExportResults: HistoryExportResults;
  /**
   * Operations about history_exports
   */
  public historyExports: HistoryExports;
  /**
   * Operations about inbox_recipients
   */
  public inboxRecipients: InboxRecipients;
  /**
   * Operations about inbox_registrations
   */
  public inboxRegistrations: InboxRegistrations;
  /**
   * Operations about inbox_uploads
   */
  public inboxUploads: InboxUploads;
  /**
   * Operations about invoices
   */
  public invoices: Invoices;
  /**
   * Operations about ip_addresses
   */
  public ipAddresses: IpAddresses;
  /**
   * Operations about locks
   */
  public locks: Locks;
  /**
   * Operations about message_comment_reactions
   */
  public messageCommentReactions: MessageCommentReactions;
  /**
   * Operations about message_comments
   */
  public messageComments: MessageComments;
  /**
   * Operations about message_reactions
   */
  public messageReactions: MessageReactions;
  /**
   * Operations about messages
   */
  public messages: Messages;
  /**
   * Operations about notifications
   */
  public notifications: Notifications;
  /**
   * Operations about payments
   */
  public payments: Payments;
  /**
   * Operations about permissions
   */
  public permissions: Permissions;
  /**
   * Operations about priorities
   */
  public priorities: Priorities;
  /**
   * Operations about projects
   */
  public projects: Projects;
  /**
   * Operations about public_keys
   */
  public publicKeys: PublicKeys;
  /**
   * Operations about remote_bandwidth_snapshots
   */
  public remoteBandwidthSnapshots: RemoteBandwidthSnapshots;
  /**
   * Operations about remote_servers
   */
  public remoteServers: RemoteServers;
  /**
   * Operations about requests
   */
  public requests: Requests;
  /**
   * Operations about sessions
   */
  public sessions: Sessions;
  /**
   * Operations about settings_changes
   */
  public settingsChanges: SettingsChanges;
  /**
   * Operations about sftp_host_keys
   */
  public sftpHostKeys: SftpHostKeys;
  /**
   * Operations about sites
   */
  public site: Site;
  /**
   * Operations about sso_strategies
   */
  public ssoStrategies: SsoStrategies;
  /**
   * Operations about styles
   */
  public styles: Styles;
  /**
   * Operations about usage_daily_snapshots
   */
  public usageDailySnapshots: UsageDailySnapshots;
  /**
   * Operations about usage_snapshots
   */
  public usageSnapshots: UsageSnapshots;
  /**
   * Operations about users
   */
  public user: User;
  /**
   * Operations about user_cipher_uses
   */
  public userCipherUses: UserCipherUses;
  /**
   * Operations about user_requests
   */
  public userRequests: UserRequests;
  /**
   * Operations about users
   */
  public users: Users;
  /**
   * Operations about webhook_tests
   */
  public webhookTests: WebhookTests;

  public _defaultClient: AxiosInstance;
  public _securityClient: AxiosInstance;
  public _serverURL: string;
  private _language = "typescript";
  private _sdkVersion = "0.0.1";
  private _genVersion = "internal";
  private _globals: any;

  constructor(props?: SDKProps) {
    this._serverURL = props?.serverURL ?? ServerList[0];

    this._defaultClient =
      props?.defaultClient ?? axios.create({ baseURL: this._serverURL });
    this._securityClient = this._defaultClient;

    this.actionNotificationExportResults = new ActionNotificationExportResults(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.actionNotificationExports = new ActionNotificationExports(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.actionWebhookFailures = new ActionWebhookFailures(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.apiKey = new ApiKey(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.apiKeys = new ApiKeys(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.apps = new Apps(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.as2IncomingMessages = new As2IncomingMessages(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.as2OutgoingMessages = new As2OutgoingMessages(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.as2Partners = new As2Partners(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.as2Stations = new As2Stations(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.automationRuns = new AutomationRuns(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.automations = new Automations(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.bandwidthSnapshots = new BandwidthSnapshots(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.behaviors = new Behaviors(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.bundleDownloads = new BundleDownloads(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.bundleNotifications = new BundleNotifications(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.bundleRecipients = new BundleRecipients(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.bundleRegistrations = new BundleRegistrations(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.bundles = new Bundles(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.clickwraps = new Clickwraps(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.dnsRecords = new DnsRecords(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.externalEvents = new ExternalEvents(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.fileActions = new FileActions(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.fileCommentReactions = new FileCommentReactions(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.fileComments = new FileComments(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.fileMigrations = new FileMigrations(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.files = new Files(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.folders = new Folders(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.formFieldSets = new FormFieldSets(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.groupUsers = new GroupUsers(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.groups = new Groups(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.history = new History(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.historyExportResults = new HistoryExportResults(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.historyExports = new HistoryExports(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.inboxRecipients = new InboxRecipients(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.inboxRegistrations = new InboxRegistrations(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.inboxUploads = new InboxUploads(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.invoices = new Invoices(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.ipAddresses = new IpAddresses(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.locks = new Locks(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.messageCommentReactions = new MessageCommentReactions(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.messageComments = new MessageComments(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.messageReactions = new MessageReactions(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.messages = new Messages(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.notifications = new Notifications(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.payments = new Payments(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.permissions = new Permissions(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.priorities = new Priorities(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.projects = new Projects(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.publicKeys = new PublicKeys(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.remoteBandwidthSnapshots = new RemoteBandwidthSnapshots(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.remoteServers = new RemoteServers(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.requests = new Requests(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.sessions = new Sessions(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.settingsChanges = new SettingsChanges(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.sftpHostKeys = new SftpHostKeys(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.site = new Site(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.ssoStrategies = new SsoStrategies(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.styles = new Styles(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.usageDailySnapshots = new UsageDailySnapshots(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.usageSnapshots = new UsageSnapshots(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.user = new User(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.userCipherUses = new UserCipherUses(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.userRequests = new UserRequests(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.users = new Users(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );

    this.webhookTests = new WebhookTests(
      this._defaultClient,
      this._securityClient,
      this._serverURL,
      this._language,
      this._sdkVersion,
      this._genVersion
    );
  }
}
