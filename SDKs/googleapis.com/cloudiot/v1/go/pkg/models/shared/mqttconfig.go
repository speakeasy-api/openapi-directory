// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// MqttConfigMqttEnabledStateEnum - If enabled, allows connections using the MQTT protocol. Otherwise, MQTT connections to this registry will fail.
type MqttConfigMqttEnabledStateEnum string

const (
	MqttConfigMqttEnabledStateEnumMqttStateUnspecified MqttConfigMqttEnabledStateEnum = "MQTT_STATE_UNSPECIFIED"
	MqttConfigMqttEnabledStateEnumMqttEnabled          MqttConfigMqttEnabledStateEnum = "MQTT_ENABLED"
	MqttConfigMqttEnabledStateEnumMqttDisabled         MqttConfigMqttEnabledStateEnum = "MQTT_DISABLED"
)

func (e MqttConfigMqttEnabledStateEnum) ToPointer() *MqttConfigMqttEnabledStateEnum {
	return &e
}

func (e *MqttConfigMqttEnabledStateEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "MQTT_STATE_UNSPECIFIED":
		fallthrough
	case "MQTT_ENABLED":
		fallthrough
	case "MQTT_DISABLED":
		*e = MqttConfigMqttEnabledStateEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MqttConfigMqttEnabledStateEnum: %v", v)
	}
}

// MqttConfig - The configuration of MQTT for a device registry.
type MqttConfig struct {
	// If enabled, allows connections using the MQTT protocol. Otherwise, MQTT connections to this registry will fail.
	MqttEnabledState *MqttConfigMqttEnabledStateEnum `json:"mqttEnabledState,omitempty"`
}
