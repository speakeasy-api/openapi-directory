/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ResourceIdentifier } from "./resourceidentifier";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The type of credit the linked person has on the referenced entity
 */
export enum CreditAttributesTypeEnum {
  AnchorCredit = "AnchorCredit",
  AssociateProducerCredit = "AssociateProducerCredit",
  AuthorCredit = "AuthorCredit",
  CastCredit = "CastCredit",
  CoHostCredit = "CoHostCredit",
  ComposerCredit = "ComposerCredit",
  CreatorCredit = "CreatorCredit",
  Credit = "Credit",
  DirectorCredit = "DirectorCredit",
  EditorCredit = "EditorCredit",
  EngineerCredit = "EngineerCredit",
  ExecutiveProducerCredit = "ExecutiveProducerCredit",
  GuestCoHostCredit = "GuestCoHostCredit",
  GuestCredit = "GuestCredit",
  GuestHostCredit = "GuestHostCredit",
  HeadWriterCredit = "HeadWriterCredit",
  HostCredit = "HostCredit",
  ProducerCredit = "ProducerCredit",
  ReporterCredit = "ReporterCredit",
  SeniorProducerCredit = "SeniorProducerCredit",
  SidekickCredit = "SidekickCredit",
  VideoProducerCredit = "VideoProducerCredit",
  WriterCredit = "WriterCredit",
}

export class CreditAttributes extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdAt?: Date;

  /**
   * The order of this credit within all credits of the referenced creditable entity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "position" })
  position?: number;

  /**
   * The type of credit the linked person has on the referenced entity
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: CreditAttributesTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updatedAt?: Date;
}

export class CreditRelationshipsCreditable extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier;
}

export class CreditRelationshipsPerson extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  @Type(() => ResourceIdentifier)
  data?: ResourceIdentifier;
}

export class CreditRelationships extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "creditable" })
  @Type(() => CreditRelationshipsCreditable)
  creditable?: CreditRelationshipsCreditable;

  @SpeakeasyMetadata()
  @Expose({ name: "person" })
  @Type(() => CreditRelationshipsPerson)
  person?: CreditRelationshipsPerson;
}

/**
 * A credit links a specific person to a series, season, or episode in a specific role.
 *
 * @remarks
 *
 */
export class Credit extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "attributes" })
  @Type(() => CreditAttributes)
  attributes?: CreditAttributes;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "relationships" })
  @Type(() => CreditRelationships)
  relationships?: CreditRelationships;

  /**
   * The type of resource. This is always `credits`
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;
}
