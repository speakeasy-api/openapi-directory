"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ClearOrgPolicyRequest:
    r"""The request sent to the ClearOrgPolicy method."""
    
    constraint: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('constraint'), 'exclude': lambda f: f is None }})
    r"""Name of the `Constraint` of the `Policy` to clear."""  
    etag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('etag'), 'exclude': lambda f: f is None }})
    r"""The current version, for concurrency control. Not sending an `etag` will cause the `Policy` to be cleared blindly."""  
    