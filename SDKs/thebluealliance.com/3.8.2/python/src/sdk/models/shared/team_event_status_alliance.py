"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import team_event_status_alliance_backup as shared_team_event_status_alliance_backup
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TeamEventStatusAlliance:
    
    number: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('number') }})
    r"""Alliance number."""  
    pick: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('pick') }})
    r"""Order the team was picked in the alliance from 0-2, with 0 being alliance captain."""  
    backup: Optional[shared_team_event_status_alliance_backup.TeamEventStatusAllianceBackup] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('backup'), 'exclude': lambda f: f is None }})
    r"""Backup status, may be null."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Alliance name, may be null."""  
    