"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import ext_enum as shared_ext_enum
from ..shared import versionnumber_enum as shared_versionnumber_enum
from typing import Optional


@dataclasses.dataclass
class GetSearchVersionNumberReverseGeocodeCrossStreetPositionExtRequest:
    
    ext: shared_ext_enum.ExtEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'ext', 'style': 'simple', 'explode': False }})
    r"""Expected response format."""  
    position: str = dataclasses.field(metadata={'path_param': { 'field_name': 'position', 'style': 'simple', 'explode': False }})
    r"""This is specified as a comma separated string composed of lat., lon."""  
    version_number: shared_versionnumber_enum.VersionNumberEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'versionNumber', 'style': 'simple', 'explode': False }})
    r"""Service version number. The current value is 2."""  
    heading: Optional[float] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'heading', 'style': 'form', 'explode': True }})
    r"""The directional heading in degrees, usually similar to the course along a road segment. Entered in degrees, measured clockwise from north (so north is 0, east is 90, etc.)"""  
    language: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'language', 'style': 'form', 'explode': True }})
    r"""Language in which search results should be returned. Should be one of <a href=\\"/search-api/search-api-documentation/supported-languages\\">supported IETF language tags</a>, case insensitive."""  
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""Maximum number of cross-streets to return."""  
    radius: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'radius', 'style': 'form', 'explode': True }})
    r"""The maximum distance in meters from the specified position for the reverse geocoder to consider."""  
    spatial_keys: Optional[bool] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'spatialKeys', 'style': 'form', 'explode': True }})
    r"""If the \\"spatialKeys\\" flag is set, the response will also contain a proprietary geospatial keys for a specified location."""  
    

@dataclasses.dataclass
class GetSearchVersionNumberReverseGeocodeCrossStreetPositionExtResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    