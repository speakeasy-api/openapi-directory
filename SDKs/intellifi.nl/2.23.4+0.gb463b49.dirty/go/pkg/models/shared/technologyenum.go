// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TechnologyEnum - Type of technology that was used to detect this item.
type TechnologyEnum string

const (
	TechnologyEnumBluetooth TechnologyEnum = "bluetooth"
	TechnologyEnumOptical   TechnologyEnum = "optical"
	TechnologyEnumRfid      TechnologyEnum = "rfid"
)

func (e TechnologyEnum) ToPointer() *TechnologyEnum {
	return &e
}

func (e *TechnologyEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "bluetooth":
		fallthrough
	case "optical":
		fallthrough
	case "rfid":
		*e = TechnologyEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for TechnologyEnum: %v", v)
	}
}
