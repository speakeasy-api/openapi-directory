// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetIPSetXAmzTargetEnum
type GetIPSetXAmzTargetEnum string

const (
	GetIPSetXAmzTargetEnumAwswafRegional20161128GetIPSet GetIPSetXAmzTargetEnum = "AWSWAF_Regional_20161128.GetIPSet"
)

func (e GetIPSetXAmzTargetEnum) ToPointer() *GetIPSetXAmzTargetEnum {
	return &e
}

func (e *GetIPSetXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "AWSWAF_Regional_20161128.GetIPSet":
		*e = GetIPSetXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetIPSetXAmzTargetEnum: %v", v)
	}
}

type GetIPSetRequest struct {
	GetIPSetRequest   shared.GetIPSetRequest `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        GetIPSetXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type GetIPSetResponse struct {
	ContentType string
	// Success
	GetIPSetResponse *shared.GetIPSetResponse
	StatusCode       int
	RawResponse      *http.Response
	// WAFInternalErrorException
	WAFInternalErrorException interface{}
	// WAFInvalidAccountException
	WAFInvalidAccountException interface{}
	// WAFNonexistentItemException
	WAFNonexistentItemException interface{}
}
