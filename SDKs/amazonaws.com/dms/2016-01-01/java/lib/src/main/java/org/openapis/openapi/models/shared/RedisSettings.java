/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * RedisSettings - Provides information that defines a Redis target endpoint.
 */
public class RedisSettings {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AuthPassword")
    public String authPassword;

    public RedisSettings withAuthPassword(String authPassword) {
        this.authPassword = authPassword;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AuthType")
    public RedisAuthTypeValueEnum authType;

    public RedisSettings withAuthType(RedisAuthTypeValueEnum authType) {
        this.authType = authType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AuthUserName")
    public String authUserName;

    public RedisSettings withAuthUserName(String authUserName) {
        this.authUserName = authUserName;
        return this;
    }
    
    @JsonProperty("Port")
    public Long port;

    public RedisSettings withPort(Long port) {
        this.port = port;
        return this;
    }
    
    @JsonProperty("ServerName")
    public String serverName;

    public RedisSettings withServerName(String serverName) {
        this.serverName = serverName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SslCaCertificateArn")
    public String sslCaCertificateArn;

    public RedisSettings withSslCaCertificateArn(String sslCaCertificateArn) {
        this.sslCaCertificateArn = sslCaCertificateArn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("SslSecurityProtocol")
    public SslSecurityProtocolValueEnum sslSecurityProtocol;

    public RedisSettings withSslSecurityProtocol(SslSecurityProtocolValueEnum sslSecurityProtocol) {
        this.sslSecurityProtocol = sslSecurityProtocol;
        return this;
    }
    
    public RedisSettings(@JsonProperty("Port") Long port, @JsonProperty("ServerName") String serverName) {
        this.port = port;
        this.serverName = serverName;
  }
}
