/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NullableTeamSimple } from "./nullableteamsimple";
import { Expose, Type } from "class-transformer";

export class TeamPermissions extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "admin" })
  admin: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "maintain" })
  maintain: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "pull" })
  pull: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "push" })
  push: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "triage" })
  triage: boolean;
}

/**
 * Groups of organization members that gives permissions on specified repositories.
 */
export class Team extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description: string;

  @SpeakeasyMetadata()
  @Expose({ name: "html_url" })
  htmlUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: number;

  @SpeakeasyMetadata()
  @Expose({ name: "members_url" })
  membersUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "node_id" })
  nodeId: string;

  /**
   * Groups of organization members that gives permissions on specified repositories.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent" })
  @Type(() => NullableTeamSimple)
  parent: NullableTeamSimple;

  @SpeakeasyMetadata()
  @Expose({ name: "permission" })
  permission: string;

  @SpeakeasyMetadata()
  @Expose({ name: "permissions" })
  @Type(() => TeamPermissions)
  permissions?: TeamPermissions;

  @SpeakeasyMetadata()
  @Expose({ name: "privacy" })
  privacy?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "repositories_url" })
  repositoriesUrl: string;

  @SpeakeasyMetadata()
  @Expose({ name: "slug" })
  slug: string;

  @SpeakeasyMetadata()
  @Expose({ name: "url" })
  url: string;
}
