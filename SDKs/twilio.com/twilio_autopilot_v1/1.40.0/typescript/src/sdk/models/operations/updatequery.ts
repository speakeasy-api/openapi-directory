/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const UpdateQueryServerList = ["https://autopilot.twilio.com"] as const;

export class UpdateQuerySecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class UpdateQueryUpdateQueryRequest extends SpeakeasyBase {
  /**
   * The SID of an optional reference to the [Sample](https://www.twilio.com/docs/autopilot/api/task-sample) created from the query.
   */
  @SpeakeasyMetadata({ data: "form, name=SampleSid" })
  sampleSid?: string;

  /**
   * The new status of the resource. Can be: `pending-review`, `reviewed`, or `discarded`
   */
  @SpeakeasyMetadata({ data: "form, name=Status" })
  status?: string;
}

export class UpdateQueryRequest extends SpeakeasyBase {
  /**
   * The SID of the [Assistant](https://www.twilio.com/docs/autopilot/api/assistant) that is the parent of the resource to update.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=AssistantSid",
  })
  assistantSid: string;

  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: UpdateQueryUpdateQueryRequest;

  /**
   * The Twilio-provided string that uniquely identifies the Query resource to update.
   */
  @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=Sid" })
  sid: string;
}

export class UpdateQueryResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * OK
   */
  @SpeakeasyMetadata()
  autopilotV1AssistantQuery?: shared.AutopilotV1AssistantQuery;
}
