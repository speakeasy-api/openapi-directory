/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * JSON template to produce a JSON-style HMAC Key metadata resource.
 */
export class HmacKeyMetadata extends SpeakeasyBase {
  /**
   * The ID of the HMAC Key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "accessId" })
  accessId?: string;

  /**
   * HTTP 1.1 Entity tag for the HMAC key.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * The ID of the HMAC key, including the Project ID and the Access ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The kind of item this is. For HMAC Key metadata, this is always storage#hmacKeyMetadata.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Project ID owning the service account to which the key authenticates.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "projectId" })
  projectId?: string;

  /**
   * The link to this resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "selfLink" })
  selfLink?: string;

  /**
   * The email address of the key's associated service account.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "serviceAccountEmail" })
  serviceAccountEmail?: string;

  /**
   * The state of the key. Can be one of ACTIVE, INACTIVE, or DELETED.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "state" })
  state?: string;

  /**
   * The creation time of the HMAC key in RFC 3339 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "timeCreated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  timeCreated?: Date;

  /**
   * The last modification time of the HMAC key metadata in RFC 3339 format.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updated?: Date;
}
