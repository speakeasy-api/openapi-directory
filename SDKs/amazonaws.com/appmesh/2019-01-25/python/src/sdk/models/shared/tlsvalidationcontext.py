"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import subjectalternativenames as shared_subjectalternativenames
from ..shared import tlsvalidationcontexttrust as shared_tlsvalidationcontexttrust
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class TLSValidationContext:
    r"""An object that represents how the proxy will validate its peer during Transport Layer Security (TLS) negotiation."""
    
    trust: shared_tlsvalidationcontexttrust.TLSValidationContextTrust = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('trust') }})  
    subject_alternative_names: Optional[shared_subjectalternativenames.SubjectAlternativeNames] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subjectAlternativeNames'), 'exclude': lambda f: f is None }})  
    