"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from enum import Enum
from typing import Optional

class GetMapVersionNumberTileLayerStyleZoomXYPbfLayerEnum(str, Enum):
    r"""Layer of tile to be rendered"""
    BASIC = 'basic'
    HYBRID = 'hybrid'
    LABELS = 'labels'

class GetMapVersionNumberTileLayerStyleZoomXYPbfStyleEnum(str, Enum):
    r"""Style of tile to be rendered"""
    MAIN = 'main'

class GetMapVersionNumberTileLayerStyleZoomXYPbfVersionNumberEnum(str, Enum):
    r"""Version of the service to call. The current version is 1"""
    ONE = '1'

class GetMapVersionNumberTileLayerStyleZoomXYPbfViewEnum(str, Enum):
    r"""Geopolitical view. Determines rendering of disputed areas. See the <a href=\\"/maps-api/maps-api-documentation-vector/tile\\">documentation</a> for an explanation of how this works in live services."""
    UNIFIED = 'Unified'
    IL = 'IL'
    IN = 'IN'

class GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum(str, Enum):
    r"""Zoom level of tile to be rendered"""
    ZERO = '0'
    ONE = '1'
    TWO = '2'
    THREE = '3'
    FOUR = '4'
    FIVE = '5'
    SIX = '6'
    SEVEN = '7'
    EIGHT = '8'
    NINE = '9'
    TEN = '10'
    ELEVEN = '11'
    TWELVE = '12'
    THIRTEEN = '13'
    FOURTEEN = '14'
    FIFTEEN = '15'
    SIXTEEN = '16'
    SEVENTEEN = '17'
    EIGHTEEN = '18'
    NINETEEN = '19'
    TWENTY = '20'
    TWENTY_ONE = '21'
    TWENTY_TWO = '22'


@dataclasses.dataclass
class GetMapVersionNumberTileLayerStyleZoomXYPbfRequest:
    
    layer: GetMapVersionNumberTileLayerStyleZoomXYPbfLayerEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'layer', 'style': 'simple', 'explode': False }})
    r"""Layer of tile to be rendered"""  
    style: GetMapVersionNumberTileLayerStyleZoomXYPbfStyleEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'style', 'style': 'simple', 'explode': False }})
    r"""Style of tile to be rendered"""  
    version_number: GetMapVersionNumberTileLayerStyleZoomXYPbfVersionNumberEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'versionNumber', 'style': 'simple', 'explode': False }})
    r"""Version of the service to call. The current version is 1"""  
    x: int = dataclasses.field(metadata={'path_param': { 'field_name': 'X', 'style': 'simple', 'explode': False }})
    r"""x coordinate of tile on zoom grid"""  
    y: int = dataclasses.field(metadata={'path_param': { 'field_name': 'Y', 'style': 'simple', 'explode': False }})
    r"""y coordinate of tile on zoom grid"""  
    zoom: GetMapVersionNumberTileLayerStyleZoomXYPbfZoomEnum = dataclasses.field(metadata={'path_param': { 'field_name': 'zoom', 'style': 'simple', 'explode': False }})
    r"""Zoom level of tile to be rendered"""  
    language: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'language', 'style': 'form', 'explode': True }})
    r"""Language to be used for labels in the response. The default is NGT: Neutral Ground Truth, which uses each place's local official language and script (where available). See the <a href=\\"/maps-api/maps-api-documentation-vector/tile\\">documentation</a> for a full list of options."""  
    view: Optional[GetMapVersionNumberTileLayerStyleZoomXYPbfViewEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'view', 'style': 'form', 'explode': True }})
    r"""Geopolitical view. Determines rendering of disputed areas. See the <a href=\\"/maps-api/maps-api-documentation-vector/tile\\">documentation</a> for an explanation of how this works in live services."""  
    

@dataclasses.dataclass
class GetMapVersionNumberTileLayerStyleZoomXYPbfResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    