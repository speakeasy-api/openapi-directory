"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class RenewalTermPeriodTypeEnum(str, Enum):
    r"""Unit of time that the renewal term is measured in."""
    MONTH = 'Month'
    YEAR = 'Year'
    DAY = 'Day'
    WEEK = 'Week'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RenewalTerm:
    
    period: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('period'), 'exclude': lambda f: f is None }})
    r"""Duration of the renewal term in months, years, days, or weeks, depending on the value of the `periodType` field."""  
    period_type: Optional[RenewalTermPeriodTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('periodType'), 'exclude': lambda f: f is None }})
    r"""Unit of time that the renewal term is measured in."""  
    