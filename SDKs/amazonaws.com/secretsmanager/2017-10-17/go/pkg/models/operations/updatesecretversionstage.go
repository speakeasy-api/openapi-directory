// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateSecretVersionStageXAmzTargetEnum
type UpdateSecretVersionStageXAmzTargetEnum string

const (
	UpdateSecretVersionStageXAmzTargetEnumSecretsmanagerUpdateSecretVersionStage UpdateSecretVersionStageXAmzTargetEnum = "secretsmanager.UpdateSecretVersionStage"
)

func (e UpdateSecretVersionStageXAmzTargetEnum) ToPointer() *UpdateSecretVersionStageXAmzTargetEnum {
	return &e
}

func (e *UpdateSecretVersionStageXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "secretsmanager.UpdateSecretVersionStage":
		*e = UpdateSecretVersionStageXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateSecretVersionStageXAmzTargetEnum: %v", v)
	}
}

type UpdateSecretVersionStageRequest struct {
	UpdateSecretVersionStageRequest shared.UpdateSecretVersionStageRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                   *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256               *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                  *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                        *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken               *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                   *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders               *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                      UpdateSecretVersionStageXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateSecretVersionStageResponse struct {
	ContentType string
	// InternalServiceError
	InternalServiceError interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	StatusCode             int
	RawResponse            *http.Response
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// Success
	UpdateSecretVersionStageResponse *shared.UpdateSecretVersionStageResponse
}
