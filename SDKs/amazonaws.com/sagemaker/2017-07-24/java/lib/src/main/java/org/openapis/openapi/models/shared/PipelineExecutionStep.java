/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * PipelineExecutionStep - An execution of a step in a pipeline.
 */
public class PipelineExecutionStep {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AttemptCount")
    public Long attemptCount;

    public PipelineExecutionStep withAttemptCount(Long attemptCount) {
        this.attemptCount = attemptCount;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("CacheHitResult")
    public CacheHitResult cacheHitResult;

    public PipelineExecutionStep withCacheHitResult(CacheHitResult cacheHitResult) {
        this.cacheHitResult = cacheHitResult;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("EndTime")
    public OffsetDateTime endTime;

    public PipelineExecutionStep withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("FailureReason")
    public String failureReason;

    public PipelineExecutionStep withFailureReason(String failureReason) {
        this.failureReason = failureReason;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Metadata")
    public PipelineExecutionStepMetadata metadata;

    public PipelineExecutionStep withMetadata(PipelineExecutionStepMetadata metadata) {
        this.metadata = metadata;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("StartTime")
    public OffsetDateTime startTime;

    public PipelineExecutionStep withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StepDescription")
    public String stepDescription;

    public PipelineExecutionStep withStepDescription(String stepDescription) {
        this.stepDescription = stepDescription;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StepDisplayName")
    public String stepDisplayName;

    public PipelineExecutionStep withStepDisplayName(String stepDisplayName) {
        this.stepDisplayName = stepDisplayName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StepName")
    public String stepName;

    public PipelineExecutionStep withStepName(String stepName) {
        this.stepName = stepName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("StepStatus")
    public StepStatusEnum stepStatus;

    public PipelineExecutionStep withStepStatus(StepStatusEnum stepStatus) {
        this.stepStatus = stepStatus;
        return this;
    }
    
    public PipelineExecutionStep(){}
}
