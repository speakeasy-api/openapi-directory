/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class DeleteRecordQueryParams {
    /**
     * Timestamp indicating when the deletion event occurred. &lt;code&gt;EventTime&lt;/code&gt; can be used to query data at a certain point in time.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=EventTime")
    public String eventTime;
    public DeleteRecordQueryParams withEventTime(String eventTime) {
        this.eventTime = eventTime;
        return this;
    }
    
    /**
     * The value for the &lt;code&gt;RecordIdentifier&lt;/code&gt; that uniquely identifies the record, in string format. 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=RecordIdentifierValueAsString")
    public String recordIdentifierValueAsString;
    public DeleteRecordQueryParams withRecordIdentifierValueAsString(String recordIdentifierValueAsString) {
        this.recordIdentifierValueAsString = recordIdentifierValueAsString;
        return this;
    }
    
    /**
     * A list of stores from which you're deleting the record. By default, Feature Store deletes the record from all of the stores that you're using for the &lt;code&gt;FeatureGroup&lt;/code&gt;.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=TargetStores")
    public org.openapis.openapi.models.shared.TargetStoreEnum[] targetStores;
    public DeleteRecordQueryParams withTargetStores(org.openapis.openapi.models.shared.TargetStoreEnum[] targetStores) {
        this.targetStores = targetStores;
        return this;
    }
    
}
