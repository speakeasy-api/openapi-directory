// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// DeleteUsersRequestDeleteConversationsEnum - Conversation channels delete mode.
// Conversation channel is any channel which only has two members one of which is the user being deleted.
//
// * null or empty string - doesn't delete any conversation channels
// * soft - marks all conversation channels as deleted (same effect as Delete Channels with 'hard' option disabled)
// * hard - deletes channel and all its data completely including messages (same effect as Delete Channels with 'hard' option enabled)
type DeleteUsersRequestDeleteConversationsEnum string

const (
	DeleteUsersRequestDeleteConversationsEnumSoft DeleteUsersRequestDeleteConversationsEnum = "soft"
	DeleteUsersRequestDeleteConversationsEnumHard DeleteUsersRequestDeleteConversationsEnum = "hard"
)

func (e *DeleteUsersRequestDeleteConversationsEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "soft":
		fallthrough
	case "hard":
		*e = DeleteUsersRequestDeleteConversationsEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteUsersRequestDeleteConversationsEnum: %s", s)
	}
}

// DeleteUsersRequestDeleteMessagesEnum - Message delete mode.
//
// * null or empty string - doesn't delete user messages
// * soft - marks all user messages as deleted without removing any related message data
// * pruning - marks all user messages as deleted, nullifies message information and removes some message data such as reactions and flags
// * hard - deletes messages completely with all related information
type DeleteUsersRequestDeleteMessagesEnum string

const (
	DeleteUsersRequestDeleteMessagesEnumSoft    DeleteUsersRequestDeleteMessagesEnum = "soft"
	DeleteUsersRequestDeleteMessagesEnumPruning DeleteUsersRequestDeleteMessagesEnum = "pruning"
	DeleteUsersRequestDeleteMessagesEnumHard    DeleteUsersRequestDeleteMessagesEnum = "hard"
)

func (e *DeleteUsersRequestDeleteMessagesEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "soft":
		fallthrough
	case "pruning":
		fallthrough
	case "hard":
		*e = DeleteUsersRequestDeleteMessagesEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteUsersRequestDeleteMessagesEnum: %s", s)
	}
}

// DeleteUsersRequestDeleteUserEnum - User delete mode.
//
// * soft - marks user as deleted and retains all user data
// * pruning - marks user as deleted and nullifies user information
// * hard - deletes user completely. Requires 'hard' option for messages and conversations as well
type DeleteUsersRequestDeleteUserEnum string

const (
	DeleteUsersRequestDeleteUserEnumSoft    DeleteUsersRequestDeleteUserEnum = "soft"
	DeleteUsersRequestDeleteUserEnumPruning DeleteUsersRequestDeleteUserEnum = "pruning"
	DeleteUsersRequestDeleteUserEnumHard    DeleteUsersRequestDeleteUserEnum = "hard"
)

func (e *DeleteUsersRequestDeleteUserEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "soft":
		fallthrough
	case "pruning":
		fallthrough
	case "hard":
		*e = DeleteUsersRequestDeleteUserEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteUsersRequestDeleteUserEnum: %s", s)
	}
}

type DeleteUsersRequest struct {
	// Conversation channels delete mode.
	// Conversation channel is any channel which only has two members one of which is the user being deleted.
	//
	// * null or empty string - doesn't delete any conversation channels
	// * soft - marks all conversation channels as deleted (same effect as Delete Channels with 'hard' option disabled)
	// * hard - deletes channel and all its data completely including messages (same effect as Delete Channels with 'hard' option enabled)
	//
	Conversations *DeleteUsersRequestDeleteConversationsEnum `json:"conversations,omitempty"`
	// Message delete mode.
	//
	// * null or empty string - doesn't delete user messages
	// * soft - marks all user messages as deleted without removing any related message data
	// * pruning - marks all user messages as deleted, nullifies message information and removes some message data such as reactions and flags
	// * hard - deletes messages completely with all related information
	//
	Messages          *DeleteUsersRequestDeleteMessagesEnum `json:"messages,omitempty"`
	NewChannelOwnerID *string                               `json:"new_channel_owner_id,omitempty"`
	// User delete mode.
	//
	// * soft - marks user as deleted and retains all user data
	// * pruning - marks user as deleted and nullifies user information
	// * hard - deletes user completely. Requires 'hard' option for messages and conversations as well
	//
	User *DeleteUsersRequestDeleteUserEnum `json:"user,omitempty"`
	// IDs of users to delete
	UserIds []string `json:"user_ids"`
}
