"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import activedirectoryconfiguration as shared_activedirectoryconfiguration
from ..shared import computefarmconfiguration as shared_computefarmconfiguration
from ..shared import licenseserviceconfiguration as shared_licenseserviceconfiguration
from ..shared import sharedfilesystemconfiguration as shared_sharedfilesystemconfiguration
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class StudioComponentConfiguration:
    r"""The configuration of the studio component, based on component type."""
    
    active_directory_configuration: Optional[shared_activedirectoryconfiguration.ActiveDirectoryConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('activeDirectoryConfiguration'), 'exclude': lambda f: f is None }})  
    compute_farm_configuration: Optional[shared_computefarmconfiguration.ComputeFarmConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('computeFarmConfiguration'), 'exclude': lambda f: f is None }})  
    license_service_configuration: Optional[shared_licenseserviceconfiguration.LicenseServiceConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('licenseServiceConfiguration'), 'exclude': lambda f: f is None }})  
    shared_file_system_configuration: Optional[shared_sharedfilesystemconfiguration.SharedFileSystemConfiguration] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sharedFileSystemConfiguration'), 'exclude': lambda f: f is None }})  
    