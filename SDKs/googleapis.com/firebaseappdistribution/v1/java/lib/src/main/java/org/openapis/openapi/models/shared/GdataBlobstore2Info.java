/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;



/**
 * GdataBlobstore2Info - Information to read/write to blobstore2.
 */
public class GdataBlobstore2Info {
    /**
     * The blob generation id.
     */
    
    public String blobGeneration;

    public GdataBlobstore2Info withBlobGeneration(String blobGeneration) {
        this.blobGeneration = blobGeneration;
        return this;
    }
    
    /**
     * The blob id, e.g., /blobstore/prod/playground/scotty
     */
    
    public String blobId;

    public GdataBlobstore2Info withBlobId(String blobId) {
        this.blobId = blobId;
        return this;
    }
    
    /**
     * Read handle passed from Bigstore -&gt; Scotty for a GCS download. This is a signed, serialized blobstore2.ReadHandle proto which must never be set outside of Bigstore, and is not applicable to non-GCS media downloads.
     */
    
    public String downloadReadHandle;

    public GdataBlobstore2Info withDownloadReadHandle(String downloadReadHandle) {
        this.downloadReadHandle = downloadReadHandle;
        return this;
    }
    
    /**
     * The blob read token. Needed to read blobs that have not been replicated. Might not be available until the final call.
     */
    
    public String readToken;

    public GdataBlobstore2Info withReadToken(String readToken) {
        this.readToken = readToken;
        return this;
    }
    
    /**
     * Metadata passed from Blobstore -&gt; Scotty for a new GCS upload. This is a signed, serialized blobstore2.BlobMetadataContainer proto which must never be consumed outside of Bigstore, and is not applicable to non-GCS media uploads.
     */
    
    public String uploadMetadataContainer;

    public GdataBlobstore2Info withUploadMetadataContainer(String uploadMetadataContainer) {
        this.uploadMetadataContainer = uploadMetadataContainer;
        return this;
    }
    
    public GdataBlobstore2Info(){}
}
