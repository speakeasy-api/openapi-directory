"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchemaResponsesReadResponse = exports.SchemaResponsesReadSchemaResponses = exports.SchemaResponsesReadSchemaResponsesRelationships = exports.SchemaResponsesReadSchemaResponsesLinks = exports.SchemaResponsesReadSchemaResponsesAttributes = exports.SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum = exports.SchemaResponsesReadRequest = void 0;
var utils_1 = require("../../../internal/utils");
var SchemaResponsesReadRequest = /** @class */ (function (_super) {
    __extends(SchemaResponsesReadRequest, _super);
    function SchemaResponsesReadRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=schema_response_id",
        }),
        __metadata("design:type", String)
    ], SchemaResponsesReadRequest.prototype, "schemaResponseId", void 0);
    return SchemaResponsesReadRequest;
}(utils_1.SpeakeasyBase));
exports.SchemaResponsesReadRequest = SchemaResponsesReadRequest;
/**
 * A string that represents Schema Response state. `initial` is the state of a Schema Response on a newly registered Registration, to edit a Schema Response you must create a Schema Response Action that triggers a new submission.
 */
var SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum;
(function (SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum) {
    SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum["Initial"] = "initial";
    SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum["InProgress"] = "in_progress";
    SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum["Approved"] = "approved";
    SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum["PendingModeration"] = "pending_moderation";
})(SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum = exports.SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum || (exports.SchemaResponsesReadSchemaResponsesAttributesReviewsStateEnum = {}));
/**
 * The properties of the Schema Response.
 */
var SchemaResponsesReadSchemaResponsesAttributes = /** @class */ (function (_super) {
    __extends(SchemaResponsesReadSchemaResponsesAttributes, _super);
    function SchemaResponsesReadSchemaResponsesAttributes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], SchemaResponsesReadSchemaResponsesAttributes.prototype, "dateCreated", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], SchemaResponsesReadSchemaResponsesAttributes.prototype, "dateModified", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], SchemaResponsesReadSchemaResponsesAttributes.prototype, "dateSubmitted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], SchemaResponsesReadSchemaResponsesAttributes.prototype, "isOriginalResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], SchemaResponsesReadSchemaResponsesAttributes.prototype, "isPendingCurrentUserApproval", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponsesReadSchemaResponsesAttributes.prototype, "reviewsState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponsesReadSchemaResponsesAttributes.prototype, "revisionJustification", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], SchemaResponsesReadSchemaResponsesAttributes.prototype, "revisionResponses", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Array)
    ], SchemaResponsesReadSchemaResponsesAttributes.prototype, "updatedResponseKeys", void 0);
    return SchemaResponsesReadSchemaResponsesAttributes;
}(utils_1.SpeakeasyBase));
exports.SchemaResponsesReadSchemaResponsesAttributes = SchemaResponsesReadSchemaResponsesAttributes;
/**
 * URLs to alternative representations of the Schema Response entity.
 */
var SchemaResponsesReadSchemaResponsesLinks = /** @class */ (function (_super) {
    __extends(SchemaResponsesReadSchemaResponsesLinks, _super);
    function SchemaResponsesReadSchemaResponsesLinks() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponsesReadSchemaResponsesLinks.prototype, "self", void 0);
    return SchemaResponsesReadSchemaResponsesLinks;
}(utils_1.SpeakeasyBase));
exports.SchemaResponsesReadSchemaResponsesLinks = SchemaResponsesReadSchemaResponsesLinks;
/**
 * Links to other entities or entity collections that have a relationship to the file entity.
 */
var SchemaResponsesReadSchemaResponsesRelationships = /** @class */ (function (_super) {
    __extends(SchemaResponsesReadSchemaResponsesRelationships, _super);
    function SchemaResponsesReadSchemaResponsesRelationships() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponsesReadSchemaResponsesRelationships.prototype, "actions", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponsesReadSchemaResponsesRelationships.prototype, "initiatedBy", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponsesReadSchemaResponsesRelationships.prototype, "registration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponsesReadSchemaResponsesRelationships.prototype, "registrationSchema", void 0);
    return SchemaResponsesReadSchemaResponsesRelationships;
}(utils_1.SpeakeasyBase));
exports.SchemaResponsesReadSchemaResponsesRelationships = SchemaResponsesReadSchemaResponsesRelationships;
/**
 * OK
 */
var SchemaResponsesReadSchemaResponses = /** @class */ (function (_super) {
    __extends(SchemaResponsesReadSchemaResponses, _super);
    function SchemaResponsesReadSchemaResponses() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", SchemaResponsesReadSchemaResponsesAttributes)
    ], SchemaResponsesReadSchemaResponses.prototype, "attributes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponsesReadSchemaResponses.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", SchemaResponsesReadSchemaResponsesLinks)
    ], SchemaResponsesReadSchemaResponses.prototype, "links", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", SchemaResponsesReadSchemaResponsesRelationships)
    ], SchemaResponsesReadSchemaResponses.prototype, "relationships", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponsesReadSchemaResponses.prototype, "type", void 0);
    return SchemaResponsesReadSchemaResponses;
}(utils_1.SpeakeasyBase));
exports.SchemaResponsesReadSchemaResponses = SchemaResponsesReadSchemaResponses;
var SchemaResponsesReadResponse = /** @class */ (function (_super) {
    __extends(SchemaResponsesReadResponse, _super);
    function SchemaResponsesReadResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Uint8Array)
    ], SchemaResponsesReadResponse.prototype, "body", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], SchemaResponsesReadResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], SchemaResponsesReadResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], SchemaResponsesReadResponse.prototype, "rawResponse", void 0);
    return SchemaResponsesReadResponse;
}(utils_1.SpeakeasyBase));
exports.SchemaResponsesReadResponse = SchemaResponsesReadResponse;
