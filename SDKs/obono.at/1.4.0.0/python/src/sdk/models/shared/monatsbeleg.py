"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Monatsbeleg:
    
    beleg_uuid: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Beleg-UUID'), 'exclude': lambda f: f is None }})  
    fon_geprueft_datum_uhrzeit: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FON-Geprueft-Datum-Uhrzeit'), 'exclude': lambda f: f is None }})  
    fon_geprueft_erfolgreich: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('FON-Geprueft-Erfolgreich'), 'exclude': lambda f: f is None }})  
    jahr: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Jahr'), 'exclude': lambda f: f is None }})  
    monat: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('Monat'), 'exclude': lambda f: f is None }})  
    