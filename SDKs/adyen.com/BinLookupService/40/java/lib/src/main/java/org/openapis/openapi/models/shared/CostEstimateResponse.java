/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CostEstimateResponse - OK - the request has succeeded.
 */
public class CostEstimateResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cardBin")
    public CardBin cardBin;
    public CostEstimateResponse withCardBin(CardBin cardBin) {
        this.cardBin = cardBin;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("costEstimateAmount")
    public Amount costEstimateAmount;
    public CostEstimateResponse withCostEstimateAmount(Amount costEstimateAmount) {
        this.costEstimateAmount = costEstimateAmount;
        return this;
    }
    
    /**
     * The result of the cost estimation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("resultCode")
    public String resultCode;
    public CostEstimateResponse withResultCode(String resultCode) {
        this.resultCode = resultCode;
        return this;
    }
    
    /**
     * Indicates the way the charges can be passed on to the cardholder. The following values are possible:
     * * `ZERO` - the charges are not allowed to pass on
     * * `PASSTHROUGH` - the charges can be passed on
     * * `UNLIMITED` - there is no limit on how much surcharge is passed on
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("surchargeType")
    public String surchargeType;
    public CostEstimateResponse withSurchargeType(String surchargeType) {
        this.surchargeType = surchargeType;
        return this;
    }
    
}
