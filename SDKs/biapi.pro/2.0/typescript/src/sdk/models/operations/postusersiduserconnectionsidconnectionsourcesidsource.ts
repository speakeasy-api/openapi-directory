/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PostUsersIdUserConnectionsIdConnectionSourcesIdSourceRequestBody extends SpeakeasyBase {
  /**
   * to enable or disable connector source
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=disabled" })
  disabled?: boolean;

  /**
   * whether to force a synchronization on the source if it's not disabled
   */
  @SpeakeasyMetadata({ data: "multipart_form, name=synchronize" })
  synchronize?: boolean;
}

export class PostUsersIdUserConnectionsIdConnectionSourcesIdSourceRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=multipart/form-data" })
  requestBody?: PostUsersIdUserConnectionsIdConnectionSourcesIdSourceRequestBody;

  /**
   * do the synchronization in background (to use with the sysynchronizenc parameter)
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=background",
  })
  background?: boolean;

  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=expand",
  })
  expand?: string;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_connection",
  })
  idConnection: number;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_source",
  })
  idSource: number;

  /**
   * Hint: you can use 'me' or 'all'
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=id_user",
  })
  idUser: string;
}

export class PostUsersIdUserConnectionsIdConnectionSourcesIdSourceResponse extends SpeakeasyBase {
  /**
   * Successful POST on ConnectionSource resource
   */
  @SpeakeasyMetadata()
  connectionSource?: shared.ConnectionSource;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
