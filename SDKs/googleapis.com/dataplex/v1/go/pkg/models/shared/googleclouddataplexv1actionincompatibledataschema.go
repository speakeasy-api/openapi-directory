// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GoogleCloudDataplexV1ActionIncompatibleDataSchemaSchemaChangeEnum - Whether the action relates to a schema that is incompatible or modified.
type GoogleCloudDataplexV1ActionIncompatibleDataSchemaSchemaChangeEnum string

const (
	GoogleCloudDataplexV1ActionIncompatibleDataSchemaSchemaChangeEnumSchemaChangeUnspecified GoogleCloudDataplexV1ActionIncompatibleDataSchemaSchemaChangeEnum = "SCHEMA_CHANGE_UNSPECIFIED"
	GoogleCloudDataplexV1ActionIncompatibleDataSchemaSchemaChangeEnumIncompatible            GoogleCloudDataplexV1ActionIncompatibleDataSchemaSchemaChangeEnum = "INCOMPATIBLE"
	GoogleCloudDataplexV1ActionIncompatibleDataSchemaSchemaChangeEnumModified                GoogleCloudDataplexV1ActionIncompatibleDataSchemaSchemaChangeEnum = "MODIFIED"
)

func (e GoogleCloudDataplexV1ActionIncompatibleDataSchemaSchemaChangeEnum) ToPointer() *GoogleCloudDataplexV1ActionIncompatibleDataSchemaSchemaChangeEnum {
	return &e
}

func (e *GoogleCloudDataplexV1ActionIncompatibleDataSchemaSchemaChangeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SCHEMA_CHANGE_UNSPECIFIED":
		fallthrough
	case "INCOMPATIBLE":
		fallthrough
	case "MODIFIED":
		*e = GoogleCloudDataplexV1ActionIncompatibleDataSchemaSchemaChangeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GoogleCloudDataplexV1ActionIncompatibleDataSchemaSchemaChangeEnum: %v", v)
	}
}

// GoogleCloudDataplexV1ActionIncompatibleDataSchema - Action details for incompatible schemas detected by discovery.
type GoogleCloudDataplexV1ActionIncompatibleDataSchema struct {
	// The existing and expected schema of the table. The schema is provided as a JSON formatted structure listing columns and data types.
	ExistingSchema *string `json:"existingSchema,omitempty"`
	// The new and incompatible schema within the table. The schema is provided as a JSON formatted structured listing columns and data types.
	NewSchema *string `json:"newSchema,omitempty"`
	// The list of data locations sampled and used for format/schema inference.
	SampledDataLocations []string `json:"sampledDataLocations,omitempty"`
	// Whether the action relates to a schema that is incompatible or modified.
	SchemaChange *GoogleCloudDataplexV1ActionIncompatibleDataSchemaSchemaChangeEnum `json:"schemaChange,omitempty"`
	// The name of the table containing invalid data.
	Table *string `json:"table,omitempty"`
}
