"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import weekdayofmonth as shared_weekdayofmonth
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MonthlySchedule:
    r"""Represents a monthly schedule. An example of a valid monthly schedule is \\"on the third Tuesday of the month\\" or \\"on the 15th of the month\\"."""
    
    month_day: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('monthDay'), 'exclude': lambda f: f is None }})
    r"""Required. One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month. Months without the target day will be skipped. For example, a schedule to run \\"every month on the 31st\\" will not run in February, April, June, etc."""  
    week_day_of_month: Optional[shared_weekdayofmonth.WeekDayOfMonth] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('weekDayOfMonth'), 'exclude': lambda f: f is None }})
    r"""Represents one week day in a month. An example is \\"the 4th Sunday\\"."""  
    