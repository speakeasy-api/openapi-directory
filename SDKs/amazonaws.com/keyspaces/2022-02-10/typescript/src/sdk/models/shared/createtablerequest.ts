/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { CapacitySpecification } from "./capacityspecification";
import { ClientSideTimestamps } from "./clientsidetimestamps";
import { Comment } from "./comment";
import { EncryptionSpecification } from "./encryptionspecification";
import { PointInTimeRecovery } from "./pointintimerecovery";
import { SchemaDefinition } from "./schemadefinition";
import { Tag } from "./tag";
import { TimeToLive } from "./timetolive";
import { Expose, Type } from "class-transformer";

export class CreateTableRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "capacitySpecification" })
  @Type(() => CapacitySpecification)
  capacitySpecification?: CapacitySpecification;

  @SpeakeasyMetadata()
  @Expose({ name: "clientSideTimestamps" })
  @Type(() => ClientSideTimestamps)
  clientSideTimestamps?: ClientSideTimestamps;

  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  @Type(() => Comment)
  comment?: Comment;

  @SpeakeasyMetadata()
  @Expose({ name: "defaultTimeToLive" })
  defaultTimeToLive?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "encryptionSpecification" })
  @Type(() => EncryptionSpecification)
  encryptionSpecification?: EncryptionSpecification;

  @SpeakeasyMetadata()
  @Expose({ name: "keyspaceName" })
  keyspaceName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "pointInTimeRecovery" })
  @Type(() => PointInTimeRecovery)
  pointInTimeRecovery?: PointInTimeRecovery;

  @SpeakeasyMetadata()
  @Expose({ name: "schemaDefinition" })
  @Type(() => SchemaDefinition)
  schemaDefinition: SchemaDefinition;

  @SpeakeasyMetadata()
  @Expose({ name: "tableName" })
  tableName: string;

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "tags" })
  @Type(() => Tag)
  tags?: Tag[];

  @SpeakeasyMetadata()
  @Expose({ name: "ttl" })
  @Type(() => TimeToLive)
  ttl?: TimeToLive;
}
