"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ConditionEvaluationEvaluationValueEnum(str, Enum):
    r"""The evaluation result."""
    EVALUATION_VALUE_UNSPECIFIED = 'EVALUATION_VALUE_UNSPECIFIED'
    TRUE = 'TRUE'
    FALSE = 'FALSE'
    CONDITIONAL = 'CONDITIONAL'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConditionEvaluation:
    r"""The Condition evaluation."""
    
    evaluation_value: Optional[ConditionEvaluationEvaluationValueEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('evaluationValue'), 'exclude': lambda f: f is None }})
    r"""The evaluation result."""  
    