/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Domain - The intended behavior and status information of a domain.
 */
public class Domain {
    /**
     * Required. The domain name of the association.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domainName")
    public String domainName;

    public Domain withDomainName(String domainName) {
        this.domainName = domainName;
        return this;
    }
    
    /**
     * Defines the behavior of a domain-level redirect. Domain redirects preserve the path of the redirect but replace the requested domain with the one specified in the redirect configuration.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("domainRedirect")
    public DomainRedirect domainRedirect;

    public Domain withDomainRedirect(DomainRedirect domainRedirect) {
        this.domainRedirect = domainRedirect;
        return this;
    }
    
    /**
     * The current certificate provisioning status information for a domain.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("provisioning")
    public DomainProvisioning provisioning;

    public Domain withProvisioning(DomainProvisioning provisioning) {
        this.provisioning = provisioning;
        return this;
    }
    
    /**
     * Required. The site name of the association.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("site")
    public String site;

    public Domain withSite(String site) {
        this.site = site;
        return this;
    }
    
    /**
     * Output only. Additional status of the domain association.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("status")
    public DomainStatusEnum status;

    public Domain withStatus(DomainStatusEnum status) {
        this.status = status;
        return this;
    }
    
    /**
     * Output only. The time at which the domain was last updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("updateTime")
    public String updateTime;

    public Domain withUpdateTime(String updateTime) {
        this.updateTime = updateTime;
        return this;
    }
    
    public Domain(){}
}
