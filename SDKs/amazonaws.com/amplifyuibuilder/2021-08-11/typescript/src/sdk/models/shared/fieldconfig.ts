/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FieldInputConfig } from "./fieldinputconfig";
import { FieldPosition } from "./fieldposition";
import { FieldValidationConfiguration } from "./fieldvalidationconfiguration";
import { Expose, Type } from "class-transformer";

/**
 * Describes the configuration information for a field in a table.
 */
export class FieldConfig extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "excluded" })
  excluded?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "inputType" })
  @Type(() => FieldInputConfig)
  inputType?: FieldInputConfig;

  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "position" })
  @Type(() => FieldPosition)
  position?: FieldPosition;

  @SpeakeasyMetadata({ elemType: FieldValidationConfiguration })
  @Expose({ name: "validations" })
  @Type(() => FieldValidationConfiguration)
  validations?: FieldValidationConfiguration[];
}
