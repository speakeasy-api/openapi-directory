// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CountriesGetV2CountriesGetOrderByCountriesOrderEnum - An enumeration.
type CountriesGetV2CountriesGetOrderByCountriesOrderEnum string

const (
	CountriesGetV2CountriesGetOrderByCountriesOrderEnumCountry      CountriesGetV2CountriesGetOrderByCountriesOrderEnum = "country"
	CountriesGetV2CountriesGetOrderByCountriesOrderEnumFirstUpdated CountriesGetV2CountriesGetOrderByCountriesOrderEnum = "firstUpdated"
	CountriesGetV2CountriesGetOrderByCountriesOrderEnumLastUpdated  CountriesGetV2CountriesGetOrderByCountriesOrderEnum = "lastUpdated"
	CountriesGetV2CountriesGetOrderByCountriesOrderEnumLocations    CountriesGetV2CountriesGetOrderByCountriesOrderEnum = "locations"
	CountriesGetV2CountriesGetOrderByCountriesOrderEnumCount        CountriesGetV2CountriesGetOrderByCountriesOrderEnum = "count"
)

func (e *CountriesGetV2CountriesGetOrderByCountriesOrderEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "country":
		fallthrough
	case "firstUpdated":
		fallthrough
	case "lastUpdated":
		fallthrough
	case "locations":
		fallthrough
	case "count":
		*e = CountriesGetV2CountriesGetOrderByCountriesOrderEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CountriesGetV2CountriesGetOrderByCountriesOrderEnum: %s", s)
	}
}

// CountriesGetV2CountriesGetSortSortEnum - An enumeration.
type CountriesGetV2CountriesGetSortSortEnum string

const (
	CountriesGetV2CountriesGetSortSortEnumAsc  CountriesGetV2CountriesGetSortSortEnum = "asc"
	CountriesGetV2CountriesGetSortSortEnumDesc CountriesGetV2CountriesGetSortSortEnum = "desc"
)

func (e *CountriesGetV2CountriesGetSortSortEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "asc":
		fallthrough
	case "desc":
		*e = CountriesGetV2CountriesGetSortSortEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CountriesGetV2CountriesGetSortSortEnum: %s", s)
	}
}

type CountriesGetV2CountriesGetRequest struct {
	//         Limit results by a certain country using two letter country code.
	//         (ex. ?country=US or ?country=US&country=MX)
	//
	Country []string `queryParam:"style=form,explode=true,name=country"`
	//         Limit results by a certain country using two letter country code.
	//         (ex. /US)
	//
	CountryID *string `queryParam:"style=form,explode=true,name=country_id"`
	Limit     *int64  `queryParam:"style=form,explode=true,name=limit"`
	Offset    *int64  `queryParam:"style=form,explode=true,name=offset"`
	// An enumeration.
	OrderBy *CountriesGetV2CountriesGetOrderByCountriesOrderEnum `queryParam:"style=form,explode=true,name=order_by"`
	// Paginate through results.
	Page *int64 `queryParam:"style=form,explode=true,name=page"`
	// Define sort order.
	Sort *CountriesGetV2CountriesGetSortSortEnum `queryParam:"style=form,explode=true,name=sort"`
}

type CountriesGetV2CountriesGetResponse struct {
	ContentType string
	// Validation Error
	HTTPValidationError *shared.HTTPValidationError
	// Successful Response
	OpenAQCountriesResult *shared.OpenAQCountriesResult
	StatusCode            int
	RawResponse           *http.Response
}
