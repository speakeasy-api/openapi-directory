/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * Type of domain ("system"/"go"/"personal"/"dedicated"). If not specified default is "system"
 */
export enum DomainsCountTypeEnum {
  System = "system",
  Go = "go",
  Personal = "personal",
  Dedicated = "dedicated",
}

export class DomainsCountRequest extends SpeakeasyBase {
  /**
   * Filter domains with this anmen
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=name" })
  name?: string;

  /**
   * Type of domain ("system"/"go"/"personal"/"dedicated"). If not specified default is "system"
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=type" })
  type?: DomainsCountTypeEnum;
}

export class DomainsCountResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  apiCoreResponsesCountResponce?: shared.ApiCoreResponsesCountResponce;

  @SpeakeasyMetadata()
  body?: Uint8Array;

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
