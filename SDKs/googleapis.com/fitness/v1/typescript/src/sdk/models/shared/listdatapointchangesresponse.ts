/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { DataPoint } from "./datapoint";
import { Expose, Type } from "class-transformer";

/**
 * Successful response
 */
export class ListDataPointChangesResponse extends SpeakeasyBase {
  /**
   * The data stream ID of the data source with data point changes.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "dataSourceId" })
  dataSourceId?: string;

  /**
   * Deleted data points for the user. Note, for modifications this should be parsed before handling insertions.
   */
  @SpeakeasyMetadata({ elemType: DataPoint })
  @Expose({ name: "deletedDataPoint" })
  @Type(() => DataPoint)
  deletedDataPoint?: DataPoint[];

  /**
   * Inserted data points for the user.
   */
  @SpeakeasyMetadata({ elemType: DataPoint })
  @Expose({ name: "insertedDataPoint" })
  @Type(() => DataPoint)
  insertedDataPoint?: DataPoint[];

  /**
   * The continuation token, which is used to page through large result sets. Provide this value in a subsequent request to return the next page of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;
}
