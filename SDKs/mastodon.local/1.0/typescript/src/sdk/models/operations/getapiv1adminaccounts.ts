/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class GetApiV1AdminAccountsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=bearer;name=Authorization",
  })
  bearerAuth: string;
}

export class GetApiV1AdminAccountsRequest extends SpeakeasyBase {
  /**
   * Filter for currently active accounts?
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=active",
  })
  active?: boolean;

  /**
   * Filter by the given domain
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=by_domain",
  })
  byDomain?: string;

  /**
   * Filter for currently disabled accounts?
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=disabled",
  })
  disabled?: boolean;

  /**
   * Display name to search for
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=display_name",
  })
  displayName?: string;

  /**
   * Lookup a user with this email
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=email" })
  email?: string;

  /**
   * Lookup a user with this IP
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=ip" })
  ip?: string;

  /**
   * Filter for local accounts?
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=local" })
  local?: boolean;

  /**
   * Filter for currently pending accounts?
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=pending",
  })
  pending?: boolean;

  /**
   * Filter for remote accounts?
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=remote",
  })
  remote?: boolean;

  /**
   * Filter for currently silenced accounts?
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=silenced",
  })
  silenced?: boolean;

  /**
   * Filter for staff accounts?
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=staff" })
  staff?: boolean;

  /**
   * Filter for currently suspended accounts?
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=suspended",
  })
  suspended?: boolean;

  /**
   * Username to search for
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=username",
  })
  username?: string;
}

export class GetApiV1AdminAccountsResponse extends SpeakeasyBase {
  /**
   * Success
   */
  @SpeakeasyMetadata({ elemType: shared.AdminAccount })
  adminAccounts?: shared.AdminAccount[];

  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
