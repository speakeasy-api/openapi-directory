/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class DistrictRankingEventPoints extends SpeakeasyBase {
  /**
   * Points awarded for alliance selection.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "alliance_points" })
  alliancePoints: number;

  /**
   * Points awarded for event awards.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "award_points" })
  awardPoints: number;

  /**
   * `true` if this event is a District Championship event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "district_cmp" })
  districtCmp: boolean;

  /**
   * Points awarded for elimination match performance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "elim_points" })
  elimPoints: number;

  /**
   * TBA Event key for this event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "event_key" })
  eventKey: string;

  /**
   * Points awarded for qualification match performance.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "qual_points" })
  qualPoints: number;

  /**
   * Total points awarded at this event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "total" })
  total: number;
}

/**
 * Rank of a team in a district.
 */
export class DistrictRanking extends SpeakeasyBase {
  /**
   * List of events that contributed to the point total for the team.
   */
  @SpeakeasyMetadata({ elemType: DistrictRankingEventPoints })
  @Expose({ name: "event_points" })
  @Type(() => DistrictRankingEventPoints)
  eventPoints?: DistrictRankingEventPoints[];

  /**
   * Total district points for the team.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "point_total" })
  pointTotal: number;

  /**
   * Numerical rank of the team, 1 being top rank.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rank" })
  rank: number;

  /**
   * Any points added to a team as a result of the rookie bonus.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "rookie_bonus" })
  rookieBonus?: number;

  /**
   * TBA team key for the team.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "team_key" })
  teamKey: string;
}
