"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import oauth2customparameter as shared_oauth2customparameter
from ..shared import oauth2granttype_enum as shared_oauth2granttype_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OAuth2Defaults:
    r"""Contains the default values required for OAuth 2.0 authentication."""
    
    auth_code_urls: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authCodeUrls'), 'exclude': lambda f: f is None }})  
    oauth2_custom_properties: Optional[list[shared_oauth2customparameter.OAuth2CustomParameter]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oauth2CustomProperties'), 'exclude': lambda f: f is None }})  
    oauth2_grant_types_supported: Optional[list[shared_oauth2granttype_enum.OAuth2GrantTypeEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oauth2GrantTypesSupported'), 'exclude': lambda f: f is None }})  
    oauth_scopes: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('oauthScopes'), 'exclude': lambda f: f is None }})  
    token_urls: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tokenUrls'), 'exclude': lambda f: f is None }})  
    