// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DetectPHIXAmzTargetEnum
type DetectPHIXAmzTargetEnum string

const (
	DetectPHIXAmzTargetEnumComprehendMedical20181030DetectPhi DetectPHIXAmzTargetEnum = "ComprehendMedical_20181030.DetectPHI"
)

func (e DetectPHIXAmzTargetEnum) ToPointer() *DetectPHIXAmzTargetEnum {
	return &e
}

func (e *DetectPHIXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ComprehendMedical_20181030.DetectPHI":
		*e = DetectPHIXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DetectPHIXAmzTargetEnum: %v", v)
	}
}

type DetectPHIRequest struct {
	DetectPHIRequest  shared.DetectPHIRequest `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                 `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                 `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                 `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                 `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                 `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                 `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                 `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        DetectPHIXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DetectPHIResponse struct {
	ContentType string
	// Success
	DetectPHIResponse *shared.DetectPHIResponse
	// InternalServerException
	InternalServerException interface{}
	// InvalidEncodingException
	InvalidEncodingException interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	// TextSizeLimitExceededException
	TextSizeLimitExceededException interface{}
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
