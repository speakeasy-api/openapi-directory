"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TestCardRange = exports.TestCardRangeThreeDDirectoryServerResponseEnum = exports.TestCardRangeExpiryMonthEnum = void 0;
var utils_1 = require("../../../internal/utils");
var avsaddress_1 = require("./avsaddress");
var class_transformer_1 = require("class-transformer");
/**
 * Expiry month for the test card range.
 *
 * @remarks
 *
 * Allowed values:
 * * JANUARY
 * * FEBRUARY
 * * MARCH
 * * APRIL
 * * MAY
 * * JUNE
 * * JULY
 * * AUGUST
 * * SEPTEMBER
 * * OCTOBER
 * * NOVEMBER
 * * DECEMBER
 */
var TestCardRangeExpiryMonthEnum;
(function (TestCardRangeExpiryMonthEnum) {
    TestCardRangeExpiryMonthEnum["April"] = "APRIL";
    TestCardRangeExpiryMonthEnum["August"] = "AUGUST";
    TestCardRangeExpiryMonthEnum["December"] = "DECEMBER";
    TestCardRangeExpiryMonthEnum["February"] = "FEBRUARY";
    TestCardRangeExpiryMonthEnum["January"] = "JANUARY";
    TestCardRangeExpiryMonthEnum["July"] = "JULY";
    TestCardRangeExpiryMonthEnum["June"] = "JUNE";
    TestCardRangeExpiryMonthEnum["March"] = "MARCH";
    TestCardRangeExpiryMonthEnum["May"] = "MAY";
    TestCardRangeExpiryMonthEnum["November"] = "NOVEMBER";
    TestCardRangeExpiryMonthEnum["October"] = "OCTOBER";
    TestCardRangeExpiryMonthEnum["September"] = "SEPTEMBER";
})(TestCardRangeExpiryMonthEnum = exports.TestCardRangeExpiryMonthEnum || (exports.TestCardRangeExpiryMonthEnum = {}));
/**
 * 3D Secure server response. It notifies whether the specified card holder is enrolled in a 3D Secure service. Possible values:
 *
 * @remarks
 *
 * * Y (Authentication available)
 * * N (Card holder not enrolled/not participating)
 * * U (Unable to authenticate)
 */
var TestCardRangeThreeDDirectoryServerResponseEnum;
(function (TestCardRangeThreeDDirectoryServerResponseEnum) {
    TestCardRangeThreeDDirectoryServerResponseEnum["N"] = "N";
    TestCardRangeThreeDDirectoryServerResponseEnum["U"] = "U";
    TestCardRangeThreeDDirectoryServerResponseEnum["Y"] = "Y";
})(TestCardRangeThreeDDirectoryServerResponseEnum = exports.TestCardRangeThreeDDirectoryServerResponseEnum || (exports.TestCardRangeThreeDDirectoryServerResponseEnum = {}));
var TestCardRange = /** @class */ (function (_super) {
    __extends(TestCardRange, _super);
    function TestCardRange() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "address" }),
        (0, class_transformer_1.Type)(function () { return avsaddress_1.AvsAddress; }),
        __metadata("design:type", avsaddress_1.AvsAddress)
    ], TestCardRange.prototype, "address", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cardHolderName" }),
        __metadata("design:type", String)
    ], TestCardRange.prototype, "cardHolderName", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cvc" }),
        __metadata("design:type", String)
    ], TestCardRange.prototype, "cvc", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "expiryMonth" }),
        __metadata("design:type", String)
    ], TestCardRange.prototype, "expiryMonth", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "expiryYear" }),
        __metadata("design:type", Number)
    ], TestCardRange.prototype, "expiryYear", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rangeEnd" }),
        __metadata("design:type", String)
    ], TestCardRange.prototype, "rangeEnd", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "rangeStart" }),
        __metadata("design:type", String)
    ], TestCardRange.prototype, "rangeStart", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "threeDDirectoryServerResponse" }),
        __metadata("design:type", String)
    ], TestCardRange.prototype, "threeDDirectoryServerResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "threeDPassword" }),
        __metadata("design:type", String)
    ], TestCardRange.prototype, "threeDPassword", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "threeDUsername" }),
        __metadata("design:type", String)
    ], TestCardRange.prototype, "threeDUsername", void 0);
    return TestCardRange;
}(utils_1.SpeakeasyBase));
exports.TestCardRange = TestCardRange;
