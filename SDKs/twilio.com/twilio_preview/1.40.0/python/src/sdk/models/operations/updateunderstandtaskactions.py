"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import preview_understand_assistant_task_task_actions as shared_preview_understand_assistant_task_task_actions
from typing import Any, Optional

UPDATE_UNDERSTAND_TASK_ACTIONS_SERVERS = [
	"https://preview.twilio.com",
]


@dataclasses.dataclass
class UpdateUnderstandTaskActionsSecurity:
    
    password: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'password' }})  
    username: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'http', 'sub_type': 'basic', 'field_name': 'username' }})  
    

@dataclasses.dataclass
class UpdateUnderstandTaskActionsUpdateUnderstandTaskActionsRequest:
    
    actions: Optional[Any] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'Actions' }})
    r"""The JSON actions that instruct the Assistant how to perform this task."""  
    

@dataclasses.dataclass
class UpdateUnderstandTaskActionsRequest:
    
    assistant_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'AssistantSid', 'style': 'simple', 'explode': False }})
    r"""The unique ID of the parent Assistant."""  
    task_sid: str = dataclasses.field(metadata={'path_param': { 'field_name': 'TaskSid', 'style': 'simple', 'explode': False }})
    r"""The unique ID of the Task."""  
    request_body: Optional[UpdateUnderstandTaskActionsUpdateUnderstandTaskActionsRequest] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/x-www-form-urlencoded' }})  
    

@dataclasses.dataclass
class UpdateUnderstandTaskActionsResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    preview_understand_assistant_task_task_actions: Optional[shared_preview_understand_assistant_task_task_actions.PreviewUnderstandAssistantTaskTaskActions] = dataclasses.field(default=None)
    r"""OK"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    