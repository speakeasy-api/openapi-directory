"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import grafeasv1slsaprovenancezerotwoslsacompleteness as shared_grafeasv1slsaprovenancezerotwoslsacompleteness
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata:
    r"""Other properties of the build."""
    
    build_finished_on: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('buildFinishedOn'), 'exclude': lambda f: f is None }})  
    build_invocation_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('buildInvocationId'), 'exclude': lambda f: f is None }})  
    build_started_on: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('buildStartedOn'), 'exclude': lambda f: f is None }})  
    completeness: Optional[shared_grafeasv1slsaprovenancezerotwoslsacompleteness.GrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('completeness'), 'exclude': lambda f: f is None }})
    r"""Indicates that the builder claims certain fields in this message to be complete."""  
    reproducible: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('reproducible'), 'exclude': lambda f: f is None }})  
    