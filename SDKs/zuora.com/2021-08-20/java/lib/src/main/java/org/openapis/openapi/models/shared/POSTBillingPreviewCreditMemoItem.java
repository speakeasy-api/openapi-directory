/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

public class POSTBillingPreviewCreditMemoItem {
    /**
     * The amount of the credit memo item. For tax-inclusive credit memo items, the amount indicates the credit memo item amount including tax. For tax-exclusive credit memo items, the amount indicates the credit memo item amount excluding tax
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amount")
    public Double amount;
    public POSTBillingPreviewCreditMemoItem withAmount(Double amount) {
        this.amount = amount;
        return this;
    }
    
    /**
     * The credit memo item amount excluding tax.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("amountWithoutTax")
    public Double amountWithoutTax;
    public POSTBillingPreviewCreditMemoItem withAmountWithoutTax(Double amountWithoutTax) {
        this.amountWithoutTax = amountWithoutTax;
        return this;
    }
    
    /**
     * The unique ID of the credit memo item that the discount charge is applied to.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appliedToItemId")
    public String appliedToItemId;
    public POSTBillingPreviewCreditMemoItem withAppliedToItemId(String appliedToItemId) {
        this.appliedToItemId = appliedToItemId;
        return this;
    }
    
    /**
     * The date when the credit memo item is created.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("chargeDate")
    public OffsetDateTime chargeDate;
    public POSTBillingPreviewCreditMemoItem withChargeDate(OffsetDateTime chargeDate) {
        this.chargeDate = chargeDate;
        return this;
    }
    
    /**
     * Number of the charge.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeNumber")
    public String chargeNumber;
    public POSTBillingPreviewCreditMemoItem withChargeNumber(String chargeNumber) {
        this.chargeNumber = chargeNumber;
        return this;
    }
    
    /**
     * The type of charge. 
     * 
     * Possible values are `OneTime`, `Recurring`, and `Usage`.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("chargeType")
    public String chargeType;
    public POSTBillingPreviewCreditMemoItem withChargeType(String chargeType) {
        this.chargeType = chargeType;
        return this;
    }
    
    /**
     * Comment of the credit memo item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comment")
    public String comment;
    public POSTBillingPreviewCreditMemoItem withComment(String comment) {
        this.comment = comment;
        return this;
    }
    
    /**
     * Credit memo item id.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public POSTBillingPreviewCreditMemoItem withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Identifies the kind of charge. 
     * 
     * Possible values:
     * * charge
     * * discount
     * * prepayment
     * * tax
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("processingType")
    public String processingType;
    public POSTBillingPreviewCreditMemoItem withProcessingType(String processingType) {
        this.processingType = processingType;
        return this;
    }
    
    /**
     * Quantity of this item, in the configured unit of measure for the charge.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("quantity")
    public String quantity;
    public POSTBillingPreviewCreditMemoItem withQuantity(String quantity) {
        this.quantity = quantity;
        return this;
    }
    
    /**
     * Id of the rate plan charge associated with this item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ratePlanChargeId")
    public String ratePlanChargeId;
    public POSTBillingPreviewCreditMemoItem withRatePlanChargeId(String ratePlanChargeId) {
        this.ratePlanChargeId = ratePlanChargeId;
        return this;
    }
    
    /**
     * End date of the service period for this item, i.e., the last day of the service period, in yyyy-mm-dd format.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("serviceEndDate")
    public LocalDate serviceEndDate;
    public POSTBillingPreviewCreditMemoItem withServiceEndDate(LocalDate serviceEndDate) {
        this.serviceEndDate = serviceEndDate;
        return this;
    }
    
    /**
     * Start date of the service period for this item, in yyyy-mm-dd format. If the charge is a one-time fee, this is the date of that charge.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = "yyyy-MM-dd")
    @JsonProperty("serviceStartDate")
    public LocalDate serviceStartDate;
    public POSTBillingPreviewCreditMemoItem withServiceStartDate(LocalDate serviceStartDate) {
        this.serviceStartDate = serviceStartDate;
        return this;
    }
    
    /**
     * Unique SKU for the product associated with this item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sku")
    public String sku;
    public POSTBillingPreviewCreditMemoItem withSku(String sku) {
        this.sku = sku;
        return this;
    }
    
    /**
     * Name of the unique SKU for the product associated with this item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("skuName")
    public String skuName;
    public POSTBillingPreviewCreditMemoItem withSkuName(String skuName) {
        this.skuName = skuName;
        return this;
    }
    
    /**
     * ID of the subscription associated with this item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionId")
    public String subscriptionId;
    public POSTBillingPreviewCreditMemoItem withSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
        return this;
    }
    
    /**
     * Name of the subscription associated with this item.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subscriptionNumber")
    public String subscriptionNumber;
    public POSTBillingPreviewCreditMemoItem withSubscriptionNumber(String subscriptionNumber) {
        this.subscriptionNumber = subscriptionNumber;
        return this;
    }
    
    /**
     * Unit used to measure consumption.
     * 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("unitOfMeasure")
    public String unitOfMeasure;
    public POSTBillingPreviewCreditMemoItem withUnitOfMeasure(String unitOfMeasure) {
        this.unitOfMeasure = unitOfMeasure;
        return this;
    }
    
}
