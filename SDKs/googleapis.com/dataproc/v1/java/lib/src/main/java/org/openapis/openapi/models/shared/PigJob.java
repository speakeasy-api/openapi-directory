/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * PigJob - A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.
 */
public class PigJob {
    /**
     * Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("continueOnFailure")
    public Boolean continueOnFailure;
    public PigJob withContinueOnFailure(Boolean continueOnFailure) {
        this.continueOnFailure = continueOnFailure;
        return this;
    }
    
    /**
     * Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jarFileUris")
    public String[] jarFileUris;
    public PigJob withJarFileUris(String[] jarFileUris) {
        this.jarFileUris = jarFileUris;
        return this;
    }
    
    /**
     * The runtime logging config of the job.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("loggingConfig")
    public LoggingConfig loggingConfig;
    public PigJob withLoggingConfig(LoggingConfig loggingConfig) {
        this.loggingConfig = loggingConfig;
        return this;
    }
    
    /**
     * Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API may be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("properties")
    public java.util.Map<String, String> properties;
    public PigJob withProperties(java.util.Map<String, String> properties) {
        this.properties = properties;
        return this;
    }
    
    /**
     * The HCFS URI of the script that contains the Pig queries.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queryFileUri")
    public String queryFileUri;
    public PigJob withQueryFileUri(String queryFileUri) {
        this.queryFileUri = queryFileUri;
        return this;
    }
    
    /**
     * A list of queries to run on a cluster.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("queryList")
    public QueryList queryList;
    public PigJob withQueryList(QueryList queryList) {
        this.queryList = queryList;
        return this;
    }
    
    /**
     * Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value]).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("scriptVariables")
    public java.util.Map<String, String> scriptVariables;
    public PigJob withScriptVariables(java.util.Map<String, String> scriptVariables) {
        this.scriptVariables = scriptVariables;
        return this;
    }
    
}
