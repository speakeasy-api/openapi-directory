"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import permissions_enum as shared_permissions_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class EnvironmentMember:
    r"""Information about an environment member for an Cloud9 development environment."""
    
    environment_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('environmentId') }})  
    permissions: shared_permissions_enum.PermissionsEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('permissions') }})  
    user_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userArn') }})  
    user_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userId') }})  
    last_access: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastAccess'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})  
    