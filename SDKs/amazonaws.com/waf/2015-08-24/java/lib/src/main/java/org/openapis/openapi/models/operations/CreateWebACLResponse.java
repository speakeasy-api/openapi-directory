/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class CreateWebACLResponse {
    
    public String contentType;

    public CreateWebACLResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.CreateWebACLResponse createWebACLResponse;

    public CreateWebACLResponse withCreateWebACLResponse(org.openapis.openapi.models.shared.CreateWebACLResponse createWebACLResponse) {
        this.createWebACLResponse = createWebACLResponse;
        return this;
    }
    
    
    public Integer statusCode;

    public CreateWebACLResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public CreateWebACLResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * WAFBadRequestException
     */
    
    public Object wafBadRequestException;

    public CreateWebACLResponse withWAFBadRequestException(Object wafBadRequestException) {
        this.wafBadRequestException = wafBadRequestException;
        return this;
    }
    
    /**
     * WAFDisallowedNameException
     */
    
    public Object wafDisallowedNameException;

    public CreateWebACLResponse withWAFDisallowedNameException(Object wafDisallowedNameException) {
        this.wafDisallowedNameException = wafDisallowedNameException;
        return this;
    }
    
    /**
     * WAFInternalErrorException
     */
    
    public Object wafInternalErrorException;

    public CreateWebACLResponse withWAFInternalErrorException(Object wafInternalErrorException) {
        this.wafInternalErrorException = wafInternalErrorException;
        return this;
    }
    
    /**
     * WAFInvalidAccountException
     */
    
    public Object wafInvalidAccountException;

    public CreateWebACLResponse withWAFInvalidAccountException(Object wafInvalidAccountException) {
        this.wafInvalidAccountException = wafInvalidAccountException;
        return this;
    }
    
    /**
     * WAFInvalidParameterException
     */
    
    public Object wafInvalidParameterException;

    public CreateWebACLResponse withWAFInvalidParameterException(Object wafInvalidParameterException) {
        this.wafInvalidParameterException = wafInvalidParameterException;
        return this;
    }
    
    /**
     * WAFLimitsExceededException
     */
    
    public Object wafLimitsExceededException;

    public CreateWebACLResponse withWAFLimitsExceededException(Object wafLimitsExceededException) {
        this.wafLimitsExceededException = wafLimitsExceededException;
        return this;
    }
    
    /**
     * WAFStaleDataException
     */
    
    public Object wafStaleDataException;

    public CreateWebACLResponse withWAFStaleDataException(Object wafStaleDataException) {
        this.wafStaleDataException = wafStaleDataException;
        return this;
    }
    
    /**
     * WAFTagOperationException
     */
    
    public Object wafTagOperationException;

    public CreateWebACLResponse withWAFTagOperationException(Object wafTagOperationException) {
        this.wafTagOperationException = wafTagOperationException;
        return this;
    }
    
    /**
     * WAFTagOperationInternalErrorException
     */
    
    public Object wafTagOperationInternalErrorException;

    public CreateWebACLResponse withWAFTagOperationInternalErrorException(Object wafTagOperationInternalErrorException) {
        this.wafTagOperationInternalErrorException = wafTagOperationInternalErrorException;
        return this;
    }
    
    public CreateWebACLResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
