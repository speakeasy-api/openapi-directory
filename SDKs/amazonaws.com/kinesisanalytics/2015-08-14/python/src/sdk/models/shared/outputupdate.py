"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import destinationschema as shared_destinationschema
from ..shared import kinesisfirehoseoutputupdate as shared_kinesisfirehoseoutputupdate
from ..shared import kinesisstreamsoutputupdate as shared_kinesisstreamsoutputupdate
from ..shared import lambdaoutputupdate as shared_lambdaoutputupdate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OutputUpdate:
    r"""Describes updates to the output configuration identified by the <code>OutputId</code>."""
    
    output_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('OutputId') }})  
    destination_schema_update: Optional[shared_destinationschema.DestinationSchema] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('DestinationSchemaUpdate'), 'exclude': lambda f: f is None }})  
    kinesis_firehose_output_update: Optional[shared_kinesisfirehoseoutputupdate.KinesisFirehoseOutputUpdate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KinesisFirehoseOutputUpdate'), 'exclude': lambda f: f is None }})  
    kinesis_streams_output_update: Optional[shared_kinesisstreamsoutputupdate.KinesisStreamsOutputUpdate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('KinesisStreamsOutputUpdate'), 'exclude': lambda f: f is None }})  
    lambda_output_update: Optional[shared_lambdaoutputupdate.LambdaOutputUpdate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('LambdaOutputUpdate'), 'exclude': lambda f: f is None }})  
    name_update: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NameUpdate'), 'exclude': lambda f: f is None }})  
    