<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * HistoryExportResultEntity - List History Export Results
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class HistoryExportResultEntity
{
    /**
     * What action was taken. Valid values: `create`, `read`, `update`, `destroy`, `move`, `login`, `failedlogin`, `copy`, `user_create`, `user_update`, `user_destroy`, `group_create`, `group_update`, `group_destroy`, `permission_create`, `permission_destroy`, `api_key_create`, `api_key_update`, `api_key_destroy`
     * 
     * @var ?string $action
     */
	#[\JMS\Serializer\Annotation\SerializedName('action')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $action = null;
    
    /**
     * When the action happened
     * 
     * @var ?int $createdAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $createdAt = null;
    
    /**
     * When the action happened, in ISO8601 format.
     * 
     * @var ?int $createdAtIso8601
     */
	#[\JMS\Serializer\Annotation\SerializedName('created_at_iso8601')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $createdAtIso8601 = null;
    
    /**
     * File moved to this destination folder
     * 
     * @var ?string $destination
     */
	#[\JMS\Serializer\Annotation\SerializedName('destination')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $destination = null;
    
    /**
     * The type of login failure, if applicable.  Valid values: `expired_trial`, `account_overdue`, `locked_out`, `ip_mismatch`, `password_mismatch`, `site_mismatch`, `username_not_found`, `none`, `no_ftp_permission`, `no_web_permission`, `no_directory`, `errno_enoent`, `no_sftp_permission`, `no_dav_permission`, `no_restapi_permission`, `key_mismatch`, `region_mismatch`, `expired_access`, `desktop_ip_mismatch`, `desktop_api_key_not_used_quickly_enough`, `disabled`, `country_mismatch`
     * 
     * @var ?string $failureType
     */
	#[\JMS\Serializer\Annotation\SerializedName('failure_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $failureType = null;
    
    /**
     * File ID related to the action
     * 
     * @var ?int $fileId
     */
	#[\JMS\Serializer\Annotation\SerializedName('file_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $fileId = null;
    
    /**
     * Folder in which the action occurred
     * 
     * @var ?string $folder
     */
	#[\JMS\Serializer\Annotation\SerializedName('folder')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $folder = null;
    
    /**
     * Action ID
     * 
     * @var ?int $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $id = null;
    
    /**
     * Inteface through which the action was taken. Valid values: `web`, `ftp`, `robot`, `jsapi`, `webdesktopapi`, `sftp`, `dav`, `desktop`, `restapi`, `scim`, `office`, `mobile`, `as2`, `inbound_email`, `remote`
     * 
     * @var ?string $interface
     */
	#[\JMS\Serializer\Annotation\SerializedName('interface')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $interface = null;
    
    /**
     * Client IP that performed the action
     * 
     * @var ?string $ip
     */
	#[\JMS\Serializer\Annotation\SerializedName('ip')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $ip = null;
    
    /**
     * ID of the parent folder
     * 
     * @var ?int $parentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('parent_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $parentId = null;
    
    /**
     * Path of the related action
     * 
     * @var ?string $path
     */
	#[\JMS\Serializer\Annotation\SerializedName('path')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $path = null;
    
    /**
     * File move originated from this path
     * 
     * @var ?string $src
     */
	#[\JMS\Serializer\Annotation\SerializedName('src')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $src = null;
    
    /**
     * If searching for Histories about API keys, this is when the API key will expire
     * 
     * @var ?int $targetExpiresAt
     */
	#[\JMS\Serializer\Annotation\SerializedName('target_expires_at')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $targetExpiresAt = null;
    
    /**
     * ID of the object (such as Users, or API Keys) on which the action was taken
     * 
     * @var ?int $targetId
     */
	#[\JMS\Serializer\Annotation\SerializedName('target_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $targetId = null;
    
    /**
     * Name of the User, Group or other object with a name related to this action
     * 
     * @var ?string $targetName
     */
	#[\JMS\Serializer\Annotation\SerializedName('target_name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $targetName = null;
    
    /**
     * Permission level of the action
     * 
     * @var ?string $targetPermission
     */
	#[\JMS\Serializer\Annotation\SerializedName('target_permission')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $targetPermission = null;
    
    /**
     * If searching for Histories about API keys, this represents the permission set of the associated  API key
     * 
     * @var ?string $targetPermissionSet
     */
	#[\JMS\Serializer\Annotation\SerializedName('target_permission_set')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $targetPermissionSet = null;
    
    /**
     * If searching for Histories about API keys, this is the platform on which the action was taken
     * 
     * @var ?string $targetPlatform
     */
	#[\JMS\Serializer\Annotation\SerializedName('target_platform')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $targetPlatform = null;
    
    /**
     * Whether or not the action was recursive
     * 
     * @var ?bool $targetRecursive
     */
	#[\JMS\Serializer\Annotation\SerializedName('target_recursive')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $targetRecursive = null;
    
    /**
     * If searching for Histories about API keys, this is the User ID on which the action was taken
     * 
     * @var ?int $targetUserId
     */
	#[\JMS\Serializer\Annotation\SerializedName('target_user_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $targetUserId = null;
    
    /**
     * If searching for Histories about API keys, this is the username on which the action was taken
     * 
     * @var ?string $targetUsername
     */
	#[\JMS\Serializer\Annotation\SerializedName('target_username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $targetUsername = null;
    
    /**
     * User ID
     * 
     * @var ?int $userId
     */
	#[\JMS\Serializer\Annotation\SerializedName('user_id')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $userId = null;
    
    /**
     * Username of the user that performed the action
     * 
     * @var ?string $username
     */
	#[\JMS\Serializer\Annotation\SerializedName('username')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $username = null;
    
	public function __construct()
	{
		$this->action = null;
		$this->createdAt = null;
		$this->createdAtIso8601 = null;
		$this->destination = null;
		$this->failureType = null;
		$this->fileId = null;
		$this->folder = null;
		$this->id = null;
		$this->interface = null;
		$this->ip = null;
		$this->parentId = null;
		$this->path = null;
		$this->src = null;
		$this->targetExpiresAt = null;
		$this->targetId = null;
		$this->targetName = null;
		$this->targetPermission = null;
		$this->targetPermissionSet = null;
		$this->targetPlatform = null;
		$this->targetRecursive = null;
		$this->targetUserId = null;
		$this->targetUsername = null;
		$this->userId = null;
		$this->username = null;
	}
}
