/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ImageVersion - The defining characteristics of a specific version of an Image Builder image.
 */
public class ImageVersion {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("arn")
    public String arn;

    public ImageVersion withArn(String arn) {
        this.arn = arn;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("buildType")
    public BuildTypeEnum buildType;

    public ImageVersion withBuildType(BuildTypeEnum buildType) {
        this.buildType = buildType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dateCreated")
    public String dateCreated;

    public ImageVersion withDateCreated(String dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("imageSource")
    public ImageSourceEnum imageSource;

    public ImageVersion withImageSource(ImageSourceEnum imageSource) {
        this.imageSource = imageSource;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;

    public ImageVersion withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("osVersion")
    public String osVersion;

    public ImageVersion withOsVersion(String osVersion) {
        this.osVersion = osVersion;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("owner")
    public String owner;

    public ImageVersion withOwner(String owner) {
        this.owner = owner;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("platform")
    public PlatformEnum platform;

    public ImageVersion withPlatform(PlatformEnum platform) {
        this.platform = platform;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public ImageTypeEnum type;

    public ImageVersion withType(ImageTypeEnum type) {
        this.type = type;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("version")
    public String version;

    public ImageVersion withVersion(String version) {
        this.version = version;
        return this;
    }
    
    public ImageVersion(){}
}
