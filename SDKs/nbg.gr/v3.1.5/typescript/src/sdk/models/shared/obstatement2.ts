/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { OBExternalStatementType1CodeEnum } from "./obexternalstatementtype1codeenum";
import { Expose, Transform } from "class-transformer";

/**
 * Provides further details on a statement resource.
 */
export class OBStatement2 extends SpeakeasyBase {
  /**
   * A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "AccountId" })
  accountId: string;

  /**
   * Date and time at which the statement period starts.All dates in the JSON payloads are represented in ISO 8601 date-time format.
   *
   * @remarks
   * All date-time fields in responses must include the timezone.An example is below:
   * 2017-04-05T10:43:07+00:00
   */
  @SpeakeasyMetadata()
  @Expose({ name: "CreationDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationDateTime: Date;

  /**
   * Date and time at which the statement period starts.All dates in the JSON payloads are represented in ISO 8601 date-time format.
   *
   * @remarks
   * All date-time fields in responses must include the timezone.An example is below:
   * 2017-04-05T10:43:07+00:00
   */
  @SpeakeasyMetadata()
  @Expose({ name: "EndDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endDateTime: Date;

  /**
   * Date and time at which the statement period starts.All dates in the JSON payloads are represented in ISO 8601 date-time format.
   *
   * @remarks
   * All date-time fields in responses must include the timezone.An example is below:
   * 2017-04-05T10:43:07+00:00
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StartDateTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startDateTime: Date;

  /**
   * Unique identifier for the statement resource within an servicing institution. This identifier is both unique and immutable.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StatementId" })
  statementId?: string;

  /**
   * Unique reference for the statement. This reference may be optionally populated if available.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "StatementReference" })
  statementReference?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type: OBExternalStatementType1CodeEnum;
}
