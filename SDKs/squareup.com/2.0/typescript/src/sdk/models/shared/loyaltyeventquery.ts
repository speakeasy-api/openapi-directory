/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LoyaltyEventFilter } from "./loyaltyeventfilter";
import { Expose, Type } from "class-transformer";

/**
 * Represents a query used to search for loyalty events.
 */
export class LoyaltyEventQuery extends SpeakeasyBase {
  /**
   * The filtering criteria. If the request specifies multiple filters,
   *
   * @remarks
   * the endpoint uses a logical AND to evaluate them.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "filter" })
  @Type(() => LoyaltyEventFilter)
  filter?: LoyaltyEventFilter;
}
