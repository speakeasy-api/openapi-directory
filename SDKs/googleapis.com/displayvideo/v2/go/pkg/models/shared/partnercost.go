// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PartnerCostCostTypeEnum - Required. The type of the partner cost.
type PartnerCostCostTypeEnum string

const (
	PartnerCostCostTypeEnumPartnerCostTypeUnspecified             PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_UNSPECIFIED"
	PartnerCostCostTypeEnumPartnerCostTypeAdloox                  PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_ADLOOX"
	PartnerCostCostTypeEnumPartnerCostTypeAdlooxPrebid            PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_ADLOOX_PREBID"
	PartnerCostCostTypeEnumPartnerCostTypeAdsafe                  PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_ADSAFE"
	PartnerCostCostTypeEnumPartnerCostTypeAdxpose                 PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_ADXPOSE"
	PartnerCostCostTypeEnumPartnerCostTypeAggregateKnowledge      PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_AGGREGATE_KNOWLEDGE"
	PartnerCostCostTypeEnumPartnerCostTypeAgencyTradingDesk       PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_AGENCY_TRADING_DESK"
	PartnerCostCostTypeEnumPartnerCostTypeDv360Fee                PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_DV360_FEE"
	PartnerCostCostTypeEnumPartnerCostTypeComscoreVce             PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_COMSCORE_VCE"
	PartnerCostCostTypeEnumPartnerCostTypeDataManagementPlatform  PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_DATA_MANAGEMENT_PLATFORM"
	PartnerCostCostTypeEnumPartnerCostTypeDefault                 PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_DEFAULT"
	PartnerCostCostTypeEnumPartnerCostTypeDoubleVerify            PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_DOUBLE_VERIFY"
	PartnerCostCostTypeEnumPartnerCostTypeDoubleVerifyPrebid      PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_DOUBLE_VERIFY_PREBID"
	PartnerCostCostTypeEnumPartnerCostTypeEvidon                  PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_EVIDON"
	PartnerCostCostTypeEnumPartnerCostTypeIntegralAdScienceVideo  PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_VIDEO"
	PartnerCostCostTypeEnumPartnerCostTypeIntegralAdSciencePrebid PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_PREBID"
	PartnerCostCostTypeEnumPartnerCostTypeMediaCostData           PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_MEDIA_COST_DATA"
	PartnerCostCostTypeEnumPartnerCostTypeMoatVideo               PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_MOAT_VIDEO"
	PartnerCostCostTypeEnumPartnerCostTypeNielsenDar              PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_NIELSEN_DAR"
	PartnerCostCostTypeEnumPartnerCostTypeShopLocal               PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_SHOP_LOCAL"
	PartnerCostCostTypeEnumPartnerCostTypeTeracent                PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_TERACENT"
	PartnerCostCostTypeEnumPartnerCostTypeThirdPartyAdServer      PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_THIRD_PARTY_AD_SERVER"
	PartnerCostCostTypeEnumPartnerCostTypeTrustMetrics            PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_TRUST_METRICS"
	PartnerCostCostTypeEnumPartnerCostTypeVizu                    PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_VIZU"
	PartnerCostCostTypeEnumPartnerCostTypeAdlingoFee              PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_ADLINGO_FEE"
	PartnerCostCostTypeEnumPartnerCostTypeCustomFee1              PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_CUSTOM_FEE_1"
	PartnerCostCostTypeEnumPartnerCostTypeCustomFee2              PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_CUSTOM_FEE_2"
	PartnerCostCostTypeEnumPartnerCostTypeCustomFee3              PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_CUSTOM_FEE_3"
	PartnerCostCostTypeEnumPartnerCostTypeCustomFee4              PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_CUSTOM_FEE_4"
	PartnerCostCostTypeEnumPartnerCostTypeCustomFee5              PartnerCostCostTypeEnum = "PARTNER_COST_TYPE_CUSTOM_FEE_5"
)

func (e PartnerCostCostTypeEnum) ToPointer() *PartnerCostCostTypeEnum {
	return &e
}

func (e *PartnerCostCostTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PARTNER_COST_TYPE_UNSPECIFIED":
		fallthrough
	case "PARTNER_COST_TYPE_ADLOOX":
		fallthrough
	case "PARTNER_COST_TYPE_ADLOOX_PREBID":
		fallthrough
	case "PARTNER_COST_TYPE_ADSAFE":
		fallthrough
	case "PARTNER_COST_TYPE_ADXPOSE":
		fallthrough
	case "PARTNER_COST_TYPE_AGGREGATE_KNOWLEDGE":
		fallthrough
	case "PARTNER_COST_TYPE_AGENCY_TRADING_DESK":
		fallthrough
	case "PARTNER_COST_TYPE_DV360_FEE":
		fallthrough
	case "PARTNER_COST_TYPE_COMSCORE_VCE":
		fallthrough
	case "PARTNER_COST_TYPE_DATA_MANAGEMENT_PLATFORM":
		fallthrough
	case "PARTNER_COST_TYPE_DEFAULT":
		fallthrough
	case "PARTNER_COST_TYPE_DOUBLE_VERIFY":
		fallthrough
	case "PARTNER_COST_TYPE_DOUBLE_VERIFY_PREBID":
		fallthrough
	case "PARTNER_COST_TYPE_EVIDON":
		fallthrough
	case "PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_VIDEO":
		fallthrough
	case "PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_PREBID":
		fallthrough
	case "PARTNER_COST_TYPE_MEDIA_COST_DATA":
		fallthrough
	case "PARTNER_COST_TYPE_MOAT_VIDEO":
		fallthrough
	case "PARTNER_COST_TYPE_NIELSEN_DAR":
		fallthrough
	case "PARTNER_COST_TYPE_SHOP_LOCAL":
		fallthrough
	case "PARTNER_COST_TYPE_TERACENT":
		fallthrough
	case "PARTNER_COST_TYPE_THIRD_PARTY_AD_SERVER":
		fallthrough
	case "PARTNER_COST_TYPE_TRUST_METRICS":
		fallthrough
	case "PARTNER_COST_TYPE_VIZU":
		fallthrough
	case "PARTNER_COST_TYPE_ADLINGO_FEE":
		fallthrough
	case "PARTNER_COST_TYPE_CUSTOM_FEE_1":
		fallthrough
	case "PARTNER_COST_TYPE_CUSTOM_FEE_2":
		fallthrough
	case "PARTNER_COST_TYPE_CUSTOM_FEE_3":
		fallthrough
	case "PARTNER_COST_TYPE_CUSTOM_FEE_4":
		fallthrough
	case "PARTNER_COST_TYPE_CUSTOM_FEE_5":
		*e = PartnerCostCostTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PartnerCostCostTypeEnum: %v", v)
	}
}

// PartnerCostFeeTypeEnum - Required. The fee type for this partner cost.
type PartnerCostFeeTypeEnum string

const (
	PartnerCostFeeTypeEnumPartnerCostFeeTypeUnspecified PartnerCostFeeTypeEnum = "PARTNER_COST_FEE_TYPE_UNSPECIFIED"
	PartnerCostFeeTypeEnumPartnerCostFeeTypeCpmFee      PartnerCostFeeTypeEnum = "PARTNER_COST_FEE_TYPE_CPM_FEE"
	PartnerCostFeeTypeEnumPartnerCostFeeTypeMediaFee    PartnerCostFeeTypeEnum = "PARTNER_COST_FEE_TYPE_MEDIA_FEE"
)

func (e PartnerCostFeeTypeEnum) ToPointer() *PartnerCostFeeTypeEnum {
	return &e
}

func (e *PartnerCostFeeTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PARTNER_COST_FEE_TYPE_UNSPECIFIED":
		fallthrough
	case "PARTNER_COST_FEE_TYPE_CPM_FEE":
		fallthrough
	case "PARTNER_COST_FEE_TYPE_MEDIA_FEE":
		*e = PartnerCostFeeTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PartnerCostFeeTypeEnum: %v", v)
	}
}

// PartnerCostInvoiceTypeEnum - The invoice type for this partner cost. * Required when cost_type is one of: - `PARTNER_COST_TYPE_ADLOOX` - `PARTNER_COST_TYPE_DOUBLE_VERIFY` - `PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE`. * Output only for other types.
type PartnerCostInvoiceTypeEnum string

const (
	PartnerCostInvoiceTypeEnumPartnerCostInvoiceTypeUnspecified PartnerCostInvoiceTypeEnum = "PARTNER_COST_INVOICE_TYPE_UNSPECIFIED"
	PartnerCostInvoiceTypeEnumPartnerCostInvoiceTypeDv360       PartnerCostInvoiceTypeEnum = "PARTNER_COST_INVOICE_TYPE_DV360"
	PartnerCostInvoiceTypeEnumPartnerCostInvoiceTypePartner     PartnerCostInvoiceTypeEnum = "PARTNER_COST_INVOICE_TYPE_PARTNER"
)

func (e PartnerCostInvoiceTypeEnum) ToPointer() *PartnerCostInvoiceTypeEnum {
	return &e
}

func (e *PartnerCostInvoiceTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PARTNER_COST_INVOICE_TYPE_UNSPECIFIED":
		fallthrough
	case "PARTNER_COST_INVOICE_TYPE_DV360":
		fallthrough
	case "PARTNER_COST_INVOICE_TYPE_PARTNER":
		*e = PartnerCostInvoiceTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PartnerCostInvoiceTypeEnum: %v", v)
	}
}

// PartnerCost - Settings that control a partner cost. A partner cost is any type of expense involved in running a campaign, other than the costs of purchasing impressions (which is called the media cost) and using third-party audience segment data (data fee). Some examples of partner costs include the fees for using DV360, a third-party ad server, or a third-party ad serving verification service.
type PartnerCost struct {
	// Required. The type of the partner cost.
	CostType *PartnerCostCostTypeEnum `json:"costType,omitempty"`
	// The CPM fee amount in micros of advertiser's currency. Applicable when the fee_type is `PARTNER_FEE_TYPE_CPM_FEE`. Must be greater than or equal to 0. For example, for 1.5 standard unit of the advertiser's currency, set this field to 1500000.
	FeeAmount *string `json:"feeAmount,omitempty"`
	// The media fee percentage in millis (1/1000 of a percent). Applicable when the fee_type is `PARTNER_FEE_TYPE_MEDIA_FEE`. Must be greater than or equal to 0. For example: 100 represents 0.1%.
	FeePercentageMillis *string `json:"feePercentageMillis,omitempty"`
	// Required. The fee type for this partner cost.
	FeeType *PartnerCostFeeTypeEnum `json:"feeType,omitempty"`
	// The invoice type for this partner cost. * Required when cost_type is one of: - `PARTNER_COST_TYPE_ADLOOX` - `PARTNER_COST_TYPE_DOUBLE_VERIFY` - `PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE`. * Output only for other types.
	InvoiceType *PartnerCostInvoiceTypeEnum `json:"invoiceType,omitempty"`
}
