/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { From } from "./from";
import { To } from "./to";
import { Expose, Type } from "class-transformer";

export class GetConversation extends SpeakeasyBase {
  /**
   * List with attachments' names, if there are any.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "attachmentNames" })
  attachmentNames: string[];

  /**
   * Conversation content body.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "body" })
  body: string;

  /**
   * Conversation date.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "date" })
  date: string;

  /**
   * First words of Conversation content.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "firstWords" })
  firstWords: string;

  /**
   * Conversation sender.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "from" })
  @Type(() => From)
  from: From;

  /**
   * When set as `true`, it means there are attachments, when set as `false`, there are not.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hasAttachment" })
  hasAttachment: boolean;

  /**
   * Conversation ID.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * Conversation content subject.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "subject" })
  subject: string;

  /**
   * Conversation receiver.
   */
  @SpeakeasyMetadata({ elemType: To })
  @Expose({ name: "to" })
  @Type(() => To)
  to: To[];
}
