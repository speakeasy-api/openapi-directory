/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Ad - Contains properties of a Campaign Manager ad.
 */
public class Ad {
    /**
     * Account ID of this ad. This is a read-only field that can be left blank.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public Ad withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * Whether this ad is active. When true, archived must be false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("active")
    public Boolean active;
    public Ad withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    /**
     * Advertiser ID of this ad. This is a required field on insertion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advertiserId")
    public String advertiserId;
    public Ad withAdvertiserId(String advertiserId) {
        this.advertiserId = advertiserId;
        return this;
    }
    
    /**
     * Represents a DimensionValue resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("advertiserIdDimensionValue")
    public DimensionValue advertiserIdDimensionValue;
    public Ad withAdvertiserIdDimensionValue(DimensionValue advertiserIdDimensionValue) {
        this.advertiserIdDimensionValue = advertiserIdDimensionValue;
        return this;
    }
    
    /**
     * Whether this ad is archived. When true, active must be false.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("archived")
    public Boolean archived;
    public Ad withArchived(Boolean archived) {
        this.archived = archived;
        return this;
    }
    
    /**
     * Audience segment ID that is being targeted for this ad. Applicable when type is AD_SERVING_STANDARD_AD.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("audienceSegmentId")
    public String audienceSegmentId;
    public Ad withAudienceSegmentId(String audienceSegmentId) {
        this.audienceSegmentId = audienceSegmentId;
        return this;
    }
    
    /**
     * Campaign ID of this ad. This is a required field on insertion.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("campaignId")
    public String campaignId;
    public Ad withCampaignId(String campaignId) {
        this.campaignId = campaignId;
        return this;
    }
    
    /**
     * Represents a DimensionValue resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("campaignIdDimensionValue")
    public DimensionValue campaignIdDimensionValue;
    public Ad withCampaignIdDimensionValue(DimensionValue campaignIdDimensionValue) {
        this.campaignIdDimensionValue = campaignIdDimensionValue;
        return this;
    }
    
    /**
     * Click-through URL
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clickThroughUrl")
    public ClickThroughUrl clickThroughUrl;
    public Ad withClickThroughUrl(ClickThroughUrl clickThroughUrl) {
        this.clickThroughUrl = clickThroughUrl;
        return this;
    }
    
    /**
     * Click Through URL Suffix settings.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("clickThroughUrlSuffixProperties")
    public ClickThroughUrlSuffixProperties clickThroughUrlSuffixProperties;
    public Ad withClickThroughUrlSuffixProperties(ClickThroughUrlSuffixProperties clickThroughUrlSuffixProperties) {
        this.clickThroughUrlSuffixProperties = clickThroughUrlSuffixProperties;
        return this;
    }
    
    /**
     * Comments for this ad.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("comments")
    public String comments;
    public Ad withComments(String comments) {
        this.comments = comments;
        return this;
    }
    
    /**
     * Compatibility of this ad. Applicable when type is AD_SERVING_DEFAULT_AD. DISPLAY and DISPLAY_INTERSTITIAL refer to either rendering on desktop or on mobile devices or in mobile apps for regular or interstitial ads, respectively. APP and APP_INTERSTITIAL are only used for existing default ads. New mobile placements must be assigned DISPLAY or DISPLAY_INTERSTITIAL and default ads created for those placements will be limited to those compatibility types. IN_STREAM_VIDEO refers to rendering in-stream video ads developed with the VAST standard.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("compatibility")
    public AdCompatibilityEnum compatibility;
    public Ad withCompatibility(AdCompatibilityEnum compatibility) {
        this.compatibility = compatibility;
        return this;
    }
    
    /**
     * Modification timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("createInfo")
    public LastModifiedInfo createInfo;
    public Ad withCreateInfo(LastModifiedInfo createInfo) {
        this.createInfo = createInfo;
        return this;
    }
    
    /**
     * Creative group assignments for this ad. Applicable when type is AD_SERVING_CLICK_TRACKER. Only one assignment per creative group number is allowed for a maximum of two assignments.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creativeGroupAssignments")
    public CreativeGroupAssignment[] creativeGroupAssignments;
    public Ad withCreativeGroupAssignments(CreativeGroupAssignment[] creativeGroupAssignments) {
        this.creativeGroupAssignments = creativeGroupAssignments;
        return this;
    }
    
    /**
     * Creative Rotation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creativeRotation")
    public CreativeRotation creativeRotation;
    public Ad withCreativeRotation(CreativeRotation creativeRotation) {
        this.creativeRotation = creativeRotation;
        return this;
    }
    
    /**
     * Day Part Targeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dayPartTargeting")
    public DayPartTargeting dayPartTargeting;
    public Ad withDayPartTargeting(DayPartTargeting dayPartTargeting) {
        this.dayPartTargeting = dayPartTargeting;
        return this;
    }
    
    /**
     * Properties of inheriting and overriding the default click-through event tag. A campaign may override the event tag defined at the advertiser level, and an ad may also override the campaign's setting further.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultClickThroughEventTagProperties")
    public DefaultClickThroughEventTagProperties defaultClickThroughEventTagProperties;
    public Ad withDefaultClickThroughEventTagProperties(DefaultClickThroughEventTagProperties defaultClickThroughEventTagProperties) {
        this.defaultClickThroughEventTagProperties = defaultClickThroughEventTagProperties;
        return this;
    }
    
    /**
     * Delivery Schedule.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("deliverySchedule")
    public DeliverySchedule deliverySchedule;
    public Ad withDeliverySchedule(DeliverySchedule deliverySchedule) {
        this.deliverySchedule = deliverySchedule;
        return this;
    }
    
    /**
     * Whether this ad is a dynamic click tracker. Applicable when type is AD_SERVING_CLICK_TRACKER. This is a required field on insert, and is read-only after insert.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dynamicClickTracker")
    public Boolean dynamicClickTracker;
    public Ad withDynamicClickTracker(Boolean dynamicClickTracker) {
        this.dynamicClickTracker = dynamicClickTracker;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("endTime")
    public OffsetDateTime endTime;
    public Ad withEndTime(OffsetDateTime endTime) {
        this.endTime = endTime;
        return this;
    }
    
    /**
     * Event tag overrides for this ad.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventTagOverrides")
    public EventTagOverride[] eventTagOverrides;
    public Ad withEventTagOverrides(EventTagOverride[] eventTagOverrides) {
        this.eventTagOverrides = eventTagOverrides;
        return this;
    }
    
    /**
     * Geographical Targeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("geoTargeting")
    public GeoTargeting geoTargeting;
    public Ad withGeoTargeting(GeoTargeting geoTargeting) {
        this.geoTargeting = geoTargeting;
        return this;
    }
    
    /**
     * ID of this ad. This is a read-only, auto-generated field.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Ad withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Represents a DimensionValue resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("idDimensionValue")
    public DimensionValue idDimensionValue;
    public Ad withIdDimensionValue(DimensionValue idDimensionValue) {
        this.idDimensionValue = idDimensionValue;
        return this;
    }
    
    /**
     * Key Value Targeting Expression.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("keyValueTargetingExpression")
    public KeyValueTargetingExpression keyValueTargetingExpression;
    public Ad withKeyValueTargetingExpression(KeyValueTargetingExpression keyValueTargetingExpression) {
        this.keyValueTargetingExpression = keyValueTargetingExpression;
        return this;
    }
    
    /**
     * Identifies what kind of resource this is. Value: the fixed string "dfareporting#ad".
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("kind")
    public String kind;
    public Ad withKind(String kind) {
        this.kind = kind;
        return this;
    }
    
    /**
     * Language Targeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("languageTargeting")
    public LanguageTargeting languageTargeting;
    public Ad withLanguageTargeting(LanguageTargeting languageTargeting) {
        this.languageTargeting = languageTargeting;
        return this;
    }
    
    /**
     * Modification timestamp.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastModifiedInfo")
    public LastModifiedInfo lastModifiedInfo;
    public Ad withLastModifiedInfo(LastModifiedInfo lastModifiedInfo) {
        this.lastModifiedInfo = lastModifiedInfo;
        return this;
    }
    
    /**
     * Name of this ad. This is a required field and must be less than 256 characters long.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Ad withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Placement assignments for this ad.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("placementAssignments")
    public PlacementAssignment[] placementAssignments;
    public Ad withPlacementAssignments(PlacementAssignment[] placementAssignments) {
        this.placementAssignments = placementAssignments;
        return this;
    }
    
    /**
     * Remarketing List Targeting Expression.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("remarketingListExpression")
    public ListTargetingExpression remarketingListExpression;
    public Ad withRemarketingListExpression(ListTargetingExpression remarketingListExpression) {
        this.remarketingListExpression = remarketingListExpression;
        return this;
    }
    
    /**
     * Represents the dimensions of ads, placements, creatives, or creative assets.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("size")
    public Size size;
    public Ad withSize(Size size) {
        this.size = size;
        return this;
    }
    
    /**
     * Whether this ad is ssl compliant. This is a read-only field that is auto-generated when the ad is inserted or updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sslCompliant")
    public Boolean sslCompliant;
    public Ad withSslCompliant(Boolean sslCompliant) {
        this.sslCompliant = sslCompliant;
        return this;
    }
    
    /**
     * Whether this ad requires ssl. This is a read-only field that is auto-generated when the ad is inserted or updated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sslRequired")
    public Boolean sslRequired;
    public Ad withSslRequired(Boolean sslRequired) {
        this.sslRequired = sslRequired;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startTime")
    public OffsetDateTime startTime;
    public Ad withStartTime(OffsetDateTime startTime) {
        this.startTime = startTime;
        return this;
    }
    
    /**
     * Subaccount ID of this ad. This is a read-only field that can be left blank.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subaccountId")
    public String subaccountId;
    public Ad withSubaccountId(String subaccountId) {
        this.subaccountId = subaccountId;
        return this;
    }
    
    /**
     * Targeting template ID, used to apply preconfigured targeting information to this ad. This cannot be set while any of dayPartTargeting, geoTargeting, keyValueTargetingExpression, languageTargeting, remarketingListExpression, or technologyTargeting are set. Applicable when type is AD_SERVING_STANDARD_AD.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targetingTemplateId")
    public String targetingTemplateId;
    public Ad withTargetingTemplateId(String targetingTemplateId) {
        this.targetingTemplateId = targetingTemplateId;
        return this;
    }
    
    /**
     * Technology Targeting.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("technologyTargeting")
    public TechnologyTargeting technologyTargeting;
    public Ad withTechnologyTargeting(TechnologyTargeting technologyTargeting) {
        this.technologyTargeting = technologyTargeting;
        return this;
    }
    
    /**
     * Type of ad. This is a required field on insertion. Note that default ads ( AD_SERVING_DEFAULT_AD) cannot be created directly (see Creative resource).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public AdTypeEnum type;
    public Ad withType(AdTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
