"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from ..shared import appassessmentscheduletype_enum as shared_appassessmentscheduletype_enum
from ..shared import appcompliancestatustype_enum as shared_appcompliancestatustype_enum
from ..shared import appstatustype_enum as shared_appstatustype_enum
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from marshmallow import fields
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AppSummary:
    r"""Defines an application summary."""
    
    app_arn: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appArn') }})  
    creation_time: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creationTime'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso') }})  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})  
    assessment_schedule: Optional[shared_appassessmentscheduletype_enum.AppAssessmentScheduleTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('assessmentSchedule'), 'exclude': lambda f: f is None }})  
    compliance_status: Optional[shared_appcompliancestatustype_enum.AppComplianceStatusTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('complianceStatus'), 'exclude': lambda f: f is None }})  
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})  
    resiliency_score: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resiliencyScore'), 'exclude': lambda f: f is None }})  
    status: Optional[shared_appstatustype_enum.AppStatusTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})  
    