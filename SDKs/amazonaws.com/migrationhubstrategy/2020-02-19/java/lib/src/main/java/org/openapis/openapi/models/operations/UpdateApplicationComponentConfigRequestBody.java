/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class UpdateApplicationComponentConfigRequestBody {
    /**
     * The type of known component.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("appType")
    public UpdateApplicationComponentConfigRequestBodyAppTypeEnum appType;

    public UpdateApplicationComponentConfigRequestBody withAppType(UpdateApplicationComponentConfigRequestBodyAppTypeEnum appType) {
        this.appType = appType;
        return this;
    }
    
    /**
     *  The ID of the application component. The ID is unique within an AWS account. 
     */
    @JsonProperty("applicationComponentId")
    public String applicationComponentId;

    public UpdateApplicationComponentConfigRequestBody withApplicationComponentId(String applicationComponentId) {
        this.applicationComponentId = applicationComponentId;
        return this;
    }
    
    /**
     * Update the configuration request of an application component. If it is set to true, the source code and/or database credentials are updated. If it is set to false, the source code and/or database credentials are updated and an analysis is initiated.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("configureOnly")
    public Boolean configureOnly;

    public UpdateApplicationComponentConfigRequestBody withConfigureOnly(Boolean configureOnly) {
        this.configureOnly = configureOnly;
        return this;
    }
    
    /**
     *  Indicates whether the application component has been included for server recommendation or not. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("inclusionStatus")
    public UpdateApplicationComponentConfigRequestBodyInclusionStatusEnum inclusionStatus;

    public UpdateApplicationComponentConfigRequestBody withInclusionStatus(UpdateApplicationComponentConfigRequestBodyInclusionStatusEnum inclusionStatus) {
        this.inclusionStatus = inclusionStatus;
        return this;
    }
    
    /**
     *  Database credentials. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("secretsManagerKey")
    public String secretsManagerKey;

    public UpdateApplicationComponentConfigRequestBody withSecretsManagerKey(String secretsManagerKey) {
        this.secretsManagerKey = secretsManagerKey;
        return this;
    }
    
    /**
     *  The list of source code configurations to update for the application component. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceCodeList")
    public org.openapis.openapi.models.shared.SourceCode[] sourceCodeList;

    public UpdateApplicationComponentConfigRequestBody withSourceCodeList(org.openapis.openapi.models.shared.SourceCode[] sourceCodeList) {
        this.sourceCodeList = sourceCodeList;
        return this;
    }
    
    /**
     *  Information about all the available strategy options for migrating and modernizing an application component. 
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("strategyOption")
    public UpdateApplicationComponentConfigRequestBodyStrategyOption strategyOption;

    public UpdateApplicationComponentConfigRequestBody withStrategyOption(UpdateApplicationComponentConfigRequestBodyStrategyOption strategyOption) {
        this.strategyOption = strategyOption;
        return this;
    }
    
    public UpdateApplicationComponentConfigRequestBody(@JsonProperty("applicationComponentId") String applicationComponentId) {
        this.applicationComponentId = applicationComponentId;
  }
}
