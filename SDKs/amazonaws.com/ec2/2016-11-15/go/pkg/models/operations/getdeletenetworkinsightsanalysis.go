// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETDeleteNetworkInsightsAnalysisActionEnum
type GETDeleteNetworkInsightsAnalysisActionEnum string

const (
	GETDeleteNetworkInsightsAnalysisActionEnumDeleteNetworkInsightsAnalysis GETDeleteNetworkInsightsAnalysisActionEnum = "DeleteNetworkInsightsAnalysis"
)

func (e GETDeleteNetworkInsightsAnalysisActionEnum) ToPointer() *GETDeleteNetworkInsightsAnalysisActionEnum {
	return &e
}

func (e *GETDeleteNetworkInsightsAnalysisActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeleteNetworkInsightsAnalysis":
		*e = GETDeleteNetworkInsightsAnalysisActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteNetworkInsightsAnalysisActionEnum: %v", v)
	}
}

// GETDeleteNetworkInsightsAnalysisVersionEnum
type GETDeleteNetworkInsightsAnalysisVersionEnum string

const (
	GETDeleteNetworkInsightsAnalysisVersionEnumTwoThousandAndSixteen1115 GETDeleteNetworkInsightsAnalysisVersionEnum = "2016-11-15"
)

func (e GETDeleteNetworkInsightsAnalysisVersionEnum) ToPointer() *GETDeleteNetworkInsightsAnalysisVersionEnum {
	return &e
}

func (e *GETDeleteNetworkInsightsAnalysisVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = GETDeleteNetworkInsightsAnalysisVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GETDeleteNetworkInsightsAnalysisVersionEnum: %v", v)
	}
}

type GETDeleteNetworkInsightsAnalysisRequest struct {
	Action GETDeleteNetworkInsightsAnalysisActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.
	DryRun *bool `queryParam:"style=form,explode=true,name=DryRun"`
	// The ID of the network insights analysis.
	NetworkInsightsAnalysisID string                                      `queryParam:"style=form,explode=true,name=NetworkInsightsAnalysisId"`
	Version                   GETDeleteNetworkInsightsAnalysisVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm             *string                                     `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256         *string                                     `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential            *string                                     `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                  *string                                     `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken         *string                                     `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature             *string                                     `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders         *string                                     `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETDeleteNetworkInsightsAnalysisResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
