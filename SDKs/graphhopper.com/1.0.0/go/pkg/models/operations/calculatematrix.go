// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"bytes"
	"encoding/json"
	"errors"
	"net/http"
	"openapi/pkg/models/shared"
)

type CalculateMatrixRequestBodyType string

const (
	CalculateMatrixRequestBodyTypeMatrixRequest            CalculateMatrixRequestBodyType = "MatrixRequest"
	CalculateMatrixRequestBodyTypeSymmetricalMatrixRequest CalculateMatrixRequestBodyType = "SymmetricalMatrixRequest"
)

type CalculateMatrixRequestBody struct {
	MatrixRequest            *shared.MatrixRequest
	SymmetricalMatrixRequest *shared.SymmetricalMatrixRequest

	Type CalculateMatrixRequestBodyType
}

func CreateCalculateMatrixRequestBodyMatrixRequest(matrixRequest shared.MatrixRequest) CalculateMatrixRequestBody {
	typ := CalculateMatrixRequestBodyTypeMatrixRequest

	return CalculateMatrixRequestBody{
		MatrixRequest: &matrixRequest,
		Type:          typ,
	}
}

func CreateCalculateMatrixRequestBodySymmetricalMatrixRequest(symmetricalMatrixRequest shared.SymmetricalMatrixRequest) CalculateMatrixRequestBody {
	typ := CalculateMatrixRequestBodyTypeSymmetricalMatrixRequest

	return CalculateMatrixRequestBody{
		SymmetricalMatrixRequest: &symmetricalMatrixRequest,
		Type:                     typ,
	}
}

func (u *CalculateMatrixRequestBody) UnmarshalJSON(data []byte) error {
	var d *json.Decoder

	matrixRequest := new(shared.MatrixRequest)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&matrixRequest); err == nil {
		u.MatrixRequest = matrixRequest
		u.Type = CalculateMatrixRequestBodyTypeMatrixRequest
		return nil
	}

	symmetricalMatrixRequest := new(shared.SymmetricalMatrixRequest)
	d = json.NewDecoder(bytes.NewReader(data))
	d.DisallowUnknownFields()
	if err := d.Decode(&symmetricalMatrixRequest); err == nil {
		u.SymmetricalMatrixRequest = symmetricalMatrixRequest
		u.Type = CalculateMatrixRequestBodyTypeSymmetricalMatrixRequest
		return nil
	}

	return errors.New("could not unmarshal into supported union types")
}

func (u CalculateMatrixRequestBody) MarshalJSON() ([]byte, error) {
	if u.MatrixRequest != nil {
		return json.Marshal(u.MatrixRequest)
	}

	if u.SymmetricalMatrixRequest != nil {
		return json.Marshal(u.SymmetricalMatrixRequest)
	}

	return nil, nil
}

type CalculateMatrixResponse struct {
	ContentType string
	// Unexpected Error
	GHError *shared.GHError
	Headers map[string][]string
	// A jobId you can use to retrieve your solution from the server.
	JobID       *shared.JobID
	StatusCode  int
	RawResponse *http.Response
}
