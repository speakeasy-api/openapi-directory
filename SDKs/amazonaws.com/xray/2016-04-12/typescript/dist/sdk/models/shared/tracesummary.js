"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TraceSummary = void 0;
var utils_1 = require("../../../internal/utils");
var availabilityzonedetail_1 = require("./availabilityzonedetail");
var errorrootcause_1 = require("./errorrootcause");
var faultrootcause_1 = require("./faultrootcause");
var http_1 = require("./http");
var instanceiddetail_1 = require("./instanceiddetail");
var resourcearndetail_1 = require("./resourcearndetail");
var responsetimerootcause_1 = require("./responsetimerootcause");
var serviceid_1 = require("./serviceid");
var traceuser_1 = require("./traceuser");
var valuewithserviceids_1 = require("./valuewithserviceids");
var class_transformer_1 = require("class-transformer");
/**
 * Metadata generated from the segment documents in a trace.
 */
var TraceSummary = /** @class */ (function (_super) {
    __extends(TraceSummary, _super);
    function TraceSummary() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: valuewithserviceids_1.ValueWithServiceIds, elemDepth: 2 }),
        (0, class_transformer_1.Expose)({ name: "Annotations" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            var obj = {};
            for (var key in value) {
                obj[key] = (0, utils_1.objectToClass)(value[key], valuewithserviceids_1.ValueWithServiceIds);
            }
            return obj;
        }, { toClassOnly: true }),
        __metadata("design:type", Object)
    ], TraceSummary.prototype, "annotations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: availabilityzonedetail_1.AvailabilityZoneDetail }),
        (0, class_transformer_1.Expose)({ name: "AvailabilityZones" }),
        (0, class_transformer_1.Type)(function () { return availabilityzonedetail_1.AvailabilityZoneDetail; }),
        __metadata("design:type", Array)
    ], TraceSummary.prototype, "availabilityZones", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Duration" }),
        __metadata("design:type", Number)
    ], TraceSummary.prototype, "duration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EntryPoint" }),
        (0, class_transformer_1.Type)(function () { return serviceid_1.ServiceId; }),
        __metadata("design:type", serviceid_1.ServiceId)
    ], TraceSummary.prototype, "entryPoint", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: errorrootcause_1.ErrorRootCause }),
        (0, class_transformer_1.Expose)({ name: "ErrorRootCauses" }),
        (0, class_transformer_1.Type)(function () { return errorrootcause_1.ErrorRootCause; }),
        __metadata("design:type", Array)
    ], TraceSummary.prototype, "errorRootCauses", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: faultrootcause_1.FaultRootCause }),
        (0, class_transformer_1.Expose)({ name: "FaultRootCauses" }),
        (0, class_transformer_1.Type)(function () { return faultrootcause_1.FaultRootCause; }),
        __metadata("design:type", Array)
    ], TraceSummary.prototype, "faultRootCauses", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "HasError" }),
        __metadata("design:type", Boolean)
    ], TraceSummary.prototype, "hasError", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "HasFault" }),
        __metadata("design:type", Boolean)
    ], TraceSummary.prototype, "hasFault", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "HasThrottle" }),
        __metadata("design:type", Boolean)
    ], TraceSummary.prototype, "hasThrottle", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Http" }),
        (0, class_transformer_1.Type)(function () { return http_1.Http; }),
        __metadata("design:type", http_1.Http)
    ], TraceSummary.prototype, "http", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Id" }),
        __metadata("design:type", String)
    ], TraceSummary.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: instanceiddetail_1.InstanceIdDetail }),
        (0, class_transformer_1.Expose)({ name: "InstanceIds" }),
        (0, class_transformer_1.Type)(function () { return instanceiddetail_1.InstanceIdDetail; }),
        __metadata("design:type", Array)
    ], TraceSummary.prototype, "instanceIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "IsPartial" }),
        __metadata("design:type", Boolean)
    ], TraceSummary.prototype, "isPartial", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MatchedEventTime" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], TraceSummary.prototype, "matchedEventTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: resourcearndetail_1.ResourceARNDetail }),
        (0, class_transformer_1.Expose)({ name: "ResourceARNs" }),
        (0, class_transformer_1.Type)(function () { return resourcearndetail_1.ResourceARNDetail; }),
        __metadata("design:type", Array)
    ], TraceSummary.prototype, "resourceARNs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ResponseTime" }),
        __metadata("design:type", Number)
    ], TraceSummary.prototype, "responseTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: responsetimerootcause_1.ResponseTimeRootCause }),
        (0, class_transformer_1.Expose)({ name: "ResponseTimeRootCauses" }),
        (0, class_transformer_1.Type)(function () { return responsetimerootcause_1.ResponseTimeRootCause; }),
        __metadata("design:type", Array)
    ], TraceSummary.prototype, "responseTimeRootCauses", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Revision" }),
        __metadata("design:type", Number)
    ], TraceSummary.prototype, "revision", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: serviceid_1.ServiceId }),
        (0, class_transformer_1.Expose)({ name: "ServiceIds" }),
        (0, class_transformer_1.Type)(function () { return serviceid_1.ServiceId; }),
        __metadata("design:type", Array)
    ], TraceSummary.prototype, "serviceIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: traceuser_1.TraceUser }),
        (0, class_transformer_1.Expose)({ name: "Users" }),
        (0, class_transformer_1.Type)(function () { return traceuser_1.TraceUser; }),
        __metadata("design:type", Array)
    ], TraceSummary.prototype, "users", void 0);
    return TraceSummary;
}(utils_1.SpeakeasyBase));
exports.TraceSummary = TraceSummary;
