<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class FetchAllFieldsRequest
{
    /**
     * Max number of results to return per batch.  Must be between 1 and 100 inclusive.  Defaults to 100.
     * 
     * @var ?int $xLimit
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Limit')]
    public ?int $xLimit = null;
    
    /**
     * Opaque string which allows for fetching the next batch of results.  Can be used to poll for changes.
     * 
     * @var ?string $xNextToken
     */
	#[SpeakeasyMetadata('header:style=simple,explode=false,name=X-Next-Token')]
    public ?string $xNextToken = null;
    
    /**
     * Optional prefix filter for field name. Must be at least 3 characters.
     * 
     * @var ?string $fieldName
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=fieldName')]
    public ?string $fieldName = null;
    
	public function __construct()
	{
		$this->xLimit = null;
		$this->xNextToken = null;
		$this->fieldName = null;
	}
}
