<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class GetSearchHeavyEquipmentAutoCompleteRequest
{
    /**
     * The API Authentication Key. Mandatory with all API calls.
     * 
     * @var ?string $apiKey
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=api_key')]
    public ?string $apiKey = null;
    
    /**
     * To filter listing on their body type
     * 
     * @var ?string $bodyType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=body_type')]
    public ?string $bodyType = null;
    
    /**
     * To filter listing on City in which they are listed
     * 
     * @var ?string $city
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=city')]
    public ?string $city = null;
    
    /**
     * Color of the vehicle
     * 
     * @var ?string $color
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=color')]
    public ?string $color = null;
    
    /**
     * To filter listing on their drivetrain
     * 
     * @var ?string $drivetrain
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=drivetrain')]
    public ?string $drivetrain = null;
    
    /**
     * To filter listing on their engine
     * 
     * @var ?string $engine
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=engine')]
    public ?string $engine = null;
    
    /**
     * Provide minimum count value for facets
     * 
     * @var ?float $facetMinCount
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=facet_min_count')]
    public ?float $facetMinCount = null;
    
    /**
     * Field name for which you want auto-completion
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\GetSearchHeavyEquipmentAutoCompleteFieldEnum $field
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=field')]
    public GetSearchHeavyEquipmentAutoCompleteFieldEnum $field;
    
    /**
     * To filter listing on their fuel type
     * 
     * @var ?string $fuelType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=fuel_type')]
    public ?string $fuelType = null;
    
    /**
     * Boolean variable to indicate ignore case of current input
     * 
     * @var ?bool $ignoreCase
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=ignore_case')]
    public ?bool $ignoreCase = null;
    
    /**
     * Input entered so far
     * 
     * @var string $input
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=input')]
    public string $input;
    
    /**
     * To filter listing on their condition. Either used or new
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\InventoryTypeEnum $inventoryType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=inventory_type')]
    public ?\OpenAPI\OpenAPI\Models\Shared\InventoryTypeEnum $inventoryType = null;
    
    /**
     * To filter listings on their make
     * 
     * @var ?string $make
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=make')]
    public ?string $make = null;
    
    /**
     * To filter listings on their model
     * 
     * @var ?string $model
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=model')]
    public ?string $model = null;
    
    /**
     * Radius around the search location (Unit - Miles)
     * 
     * @var ?int $radius
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=radius')]
    public ?int $radius = null;
    
    /**
     * seller type for autocomplete
     * 
     * @var ?string $sellerType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=seller_type')]
    public ?string $sellerType = null;
    
    /**
     * Sort the response, either by index or count(default)
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\GetSearchHeavyEquipmentAutoCompleteSortByEnum $sortBy
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=sort_by')]
    public ?GetSearchHeavyEquipmentAutoCompleteSortByEnum $sortBy = null;
    
    /**
     * To filter listing on State in which they are listed
     * 
     * @var ?string $state
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=state')]
    public ?string $state = null;
    
    /**
     * Boolean variable to indicate wheather to include term counts as well in response
     * 
     * @var ?bool $termCounts
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=term_counts')]
    public ?bool $termCounts = null;
    
    /**
     * To filter listing on their transmission
     * 
     * @var ?string $transmission
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=transmission')]
    public ?string $transmission = null;
    
    /**
     * To filter listing on their trim
     * 
     * @var ?string $trim
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=trim')]
    public ?string $trim = null;
    
    /**
     * To filter listing on their vehicle type
     * 
     * @var ?string $vehicleType
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=vehicle_type')]
    public ?string $vehicleType = null;
    
    /**
     * To filter listing on their year
     * 
     * @var ?string $year
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=year')]
    public ?string $year = null;
    
    /**
     * To filter listing on ZIP around which they are listed
     * 
     * @var ?string $zip
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=zip')]
    public ?string $zip = null;
    
	public function __construct()
	{
		$this->apiKey = null;
		$this->bodyType = null;
		$this->city = null;
		$this->color = null;
		$this->drivetrain = null;
		$this->engine = null;
		$this->facetMinCount = null;
		$this->field = \OpenAPI\OpenAPI\Models\Operations\GetSearchHeavyEquipmentAutoCompleteFieldEnum::MAKE;
		$this->fuelType = null;
		$this->ignoreCase = null;
		$this->input = "";
		$this->inventoryType = null;
		$this->make = null;
		$this->model = null;
		$this->radius = null;
		$this->sellerType = null;
		$this->sortBy = null;
		$this->state = null;
		$this->termCounts = null;
		$this->transmission = null;
		$this->trim = null;
		$this->vehicleType = null;
		$this->year = null;
		$this->zip = null;
	}
}
