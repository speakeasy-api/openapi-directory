<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;

use \OpenAPI\OpenAPI\Utils\SpeakeasyMetadata;
class ParticipantWebinarFeedbackRequest
{
    /**
     * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
     * 
     * @var ?string $nextPageToken
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=next_page_token')]
    public ?string $nextPageToken = null;
    
    /**
     * The number of records returned within a single API call.
     * 
     * @var ?int $pageSize
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=page_size')]
    public ?int $pageSize = null;
    
    /**
     * Specify a value to get the response for the corresponding meeting type. The value of this field can be one of the following:<br> <br>`past` - Meeting that already occurred in the specified date range.<br>`pastOne` - Past meetings that were attended by only one user. <br>`live` - Live meetings.<br><br>
     * 
     * 
     * If you do not provide this field, the default value will be `live` and thus, the API will only query responses for live meetings.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\ParticipantWebinarFeedbackTypeEnum $type
     */
	#[SpeakeasyMetadata('queryParam:style=form,explode=true,name=type')]
    public ?ParticipantWebinarFeedbackTypeEnum $type = null;
    
    /**
     * The webinar ID or the webinar UUID.  If a webinar ID is provided in the request instead of a UUID, the response will be for the latest webinar instance.
     * 
     * 
     * If a UUID starts with "/" or contains "//" (example: "/ajXp112QmuoKj4854875==\"), you must **double encode** the UUID before making an API request.
     * 
     * @var string $webinarId
     */
	#[SpeakeasyMetadata('pathParam:style=simple,explode=false,name=webinarId')]
    public string $webinarId;
    
	public function __construct()
	{
		$this->nextPageToken = null;
		$this->pageSize = null;
		$this->type = null;
		$this->webinarId = "";
	}
}
