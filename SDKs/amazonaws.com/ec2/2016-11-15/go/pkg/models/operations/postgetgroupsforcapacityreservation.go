// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTGetGroupsForCapacityReservationActionEnum
type POSTGetGroupsForCapacityReservationActionEnum string

const (
	POSTGetGroupsForCapacityReservationActionEnumGetGroupsForCapacityReservation POSTGetGroupsForCapacityReservationActionEnum = "GetGroupsForCapacityReservation"
)

func (e POSTGetGroupsForCapacityReservationActionEnum) ToPointer() *POSTGetGroupsForCapacityReservationActionEnum {
	return &e
}

func (e *POSTGetGroupsForCapacityReservationActionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "GetGroupsForCapacityReservation":
		*e = POSTGetGroupsForCapacityReservationActionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetGroupsForCapacityReservationActionEnum: %v", v)
	}
}

// POSTGetGroupsForCapacityReservationVersionEnum
type POSTGetGroupsForCapacityReservationVersionEnum string

const (
	POSTGetGroupsForCapacityReservationVersionEnumTwoThousandAndSixteen1115 POSTGetGroupsForCapacityReservationVersionEnum = "2016-11-15"
)

func (e POSTGetGroupsForCapacityReservationVersionEnum) ToPointer() *POSTGetGroupsForCapacityReservationVersionEnum {
	return &e
}

func (e *POSTGetGroupsForCapacityReservationVersionEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "2016-11-15":
		*e = POSTGetGroupsForCapacityReservationVersionEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTGetGroupsForCapacityReservationVersionEnum: %v", v)
	}
}

type POSTGetGroupsForCapacityReservationRequest struct {
	Action POSTGetGroupsForCapacityReservationActionEnum `queryParam:"style=form,explode=true,name=Action"`
	// Pagination limit
	MaxResults *string `queryParam:"style=form,explode=true,name=MaxResults"`
	// Pagination token
	NextToken         *string                                        `queryParam:"style=form,explode=true,name=NextToken"`
	RequestBody       []byte                                         `request:"mediaType=text/xml"`
	Version           POSTGetGroupsForCapacityReservationVersionEnum `queryParam:"style=form,explode=true,name=Version"`
	XAmzAlgorithm     *string                                        `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                        `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                        `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                        `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                        `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                        `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                        `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTGetGroupsForCapacityReservationResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
