/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * VerifyLocationRequest - Request message for Verifications.VerifyLocation.
 */
public class VerifyLocationRequest {
    /**
     * Additional data for service business verification.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("context")
    public ServiceBusinessContext context;
    public VerifyLocationRequest withContext(ServiceBusinessContext context) {
        this.context = context;
        return this;
    }
    
    /**
     * Optional. The input for EMAIL method. Email address where the PIN should be sent to. An email address is accepted only if it is one of the addresses provided by FetchVerificationOptions. If the EmailVerificationData has is_user_name_editable set to true, the client may specify a different user name (local-part) but must match the domain name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emailAddress")
    public String emailAddress;
    public VerifyLocationRequest withEmailAddress(String emailAddress) {
        this.emailAddress = emailAddress;
        return this;
    }
    
    /**
     * Optional. The BCP 47 language code representing the language that is to be used for the verification process.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("languageCode")
    public String languageCode;
    public VerifyLocationRequest withLanguageCode(String languageCode) {
        this.languageCode = languageCode;
        return this;
    }
    
    /**
     * Optional. The input for ADDRESS method. Contact name the mail should be sent to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mailerContact")
    public String mailerContact;
    public VerifyLocationRequest withMailerContact(String mailerContact) {
        this.mailerContact = mailerContact;
        return this;
    }
    
    /**
     * Required. Verification method.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("method")
    public VerifyLocationRequestMethodEnum method;
    public VerifyLocationRequest withMethod(VerifyLocationRequestMethodEnum method) {
        this.method = method;
        return this;
    }
    
    /**
     * Optional. The input for PHONE_CALL/SMS method The phone number that should be called or be sent SMS to. It must be one of the phone numbers in the eligible options.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phoneNumber")
    public String phoneNumber;
    public VerifyLocationRequest withPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
        return this;
    }
    
    /**
     * Token generated by a vetted [partner](https://support.google.com/business/answer/7674102).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("token")
    public VerificationToken token;
    public VerifyLocationRequest withToken(VerificationToken token) {
        this.token = token;
        return this;
    }
    
}
