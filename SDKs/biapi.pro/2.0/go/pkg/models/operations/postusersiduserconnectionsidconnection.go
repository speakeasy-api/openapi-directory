// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type PostUsersIDUserConnectionsIDConnectionPathParams struct {
	IDConnection int64 `pathParam:"style=simple,explode=false,name=id_connection"`
	// Hint: you can use 'me' or 'all'
	IDUser string `pathParam:"style=simple,explode=false,name=id_user"`
}

type PostUsersIDUserConnectionsIDConnectionQueryParams struct {
	// Do the connection update/synchronization in background
	Background *bool   `queryParam:"style=form,explode=true,name=background"`
	Expand     *string `queryParam:"style=form,explode=true,name=expand"`
	// Whether the connection synchronization is asked by the PSU or not (default is true)
	PsuRequested *bool `queryParam:"style=form,explode=true,name=psu_requested"`
	// Refresh the PSU's SCA for openapi source
	RefreshPsd2Auth *bool `queryParam:"style=form,explode=true,name=refresh_psd2_auth"`
}

type PostUsersIDUserConnectionsIDConnectionRequestBody struct {
	// Set if the connection synchronization is active
	Active *bool `multipartForm:"name=active"`
	// Try to update a connection with the decoupled error
	Decoupled *bool `multipartForm:"name=decoupled"`
	// Set expiration of the connection to this date
	Expire *time.Time `multipartForm:"name=expire"`
	// Set login to this new login
	Login *string `multipartForm:"name=login"`
	// Set password to this new password
	Password *string `multipartForm:"name=password"`
}

type PostUsersIDUserConnectionsIDConnectionRequest struct {
	PathParams  PostUsersIDUserConnectionsIDConnectionPathParams
	QueryParams PostUsersIDUserConnectionsIDConnectionQueryParams
	Request     *PostUsersIDUserConnectionsIDConnectionRequestBody `request:"mediaType=multipart/form-data"`
}

type PostUsersIDUserConnectionsIDConnectionResponse struct {
	// Successful POST on Connection resource
	Connection  *shared.Connection
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
