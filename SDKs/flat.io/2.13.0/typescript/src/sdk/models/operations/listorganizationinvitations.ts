/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ListOrganizationInvitationsSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=oauth2;name=Authorization",
  })
  oAuth2: string;
}

/**
 * Filter users by role
 */
export enum ListOrganizationInvitationsRoleEnum {
  User = "user",
  Teacher = "teacher",
  Admin = "admin",
}

export class ListOrganizationInvitationsRequest extends SpeakeasyBase {
  /**
   * This is the maximum number of objects that may be returned
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
  limit?: number;

  /**
   * An opaque string cursor to fetch the next page of data.
   *
   * @remarks
   * The paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.
   *
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=next" })
  next?: string;

  /**
   * An opaque string cursor to fetch the previous page of data.
   *
   * @remarks
   * The paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.
   *
   */
  @SpeakeasyMetadata({
    data: "queryParam, style=form;explode=true;name=previous",
  })
  previous?: string;

  /**
   * Filter users by role
   */
  @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=role" })
  role?: ListOrganizationInvitationsRoleEnum;
}

export class ListOrganizationInvitationsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  flatErrorResponse?: shared.FlatErrorResponse;

  /**
   * List of invitations
   */
  @SpeakeasyMetadata({ elemType: shared.OrganizationInvitation })
  organizationInvitations?: shared.OrganizationInvitation[];

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;
}
