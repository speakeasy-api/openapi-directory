// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EventRecordFailureFailureCauseEnum - The cause for the update failure.
type EventRecordFailureFailureCauseEnum string

const (
	EventRecordFailureFailureCauseEnumEventUpdateFailureCauseUnspecified EventRecordFailureFailureCauseEnum = "EVENT_UPDATE_FAILURE_CAUSE_UNSPECIFIED"
	EventRecordFailureFailureCauseEnumNotFound                           EventRecordFailureFailureCauseEnum = "NOT_FOUND"
	EventRecordFailureFailureCauseEnumInvalidUpdateValue                 EventRecordFailureFailureCauseEnum = "INVALID_UPDATE_VALUE"
)

func (e *EventRecordFailureFailureCauseEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "EVENT_UPDATE_FAILURE_CAUSE_UNSPECIFIED":
		fallthrough
	case "NOT_FOUND":
		fallthrough
	case "INVALID_UPDATE_VALUE":
		*e = EventRecordFailureFailureCauseEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EventRecordFailureFailureCauseEnum: %s", s)
	}
}

// EventRecordFailure - An event update failure resource.
type EventRecordFailure struct {
	// The ID of the event that was not updated.
	EventID *string `json:"eventId,omitempty"`
	// The cause for the update failure.
	FailureCause *EventRecordFailureFailureCauseEnum `json:"failureCause,omitempty"`
	// Uniquely identifies the type of this resource. Value is always the fixed string `games#eventRecordFailure`.
	Kind *string `json:"kind,omitempty"`
}
