<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class SendEmailRequestBody
{
    /**
     * <p>The name of a configuration set.</p> <p>In Amazon Pinpoint, <i>configuration sets</i> are groups of rules that you can apply to the emails you send. You apply a configuration set to an email by including a reference to the configuration set in the headers of the email. When you apply a configuration set to an email, all of the rules in that configuration set are applied to the email.</p>
     * 
     * @var ?string $configurationSetName
     */
	#[\JMS\Serializer\Annotation\SerializedName('ConfigurationSetName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $configurationSetName = null;
    
    /**
     * An object that defines the entire content of the email, including the message headers and the body content. You can create a simple email message, in which you specify the subject and the text and HTML versions of the message body. You can also create raw messages, in which you specify a complete MIME-formatted message. Raw messages can include attachments and custom headers.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\SendEmailRequestBodyContent $content
     */
	#[\JMS\Serializer\Annotation\SerializedName('Content')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\SendEmailRequestBodyContent')]
    public SendEmailRequestBodyContent $content;
    
    /**
     * An object that describes the recipients for an email.
     * 
     * @var \OpenAPI\OpenAPI\Models\Operations\SendEmailRequestBodyDestination $destination
     */
	#[\JMS\Serializer\Annotation\SerializedName('Destination')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\SendEmailRequestBodyDestination')]
    public SendEmailRequestBodyDestination $destination;
    
    /**
     * A list of message tags.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\MessageTag> $emailTags
     */
	#[\JMS\Serializer\Annotation\SerializedName('EmailTags')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\MessageTag>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $emailTags = null;
    
    /**
     * The address that Amazon Pinpoint should send bounce and complaint notifications to.
     * 
     * @var ?string $feedbackForwardingEmailAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('FeedbackForwardingEmailAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $feedbackForwardingEmailAddress = null;
    
    /**
     * The email address that you want to use as the "From" address for the email. The address that you specify has to be verified. 
     * 
     * @var ?string $fromEmailAddress
     */
	#[\JMS\Serializer\Annotation\SerializedName('FromEmailAddress')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $fromEmailAddress = null;
    
    /**
     * The "Reply-to" email addresses for the message. When the recipient replies to the message, each Reply-to address receives the reply.
     * 
     * @var ?array<string> $replyToAddresses
     */
	#[\JMS\Serializer\Annotation\SerializedName('ReplyToAddresses')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $replyToAddresses = null;
    
	public function __construct()
	{
		$this->configurationSetName = null;
		$this->content = new \OpenAPI\OpenAPI\Models\Operations\SendEmailRequestBodyContent();
		$this->destination = new \OpenAPI\OpenAPI\Models\Operations\SendEmailRequestBodyDestination();
		$this->emailTags = null;
		$this->feedbackForwardingEmailAddress = null;
		$this->fromEmailAddress = null;
		$this->replyToAddresses = null;
	}
}
