"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class MeetingsCapabilityWebhooksRecordingChangedHTTPMethodEnum(str, Enum):
    GET = 'GET'
    POST = 'POST'
    PUT = 'PUT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MeetingsCapabilityWebhooksRecordingChanged:
    r"""Vonage will send recording changed events to this URL"""
    
    address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})  
    http_method: Optional[MeetingsCapabilityWebhooksRecordingChangedHTTPMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http_method'), 'exclude': lambda f: f is None }})  
    
class MeetingsCapabilityWebhooksRoomChangedHTTPMethodEnum(str, Enum):
    GET = 'GET'
    POST = 'POST'
    PUT = 'PUT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MeetingsCapabilityWebhooksRoomChanged:
    r"""Vonage will send call room changed events to this URL"""
    
    address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})  
    http_method: Optional[MeetingsCapabilityWebhooksRoomChangedHTTPMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http_method'), 'exclude': lambda f: f is None }})  
    
class MeetingsCapabilityWebhooksSessionChangedHTTPMethodEnum(str, Enum):
    GET = 'GET'
    POST = 'POST'
    PUT = 'PUT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MeetingsCapabilityWebhooksSessionChanged:
    r"""Vonage will send call session changed events to this URL"""
    
    address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})  
    http_method: Optional[MeetingsCapabilityWebhooksSessionChangedHTTPMethodEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('http_method'), 'exclude': lambda f: f is None }})  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MeetingsCapabilityWebhooks:
    
    recording_changed: Optional[MeetingsCapabilityWebhooksRecordingChanged] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('recording_changed'), 'exclude': lambda f: f is None }})
    r"""Vonage will send recording changed events to this URL"""  
    room_changed: Optional[MeetingsCapabilityWebhooksRoomChanged] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('room_changed'), 'exclude': lambda f: f is None }})
    r"""Vonage will send call room changed events to this URL"""  
    session_changed: Optional[MeetingsCapabilityWebhooksSessionChanged] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('session_changed'), 'exclude': lambda f: f is None }})
    r"""Vonage will send call session changed events to this URL"""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class MeetingsCapability:
    r"""Meetings related configuration"""
    
    webhooks: Optional[MeetingsCapabilityWebhooks] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('webhooks'), 'exclude': lambda f: f is None }})  
    