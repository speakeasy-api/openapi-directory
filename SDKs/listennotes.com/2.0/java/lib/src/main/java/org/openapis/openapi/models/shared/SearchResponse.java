/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SearchResponse - OK
 */
public class SearchResponse {
    /**
     * The number of search results in this page.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("count")
    public Long count;

    public SearchResponse withCount(Long count) {
        this.count = count;
        return this;
    }
    
    /**
     * Pass this value to the **offset** parameter to do pagination of search results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("next_offset")
    public Long nextOffset;

    public SearchResponse withNextOffset(Long nextOffset) {
        this.nextOffset = nextOffset;
        return this;
    }
    
    /**
     * A list of search results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("results")
    public Object[] results;

    public SearchResponse withResults(Object[] results) {
        this.results = results;
        return this;
    }
    
    /**
     * The time it took to fetch these search results. In seconds.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("took")
    public Double took;

    public SearchResponse withTook(Double took) {
        this.took = took;
        return this;
    }
    
    /**
     * The total number of search results.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("total")
    public Long total;

    public SearchResponse withTotal(Long total) {
        this.total = total;
        return this;
    }
    
    public SearchResponse(){}
}
