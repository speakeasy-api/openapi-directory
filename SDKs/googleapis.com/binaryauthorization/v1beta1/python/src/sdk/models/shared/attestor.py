"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import userowneddrydocknote as shared_userowneddrydocknote
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AttestorInput:
    r"""An attestor that attests to container image artifacts. An existing attestor cannot be modified except where indicated."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs."""  
    etag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('etag'), 'exclude': lambda f: f is None }})
    r"""Optional. A checksum, returned by the server, that can be sent on update requests to ensure the attestor has an up-to-date value before attempting to update it. See https://google.aip.dev/154."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Required. The resource name, in the format: `projects/*/attestors/*`. This field may not be updated."""  
    user_owned_drydock_note: Optional[shared_userowneddrydocknote.UserOwnedDrydockNoteInput] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userOwnedDrydockNote'), 'exclude': lambda f: f is None }})
    r"""An user owned drydock note references a Drydock ATTESTATION_AUTHORITY Note created by the user."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Attestor:
    r"""An attestor that attests to container image artifacts. An existing attestor cannot be modified except where indicated."""
    
    description: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('description'), 'exclude': lambda f: f is None }})
    r"""Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs."""  
    etag: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('etag'), 'exclude': lambda f: f is None }})
    r"""Optional. A checksum, returned by the server, that can be sent on update requests to ensure the attestor has an up-to-date value before attempting to update it. See https://google.aip.dev/154."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Required. The resource name, in the format: `projects/*/attestors/*`. This field may not be updated."""  
    update_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('updateTime'), 'exclude': lambda f: f is None }})
    r"""Output only. Time when the attestor was last updated."""  
    user_owned_drydock_note: Optional[shared_userowneddrydocknote.UserOwnedDrydockNote] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('userOwnedDrydockNote'), 'exclude': lambda f: f is None }})
    r"""An user owned drydock note references a Drydock ATTESTATION_AUTHORITY Note created by the user."""  
    