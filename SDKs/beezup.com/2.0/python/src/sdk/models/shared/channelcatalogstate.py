"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import beezup_common_apisettingsstatus_enum as shared_beezup_common_apisettingsstatus_enum
from ..shared import categorymappingstate as shared_categorymappingstate
from ..shared import columnmappingstatus_enum as shared_columnmappingstatus_enum
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ChannelCatalogState:
    r"""Channel Catalog State"""
    
    category_mapping_state: shared_categorymappingstate.CategoryMappingState = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('categoryMappingState') }})
    r"""The category mapping state of the channel catalog"""  
    column_mapping_status: shared_columnmappingstatus_enum.ColumnMappingStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('columnMappingStatus') }})  
    exported_product_count: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exportedProductCount') }})  
    api_settings_status: Optional[shared_beezup_common_apisettingsstatus_enum.BeezUPCommonAPISettingsStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('apiSettingsStatus'), 'exclude': lambda f: f is None }})  
    