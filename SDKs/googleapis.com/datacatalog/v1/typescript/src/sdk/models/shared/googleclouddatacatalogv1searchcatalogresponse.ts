/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { GoogleCloudDatacatalogV1SearchCatalogResult } from "./googleclouddatacatalogv1searchcatalogresult";
import { Expose, Type } from "class-transformer";

/**
 * Response message for SearchCatalog.
 */
export class GoogleCloudDatacatalogV1SearchCatalogResponse extends SpeakeasyBase {
  /**
   * Pagination token that can be used in subsequent calls to retrieve the next page of results.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;

  /**
   * Search results.
   */
  @SpeakeasyMetadata({ elemType: GoogleCloudDatacatalogV1SearchCatalogResult })
  @Expose({ name: "results" })
  @Type(() => GoogleCloudDatacatalogV1SearchCatalogResult)
  results?: GoogleCloudDatacatalogV1SearchCatalogResult[];

  /**
   * Unreachable locations. Search results don't include data from those locations. To get additional information on an error, repeat the search request and restrict it to specific locations by setting the `SearchCatalogRequest.scope.restricted_locations` parameter.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unreachable" })
  unreachable?: string[];
}
