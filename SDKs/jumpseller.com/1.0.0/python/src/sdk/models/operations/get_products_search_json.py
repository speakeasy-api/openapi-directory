"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import notfound as shared_notfound
from ..shared import product as shared_product
from enum import Enum
from typing import Optional

class GetProductsSearchJSONFieldsEnum(str, Enum):
    r"""Comma separated values of the fields to query for the Product"""
    SKU = 'sku'
    BARCODE = 'barcode'
    BRAND = 'brand'
    NAME = 'name'
    DESCRIPTION = 'description'
    VARIANTS = 'variants'
    OPTION_NAME = 'option_name'
    CUSTOM_FIELDS = 'custom_fields'
    CUSTOM_FIELDS_SELECTS = 'custom_fields_selects'


@dataclasses.dataclass
class GetProductsSearchJSONRequest:
    
    authtoken: str = dataclasses.field(metadata={'query_param': { 'field_name': 'authtoken', 'style': 'form', 'explode': True }})
    r"""API OAuth token."""  
    login: str = dataclasses.field(metadata={'query_param': { 'field_name': 'login', 'style': 'form', 'explode': True }})
    r"""API OAuth login."""  
    query: str = dataclasses.field(metadata={'query_param': { 'field_name': 'query', 'style': 'form', 'explode': True }})
    r"""Text to query for the Product"""  
    fields_: Optional[GetProductsSearchJSONFieldsEnum] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'fields', 'style': 'form', 'explode': True }})
    r"""Comma separated values of the fields to query for the Product"""  
    locale: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'locale', 'style': 'form', 'explode': True }})
    r"""Locale code of the translation"""  
    

@dataclasses.dataclass
class GetProductsSearchJSONResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    not_found: Optional[shared_notfound.NotFound] = dataclasses.field(default=None)
    r"""Invalid query."""  
    products: Optional[list[shared_product.Product]] = dataclasses.field(default=None)
    r"""An array of products"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    