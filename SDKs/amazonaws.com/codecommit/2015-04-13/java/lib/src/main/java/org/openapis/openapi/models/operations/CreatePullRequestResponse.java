/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import java.net.http.HttpResponse;

public class CreatePullRequestResponse {
    /**
     * ClientRequestTokenRequiredException
     */
    
    public Object clientRequestTokenRequiredException;

    public CreatePullRequestResponse withClientRequestTokenRequiredException(Object clientRequestTokenRequiredException) {
        this.clientRequestTokenRequiredException = clientRequestTokenRequiredException;
        return this;
    }
    
    
    public String contentType;

    public CreatePullRequestResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Success
     */
    
    public org.openapis.openapi.models.shared.CreatePullRequestOutput createPullRequestOutput;

    public CreatePullRequestResponse withCreatePullRequestOutput(org.openapis.openapi.models.shared.CreatePullRequestOutput createPullRequestOutput) {
        this.createPullRequestOutput = createPullRequestOutput;
        return this;
    }
    
    /**
     * EncryptionIntegrityChecksFailedException
     */
    
    public Object encryptionIntegrityChecksFailedException;

    public CreatePullRequestResponse withEncryptionIntegrityChecksFailedException(Object encryptionIntegrityChecksFailedException) {
        this.encryptionIntegrityChecksFailedException = encryptionIntegrityChecksFailedException;
        return this;
    }
    
    /**
     * EncryptionKeyAccessDeniedException
     */
    
    public Object encryptionKeyAccessDeniedException;

    public CreatePullRequestResponse withEncryptionKeyAccessDeniedException(Object encryptionKeyAccessDeniedException) {
        this.encryptionKeyAccessDeniedException = encryptionKeyAccessDeniedException;
        return this;
    }
    
    /**
     * EncryptionKeyDisabledException
     */
    
    public Object encryptionKeyDisabledException;

    public CreatePullRequestResponse withEncryptionKeyDisabledException(Object encryptionKeyDisabledException) {
        this.encryptionKeyDisabledException = encryptionKeyDisabledException;
        return this;
    }
    
    /**
     * EncryptionKeyNotFoundException
     */
    
    public Object encryptionKeyNotFoundException;

    public CreatePullRequestResponse withEncryptionKeyNotFoundException(Object encryptionKeyNotFoundException) {
        this.encryptionKeyNotFoundException = encryptionKeyNotFoundException;
        return this;
    }
    
    /**
     * EncryptionKeyUnavailableException
     */
    
    public Object encryptionKeyUnavailableException;

    public CreatePullRequestResponse withEncryptionKeyUnavailableException(Object encryptionKeyUnavailableException) {
        this.encryptionKeyUnavailableException = encryptionKeyUnavailableException;
        return this;
    }
    
    /**
     * IdempotencyParameterMismatchException
     */
    
    public Object idempotencyParameterMismatchException;

    public CreatePullRequestResponse withIdempotencyParameterMismatchException(Object idempotencyParameterMismatchException) {
        this.idempotencyParameterMismatchException = idempotencyParameterMismatchException;
        return this;
    }
    
    /**
     * InvalidClientRequestTokenException
     */
    
    public Object invalidClientRequestTokenException;

    public CreatePullRequestResponse withInvalidClientRequestTokenException(Object invalidClientRequestTokenException) {
        this.invalidClientRequestTokenException = invalidClientRequestTokenException;
        return this;
    }
    
    /**
     * InvalidDescriptionException
     */
    
    public Object invalidDescriptionException;

    public CreatePullRequestResponse withInvalidDescriptionException(Object invalidDescriptionException) {
        this.invalidDescriptionException = invalidDescriptionException;
        return this;
    }
    
    /**
     * InvalidReferenceNameException
     */
    
    public Object invalidReferenceNameException;

    public CreatePullRequestResponse withInvalidReferenceNameException(Object invalidReferenceNameException) {
        this.invalidReferenceNameException = invalidReferenceNameException;
        return this;
    }
    
    /**
     * InvalidRepositoryNameException
     */
    
    public Object invalidRepositoryNameException;

    public CreatePullRequestResponse withInvalidRepositoryNameException(Object invalidRepositoryNameException) {
        this.invalidRepositoryNameException = invalidRepositoryNameException;
        return this;
    }
    
    /**
     * InvalidTargetException
     */
    
    public Object invalidTargetException;

    public CreatePullRequestResponse withInvalidTargetException(Object invalidTargetException) {
        this.invalidTargetException = invalidTargetException;
        return this;
    }
    
    /**
     * InvalidTargetsException
     */
    
    public Object invalidTargetsException;

    public CreatePullRequestResponse withInvalidTargetsException(Object invalidTargetsException) {
        this.invalidTargetsException = invalidTargetsException;
        return this;
    }
    
    /**
     * InvalidTitleException
     */
    
    public Object invalidTitleException;

    public CreatePullRequestResponse withInvalidTitleException(Object invalidTitleException) {
        this.invalidTitleException = invalidTitleException;
        return this;
    }
    
    /**
     * MaximumOpenPullRequestsExceededException
     */
    
    public Object maximumOpenPullRequestsExceededException;

    public CreatePullRequestResponse withMaximumOpenPullRequestsExceededException(Object maximumOpenPullRequestsExceededException) {
        this.maximumOpenPullRequestsExceededException = maximumOpenPullRequestsExceededException;
        return this;
    }
    
    /**
     * MultipleRepositoriesInPullRequestException
     */
    
    public Object multipleRepositoriesInPullRequestException;

    public CreatePullRequestResponse withMultipleRepositoriesInPullRequestException(Object multipleRepositoriesInPullRequestException) {
        this.multipleRepositoriesInPullRequestException = multipleRepositoriesInPullRequestException;
        return this;
    }
    
    /**
     * ReferenceDoesNotExistException
     */
    
    public Object referenceDoesNotExistException;

    public CreatePullRequestResponse withReferenceDoesNotExistException(Object referenceDoesNotExistException) {
        this.referenceDoesNotExistException = referenceDoesNotExistException;
        return this;
    }
    
    /**
     * ReferenceNameRequiredException
     */
    
    public Object referenceNameRequiredException;

    public CreatePullRequestResponse withReferenceNameRequiredException(Object referenceNameRequiredException) {
        this.referenceNameRequiredException = referenceNameRequiredException;
        return this;
    }
    
    /**
     * ReferenceTypeNotSupportedException
     */
    
    public Object referenceTypeNotSupportedException;

    public CreatePullRequestResponse withReferenceTypeNotSupportedException(Object referenceTypeNotSupportedException) {
        this.referenceTypeNotSupportedException = referenceTypeNotSupportedException;
        return this;
    }
    
    /**
     * RepositoryDoesNotExistException
     */
    
    public Object repositoryDoesNotExistException;

    public CreatePullRequestResponse withRepositoryDoesNotExistException(Object repositoryDoesNotExistException) {
        this.repositoryDoesNotExistException = repositoryDoesNotExistException;
        return this;
    }
    
    /**
     * RepositoryNameRequiredException
     */
    
    public Object repositoryNameRequiredException;

    public CreatePullRequestResponse withRepositoryNameRequiredException(Object repositoryNameRequiredException) {
        this.repositoryNameRequiredException = repositoryNameRequiredException;
        return this;
    }
    
    /**
     * SourceAndDestinationAreSameException
     */
    
    public Object sourceAndDestinationAreSameException;

    public CreatePullRequestResponse withSourceAndDestinationAreSameException(Object sourceAndDestinationAreSameException) {
        this.sourceAndDestinationAreSameException = sourceAndDestinationAreSameException;
        return this;
    }
    
    
    public Integer statusCode;

    public CreatePullRequestResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;

    public CreatePullRequestResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * TargetRequiredException
     */
    
    public Object targetRequiredException;

    public CreatePullRequestResponse withTargetRequiredException(Object targetRequiredException) {
        this.targetRequiredException = targetRequiredException;
        return this;
    }
    
    /**
     * TargetsRequiredException
     */
    
    public Object targetsRequiredException;

    public CreatePullRequestResponse withTargetsRequiredException(Object targetsRequiredException) {
        this.targetsRequiredException = targetsRequiredException;
        return this;
    }
    
    /**
     * TitleRequiredException
     */
    
    public Object titleRequiredException;

    public CreatePullRequestResponse withTitleRequiredException(Object titleRequiredException) {
        this.titleRequiredException = titleRequiredException;
        return this;
    }
    
    public CreatePullRequestResponse(@JsonProperty("ContentType") String contentType, @JsonProperty("StatusCode") Integer statusCode) {
        this.contentType = contentType;
        this.statusCode = statusCode;
  }
}
