"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SDK = exports.ServerList = void 0;
var accounts_1 = require("./accounts");
var analysiscategories_1 = require("./analysiscategories");
var bankaccounts_1 = require("./bankaccounts");
var booktrantypes_1 = require("./booktrantypes");
var cashpayments_1 = require("./cashpayments");
var cashreceipts_1 = require("./cashreceipts");
var categorytypes_1 = require("./categorytypes");
var companysettings_1 = require("./companysettings");
var companysetupconfig_1 = require("./companysetupconfig");
var customers_1 = require("./customers");
var email_1 = require("./email");
var ownertypegroups_1 = require("./ownertypegroups");
var ownertypes_1 = require("./ownertypes");
var payments_1 = require("./payments");
var products_1 = require("./products");
var producttypes_1 = require("./producttypes");
var purchases_1 = require("./purchases");
var quote_1 = require("./quote");
var sales_1 = require("./sales");
var salescreditnotes_1 = require("./salescreditnotes");
var salesentries_1 = require("./salesentries");
var salesinvoices_1 = require("./salesinvoices");
var salesrep_1 = require("./salesrep");
var suppliers_1 = require("./suppliers");
var userdefinedfields_1 = require("./userdefinedfields");
var vatanalysistypes_1 = require("./vatanalysistypes");
var vatcategories_1 = require("./vatcategories");
var vatrates_1 = require("./vatrates");
var vattypes_1 = require("./vattypes");
var axios_1 = __importDefault(require("axios"));
/**
 * Contains the list of servers available to the SDK
 */
exports.ServerList = ["https://app.bigredcloud.com/api"];
/**
 *
 * @remarks
 * <div style='line-height: 30px;'>
 *     <strong>Welcome to the Big Red Cloud API</strong><br/>
 *     This API enables programmatic access to Big Red Cloud data.<br/>
 *     We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>
 *     To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>
 *     Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>
 *     The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>
 *     For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>
 * </div>
 */
var SDK = /** @class */ (function () {
    function SDK(props) {
        var _a, _b;
        this._language = "typescript";
        this._sdkVersion = "0.0.1";
        this._genVersion = "internal";
        this._serverURL = (_a = props === null || props === void 0 ? void 0 : props.serverURL) !== null && _a !== void 0 ? _a : exports.ServerList[0];
        this._defaultClient =
            (_b = props === null || props === void 0 ? void 0 : props.defaultClient) !== null && _b !== void 0 ? _b : axios_1.default.create({ baseURL: this._serverURL });
        this._securityClient = this._defaultClient;
        this.accounts = new accounts_1.Accounts(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.analysisCategories = new analysiscategories_1.AnalysisCategories(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.bankAccounts = new bankaccounts_1.BankAccounts(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.bookTranTypes = new booktrantypes_1.BookTranTypes(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.cashPayments = new cashpayments_1.CashPayments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.cashReceipts = new cashreceipts_1.CashReceipts(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.categoryTypes = new categorytypes_1.CategoryTypes(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.companySettings = new companysettings_1.CompanySettings(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.companySetupConfig = new companysetupconfig_1.CompanySetupConfig(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.customers = new customers_1.Customers(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.email = new email_1.Email(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.ownerTypeGroups = new ownertypegroups_1.OwnerTypeGroups(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.ownerTypes = new ownertypes_1.OwnerTypes(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.payments = new payments_1.Payments(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.productTypes = new producttypes_1.ProductTypes(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.products = new products_1.Products(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.purchases = new purchases_1.Purchases(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.quote = new quote_1.Quote(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.sales = new sales_1.Sales(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.salesCreditNotes = new salescreditnotes_1.SalesCreditNotes(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.salesEntries = new salesentries_1.SalesEntries(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.salesInvoices = new salesinvoices_1.SalesInvoices(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.salesRep = new salesrep_1.SalesRep(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.suppliers = new suppliers_1.Suppliers(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.userDefinedFields = new userdefinedfields_1.UserDefinedFields(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.vatAnalysisTypes = new vatanalysistypes_1.VatAnalysisTypes(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.vatCategories = new vatcategories_1.VatCategories(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.vatRates = new vatrates_1.VatRates(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
        this.vatTypes = new vattypes_1.VatTypes(this._defaultClient, this._securityClient, this._serverURL, this._language, this._sdkVersion, this._genVersion);
    }
    return SDK;
}());
exports.SDK = SDK;
