"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RenderResponseData = exports.RenderResponseDataStatusEnum = void 0;
var utils_1 = require("../../../internal/utils");
var edit_1 = require("./edit");
var class_transformer_1 = require("class-transformer");
/**
 * The status of the render task. <ul>
 *
 * @remarks
 *   <li>`queued` - render is queued waiting to be rendered</li>
 *   <li>`fetching` - assets are being fetched</li>
 *   <li>`rendering` - the asset is being rendered</li>
 *   <li>`saving` - the final asset is being saved to storage</li>
 *   <li>`done` - the asset is ready to be downloaded</li>
 *   <li>`failed` - there was an error rendering the asset</li>
 * </ul>
 */
var RenderResponseDataStatusEnum;
(function (RenderResponseDataStatusEnum) {
    RenderResponseDataStatusEnum["Queued"] = "queued";
    RenderResponseDataStatusEnum["Fetching"] = "fetching";
    RenderResponseDataStatusEnum["Rendering"] = "rendering";
    RenderResponseDataStatusEnum["Saving"] = "saving";
    RenderResponseDataStatusEnum["Done"] = "done";
    RenderResponseDataStatusEnum["Failed"] = "failed";
})(RenderResponseDataStatusEnum = exports.RenderResponseDataStatusEnum || (exports.RenderResponseDataStatusEnum = {}));
/**
 * The response data returned with the [RenderResponse](#tocs_renderresponse) including status and URL.
 */
var RenderResponseData = /** @class */ (function (_super) {
    __extends(RenderResponseData, _super);
    function RenderResponseData() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "created" }),
        __metadata("design:type", String)
    ], RenderResponseData.prototype, "created", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "data" }),
        (0, class_transformer_1.Type)(function () { return edit_1.Edit; }),
        __metadata("design:type", edit_1.Edit)
    ], RenderResponseData.prototype, "data", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "duration" }),
        __metadata("design:type", Number)
    ], RenderResponseData.prototype, "duration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "error" }),
        __metadata("design:type", String)
    ], RenderResponseData.prototype, "error", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], RenderResponseData.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "owner" }),
        __metadata("design:type", String)
    ], RenderResponseData.prototype, "owner", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "plan" }),
        __metadata("design:type", String)
    ], RenderResponseData.prototype, "plan", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "poster" }),
        __metadata("design:type", String)
    ], RenderResponseData.prototype, "poster", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "renderTime" }),
        __metadata("design:type", Number)
    ], RenderResponseData.prototype, "renderTime", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], RenderResponseData.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "thumbnail" }),
        __metadata("design:type", String)
    ], RenderResponseData.prototype, "thumbnail", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updated" }),
        __metadata("design:type", String)
    ], RenderResponseData.prototype, "updated", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "url" }),
        __metadata("design:type", String)
    ], RenderResponseData.prototype, "url", void 0);
    return RenderResponseData;
}(utils_1.SpeakeasyBase));
exports.RenderResponseData = RenderResponseData;
