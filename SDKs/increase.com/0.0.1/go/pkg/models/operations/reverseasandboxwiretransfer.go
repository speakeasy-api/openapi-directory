// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ReverseASandboxWireTransferRequest struct {
	WireTransferID string `pathParam:"style=simple,explode=false,name=wire_transfer_id"`
}

type ReverseASandboxWireTransferDefaultApplicationJSON13StatusEnum int64

const (
	ReverseASandboxWireTransferDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ReverseASandboxWireTransferDefaultApplicationJSON13StatusEnum = 429
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON13StatusEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = ReverseASandboxWireTransferDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON13TypeEnum string

const (
	ReverseASandboxWireTransferDefaultApplicationJSON13TypeEnumRateLimitedError ReverseASandboxWireTransferDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON13TypeEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = ReverseASandboxWireTransferDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON13 struct {
	Detail     string                                                        `json:"detail"`
	RetryAfter *int64                                                        `json:"retry_after,omitempty"`
	Status     ReverseASandboxWireTransferDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                        `json:"title"`
	Type       ReverseASandboxWireTransferDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ReverseASandboxWireTransferDefaultApplicationJSON12StatusEnum int64

const (
	ReverseASandboxWireTransferDefaultApplicationJSON12StatusEnumFourHundredAndThree ReverseASandboxWireTransferDefaultApplicationJSON12StatusEnum = 403
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON12StatusEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ReverseASandboxWireTransferDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON12TypeEnum string

const (
	ReverseASandboxWireTransferDefaultApplicationJSON12TypeEnumPrivateFeatureError ReverseASandboxWireTransferDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON12TypeEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = ReverseASandboxWireTransferDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON12 struct {
	Detail string                                                        `json:"detail"`
	Status ReverseASandboxWireTransferDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   ReverseASandboxWireTransferDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ReverseASandboxWireTransferDefaultApplicationJSON11StatusEnum int64

const (
	ReverseASandboxWireTransferDefaultApplicationJSON11StatusEnumFourHundredAndFour ReverseASandboxWireTransferDefaultApplicationJSON11StatusEnum = 404
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON11StatusEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ReverseASandboxWireTransferDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON11TypeEnum string

const (
	ReverseASandboxWireTransferDefaultApplicationJSON11TypeEnumObjectNotFoundError ReverseASandboxWireTransferDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON11TypeEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = ReverseASandboxWireTransferDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON11 struct {
	Detail string                                                        `json:"detail"`
	Status ReverseASandboxWireTransferDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   ReverseASandboxWireTransferDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ReverseASandboxWireTransferDefaultApplicationJSON10StatusEnum int64

const (
	ReverseASandboxWireTransferDefaultApplicationJSON10StatusEnumFourHundred ReverseASandboxWireTransferDefaultApplicationJSON10StatusEnum = 400
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON10StatusEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ReverseASandboxWireTransferDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON10TypeEnum string

const (
	ReverseASandboxWireTransferDefaultApplicationJSON10TypeEnumMalformedRequestError ReverseASandboxWireTransferDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON10TypeEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = ReverseASandboxWireTransferDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON10 struct {
	Detail string                                                        `json:"detail"`
	Status ReverseASandboxWireTransferDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                        `json:"title"`
	Type   ReverseASandboxWireTransferDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ReverseASandboxWireTransferDefaultApplicationJSON9StatusEnum int64

const (
	ReverseASandboxWireTransferDefaultApplicationJSON9StatusEnumFourHundred ReverseASandboxWireTransferDefaultApplicationJSON9StatusEnum = 400
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON9StatusEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = ReverseASandboxWireTransferDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON9TypeEnum string

const (
	ReverseASandboxWireTransferDefaultApplicationJSON9TypeEnumInvalidParametersError ReverseASandboxWireTransferDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON9TypeEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = ReverseASandboxWireTransferDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                     `json:"errors"`
	Status ReverseASandboxWireTransferDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   ReverseASandboxWireTransferDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ReverseASandboxWireTransferDefaultApplicationJSON8StatusEnum int64

const (
	ReverseASandboxWireTransferDefaultApplicationJSON8StatusEnumFourHundredAndNine ReverseASandboxWireTransferDefaultApplicationJSON8StatusEnum = 409
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON8StatusEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ReverseASandboxWireTransferDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON8TypeEnum string

const (
	ReverseASandboxWireTransferDefaultApplicationJSON8TypeEnumInvalidOperationError ReverseASandboxWireTransferDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON8TypeEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = ReverseASandboxWireTransferDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON8 struct {
	Detail string                                                       `json:"detail"`
	Status ReverseASandboxWireTransferDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   ReverseASandboxWireTransferDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ReverseASandboxWireTransferDefaultApplicationJSON7StatusEnum int64

const (
	ReverseASandboxWireTransferDefaultApplicationJSON7StatusEnumFourHundredAndOne ReverseASandboxWireTransferDefaultApplicationJSON7StatusEnum = 401
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON7StatusEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = ReverseASandboxWireTransferDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON7TypeEnum string

const (
	ReverseASandboxWireTransferDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ReverseASandboxWireTransferDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON7TypeEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = ReverseASandboxWireTransferDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON7 struct {
	Detail string                                                       `json:"detail"`
	Status ReverseASandboxWireTransferDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   ReverseASandboxWireTransferDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ReverseASandboxWireTransferDefaultApplicationJSON6StatusEnum int64

const (
	ReverseASandboxWireTransferDefaultApplicationJSON6StatusEnumFiveHundred ReverseASandboxWireTransferDefaultApplicationJSON6StatusEnum = 500
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON6StatusEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = ReverseASandboxWireTransferDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON6TypeEnum string

const (
	ReverseASandboxWireTransferDefaultApplicationJSON6TypeEnumInternalServerError ReverseASandboxWireTransferDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON6TypeEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = ReverseASandboxWireTransferDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON6 struct {
	Detail string                                                       `json:"detail"`
	Status ReverseASandboxWireTransferDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   ReverseASandboxWireTransferDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ReverseASandboxWireTransferDefaultApplicationJSON5StatusEnum int64

const (
	ReverseASandboxWireTransferDefaultApplicationJSON5StatusEnumFourHundredAndThree ReverseASandboxWireTransferDefaultApplicationJSON5StatusEnum = 403
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON5StatusEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ReverseASandboxWireTransferDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON5TypeEnum string

const (
	ReverseASandboxWireTransferDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ReverseASandboxWireTransferDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON5TypeEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = ReverseASandboxWireTransferDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON5 struct {
	Detail string                                                       `json:"detail"`
	Status ReverseASandboxWireTransferDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   ReverseASandboxWireTransferDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ReverseASandboxWireTransferDefaultApplicationJSON4StatusEnum int64

const (
	ReverseASandboxWireTransferDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ReverseASandboxWireTransferDefaultApplicationJSON4StatusEnum = 422
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON4StatusEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = ReverseASandboxWireTransferDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON4TypeEnum string

const (
	ReverseASandboxWireTransferDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ReverseASandboxWireTransferDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON4TypeEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = ReverseASandboxWireTransferDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON4 struct {
	Detail string                                                       `json:"detail"`
	Status ReverseASandboxWireTransferDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   ReverseASandboxWireTransferDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ReverseASandboxWireTransferDefaultApplicationJSON3StatusEnum int64

const (
	ReverseASandboxWireTransferDefaultApplicationJSON3StatusEnumFourHundredAndNine ReverseASandboxWireTransferDefaultApplicationJSON3StatusEnum = 409
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON3StatusEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = ReverseASandboxWireTransferDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON3TypeEnum string

const (
	ReverseASandboxWireTransferDefaultApplicationJSON3TypeEnumIdempotencyConflictError ReverseASandboxWireTransferDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON3TypeEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = ReverseASandboxWireTransferDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON3 struct {
	Detail string                                                       `json:"detail"`
	Status ReverseASandboxWireTransferDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   ReverseASandboxWireTransferDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ReverseASandboxWireTransferDefaultApplicationJSON2StatusEnum int64

const (
	ReverseASandboxWireTransferDefaultApplicationJSON2StatusEnumFourHundredAndThree ReverseASandboxWireTransferDefaultApplicationJSON2StatusEnum = 403
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON2StatusEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = ReverseASandboxWireTransferDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON2TypeEnum string

const (
	ReverseASandboxWireTransferDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ReverseASandboxWireTransferDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON2TypeEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = ReverseASandboxWireTransferDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON2 struct {
	Detail string                                                       `json:"detail"`
	Status ReverseASandboxWireTransferDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   ReverseASandboxWireTransferDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ReverseASandboxWireTransferDefaultApplicationJSON1StatusEnum int64

const (
	ReverseASandboxWireTransferDefaultApplicationJSON1StatusEnumFourHundredAndFour ReverseASandboxWireTransferDefaultApplicationJSON1StatusEnum = 404
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON1StatusEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = ReverseASandboxWireTransferDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON1TypeEnum string

const (
	ReverseASandboxWireTransferDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ReverseASandboxWireTransferDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e ReverseASandboxWireTransferDefaultApplicationJSON1TypeEnum) ToPointer() *ReverseASandboxWireTransferDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *ReverseASandboxWireTransferDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = ReverseASandboxWireTransferDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ReverseASandboxWireTransferDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type ReverseASandboxWireTransferDefaultApplicationJSON1 struct {
	Detail string                                                       `json:"detail"`
	Status ReverseASandboxWireTransferDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                       `json:"title"`
	Type   ReverseASandboxWireTransferDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ReverseASandboxWireTransferResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// Wire Transfer
	WireTransfer *shared.WireTransfer
}
