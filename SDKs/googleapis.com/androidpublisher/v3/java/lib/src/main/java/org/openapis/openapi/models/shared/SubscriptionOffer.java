/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * SubscriptionOffer - A single, temporary offer
 */
public class SubscriptionOffer {
    /**
     * Required. Immutable. The ID of the base plan to which this offer is an extension.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("basePlanId")
    public String basePlanId;
    public SubscriptionOffer withBasePlanId(String basePlanId) {
        this.basePlanId = basePlanId;
        return this;
    }
    
    /**
     * Required. Immutable. Unique ID of this subscription offer. Must be unique within the base plan.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offerId")
    public String offerId;
    public SubscriptionOffer withOfferId(String offerId) {
        this.offerId = offerId;
        return this;
    }
    
    /**
     * List of up to 20 custom tags specified for this offer, and returned to the app through the billing library.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("offerTags")
    public OfferTag[] offerTags;
    public SubscriptionOffer withOfferTags(OfferTag[] offerTags) {
        this.offerTags = offerTags;
        return this;
    }
    
    /**
     * Configuration for any new locations Play may launch in specified on a subscription offer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("otherRegionsConfig")
    public OtherRegionsSubscriptionOfferConfig otherRegionsConfig;
    public SubscriptionOffer withOtherRegionsConfig(OtherRegionsSubscriptionOfferConfig otherRegionsConfig) {
        this.otherRegionsConfig = otherRegionsConfig;
        return this;
    }
    
    /**
     * Required. Immutable. The package name of the app the parent subscription belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("packageName")
    public String packageName;
    public SubscriptionOffer withPackageName(String packageName) {
        this.packageName = packageName;
        return this;
    }
    
    /**
     * Required. The phases of this subscription offer. Must contain at least one entry, and may contain at most five. Users will always receive all these phases in the specified order. Phases may not be added, removed, or reordered after initial creation.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phases")
    public SubscriptionOfferPhase[] phases;
    public SubscriptionOffer withPhases(SubscriptionOfferPhase[] phases) {
        this.phases = phases;
        return this;
    }
    
    /**
     * Required. Immutable. The ID of the parent subscription this offer belongs to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("productId")
    public String productId;
    public SubscriptionOffer withProductId(String productId) {
        this.productId = productId;
        return this;
    }
    
    /**
     * Required. The region-specific configuration of this offer. Must contain at least one entry.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("regionalConfigs")
    public RegionalSubscriptionOfferConfig[] regionalConfigs;
    public SubscriptionOffer withRegionalConfigs(RegionalSubscriptionOfferConfig[] regionalConfigs) {
        this.regionalConfigs = regionalConfigs;
        return this;
    }
    
    /**
     * Output only. The current state of this offer. Can be changed using Activate and Deactivate actions. NB: the base plan state supersedes this state, so an active offer may not be available if the base plan is not active.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public SubscriptionOfferStateEnum state;
    public SubscriptionOffer withState(SubscriptionOfferStateEnum state) {
        this.state = state;
        return this;
    }
    
    /**
     * Defines the rule a user needs to satisfy to receive this offer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("targeting")
    public SubscriptionOfferTargeting targeting;
    public SubscriptionOffer withTargeting(SubscriptionOfferTargeting targeting) {
        this.targeting = targeting;
        return this;
    }
    
}
