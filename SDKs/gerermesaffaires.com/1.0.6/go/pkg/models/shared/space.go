// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SpaceLogo struct {
	Content64Encoded *string `json:"Content64Encoded,omitempty"`
	Extension        *string `json:"Extension,omitempty"`
}

type SpaceTypeEnum string

const (
	SpaceTypeEnumPrivate     SpaceTypeEnum = "private"
	SpaceTypeEnumEnterprise  SpaceTypeEnum = "enterprise"
	SpaceTypeEnumCompany     SpaceTypeEnum = "company"
	SpaceTypeEnumAssociation SpaceTypeEnum = "association"
)

func (e *SpaceTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private":
		fallthrough
	case "enterprise":
		fallthrough
	case "company":
		fallthrough
	case "association":
		*e = SpaceTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SpaceTypeEnum: %s", s)
	}
}

// Space - A space
type Space struct {
	ID               *string        `json:"Id,omitempty"`
	Logo             *SpaceLogo     `json:"Logo,omitempty"`
	ModificationDate *string        `json:"ModificationDate,omitempty"`
	Name             *string        `json:"Name,omitempty"`
	Type             *SpaceTypeEnum `json:"Type,omitempty"`
}
