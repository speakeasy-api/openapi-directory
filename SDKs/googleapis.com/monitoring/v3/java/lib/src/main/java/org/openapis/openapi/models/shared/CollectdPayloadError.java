/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CollectdPayloadError - Describes the error status for payloads that were not written.
 */
public class CollectdPayloadError {
    /**
     * The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("error")
    public Status error;

    public CollectdPayloadError withError(Status error) {
        this.error = error;
        return this;
    }
    
    /**
     * The zero-based index in CreateCollectdTimeSeriesRequest.collectd_payloads.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("index")
    public Integer index;

    public CollectdPayloadError withIndex(Integer index) {
        this.index = index;
        return this;
    }
    
    /**
     * Records the error status for values that were not written due to an error.Failed payloads for which nothing is written will not include partial value errors.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("valueErrors")
    public CollectdValueError[] valueErrors;

    public CollectdPayloadError withValueErrors(CollectdValueError[] valueErrors) {
        this.valueErrors = valueErrors;
        return this;
    }
    
    public CollectdPayloadError(){}
}
