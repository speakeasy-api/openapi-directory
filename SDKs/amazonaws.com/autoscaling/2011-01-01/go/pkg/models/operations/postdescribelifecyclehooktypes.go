// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// POSTDescribeLifecycleHookTypesActionEnum
type POSTDescribeLifecycleHookTypesActionEnum string

const (
	POSTDescribeLifecycleHookTypesActionEnumDescribeLifecycleHookTypes POSTDescribeLifecycleHookTypesActionEnum = "DescribeLifecycleHookTypes"
)

func (e *POSTDescribeLifecycleHookTypesActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DescribeLifecycleHookTypes":
		*e = POSTDescribeLifecycleHookTypesActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeLifecycleHookTypesActionEnum: %s", s)
	}
}

// POSTDescribeLifecycleHookTypesVersionEnum
type POSTDescribeLifecycleHookTypesVersionEnum string

const (
	POSTDescribeLifecycleHookTypesVersionEnumTwoThousandAndEleven0101 POSTDescribeLifecycleHookTypesVersionEnum = "2011-01-01"
)

func (e *POSTDescribeLifecycleHookTypesVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2011-01-01":
		*e = POSTDescribeLifecycleHookTypesVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for POSTDescribeLifecycleHookTypesVersionEnum: %s", s)
	}
}

type POSTDescribeLifecycleHookTypesQueryParams struct {
	Action  POSTDescribeLifecycleHookTypesActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version POSTDescribeLifecycleHookTypesVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type POSTDescribeLifecycleHookTypesHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type POSTDescribeLifecycleHookTypesRequest struct {
	QueryParams POSTDescribeLifecycleHookTypesQueryParams
	Headers     POSTDescribeLifecycleHookTypesHeaders
}

type POSTDescribeLifecycleHookTypesResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
