/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.net.http.HttpResponse;

public class SendMessageResponse {
    
    public String contentType;
    public SendMessageResponse withContentType(String contentType) {
        this.contentType = contentType;
        return this;
    }
    
    /**
     * Internal error
     */
    
    public org.openapis.openapi.models.shared.ErrorInternal errorInternal;
    public SendMessageResponse withErrorInternal(org.openapis.openapi.models.shared.ErrorInternal errorInternal) {
        this.errorInternal = errorInternal;
        return this;
    }
    
    /**
     * Payment Required
     */
    
    public org.openapis.openapi.models.shared.ErrorPaymentRequired errorPaymentRequired;
    public SendMessageResponse withErrorPaymentRequired(org.openapis.openapi.models.shared.ErrorPaymentRequired errorPaymentRequired) {
        this.errorPaymentRequired = errorPaymentRequired;
        return this;
    }
    
    /**
     * Too Many Requests
     */
    
    public org.openapis.openapi.models.shared.ErrorThrottled errorThrottled;
    public SendMessageResponse withErrorThrottled(org.openapis.openapi.models.shared.ErrorThrottled errorThrottled) {
        this.errorThrottled = errorThrottled;
        return this;
    }
    
    /**
     * Accepted.
     */
    
    public Object sendMessage202ApplicationJSONObject;
    public SendMessageResponse withSendMessage202ApplicationJSONObject(Object sendMessage202ApplicationJSONObject) {
        this.sendMessage202ApplicationJSONObject = sendMessage202ApplicationJSONObject;
        return this;
    }
    
    /**
     * Authentication failure
     */
    
    public Object sendMessage401ApplicationJSONOneOf;
    public SendMessageResponse withSendMessage401ApplicationJSONOneOf(Object sendMessage401ApplicationJSONOneOf) {
        this.sendMessage401ApplicationJSONOneOf = sendMessage401ApplicationJSONOneOf;
        return this;
    }
    
    
    public Integer statusCode;
    public SendMessageResponse withStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }
    
    
    public HttpResponse<byte[]> rawResponse;
    public SendMessageResponse withRawResponse(HttpResponse<byte[]> rawResponse) {
        this.rawResponse = rawResponse;
        return this;
    }
    
    /**
     * Unprocessable Entity
     */
    
    public Object sendMessage422ApplicationJSONOneOf;
    public SendMessageResponse withSendMessage422ApplicationJSONOneOf(Object sendMessage422ApplicationJSONOneOf) {
        this.sendMessage422ApplicationJSONOneOf = sendMessage422ApplicationJSONOneOf;
        return this;
    }
    
}
