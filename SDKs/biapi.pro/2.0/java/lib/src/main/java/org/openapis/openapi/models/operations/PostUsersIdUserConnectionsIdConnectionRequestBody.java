/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import java.time.OffsetDateTime;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class PostUsersIdUserConnectionsIdConnectionRequestBody {
    /**
     * Set if the connection synchronization is active
     */
    @SpeakeasyMetadata("multipartForm:name=active")
    public Boolean active;
    public PostUsersIdUserConnectionsIdConnectionRequestBody withActive(Boolean active) {
        this.active = active;
        return this;
    }
    
    /**
     * Try to update a connection with the decoupled error
     */
    @SpeakeasyMetadata("multipartForm:name=decoupled")
    public Boolean decoupled;
    public PostUsersIdUserConnectionsIdConnectionRequestBody withDecoupled(Boolean decoupled) {
        this.decoupled = decoupled;
        return this;
    }
    
    /**
     * Set expiration of the connection to this date
     */
    @SpeakeasyMetadata("multipartForm:name=expire")
    public OffsetDateTime expire;
    public PostUsersIdUserConnectionsIdConnectionRequestBody withExpire(OffsetDateTime expire) {
        this.expire = expire;
        return this;
    }
    
    /**
     * Set login to this new login
     */
    @SpeakeasyMetadata("multipartForm:name=login")
    public String login;
    public PostUsersIdUserConnectionsIdConnectionRequestBody withLogin(String login) {
        this.login = login;
        return this;
    }
    
    /**
     * Set password to this new password
     */
    @SpeakeasyMetadata("multipartForm:name=password")
    public String password;
    public PostUsersIdUserConnectionsIdConnectionRequestBody withPassword(String password) {
        this.password = password;
        return this;
    }
    
}
