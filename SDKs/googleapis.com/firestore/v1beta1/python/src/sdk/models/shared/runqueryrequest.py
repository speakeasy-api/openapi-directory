"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import structuredquery as shared_structuredquery
from ..shared import transactionoptions as shared_transactionoptions
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RunQueryRequest:
    r"""The request for Firestore.RunQuery."""
    
    new_transaction: Optional[shared_transactionoptions.TransactionOptions] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('newTransaction'), 'exclude': lambda f: f is None }})
    r"""Options for creating a new transaction."""  
    read_time: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('readTime'), 'exclude': lambda f: f is None }})
    r"""Reads documents as they were at the given time. This may not be older than 270 seconds."""  
    structured_query: Optional[shared_structuredquery.StructuredQuery] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('structuredQuery'), 'exclude': lambda f: f is None }})
    r"""A Firestore query."""  
    transaction: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('transaction'), 'exclude': lambda f: f is None }})
    r"""Run the query within an already active transaction. The value here is the opaque transaction ID to execute the query in."""  
    