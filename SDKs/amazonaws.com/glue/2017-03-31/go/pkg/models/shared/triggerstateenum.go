// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type TriggerStateEnum string

const (
	TriggerStateEnumCreating     TriggerStateEnum = "CREATING"
	TriggerStateEnumCreated      TriggerStateEnum = "CREATED"
	TriggerStateEnumActivating   TriggerStateEnum = "ACTIVATING"
	TriggerStateEnumActivated    TriggerStateEnum = "ACTIVATED"
	TriggerStateEnumDeactivating TriggerStateEnum = "DEACTIVATING"
	TriggerStateEnumDeactivated  TriggerStateEnum = "DEACTIVATED"
	TriggerStateEnumDeleting     TriggerStateEnum = "DELETING"
	TriggerStateEnumUpdating     TriggerStateEnum = "UPDATING"
)

func (e *TriggerStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATING":
		fallthrough
	case "CREATED":
		fallthrough
	case "ACTIVATING":
		fallthrough
	case "ACTIVATED":
		fallthrough
	case "DEACTIVATING":
		fallthrough
	case "DEACTIVATED":
		fallthrough
	case "DELETING":
		fallthrough
	case "UPDATING":
		*e = TriggerStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TriggerStateEnum: %s", s)
	}
}
