/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CustomerData - Customer information
 */
public class CustomerData {
    /**
     * User accounts limit
     */
    @JsonProperty("accountsLimit")
    public Integer accountsLimit;
    public CustomerData withAccountsLimit(Integer accountsLimit) {
        this.accountsLimit = accountsLimit;
        return this;
    }
    
    /**
     * User accounts used
     */
    @JsonProperty("accountsUsed")
    public Integer accountsUsed;
    public CustomerData withAccountsUsed(Integer accountsUsed) {
        this.accountsUsed = accountsUsed;
        return this;
    }
    
    /**
     * Number of guest user accounts
     */
    @JsonProperty("cntGuestUser")
    public Integer cntGuestUser;
    public CustomerData withCntGuestUser(Integer cntGuestUser) {
        this.cntGuestUser = cntGuestUser;
        return this;
    }
    
    /**
     * Number of internal user accounts
     */
    @JsonProperty("cntInternalUser")
    public Integer cntInternalUser;
    public CustomerData withCntInternalUser(Integer cntInternalUser) {
        this.cntInternalUser = cntInternalUser;
        return this;
    }
    
    /**
     * Clientside encryption for customer enabled
     */
    @JsonProperty("customerEncryptionEnabled")
    public Boolean customerEncryptionEnabled;
    public CustomerData withCustomerEncryptionEnabled(Boolean customerEncryptionEnabled) {
        this.customerEncryptionEnabled = customerEncryptionEnabled;
        return this;
    }
    
    /**
     * Unique identifier for the customer
     */
    @JsonProperty("id")
    public Long id;
    public CustomerData withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Customer is Provider Customer
     */
    @JsonProperty("isProviderCustomer")
    public Boolean isProviderCustomer;
    public CustomerData withIsProviderCustomer(Boolean isProviderCustomer) {
        this.isProviderCustomer = isProviderCustomer;
        return this;
    }
    
    /**
     * Customer name
     */
    @JsonProperty("name")
    public String name;
    public CustomerData withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Space limit (in bytes). -1 for unlimited
     */
    @JsonProperty("spaceLimit")
    public Long spaceLimit;
    public CustomerData withSpaceLimit(Long spaceLimit) {
        this.spaceLimit = spaceLimit;
        return this;
    }
    
    /**
     * Space used (in bytes)
     */
    @JsonProperty("spaceUsed")
    public Long spaceUsed;
    public CustomerData withSpaceUsed(Long spaceUsed) {
        this.spaceUsed = spaceUsed;
        return this;
    }
    
}
