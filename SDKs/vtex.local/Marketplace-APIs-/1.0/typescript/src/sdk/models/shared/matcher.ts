/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class Matcher extends SpeakeasyBase {
  /**
   * Insert in this field any notes about the approval. This field is optional.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  /**
   * Whether the matcher is active in the account (`true`), or not (`false`).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "IsActive" })
  isActive: boolean;

  /**
   * Identifies the matching entity. It can be either VTEX's matcher, or an external matcher developed by partners, for example. The `matcherId`'s value can be obtained through the [Get SKU Suggestion by ID](https://developers.vtex.com/vtex-rest-api/reference/getsuggestion) endpoint.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "MatcherId" })
  matcherId: string;

  /**
   * The Received SKUs module uses this endpoint to send updates about a suggestion, to the chosen Matcher.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "UpdatesNotificationEndpoint" })
  updatesNotificationEndpoint: string;

  /**
   * The chosen Matcher's url. It is the endpoint that the Received SKUs module calls, to send new suggestions for the Matcher's review.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "hook-base-address" })
  hookBaseAddress: string;
}
