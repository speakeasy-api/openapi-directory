// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type PhoneNumberTypeEnum string

const (
	PhoneNumberTypeEnumOther  PhoneNumberTypeEnum = "OTHER"
	PhoneNumberTypeEnumMobile PhoneNumberTypeEnum = "MOBILE"
	PhoneNumberTypeEnumOffice PhoneNumberTypeEnum = "OFFICE"
)

func (e PhoneNumberTypeEnum) ToPointer() *PhoneNumberTypeEnum {
	return &e
}

func (e *PhoneNumberTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "OTHER":
		fallthrough
	case "MOBILE":
		fallthrough
	case "OFFICE":
		*e = PhoneNumberTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PhoneNumberTypeEnum: %v", v)
	}
}

// PhoneNumber - A person's Phone Number
type PhoneNumber struct {
	// The phone number of the person.
	PhoneNumber *string              `json:"phoneNumber,omitempty"`
	Type        *PhoneNumberTypeEnum `json:"type,omitempty"`
}
