"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class GrantAppLevelPermissionsEnum(str, Enum):
    APP_LEVEL_PERMISSION_UNSPECIFIED = 'APP_LEVEL_PERMISSION_UNSPECIFIED'
    CAN_ACCESS_APP = 'CAN_ACCESS_APP'
    CAN_VIEW_FINANCIAL_DATA = 'CAN_VIEW_FINANCIAL_DATA'
    CAN_MANAGE_PERMISSIONS = 'CAN_MANAGE_PERMISSIONS'
    CAN_REPLY_TO_REVIEWS = 'CAN_REPLY_TO_REVIEWS'
    CAN_MANAGE_PUBLIC_APKS = 'CAN_MANAGE_PUBLIC_APKS'
    CAN_MANAGE_TRACK_APKS = 'CAN_MANAGE_TRACK_APKS'
    CAN_MANAGE_TRACK_USERS = 'CAN_MANAGE_TRACK_USERS'
    CAN_MANAGE_PUBLIC_LISTING = 'CAN_MANAGE_PUBLIC_LISTING'
    CAN_MANAGE_DRAFT_APPS = 'CAN_MANAGE_DRAFT_APPS'
    CAN_MANAGE_ORDERS = 'CAN_MANAGE_ORDERS'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Grant:
    r"""An access grant resource."""
    
    app_level_permissions: Optional[list[GrantAppLevelPermissionsEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appLevelPermissions'), 'exclude': lambda f: f is None }})
    r"""The permissions granted to the user for this app."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Required. Resource name for this grant, following the pattern \\"developers/{developer}/users/{email}/grants/{package_name}\\". If this grant is for a draft app, the app ID will be used in this resource name instead of the package name."""  
    package_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('packageName'), 'exclude': lambda f: f is None }})
    r"""Immutable. The package name of the app. This will be empty for draft apps."""  
    