<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI;

class InboundSamlSsoProfiles 
{

	// SDK private variables namespaced with _ to avoid conflicts with API models
	private \GuzzleHttp\ClientInterface $_defaultClient;
	private \GuzzleHttp\ClientInterface $_securityClient;
	private string $_serverUrl;
	private string $_language;
	private string $_sdkVersion;
	private string $_genVersion;	

	/**
	 * @param \GuzzleHttp\ClientInterface $defaultClient
	 * @param \GuzzleHttp\ClientInterface $securityClient
	 * @param string $serverUrl
	 * @param string $language
	 * @param string $sdkVersion
	 * @param string $genVersion
	 */
	public function __construct(\GuzzleHttp\ClientInterface $defaultClient, \GuzzleHttp\ClientInterface $securityClient, string $serverUrl, string $language, string $sdkVersion, string $genVersion)
	{
		$this->_defaultClient = $defaultClient;
		$this->_securityClient = $securityClient;
		$this->_serverUrl = $serverUrl;
		$this->_language = $language;
		$this->_sdkVersion = $sdkVersion;
		$this->_genVersion = $genVersion;
	}
	
    /**
     * Creates an InboundSamlSsoProfile for a customer.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesCreateRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesCreateSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesCreateResponse
     */
	public function cloudidentityInboundSamlSsoProfilesCreate(
        \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesCreateRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesCreateSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesCreateResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1beta1/inboundSamlSsoProfiles');
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "inboundSamlSsoProfileInput", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesCreateRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesCreateResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->operation = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Operation', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Adds an IdpCredential. Up to 2 credentials are allowed.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesIdpCredentialsAddRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesIdpCredentialsAddSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesIdpCredentialsAddResponse
     */
	public function cloudidentityInboundSamlSsoProfilesIdpCredentialsAdd(
        \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesIdpCredentialsAddRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesIdpCredentialsAddSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesIdpCredentialsAddResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1beta1/{parent}/idpCredentials:add', \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesIdpCredentialsAddRequest::class, $request);
        
        $options = ['http_errors' => false];
        $body = Utils\Utils::serializeRequestBody($request, "addIdpCredentialRequest", "json");
        $options = array_merge_recursive($options, $body);
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesIdpCredentialsAddRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('POST', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesIdpCredentialsAddResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->operation = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\Operation', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Returns a list of IdpCredentials in an InboundSamlSsoProfile.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesIdpCredentialsListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesIdpCredentialsListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesIdpCredentialsListResponse
     */
	public function cloudidentityInboundSamlSsoProfilesIdpCredentialsList(
        \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesIdpCredentialsListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesIdpCredentialsListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesIdpCredentialsListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1beta1/{parent}/idpCredentials', \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesIdpCredentialsListRequest::class, $request);
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesIdpCredentialsListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesIdpCredentialsListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->listIdpCredentialsResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ListIdpCredentialsResponse', 'json');
            }
        }

        return $response;
    }
	
    /**
     * Lists InboundSamlSsoProfiles for a customer.
     * 
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesListRequest $request
     * @param \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesListSecurity $security
     * @return \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesListResponse
     */
	public function cloudidentityInboundSamlSsoProfilesList(
        \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesListRequest $request,
        \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesListSecurity $security,
    ): \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesListResponse
    {
        $baseUrl = $this->_serverUrl;
        $url = Utils\Utils::generateUrl($baseUrl, '/v1beta1/inboundSamlSsoProfiles');
        
        $options = ['http_errors' => false];
        $options = array_merge_recursive($options, Utils\Utils::getQueryParams(\OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesListRequest::class, $request, null));
        
        $client = Utils\Utils::configureSecurityClient($this->_defaultClient, $security);
        $httpResponse = $client->request('GET', $url, $options);
        
        $contentType = $httpResponse->getHeader('Content-Type')[0] ?? '';

        $response = new \OpenAPI\OpenAPI\Models\Operations\CloudidentityInboundSamlSsoProfilesListResponse();
        $response->statusCode = $httpResponse->getStatusCode();
        $response->contentType = $contentType;
        $response->rawResponse = $httpResponse;
        
        if ($httpResponse->getStatusCode() === 200) {
            if (Utils\Utils::matchContentType($contentType, 'application/json')) {
                $serializer = Utils\JSON::createSerializer();
                $response->listInboundSamlSsoProfilesResponse = $serializer->deserialize((string)$httpResponse->getBody(), 'OpenAPI\OpenAPI\Models\Shared\ListInboundSamlSsoProfilesResponse', 'json');
            }
        }

        return $response;
    }
}