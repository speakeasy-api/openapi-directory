// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ResolverRuleAssociationStatusEnum string

const (
	ResolverRuleAssociationStatusEnumCreating   ResolverRuleAssociationStatusEnum = "CREATING"
	ResolverRuleAssociationStatusEnumComplete   ResolverRuleAssociationStatusEnum = "COMPLETE"
	ResolverRuleAssociationStatusEnumDeleting   ResolverRuleAssociationStatusEnum = "DELETING"
	ResolverRuleAssociationStatusEnumFailed     ResolverRuleAssociationStatusEnum = "FAILED"
	ResolverRuleAssociationStatusEnumOverridden ResolverRuleAssociationStatusEnum = "OVERRIDDEN"
)

func (e ResolverRuleAssociationStatusEnum) ToPointer() *ResolverRuleAssociationStatusEnum {
	return &e
}

func (e *ResolverRuleAssociationStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CREATING":
		fallthrough
	case "COMPLETE":
		fallthrough
	case "DELETING":
		fallthrough
	case "FAILED":
		fallthrough
	case "OVERRIDDEN":
		*e = ResolverRuleAssociationStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResolverRuleAssociationStatusEnum: %v", v)
	}
}
