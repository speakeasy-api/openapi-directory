// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateItemXAmzTargetEnum
type UpdateItemXAmzTargetEnum string

const (
	UpdateItemXAmzTargetEnumDynamoDb20120810UpdateItem UpdateItemXAmzTargetEnum = "DynamoDB_20120810.UpdateItem"
)

func (e *UpdateItemXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "DynamoDB_20120810.UpdateItem":
		*e = UpdateItemXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateItemXAmzTargetEnum: %s", s)
	}
}

type UpdateItemRequest struct {
	UpdateItemInput   shared.UpdateItemInput   `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                  `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                  `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                  `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                  `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                  `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                  `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                  `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        UpdateItemXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateItemResponse struct {
	// ConditionalCheckFailedException
	ConditionalCheckFailedException interface{}
	ContentType                     string
	// InternalServerError
	InternalServerError interface{}
	// ItemCollectionSizeLimitExceededException
	ItemCollectionSizeLimitExceededException interface{}
	// ProvisionedThroughputExceededException
	ProvisionedThroughputExceededException interface{}
	// RequestLimitExceeded
	RequestLimitExceeded interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	StatusCode                int
	RawResponse               *http.Response
	// TransactionConflictException
	TransactionConflictException interface{}
	// Success
	UpdateItemOutput *shared.UpdateItemOutput
}
