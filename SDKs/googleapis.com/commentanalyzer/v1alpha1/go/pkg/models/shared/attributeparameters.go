// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// AttributeParametersScoreTypeEnum - What type of scores to return. If unset, defaults to probability scores.
type AttributeParametersScoreTypeEnum string

const (
	AttributeParametersScoreTypeEnumScoreTypeUnspecified AttributeParametersScoreTypeEnum = "SCORE_TYPE_UNSPECIFIED"
	AttributeParametersScoreTypeEnumProbability          AttributeParametersScoreTypeEnum = "PROBABILITY"
	AttributeParametersScoreTypeEnumStdDevScore          AttributeParametersScoreTypeEnum = "STD_DEV_SCORE"
	AttributeParametersScoreTypeEnumPercentile           AttributeParametersScoreTypeEnum = "PERCENTILE"
	AttributeParametersScoreTypeEnumRaw                  AttributeParametersScoreTypeEnum = "RAW"
)

func (e AttributeParametersScoreTypeEnum) ToPointer() *AttributeParametersScoreTypeEnum {
	return &e
}

func (e *AttributeParametersScoreTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "SCORE_TYPE_UNSPECIFIED":
		fallthrough
	case "PROBABILITY":
		fallthrough
	case "STD_DEV_SCORE":
		fallthrough
	case "PERCENTILE":
		fallthrough
	case "RAW":
		*e = AttributeParametersScoreTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AttributeParametersScoreTypeEnum: %v", v)
	}
}

// AttributeParameters - Configurable parameters for attribute scoring.
type AttributeParameters struct {
	// Don't return scores for this attribute that are below this threshold. If unset, a default threshold will be applied. A FloatValue wrapper is used to distinguish between 0 vs. default/unset.
	ScoreThreshold *float32 `json:"scoreThreshold,omitempty"`
	// What type of scores to return. If unset, defaults to probability scores.
	ScoreType *AttributeParametersScoreTypeEnum `json:"scoreType,omitempty"`
}
