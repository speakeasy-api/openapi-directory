// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// InteractionExpiryEnum - The duration of the interaction restriction. Default: `one_day`.
type InteractionExpiryEnum string

const (
	InteractionExpiryEnumOneDay    InteractionExpiryEnum = "one_day"
	InteractionExpiryEnumThreeDays InteractionExpiryEnum = "three_days"
	InteractionExpiryEnumOneWeek   InteractionExpiryEnum = "one_week"
	InteractionExpiryEnumOneMonth  InteractionExpiryEnum = "one_month"
	InteractionExpiryEnumSixMonths InteractionExpiryEnum = "six_months"
)

func (e InteractionExpiryEnum) ToPointer() *InteractionExpiryEnum {
	return &e
}

func (e *InteractionExpiryEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "one_day":
		fallthrough
	case "three_days":
		fallthrough
	case "one_week":
		fallthrough
	case "one_month":
		fallthrough
	case "six_months":
		*e = InteractionExpiryEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InteractionExpiryEnum: %v", v)
	}
}
