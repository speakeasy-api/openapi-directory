"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import reviewpolicy as shared_reviewpolicy
from ..shared import reviewreport as shared_reviewreport
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ListReviewPolicyResultsForHITResponse:
    r"""Success"""
    
    assignment_review_policy: Optional[shared_reviewpolicy.ReviewPolicy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AssignmentReviewPolicy'), 'exclude': lambda f: f is None }})  
    assignment_review_report: Optional[shared_reviewreport.ReviewReport] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('AssignmentReviewReport'), 'exclude': lambda f: f is None }})  
    hit_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HITId'), 'exclude': lambda f: f is None }})  
    hit_review_policy: Optional[shared_reviewpolicy.ReviewPolicy] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HITReviewPolicy'), 'exclude': lambda f: f is None }})  
    hit_review_report: Optional[shared_reviewreport.ReviewReport] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('HITReviewReport'), 'exclude': lambda f: f is None }})  
    next_token: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('NextToken'), 'exclude': lambda f: f is None }})
    r"""If the previous response was incomplete (because there is more data to retrieve), Amazon Mechanical Turk returns a pagination token in the response. You can use this pagination token to retrieve the next set of results."""  
    