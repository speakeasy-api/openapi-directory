/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ContractStoreInfo - Describe the store information related to the offer.
 */
public class ContractStoreInfo {
    /**
     * The additional store price.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("additionalStorePrice")
    public Double additionalStorePrice;
    public ContractStoreInfo withAdditionalStorePrice(Double additionalStorePrice) {
        this.additionalStorePrice = additionalStorePrice;
        return this;
    }
    
    /**
     * The maximum store count related to the offer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("maxStoreCount")
    public Integer maxStoreCount;
    public ContractStoreInfo withMaxStoreCount(Integer maxStoreCount) {
        this.maxStoreCount = maxStoreCount;
        return this;
    }
    
    /**
     * The minimum store count related to the offer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("minStoreCount")
    public Integer minStoreCount;
    public ContractStoreInfo withMinStoreCount(Integer minStoreCount) {
        this.minStoreCount = minStoreCount;
        return this;
    }
    
    /**
     * The owned store count.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ownedStoreCount")
    public Integer ownedStoreCount;
    public ContractStoreInfo withOwnedStoreCount(Integer ownedStoreCount) {
        this.ownedStoreCount = ownedStoreCount;
        return this;
    }
    
    /**
     * The store count you want to have in your contract.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storeCount")
    public Integer storeCount;
    public ContractStoreInfo withStoreCount(Integer storeCount) {
        this.storeCount = storeCount;
        return this;
    }
    
    /**
     * The store count included in the offer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("storeIncluded")
    public Integer storeIncluded;
    public ContractStoreInfo withStoreIncluded(Integer storeIncluded) {
        this.storeIncluded = storeIncluded;
        return this;
    }
    
}
