"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import costestimate as shared_costestimate
from ..shared import skucostestimate as shared_skucostestimate
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CommitmentCostEstimate:
    r"""Estimated cost for a commitment."""
    
    commitment_total_cost_estimate: Optional[shared_costestimate.CostEstimate] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('commitmentTotalCostEstimate'), 'exclude': lambda f: f is None }})
    r"""An estimated cost."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""The name of the commitment, as specified in the `CostScenario`."""  
    sku_cost_estimates: Optional[list[shared_skucostestimate.SkuCostEstimate]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('skuCostEstimates'), 'exclude': lambda f: f is None }})
    r"""Estimated costs for each SKU in the commitment."""  
    