/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TrustedAdvisorCategorySpecificSummary } from "./trustedadvisorcategoryspecificsummary";
import { TrustedAdvisorResourcesSummary } from "./trustedadvisorresourcessummary";
import { Expose, Type } from "class-transformer";

/**
 * A summary of a Trusted Advisor check result, including the alert status, last refresh, and number of resources examined.
 */
export class TrustedAdvisorCheckSummary extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "categorySpecificSummary" })
  @Type(() => TrustedAdvisorCategorySpecificSummary)
  categorySpecificSummary: TrustedAdvisorCategorySpecificSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "checkId" })
  checkId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hasFlaggedResources" })
  hasFlaggedResources?: boolean;

  /**
   * Details about Amazon Web Services resources that were analyzed in a call to Trusted Advisor <a>DescribeTrustedAdvisorCheckSummaries</a>.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resourcesSummary" })
  @Type(() => TrustedAdvisorResourcesSummary)
  resourcesSummary: TrustedAdvisorResourcesSummary;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status: string;

  @SpeakeasyMetadata()
  @Expose({ name: "timestamp" })
  timestamp: string;
}
