"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from marshmallow import fields
from sdk import utils
from typing import Optional

class PayoutScheduleResponseScheduleEnum(str, Enum):
    r"""The payout schedule of the account.
    Permitted values: `DEFAULT`, `DAILY`, `DAILY_US`, `DAILY_EU`, `DAILY_AU`, `DAILY_SG`, `WEEKLY`, `WEEKLY_ON_TUE_FRI_MIDNIGHT`, `BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT`, `MONTHLY`, `HOLD`.
    """
    BIWEEKLY_ON_1_ST_AND_15_TH_AT_MIDNIGHT = 'BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT'
    DAILY = 'DAILY'
    DAILY_AU = 'DAILY_AU'
    DAILY_EU = 'DAILY_EU'
    DAILY_SG = 'DAILY_SG'
    DAILY_US = 'DAILY_US'
    HOLD = 'HOLD'
    MONTHLY = 'MONTHLY'
    WEEKLY = 'WEEKLY'
    WEEKLY_ON_TUE_FRI_MIDNIGHT = 'WEEKLY_ON_TUE_FRI_MIDNIGHT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PayoutScheduleResponse:
    
    next_scheduled_payout: Optional[datetime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nextScheduledPayout'), 'encoder': utils.datetimeisoformat(True), 'decoder': dateutil.parser.isoparse, 'mm_field': fields.DateTime(format='iso'), 'exclude': lambda f: f is None }})
    r"""The date of the next scheduled payout."""  
    schedule: Optional[PayoutScheduleResponseScheduleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('schedule'), 'exclude': lambda f: f is None }})
    r"""The payout schedule of the account.
    Permitted values: `DEFAULT`, `DAILY`, `DAILY_US`, `DAILY_EU`, `DAILY_AU`, `DAILY_SG`, `WEEKLY`, `WEEKLY_ON_TUE_FRI_MIDNIGHT`, `BIWEEKLY_ON_1ST_AND_15TH_AT_MIDNIGHT`, `MONTHLY`, `HOLD`.
    """  
    