/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { InstructionInput } from "./instructioninput";
import { MultiOutputInfo } from "./multioutputinfo";
import { SideInputInfo } from "./sideinputinfo";
import { Expose, Type } from "class-transformer";

/**
 * An instruction that does a ParDo operation. Takes one main input and zero or more side inputs, and produces zero or more outputs. Runs user code.
 */
export class ParDoInstruction extends SpeakeasyBase {
  /**
   * An input of an instruction, as a reference to an output of a producer instruction.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "input" })
  @Type(() => InstructionInput)
  input?: InstructionInput;

  /**
   * Information about each of the outputs, if user_fn is a MultiDoFn.
   */
  @SpeakeasyMetadata({ elemType: MultiOutputInfo })
  @Expose({ name: "multiOutputInfos" })
  @Type(() => MultiOutputInfo)
  multiOutputInfos?: MultiOutputInfo[];

  /**
   * The number of outputs.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "numOutputs" })
  numOutputs?: number;

  /**
   * Zero or more side inputs.
   */
  @SpeakeasyMetadata({ elemType: SideInputInfo })
  @Expose({ name: "sideInputs" })
  @Type(() => SideInputInfo)
  sideInputs?: SideInputInfo[];

  /**
   * The user function to invoke.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "userFn" })
  userFn?: Record<string, any>;
}
