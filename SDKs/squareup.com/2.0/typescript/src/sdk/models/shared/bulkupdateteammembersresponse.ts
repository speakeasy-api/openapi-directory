/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
  objectToClass,
  SpeakeasyBase,
  SpeakeasyMetadata,
} from "../../../internal/utils";
import { ErrorT } from "./error";
import { UpdateTeamMemberResponse } from "./updateteammemberresponse";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Represents a response from a bulk update request containing the updated `TeamMember` objects or error messages.
 */
export class BulkUpdateTeamMembersResponse extends SpeakeasyBase {
  /**
   * The errors that occurred during the request.
   */
  @SpeakeasyMetadata({ elemType: ErrorT })
  @Expose({ name: "errors" })
  @Type(() => ErrorT)
  errors?: ErrorT[];

  /**
   * The successfully updated `TeamMember` objects. Each key is the `team_member_id` that maps to the `UpdateTeamMemberRequest`.
   */
  @SpeakeasyMetadata({ elemType: UpdateTeamMemberResponse })
  @Expose({ name: "team_members" })
  @Transform(
    ({ value }) => {
      const obj: Record<string, UpdateTeamMemberResponse> = {};
      for (const key in value) {
        obj[key] = objectToClass(value[key], UpdateTeamMemberResponse);
      }
      return obj;
    },
    { toClassOnly: true }
  )
  teamMembers?: Record<string, UpdateTeamMemberResponse>;
}
