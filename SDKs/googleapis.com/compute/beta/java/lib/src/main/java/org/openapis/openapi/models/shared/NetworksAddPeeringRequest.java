/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class NetworksAddPeeringRequest {
    /**
     * This field will be deprecated soon. Use exchange_subnet_routes in network_peering instead. Indicates whether full mesh connectivity is created and managed automatically between peered networks. Currently this field should always be true since Google Compute Engine will automatically create and manage subnetwork routes between two networks when peering state is ACTIVE.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("autoCreateRoutes")
    public Boolean autoCreateRoutes;
    public NetworksAddPeeringRequest withAutoCreateRoutes(Boolean autoCreateRoutes) {
        this.autoCreateRoutes = autoCreateRoutes;
        return this;
    }
    
    /**
     * Name of the peering, which should conform to RFC1035.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public NetworksAddPeeringRequest withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * A network peering attached to a network resource. The message includes the peering name, peer network, peering state, and a flag indicating whether Google Compute Engine should automatically create routes for the peering.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("networkPeering")
    public NetworkPeering networkPeering;
    public NetworksAddPeeringRequest withNetworkPeering(NetworkPeering networkPeering) {
        this.networkPeering = networkPeering;
        return this;
    }
    
    /**
     * URL of the peer network. It can be either full URL or partial URL. The peer network may belong to a different project. If the partial URL does not contain project, it is assumed that the peer network is in the same project as the current network.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("peerNetwork")
    public String peerNetwork;
    public NetworksAddPeeringRequest withPeerNetwork(String peerNetwork) {
        this.peerNetwork = peerNetwork;
        return this;
    }
    
}
