"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetNetworkSensorRelationshipsResponse = exports.GetNetworkSensorRelationships200ApplicationJSON = exports.GetNetworkSensorRelationships200ApplicationJSONRelationships = exports.GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestream = exports.GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevices = exports.GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevicesProductTypeEnum = exports.GetNetworkSensorRelationships200ApplicationJSONDevice = exports.GetNetworkSensorRelationships200ApplicationJSONDeviceProductTypeEnum = exports.GetNetworkSensorRelationshipsRequest = void 0;
var utils_1 = require("../../../internal/utils");
var class_transformer_1 = require("class-transformer");
var GetNetworkSensorRelationshipsRequest = /** @class */ (function (_super) {
    __extends(GetNetworkSensorRelationshipsRequest, _super);
    function GetNetworkSensorRelationshipsRequest() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            data: "pathParam, style=simple;explode=false;name=networkId",
        }),
        __metadata("design:type", String)
    ], GetNetworkSensorRelationshipsRequest.prototype, "networkId", void 0);
    return GetNetworkSensorRelationshipsRequest;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSensorRelationshipsRequest = GetNetworkSensorRelationshipsRequest;
/**
 * The product type of the device
 */
var GetNetworkSensorRelationships200ApplicationJSONDeviceProductTypeEnum;
(function (GetNetworkSensorRelationships200ApplicationJSONDeviceProductTypeEnum) {
    GetNetworkSensorRelationships200ApplicationJSONDeviceProductTypeEnum["Camera"] = "camera";
    GetNetworkSensorRelationships200ApplicationJSONDeviceProductTypeEnum["Sensor"] = "sensor";
})(GetNetworkSensorRelationships200ApplicationJSONDeviceProductTypeEnum = exports.GetNetworkSensorRelationships200ApplicationJSONDeviceProductTypeEnum || (exports.GetNetworkSensorRelationships200ApplicationJSONDeviceProductTypeEnum = {}));
/**
 * A sensor or gateway device in the network
 */
var GetNetworkSensorRelationships200ApplicationJSONDevice = /** @class */ (function (_super) {
    __extends(GetNetworkSensorRelationships200ApplicationJSONDevice, _super);
    function GetNetworkSensorRelationships200ApplicationJSONDevice() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], GetNetworkSensorRelationships200ApplicationJSONDevice.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "productType" }),
        __metadata("design:type", String)
    ], GetNetworkSensorRelationships200ApplicationJSONDevice.prototype, "productType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "serial" }),
        __metadata("design:type", String)
    ], GetNetworkSensorRelationships200ApplicationJSONDevice.prototype, "serial", void 0);
    return GetNetworkSensorRelationships200ApplicationJSONDevice;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSensorRelationships200ApplicationJSONDevice = GetNetworkSensorRelationships200ApplicationJSONDevice;
/**
 * The product type of the related device
 */
var GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevicesProductTypeEnum;
(function (GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevicesProductTypeEnum) {
    GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevicesProductTypeEnum["Camera"] = "camera";
    GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevicesProductTypeEnum["Sensor"] = "sensor";
})(GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevicesProductTypeEnum = exports.GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevicesProductTypeEnum || (exports.GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevicesProductTypeEnum = {}));
var GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevices = /** @class */ (function (_super) {
    __extends(GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevices, _super);
    function GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevices() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "productType" }),
        __metadata("design:type", String)
    ], GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevices.prototype, "productType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "serial" }),
        __metadata("design:type", String)
    ], GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevices.prototype, "serial", void 0);
    return GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevices;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevices = GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevices;
/**
 * A role defined between an MT sensor and an MV camera that adds the camera's livestream to the sensor's details page. Snapshots from the camera will also appear in alert notifications that the sensor triggers.
 */
var GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestream = /** @class */ (function (_super) {
    __extends(GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestream, _super);
    function GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestream() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevices,
        }),
        (0, class_transformer_1.Expose)({ name: "relatedDevices" }),
        (0, class_transformer_1.Type)(function () {
            return GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestreamRelatedDevices;
        }),
        __metadata("design:type", Array)
    ], GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestream.prototype, "relatedDevices", void 0);
    return GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestream;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestream = GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestream;
/**
 * An object describing the relationships defined between the device and other devices
 */
var GetNetworkSensorRelationships200ApplicationJSONRelationships = /** @class */ (function (_super) {
    __extends(GetNetworkSensorRelationships200ApplicationJSONRelationships, _super);
    function GetNetworkSensorRelationships200ApplicationJSONRelationships() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "livestream" }),
        (0, class_transformer_1.Type)(function () { return GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestream; }),
        __metadata("design:type", GetNetworkSensorRelationships200ApplicationJSONRelationshipsLivestream)
    ], GetNetworkSensorRelationships200ApplicationJSONRelationships.prototype, "livestream", void 0);
    return GetNetworkSensorRelationships200ApplicationJSONRelationships;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSensorRelationships200ApplicationJSONRelationships = GetNetworkSensorRelationships200ApplicationJSONRelationships;
var GetNetworkSensorRelationships200ApplicationJSON = /** @class */ (function (_super) {
    __extends(GetNetworkSensorRelationships200ApplicationJSON, _super);
    function GetNetworkSensorRelationships200ApplicationJSON() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "device" }),
        (0, class_transformer_1.Type)(function () { return GetNetworkSensorRelationships200ApplicationJSONDevice; }),
        __metadata("design:type", GetNetworkSensorRelationships200ApplicationJSONDevice)
    ], GetNetworkSensorRelationships200ApplicationJSON.prototype, "device", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "relationships" }),
        (0, class_transformer_1.Type)(function () { return GetNetworkSensorRelationships200ApplicationJSONRelationships; }),
        __metadata("design:type", GetNetworkSensorRelationships200ApplicationJSONRelationships)
    ], GetNetworkSensorRelationships200ApplicationJSON.prototype, "relationships", void 0);
    return GetNetworkSensorRelationships200ApplicationJSON;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSensorRelationships200ApplicationJSON = GetNetworkSensorRelationships200ApplicationJSON;
var GetNetworkSensorRelationshipsResponse = /** @class */ (function (_super) {
    __extends(GetNetworkSensorRelationshipsResponse, _super);
    function GetNetworkSensorRelationshipsResponse() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], GetNetworkSensorRelationshipsResponse.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Number)
    ], GetNetworkSensorRelationshipsResponse.prototype, "statusCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Object)
    ], GetNetworkSensorRelationshipsResponse.prototype, "rawResponse", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: GetNetworkSensorRelationships200ApplicationJSON,
        }),
        __metadata("design:type", Array)
    ], GetNetworkSensorRelationshipsResponse.prototype, "getNetworkSensorRelationships200ApplicationJSONObjects", void 0);
    return GetNetworkSensorRelationshipsResponse;
}(utils_1.SpeakeasyBase));
exports.GetNetworkSensorRelationshipsResponse = GetNetworkSensorRelationshipsResponse;
