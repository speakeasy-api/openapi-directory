// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BatchLoadStatusEnum string

const (
	BatchLoadStatusEnumCreated         BatchLoadStatusEnum = "CREATED"
	BatchLoadStatusEnumInProgress      BatchLoadStatusEnum = "IN_PROGRESS"
	BatchLoadStatusEnumFailed          BatchLoadStatusEnum = "FAILED"
	BatchLoadStatusEnumSucceeded       BatchLoadStatusEnum = "SUCCEEDED"
	BatchLoadStatusEnumProgressStopped BatchLoadStatusEnum = "PROGRESS_STOPPED"
	BatchLoadStatusEnumPendingResume   BatchLoadStatusEnum = "PENDING_RESUME"
)

func (e BatchLoadStatusEnum) ToPointer() *BatchLoadStatusEnum {
	return &e
}

func (e *BatchLoadStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "CREATED":
		fallthrough
	case "IN_PROGRESS":
		fallthrough
	case "FAILED":
		fallthrough
	case "SUCCEEDED":
		fallthrough
	case "PROGRESS_STOPPED":
		fallthrough
	case "PENDING_RESUME":
		*e = BatchLoadStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BatchLoadStatusEnum: %v", v)
	}
}
