// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateVPCEConfigurationXAmzTargetEnum
type UpdateVPCEConfigurationXAmzTargetEnum string

const (
	UpdateVPCEConfigurationXAmzTargetEnumDeviceFarm20150623UpdateVpceConfiguration UpdateVPCEConfigurationXAmzTargetEnum = "DeviceFarm_20150623.UpdateVPCEConfiguration"
)

func (e UpdateVPCEConfigurationXAmzTargetEnum) ToPointer() *UpdateVPCEConfigurationXAmzTargetEnum {
	return &e
}

func (e *UpdateVPCEConfigurationXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DeviceFarm_20150623.UpdateVPCEConfiguration":
		*e = UpdateVPCEConfigurationXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateVPCEConfigurationXAmzTargetEnum: %v", v)
	}
}

type UpdateVPCEConfigurationRequest struct {
	UpdateVPCEConfigurationRequest shared.UpdateVPCEConfigurationRequest `request:"mediaType=application/json"`
	XAmzAlgorithm                  *string                               `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256              *string                               `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential                 *string                               `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate                       *string                               `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken              *string                               `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature                  *string                               `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders              *string                               `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget                     UpdateVPCEConfigurationXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type UpdateVPCEConfigurationResponse struct {
	// ArgumentException
	ArgumentException interface{}
	ContentType       string
	// InvalidOperationException
	InvalidOperationException interface{}
	// NotFoundException
	NotFoundException interface{}
	// ServiceAccountException
	ServiceAccountException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// Success
	UpdateVPCEConfigurationResult *shared.UpdateVPCEConfigurationResult
}
