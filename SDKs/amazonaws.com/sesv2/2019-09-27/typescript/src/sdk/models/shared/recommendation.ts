/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RecommendationImpactEnum } from "./recommendationimpactenum";
import { RecommendationStatusEnum } from "./recommendationstatusenum";
import { RecommendationTypeEnum } from "./recommendationtypeenum";
import { Expose, Transform } from "class-transformer";

/**
 * A recommendation generated for your account.
 */
export class Recommendation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreatedTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  createdTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Impact" })
  impact?: RecommendationImpactEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "LastUpdatedTimestamp" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdatedTimestamp?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceArn" })
  resourceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: RecommendationStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "Type" })
  type?: RecommendationTypeEnum;
}
