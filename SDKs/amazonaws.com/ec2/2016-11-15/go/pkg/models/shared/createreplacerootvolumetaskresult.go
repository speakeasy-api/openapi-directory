// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTags - Describes a tag.
type CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTags struct {
	Key   *string
	Value *string
}

// CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTaskStateEnum - <p>The state of the task. The task can be in one of the following states:</p> <ul> <li> <p> <code>pending</code> - the replacement volume is being created.</p> </li> <li> <p> <code>in-progress</code> - the original volume is being detached and the replacement volume is being attached.</p> </li> <li> <p> <code>succeeded</code> - the replacement volume has been successfully attached to the instance and the instance is available.</p> </li> <li> <p> <code>failing</code> - the replacement task is in the process of failing.</p> </li> <li> <p> <code>failed</code> - the replacement task has failed but the original root volume is still attached.</p> </li> <li> <p> <code>failing-detached</code> - the replacement task is in the process of failing. The instance might have no root volume attached.</p> </li> <li> <p> <code>failed-detached</code> - the replacement task has failed and the instance has no root volume attached.</p> </li> </ul>
type CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTaskStateEnum string

const (
	CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTaskStateEnumPending        CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTaskStateEnum = "pending"
	CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTaskStateEnumInProgress     CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTaskStateEnum = "in-progress"
	CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTaskStateEnumFailing        CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTaskStateEnum = "failing"
	CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTaskStateEnumSucceeded      CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTaskStateEnum = "succeeded"
	CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTaskStateEnumFailed         CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTaskStateEnum = "failed"
	CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTaskStateEnumFailedDetached CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTaskStateEnum = "failed-detached"
)

func (e *CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTaskStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "pending":
		fallthrough
	case "in-progress":
		fallthrough
	case "failing":
		fallthrough
	case "succeeded":
		fallthrough
	case "failed":
		fallthrough
	case "failed-detached":
		*e = CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTaskStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTaskStateEnum: %s", s)
	}
}

// CreateReplaceRootVolumeTaskResultReplaceRootVolumeTask - Information about the root volume replacement task.
type CreateReplaceRootVolumeTaskResultReplaceRootVolumeTask struct {
	CompleteTime             *string
	DeleteReplacedRootVolume *bool
	ImageID                  *string
	InstanceID               *string
	ReplaceRootVolumeTaskID  *string
	SnapshotID               *string
	StartTime                *string
	Tags                     []CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTags
	TaskState                *CreateReplaceRootVolumeTaskResultReplaceRootVolumeTaskTaskStateEnum
}

// CreateReplaceRootVolumeTaskResult - Success
type CreateReplaceRootVolumeTaskResult struct {
	ReplaceRootVolumeTask *CreateReplaceRootVolumeTaskResultReplaceRootVolumeTask
}
