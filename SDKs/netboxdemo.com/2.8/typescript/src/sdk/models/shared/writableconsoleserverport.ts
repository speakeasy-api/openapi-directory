/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { NestedCableInput } from "./nestedcable";
import { Expose, Type } from "class-transformer";

export enum WritableConsoleServerPortConnectionStatusEnum {
  False = "false",
  True = "true",
}

/**
 * Physical port type
 */
export enum WritableConsoleServerPortTypeEnum {
  De9 = "de-9",
  Db25 = "db-25",
  Rj11 = "rj-11",
  Rj12 = "rj-12",
  Rj45 = "rj-45",
  UsbA = "usb-a",
  UsbB = "usb-b",
  UsbC = "usb-c",
  UsbMiniA = "usb-mini-a",
  UsbMiniB = "usb-mini-b",
  UsbMicroA = "usb-micro-a",
  UsbMicroB = "usb-micro-b",
  Other = "other",
}

export class WritableConsoleServerPortInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "cable" })
  @Type(() => NestedCableInput)
  cable?: NestedCableInput;

  @SpeakeasyMetadata()
  @Expose({ name: "connection_status" })
  connectionStatus?: WritableConsoleServerPortConnectionStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "description" })
  description?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "device" })
  device: number;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tags" })
  tags?: string[];

  /**
   * Physical port type
   */
  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: WritableConsoleServerPortTypeEnum;
}
