/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * EventCsvDownloadResponse - Returns the download link of the csv.
 */
public class EventCsvDownloadResponse {
    /**
     * The requested after date filter, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("afterDate")
    public OffsetDateTime afterDate;

    public EventCsvDownloadResponse withAfterDate(OffsetDateTime afterDate) {
        this.afterDate = afterDate;
        return this;
    }
    
    /**
     * The serialized AfterId of the response, if any.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("afterIdResponse")
    public String afterIdResponse;

    public EventCsvDownloadResponse withAfterIdResponse(String afterIdResponse) {
        this.afterIdResponse = afterIdResponse;
        return this;
    }
    
    /**
     * The requested before date filter, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("beforeDate")
    public OffsetDateTime beforeDate;

    public EventCsvDownloadResponse withBeforeDate(OffsetDateTime beforeDate) {
        this.beforeDate = beforeDate;
        return this;
    }
    
    /**
     * The download link for the CSV file.
     */
    @JsonProperty("downloadLink")
    public String downloadLink;

    public EventCsvDownloadResponse withDownloadLink(String downloadLink) {
        this.downloadLink = downloadLink;
        return this;
    }
    
    /**
     * Status of an event series.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventSeriesStatus")
    public EventSeriesStatusV1Enum eventSeriesStatus;

    public EventCsvDownloadResponse withEventSeriesStatus(EventSeriesStatusV1Enum eventSeriesStatus) {
        this.eventSeriesStatus = eventSeriesStatus;
        return this;
    }
    
    /**
     * Level of event's severity.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventSeverity")
    public EventSeverityV1Enum eventSeverity;

    public EventCsvDownloadResponse withEventSeverity(EventSeverityV1Enum eventSeverity) {
        this.eventSeverity = eventSeverity;
        return this;
    }
    
    /**
     * Status of an event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventStatus")
    public EventStatusV1Enum eventStatus;

    public EventCsvDownloadResponse withEventStatus(EventStatusV1Enum eventStatus) {
        this.eventStatus = eventStatus;
        return this;
    }
    
    /**
     * Type of an event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("eventType")
    public EventTypeV1Enum eventType;

    public EventCsvDownloadResponse withEventType(EventTypeV1Enum eventType) {
        this.eventType = eventType;
        return this;
    }
    
    /**
     * The requested list of object ID to filter events, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("objectIds")
    public String[] objectIds;

    public EventCsvDownloadResponse withObjectIds(String[] objectIds) {
        this.objectIds = objectIds;
        return this;
    }
    
    /**
     * The requested object name filter, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("objectName")
    public String objectName;

    public EventCsvDownloadResponse withObjectName(String objectName) {
        this.objectName = objectName;
        return this;
    }
    
    /**
     * Type of the object associated with the event.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("objectType")
    public ObjectTypeV1Enum objectType;

    public EventCsvDownloadResponse withObjectType(ObjectTypeV1Enum objectType) {
        this.objectType = objectType;
        return this;
    }
    
    public EventCsvDownloadResponse(@JsonProperty("downloadLink") String downloadLink) {
        this.downloadLink = downloadLink;
  }
}
