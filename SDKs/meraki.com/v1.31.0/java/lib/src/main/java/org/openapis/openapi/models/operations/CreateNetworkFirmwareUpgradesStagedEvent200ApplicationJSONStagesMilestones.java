/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CreateNetworkFirmwareUpgradesStagedEvent200ApplicationJSONStagesMilestones - The Staged Upgrade Milestones for the stage
 */
public class CreateNetworkFirmwareUpgradesStagedEvent200ApplicationJSONStagesMilestones {
    /**
     * Time that the group was canceled
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("canceledAt")
    public OffsetDateTime canceledAt;
    public CreateNetworkFirmwareUpgradesStagedEvent200ApplicationJSONStagesMilestones withCanceledAt(OffsetDateTime canceledAt) {
        this.canceledAt = canceledAt;
        return this;
    }
    
    /**
     * Finish time for the group
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("completedAt")
    public OffsetDateTime completedAt;
    public CreateNetworkFirmwareUpgradesStagedEvent200ApplicationJSONStagesMilestones withCompletedAt(OffsetDateTime completedAt) {
        this.completedAt = completedAt;
        return this;
    }
    
    /**
     * Scheduled start time for the group
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("scheduledFor")
    public OffsetDateTime scheduledFor;
    public CreateNetworkFirmwareUpgradesStagedEvent200ApplicationJSONStagesMilestones withScheduledFor(OffsetDateTime scheduledFor) {
        this.scheduledFor = scheduledFor;
        return this;
    }
    
    /**
     * Start time for the group
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("startedAt")
    public OffsetDateTime startedAt;
    public CreateNetworkFirmwareUpgradesStagedEvent200ApplicationJSONStagesMilestones withStartedAt(OffsetDateTime startedAt) {
        this.startedAt = startedAt;
        return this;
    }
    
}
