// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
)

type SilenceUserRequestBody struct {
	// Will send an email with this message when present
	Message      *string `json:"message,omitempty"`
	PostAction   *string `json:"post_action,omitempty"`
	Reason       *string `json:"reason,omitempty"`
	SilencedTill *string `json:"silenced_till,omitempty"`
}

type SilenceUserRequest struct {
	RequestBody *SilenceUserRequestBody `request:"mediaType=application/json"`
	ID          int64                   `pathParam:"style=simple,explode=false,name=id"`
}

type SilenceUser200ApplicationJSONSilenceSilencedBy struct {
	AvatarTemplate string `json:"avatar_template"`
	ID             int64  `json:"id"`
	Name           string `json:"name"`
	Username       string `json:"username"`
}

type SilenceUser200ApplicationJSONSilence struct {
	SilenceReason string                                         `json:"silence_reason"`
	Silenced      bool                                           `json:"silenced"`
	SilencedAt    string                                         `json:"silenced_at"`
	SilencedBy    SilenceUser200ApplicationJSONSilenceSilencedBy `json:"silenced_by"`
	SilencedTill  string                                         `json:"silenced_till"`
}

// SilenceUser200ApplicationJSON - response
type SilenceUser200ApplicationJSON struct {
	Silence SilenceUser200ApplicationJSONSilence `json:"silence"`
}

type SilenceUserResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// response
	SilenceUser200ApplicationJSONObject *SilenceUser200ApplicationJSON
}
