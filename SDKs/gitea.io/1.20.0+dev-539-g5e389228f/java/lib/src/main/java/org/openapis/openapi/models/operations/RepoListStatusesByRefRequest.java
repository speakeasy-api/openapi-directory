/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class RepoListStatusesByRefRequest {
    /**
     * page size of results
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;

    public RepoListStatusesByRefRequest withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * owner of the repo
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=owner")
    public String owner;

    public RepoListStatusesByRefRequest withOwner(String owner) {
        this.owner = owner;
        return this;
    }
    
    /**
     * page number of results to return (1-based)
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=page")
    public Long page;

    public RepoListStatusesByRefRequest withPage(Long page) {
        this.page = page;
        return this;
    }
    
    /**
     * name of branch/tag/commit
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=ref")
    public String ref;

    public RepoListStatusesByRefRequest withRef(String ref) {
        this.ref = ref;
        return this;
    }
    
    /**
     * name of the repo
     */
    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=repo")
    public String repo;

    public RepoListStatusesByRefRequest withRepo(String repo) {
        this.repo = repo;
        return this;
    }
    
    /**
     * type of sort
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=sort")
    public RepoListStatusesByRefSortEnum sort;

    public RepoListStatusesByRefRequest withSort(RepoListStatusesByRefSortEnum sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * type of state
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=state")
    public RepoListStatusesByRefStateEnum state;

    public RepoListStatusesByRefRequest withState(RepoListStatusesByRefStateEnum state) {
        this.state = state;
        return this;
    }
    
    public RepoListStatusesByRefRequest(@JsonProperty("owner") String owner, @JsonProperty("ref") String ref, @JsonProperty("repo") String repo) {
        this.owner = owner;
        this.ref = ref;
        this.repo = repo;
  }
}
