/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ModelSortKeyEnum } from "./modelsortkeyenum";
import { OrderKeyEnum } from "./orderkeyenum";
import { Expose, Transform } from "class-transformer";

export class ListModelsInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "CreationTimeAfter" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTimeAfter?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "CreationTimeBefore" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTimeBefore?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "MaxResults" })
  maxResults?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "NameContains" })
  nameContains?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NextToken" })
  nextToken?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SortBy" })
  sortBy?: ModelSortKeyEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "SortOrder" })
  sortOrder?: OrderKeyEnum;
}
