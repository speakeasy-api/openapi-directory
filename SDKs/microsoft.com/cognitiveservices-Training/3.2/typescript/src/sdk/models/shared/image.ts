/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ImageRegion } from "./imageregion";
import { ImageTag } from "./imagetag";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Image model to be sent as JSON.
 */
export class Image extends SpeakeasyBase {
  /**
   * Date the image was created.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  created?: Date;

  /**
   * Height of the image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "height" })
  height?: number;

  /**
   * Id of the image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  /**
   * The URI to the original uploaded image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "originalImageUri" })
  originalImageUri?: string;

  /**
   * Regions associated with this image.
   */
  @SpeakeasyMetadata({ elemType: ImageRegion })
  @Expose({ name: "regions" })
  @Type(() => ImageRegion)
  regions?: ImageRegion[];

  /**
   * The URI to the (resized) image used for training.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "resizedImageUri" })
  resizedImageUri?: string;

  /**
   * Tags associated with this image.
   */
  @SpeakeasyMetadata({ elemType: ImageTag })
  @Expose({ name: "tags" })
  @Type(() => ImageTag)
  tags?: ImageTag[];

  /**
   * The URI to the thumbnail of the original image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "thumbnailUri" })
  thumbnailUri?: string;

  /**
   * Width of the image.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "width" })
  width?: number;
}
