// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type ApproveAWireTransferRequest struct {
	WireTransferID string `pathParam:"style=simple,explode=false,name=wire_transfer_id"`
}

type ApproveAWireTransferDefaultApplicationJSON13StatusEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine ApproveAWireTransferDefaultApplicationJSON13StatusEnum = "429"
)

func (e *ApproveAWireTransferDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "429":
		*e = ApproveAWireTransferDefaultApplicationJSON13StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON13StatusEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON13TypeEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON13TypeEnumRateLimitedError ApproveAWireTransferDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e *ApproveAWireTransferDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "rate_limited_error":
		*e = ApproveAWireTransferDefaultApplicationJSON13TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON13TypeEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON13 struct {
	Detail     string                                                 `json:"detail"`
	RetryAfter *int64                                                 `json:"retry_after,omitempty"`
	Status     ApproveAWireTransferDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                 `json:"title"`
	Type       ApproveAWireTransferDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type ApproveAWireTransferDefaultApplicationJSON12StatusEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON12StatusEnumFourHundredAndThree ApproveAWireTransferDefaultApplicationJSON12StatusEnum = "403"
)

func (e *ApproveAWireTransferDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ApproveAWireTransferDefaultApplicationJSON12StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON12StatusEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON12TypeEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON12TypeEnumPrivateFeatureError ApproveAWireTransferDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e *ApproveAWireTransferDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "private_feature_error":
		*e = ApproveAWireTransferDefaultApplicationJSON12TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON12TypeEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON12 struct {
	Detail string                                                 `json:"detail"`
	Status ApproveAWireTransferDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   ApproveAWireTransferDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type ApproveAWireTransferDefaultApplicationJSON11StatusEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON11StatusEnumFourHundredAndFour ApproveAWireTransferDefaultApplicationJSON11StatusEnum = "404"
)

func (e *ApproveAWireTransferDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ApproveAWireTransferDefaultApplicationJSON11StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON11StatusEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON11TypeEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON11TypeEnumObjectNotFoundError ApproveAWireTransferDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e *ApproveAWireTransferDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "object_not_found_error":
		*e = ApproveAWireTransferDefaultApplicationJSON11TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON11TypeEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON11 struct {
	Detail string                                                 `json:"detail"`
	Status ApproveAWireTransferDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   ApproveAWireTransferDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type ApproveAWireTransferDefaultApplicationJSON10StatusEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON10StatusEnumFourHundred ApproveAWireTransferDefaultApplicationJSON10StatusEnum = "400"
)

func (e *ApproveAWireTransferDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ApproveAWireTransferDefaultApplicationJSON10StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON10StatusEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON10TypeEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON10TypeEnumMalformedRequestError ApproveAWireTransferDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e *ApproveAWireTransferDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "malformed_request_error":
		*e = ApproveAWireTransferDefaultApplicationJSON10TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON10TypeEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON10 struct {
	Detail string                                                 `json:"detail"`
	Status ApproveAWireTransferDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                 `json:"title"`
	Type   ApproveAWireTransferDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type ApproveAWireTransferDefaultApplicationJSON9StatusEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON9StatusEnumFourHundred ApproveAWireTransferDefaultApplicationJSON9StatusEnum = "400"
)

func (e *ApproveAWireTransferDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "400":
		*e = ApproveAWireTransferDefaultApplicationJSON9StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON9StatusEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON9TypeEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON9TypeEnumInvalidParametersError ApproveAWireTransferDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e *ApproveAWireTransferDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_parameters_error":
		*e = ApproveAWireTransferDefaultApplicationJSON9TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON9TypeEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                              `json:"errors,omitempty"`
	Status ApproveAWireTransferDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ApproveAWireTransferDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type ApproveAWireTransferDefaultApplicationJSON8StatusEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON8StatusEnumFourHundredAndNine ApproveAWireTransferDefaultApplicationJSON8StatusEnum = "409"
)

func (e *ApproveAWireTransferDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ApproveAWireTransferDefaultApplicationJSON8StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON8StatusEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON8TypeEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON8TypeEnumInvalidOperationError ApproveAWireTransferDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e *ApproveAWireTransferDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_operation_error":
		*e = ApproveAWireTransferDefaultApplicationJSON8TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON8TypeEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON8 struct {
	Detail string                                                `json:"detail"`
	Status ApproveAWireTransferDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ApproveAWireTransferDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type ApproveAWireTransferDefaultApplicationJSON7StatusEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON7StatusEnumFourHundredAndOne ApproveAWireTransferDefaultApplicationJSON7StatusEnum = "401"
)

func (e *ApproveAWireTransferDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "401":
		*e = ApproveAWireTransferDefaultApplicationJSON7StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON7StatusEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON7TypeEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON7TypeEnumInvalidAPIKeyError ApproveAWireTransferDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e *ApproveAWireTransferDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "invalid_api_key_error":
		*e = ApproveAWireTransferDefaultApplicationJSON7TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON7TypeEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON7 struct {
	Detail string                                                `json:"detail"`
	Status ApproveAWireTransferDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ApproveAWireTransferDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type ApproveAWireTransferDefaultApplicationJSON6StatusEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON6StatusEnumFiveHundred ApproveAWireTransferDefaultApplicationJSON6StatusEnum = "500"
)

func (e *ApproveAWireTransferDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "500":
		*e = ApproveAWireTransferDefaultApplicationJSON6StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON6StatusEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON6TypeEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON6TypeEnumInternalServerError ApproveAWireTransferDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e *ApproveAWireTransferDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "internal_server_error":
		*e = ApproveAWireTransferDefaultApplicationJSON6TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON6TypeEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON6 struct {
	Detail string                                                `json:"detail"`
	Status ApproveAWireTransferDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ApproveAWireTransferDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type ApproveAWireTransferDefaultApplicationJSON5StatusEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON5StatusEnumFourHundredAndThree ApproveAWireTransferDefaultApplicationJSON5StatusEnum = "403"
)

func (e *ApproveAWireTransferDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ApproveAWireTransferDefaultApplicationJSON5StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON5StatusEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON5TypeEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON5TypeEnumInsufficientPermissionsError ApproveAWireTransferDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e *ApproveAWireTransferDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "insufficient_permissions_error":
		*e = ApproveAWireTransferDefaultApplicationJSON5TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON5TypeEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON5 struct {
	Detail string                                                `json:"detail"`
	Status ApproveAWireTransferDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ApproveAWireTransferDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type ApproveAWireTransferDefaultApplicationJSON4StatusEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo ApproveAWireTransferDefaultApplicationJSON4StatusEnum = "422"
)

func (e *ApproveAWireTransferDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "422":
		*e = ApproveAWireTransferDefaultApplicationJSON4StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON4StatusEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON4TypeEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError ApproveAWireTransferDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e *ApproveAWireTransferDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_unprocessable_error":
		*e = ApproveAWireTransferDefaultApplicationJSON4TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON4TypeEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON4 struct {
	Detail string                                                `json:"detail"`
	Status ApproveAWireTransferDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ApproveAWireTransferDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type ApproveAWireTransferDefaultApplicationJSON3StatusEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON3StatusEnumFourHundredAndNine ApproveAWireTransferDefaultApplicationJSON3StatusEnum = "409"
)

func (e *ApproveAWireTransferDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "409":
		*e = ApproveAWireTransferDefaultApplicationJSON3StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON3StatusEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON3TypeEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON3TypeEnumIdempotencyConflictError ApproveAWireTransferDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e *ApproveAWireTransferDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "idempotency_conflict_error":
		*e = ApproveAWireTransferDefaultApplicationJSON3TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON3TypeEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON3 struct {
	Detail string                                                `json:"detail"`
	Status ApproveAWireTransferDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ApproveAWireTransferDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type ApproveAWireTransferDefaultApplicationJSON2StatusEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON2StatusEnumFourHundredAndThree ApproveAWireTransferDefaultApplicationJSON2StatusEnum = "403"
)

func (e *ApproveAWireTransferDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "403":
		*e = ApproveAWireTransferDefaultApplicationJSON2StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON2StatusEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON2TypeEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON2TypeEnumEnvironmentMismatchError ApproveAWireTransferDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e *ApproveAWireTransferDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "environment_mismatch_error":
		*e = ApproveAWireTransferDefaultApplicationJSON2TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON2TypeEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON2 struct {
	Detail string                                                `json:"detail"`
	Status ApproveAWireTransferDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ApproveAWireTransferDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type ApproveAWireTransferDefaultApplicationJSON1StatusEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON1StatusEnumFourHundredAndFour ApproveAWireTransferDefaultApplicationJSON1StatusEnum = "404"
)

func (e *ApproveAWireTransferDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "404":
		*e = ApproveAWireTransferDefaultApplicationJSON1StatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON1StatusEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON1TypeEnum string

const (
	ApproveAWireTransferDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError ApproveAWireTransferDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e *ApproveAWireTransferDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "api_method_not_found_error":
		*e = ApproveAWireTransferDefaultApplicationJSON1TypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApproveAWireTransferDefaultApplicationJSON1TypeEnum: %s", s)
	}
}

type ApproveAWireTransferDefaultApplicationJSON1 struct {
	Detail string                                                `json:"detail"`
	Status ApproveAWireTransferDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                `json:"title"`
	Type   ApproveAWireTransferDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type ApproveAWireTransferResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Error
	Error interface{}
	// Wire Transfer
	WireTransfer *shared.WireTransfer
}
