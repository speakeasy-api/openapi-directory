"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import failoverproperty as shared_failoverproperty
from ..shared import fromproperty as shared_fromproperty
from ..shared import messageproperty as shared_messageproperty
from ..shared import toproperty as shared_toproperty
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SendWithFailoverMessage:
    r"""Send With Failover Message"""
    
    from_: shared_fromproperty.FromProperty = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('from') }})  
    message: shared_messageproperty.MessageProperty = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('message') }})  
    to: shared_toproperty.ToProperty = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to') }})  
    failover: Optional[shared_failoverproperty.FailoverProperty] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('failover'), 'exclude': lambda f: f is None }})
    r"""Please note that last message does not have failover attribute inside it. All other messages must contain a failover attribute."""  
    