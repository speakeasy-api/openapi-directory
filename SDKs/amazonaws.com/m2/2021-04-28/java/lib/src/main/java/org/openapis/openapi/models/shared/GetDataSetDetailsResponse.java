/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * GetDataSetDetailsResponse - Success
 */
public class GetDataSetDetailsResponse {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("blocksize")
    public Long blocksize;

    public GetDataSetDetailsResponse withBlocksize(Long blocksize) {
        this.blocksize = blocksize;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("creationTime")
    public OffsetDateTime creationTime;

    public GetDataSetDetailsResponse withCreationTime(OffsetDateTime creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    @JsonProperty("dataSetName")
    public String dataSetName;

    public GetDataSetDetailsResponse withDataSetName(String dataSetName) {
        this.dataSetName = dataSetName;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dataSetOrg")
    public DatasetDetailOrgAttributes dataSetOrg;

    public GetDataSetDetailsResponse withDataSetOrg(DatasetDetailOrgAttributes dataSetOrg) {
        this.dataSetOrg = dataSetOrg;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastReferencedTime")
    public OffsetDateTime lastReferencedTime;

    public GetDataSetDetailsResponse withLastReferencedTime(OffsetDateTime lastReferencedTime) {
        this.lastReferencedTime = lastReferencedTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("lastUpdatedTime")
    public OffsetDateTime lastUpdatedTime;

    public GetDataSetDetailsResponse withLastUpdatedTime(OffsetDateTime lastUpdatedTime) {
        this.lastUpdatedTime = lastUpdatedTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;

    public GetDataSetDetailsResponse withLocation(String location) {
        this.location = location;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("recordLength")
    public Long recordLength;

    public GetDataSetDetailsResponse withRecordLength(Long recordLength) {
        this.recordLength = recordLength;
        return this;
    }
    
    public GetDataSetDetailsResponse(@JsonProperty("dataSetName") String dataSetName) {
        this.dataSetName = dataSetName;
  }
}
