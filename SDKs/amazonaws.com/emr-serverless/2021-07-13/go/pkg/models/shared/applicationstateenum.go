// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type ApplicationStateEnum string

const (
	ApplicationStateEnumCreating   ApplicationStateEnum = "CREATING"
	ApplicationStateEnumCreated    ApplicationStateEnum = "CREATED"
	ApplicationStateEnumStarting   ApplicationStateEnum = "STARTING"
	ApplicationStateEnumStarted    ApplicationStateEnum = "STARTED"
	ApplicationStateEnumStopping   ApplicationStateEnum = "STOPPING"
	ApplicationStateEnumStopped    ApplicationStateEnum = "STOPPED"
	ApplicationStateEnumTerminated ApplicationStateEnum = "TERMINATED"
)

func (e *ApplicationStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATING":
		fallthrough
	case "CREATED":
		fallthrough
	case "STARTING":
		fallthrough
	case "STARTED":
		fallthrough
	case "STOPPING":
		fallthrough
	case "STOPPED":
		fallthrough
	case "TERMINATED":
		*e = ApplicationStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ApplicationStateEnum: %s", s)
	}
}
