"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import missingcompletesensordata as shared_missingcompletesensordata
from ..shared import sensorswithshortdaterange as shared_sensorswithshortdaterange
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class InsufficientSensorData:
    r"""Entity that comprises aggregated information on sensors having insufficient data."""
    
    missing_complete_sensor_data: shared_missingcompletesensordata.MissingCompleteSensorData = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MissingCompleteSensorData') }})  
    sensors_with_short_date_range: shared_sensorswithshortdaterange.SensorsWithShortDateRange = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('SensorsWithShortDateRange') }})  
    