// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type PostHistoryExportsRequestBody struct {
	// End date/time of export range.
	EndAt *time.Time `multipartForm:"name=end_at"`
	// Filter results by this this action type. Valid values: `create`, `read`, `update`, `destroy`, `move`, `login`, `failedlogin`, `copy`, `user_create`, `user_update`, `user_destroy`, `group_create`, `group_update`, `group_destroy`, `permission_create`, `permission_destroy`, `api_key_create`, `api_key_update`, `api_key_destroy`
	QueryAction *string `multipartForm:"name=query_action"`
	// Return results that are file moves with this path as destination.
	QueryDestination *string `multipartForm:"name=query_destination"`
	// If searching for Histories about login failures, this parameter restricts results to failures of this specific type.  Valid values: `expired_trial`, `account_overdue`, `locked_out`, `ip_mismatch`, `password_mismatch`, `site_mismatch`, `username_not_found`, `none`, `no_ftp_permission`, `no_web_permission`, `no_directory`, `errno_enoent`, `no_sftp_permission`, `no_dav_permission`, `no_restapi_permission`, `key_mismatch`, `region_mismatch`, `expired_access`, `desktop_ip_mismatch`, `desktop_api_key_not_used_quickly_enough`, `disabled`, `country_mismatch`
	QueryFailureType *string `multipartForm:"name=query_failure_type"`
	// Return results that are file actions related to the file indicated by this File ID
	QueryFileID *string `multipartForm:"name=query_file_id"`
	// Return results that are file actions related to files or folders inside this folder path.
	QueryFolder *string `multipartForm:"name=query_folder"`
	// Filter results by this this interface type. Valid values: `web`, `ftp`, `robot`, `jsapi`, `webdesktopapi`, `sftp`, `dav`, `desktop`, `restapi`, `scim`, `office`, `mobile`, `as2`, `inbound_email`, `remote`
	QueryInterface *string `multipartForm:"name=query_interface"`
	// Filter results by this IP address.
	QueryIP *string `multipartForm:"name=query_ip"`
	// Return results that are file actions inside the parent folder specified by this folder ID
	QueryParentID *string `multipartForm:"name=query_parent_id"`
	// Return results that are file actions related to this path.
	QueryPath *string `multipartForm:"name=query_path"`
	// Return results that are file moves originating from this path.
	QuerySrc *string `multipartForm:"name=query_src"`
	// If searching for Histories about specific objects (such as Users, or API Keys), this paremeter restricts results to objects that match this ID.
	QueryTargetID *string `multipartForm:"name=query_target_id"`
	// If searching for Histories about Users, Groups or other objects with names, this parameter restricts results to objects with this name/username.
	QueryTargetName *string `multipartForm:"name=query_target_name"`
	// If searching for Histories about Permisisons, this parameter restricts results to permissions of this level.
	QueryTargetPermission *string `multipartForm:"name=query_target_permission"`
	// If searching for Histories about API keys, this parameter restricts results to API keys with this permission set.
	QueryTargetPermissionSet *string `multipartForm:"name=query_target_permission_set"`
	// If searching for Histories about API keys, this parameter restricts results to API keys associated with this platform.
	QueryTargetPlatform *string `multipartForm:"name=query_target_platform"`
	// If searching for Histories about API keys, this parameter restricts results to API keys created by/for this user ID.
	QueryTargetUserID *string `multipartForm:"name=query_target_user_id"`
	// If searching for Histories about API keys, this parameter restricts results to API keys created by/for this username.
	QueryTargetUsername *string `multipartForm:"name=query_target_username"`
	// Return results that are actions performed by the user indiciated by this User ID
	QueryUserID *string `multipartForm:"name=query_user_id"`
	// Filter results by this username.
	QueryUsername *string `multipartForm:"name=query_username"`
	// Start date/time of export range.
	StartAt *time.Time `multipartForm:"name=start_at"`
	// User ID.  Provide a value of `0` to operate the current session's user.
	UserID *int `multipartForm:"name=user_id"`
}

type PostHistoryExportsRequest struct {
	Request *PostHistoryExportsRequestBody `request:"mediaType=multipart/form-data"`
}

type PostHistoryExportsResponse struct {
	ContentType string
	// The HistoryExports object.
	HistoryExportEntity *shared.HistoryExportEntity
	StatusCode          int
	RawResponse         *http.Response
}
