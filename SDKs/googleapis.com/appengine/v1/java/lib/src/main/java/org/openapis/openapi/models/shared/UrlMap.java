/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UrlMap - URL pattern and description of how the URL should be handled. App Engine can handle URLs by executing application code or by serving static files uploaded with the version, such as images, CSS, or JavaScript.
 */
public class UrlMap {
    /**
     * Uses Google Cloud Endpoints to handle requests.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("apiEndpoint")
    public ApiEndpointHandler apiEndpoint;
    public UrlMap withApiEndpoint(ApiEndpointHandler apiEndpoint) {
        this.apiEndpoint = apiEndpoint;
        return this;
    }
    
    /**
     * Action to take when users access resources that require authentication. Defaults to redirect.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authFailAction")
    public UrlMapAuthFailActionEnum authFailAction;
    public UrlMap withAuthFailAction(UrlMapAuthFailActionEnum authFailAction) {
        this.authFailAction = authFailAction;
        return this;
    }
    
    /**
     * Level of login required to access this resource. Not supported for Node.js in the App Engine standard environment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("login")
    public UrlMapLoginEnum login;
    public UrlMap withLogin(UrlMapLoginEnum login) {
        this.login = login;
        return this;
    }
    
    /**
     * 30x code to use when performing redirects for the secure field. Defaults to 302.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("redirectHttpResponseCode")
    public UrlMapRedirectHttpResponseCodeEnum redirectHttpResponseCode;
    public UrlMap withRedirectHttpResponseCode(UrlMapRedirectHttpResponseCodeEnum redirectHttpResponseCode) {
        this.redirectHttpResponseCode = redirectHttpResponseCode;
        return this;
    }
    
    /**
     * Executes a script to handle the request that matches the URL pattern.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("script")
    public ScriptHandler script;
    public UrlMap withScript(ScriptHandler script) {
        this.script = script;
        return this;
    }
    
    /**
     * Security (HTTPS) enforcement for this URL.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("securityLevel")
    public UrlMapSecurityLevelEnum securityLevel;
    public UrlMap withSecurityLevel(UrlMapSecurityLevelEnum securityLevel) {
        this.securityLevel = securityLevel;
        return this;
    }
    
    /**
     * Files served directly to the user for a given URL, such as images, CSS stylesheets, or JavaScript source files. Static file handlers describe which files in the application directory are static files, and which URLs serve them.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("staticFiles")
    public StaticFilesHandler staticFiles;
    public UrlMap withStaticFiles(StaticFilesHandler staticFiles) {
        this.staticFiles = staticFiles;
        return this;
    }
    
    /**
     * URL prefix. Uses regular expression syntax, which means regexp special characters must be escaped, but should not contain groupings. All URLs that begin with this prefix are handled by this handler, using the portion of the URL after the prefix as part of the file path.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("urlRegex")
    public String urlRegex;
    public UrlMap withUrlRegex(String urlRegex) {
        this.urlRegex = urlRegex;
        return this;
    }
    
}
