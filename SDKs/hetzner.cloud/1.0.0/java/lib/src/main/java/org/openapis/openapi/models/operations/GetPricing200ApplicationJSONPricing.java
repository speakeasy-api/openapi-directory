/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;

public class GetPricing200ApplicationJSONPricing {
    /**
     * Currency the returned prices are expressed in, coded according to ISO 4217
     */
    @JsonProperty("currency")
    public String currency;
    public GetPricing200ApplicationJSONPricing withCurrency(String currency) {
        this.currency = currency;
        return this;
    }
    
    /**
     * The cost of one Floating IP per month
     */
    @JsonProperty("floating_ip")
    public GetPricing200ApplicationJSONPricingFloatingIp floatingIp;
    public GetPricing200ApplicationJSONPricing withFloatingIp(GetPricing200ApplicationJSONPricingFloatingIp floatingIp) {
        this.floatingIp = floatingIp;
        return this;
    }
    
    /**
     * Costs of Floating IPs types per Location and type
     */
    @JsonProperty("floating_ips")
    public GetPricing200ApplicationJSONPricingFloatingIps[] floatingIps;
    public GetPricing200ApplicationJSONPricing withFloatingIps(GetPricing200ApplicationJSONPricingFloatingIps[] floatingIps) {
        this.floatingIps = floatingIps;
        return this;
    }
    
    /**
     * The cost of Image per GB/month
     */
    @JsonProperty("image")
    public GetPricing200ApplicationJSONPricingImage image;
    public GetPricing200ApplicationJSONPricing withImage(GetPricing200ApplicationJSONPricingImage image) {
        this.image = image;
        return this;
    }
    
    /**
     * Costs of Load Balancer types per Location and type
     */
    @JsonProperty("load_balancer_types")
    public GetPricing200ApplicationJSONPricingLoadBalancerTypes[] loadBalancerTypes;
    public GetPricing200ApplicationJSONPricing withLoadBalancerTypes(GetPricing200ApplicationJSONPricingLoadBalancerTypes[] loadBalancerTypes) {
        this.loadBalancerTypes = loadBalancerTypes;
        return this;
    }
    
    /**
     * Costs of Primary IPs types per Location
     */
    @JsonProperty("primary_ips")
    public GetPricing200ApplicationJSONPricingPrimaryIps[] primaryIps;
    public GetPricing200ApplicationJSONPricing withPrimaryIps(GetPricing200ApplicationJSONPricingPrimaryIps[] primaryIps) {
        this.primaryIps = primaryIps;
        return this;
    }
    
    /**
     * Will increase base Server costs by specific percentage
     */
    @JsonProperty("server_backup")
    public GetPricing200ApplicationJSONPricingServerBackup serverBackup;
    public GetPricing200ApplicationJSONPricing withServerBackup(GetPricing200ApplicationJSONPricingServerBackup serverBackup) {
        this.serverBackup = serverBackup;
        return this;
    }
    
    /**
     * Costs of Server types per Location and type
     */
    @JsonProperty("server_types")
    public GetPricing200ApplicationJSONPricingServerTypes[] serverTypes;
    public GetPricing200ApplicationJSONPricing withServerTypes(GetPricing200ApplicationJSONPricingServerTypes[] serverTypes) {
        this.serverTypes = serverTypes;
        return this;
    }
    
    /**
     * The cost of additional traffic per TB
     */
    @JsonProperty("traffic")
    public GetPricing200ApplicationJSONPricingTraffic traffic;
    public GetPricing200ApplicationJSONPricing withTraffic(GetPricing200ApplicationJSONPricingTraffic traffic) {
        this.traffic = traffic;
        return this;
    }
    
    /**
     * The VAT rate used for calculating prices with VAT
     */
    @JsonProperty("vat_rate")
    public String vatRate;
    public GetPricing200ApplicationJSONPricing withVatRate(String vatRate) {
        this.vatRate = vatRate;
        return this;
    }
    
    /**
     * The cost of Volume per GB/month
     */
    @JsonProperty("volume")
    public GetPricing200ApplicationJSONPricingVolume volume;
    public GetPricing200ApplicationJSONPricing withVolume(GetPricing200ApplicationJSONPricingVolume volume) {
        this.volume = volume;
        return this;
    }
    
}
