"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.QuoteDTOv2 = void 0;
var utils_1 = require("../../../internal/utils");
var documentsdto_1 = require("./documentsdto");
var peopledto_1 = require("./peopledto");
var projectlanguagesdto_1 = require("./projectlanguagesdto");
var volumedto_1 = require("./volumedto");
var class_transformer_1 = require("class-transformer");
/**
 * Success
 */
var QuoteDTOv2 = /** @class */ (function (_super) {
    __extends(QuoteDTOv2, _super);
    function QuoteDTOv2() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "budgetCode" }),
        __metadata("design:type", String)
    ], QuoteDTOv2.prototype, "budgetCode", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "businessDays" }),
        __metadata("design:type", Number)
    ], QuoteDTOv2.prototype, "businessDays", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "categoryIds" }),
        __metadata("design:type", Array)
    ], QuoteDTOv2.prototype, "categoryIds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientDeadline" }),
        __metadata("design:type", Number)
    ], QuoteDTOv2.prototype, "clientDeadline", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientId" }),
        __metadata("design:type", Number)
    ], QuoteDTOv2.prototype, "clientId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientNotes" }),
        __metadata("design:type", String)
    ], QuoteDTOv2.prototype, "clientNotes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "clientReferenceNumber" }),
        __metadata("design:type", String)
    ], QuoteDTOv2.prototype, "clientReferenceNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "createdOn" }),
        __metadata("design:type", Number)
    ], QuoteDTOv2.prototype, "createdOn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "documents" }),
        (0, class_transformer_1.Type)(function () { return documentsdto_1.DocumentsDTO; }),
        __metadata("design:type", documentsdto_1.DocumentsDTO)
    ], QuoteDTOv2.prototype, "documents", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "expectedDeliveryDate" }),
        __metadata("design:type", Number)
    ], QuoteDTOv2.prototype, "expectedDeliveryDate", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], QuoteDTOv2.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "instructionsForAllJobs" }),
        __metadata("design:type", String)
    ], QuoteDTOv2.prototype, "instructionsForAllJobs", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "internalNotes" }),
        __metadata("design:type", String)
    ], QuoteDTOv2.prototype, "internalNotes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "isClassicQuote" }),
        __metadata("design:type", Boolean)
    ], QuoteDTOv2.prototype, "isClassicQuote", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "languages" }),
        (0, class_transformer_1.Type)(function () { return projectlanguagesdto_1.ProjectLanguagesDTO; }),
        __metadata("design:type", projectlanguagesdto_1.ProjectLanguagesDTO)
    ], QuoteDTOv2.prototype, "languages", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], QuoteDTOv2.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "origin" }),
        __metadata("design:type", String)
    ], QuoteDTOv2.prototype, "origin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "people" }),
        (0, class_transformer_1.Type)(function () { return peopledto_1.PeopleDTO; }),
        __metadata("design:type", peopledto_1.PeopleDTO)
    ], QuoteDTOv2.prototype, "people", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "quoteExpiry" }),
        __metadata("design:type", Number)
    ], QuoteDTOv2.prototype, "quoteExpiry", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "quoteId" }),
        __metadata("design:type", String)
    ], QuoteDTOv2.prototype, "quoteId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "quoteIdNumber" }),
        __metadata("design:type", String)
    ], QuoteDTOv2.prototype, "quoteIdNumber", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "serviceId" }),
        __metadata("design:type", Number)
    ], QuoteDTOv2.prototype, "serviceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "status" }),
        __metadata("design:type", String)
    ], QuoteDTOv2.prototype, "status", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "volume" }),
        (0, class_transformer_1.Type)(function () { return volumedto_1.VolumeDTO; }),
        __metadata("design:type", volumedto_1.VolumeDTO)
    ], QuoteDTOv2.prototype, "volume", void 0);
    return QuoteDTOv2;
}(utils_1.SpeakeasyBase));
exports.QuoteDTOv2 = QuoteDTOv2;
