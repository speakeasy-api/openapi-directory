/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class AuditLogEventActorLocation extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "country_name" })
  countryName?: string;
}

export class AuditLogEvent extends SpeakeasyBase {
  /**
   * The time the audit log event occurred, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "@timestamp" })
  atTimestamp?: number;

  /**
   * A unique identifier for an audit event.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "_document_id" })
  documentId?: string;

  /**
   * The name of the action that was performed, for example `user.login` or `repo.create`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "action" })
  action?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "active" })
  active?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "active_was" })
  activeWas?: boolean;

  /**
   * The actor who performed the action.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actor" })
  actor?: string;

  /**
   * The id of the actor who performed the action.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "actor_id" })
  actorId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "actor_location" })
  @Type(() => AuditLogEventActorLocation)
  actorLocation?: AuditLogEventActorLocation;

  /**
   * The username of the account being blocked.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "blocked_user" })
  blockedUser?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "business" })
  business?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "business_id" })
  businessId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "config" })
  config?: Record<string, any>[];

  @SpeakeasyMetadata()
  @Expose({ name: "config_was" })
  configWas?: Record<string, any>[];

  @SpeakeasyMetadata()
  @Expose({ name: "content_type" })
  contentType?: string;

  /**
   * The time the audit log event was recorded, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "data" })
  data?: Record<string, any>;

  @SpeakeasyMetadata()
  @Expose({ name: "deploy_key_fingerprint" })
  deployKeyFingerprint?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "emoji" })
  emoji?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "events" })
  events?: Record<string, any>[];

  @SpeakeasyMetadata()
  @Expose({ name: "events_were" })
  eventsWere?: Record<string, any>[];

  @SpeakeasyMetadata()
  @Expose({ name: "explanation" })
  explanation?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "fingerprint" })
  fingerprint?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "hook_id" })
  hookId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "limited_availability" })
  limitedAvailability?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "old_user" })
  oldUser?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "openssh_public_key" })
  opensshPublicKey?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "operation_type" })
  operationType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "org" })
  org?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "org_id" })
  orgId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "previous_visibility" })
  previousVisibility?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "read_only" })
  readOnly?: boolean;

  /**
   * The name of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repo" })
  repo?: string;

  /**
   * The name of the repository.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "repository" })
  repository?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "repository_public" })
  repositoryPublic?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "target_login" })
  targetLogin?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "team" })
  team?: string;

  /**
   * The type of protocol (for example, HTTP or SSH) used to transfer Git data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transport_protocol" })
  transportProtocol?: number;

  /**
   * A human readable name for the protocol (for example, HTTP or SSH) used to transfer Git data.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "transport_protocol_name" })
  transportProtocolName?: string;

  /**
   * The user that was affected by the action performed (if available).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "user" })
  user?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "user_id" })
  userId?: number;

  /**
   * The repository visibility, for example `public` or `private`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "visibility" })
  visibility?: string;
}
