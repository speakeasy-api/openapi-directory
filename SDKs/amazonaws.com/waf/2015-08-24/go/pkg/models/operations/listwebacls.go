// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// ListWebACLsXAmzTargetEnum
type ListWebACLsXAmzTargetEnum string

const (
	ListWebACLsXAmzTargetEnumAwswaf20150824ListWebAcLs ListWebACLsXAmzTargetEnum = "AWSWAF_20150824.ListWebACLs"
)

func (e *ListWebACLsXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "AWSWAF_20150824.ListWebACLs":
		*e = ListWebACLsXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for ListWebACLsXAmzTargetEnum: %s", s)
	}
}

type ListWebACLsRequest struct {
	ListWebACLsRequest shared.ListWebACLsRequest `request:"mediaType=application/json"`
	XAmzAlgorithm      *string                   `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256  *string                   `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential     *string                   `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate           *string                   `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken  *string                   `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature      *string                   `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders  *string                   `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget         ListWebACLsXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type ListWebACLsResponse struct {
	ContentType string
	// Success
	ListWebACLsResponse *shared.ListWebACLsResponse
	StatusCode          int
	RawResponse         *http.Response
	// WAFInternalErrorException
	WAFInternalErrorException interface{}
	// WAFInvalidAccountException
	WAFInvalidAccountException interface{}
}
