<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * JobAssignment - An object describing a job that a team member is assigned to.
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class JobAssignment
{
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $annualRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('annual_rate')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $annualRate = null;
    
    /**
     * Represents an amount of money. `Money` fields can be signed or unsigned.
     * 
     * Fields that do not explicitly define whether they are signed or unsigned are
     * considered unsigned and can only hold positive amounts. For signed fields, the
     * sign of the value indicates the purpose of the money transfer. See
     * [Working with Monetary Amounts](https://developer.squareup.com/docs/build-basics/working-with-monetary-amounts)
     * for more information.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\Money $hourlyRate
     */
	#[\JMS\Serializer\Annotation\SerializedName('hourly_rate')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Money')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Money $hourlyRate = null;
    
    /**
     * The title of the job.
     * 
     * @var string $jobTitle
     */
	#[\JMS\Serializer\Annotation\SerializedName('job_title')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $jobTitle;
    
    /**
     * The current pay type for the job assignment used to
     * 
     * calculate the pay amount in a pay period.
     * 
     * @var string $payType
     */
	#[\JMS\Serializer\Annotation\SerializedName('pay_type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $payType;
    
    /**
     * The planned hours per week for the job. Set if the job `PayType` is `SALARY`.
     * 
     * @var ?int $weeklyHours
     */
	#[\JMS\Serializer\Annotation\SerializedName('weekly_hours')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $weeklyHours = null;
    
	public function __construct()
	{
		$this->annualRate = null;
		$this->hourlyRate = null;
		$this->jobTitle = "";
		$this->payType = "";
		$this->weeklyHours = null;
	}
}
