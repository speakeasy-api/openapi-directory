/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Diagnostic } from "./diagnostic";
import { Expose, Type } from "class-transformer";

export class PollingOptions extends SpeakeasyBase {
  /**
   * An array of diagnostics to be collected by Deployment Manager, these diagnostics will be displayed to the user.
   */
  @SpeakeasyMetadata({ elemType: Diagnostic })
  @Expose({ name: "diagnostics" })
  @Type(() => Diagnostic)
  diagnostics?: Diagnostic[];

  /**
   * JsonPath expression that determines if the request failed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "failCondition" })
  failCondition?: string;

  /**
   * JsonPath expression that determines if the request is completed.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "finishCondition" })
  finishCondition?: string;

  /**
   * JsonPath expression that evaluates to string, it indicates where to poll.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pollingLink" })
  pollingLink?: string;

  /**
   * JsonPath expression, after polling is completed, indicates where to fetch the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "targetLink" })
  targetLink?: string;
}
