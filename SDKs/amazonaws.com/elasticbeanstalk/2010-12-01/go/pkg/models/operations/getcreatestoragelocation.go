// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GETCreateStorageLocationActionEnum
type GETCreateStorageLocationActionEnum string

const (
	GETCreateStorageLocationActionEnumCreateStorageLocation GETCreateStorageLocationActionEnum = "CreateStorageLocation"
)

func (e *GETCreateStorageLocationActionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CreateStorageLocation":
		*e = GETCreateStorageLocationActionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateStorageLocationActionEnum: %s", s)
	}
}

// GETCreateStorageLocationVersionEnum
type GETCreateStorageLocationVersionEnum string

const (
	GETCreateStorageLocationVersionEnumTwoThousandAndTen1201 GETCreateStorageLocationVersionEnum = "2010-12-01"
)

func (e *GETCreateStorageLocationVersionEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "2010-12-01":
		*e = GETCreateStorageLocationVersionEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETCreateStorageLocationVersionEnum: %s", s)
	}
}

type GETCreateStorageLocationQueryParams struct {
	Action  GETCreateStorageLocationActionEnum  `queryParam:"style=form,explode=true,name=Action"`
	Version GETCreateStorageLocationVersionEnum `queryParam:"style=form,explode=true,name=Version"`
}

type GETCreateStorageLocationHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type GETCreateStorageLocationRequest struct {
	QueryParams GETCreateStorageLocationQueryParams
	Headers     GETCreateStorageLocationHeaders
}

type GETCreateStorageLocationResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
