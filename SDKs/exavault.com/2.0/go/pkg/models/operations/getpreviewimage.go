// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// GetPreviewImageSizeEnum - The size of the image.
type GetPreviewImageSizeEnum string

const (
	GetPreviewImageSizeEnumSmall  GetPreviewImageSizeEnum = "small"
	GetPreviewImageSizeEnumMedium GetPreviewImageSizeEnum = "medium"
	GetPreviewImageSizeEnumLarge  GetPreviewImageSizeEnum = "large"
)

func (e *GetPreviewImageSizeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "small":
		fallthrough
	case "medium":
		fallthrough
	case "large":
		*e = GetPreviewImageSizeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetPreviewImageSizeEnum: %s", s)
	}
}

type GetPreviewImageQueryParams struct {
	// Overrides sizes. Sets to a specific height.
	Height *int `queryParam:"style=form,explode=true,name=height"`
	// Page number to extract from a multi-page document (0 is the first page). Vaild for **.pdf** or **.doc** files.
	Page *int `queryParam:"style=form,explode=true,name=page"`
	// Resource identifier for the image file.
	Resource string `queryParam:"style=form,explode=true,name=resource"`
	// The size of the image.
	Size GetPreviewImageSizeEnum `queryParam:"style=form,explode=true,name=size"`
	// Overrides sizes. Sets to a specific width.
	Width *int `queryParam:"style=form,explode=true,name=width"`
}

type GetPreviewImageHeaders struct {
	// Access Token
	EvAccessToken string `header:"style=simple,explode=false,name=ev-access-token"`
	// API Key
	EvAPIKey string `header:"style=simple,explode=false,name=ev-api-key"`
}

type GetPreviewImageRequest struct {
	QueryParams GetPreviewImageQueryParams
	Headers     GetPreviewImageHeaders
}

type GetPreviewImageResponse struct {
	ContentType string
	// Successful Operation
	PreviewFileResponse *shared.PreviewFileResponse
	StatusCode          int
	RawResponse         *http.Response
}
