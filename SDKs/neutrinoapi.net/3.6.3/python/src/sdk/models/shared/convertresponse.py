"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ConvertResponse:
    
    from_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('from-type') }})
    r"""The type of the value being converted from"""  
    from_value: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('from-value') }})
    r"""The value being converted from"""  
    result: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result') }})
    r"""The result of the conversion in string format"""  
    result_float: float = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('result-float') }})
    r"""The result of the conversion as a floating-point number"""  
    to_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('to-type') }})
    r"""The type being converted to"""  
    valid: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('valid') }})
    r"""True if the conversion was successful and produced a valid result"""  
    