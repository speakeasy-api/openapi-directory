/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class GETAuthorizeCacheSecurityGroupIngressQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Action")
    public GETAuthorizeCacheSecurityGroupIngressActionEnum action;
    public GETAuthorizeCacheSecurityGroupIngressQueryParams withAction(GETAuthorizeCacheSecurityGroupIngressActionEnum action) {
        this.action = action;
        return this;
    }
    
    /**
     * The cache security group that allows network ingress.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=CacheSecurityGroupName")
    public String cacheSecurityGroupName;
    public GETAuthorizeCacheSecurityGroupIngressQueryParams withCacheSecurityGroupName(String cacheSecurityGroupName) {
        this.cacheSecurityGroupName = cacheSecurityGroupName;
        return this;
    }
    
    /**
     * The Amazon EC2 security group to be authorized for ingress to the cache security group.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=EC2SecurityGroupName")
    public String ec2SecurityGroupName;
    public GETAuthorizeCacheSecurityGroupIngressQueryParams withEc2SecurityGroupName(String ec2SecurityGroupName) {
        this.ec2SecurityGroupName = ec2SecurityGroupName;
        return this;
    }
    
    /**
     * The Amazon account number of the Amazon EC2 security group owner. Note that this is not the same thing as an Amazon access key ID - you must provide a valid Amazon account number for this parameter.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=EC2SecurityGroupOwnerId")
    public String ec2SecurityGroupOwnerId;
    public GETAuthorizeCacheSecurityGroupIngressQueryParams withEc2SecurityGroupOwnerId(String ec2SecurityGroupOwnerId) {
        this.ec2SecurityGroupOwnerId = ec2SecurityGroupOwnerId;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=Version")
    public GETAuthorizeCacheSecurityGroupIngressVersionEnum version;
    public GETAuthorizeCacheSecurityGroupIngressQueryParams withVersion(GETAuthorizeCacheSecurityGroupIngressVersionEnum version) {
        this.version = version;
        return this;
    }
    
}
