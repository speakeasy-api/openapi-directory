// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type DiffEntryStatusEnum string

const (
	DiffEntryStatusEnumAdded     DiffEntryStatusEnum = "added"
	DiffEntryStatusEnumRemoved   DiffEntryStatusEnum = "removed"
	DiffEntryStatusEnumModified  DiffEntryStatusEnum = "modified"
	DiffEntryStatusEnumRenamed   DiffEntryStatusEnum = "renamed"
	DiffEntryStatusEnumCopied    DiffEntryStatusEnum = "copied"
	DiffEntryStatusEnumChanged   DiffEntryStatusEnum = "changed"
	DiffEntryStatusEnumUnchanged DiffEntryStatusEnum = "unchanged"
)

func (e DiffEntryStatusEnum) ToPointer() *DiffEntryStatusEnum {
	return &e
}

func (e *DiffEntryStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "added":
		fallthrough
	case "removed":
		fallthrough
	case "modified":
		fallthrough
	case "renamed":
		fallthrough
	case "copied":
		fallthrough
	case "changed":
		fallthrough
	case "unchanged":
		*e = DiffEntryStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DiffEntryStatusEnum: %v", v)
	}
}

// DiffEntry - Diff Entry
type DiffEntry struct {
	Additions        int64               `json:"additions"`
	BlobURL          string              `json:"blob_url"`
	Changes          int64               `json:"changes"`
	ContentsURL      string              `json:"contents_url"`
	Deletions        int64               `json:"deletions"`
	Filename         string              `json:"filename"`
	Patch            *string             `json:"patch,omitempty"`
	PreviousFilename *string             `json:"previous_filename,omitempty"`
	RawURL           string              `json:"raw_url"`
	Sha              string              `json:"sha"`
	Status           DiffEntryStatusEnum `json:"status"`
}
