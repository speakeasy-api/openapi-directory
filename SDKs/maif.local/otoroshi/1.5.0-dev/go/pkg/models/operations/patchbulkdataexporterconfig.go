// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

type PatchBulkDataExporterConfigSecurity struct {
	Password string `security:"scheme,type=http,subtype=basic,name=password"`
	Username string `security:"scheme,type=http,subtype=basic,name=username"`
}

// PatchBulkDataExporterConfig200ApplicationJSONStatusEnum - Status
type PatchBulkDataExporterConfig200ApplicationJSONStatusEnum string

const (
	PatchBulkDataExporterConfig200ApplicationJSONStatusEnumTwoHundred PatchBulkDataExporterConfig200ApplicationJSONStatusEnum = "200"
)

func (e *PatchBulkDataExporterConfig200ApplicationJSONStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "200":
		*e = PatchBulkDataExporterConfig200ApplicationJSONStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PatchBulkDataExporterConfig200ApplicationJSONStatusEnum: %s", s)
	}
}

// PatchBulkDataExporterConfig200ApplicationJSON - The bulk response
type PatchBulkDataExporterConfig200ApplicationJSON struct {
	// Data exporter id
	ID *bool `json:"id,omitempty"`
	// Status
	Status *PatchBulkDataExporterConfig200ApplicationJSONStatusEnum `json:"status,omitempty"`
	// Whether the action was carried out correctly or not
	Updated *bool `json:"updated,omitempty"`
}

type PatchBulkDataExporterConfigResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Successful operation
	PatchBulkDataExporterConfig200ApplicationJSONObjects []PatchBulkDataExporterConfig200ApplicationJSON
}
