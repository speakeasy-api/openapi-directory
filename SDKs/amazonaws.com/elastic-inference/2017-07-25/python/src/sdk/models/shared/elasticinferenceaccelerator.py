"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import elasticinferenceacceleratorhealth as shared_elasticinferenceacceleratorhealth
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ElasticInferenceAccelerator:
    r"""The details of an Elastic Inference Accelerator."""
    
    accelerator_health: Optional[shared_elasticinferenceacceleratorhealth.ElasticInferenceAcceleratorHealth] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acceleratorHealth'), 'exclude': lambda f: f is None }})  
    accelerator_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acceleratorId'), 'exclude': lambda f: f is None }})  
    accelerator_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('acceleratorType'), 'exclude': lambda f: f is None }})  
    attached_resource: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('attachedResource'), 'exclude': lambda f: f is None }})  
    availability_zone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('availabilityZone'), 'exclude': lambda f: f is None }})  
    