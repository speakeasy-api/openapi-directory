// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

type CancelAPendingAchTransferRequest struct {
	AchTransferID string `pathParam:"style=simple,explode=false,name=ach_transfer_id"`
}

type CancelAPendingAchTransferDefaultApplicationJSON13StatusEnum int64

const (
	CancelAPendingAchTransferDefaultApplicationJSON13StatusEnumFourHundredAndTwentyNine CancelAPendingAchTransferDefaultApplicationJSON13StatusEnum = 429
)

func (e CancelAPendingAchTransferDefaultApplicationJSON13StatusEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON13StatusEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON13StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 429:
		*e = CancelAPendingAchTransferDefaultApplicationJSON13StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON13StatusEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON13TypeEnum string

const (
	CancelAPendingAchTransferDefaultApplicationJSON13TypeEnumRateLimitedError CancelAPendingAchTransferDefaultApplicationJSON13TypeEnum = "rate_limited_error"
)

func (e CancelAPendingAchTransferDefaultApplicationJSON13TypeEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON13TypeEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON13TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "rate_limited_error":
		*e = CancelAPendingAchTransferDefaultApplicationJSON13TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON13TypeEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON13 struct {
	Detail     string                                                      `json:"detail"`
	RetryAfter *int64                                                      `json:"retry_after,omitempty"`
	Status     CancelAPendingAchTransferDefaultApplicationJSON13StatusEnum `json:"status"`
	Title      string                                                      `json:"title"`
	Type       CancelAPendingAchTransferDefaultApplicationJSON13TypeEnum   `json:"type"`
}

type CancelAPendingAchTransferDefaultApplicationJSON12StatusEnum int64

const (
	CancelAPendingAchTransferDefaultApplicationJSON12StatusEnumFourHundredAndThree CancelAPendingAchTransferDefaultApplicationJSON12StatusEnum = 403
)

func (e CancelAPendingAchTransferDefaultApplicationJSON12StatusEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON12StatusEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON12StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = CancelAPendingAchTransferDefaultApplicationJSON12StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON12StatusEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON12TypeEnum string

const (
	CancelAPendingAchTransferDefaultApplicationJSON12TypeEnumPrivateFeatureError CancelAPendingAchTransferDefaultApplicationJSON12TypeEnum = "private_feature_error"
)

func (e CancelAPendingAchTransferDefaultApplicationJSON12TypeEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON12TypeEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON12TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "private_feature_error":
		*e = CancelAPendingAchTransferDefaultApplicationJSON12TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON12TypeEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON12 struct {
	Detail string                                                      `json:"detail"`
	Status CancelAPendingAchTransferDefaultApplicationJSON12StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   CancelAPendingAchTransferDefaultApplicationJSON12TypeEnum   `json:"type"`
}

type CancelAPendingAchTransferDefaultApplicationJSON11StatusEnum int64

const (
	CancelAPendingAchTransferDefaultApplicationJSON11StatusEnumFourHundredAndFour CancelAPendingAchTransferDefaultApplicationJSON11StatusEnum = 404
)

func (e CancelAPendingAchTransferDefaultApplicationJSON11StatusEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON11StatusEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON11StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = CancelAPendingAchTransferDefaultApplicationJSON11StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON11StatusEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON11TypeEnum string

const (
	CancelAPendingAchTransferDefaultApplicationJSON11TypeEnumObjectNotFoundError CancelAPendingAchTransferDefaultApplicationJSON11TypeEnum = "object_not_found_error"
)

func (e CancelAPendingAchTransferDefaultApplicationJSON11TypeEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON11TypeEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON11TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "object_not_found_error":
		*e = CancelAPendingAchTransferDefaultApplicationJSON11TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON11TypeEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON11 struct {
	Detail string                                                      `json:"detail"`
	Status CancelAPendingAchTransferDefaultApplicationJSON11StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   CancelAPendingAchTransferDefaultApplicationJSON11TypeEnum   `json:"type"`
}

type CancelAPendingAchTransferDefaultApplicationJSON10StatusEnum int64

const (
	CancelAPendingAchTransferDefaultApplicationJSON10StatusEnumFourHundred CancelAPendingAchTransferDefaultApplicationJSON10StatusEnum = 400
)

func (e CancelAPendingAchTransferDefaultApplicationJSON10StatusEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON10StatusEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON10StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = CancelAPendingAchTransferDefaultApplicationJSON10StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON10StatusEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON10TypeEnum string

const (
	CancelAPendingAchTransferDefaultApplicationJSON10TypeEnumMalformedRequestError CancelAPendingAchTransferDefaultApplicationJSON10TypeEnum = "malformed_request_error"
)

func (e CancelAPendingAchTransferDefaultApplicationJSON10TypeEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON10TypeEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON10TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "malformed_request_error":
		*e = CancelAPendingAchTransferDefaultApplicationJSON10TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON10TypeEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON10 struct {
	Detail string                                                      `json:"detail"`
	Status CancelAPendingAchTransferDefaultApplicationJSON10StatusEnum `json:"status"`
	Title  string                                                      `json:"title"`
	Type   CancelAPendingAchTransferDefaultApplicationJSON10TypeEnum   `json:"type"`
}

type CancelAPendingAchTransferDefaultApplicationJSON9StatusEnum int64

const (
	CancelAPendingAchTransferDefaultApplicationJSON9StatusEnumFourHundred CancelAPendingAchTransferDefaultApplicationJSON9StatusEnum = 400
)

func (e CancelAPendingAchTransferDefaultApplicationJSON9StatusEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON9StatusEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON9StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 400:
		*e = CancelAPendingAchTransferDefaultApplicationJSON9StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON9StatusEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON9TypeEnum string

const (
	CancelAPendingAchTransferDefaultApplicationJSON9TypeEnumInvalidParametersError CancelAPendingAchTransferDefaultApplicationJSON9TypeEnum = "invalid_parameters_error"
)

func (e CancelAPendingAchTransferDefaultApplicationJSON9TypeEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON9TypeEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON9TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_parameters_error":
		*e = CancelAPendingAchTransferDefaultApplicationJSON9TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON9TypeEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON9 struct {
	Detail string `json:"detail"`
	// All errors related to parsing the request parameters.
	Errors []map[string]interface{}                                   `json:"errors"`
	Status CancelAPendingAchTransferDefaultApplicationJSON9StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   CancelAPendingAchTransferDefaultApplicationJSON9TypeEnum   `json:"type"`
}

type CancelAPendingAchTransferDefaultApplicationJSON8StatusEnum int64

const (
	CancelAPendingAchTransferDefaultApplicationJSON8StatusEnumFourHundredAndNine CancelAPendingAchTransferDefaultApplicationJSON8StatusEnum = 409
)

func (e CancelAPendingAchTransferDefaultApplicationJSON8StatusEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON8StatusEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON8StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = CancelAPendingAchTransferDefaultApplicationJSON8StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON8StatusEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON8TypeEnum string

const (
	CancelAPendingAchTransferDefaultApplicationJSON8TypeEnumInvalidOperationError CancelAPendingAchTransferDefaultApplicationJSON8TypeEnum = "invalid_operation_error"
)

func (e CancelAPendingAchTransferDefaultApplicationJSON8TypeEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON8TypeEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON8TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_operation_error":
		*e = CancelAPendingAchTransferDefaultApplicationJSON8TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON8TypeEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON8 struct {
	Detail string                                                     `json:"detail"`
	Status CancelAPendingAchTransferDefaultApplicationJSON8StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   CancelAPendingAchTransferDefaultApplicationJSON8TypeEnum   `json:"type"`
}

type CancelAPendingAchTransferDefaultApplicationJSON7StatusEnum int64

const (
	CancelAPendingAchTransferDefaultApplicationJSON7StatusEnumFourHundredAndOne CancelAPendingAchTransferDefaultApplicationJSON7StatusEnum = 401
)

func (e CancelAPendingAchTransferDefaultApplicationJSON7StatusEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON7StatusEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON7StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 401:
		*e = CancelAPendingAchTransferDefaultApplicationJSON7StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON7StatusEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON7TypeEnum string

const (
	CancelAPendingAchTransferDefaultApplicationJSON7TypeEnumInvalidAPIKeyError CancelAPendingAchTransferDefaultApplicationJSON7TypeEnum = "invalid_api_key_error"
)

func (e CancelAPendingAchTransferDefaultApplicationJSON7TypeEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON7TypeEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON7TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "invalid_api_key_error":
		*e = CancelAPendingAchTransferDefaultApplicationJSON7TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON7TypeEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON7 struct {
	Detail string                                                     `json:"detail"`
	Status CancelAPendingAchTransferDefaultApplicationJSON7StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   CancelAPendingAchTransferDefaultApplicationJSON7TypeEnum   `json:"type"`
}

type CancelAPendingAchTransferDefaultApplicationJSON6StatusEnum int64

const (
	CancelAPendingAchTransferDefaultApplicationJSON6StatusEnumFiveHundred CancelAPendingAchTransferDefaultApplicationJSON6StatusEnum = 500
)

func (e CancelAPendingAchTransferDefaultApplicationJSON6StatusEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON6StatusEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON6StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 500:
		*e = CancelAPendingAchTransferDefaultApplicationJSON6StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON6StatusEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON6TypeEnum string

const (
	CancelAPendingAchTransferDefaultApplicationJSON6TypeEnumInternalServerError CancelAPendingAchTransferDefaultApplicationJSON6TypeEnum = "internal_server_error"
)

func (e CancelAPendingAchTransferDefaultApplicationJSON6TypeEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON6TypeEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON6TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "internal_server_error":
		*e = CancelAPendingAchTransferDefaultApplicationJSON6TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON6TypeEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON6 struct {
	Detail string                                                     `json:"detail"`
	Status CancelAPendingAchTransferDefaultApplicationJSON6StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   CancelAPendingAchTransferDefaultApplicationJSON6TypeEnum   `json:"type"`
}

type CancelAPendingAchTransferDefaultApplicationJSON5StatusEnum int64

const (
	CancelAPendingAchTransferDefaultApplicationJSON5StatusEnumFourHundredAndThree CancelAPendingAchTransferDefaultApplicationJSON5StatusEnum = 403
)

func (e CancelAPendingAchTransferDefaultApplicationJSON5StatusEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON5StatusEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON5StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = CancelAPendingAchTransferDefaultApplicationJSON5StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON5StatusEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON5TypeEnum string

const (
	CancelAPendingAchTransferDefaultApplicationJSON5TypeEnumInsufficientPermissionsError CancelAPendingAchTransferDefaultApplicationJSON5TypeEnum = "insufficient_permissions_error"
)

func (e CancelAPendingAchTransferDefaultApplicationJSON5TypeEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON5TypeEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON5TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "insufficient_permissions_error":
		*e = CancelAPendingAchTransferDefaultApplicationJSON5TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON5TypeEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON5 struct {
	Detail string                                                     `json:"detail"`
	Status CancelAPendingAchTransferDefaultApplicationJSON5StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   CancelAPendingAchTransferDefaultApplicationJSON5TypeEnum   `json:"type"`
}

type CancelAPendingAchTransferDefaultApplicationJSON4StatusEnum int64

const (
	CancelAPendingAchTransferDefaultApplicationJSON4StatusEnumFourHundredAndTwentyTwo CancelAPendingAchTransferDefaultApplicationJSON4StatusEnum = 422
)

func (e CancelAPendingAchTransferDefaultApplicationJSON4StatusEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON4StatusEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON4StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 422:
		*e = CancelAPendingAchTransferDefaultApplicationJSON4StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON4StatusEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON4TypeEnum string

const (
	CancelAPendingAchTransferDefaultApplicationJSON4TypeEnumIdempotencyUnprocessableError CancelAPendingAchTransferDefaultApplicationJSON4TypeEnum = "idempotency_unprocessable_error"
)

func (e CancelAPendingAchTransferDefaultApplicationJSON4TypeEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON4TypeEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON4TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_unprocessable_error":
		*e = CancelAPendingAchTransferDefaultApplicationJSON4TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON4TypeEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON4 struct {
	Detail string                                                     `json:"detail"`
	Status CancelAPendingAchTransferDefaultApplicationJSON4StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   CancelAPendingAchTransferDefaultApplicationJSON4TypeEnum   `json:"type"`
}

type CancelAPendingAchTransferDefaultApplicationJSON3StatusEnum int64

const (
	CancelAPendingAchTransferDefaultApplicationJSON3StatusEnumFourHundredAndNine CancelAPendingAchTransferDefaultApplicationJSON3StatusEnum = 409
)

func (e CancelAPendingAchTransferDefaultApplicationJSON3StatusEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON3StatusEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON3StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 409:
		*e = CancelAPendingAchTransferDefaultApplicationJSON3StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON3StatusEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON3TypeEnum string

const (
	CancelAPendingAchTransferDefaultApplicationJSON3TypeEnumIdempotencyConflictError CancelAPendingAchTransferDefaultApplicationJSON3TypeEnum = "idempotency_conflict_error"
)

func (e CancelAPendingAchTransferDefaultApplicationJSON3TypeEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON3TypeEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON3TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "idempotency_conflict_error":
		*e = CancelAPendingAchTransferDefaultApplicationJSON3TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON3TypeEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON3 struct {
	Detail string                                                     `json:"detail"`
	Status CancelAPendingAchTransferDefaultApplicationJSON3StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   CancelAPendingAchTransferDefaultApplicationJSON3TypeEnum   `json:"type"`
}

type CancelAPendingAchTransferDefaultApplicationJSON2StatusEnum int64

const (
	CancelAPendingAchTransferDefaultApplicationJSON2StatusEnumFourHundredAndThree CancelAPendingAchTransferDefaultApplicationJSON2StatusEnum = 403
)

func (e CancelAPendingAchTransferDefaultApplicationJSON2StatusEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON2StatusEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON2StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 403:
		*e = CancelAPendingAchTransferDefaultApplicationJSON2StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON2StatusEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON2TypeEnum string

const (
	CancelAPendingAchTransferDefaultApplicationJSON2TypeEnumEnvironmentMismatchError CancelAPendingAchTransferDefaultApplicationJSON2TypeEnum = "environment_mismatch_error"
)

func (e CancelAPendingAchTransferDefaultApplicationJSON2TypeEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON2TypeEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON2TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environment_mismatch_error":
		*e = CancelAPendingAchTransferDefaultApplicationJSON2TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON2TypeEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON2 struct {
	Detail string                                                     `json:"detail"`
	Status CancelAPendingAchTransferDefaultApplicationJSON2StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   CancelAPendingAchTransferDefaultApplicationJSON2TypeEnum   `json:"type"`
}

type CancelAPendingAchTransferDefaultApplicationJSON1StatusEnum int64

const (
	CancelAPendingAchTransferDefaultApplicationJSON1StatusEnumFourHundredAndFour CancelAPendingAchTransferDefaultApplicationJSON1StatusEnum = 404
)

func (e CancelAPendingAchTransferDefaultApplicationJSON1StatusEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON1StatusEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON1StatusEnum) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 404:
		*e = CancelAPendingAchTransferDefaultApplicationJSON1StatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON1StatusEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON1TypeEnum string

const (
	CancelAPendingAchTransferDefaultApplicationJSON1TypeEnumAPIMethodNotFoundError CancelAPendingAchTransferDefaultApplicationJSON1TypeEnum = "api_method_not_found_error"
)

func (e CancelAPendingAchTransferDefaultApplicationJSON1TypeEnum) ToPointer() *CancelAPendingAchTransferDefaultApplicationJSON1TypeEnum {
	return &e
}

func (e *CancelAPendingAchTransferDefaultApplicationJSON1TypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "api_method_not_found_error":
		*e = CancelAPendingAchTransferDefaultApplicationJSON1TypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CancelAPendingAchTransferDefaultApplicationJSON1TypeEnum: %v", v)
	}
}

type CancelAPendingAchTransferDefaultApplicationJSON1 struct {
	Detail string                                                     `json:"detail"`
	Status CancelAPendingAchTransferDefaultApplicationJSON1StatusEnum `json:"status"`
	Title  string                                                     `json:"title"`
	Type   CancelAPendingAchTransferDefaultApplicationJSON1TypeEnum   `json:"type"`
}

type CancelAPendingAchTransferResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// ACH Transfer
	AchTransfer *shared.AchTransfer
	// Error
	Error interface{}
}
