// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// StartSegmentDetectionXAmzTargetEnum
type StartSegmentDetectionXAmzTargetEnum string

const (
	StartSegmentDetectionXAmzTargetEnumRekognitionServiceStartSegmentDetection StartSegmentDetectionXAmzTargetEnum = "RekognitionService.StartSegmentDetection"
)

func (e *StartSegmentDetectionXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "RekognitionService.StartSegmentDetection":
		*e = StartSegmentDetectionXAmzTargetEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for StartSegmentDetectionXAmzTargetEnum: %s", s)
	}
}

type StartSegmentDetectionHeaders struct {
	XAmzAlgorithm     *string                             `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                             `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                             `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                             `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                             `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                             `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                             `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget        StartSegmentDetectionXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type StartSegmentDetectionRequest struct {
	Headers StartSegmentDetectionHeaders
	Request shared.StartSegmentDetectionRequest `request:"mediaType=application/json"`
}

type StartSegmentDetectionResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// IdempotentParameterMismatchException
	IdempotentParameterMismatchException interface{}
	// InternalServerError
	InternalServerError interface{}
	// InvalidParameterException
	InvalidParameterException interface{}
	// InvalidS3ObjectException
	InvalidS3ObjectException interface{}
	// LimitExceededException
	LimitExceededException interface{}
	// ProvisionedThroughputExceededException
	ProvisionedThroughputExceededException interface{}
	// Success
	StartSegmentDetectionResponse *shared.StartSegmentDetectionResponse
	StatusCode                    int
	RawResponse                   *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// VideoTooLargeException
	VideoTooLargeException interface{}
}
