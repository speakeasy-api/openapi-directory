"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import modellatencythreshold as shared_modellatencythreshold
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class RecommendationJobStoppingConditions:
    r"""Specifies conditions for stopping a job. When a job reaches a stopping condition limit, SageMaker ends the job."""
    
    max_invocations: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('MaxInvocations'), 'exclude': lambda f: f is None }})  
    model_latency_thresholds: Optional[list[shared_modellatencythreshold.ModelLatencyThreshold]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ModelLatencyThresholds'), 'exclude': lambda f: f is None }})  
    