// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LaunchProfileValidationTypeEnum string

const (
	LaunchProfileValidationTypeEnumValidateActiveDirectoryStudioComponent LaunchProfileValidationTypeEnum = "VALIDATE_ACTIVE_DIRECTORY_STUDIO_COMPONENT"
	LaunchProfileValidationTypeEnumValidateSubnetAssociation              LaunchProfileValidationTypeEnum = "VALIDATE_SUBNET_ASSOCIATION"
	LaunchProfileValidationTypeEnumValidateNetworkACLAssociation          LaunchProfileValidationTypeEnum = "VALIDATE_NETWORK_ACL_ASSOCIATION"
	LaunchProfileValidationTypeEnumValidateSecurityGroupAssociation       LaunchProfileValidationTypeEnum = "VALIDATE_SECURITY_GROUP_ASSOCIATION"
)

func (e LaunchProfileValidationTypeEnum) ToPointer() *LaunchProfileValidationTypeEnum {
	return &e
}

func (e *LaunchProfileValidationTypeEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "VALIDATE_ACTIVE_DIRECTORY_STUDIO_COMPONENT":
		fallthrough
	case "VALIDATE_SUBNET_ASSOCIATION":
		fallthrough
	case "VALIDATE_NETWORK_ACL_ASSOCIATION":
		fallthrough
	case "VALIDATE_SECURITY_GROUP_ASSOCIATION":
		*e = LaunchProfileValidationTypeEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for LaunchProfileValidationTypeEnum: %v", v)
	}
}
