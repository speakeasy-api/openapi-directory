/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class CartSimulation200ApplicationJSONPaymentDataPaymentSystems {
    /**
     * Availability of payment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("availablePayments")
    public String availablePayments;
    public CartSimulation200ApplicationJSONPaymentDataPaymentSystems withAvailablePayments(String availablePayments) {
        this.availablePayments = availablePayments;
        return this;
    }
    
    /**
     * Description.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public CartSimulation200ApplicationJSONPaymentDataPaymentSystems withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Indicates whether a document is shown.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("displayDocument")
    public Boolean displayDocument;
    public CartSimulation200ApplicationJSONPaymentDataPaymentSystems withDisplayDocument(Boolean displayDocument) {
        this.displayDocument = displayDocument;
        return this;
    }
    
    /**
     * Payment due date.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("dueDate")
    public String dueDate;
    public CartSimulation200ApplicationJSONPaymentDataPaymentSystems withDueDate(String dueDate) {
        this.dueDate = dueDate;
        return this;
    }
    
    /**
     * Payment group name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("groupName")
    public String groupName;
    public CartSimulation200ApplicationJSONPaymentDataPaymentSystems withGroupName(String groupName) {
        this.groupName = groupName;
        return this;
    }
    
    /**
     * Payment system ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public Long id;
    public CartSimulation200ApplicationJSONPaymentDataPaymentSystems withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Indicates whether it is custom.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("isCustom")
    public Boolean isCustom;
    public CartSimulation200ApplicationJSONPaymentDataPaymentSystems withIsCustom(Boolean isCustom) {
        this.isCustom = isCustom;
        return this;
    }
    
    /**
     * Payment system name.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public CartSimulation200ApplicationJSONPaymentDataPaymentSystems withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Indicates whether a authentication is required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requiresAuthentication")
    public Boolean requiresAuthentication;
    public CartSimulation200ApplicationJSONPaymentDataPaymentSystems withRequiresAuthentication(Boolean requiresAuthentication) {
        this.requiresAuthentication = requiresAuthentication;
        return this;
    }
    
    /**
     * Indicates whether a document is required.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("requiresDocument")
    public Boolean requiresDocument;
    public CartSimulation200ApplicationJSONPaymentDataPaymentSystems withRequiresDocument(Boolean requiresDocument) {
        this.requiresDocument = requiresDocument;
        return this;
    }
    
    /**
     * String ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stringId")
    public String stringId;
    public CartSimulation200ApplicationJSONPaymentDataPaymentSystems withStringId(String stringId) {
        this.stringId = stringId;
        return this;
    }
    
    /**
     * Template.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("template")
    public String template;
    public CartSimulation200ApplicationJSONPaymentDataPaymentSystems withTemplate(String template) {
        this.template = template;
        return this;
    }
    
    /**
     * Payment system validator.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("validator")
    public java.util.Map<String, Object> validator;
    public CartSimulation200ApplicationJSONPaymentDataPaymentSystems withValidator(java.util.Map<String, Object> validator) {
        this.validator = validator;
        return this;
    }
    
}
