// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// CreateUserSettingsRequestBodyCopyAllowedEnum - Specifies whether the user can copy text from the streaming session to the local device.
type CreateUserSettingsRequestBodyCopyAllowedEnum string

const (
	CreateUserSettingsRequestBodyCopyAllowedEnumDisabled CreateUserSettingsRequestBodyCopyAllowedEnum = "Disabled"
	CreateUserSettingsRequestBodyCopyAllowedEnumEnabled  CreateUserSettingsRequestBodyCopyAllowedEnum = "Enabled"
)

func (e CreateUserSettingsRequestBodyCopyAllowedEnum) ToPointer() *CreateUserSettingsRequestBodyCopyAllowedEnum {
	return &e
}

func (e *CreateUserSettingsRequestBodyCopyAllowedEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Disabled":
		fallthrough
	case "Enabled":
		*e = CreateUserSettingsRequestBodyCopyAllowedEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateUserSettingsRequestBodyCopyAllowedEnum: %v", v)
	}
}

// CreateUserSettingsRequestBodyDownloadAllowedEnum - Specifies whether the user can download files from the streaming session to the local device.
type CreateUserSettingsRequestBodyDownloadAllowedEnum string

const (
	CreateUserSettingsRequestBodyDownloadAllowedEnumDisabled CreateUserSettingsRequestBodyDownloadAllowedEnum = "Disabled"
	CreateUserSettingsRequestBodyDownloadAllowedEnumEnabled  CreateUserSettingsRequestBodyDownloadAllowedEnum = "Enabled"
)

func (e CreateUserSettingsRequestBodyDownloadAllowedEnum) ToPointer() *CreateUserSettingsRequestBodyDownloadAllowedEnum {
	return &e
}

func (e *CreateUserSettingsRequestBodyDownloadAllowedEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Disabled":
		fallthrough
	case "Enabled":
		*e = CreateUserSettingsRequestBodyDownloadAllowedEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateUserSettingsRequestBodyDownloadAllowedEnum: %v", v)
	}
}

// CreateUserSettingsRequestBodyPasteAllowedEnum - Specifies whether the user can paste text from the local device to the streaming session.
type CreateUserSettingsRequestBodyPasteAllowedEnum string

const (
	CreateUserSettingsRequestBodyPasteAllowedEnumDisabled CreateUserSettingsRequestBodyPasteAllowedEnum = "Disabled"
	CreateUserSettingsRequestBodyPasteAllowedEnumEnabled  CreateUserSettingsRequestBodyPasteAllowedEnum = "Enabled"
)

func (e CreateUserSettingsRequestBodyPasteAllowedEnum) ToPointer() *CreateUserSettingsRequestBodyPasteAllowedEnum {
	return &e
}

func (e *CreateUserSettingsRequestBodyPasteAllowedEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Disabled":
		fallthrough
	case "Enabled":
		*e = CreateUserSettingsRequestBodyPasteAllowedEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateUserSettingsRequestBodyPasteAllowedEnum: %v", v)
	}
}

// CreateUserSettingsRequestBodyPrintAllowedEnum - Specifies whether the user can print to the local device.
type CreateUserSettingsRequestBodyPrintAllowedEnum string

const (
	CreateUserSettingsRequestBodyPrintAllowedEnumDisabled CreateUserSettingsRequestBodyPrintAllowedEnum = "Disabled"
	CreateUserSettingsRequestBodyPrintAllowedEnumEnabled  CreateUserSettingsRequestBodyPrintAllowedEnum = "Enabled"
)

func (e CreateUserSettingsRequestBodyPrintAllowedEnum) ToPointer() *CreateUserSettingsRequestBodyPrintAllowedEnum {
	return &e
}

func (e *CreateUserSettingsRequestBodyPrintAllowedEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Disabled":
		fallthrough
	case "Enabled":
		*e = CreateUserSettingsRequestBodyPrintAllowedEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateUserSettingsRequestBodyPrintAllowedEnum: %v", v)
	}
}

// CreateUserSettingsRequestBodyUploadAllowedEnum - Specifies whether the user can upload files from the local device to the streaming session.
type CreateUserSettingsRequestBodyUploadAllowedEnum string

const (
	CreateUserSettingsRequestBodyUploadAllowedEnumDisabled CreateUserSettingsRequestBodyUploadAllowedEnum = "Disabled"
	CreateUserSettingsRequestBodyUploadAllowedEnumEnabled  CreateUserSettingsRequestBodyUploadAllowedEnum = "Enabled"
)

func (e CreateUserSettingsRequestBodyUploadAllowedEnum) ToPointer() *CreateUserSettingsRequestBodyUploadAllowedEnum {
	return &e
}

func (e *CreateUserSettingsRequestBodyUploadAllowedEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Disabled":
		fallthrough
	case "Enabled":
		*e = CreateUserSettingsRequestBodyUploadAllowedEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateUserSettingsRequestBodyUploadAllowedEnum: %v", v)
	}
}

type CreateUserSettingsRequestBody struct {
	// <p>A unique, case-sensitive identifier that you provide to ensure the idempotency of the request. Idempotency ensures that an API request completes only once. With an idempotent request, if the original request completes successfully, subsequent retries with the same client token returns the result from the original successful request. </p> <p>If you do not specify a client token, one is automatically generated by the AWS SDK.</p>
	ClientToken *string `json:"clientToken,omitempty"`
	// Specifies whether the user can copy text from the streaming session to the local device.
	CopyAllowed CreateUserSettingsRequestBodyCopyAllowedEnum `json:"copyAllowed"`
	// The amount of time that a streaming session remains active after users disconnect.
	DisconnectTimeoutInMinutes *int64 `json:"disconnectTimeoutInMinutes,omitempty"`
	// Specifies whether the user can download files from the streaming session to the local device.
	DownloadAllowed CreateUserSettingsRequestBodyDownloadAllowedEnum `json:"downloadAllowed"`
	// The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the disconnect timeout interval begins.
	IdleDisconnectTimeoutInMinutes *int64 `json:"idleDisconnectTimeoutInMinutes,omitempty"`
	// Specifies whether the user can paste text from the local device to the streaming session.
	PasteAllowed CreateUserSettingsRequestBodyPasteAllowedEnum `json:"pasteAllowed"`
	// Specifies whether the user can print to the local device.
	PrintAllowed CreateUserSettingsRequestBodyPrintAllowedEnum `json:"printAllowed"`
	// The tags to add to the user settings resource. A tag is a key-value pair.
	Tags []shared.Tag `json:"tags,omitempty"`
	// Specifies whether the user can upload files from the local device to the streaming session.
	UploadAllowed CreateUserSettingsRequestBodyUploadAllowedEnum `json:"uploadAllowed"`
}

type CreateUserSettingsRequest struct {
	RequestBody       CreateUserSettingsRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                       `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                       `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                       `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                       `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                       `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                       `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                       `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type CreateUserSettingsResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// Success
	CreateUserSettingsResponse *shared.CreateUserSettingsResponse
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
