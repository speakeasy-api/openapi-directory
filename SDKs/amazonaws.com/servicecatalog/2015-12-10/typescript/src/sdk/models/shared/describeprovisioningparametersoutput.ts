/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ConstraintSummary } from "./constraintsummary";
import { ProvisioningArtifactOutput } from "./provisioningartifactoutput";
import { ProvisioningArtifactParameter } from "./provisioningartifactparameter";
import { ProvisioningArtifactPreferences } from "./provisioningartifactpreferences";
import { TagOptionSummary } from "./tagoptionsummary";
import { UsageInstruction } from "./usageinstruction";
import { Expose, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeProvisioningParametersOutput extends SpeakeasyBase {
  @SpeakeasyMetadata({ elemType: ConstraintSummary })
  @Expose({ name: "ConstraintSummaries" })
  @Type(() => ConstraintSummary)
  constraintSummaries?: ConstraintSummary[];

  @SpeakeasyMetadata({ elemType: ProvisioningArtifactOutput })
  @Expose({ name: "ProvisioningArtifactOutputKeys" })
  @Type(() => ProvisioningArtifactOutput)
  provisioningArtifactOutputKeys?: ProvisioningArtifactOutput[];

  @SpeakeasyMetadata({ elemType: ProvisioningArtifactOutput })
  @Expose({ name: "ProvisioningArtifactOutputs" })
  @Type(() => ProvisioningArtifactOutput)
  provisioningArtifactOutputs?: ProvisioningArtifactOutput[];

  @SpeakeasyMetadata({ elemType: ProvisioningArtifactParameter })
  @Expose({ name: "ProvisioningArtifactParameters" })
  @Type(() => ProvisioningArtifactParameter)
  provisioningArtifactParameters?: ProvisioningArtifactParameter[];

  @SpeakeasyMetadata()
  @Expose({ name: "ProvisioningArtifactPreferences" })
  @Type(() => ProvisioningArtifactPreferences)
  provisioningArtifactPreferences?: ProvisioningArtifactPreferences;

  @SpeakeasyMetadata({ elemType: TagOptionSummary })
  @Expose({ name: "TagOptions" })
  @Type(() => TagOptionSummary)
  tagOptions?: TagOptionSummary[];

  @SpeakeasyMetadata({ elemType: UsageInstruction })
  @Expose({ name: "UsageInstructions" })
  @Type(() => UsageInstruction)
  usageInstructions?: UsageInstruction[];
}
