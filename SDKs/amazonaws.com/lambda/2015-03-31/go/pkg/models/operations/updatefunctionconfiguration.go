// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// UpdateFunctionConfigurationRequestBodyDeadLetterConfig - The <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq">dead-letter queue</a> for failed asynchronous invocations.
type UpdateFunctionConfigurationRequestBodyDeadLetterConfig struct {
	TargetArn *string `json:"TargetArn,omitempty"`
}

// UpdateFunctionConfigurationRequestBodyEnvironment - A function's environment variable settings. You can use environment variables to adjust your function's behavior without updating code. An environment variable is a pair of strings that are stored in a function's version-specific configuration.
type UpdateFunctionConfigurationRequestBodyEnvironment struct {
	Variables map[string]string `json:"Variables,omitempty"`
}

// UpdateFunctionConfigurationRequestBodyEphemeralStorage - The size of the function's <code>/tmp</code> directory in MB. The default value is 512, but it can be any whole number between 512 and 10,240 MB.
type UpdateFunctionConfigurationRequestBodyEphemeralStorage struct {
	Size *int64 `json:"Size,omitempty"`
}

// UpdateFunctionConfigurationRequestBodyImageConfig - Configuration values that override the container image Dockerfile settings. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms">Container image settings</a>.
type UpdateFunctionConfigurationRequestBodyImageConfig struct {
	Command          []string `json:"Command,omitempty"`
	EntryPoint       []string `json:"EntryPoint,omitempty"`
	WorkingDirectory *string  `json:"WorkingDirectory,omitempty"`
}

// UpdateFunctionConfigurationRequestBodyRuntimeEnum - <p>The identifier of the function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime</a>. Runtime is required if the deployment package is a .zip file archive.</p> <p>The following list includes deprecated runtimes. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy">Runtime deprecation policy</a>.</p>
type UpdateFunctionConfigurationRequestBodyRuntimeEnum string

const (
	UpdateFunctionConfigurationRequestBodyRuntimeEnumNodejs       UpdateFunctionConfigurationRequestBodyRuntimeEnum = "nodejs"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumNodejs43     UpdateFunctionConfigurationRequestBodyRuntimeEnum = "nodejs4.3"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumNodejs610    UpdateFunctionConfigurationRequestBodyRuntimeEnum = "nodejs6.10"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumNodejs810    UpdateFunctionConfigurationRequestBodyRuntimeEnum = "nodejs8.10"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumNodejs10X    UpdateFunctionConfigurationRequestBodyRuntimeEnum = "nodejs10.x"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumNodejs12X    UpdateFunctionConfigurationRequestBodyRuntimeEnum = "nodejs12.x"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumNodejs14X    UpdateFunctionConfigurationRequestBodyRuntimeEnum = "nodejs14.x"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumNodejs16X    UpdateFunctionConfigurationRequestBodyRuntimeEnum = "nodejs16.x"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumJava8        UpdateFunctionConfigurationRequestBodyRuntimeEnum = "java8"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumJava8Al2     UpdateFunctionConfigurationRequestBodyRuntimeEnum = "java8.al2"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumJava11       UpdateFunctionConfigurationRequestBodyRuntimeEnum = "java11"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumPython27     UpdateFunctionConfigurationRequestBodyRuntimeEnum = "python2.7"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumPython36     UpdateFunctionConfigurationRequestBodyRuntimeEnum = "python3.6"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumPython37     UpdateFunctionConfigurationRequestBodyRuntimeEnum = "python3.7"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumPython38     UpdateFunctionConfigurationRequestBodyRuntimeEnum = "python3.8"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumPython39     UpdateFunctionConfigurationRequestBodyRuntimeEnum = "python3.9"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumDotnetcore10 UpdateFunctionConfigurationRequestBodyRuntimeEnum = "dotnetcore1.0"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumDotnetcore20 UpdateFunctionConfigurationRequestBodyRuntimeEnum = "dotnetcore2.0"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumDotnetcore21 UpdateFunctionConfigurationRequestBodyRuntimeEnum = "dotnetcore2.1"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumDotnetcore31 UpdateFunctionConfigurationRequestBodyRuntimeEnum = "dotnetcore3.1"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumDotnet6      UpdateFunctionConfigurationRequestBodyRuntimeEnum = "dotnet6"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumNodejs43Edge UpdateFunctionConfigurationRequestBodyRuntimeEnum = "nodejs4.3-edge"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumGo1X         UpdateFunctionConfigurationRequestBodyRuntimeEnum = "go1.x"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumRuby25       UpdateFunctionConfigurationRequestBodyRuntimeEnum = "ruby2.5"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumRuby27       UpdateFunctionConfigurationRequestBodyRuntimeEnum = "ruby2.7"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumProvided     UpdateFunctionConfigurationRequestBodyRuntimeEnum = "provided"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumProvidedAl2  UpdateFunctionConfigurationRequestBodyRuntimeEnum = "provided.al2"
	UpdateFunctionConfigurationRequestBodyRuntimeEnumNodejs18X    UpdateFunctionConfigurationRequestBodyRuntimeEnum = "nodejs18.x"
)

func (e *UpdateFunctionConfigurationRequestBodyRuntimeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "nodejs":
		fallthrough
	case "nodejs4.3":
		fallthrough
	case "nodejs6.10":
		fallthrough
	case "nodejs8.10":
		fallthrough
	case "nodejs10.x":
		fallthrough
	case "nodejs12.x":
		fallthrough
	case "nodejs14.x":
		fallthrough
	case "nodejs16.x":
		fallthrough
	case "java8":
		fallthrough
	case "java8.al2":
		fallthrough
	case "java11":
		fallthrough
	case "python2.7":
		fallthrough
	case "python3.6":
		fallthrough
	case "python3.7":
		fallthrough
	case "python3.8":
		fallthrough
	case "python3.9":
		fallthrough
	case "dotnetcore1.0":
		fallthrough
	case "dotnetcore2.0":
		fallthrough
	case "dotnetcore2.1":
		fallthrough
	case "dotnetcore3.1":
		fallthrough
	case "dotnet6":
		fallthrough
	case "nodejs4.3-edge":
		fallthrough
	case "go1.x":
		fallthrough
	case "ruby2.5":
		fallthrough
	case "ruby2.7":
		fallthrough
	case "provided":
		fallthrough
	case "provided.al2":
		fallthrough
	case "nodejs18.x":
		*e = UpdateFunctionConfigurationRequestBodyRuntimeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateFunctionConfigurationRequestBodyRuntimeEnum: %s", s)
	}
}

// UpdateFunctionConfigurationRequestBodySnapStart - <p>The function's Lambda SnapStart setting. Set <code>ApplyOn</code> to <code>PublishedVersions</code> to create a snapshot of the initialized execution environment when you publish a function version.</p> <p>SnapStart is supported with the <code>java11</code> runtime. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html">Improving startup performance with Lambda SnapStart</a>.</p>
type UpdateFunctionConfigurationRequestBodySnapStart struct {
	ApplyOn *shared.SnapStartApplyOnEnum `json:"ApplyOn,omitempty"`
}

// UpdateFunctionConfigurationRequestBodyTracingConfig - The function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html">X-Ray</a> tracing configuration. To sample and record incoming requests, set <code>Mode</code> to <code>Active</code>.
type UpdateFunctionConfigurationRequestBodyTracingConfig struct {
	Mode *shared.TracingModeEnum `json:"Mode,omitempty"`
}

// UpdateFunctionConfigurationRequestBodyVpcConfig - The VPC security groups and subnets that are attached to a Lambda function. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html">Configuring a Lambda function to access resources in a VPC</a>.
type UpdateFunctionConfigurationRequestBodyVpcConfig struct {
	SecurityGroupIds []string `json:"SecurityGroupIds,omitempty"`
	SubnetIds        []string `json:"SubnetIds,omitempty"`
}

type UpdateFunctionConfigurationRequestBody struct {
	// The <a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq">dead-letter queue</a> for failed asynchronous invocations.
	DeadLetterConfig *UpdateFunctionConfigurationRequestBodyDeadLetterConfig `json:"DeadLetterConfig,omitempty"`
	// A description of the function.
	Description *string `json:"Description,omitempty"`
	// A function's environment variable settings. You can use environment variables to adjust your function's behavior without updating code. An environment variable is a pair of strings that are stored in a function's version-specific configuration.
	Environment *UpdateFunctionConfigurationRequestBodyEnvironment `json:"Environment,omitempty"`
	// The size of the function's <code>/tmp</code> directory in MB. The default value is 512, but it can be any whole number between 512 and 10,240 MB.
	EphemeralStorage *UpdateFunctionConfigurationRequestBodyEphemeralStorage `json:"EphemeralStorage,omitempty"`
	// Connection settings for an Amazon EFS file system.
	FileSystemConfigs []shared.FileSystemConfig `json:"FileSystemConfigs,omitempty"`
	// The name of the method within your code that Lambda calls to run your function. Handler is required if the deployment package is a .zip file archive. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/foundation-progmodel.html">Lambda programming model</a>.
	Handler *string `json:"Handler,omitempty"`
	// Configuration values that override the container image Dockerfile settings. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/images-create.html#images-parms">Container image settings</a>.
	ImageConfig *UpdateFunctionConfigurationRequestBodyImageConfig `json:"ImageConfig,omitempty"`
	// The ARN of the Key Management Service (KMS) customer managed key that's used to encrypt your function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-encryption">environment variables</a>. When <a href="https://docs.aws.amazon.com/lambda/latest/dg/snapstart-security.html">Lambda SnapStart</a> is activated, this key is also used to encrypt your function's snapshot. If you don't provide a customer managed key, Lambda uses a default service key.
	KMSKeyArn *string `json:"KMSKeyArn,omitempty"`
	// A list of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">function layers</a> to add to the function's execution environment. Specify each layer by its ARN, including the version.
	Layers []string `json:"Layers,omitempty"`
	// The amount of <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-function-common.html#configuration-memory-console">memory available to the function</a> at runtime. Increasing the function memory also increases its CPU allocation. The default value is 128 MB. The value can be any multiple of 1 MB.
	MemorySize *int64 `json:"MemorySize,omitempty"`
	// Update the function only if the revision ID matches the ID that's specified. Use this option to avoid modifying a function that has changed since you last read it.
	RevisionID *string `json:"RevisionId,omitempty"`
	// The Amazon Resource Name (ARN) of the function's execution role.
	Role *string `json:"Role,omitempty"`
	// <p>The identifier of the function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">runtime</a>. Runtime is required if the deployment package is a .zip file archive.</p> <p>The following list includes deprecated runtimes. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html#runtime-support-policy">Runtime deprecation policy</a>.</p>
	Runtime *UpdateFunctionConfigurationRequestBodyRuntimeEnum `json:"Runtime,omitempty"`
	// <p>The function's Lambda SnapStart setting. Set <code>ApplyOn</code> to <code>PublishedVersions</code> to create a snapshot of the initialized execution environment when you publish a function version.</p> <p>SnapStart is supported with the <code>java11</code> runtime. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/snapstart.html">Improving startup performance with Lambda SnapStart</a>.</p>
	SnapStart *UpdateFunctionConfigurationRequestBodySnapStart `json:"SnapStart,omitempty"`
	// The amount of time (in seconds) that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-context.html">Lambda execution environment</a>.
	Timeout *int64 `json:"Timeout,omitempty"`
	// The function's <a href="https://docs.aws.amazon.com/lambda/latest/dg/services-xray.html">X-Ray</a> tracing configuration. To sample and record incoming requests, set <code>Mode</code> to <code>Active</code>.
	TracingConfig *UpdateFunctionConfigurationRequestBodyTracingConfig `json:"TracingConfig,omitempty"`
	// The VPC security groups and subnets that are attached to a Lambda function. For more information, see <a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-vpc.html">Configuring a Lambda function to access resources in a VPC</a>.
	VpcConfig *UpdateFunctionConfigurationRequestBodyVpcConfig `json:"VpcConfig,omitempty"`
}

type UpdateFunctionConfigurationRequest struct {
	// <p>The name of the Lambda function.</p> <p class="title"> <b>Name formats</b> </p> <ul> <li> <p> <b>Function name</b> – <code>my-function</code>.</p> </li> <li> <p> <b>Function ARN</b> – <code>arn:aws:lambda:us-west-2:123456789012:function:my-function</code>.</p> </li> <li> <p> <b>Partial ARN</b> – <code>123456789012:function:my-function</code>.</p> </li> </ul> <p>The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.</p>
	FunctionName      string                                 `pathParam:"style=simple,explode=false,name=FunctionName"`
	RequestBody       UpdateFunctionConfigurationRequestBody `request:"mediaType=application/json"`
	XAmzAlgorithm     *string                                `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string                                `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string                                `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string                                `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string                                `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string                                `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string                                `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type UpdateFunctionConfigurationResponse struct {
	// CodeSigningConfigNotFoundException
	CodeSigningConfigNotFoundException interface{}
	// CodeVerificationFailedException
	CodeVerificationFailedException interface{}
	ContentType                     string
	// Success
	FunctionConfiguration *shared.FunctionConfiguration
	// InvalidCodeSignatureException
	InvalidCodeSignatureException interface{}
	// InvalidParameterValueException
	InvalidParameterValueException interface{}
	// PreconditionFailedException
	PreconditionFailedException interface{}
	// ResourceConflictException
	ResourceConflictException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceException
	ServiceException interface{}
	StatusCode       int
	RawResponse      *http.Response
	// TooManyRequestsException
	TooManyRequestsException interface{}
}
