/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Account - An account is a container for your business's locations. If you are the only user who manages locations for your business, you can use your personal Google Account. To share management of locations with multiple users, [create a business account] (https://support.google.com/business/answer/6085339?ref_topic=6085325).
 */
public class Account {
    /**
     * The name of the account. *Note:* For an account with AccountType `PERSONAL`, this is the first and last name of the user account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountName")
    public String accountName;
    public Account withAccountName(String accountName) {
        this.accountName = accountName;
        return this;
    }
    
    /**
     * Account reference number if provisioned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountNumber")
    public String accountNumber;
    public Account withAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }
    
    /**
     * The resource name, in the format `accounts/{account_id}`.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Account withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Additional Info stored for an organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organizationInfo")
    public OrganizationInfo organizationInfo;
    public Account withOrganizationInfo(OrganizationInfo organizationInfo) {
        this.organizationInfo = organizationInfo;
        return this;
    }
    
    /**
     * Output only. Specifies the PermissionLevel the caller has for this account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("permissionLevel")
    public AccountPermissionLevelEnum permissionLevel;
    public Account withPermissionLevel(AccountPermissionLevelEnum permissionLevel) {
        this.permissionLevel = permissionLevel;
        return this;
    }
    
    /**
     * Output only. Specifies the AccountRole the caller has for this account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("role")
    public AccountRoleEnum role;
    public Account withRole(AccountRoleEnum role) {
        this.role = role;
        return this;
    }
    
    /**
     * Indicates status of the account, such as whether the account has been verified by Google.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("state")
    public AccountState state;
    public Account withState(AccountState state) {
        this.state = state;
        return this;
    }
    
    /**
     * Output only. Specifies the AccountType of this account.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public AccountTypeEnum type;
    public Account withType(AccountTypeEnum type) {
        this.type = type;
        return this;
    }
    
}
