// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// MetalsBenchmarkSummaryGETFormatEnum - to override content negotiation specify a value of json or xml
type MetalsBenchmarkSummaryGETFormatEnum string

const (
	MetalsBenchmarkSummaryGETFormatEnumJSON MetalsBenchmarkSummaryGETFormatEnum = "json"
	MetalsBenchmarkSummaryGETFormatEnumXML  MetalsBenchmarkSummaryGETFormatEnum = "xml"
)

func (e MetalsBenchmarkSummaryGETFormatEnum) ToPointer() *MetalsBenchmarkSummaryGETFormatEnum {
	return &e
}

func (e *MetalsBenchmarkSummaryGETFormatEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "xml":
		*e = MetalsBenchmarkSummaryGETFormatEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MetalsBenchmarkSummaryGETFormatEnum: %v", v)
	}
}

// MetalsBenchmarkSummaryGETUnitofmeasureEnum - unit of meaure, defaults to troy ounces. allowed values are:
// mg=milligram
// g=gram
// kg=kilogram
// gr=grain
// oz=ounce
// toz=troy ounce
// ct=carat
// dwt=pennyweight
type MetalsBenchmarkSummaryGETUnitofmeasureEnum string

const (
	MetalsBenchmarkSummaryGETUnitofmeasureEnumMg  MetalsBenchmarkSummaryGETUnitofmeasureEnum = "mg"
	MetalsBenchmarkSummaryGETUnitofmeasureEnumG   MetalsBenchmarkSummaryGETUnitofmeasureEnum = "g"
	MetalsBenchmarkSummaryGETUnitofmeasureEnumKg  MetalsBenchmarkSummaryGETUnitofmeasureEnum = "kg"
	MetalsBenchmarkSummaryGETUnitofmeasureEnumGr  MetalsBenchmarkSummaryGETUnitofmeasureEnum = "gr"
	MetalsBenchmarkSummaryGETUnitofmeasureEnumOz  MetalsBenchmarkSummaryGETUnitofmeasureEnum = "oz"
	MetalsBenchmarkSummaryGETUnitofmeasureEnumToz MetalsBenchmarkSummaryGETUnitofmeasureEnum = "toz"
	MetalsBenchmarkSummaryGETUnitofmeasureEnumCt  MetalsBenchmarkSummaryGETUnitofmeasureEnum = "ct"
	MetalsBenchmarkSummaryGETUnitofmeasureEnumDwt MetalsBenchmarkSummaryGETUnitofmeasureEnum = "dwt"
)

func (e MetalsBenchmarkSummaryGETUnitofmeasureEnum) ToPointer() *MetalsBenchmarkSummaryGETUnitofmeasureEnum {
	return &e
}

func (e *MetalsBenchmarkSummaryGETUnitofmeasureEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "mg":
		fallthrough
	case "g":
		fallthrough
	case "kg":
		fallthrough
	case "gr":
		fallthrough
	case "oz":
		fallthrough
	case "toz":
		fallthrough
	case "ct":
		fallthrough
	case "dwt":
		*e = MetalsBenchmarkSummaryGETUnitofmeasureEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MetalsBenchmarkSummaryGETUnitofmeasureEnum: %v", v)
	}
}

type MetalsBenchmarkSummaryGETRequest struct {
	// comma separated list of conversion currencies, defaults to USD
	Currency *string `queryParam:"style=form,explode=true,name=currency"`
	// to override content negotiation specify a value of json or xml
	Format *MetalsBenchmarkSummaryGETFormatEnum `queryParam:"style=form,explode=true,name=format"`
	// comma separated list of metals
	Metals string `queryParam:"style=form,explode=true,name=metals"`
	// unit of meaure, defaults to troy ounces. allowed values are:
	// mg=milligram
	// g=gram
	// kg=kilogram
	// gr=grain
	// oz=ounce
	// toz=troy ounce
	// ct=carat
	// dwt=pennyweight
	Unitofmeasure *MetalsBenchmarkSummaryGETUnitofmeasureEnum `queryParam:"style=form,explode=true,name=unitofmeasure"`
}

type MetalsBenchmarkSummaryGETResponse struct {
	Body        []byte
	ContentType string
	StatusCode  int
	RawResponse *http.Response
	// Success
	SummaryResponses []shared.SummaryResponse
}
