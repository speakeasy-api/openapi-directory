"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EventSourceMappingConfiguration = void 0;
var utils_1 = require("../../../internal/utils");
var amazonmanagedkafkaeventsourceconfig_1 = require("./amazonmanagedkafkaeventsourceconfig");
var destinationconfig_1 = require("./destinationconfig");
var documentdbeventsourceconfig_1 = require("./documentdbeventsourceconfig");
var eventsourcepositionenum_1 = require("./eventsourcepositionenum");
var filtercriteria_1 = require("./filtercriteria");
var scalingconfig_1 = require("./scalingconfig");
var selfmanagedeventsource_1 = require("./selfmanagedeventsource");
var selfmanagedkafkaeventsourceconfig_1 = require("./selfmanagedkafkaeventsourceconfig");
var sourceaccessconfiguration_1 = require("./sourceaccessconfiguration");
var class_transformer_1 = require("class-transformer");
/**
 * A mapping between an Amazon Web Services resource and a Lambda function. For details, see <a>CreateEventSourceMapping</a>.
 */
var EventSourceMappingConfiguration = /** @class */ (function (_super) {
    __extends(EventSourceMappingConfiguration, _super);
    function EventSourceMappingConfiguration() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "AmazonManagedKafkaEventSourceConfig" }),
        (0, class_transformer_1.Type)(function () { return amazonmanagedkafkaeventsourceconfig_1.AmazonManagedKafkaEventSourceConfig; }),
        __metadata("design:type", amazonmanagedkafkaeventsourceconfig_1.AmazonManagedKafkaEventSourceConfig)
    ], EventSourceMappingConfiguration.prototype, "amazonManagedKafkaEventSourceConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "BatchSize" }),
        __metadata("design:type", Number)
    ], EventSourceMappingConfiguration.prototype, "batchSize", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "BisectBatchOnFunctionError" }),
        __metadata("design:type", Boolean)
    ], EventSourceMappingConfiguration.prototype, "bisectBatchOnFunctionError", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DestinationConfig" }),
        (0, class_transformer_1.Type)(function () { return destinationconfig_1.DestinationConfig; }),
        __metadata("design:type", destinationconfig_1.DestinationConfig)
    ], EventSourceMappingConfiguration.prototype, "destinationConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "DocumentDBEventSourceConfig" }),
        (0, class_transformer_1.Type)(function () { return documentdbeventsourceconfig_1.DocumentDBEventSourceConfig; }),
        __metadata("design:type", documentdbeventsourceconfig_1.DocumentDBEventSourceConfig)
    ], EventSourceMappingConfiguration.prototype, "documentDBEventSourceConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "EventSourceArn" }),
        __metadata("design:type", String)
    ], EventSourceMappingConfiguration.prototype, "eventSourceArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "FilterCriteria" }),
        (0, class_transformer_1.Type)(function () { return filtercriteria_1.FilterCriteria; }),
        __metadata("design:type", filtercriteria_1.FilterCriteria)
    ], EventSourceMappingConfiguration.prototype, "filterCriteria", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "FunctionArn" }),
        __metadata("design:type", String)
    ], EventSourceMappingConfiguration.prototype, "functionArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "FunctionResponseTypes" }),
        __metadata("design:type", Array)
    ], EventSourceMappingConfiguration.prototype, "functionResponseTypes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "LastModified" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], EventSourceMappingConfiguration.prototype, "lastModified", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "LastProcessingResult" }),
        __metadata("design:type", String)
    ], EventSourceMappingConfiguration.prototype, "lastProcessingResult", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MaximumBatchingWindowInSeconds" }),
        __metadata("design:type", Number)
    ], EventSourceMappingConfiguration.prototype, "maximumBatchingWindowInSeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MaximumRecordAgeInSeconds" }),
        __metadata("design:type", Number)
    ], EventSourceMappingConfiguration.prototype, "maximumRecordAgeInSeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "MaximumRetryAttempts" }),
        __metadata("design:type", Number)
    ], EventSourceMappingConfiguration.prototype, "maximumRetryAttempts", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ParallelizationFactor" }),
        __metadata("design:type", Number)
    ], EventSourceMappingConfiguration.prototype, "parallelizationFactor", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Queues" }),
        __metadata("design:type", Array)
    ], EventSourceMappingConfiguration.prototype, "queues", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "ScalingConfig" }),
        (0, class_transformer_1.Type)(function () { return scalingconfig_1.ScalingConfig; }),
        __metadata("design:type", scalingconfig_1.ScalingConfig)
    ], EventSourceMappingConfiguration.prototype, "scalingConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SelfManagedEventSource" }),
        (0, class_transformer_1.Type)(function () { return selfmanagedeventsource_1.SelfManagedEventSource; }),
        __metadata("design:type", selfmanagedeventsource_1.SelfManagedEventSource)
    ], EventSourceMappingConfiguration.prototype, "selfManagedEventSource", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "SelfManagedKafkaEventSourceConfig" }),
        (0, class_transformer_1.Type)(function () { return selfmanagedkafkaeventsourceconfig_1.SelfManagedKafkaEventSourceConfig; }),
        __metadata("design:type", selfmanagedkafkaeventsourceconfig_1.SelfManagedKafkaEventSourceConfig)
    ], EventSourceMappingConfiguration.prototype, "selfManagedKafkaEventSourceConfig", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: sourceaccessconfiguration_1.SourceAccessConfiguration }),
        (0, class_transformer_1.Expose)({ name: "SourceAccessConfigurations" }),
        (0, class_transformer_1.Type)(function () { return sourceaccessconfiguration_1.SourceAccessConfiguration; }),
        __metadata("design:type", Array)
    ], EventSourceMappingConfiguration.prototype, "sourceAccessConfigurations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "StartingPosition" }),
        __metadata("design:type", String)
    ], EventSourceMappingConfiguration.prototype, "startingPosition", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "StartingPositionTimestamp" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], EventSourceMappingConfiguration.prototype, "startingPositionTimestamp", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "State" }),
        __metadata("design:type", String)
    ], EventSourceMappingConfiguration.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "StateTransitionReason" }),
        __metadata("design:type", String)
    ], EventSourceMappingConfiguration.prototype, "stateTransitionReason", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "Topics" }),
        __metadata("design:type", Array)
    ], EventSourceMappingConfiguration.prototype, "topics", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "TumblingWindowInSeconds" }),
        __metadata("design:type", Number)
    ], EventSourceMappingConfiguration.prototype, "tumblingWindowInSeconds", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "UUID" }),
        __metadata("design:type", String)
    ], EventSourceMappingConfiguration.prototype, "uuid", void 0);
    return EventSourceMappingConfiguration;
}(utils_1.SpeakeasyBase));
exports.EventSourceMappingConfiguration = EventSourceMappingConfiguration;
