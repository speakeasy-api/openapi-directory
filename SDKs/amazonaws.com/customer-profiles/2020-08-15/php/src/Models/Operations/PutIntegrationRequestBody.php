<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Operations;


class PutIntegrationRequestBody
{
    /**
     * The configurations that control how Customer Profiles retrieves data from the source, Amazon AppFlow. Customer Profiles uses this information to create an AppFlow flow on behalf of customers.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Operations\PutIntegrationRequestBodyFlowDefinition $flowDefinition
     */
	#[\JMS\Serializer\Annotation\SerializedName('FlowDefinition')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Operations\PutIntegrationRequestBodyFlowDefinition')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?PutIntegrationRequestBodyFlowDefinition $flowDefinition = null;
    
    /**
     * The name of the profile object type.
     * 
     * @var ?string $objectTypeName
     */
	#[\JMS\Serializer\Annotation\SerializedName('ObjectTypeName')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $objectTypeName = null;
    
    /**
     * A map in which each key is an event type from an external application such as Segment or Shopify, and each value is an <code>ObjectTypeName</code> (template) used to ingest the event. It supports the following event types: <code>SegmentIdentify</code>, <code>ShopifyCreateCustomers</code>, <code>ShopifyUpdateCustomers</code>, <code>ShopifyCreateDraftOrders</code>, <code>ShopifyUpdateDraftOrders</code>, <code>ShopifyCreateOrders</code>, and <code>ShopifyUpdatedOrders</code>.
     * 
     * @var ?array<string, string> $objectTypeNames
     */
	#[\JMS\Serializer\Annotation\SerializedName('ObjectTypeNames')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $objectTypeNames = null;
    
    /**
     * The tags used to organize, track, or control access for this resource.
     * 
     * @var ?array<string, string> $tags
     */
	#[\JMS\Serializer\Annotation\SerializedName('Tags')]
    #[\JMS\Serializer\Annotation\Type('array<string, string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $tags = null;
    
    /**
     * The URI of the S3 bucket or any other type of data source.
     * 
     * @var ?string $uri
     */
	#[\JMS\Serializer\Annotation\SerializedName('Uri')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $uri = null;
    
	public function __construct()
	{
		$this->flowDefinition = null;
		$this->objectTypeName = null;
		$this->objectTypeNames = null;
		$this->tags = null;
		$this->uri = null;
	}
}
