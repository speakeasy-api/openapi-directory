"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import googlesecuritysafebrowsingv4fetchthreatlistupdatesresponselistupdateresponse as shared_googlesecuritysafebrowsingv4fetchthreatlistupdatesresponselistupdateresponse
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponse:
    r"""Successful response"""
    
    list_update_responses: Optional[list[shared_googlesecuritysafebrowsingv4fetchthreatlistupdatesresponselistupdateresponse.GoogleSecuritySafebrowsingV4FetchThreatListUpdatesResponseListUpdateResponse]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('listUpdateResponses'), 'exclude': lambda f: f is None }})
    r"""The list updates requested by the clients. The number of responses here may be less than the number of requests sent by clients. This is the case, for example, if the server has no updates for a particular list."""  
    minimum_wait_duration: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('minimumWaitDuration'), 'exclude': lambda f: f is None }})
    r"""The minimum duration the client must wait before issuing any update request. If this field is not set clients may update as soon as they want."""  
    