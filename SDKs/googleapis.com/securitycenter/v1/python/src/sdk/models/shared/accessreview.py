"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AccessReview:
    r"""Conveys information about a Kubernetes access review (e.g. kubectl auth can-i ...) that was involved in a finding."""
    
    group: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('group'), 'exclude': lambda f: f is None }})
    r"""Group is the API Group of the Resource. \\"*\\" means all."""  
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name'), 'exclude': lambda f: f is None }})
    r"""Name is the name of the resource being requested. Empty means all."""  
    ns: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ns'), 'exclude': lambda f: f is None }})
    r"""Namespace of the action being requested. Currently, there is no distinction between no namespace and all namespaces. Both are represented by \\"\\" (empty)."""  
    resource: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resource'), 'exclude': lambda f: f is None }})
    r"""Resource is the optional resource type requested. \\"*\\" means all."""  
    subresource: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subresource'), 'exclude': lambda f: f is None }})
    r"""Subresource is the optional subresource type."""  
    verb: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('verb'), 'exclude': lambda f: f is None }})
    r"""Verb is a Kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy. \\"*\\" means all."""  
    version: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version'), 'exclude': lambda f: f is None }})
    r"""Version is the API Version of the Resource. \\"*\\" means all."""  
    