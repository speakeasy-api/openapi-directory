/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateFunctionUrlConfigRequestBodyCors - The &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"&gt;cross-origin resource sharing (CORS)&lt;/a&gt; settings for your Lambda function URL. Use CORS to grant access to your function URL from any origin. You can also use CORS to control access for specific HTTP headers and methods in requests to your function URL.
 */
public class CreateFunctionUrlConfigRequestBodyCors {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AllowCredentials")
    public Boolean allowCredentials;

    public CreateFunctionUrlConfigRequestBodyCors withAllowCredentials(Boolean allowCredentials) {
        this.allowCredentials = allowCredentials;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AllowHeaders")
    public String[] allowHeaders;

    public CreateFunctionUrlConfigRequestBodyCors withAllowHeaders(String[] allowHeaders) {
        this.allowHeaders = allowHeaders;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AllowMethods")
    public String[] allowMethods;

    public CreateFunctionUrlConfigRequestBodyCors withAllowMethods(String[] allowMethods) {
        this.allowMethods = allowMethods;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("AllowOrigins")
    public String[] allowOrigins;

    public CreateFunctionUrlConfigRequestBodyCors withAllowOrigins(String[] allowOrigins) {
        this.allowOrigins = allowOrigins;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ExposeHeaders")
    public String[] exposeHeaders;

    public CreateFunctionUrlConfigRequestBodyCors withExposeHeaders(String[] exposeHeaders) {
        this.exposeHeaders = exposeHeaders;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("MaxAge")
    public Long maxAge;

    public CreateFunctionUrlConfigRequestBodyCors withMaxAge(Long maxAge) {
        this.maxAge = maxAge;
        return this;
    }
    
    public CreateFunctionUrlConfigRequestBodyCors(){}
}
