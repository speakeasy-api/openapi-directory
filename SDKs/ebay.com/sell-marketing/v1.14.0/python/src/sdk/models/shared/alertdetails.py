"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import alertdimension as shared_alertdimension
from ..shared import aspect as shared_aspect
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class AlertDetails:
    r"""A type that contains the alert detail fields."""
    
    aspect: Optional[shared_aspect.Aspect] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('aspect'), 'exclude': lambda f: f is None }})
    r"""A type that contains the aspect fields."""  
    dimension: Optional[shared_alertdimension.AlertDimension] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('dimension'), 'exclude': lambda f: f is None }})
    r"""A type that contains the dimension fields."""  
    