/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Model - Successful response
 */
public class Model {
    /**
     * The best trial_id across all training runs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bestTrialId")
    public String bestTrialId;
    public Model withBestTrialId(String bestTrialId) {
        this.bestTrialId = bestTrialId;
        return this;
    }
    
    /**
     * Output only. The time when this model was created, in millisecs since the epoch.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("creationTime")
    public String creationTime;
    public Model withCreationTime(String creationTime) {
        this.creationTime = creationTime;
        return this;
    }
    
    /**
     * Output only. The default trial_id to use in TVFs when the trial_id is not passed in. For single-objective [hyperparameter tuning](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models, this is the best trial ID. For multi-objective [hyperparameter tuning](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models, this is the smallest trial ID among all Pareto optimal trials.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultTrialId")
    public String defaultTrialId;
    public Model withDefaultTrialId(String defaultTrialId) {
        this.defaultTrialId = defaultTrialId;
        return this;
    }
    
    /**
     * Optional. A user-friendly description of this model.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public Model withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("encryptionConfiguration")
    public EncryptionConfiguration encryptionConfiguration;
    public Model withEncryptionConfiguration(EncryptionConfiguration encryptionConfiguration) {
        this.encryptionConfiguration = encryptionConfiguration;
        return this;
    }
    
    /**
     * Output only. A hash of this resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("etag")
    public String etag;
    public Model withEtag(String etag) {
        this.etag = etag;
        return this;
    }
    
    /**
     * Optional. The time when this model expires, in milliseconds since the epoch. If not present, the model will persist indefinitely. Expired models will be deleted and their storage reclaimed. The defaultTableExpirationMs property of the encapsulating dataset can be used to set a default expirationTime on newly created models.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("expirationTime")
    public String expirationTime;
    public Model withExpirationTime(String expirationTime) {
        this.expirationTime = expirationTime;
        return this;
    }
    
    /**
     * Output only. Input feature columns that were used to train this model.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("featureColumns")
    public StandardSqlField[] featureColumns;
    public Model withFeatureColumns(StandardSqlField[] featureColumns) {
        this.featureColumns = featureColumns;
        return this;
    }
    
    /**
     * Optional. A descriptive name for this model.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("friendlyName")
    public String friendlyName;
    public Model withFriendlyName(String friendlyName) {
        this.friendlyName = friendlyName;
        return this;
    }
    
    /**
     * Hyperparameter search spaces. These should be a subset of training_options.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hparamSearchSpaces")
    public HparamSearchSpaces hparamSearchSpaces;
    public Model withHparamSearchSpaces(HparamSearchSpaces hparamSearchSpaces) {
        this.hparamSearchSpaces = hparamSearchSpaces;
        return this;
    }
    
    /**
     * Output only. Trials of a [hyperparameter tuning](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) model sorted by trial_id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("hparamTrials")
    public HparamTuningTrial[] hparamTrials;
    public Model withHparamTrials(HparamTuningTrial[] hparamTrials) {
        this.hparamTrials = hparamTrials;
        return this;
    }
    
    /**
     * Output only. Label columns that were used to train this model. The output of the model will have a "predicted_" prefix to these columns.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labelColumns")
    public StandardSqlField[] labelColumns;
    public Model withLabelColumns(StandardSqlField[] labelColumns) {
        this.labelColumns = labelColumns;
        return this;
    }
    
    /**
     * The labels associated with this model. You can use these to organize and group your models. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("labels")
    public java.util.Map<String, String> labels;
    public Model withLabels(java.util.Map<String, String> labels) {
        this.labels = labels;
        return this;
    }
    
    /**
     * Output only. The time when this model was last modified, in millisecs since the epoch.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("lastModifiedTime")
    public String lastModifiedTime;
    public Model withLastModifiedTime(String lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }
    
    /**
     * Output only. The geographic location where the model resides. This value is inherited from the dataset.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;
    public Model withLocation(String location) {
        this.location = location;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modelReference")
    public ModelReference modelReference;
    public Model withModelReference(ModelReference modelReference) {
        this.modelReference = modelReference;
        return this;
    }
    
    /**
     * Output only. Type of the model resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("modelType")
    public ModelModelTypeEnum modelType;
    public Model withModelType(ModelModelTypeEnum modelType) {
        this.modelType = modelType;
        return this;
    }
    
    /**
     * Output only. For single-objective [hyperparameter tuning](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models, it only contains the best trial. For multi-objective [hyperparameter tuning](/bigquery-ml/docs/reference/standard-sql/bigqueryml-syntax-hp-tuning-overview) models, it contains all Pareto optimal trials sorted by trial_id.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("optimalTrialIds")
    public String[] optimalTrialIds;
    public Model withOptimalTrialIds(String[] optimalTrialIds) {
        this.optimalTrialIds = optimalTrialIds;
        return this;
    }
    
    /**
     * Information for all training runs in increasing order of start_time.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("trainingRuns")
    public TrainingRun[] trainingRuns;
    public Model withTrainingRuns(TrainingRun[] trainingRuns) {
        this.trainingRuns = trainingRuns;
        return this;
    }
    
}
