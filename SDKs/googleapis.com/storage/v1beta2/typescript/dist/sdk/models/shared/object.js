"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObjectT = exports.ObjectOwner = void 0;
var utils_1 = require("../../../internal/utils");
var objectaccesscontrol_1 = require("./objectaccesscontrol");
var class_transformer_1 = require("class-transformer");
/**
 * The owner of the object. This will always be the uploader of the object.
 */
var ObjectOwner = /** @class */ (function (_super) {
    __extends(ObjectOwner, _super);
    function ObjectOwner() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "entity" }),
        __metadata("design:type", String)
    ], ObjectOwner.prototype, "entity", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "entityId" }),
        __metadata("design:type", String)
    ], ObjectOwner.prototype, "entityId", void 0);
    return ObjectOwner;
}(utils_1.SpeakeasyBase));
exports.ObjectOwner = ObjectOwner;
/**
 * An object.
 */
var ObjectT = /** @class */ (function (_super) {
    __extends(ObjectT, _super);
    function ObjectT() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: objectaccesscontrol_1.ObjectAccessControl }),
        (0, class_transformer_1.Expose)({ name: "acl" }),
        (0, class_transformer_1.Type)(function () { return objectaccesscontrol_1.ObjectAccessControl; }),
        __metadata("design:type", Array)
    ], ObjectT.prototype, "acl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "bucket" }),
        __metadata("design:type", String)
    ], ObjectT.prototype, "bucket", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "cacheControl" }),
        __metadata("design:type", String)
    ], ObjectT.prototype, "cacheControl", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "componentCount" }),
        __metadata("design:type", Number)
    ], ObjectT.prototype, "componentCount", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "contentDisposition" }),
        __metadata("design:type", String)
    ], ObjectT.prototype, "contentDisposition", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "contentEncoding" }),
        __metadata("design:type", String)
    ], ObjectT.prototype, "contentEncoding", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "contentLanguage" }),
        __metadata("design:type", String)
    ], ObjectT.prototype, "contentLanguage", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "contentType" }),
        __metadata("design:type", String)
    ], ObjectT.prototype, "contentType", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "crc32c" }),
        __metadata("design:type", String)
    ], ObjectT.prototype, "crc32c", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "etag" }),
        __metadata("design:type", String)
    ], ObjectT.prototype, "etag", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "generation" }),
        __metadata("design:type", String)
    ], ObjectT.prototype, "generation", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "id" }),
        __metadata("design:type", String)
    ], ObjectT.prototype, "id", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "kind" }),
        __metadata("design:type", String)
    ], ObjectT.prototype, "kind", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "md5Hash" }),
        __metadata("design:type", String)
    ], ObjectT.prototype, "md5Hash", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "mediaLink" }),
        __metadata("design:type", String)
    ], ObjectT.prototype, "mediaLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "metadata" }),
        __metadata("design:type", Object)
    ], ObjectT.prototype, "metadata", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "metageneration" }),
        __metadata("design:type", String)
    ], ObjectT.prototype, "metageneration", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "name" }),
        __metadata("design:type", String)
    ], ObjectT.prototype, "name", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "owner" }),
        (0, class_transformer_1.Type)(function () { return ObjectOwner; }),
        __metadata("design:type", ObjectOwner)
    ], ObjectT.prototype, "owner", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "selfLink" }),
        __metadata("design:type", String)
    ], ObjectT.prototype, "selfLink", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "size" }),
        __metadata("design:type", String)
    ], ObjectT.prototype, "size", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "storageClass" }),
        __metadata("design:type", String)
    ], ObjectT.prototype, "storageClass", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "timeDeleted" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], ObjectT.prototype, "timeDeleted", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        (0, class_transformer_1.Expose)({ name: "updated" }),
        (0, class_transformer_1.Transform)(function (_a) {
            var value = _a.value;
            return new Date(value);
        }, { toClassOnly: true }),
        __metadata("design:type", Date)
    ], ObjectT.prototype, "updated", void 0);
    return ObjectT;
}(utils_1.SpeakeasyBase));
exports.ObjectT = ObjectT;
