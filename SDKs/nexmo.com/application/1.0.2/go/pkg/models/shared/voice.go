// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type VoiceWebhooksEndpointTypeEnum string

const (
	VoiceWebhooksEndpointTypeEnumAnswerURL VoiceWebhooksEndpointTypeEnum = "answer_url"
	VoiceWebhooksEndpointTypeEnumEventURL  VoiceWebhooksEndpointTypeEnum = "event_url"
)

func (e *VoiceWebhooksEndpointTypeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "answer_url":
		fallthrough
	case "event_url":
		*e = VoiceWebhooksEndpointTypeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VoiceWebhooksEndpointTypeEnum: %s", s)
	}
}

// VoiceWebhooksHTTPMethodEnum - The HTTP method used to send event information to the `event_url` or `answer_url`.
type VoiceWebhooksHTTPMethodEnum string

const (
	VoiceWebhooksHTTPMethodEnumGet  VoiceWebhooksHTTPMethodEnum = "GET"
	VoiceWebhooksHTTPMethodEnumPost VoiceWebhooksHTTPMethodEnum = "POST"
)

func (e *VoiceWebhooksHTTPMethodEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "GET":
		fallthrough
	case "POST":
		*e = VoiceWebhooksHTTPMethodEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for VoiceWebhooksHTTPMethodEnum: %s", s)
	}
}

type VoiceWebhooks struct {
	// `answer_url`: The URL where your webhook delivers the Nexmo Call Control Object that governs this call. As soon as your user answers a call Nexmo makes a request to answer_url. `event_url`: Nexmo sends event information asynchronously to this URL when status changes.
	Endpoint     string                        `json:"endpoint"`
	EndpointType VoiceWebhooksEndpointTypeEnum `json:"endpoint_type"`
	// The HTTP method used to send event information to the `event_url` or `answer_url`.
	HTTPMethod VoiceWebhooksHTTPMethodEnum `json:"http_method"`
}

// Voice - The Nexmo product that you access with this application.
type Voice struct {
	Webhooks []VoiceWebhooks `json:"webhooks,omitempty"`
}
