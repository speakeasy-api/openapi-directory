"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

import requests as requests_http
from . import utils
from sdk.models import operations
from typing import Any, Optional

class MerakiAuthUsers:
    _client: requests_http.Session
    _security_client: requests_http.Session
    _server_url: str
    _language: str
    _sdk_version: str
    _gen_version: str

    def __init__(self, client: requests_http.Session, security_client: requests_http.Session, server_url: str, language: str, sdk_version: str, gen_version: str) -> None:
        self._client = client
        self._security_client = security_client
        self._server_url = server_url
        self._language = language
        self._sdk_version = sdk_version
        self._gen_version = gen_version
        
    def get_network_meraki_auth_user(self, request: operations.GetNetworkMerakiAuthUserRequest) -> operations.GetNetworkMerakiAuthUserResponse:
        r"""Return the Meraki Auth splash or RADIUS user
        Return the Meraki Auth splash or RADIUS user
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetNetworkMerakiAuthUserRequest, base_url, '/networks/{networkId}/merakiAuthUsers/{merakiAuthUserId}', request)
        
        
        client = self._security_client
        
        http_res = client.request('GET', url)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetNetworkMerakiAuthUserResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[dict[str, Any]])
                res.get_network_meraki_auth_user_200_application_json_object = out

        return res

    def get_network_meraki_auth_users(self, request: operations.GetNetworkMerakiAuthUsersRequest) -> operations.GetNetworkMerakiAuthUsersResponse:
        r"""List the splash or RADIUS users configured under Meraki Authentication for a network
        List the splash or RADIUS users configured under Meraki Authentication for a network
        """
        base_url = self._server_url
        
        url = utils.generate_url(operations.GetNetworkMerakiAuthUsersRequest, base_url, '/networks/{networkId}/merakiAuthUsers', request)
        
        
        client = self._security_client
        
        http_res = client.request('GET', url)
        content_type = http_res.headers.get('Content-Type')

        res = operations.GetNetworkMerakiAuthUsersResponse(status_code=http_res.status_code, content_type=content_type, raw_response=http_res)
        
        if http_res.status_code == 200:
            if utils.match_content_type(content_type, 'application/json'):
                out = utils.unmarshal_json(http_res.text, Optional[list[dict[str, Any]]])
                res.get_network_meraki_auth_users_200_application_json_objects = out

        return res

    