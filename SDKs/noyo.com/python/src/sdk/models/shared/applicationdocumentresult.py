"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class ApplicationDocumentResultStatusEnum(str, Enum):
    r"""Status of the application document"""
    ACCEPTED = 'accepted'
    IN_PROGRESS = 'in_progress'
    INCOMPLETE = 'incomplete'
    NOYO_REVIEW = 'noyo_review'
    REJECTED = 'rejected'
    SUBMITTED = 'submitted'
    WIPED = 'wiped'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ApplicationDocumentResult:
    r"""Successful Response - Returns the new Application Document"""
    
    application_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('application_id') }})
    r"""Unique identifier of the application in Noyo"""  
    created: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('created') }})
    r"""The date the record was created"""  
    document_type: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('document_type') }})
    r"""Type of the document"""  
    id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Unique identifier of the record in Noyo"""  
    modified: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('modified') }})
    r"""The date the record was last updated"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Display name of the application document"""  
    notes: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes') }})
    r"""General platform notes about the application document"""  
    required: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('required') }})
    r"""True if this document is required to submit the application"""  
    status: ApplicationDocumentResultStatusEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status') }})
    r"""Status of the application document"""  
    status_notes: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status_notes') }})
    r"""Additional notes about the application document status with the carrier"""  
    template_file_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('template_file_key') }})
    r"""GCS link to the template file stored in Noyo, if available"""  
    version: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('version') }})
    r"""Current version of the record"""  
    file_upload_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file_upload_id'), 'exclude': lambda f: f is None }})
    r"""Unique identifier of the file upload id"""  
    