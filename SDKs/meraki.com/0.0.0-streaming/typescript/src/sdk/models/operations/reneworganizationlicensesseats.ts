/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export class RenewOrganizationLicensesSeatsRequestBody extends SpeakeasyBase {
  /**
   * The ID of the SM license to renew. This license must already be assigned to an SM network
   */
  @SpeakeasyMetadata()
  @Expose({ name: "licenseIdToRenew" })
  licenseIdToRenew: string;

  /**
   * The SM license to use to renew the seats on 'licenseIdToRenew'. This license must have at least as many seats available as there are seats on 'licenseIdToRenew'
   */
  @SpeakeasyMetadata()
  @Expose({ name: "unusedLicenseId" })
  unusedLicenseId: string;
}

export class RenewOrganizationLicensesSeatsRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({ data: "request, media_type=application/json" })
  requestBody: RenewOrganizationLicensesSeatsRequestBody;

  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=organizationId",
  })
  organizationId: string;
}

export class RenewOrganizationLicensesSeatsResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Successful operation
   */
  @SpeakeasyMetadata()
  renewOrganizationLicensesSeats200ApplicationJSONObject?: Record<string, any>;
}
