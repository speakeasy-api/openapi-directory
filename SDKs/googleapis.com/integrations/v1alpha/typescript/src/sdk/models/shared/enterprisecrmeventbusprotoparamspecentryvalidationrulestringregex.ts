/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Rule used to validate strings.
 */
export class EnterpriseCrmEventbusProtoParamSpecEntryValidationRuleStringRegex extends SpeakeasyBase {
  /**
   * Whether the regex matcher is applied exclusively (if true, matching values will be rejected).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "exclusive" })
  exclusive?: boolean;

  /**
   * The regex applied to the input value(s).
   */
  @SpeakeasyMetadata()
  @Expose({ name: "regex" })
  regex?: string;
}
