// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
)

// GetMapVersionNumberTileLayerStyleZoomXYFormatFormatEnum - Format of the response.
type GetMapVersionNumberTileLayerStyleZoomXYFormatFormatEnum string

const (
	GetMapVersionNumberTileLayerStyleZoomXYFormatFormatEnumJpg GetMapVersionNumberTileLayerStyleZoomXYFormatFormatEnum = "jpg"
	GetMapVersionNumberTileLayerStyleZoomXYFormatFormatEnumPng GetMapVersionNumberTileLayerStyleZoomXYFormatFormatEnum = "png"
)

func (e *GetMapVersionNumberTileLayerStyleZoomXYFormatFormatEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "jpg":
		fallthrough
	case "png":
		*e = GetMapVersionNumberTileLayerStyleZoomXYFormatFormatEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMapVersionNumberTileLayerStyleZoomXYFormatFormatEnum: %s", s)
	}
}

// GetMapVersionNumberTileLayerStyleZoomXYFormatLayerEnum - Layer of tile to be rendered. <em>Hybrid</em> and <em>labels</em> are intended for layering with other data and are only available in <em>png</em> format.
type GetMapVersionNumberTileLayerStyleZoomXYFormatLayerEnum string

const (
	GetMapVersionNumberTileLayerStyleZoomXYFormatLayerEnumBasic  GetMapVersionNumberTileLayerStyleZoomXYFormatLayerEnum = "basic"
	GetMapVersionNumberTileLayerStyleZoomXYFormatLayerEnumHybrid GetMapVersionNumberTileLayerStyleZoomXYFormatLayerEnum = "hybrid"
	GetMapVersionNumberTileLayerStyleZoomXYFormatLayerEnumLabels GetMapVersionNumberTileLayerStyleZoomXYFormatLayerEnum = "labels"
)

func (e *GetMapVersionNumberTileLayerStyleZoomXYFormatLayerEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "basic":
		fallthrough
	case "hybrid":
		fallthrough
	case "labels":
		*e = GetMapVersionNumberTileLayerStyleZoomXYFormatLayerEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMapVersionNumberTileLayerStyleZoomXYFormatLayerEnum: %s", s)
	}
}

// GetMapVersionNumberTileLayerStyleZoomXYFormatStyleEnum - Style of tile to be rendered
type GetMapVersionNumberTileLayerStyleZoomXYFormatStyleEnum string

const (
	GetMapVersionNumberTileLayerStyleZoomXYFormatStyleEnumMain  GetMapVersionNumberTileLayerStyleZoomXYFormatStyleEnum = "main"
	GetMapVersionNumberTileLayerStyleZoomXYFormatStyleEnumNight GetMapVersionNumberTileLayerStyleZoomXYFormatStyleEnum = "night"
)

func (e *GetMapVersionNumberTileLayerStyleZoomXYFormatStyleEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "main":
		fallthrough
	case "night":
		*e = GetMapVersionNumberTileLayerStyleZoomXYFormatStyleEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMapVersionNumberTileLayerStyleZoomXYFormatStyleEnum: %s", s)
	}
}

// GetMapVersionNumberTileLayerStyleZoomXYFormatTileSizeEnum - Tile dimensions in pixels. <em>512</em> is only available for the <em>main</em> style and <em>basic</em> or <em>labels</em> layers.
type GetMapVersionNumberTileLayerStyleZoomXYFormatTileSizeEnum string

const (
	GetMapVersionNumberTileLayerStyleZoomXYFormatTileSizeEnumTwoHundredAndFiftySix GetMapVersionNumberTileLayerStyleZoomXYFormatTileSizeEnum = "256"
	GetMapVersionNumberTileLayerStyleZoomXYFormatTileSizeEnumFiveHundredAndTwelve  GetMapVersionNumberTileLayerStyleZoomXYFormatTileSizeEnum = "512"
)

func (e *GetMapVersionNumberTileLayerStyleZoomXYFormatTileSizeEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "256":
		fallthrough
	case "512":
		*e = GetMapVersionNumberTileLayerStyleZoomXYFormatTileSizeEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMapVersionNumberTileLayerStyleZoomXYFormatTileSizeEnum: %s", s)
	}
}

// GetMapVersionNumberTileLayerStyleZoomXYFormatVersionNumberEnum - Version of the service to call. The current version is 1.
type GetMapVersionNumberTileLayerStyleZoomXYFormatVersionNumberEnum string

const (
	GetMapVersionNumberTileLayerStyleZoomXYFormatVersionNumberEnumOne GetMapVersionNumberTileLayerStyleZoomXYFormatVersionNumberEnum = "1"
)

func (e *GetMapVersionNumberTileLayerStyleZoomXYFormatVersionNumberEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "1":
		*e = GetMapVersionNumberTileLayerStyleZoomXYFormatVersionNumberEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMapVersionNumberTileLayerStyleZoomXYFormatVersionNumberEnum: %s", s)
	}
}

// GetMapVersionNumberTileLayerStyleZoomXYFormatViewEnum - Geopolitical view. Determines rendering of disputed areas. See the <a href="/maps-sdk-web/functional-examples#geopolitical-views">documentation</a> for an explanation of how this works in live services.
type GetMapVersionNumberTileLayerStyleZoomXYFormatViewEnum string

const (
	GetMapVersionNumberTileLayerStyleZoomXYFormatViewEnumUnified GetMapVersionNumberTileLayerStyleZoomXYFormatViewEnum = "Unified"
	GetMapVersionNumberTileLayerStyleZoomXYFormatViewEnumIn      GetMapVersionNumberTileLayerStyleZoomXYFormatViewEnum = "IN"
)

func (e *GetMapVersionNumberTileLayerStyleZoomXYFormatViewEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Unified":
		fallthrough
	case "IN":
		*e = GetMapVersionNumberTileLayerStyleZoomXYFormatViewEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMapVersionNumberTileLayerStyleZoomXYFormatViewEnum: %s", s)
	}
}

// GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum - Zoom level of tile to be rendered
type GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum string

const (
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumZero      GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "0"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumOne       GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "1"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumTwo       GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "2"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumThree     GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "3"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumFour      GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "4"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumFive      GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "5"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumSix       GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "6"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumSeven     GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "7"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumEight     GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "8"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumNine      GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "9"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumTen       GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "10"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumEleven    GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "11"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumTwelve    GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "12"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumThirteen  GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "13"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumFourteen  GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "14"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumFifteen   GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "15"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumSixteen   GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "16"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumSeventeen GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "17"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumEighteen  GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "18"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumNineteen  GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "19"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumTwenty    GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "20"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumTwentyOne GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "21"
	GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnumTwentyTwo GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum = "22"
)

func (e *GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "0":
		fallthrough
	case "1":
		fallthrough
	case "2":
		fallthrough
	case "3":
		fallthrough
	case "4":
		fallthrough
	case "5":
		fallthrough
	case "6":
		fallthrough
	case "7":
		fallthrough
	case "8":
		fallthrough
	case "9":
		fallthrough
	case "10":
		fallthrough
	case "11":
		fallthrough
	case "12":
		fallthrough
	case "13":
		fallthrough
	case "14":
		fallthrough
	case "15":
		fallthrough
	case "16":
		fallthrough
	case "17":
		fallthrough
	case "18":
		fallthrough
	case "19":
		fallthrough
	case "20":
		fallthrough
	case "21":
		fallthrough
	case "22":
		*e = GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum: %s", s)
	}
}

type GetMapVersionNumberTileLayerStyleZoomXYFormatRequest struct {
	// x coordinate of tile on zoom grid
	X int64 `pathParam:"style=simple,explode=false,name=X"`
	// y coordinate of tile on zoom grid
	Y int64 `pathParam:"style=simple,explode=false,name=Y"`
	// Format of the response.
	Format GetMapVersionNumberTileLayerStyleZoomXYFormatFormatEnum `pathParam:"style=simple,explode=false,name=format"`
	// Layer of tile to be rendered. <em>Hybrid</em> and <em>labels</em> are intended for layering with other data and are only available in <em>png</em> format.
	Layer GetMapVersionNumberTileLayerStyleZoomXYFormatLayerEnum `pathParam:"style=simple,explode=false,name=layer"`
	// Style of tile to be rendered
	Style GetMapVersionNumberTileLayerStyleZoomXYFormatStyleEnum `pathParam:"style=simple,explode=false,name=style"`
	// Tile dimensions in pixels. <em>512</em> is only available for the <em>main</em> style and <em>basic</em> or <em>labels</em> layers.
	TileSize *GetMapVersionNumberTileLayerStyleZoomXYFormatTileSizeEnum `queryParam:"style=form,explode=true,name=tileSize"`
	// Version of the service to call. The current version is 1.
	VersionNumber GetMapVersionNumberTileLayerStyleZoomXYFormatVersionNumberEnum `pathParam:"style=simple,explode=false,name=versionNumber"`
	// Geopolitical view. Determines rendering of disputed areas. See the <a href="/maps-sdk-web/functional-examples#geopolitical-views">documentation</a> for an explanation of how this works in live services.
	View *GetMapVersionNumberTileLayerStyleZoomXYFormatViewEnum `queryParam:"style=form,explode=true,name=view"`
	// Zoom level of tile to be rendered
	Zoom GetMapVersionNumberTileLayerStyleZoomXYFormatZoomEnum `pathParam:"style=simple,explode=false,name=zoom"`
}

type GetMapVersionNumberTileLayerStyleZoomXYFormatResponse struct {
	ContentType string
	StatusCode  int
	RawResponse *http.Response
}
