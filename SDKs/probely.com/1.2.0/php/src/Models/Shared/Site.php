<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * Site - Main resource associated with a target
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class Site
{
    /**
     * Basic authentication credentials
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\BasicAuth $basicAuth
     */
	#[\JMS\Serializer\Annotation\SerializedName('basic_auth')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\BasicAuth')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?BasicAuth $basicAuth = null;
    
    /**
     * Date time of the last change
     * 
     * @var ?\DateTime $changed
     */
	#[\JMS\Serializer\Annotation\SerializedName('changed')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $changed = null;
    
    /**
     * User that last modified the object
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\ChangedBy $changedBy
     */
	#[\JMS\Serializer\Annotation\SerializedName('changed_by')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\ChangedBy')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?ChangedBy $changedBy = null;
    
    /**
     * Custom cookies name/value pairs
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Cookies> $cookies
     */
	#[\JMS\Serializer\Annotation\SerializedName('cookies')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Cookies>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $cookies = null;
    
    /**
     * Custom description for the resource
     * 
     * @var ?string $desc
     */
	#[\JMS\Serializer\Annotation\SerializedName('desc')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $desc = null;
    
    /**
     * Form login field name, field input pairs
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\FormLogin> $formLogin
     */
	#[\JMS\Serializer\Annotation\SerializedName('form_login')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\FormLogin>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $formLogin = null;
    
    /**
     * Pattern to check successful authentication (not used)
     * 
     * @var ?string $formLoginCheckPattern
     */
	#[\JMS\Serializer\Annotation\SerializedName('form_login_check_pattern')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $formLoginCheckPattern = null;
    
    /**
     * URL for the form login
     * 
     * @var ?string $formLoginUrl
     */
	#[\JMS\Serializer\Annotation\SerializedName('form_login_url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $formLoginUrl = null;
    
    /**
     * Use basic authentication in scan
     * 
     * @var ?bool $hasBasicAuth
     */
	#[\JMS\Serializer\Annotation\SerializedName('has_basic_auth')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasBasicAuth = null;
    
    /**
     * Does the resource use form login
     * 
     * @var ?bool $hasFormLogin
     */
	#[\JMS\Serializer\Annotation\SerializedName('has_form_login')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $hasFormLogin = null;
    
    /**
     * Custom headers name value pairs
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\Headers> $headers
     */
	#[\JMS\Serializer\Annotation\SerializedName('headers')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\Headers>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $headers = null;
    
    /**
     * Site host
     * 
     * @var ?string $host
     */
	#[\JMS\Serializer\Annotation\SerializedName('host')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $host = null;
    
    /**
     * Object id.
     * 
     * @var ?string $id
     */
	#[\JMS\Serializer\Annotation\SerializedName('id')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $id = null;
    
    /**
     * Custom name for the resource
     * 
     * @var ?string $name
     */
	#[\JMS\Serializer\Annotation\SerializedName('name')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $name = null;
    
    /**
     * List of frameworks detected on this resource
     * 
     * @var ?array<string> $stack
     */
	#[\JMS\Serializer\Annotation\SerializedName('stack')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $stack = null;
    
    /**
     * Site URL, it should include the path if the site is not located at the root. This URL can only be set once.
     * 
     * 
     * 
     * @var ?string $url
     */
	#[\JMS\Serializer\Annotation\SerializedName('url')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $url = null;
    
    /**
     * Verification date time
     * 
     * @var ?\DateTime $verificationDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('verification_date')]
    #[\JMS\Serializer\Annotation\Type("DateTime<'Y-m-d\TH:i:s.up'>")]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?\DateTime $verificationDate = null;
    
    /**
     * Reason for last verification failure.
     * 
     * @var ?string $verificationLastError
     */
	#[\JMS\Serializer\Annotation\SerializedName('verification_last_error')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $verificationLastError = null;
    
    /**
     * Type of verification:
     * 
     * * dns - we look or a TXT record on the host you registered containing
     * `Probely=<verification_token>`
     * * file - on the root of the path you registered we look for a file
     * named `<verification token>` containing `Probely`.
     * 
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\VerificationMethodEnum $verificationMethod
     */
	#[\JMS\Serializer\Annotation\SerializedName('verification_method')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\VerificationMethodEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?VerificationMethodEnum $verificationMethod = null;
    
    /**
     * Token used to verify
     * 
     * @var ?string $verificationToken
     */
	#[\JMS\Serializer\Annotation\SerializedName('verification_token')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $verificationToken = null;
    
    /**
     * Has resource ownership been verified
     * 
     * @var ?bool $verified
     */
	#[\JMS\Serializer\Annotation\SerializedName('verified')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $verified = null;
    
    /**
     * $whitelist
     * 
     * @var ?array<string> $whitelist
     */
	#[\JMS\Serializer\Annotation\SerializedName('whitelist')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $whitelist = null;
    
	public function __construct()
	{
		$this->basicAuth = null;
		$this->changed = null;
		$this->changedBy = null;
		$this->cookies = null;
		$this->desc = null;
		$this->formLogin = null;
		$this->formLoginCheckPattern = null;
		$this->formLoginUrl = null;
		$this->hasBasicAuth = null;
		$this->hasFormLogin = null;
		$this->headers = null;
		$this->host = null;
		$this->id = null;
		$this->name = null;
		$this->stack = null;
		$this->url = null;
		$this->verificationDate = null;
		$this->verificationLastError = null;
		$this->verificationMethod = null;
		$this->verificationToken = null;
		$this->verified = null;
		$this->whitelist = null;
	}
}
