/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ProvisionedProductPlanTypeEnum } from "./provisionedproductplantypeenum";
import { Tag } from "./tag";
import { UpdateProvisioningParameter } from "./updateprovisioningparameter";
import { Expose, Type } from "class-transformer";

export class CreateProvisionedProductPlanInput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "AcceptLanguage" })
  acceptLanguage?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "IdempotencyToken" })
  idempotencyToken: string;

  @SpeakeasyMetadata()
  @Expose({ name: "NotificationArns" })
  notificationArns?: string[];

  @SpeakeasyMetadata()
  @Expose({ name: "PathId" })
  pathId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PlanName" })
  planName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "PlanType" })
  planType: ProvisionedProductPlanTypeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "ProductId" })
  productId: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProvisionedProductName" })
  provisionedProductName: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ProvisioningArtifactId" })
  provisioningArtifactId: string;

  @SpeakeasyMetadata({ elemType: UpdateProvisioningParameter })
  @Expose({ name: "ProvisioningParameters" })
  @Type(() => UpdateProvisioningParameter)
  provisioningParameters?: UpdateProvisioningParameter[];

  @SpeakeasyMetadata({ elemType: Tag })
  @Expose({ name: "Tags" })
  @Type(() => Tag)
  tags?: Tag[];
}
