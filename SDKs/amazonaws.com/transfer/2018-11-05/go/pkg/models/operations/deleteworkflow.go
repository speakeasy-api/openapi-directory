// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"net/http"
	"openapi/pkg/models/shared"
)

// DeleteWorkflowXAmzTargetEnum
type DeleteWorkflowXAmzTargetEnum string

const (
	DeleteWorkflowXAmzTargetEnumTransferServiceDeleteWorkflow DeleteWorkflowXAmzTargetEnum = "TransferService.DeleteWorkflow"
)

func (e DeleteWorkflowXAmzTargetEnum) ToPointer() *DeleteWorkflowXAmzTargetEnum {
	return &e
}

func (e *DeleteWorkflowXAmzTargetEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "TransferService.DeleteWorkflow":
		*e = DeleteWorkflowXAmzTargetEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteWorkflowXAmzTargetEnum: %v", v)
	}
}

type DeleteWorkflowRequest struct {
	DeleteWorkflowRequest shared.DeleteWorkflowRequest `request:"mediaType=application/json"`
	XAmzAlgorithm         *string                      `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256     *string                      `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential        *string                      `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate              *string                      `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken     *string                      `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature         *string                      `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders     *string                      `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
	XAmzTarget            DeleteWorkflowXAmzTargetEnum `header:"style=simple,explode=false,name=X-Amz-Target"`
}

type DeleteWorkflowResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	ContentType           string
	// InternalServiceError
	InternalServiceError interface{}
	// InvalidRequestException
	InvalidRequestException interface{}
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceUnavailableException
	ServiceUnavailableException interface{}
	StatusCode                  int
	RawResponse                 *http.Response
}
