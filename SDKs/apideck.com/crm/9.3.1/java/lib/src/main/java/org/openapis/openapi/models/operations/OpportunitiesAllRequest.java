/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;
import org.openapis.openapi.utils.SpeakeasyMetadata;

public class OpportunitiesAllRequest {
    /**
     * Cursor to start from. You can find cursors for next/previous pages in the meta.cursors property of the response.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=cursor")
    public String cursor;

    public OpportunitiesAllRequest withCursor(String cursor) {
        this.cursor = cursor;
        return this;
    }
    
    /**
     * The 'fields' parameter allows API users to specify the fields they want to include in the API response. If this parameter is not present, the API will return all available fields. If this parameter is present, only the fields specified in the comma-separated string will be included in the response. Nested properties can also be requested by using a dot notation. &lt;br /&gt;&lt;br /&gt;Example: `fields=name,email,addresses.city`&lt;br /&gt;&lt;br /&gt;In the example above, the response will only include the fields "name", "email" and "addresses.city". If any other fields are available, they will be excluded.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=fields")
    public String fields;

    public OpportunitiesAllRequest withFields(String fields) {
        this.fields = fields;
        return this;
    }
    
    /**
     * Apply filters
     */
    @SpeakeasyMetadata("queryParam:style=deepObject,explode=true,name=filter")
    public org.openapis.openapi.models.shared.OpportunitiesFilter filter;

    public OpportunitiesAllRequest withFilter(org.openapis.openapi.models.shared.OpportunitiesFilter filter) {
        this.filter = filter;
        return this;
    }
    
    /**
     * Number of results to return. Minimum 1, Maximum 200, Default 20
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;

    public OpportunitiesAllRequest withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * Include raw response. Mostly used for debugging purposes
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=raw")
    public Boolean raw;

    public OpportunitiesAllRequest withRaw(Boolean raw) {
        this.raw = raw;
        return this;
    }
    
    /**
     * Apply sorting
     */
    @SpeakeasyMetadata("queryParam:style=deepObject,explode=true,name=sort")
    public org.openapis.openapi.models.shared.OpportunitiesSort sort;

    public OpportunitiesAllRequest withSort(org.openapis.openapi.models.shared.OpportunitiesSort sort) {
        this.sort = sort;
        return this;
    }
    
    /**
     * The ID of your Unify application
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-apideck-app-id")
    public String xApideckAppId;

    public OpportunitiesAllRequest withXApideckAppId(String xApideckAppId) {
        this.xApideckAppId = xApideckAppId;
        return this;
    }
    
    /**
     * ID of the consumer which you want to get or push data from
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-apideck-consumer-id")
    public String xApideckConsumerId;

    public OpportunitiesAllRequest withXApideckConsumerId(String xApideckConsumerId) {
        this.xApideckConsumerId = xApideckConsumerId;
        return this;
    }
    
    /**
     * Provide the service id you want to call (e.g., pipedrive). Only needed when a consumer has activated multiple integrations for a Unified API.
     */
    @SpeakeasyMetadata("header:style=simple,explode=false,name=x-apideck-service-id")
    public String xApideckServiceId;

    public OpportunitiesAllRequest withXApideckServiceId(String xApideckServiceId) {
        this.xApideckServiceId = xApideckServiceId;
        return this;
    }
    
    public OpportunitiesAllRequest(@JsonProperty("x-apideck-app-id") String xApideckAppId, @JsonProperty("x-apideck-consumer-id") String xApideckConsumerId) {
        this.xApideckAppId = xApideckAppId;
        this.xApideckConsumerId = xApideckConsumerId;
  }
}
