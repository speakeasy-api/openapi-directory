/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListOrganizationInvitationsQueryParams {
    /**
     * This is the maximum number of objects that may be returned
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=limit")
    public Long limit;
    public ListOrganizationInvitationsQueryParams withLimit(Long limit) {
        this.limit = limit;
        return this;
    }
    
    /**
     * An opaque string cursor to fetch the next page of data.
     * The paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=next")
    public String next;
    public ListOrganizationInvitationsQueryParams withNext(String next) {
        this.next = next;
        return this;
    }
    
    /**
     * An opaque string cursor to fetch the previous page of data.
     * The paginated API URLs are returned in the `Link` header when requesting the API. These URLs will contain a `next` and `previous` cursor based on the available data.
     * 
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=previous")
    public String previous;
    public ListOrganizationInvitationsQueryParams withPrevious(String previous) {
        this.previous = previous;
        return this;
    }
    
    /**
     * Filter users by role
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=role")
    public ListOrganizationInvitationsRoleEnum role;
    public ListOrganizationInvitationsQueryParams withRole(ListOrganizationInvitationsRoleEnum role) {
        this.role = role;
        return this;
    }
    
}
