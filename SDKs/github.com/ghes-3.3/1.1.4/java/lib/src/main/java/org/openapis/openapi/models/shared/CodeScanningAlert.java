/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * CodeScanningAlert - Response
 */
public class CodeScanningAlert {
    /**
     * The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public CodeScanningAlert withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
     */
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("dismissed_at")
    public OffsetDateTime dismissedAt;

    public CodeScanningAlert withDismissedAt(OffsetDateTime dismissedAt) {
        this.dismissedAt = dismissedAt;
        return this;
    }
    
    /**
     * A GitHub user.
     */
    @JsonProperty("dismissed_by")
    public NullableSimpleUser dismissedBy;

    public CodeScanningAlert withDismissedBy(NullableSimpleUser dismissedBy) {
        this.dismissedBy = dismissedBy;
        return this;
    }
    
    /**
     * **Required when the state is dismissed.** The reason for dismissing or closing the alert.
     */
    @JsonProperty("dismissed_reason")
    public CodeScanningAlertDismissedReasonEnum dismissedReason;

    public CodeScanningAlert withDismissedReason(CodeScanningAlertDismissedReasonEnum dismissedReason) {
        this.dismissedReason = dismissedReason;
        return this;
    }
    
    /**
     * The GitHub URL of the alert resource.
     */
    @JsonProperty("html_url")
    public String htmlUrl;

    public CodeScanningAlert withHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
        return this;
    }
    
    /**
     * The REST API URL for fetching the list of instances for an alert.
     */
    @JsonProperty("instances_url")
    public String instancesUrl;

    public CodeScanningAlert withInstancesUrl(String instancesUrl) {
        this.instancesUrl = instancesUrl;
        return this;
    }
    
    @JsonProperty("most_recent_instance")
    public CodeScanningAlertInstance mostRecentInstance;

    public CodeScanningAlert withMostRecentInstance(CodeScanningAlertInstance mostRecentInstance) {
        this.mostRecentInstance = mostRecentInstance;
        return this;
    }
    
    /**
     * The security alert number.
     */
    @JsonProperty("number")
    public Long number;

    public CodeScanningAlert withNumber(Long number) {
        this.number = number;
        return this;
    }
    
    @JsonProperty("rule")
    public CodeScanningAlertRule rule;

    public CodeScanningAlert withRule(CodeScanningAlertRule rule) {
        this.rule = rule;
        return this;
    }
    
    /**
     * State of a code scanning alert.
     */
    @JsonProperty("state")
    public CodeScanningAlertStateEnum state;

    public CodeScanningAlert withState(CodeScanningAlertStateEnum state) {
        this.state = state;
        return this;
    }
    
    @JsonProperty("tool")
    public CodeScanningAnalysisTool tool;

    public CodeScanningAlert withTool(CodeScanningAnalysisTool tool) {
        this.tool = tool;
        return this;
    }
    
    /**
     * The REST API URL of the alert resource.
     */
    @JsonProperty("url")
    public String url;

    public CodeScanningAlert withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public CodeScanningAlert(@JsonProperty("created_at") OffsetDateTime createdAt, @JsonProperty("dismissed_at") OffsetDateTime dismissedAt, @JsonProperty("dismissed_by") NullableSimpleUser dismissedBy, @JsonProperty("dismissed_reason") CodeScanningAlertDismissedReasonEnum dismissedReason, @JsonProperty("html_url") String htmlUrl, @JsonProperty("instances_url") String instancesUrl, @JsonProperty("most_recent_instance") CodeScanningAlertInstance mostRecentInstance, @JsonProperty("number") Long number, @JsonProperty("rule") CodeScanningAlertRule rule, @JsonProperty("state") CodeScanningAlertStateEnum state, @JsonProperty("tool") CodeScanningAnalysisTool tool, @JsonProperty("url") String url) {
        this.createdAt = createdAt;
        this.dismissedAt = dismissedAt;
        this.dismissedBy = dismissedBy;
        this.dismissedReason = dismissedReason;
        this.htmlUrl = htmlUrl;
        this.instancesUrl = instancesUrl;
        this.mostRecentInstance = mostRecentInstance;
        this.number = number;
        this.rule = rule;
        this.state = state;
        this.tool = tool;
        this.url = url;
  }
}
