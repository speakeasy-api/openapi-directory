"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from enum import Enum
from typing import Optional

class CreateConfigInputCountryEnum(str, Enum):
    r"""Country where this set of rules applies. Use \\"all\\" if the check type searches by name by relying on international databases"""
    ALL = 'ALL'
    BR = 'BR'
    CL = 'CL'
    CO = 'CO'
    CR = 'CR'
    EC = 'EC'
    MX = 'MX'
    PE = 'PE'
    AR = 'AR'


@dataclasses.dataclass
class CreateConfigInput:
    r"""Represents paramaters required to create a score configuration"""
    
    country: CreateConfigInputCountryEnum = dataclasses.field(metadata={'form': { 'field_name': 'country' }})
    r"""Country where this set of rules applies. Use \\"all\\" if the check type searches by name by relying on international databases"""  
    type: str = dataclasses.field(metadata={'form': { 'field_name': 'type' }})
    r"""Score configuration name. It cannot be person, vehicle, or company"""  
    dataset_affiliations_and_insurances: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'dataset_affiliations_and_insurances' }})
    r"""Affiliation and insurance weight for score calculation. From 0 to 1"""  
    dataset_alert_in_media: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'dataset_alert_in_media' }})
    r"""Alert in media weight for score calculation. From 0 to 1"""  
    dataset_business_background: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'dataset_business_background' }})
    r"""Business background weight for score calculation. From 0 to 1"""  
    dataset_criminal_record: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'dataset_criminal_record' }})
    r"""Criminal record weight for score calculation. From 0 to 1"""  
    dataset_driving_licenses: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'dataset_driving_licenses' }})
    r"""Driving license weight for score calculation. From 0 to 1"""  
    dataset_international_background: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'dataset_international_background' }})
    r"""International background weight for score calculation. From 0 to 1"""  
    dataset_legal_background: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'dataset_legal_background' }})
    r"""Legal background weight for score calculation. From 0 to 1"""  
    dataset_personal_identity: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'dataset_personal_identity' }})
    r"""Personal identity weight for score calculation. From 0 to 1"""  
    dataset_professional_background: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'dataset_professional_background' }})
    r"""Professional background weight for score calculation. From 0 to 1"""  
    dataset_taxes_and_finances: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'dataset_taxes_and_finances' }})
    r"""Taxes and financial background weight for score calculation. From 0 to 1"""  
    dataset_traffic_fines: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'dataset_traffic_fines' }})
    r"""Traffic fines weight for score calculation. From 0 to 1"""  
    dataset_vehicle_information: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'dataset_vehicle_information' }})
    r"""Vehicle information weight for score calculation. From 0 to 1"""  
    dataset_vehicle_permits: Optional[float] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'dataset_vehicle_permits' }})
    r"""Vehicle certificate background weight for score calculation. From 0 to 1"""  
    