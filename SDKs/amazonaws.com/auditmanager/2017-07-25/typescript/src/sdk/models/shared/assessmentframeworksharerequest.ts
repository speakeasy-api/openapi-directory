/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { ShareRequestStatusEnum } from "./sharerequeststatusenum";
import { Expose, Transform } from "class-transformer";

/**
 *  Represents a share request for a custom framework in Audit Manager.
 */
export class AssessmentFrameworkShareRequest extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "comment" })
  comment?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "complianceType" })
  complianceType?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "creationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  creationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "customControlsCount" })
  customControlsCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "destinationAccount" })
  destinationAccount?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "destinationRegion" })
  destinationRegion?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "expirationTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expirationTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "frameworkDescription" })
  frameworkDescription?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "frameworkId" })
  frameworkId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "frameworkName" })
  frameworkName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "lastUpdated" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  lastUpdated?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "sourceAccount" })
  sourceAccount?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "standardControlsCount" })
  standardControlsCount?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: ShareRequestStatusEnum;
}
