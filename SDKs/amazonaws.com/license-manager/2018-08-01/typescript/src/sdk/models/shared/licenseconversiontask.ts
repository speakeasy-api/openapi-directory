/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LicenseConversionContext } from "./licenseconversioncontext";
import { LicenseConversionTaskStatusEnum } from "./licenseconversiontaskstatusenum";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Information about a license type conversion task.
 */
export class LicenseConversionTask extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "DestinationLicenseContext" })
  @Type(() => LicenseConversionContext)
  destinationLicenseContext?: LicenseConversionContext;

  @SpeakeasyMetadata()
  @Expose({ name: "EndTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  endTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "LicenseConversionTaskId" })
  licenseConversionTaskId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "LicenseConversionTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  licenseConversionTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "ResourceArn" })
  resourceArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "SourceLicenseContext" })
  @Type(() => LicenseConversionContext)
  sourceLicenseContext?: LicenseConversionContext;

  @SpeakeasyMetadata()
  @Expose({ name: "StartTime" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  startTime?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "Status" })
  status?: LicenseConversionTaskStatusEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "StatusMessage" })
  statusMessage?: string;
}
