/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { EstimationCreateAttachmentApiModel } from "./estimationcreateattachmentapimodel";
import { EstimationCreateItemApiModel } from "./estimationcreateitemapimodel";
import { EstimationGatewayApiModel } from "./estimationgatewayapimodel";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Indicate the status of the estimation (paid/unpaid/overdue)
 */
export enum EstimationCreateApiModelStatusEnum {
  Draft = "Draft",
  Accepted = "Accepted",
  Rejected = "Rejected",
}

export class EstimationCreateApiModel extends SpeakeasyBase {
  /**
   * List of estimation attachments
   */
  @SpeakeasyMetadata({
    data: "form, name=Attachments;json=true",
    elemType: EstimationCreateAttachmentApiModel,
  })
  @Expose({ name: "Attachments" })
  @Type(() => EstimationCreateAttachmentApiModel)
  attachments?: EstimationCreateAttachmentApiModel[];

  /**
   * The client to whom this estimation is assigned
   */
  @SpeakeasyMetadata({ data: "form, name=ClientId" })
  @Expose({ name: "ClientId" })
  clientId?: number;

  /**
   * Indicate from which estimation this estimation has been cloned from
   */
  @SpeakeasyMetadata({ data: "form, name=ClonedFromId" })
  @Expose({ name: "ClonedFromId" })
  clonedFromId?: number;

  /**
   * Id of the currency for the estimation amounts
   */
  @SpeakeasyMetadata({ data: "form, name=CurrencyId" })
  @Expose({ name: "CurrencyId" })
  currencyId?: number;

  /**
   * Indicates when the estimation will be proclamed as due
   */
  @SpeakeasyMetadata({
    data: "form, name=ExpiresOn;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  @Expose({ name: "ExpiresOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  expiresOn?: Date;

  /**
   * Indicates when the estimation was issued
   */
  @SpeakeasyMetadata({
    data: "form, name=IssuedOn;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  @Expose({ name: "IssuedOn" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  issuedOn?: Date;

  /**
   * List of estimation items
   */
  @SpeakeasyMetadata({
    data: "form, name=Items;json=true",
    elemType: EstimationCreateItemApiModel,
  })
  @Expose({ name: "Items" })
  @Type(() => EstimationCreateItemApiModel)
  items?: EstimationCreateItemApiModel[];

  /**
   * Internal note regarding the estimation
   */
  @SpeakeasyMetadata({ data: "form, name=Notes" })
  @Expose({ name: "Notes" })
  notes?: string;

  /**
   * Unique estimation number
   */
  @SpeakeasyMetadata({ data: "form, name=Number" })
  @Expose({ name: "Number" })
  number?: string;

  /**
   * List of enabled payment gateways for this estimation
   */
  @SpeakeasyMetadata({
    data: "form, name=PaymentGateways;json=true",
    elemType: EstimationGatewayApiModel,
  })
  @Expose({ name: "PaymentGateways" })
  @Type(() => EstimationGatewayApiModel)
  paymentGateways?: EstimationGatewayApiModel[];

  /**
   * Unique number generated by the buyer
   */
  @SpeakeasyMetadata({ data: "form, name=PoNumber" })
  @Expose({ name: "PoNumber" })
  poNumber?: string;

  /**
   * Indicate the status of the estimation (paid/unpaid/overdue)
   */
  @SpeakeasyMetadata({ data: "form, name=Status" })
  @Expose({ name: "Status" })
  status?: EstimationCreateApiModelStatusEnum;

  /**
   * Terms of agreement
   */
  @SpeakeasyMetadata({ data: "form, name=Terms" })
  @Expose({ name: "Terms" })
  terms?: string;
}
