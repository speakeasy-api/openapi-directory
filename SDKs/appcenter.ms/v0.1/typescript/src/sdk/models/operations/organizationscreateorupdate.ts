/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class OrganizationsCreateOrUpdateSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=apiKey;subtype=header;name=X-API-Token",
  })
  apiToken: string;
}

/**
 * The organization data
 */
export class OrganizationsCreateOrUpdateRequestBody extends SpeakeasyBase {
  /**
   * The display name of the organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName?: string;

  /**
   * The name of the organization used in URLs
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;
}

export enum OrganizationsCreateOrUpdateDefaultApplicationJSONErrorCodeEnum {
  BadRequest = "BadRequest",
  Conflict = "Conflict",
  NotAcceptable = "NotAcceptable",
  NotFound = "NotFound",
  InternalServerError = "InternalServerError",
  Unauthorized = "Unauthorized",
  TooManyRequests = "TooManyRequests",
}

export class OrganizationsCreateOrUpdateDefaultApplicationJSONError extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "code" })
  code: OrganizationsCreateOrUpdateDefaultApplicationJSONErrorCodeEnum;

  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message: string;
}

/**
 * Error
 */
export class OrganizationsCreateOrUpdateDefaultApplicationJSON extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "error" })
  @Type(() => OrganizationsCreateOrUpdateDefaultApplicationJSONError)
  error: OrganizationsCreateOrUpdateDefaultApplicationJSONError;
}

/**
 * The creation origin of this organization
 */
export enum OrganizationsCreateOrUpdate201ApplicationJSONOriginEnum {
  Appcenter = "appcenter",
  Hockeyapp = "hockeyapp",
}

/**
 * Created
 */
export class OrganizationsCreateOrUpdate201ApplicationJSON extends SpeakeasyBase {
  /**
   * The URL to a user-uploaded Avatar image
   */
  @SpeakeasyMetadata()
  @Expose({ name: "avatar_url" })
  avatarUrl?: string;

  /**
   * The creation date of this organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt: string;

  /**
   * The display name of the organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "display_name" })
  displayName: string;

  /**
   * The internal unique id (UUID) of the organization.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id: string;

  /**
   * The slug name of the organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  /**
   * The creation origin of this organization
   */
  @SpeakeasyMetadata()
  @Expose({ name: "origin" })
  origin: OrganizationsCreateOrUpdate201ApplicationJSONOriginEnum;

  /**
   * The date the organization was last updated at
   */
  @SpeakeasyMetadata()
  @Expose({ name: "updated_at" })
  updatedAt: string;
}

export class OrganizationsCreateOrUpdateResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  organizationsCreateOrUpdate201ApplicationJSONObject?: OrganizationsCreateOrUpdate201ApplicationJSON;

  /**
   * Error
   */
  @SpeakeasyMetadata()
  organizationsCreateOrUpdateDefaultApplicationJSONObject?: OrganizationsCreateOrUpdateDefaultApplicationJSON;
}
