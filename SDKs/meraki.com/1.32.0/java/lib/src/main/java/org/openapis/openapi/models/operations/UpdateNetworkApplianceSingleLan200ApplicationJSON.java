/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * UpdateNetworkApplianceSingleLan200ApplicationJSON - Successful operation
 */
public class UpdateNetworkApplianceSingleLan200ApplicationJSON {
    /**
     * The local IP of the appliance on the single LAN
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("applianceIp")
    public String applianceIp;

    public UpdateNetworkApplianceSingleLan200ApplicationJSON withApplianceIp(String applianceIp) {
        this.applianceIp = applianceIp;
        return this;
    }
    
    /**
     * IPv6 configuration on the single LAN
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("ipv6")
    public UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6 ipv6;

    public UpdateNetworkApplianceSingleLan200ApplicationJSON withIpv6(UpdateNetworkApplianceSingleLan200ApplicationJSONIpv6 ipv6) {
        this.ipv6 = ipv6;
        return this;
    }
    
    /**
     * Mandatory DHCP will enforce that clients connecting to this single LAN must use the IP address assigned by the DHCP server. Clients who use a static IP address won't be able to associate. Only available on firmware versions 17.0 and above
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("mandatoryDhcp")
    public UpdateNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp mandatoryDhcp;

    public UpdateNetworkApplianceSingleLan200ApplicationJSON withMandatoryDhcp(UpdateNetworkApplianceSingleLan200ApplicationJSONMandatoryDhcp mandatoryDhcp) {
        this.mandatoryDhcp = mandatoryDhcp;
        return this;
    }
    
    /**
     * The subnet of the single LAN
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("subnet")
    public String subnet;

    public UpdateNetworkApplianceSingleLan200ApplicationJSON withSubnet(String subnet) {
        this.subnet = subnet;
        return this;
    }
    
    public UpdateNetworkApplianceSingleLan200ApplicationJSON(){}
}
