<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class CalendarNotification
{
    /**
     * The method used to deliver the notification. The possible value is:  
     * 
     * - "email" - Notifications are sent via email.  
     * Required when adding a notification.
     * 
     * @var ?string $method
     */
	#[\JMS\Serializer\Annotation\SerializedName('method')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $method = null;
    
    /**
     * The type of notification. Possible values are:  
     * 
     * - "eventCreation" - Notification sent when a new event is put on the calendar. 
     * - "eventChange" - Notification sent when an event is changed. 
     * - "eventCancellation" - Notification sent when an event is cancelled. 
     * - "eventResponse" - Notification sent when an attendee responds to the event invitation. 
     * - "agenda" - An agenda with the events of the day (sent out in the morning).  
     * Required when adding a notification.
     * 
     * @var ?string $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $type = null;
    
	public function __construct()
	{
		$this->method = null;
		$this->type = null;
	}
}
