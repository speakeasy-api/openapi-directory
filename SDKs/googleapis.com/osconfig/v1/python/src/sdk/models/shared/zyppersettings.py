"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ZypperSettings:
    r"""Zypper patching is performed by running `zypper patch`. See also https://en.opensuse.org/SDB:Zypper_manual."""
    
    categories: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('categories'), 'exclude': lambda f: f is None }})
    r"""Install only patches with these categories. Common categories include security, recommended, and feature."""  
    excludes: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('excludes'), 'exclude': lambda f: f is None }})
    r"""List of patches to exclude from update."""  
    exclusive_patches: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exclusivePatches'), 'exclude': lambda f: f is None }})
    r"""An exclusive list of patches to be updated. These are the only patches that will be installed using 'zypper patch patch:' command. This field must not be used with any other patch configuration fields."""  
    severities: Optional[list[str]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('severities'), 'exclude': lambda f: f is None }})
    r"""Install only patches with these severities. Common severities include critical, important, moderate, and low."""  
    with_optional: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('withOptional'), 'exclude': lambda f: f is None }})
    r"""Adds the `--with-optional` flag to `zypper patch`."""  
    with_update: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('withUpdate'), 'exclude': lambda f: f is None }})
    r"""Adds the `--with-update` flag, to `zypper patch`."""  
    