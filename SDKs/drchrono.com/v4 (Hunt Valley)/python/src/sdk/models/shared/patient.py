import dataclasses
from datetime import date, datetime
from marshmallow import fields
import dateutil.parser
from typing import Optional
from enum import Enum
from dataclasses_json import dataclass_json
from sdk import utils

class PatientAutoAccidentInsuranceAutoAccidentClaimRepStateEnum(str, Enum):
    AL = "AL"
    AK = "AK"
    AS = "AS"
    AZ = "AZ"
    AR = "AR"
    AA = "AA"
    AE = "AE"
    AP = "AP"
    CA = "CA"
    CO = "CO"
    CT = "CT"
    DE = "DE"
    DC = "DC"
    FL = "FL"
    GA = "GA"
    GU = "GU"
    HI = "HI"
    ID = "ID"
    IL = "IL"
    IN = "IN"
    IA = "IA"
    KS = "KS"
    KY = "KY"
    LA = "LA"
    ME = "ME"
    MD = "MD"
    MA = "MA"
    MI = "MI"
    MN = "MN"
    MS = "MS"
    MO = "MO"
    MT = "MT"
    NE = "NE"
    NV = "NV"
    NH = "NH"
    NJ = "NJ"
    NM = "NM"
    NY = "NY"
    NC = "NC"
    ND = "ND"
    MP = "MP"
    OH = "OH"
    OK = "OK"
    OR = "OR"
    PA = "PA"
    PR = "PR"
    RI = "RI"
    SC = "SC"
    SD = "SD"
    TN = "TN"
    TX = "TX"
    UT = "UT"
    VT = "VT"
    VI = "VI"
    VA = "VA"
    WA = "WA"
    WV = "WV"
    WI = "WI"
    WY = "WY"

class PatientAutoAccidentInsuranceAutoAccidentPatientRelationshipToSubscriberEnum(str, Enum):
    UNKNOWN = ""
    ONE = "01"
    FOUR = "04"
    FIVE = "05"
    SEVEN = "07"
    TEN = "10"
    FIFTEEN = "15"
    SEVENTEEN = "17"
    NINETEEN = "19"
    TWENTY = "20"
    TWENTY_ONE = "21"
    TWENTY_TWO = "22"
    TWENTY_THREE = "23"
    TWENTY_FOUR = "24"
    TWENTY_NINE = "29"
    THIRTY_TWO = "32"
    THIRTY_THREE = "33"
    THIRTY_SIX = "36"
    THIRTY_NINE = "39"
    FORTY = "40"
    FORTY_ONE = "41"
    FORTY_THREE = "43"
    FIFTY_THREE = "53"
    SEVENTY_SIX = "76"
    G8 = "G8"

class PatientAutoAccidentInsuranceAutoAccidentPayerStateEnum(str, Enum):
    AL = "AL"
    AK = "AK"
    AS = "AS"
    AZ = "AZ"
    AR = "AR"
    AA = "AA"
    AE = "AE"
    AP = "AP"
    CA = "CA"
    CO = "CO"
    CT = "CT"
    DE = "DE"
    DC = "DC"
    FL = "FL"
    GA = "GA"
    GU = "GU"
    HI = "HI"
    ID = "ID"
    IL = "IL"
    IN = "IN"
    IA = "IA"
    KS = "KS"
    KY = "KY"
    LA = "LA"
    ME = "ME"
    MD = "MD"
    MA = "MA"
    MI = "MI"
    MN = "MN"
    MS = "MS"
    MO = "MO"
    MT = "MT"
    NE = "NE"
    NV = "NV"
    NH = "NH"
    NJ = "NJ"
    NM = "NM"
    NY = "NY"
    NC = "NC"
    ND = "ND"
    MP = "MP"
    OH = "OH"
    OK = "OK"
    OR = "OR"
    PA = "PA"
    PR = "PR"
    RI = "RI"
    SC = "SC"
    SD = "SD"
    TN = "TN"
    TX = "TX"
    UT = "UT"
    VT = "VT"
    VI = "VI"
    VA = "VA"
    WA = "WA"
    WV = "WV"
    WI = "WI"
    WY = "WY"

class PatientAutoAccidentInsuranceAutoAccidentSignificantInjuryEnum(str, Enum):
    YES = "YES"
    NO = "NO"
    N_A = "N\A"

class PatientAutoAccidentInsuranceAutoAccidentStateOfOccurrenceEnum(str, Enum):
    AL = "AL"
    AK = "AK"
    AS = "AS"
    AZ = "AZ"
    AR = "AR"
    AA = "AA"
    AE = "AE"
    AP = "AP"
    CA = "CA"
    CO = "CO"
    CT = "CT"
    DE = "DE"
    DC = "DC"
    FL = "FL"
    GA = "GA"
    GU = "GU"
    HI = "HI"
    ID = "ID"
    IL = "IL"
    IN = "IN"
    IA = "IA"
    KS = "KS"
    KY = "KY"
    LA = "LA"
    ME = "ME"
    MD = "MD"
    MA = "MA"
    MI = "MI"
    MN = "MN"
    MS = "MS"
    MO = "MO"
    MT = "MT"
    NE = "NE"
    NV = "NV"
    NH = "NH"
    NJ = "NJ"
    NM = "NM"
    NY = "NY"
    NC = "NC"
    ND = "ND"
    MP = "MP"
    OH = "OH"
    OK = "OK"
    OR = "OR"
    PA = "PA"
    PR = "PR"
    RI = "RI"
    SC = "SC"
    SD = "SD"
    TN = "TN"
    TX = "TX"
    UT = "UT"
    VT = "VT"
    VI = "VI"
    VA = "VA"
    WA = "WA"
    WV = "WV"
    WI = "WI"
    WY = "WY"

class PatientAutoAccidentInsuranceAutoAccidentSubscriberStateEnum(str, Enum):
    AL = "AL"
    AK = "AK"
    AS = "AS"
    AZ = "AZ"
    AR = "AR"
    AA = "AA"
    AE = "AE"
    AP = "AP"
    CA = "CA"
    CO = "CO"
    CT = "CT"
    DE = "DE"
    DC = "DC"
    FL = "FL"
    GA = "GA"
    GU = "GU"
    HI = "HI"
    ID = "ID"
    IL = "IL"
    IN = "IN"
    IA = "IA"
    KS = "KS"
    KY = "KY"
    LA = "LA"
    ME = "ME"
    MD = "MD"
    MA = "MA"
    MI = "MI"
    MN = "MN"
    MS = "MS"
    MO = "MO"
    MT = "MT"
    NE = "NE"
    NV = "NV"
    NH = "NH"
    NJ = "NJ"
    NM = "NM"
    NY = "NY"
    NC = "NC"
    ND = "ND"
    MP = "MP"
    OH = "OH"
    OK = "OK"
    OR = "OR"
    PA = "PA"
    PR = "PR"
    RI = "RI"
    SC = "SC"
    SD = "SD"
    TN = "TN"
    TX = "TX"
    UT = "UT"
    VT = "VT"
    VI = "VI"
    VA = "VA"
    WA = "WA"
    WV = "WV"
    WI = "WI"
    WY = "WY"


@dataclass_json
@dataclasses.dataclass
class PatientAutoAccidentInsurance:
    auto_accident_case_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_case_number') }})
    auto_accident_claim_rep_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_claim_rep_address') }})
    auto_accident_claim_rep_city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_claim_rep_city') }})
    auto_accident_claim_rep_is_insurer: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_claim_rep_is_insurer') }})
    auto_accident_claim_rep_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_claim_rep_name') }})
    auto_accident_claim_rep_state: Optional[PatientAutoAccidentInsuranceAutoAccidentClaimRepStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_claim_rep_state') }})
    auto_accident_claim_rep_zip: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_claim_rep_zip') }})
    auto_accident_company: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_company') }})
    auto_accident_date_of_accident: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_date_of_accident') }})
    auto_accident_disabled_from_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_disabled_from_date') }})
    auto_accident_disabled_to_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_disabled_to_date') }})
    auto_accident_had_similar_condition: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_had_similar_condition') }})
    auto_accident_is_subscriber_the_patient: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_is_subscriber_the_patient') }})
    auto_accident_notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_notes') }})
    auto_accident_patient_relationship_to_subscriber: Optional[PatientAutoAccidentInsuranceAutoAccidentPatientRelationshipToSubscriberEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_patient_relationship_to_subscriber') }})
    auto_accident_payer_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_payer_address') }})
    auto_accident_payer_city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_payer_city') }})
    auto_accident_payer_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_payer_id') }})
    auto_accident_payer_state: Optional[PatientAutoAccidentInsuranceAutoAccidentPayerStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_payer_state') }})
    auto_accident_payer_zip: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_payer_zip') }})
    auto_accident_policy_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_policy_number') }})
    auto_accident_return_to_work_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_return_to_work_date') }})
    auto_accident_significant_injury: Optional[PatientAutoAccidentInsuranceAutoAccidentSignificantInjuryEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_significant_injury') }})
    auto_accident_significant_injury_notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_significant_injury_notes') }})
    auto_accident_similar_condition_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_similar_condition_date') }})
    auto_accident_similar_condition_notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_similar_condition_notes') }})
    auto_accident_state_of_occurrence: Optional[PatientAutoAccidentInsuranceAutoAccidentStateOfOccurrenceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_state_of_occurrence') }})
    auto_accident_still_under_care: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_still_under_care') }})
    auto_accident_subscriber_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_subscriber_address') }})
    auto_accident_subscriber_city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_subscriber_city') }})
    auto_accident_subscriber_date_of_birth: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_subscriber_date_of_birth') }})
    auto_accident_subscriber_first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_subscriber_first_name') }})
    auto_accident_subscriber_last_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_subscriber_last_name') }})
    auto_accident_subscriber_middle_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_subscriber_middle_name') }})
    auto_accident_subscriber_phone_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_subscriber_phone_number') }})
    auto_accident_subscriber_social_security: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_subscriber_social_security') }})
    auto_accident_subscriber_state: Optional[PatientAutoAccidentInsuranceAutoAccidentSubscriberStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_subscriber_state') }})
    auto_accident_subscriber_suffix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_subscriber_suffix') }})
    auto_accident_subscriber_zip_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_subscriber_zip_code') }})
    auto_accident_treatment_duration: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_treatment_duration') }})
    auto_accident_will_require_therapy: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_will_require_therapy') }})
    auto_accident_will_require_therapy_rec: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_will_require_therapy_rec') }})
    

@dataclass_json
@dataclasses.dataclass
class PatientCustomPatientFieldValue:
    r"""PatientCustomPatientFieldValue
    Custom demographic values the patient has
    """
    
    field_type: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('field_type') }})
    updated_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('updated_at') }})
    value: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('value') }})
    
class PatientEthnicityEnum(str, Enum):
    BLANK = "blank"
    HISPANIC = "hispanic"
    NOT_HISPANIC = "not_hispanic"
    DECLINED = "declined"

class PatientGenderEnum(str, Enum):
    UNKNOWN = ""
    MALE = "Male"
    FEMALE = "Female"
    OTHER = "Other"
    UNK = "UNK"
    ASKU = "ASKU"


@dataclass_json
@dataclasses.dataclass
class PatientPatientFlagType:
    r"""PatientPatientFlagType
    Array of patien flag type objects
    """
    
    archived: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('archived') }})
    color: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('color') }})
    created_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('created_at') }})
    doctor: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('doctor') }})
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('id') }})
    name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('name') }})
    priority: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('priority') }})
    updated_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('updated_at') }})
    

@dataclass_json
@dataclasses.dataclass
class PatientPatientFlag:
    r"""PatientPatientFlag
    Array of patient flag objects
    """
    
    archived: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('archived') }})
    created_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('created_at') }})
    flag_text: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('flag_text') }})
    flag_type: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('flag_type') }})
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('id') }})
    updated_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('updated_at') }})
    
class PatientPatientPaymentProfileEnum(str, Enum):
    UNKNOWN = ""
    CASH = "Cash"
    INSURANCE = "Insurance"
    INSURANCE_OUT_OF_NETWORK = "Insurance Out of Network"
    AUTO_ACCIDENT = "Auto Accident"
    WORKER_S_COMP = "Worker's Comp"

class PatientPatientStatusEnum(str, Enum):
    A = "A"
    I = "I"
    D = "D"

class PatientPreferredLanguageEnum(str, Enum):
    BLANK = "blank"
    ENG = "eng"
    ZHO = "zho"
    FRA = "fra"
    ITA = "ita"
    JPN = "jpn"
    POR = "por"
    RUS = "rus"
    SPA = "spa"
    OTHER = "other"
    UNKNOWN = "unknown"
    DECLINED = "declined"

class PatientPrimaryInsuranceInsurancePlanTypeEnum(str, Enum):
    UNKNOWN = ""
    AM = "AM"
    BL = "BL"
    CH = "CH"
    CI = "CI"
    SEVENTEEN = "17"
    DS = "DS"
    FOURTEEN = "14"
    FI = "FI"
    HM = "HM"
    SIXTEEN = "16"
    FIFTEEN = "15"
    LM = "LM"
    MC = "MC"
    MA = "MA"
    MB = "MB"
    ZZ = "ZZ"
    OF = "OF"
    ELEVEN = "11"
    THIRTEEN = "13"
    TWELVE = "12"
    TV = "TV"
    VA = "VA"
    WC = "WC"

class PatientPrimaryInsurancePatientRelationshipToSubscriberEnum(str, Enum):
    UNKNOWN = ""
    ONE = "01"
    FOUR = "04"
    FIVE = "05"
    SEVEN = "07"
    TEN = "10"
    FIFTEEN = "15"
    SEVENTEEN = "17"
    NINETEEN = "19"
    TWENTY = "20"
    TWENTY_ONE = "21"
    TWENTY_TWO = "22"
    TWENTY_THREE = "23"
    TWENTY_FOUR = "24"
    TWENTY_NINE = "29"
    THIRTY_TWO = "32"
    THIRTY_THREE = "33"
    THIRTY_SIX = "36"
    THIRTY_NINE = "39"
    FORTY = "40"
    FORTY_ONE = "41"
    FORTY_THREE = "43"
    FIFTY_THREE = "53"
    SEVENTY_SIX = "76"
    G8 = "G8"

class PatientPrimaryInsuranceSubscriberCountryEnum(str, Enum):
    UNKNOWN = ""
    AF = "AF"
    AX = "AX"
    AL = "AL"
    DZ = "DZ"
    AS = "AS"
    AD = "AD"
    AO = "AO"
    AI = "AI"
    AQ = "AQ"
    AG = "AG"
    AR = "AR"
    AM = "AM"
    AW = "AW"
    AU = "AU"
    AT = "AT"
    AZ = "AZ"
    BS = "BS"
    BH = "BH"
    BD = "BD"
    BB = "BB"
    BY = "BY"
    BE = "BE"
    BZ = "BZ"
    BJ = "BJ"
    BM = "BM"
    BT = "BT"
    BO = "BO"
    BQ = "BQ"
    BA = "BA"
    BW = "BW"
    BV = "BV"
    BR = "BR"
    IO = "IO"
    BN = "BN"
    BG = "BG"
    BF = "BF"
    BI = "BI"
    KH = "KH"
    CM = "CM"
    CA = "CA"
    CV = "CV"
    KY = "KY"
    CF = "CF"
    TD = "TD"
    CL = "CL"
    CN = "CN"
    CX = "CX"
    CC = "CC"
    CO = "CO"
    KM = "KM"
    CG = "CG"
    CD = "CD"
    CK = "CK"
    CR = "CR"
    CI = "CI"
    HR = "HR"
    CU = "CU"
    CW = "CW"
    CY = "CY"
    CZ = "CZ"
    CYM = "CYM"
    DK = "DK"
    DJ = "DJ"
    DM = "DM"
    DO = "DO"
    EC = "EC"
    EG = "EG"
    SV = "SV"
    GQ = "GQ"
    ER = "ER"
    EE = "EE"
    ET = "ET"
    FK = "FK"
    FO = "FO"
    FJ = "FJ"
    FI = "FI"
    FR = "FR"
    GF = "GF"
    PF = "PF"
    TF = "TF"
    GA = "GA"
    GM = "GM"
    GE = "GE"
    DE = "DE"
    GH = "GH"
    GI = "GI"
    GR = "GR"
    GL = "GL"
    GD = "GD"
    GP = "GP"
    GU = "GU"
    GT = "GT"
    GG = "GG"
    GN = "GN"
    GW = "GW"
    GY = "GY"
    HT = "HT"
    HM = "HM"
    VA = "VA"
    HN = "HN"
    HK = "HK"
    HU = "HU"
    IS = "IS"
    IN = "IN"
    ID = "ID"
    IR = "IR"
    IQ = "IQ"
    IE = "IE"
    IM = "IM"
    IL = "IL"
    IT = "IT"
    JM = "JM"
    JP = "JP"
    JE = "JE"
    JO = "JO"
    KZ = "KZ"
    KE = "KE"
    KI = "KI"
    KP = "KP"
    KR = "KR"
    XK = "XK"
    KW = "KW"
    KG = "KG"
    LA = "LA"
    LV = "LV"
    LB = "LB"
    LS = "LS"
    LR = "LR"
    LY = "LY"
    LI = "LI"
    LT = "LT"
    LU = "LU"
    MO = "MO"
    MK = "MK"
    MG = "MG"
    MW = "MW"
    MY = "MY"
    MV = "MV"
    ML = "ML"
    MT = "MT"
    MH = "MH"
    MQ = "MQ"
    MR = "MR"
    MU = "MU"
    YT = "YT"
    MX = "MX"
    FM = "FM"
    MD = "MD"
    MC = "MC"
    MN = "MN"
    ME = "ME"
    MS = "MS"
    MA = "MA"
    MZ = "MZ"
    MM = "MM"
    NA = "NA"
    NR = "NR"
    NP = "NP"
    NL = "NL"
    NC = "NC"
    NZ = "NZ"
    NI = "NI"
    NE = "NE"
    NG = "NG"
    NU = "NU"
    NF = "NF"
    MP = "MP"
    NO = "NO"
    OM = "OM"
    PK = "PK"
    PW = "PW"
    PS = "PS"
    PA = "PA"
    PG = "PG"
    PY = "PY"
    PE = "PE"
    PH = "PH"
    PN = "PN"
    PL = "PL"
    PT = "PT"
    PR = "PR"
    QA = "QA"
    RE = "RE"
    RO = "RO"
    RU = "RU"
    RW = "RW"
    BL = "BL"
    SH = "SH"
    KN = "KN"
    LC = "LC"
    MF = "MF"
    PM = "PM"
    VC = "VC"
    WS = "WS"
    SM = "SM"
    ST = "ST"
    SA = "SA"
    SN = "SN"
    RS = "RS"
    SC = "SC"
    SL = "SL"
    SG = "SG"
    SX = "SX"
    SK = "SK"
    SI = "SI"
    SB = "SB"
    SO = "SO"
    ZA = "ZA"
    GS = "GS"
    SS = "SS"
    ES = "ES"
    LK = "LK"
    SD = "SD"
    SR = "SR"
    SJ = "SJ"
    SZ = "SZ"
    SE = "SE"
    CH = "CH"
    SY = "SY"
    TW = "TW"
    TJ = "TJ"
    TZ = "TZ"
    TH = "TH"
    TL = "TL"
    TG = "TG"
    TK = "TK"
    TO = "TO"
    TT = "TT"
    TN = "TN"
    TR = "TR"
    TM = "TM"
    TC = "TC"
    TV = "TV"
    UG = "UG"
    UA = "UA"
    AE = "AE"
    GB = "GB"
    US = "US"
    UM = "UM"
    UY = "UY"
    UZ = "UZ"
    VU = "VU"
    VE = "VE"
    VN = "VN"
    VG = "VG"
    VI = "VI"
    WF = "WF"
    EH = "EH"
    YE = "YE"
    ZM = "ZM"
    ZW = "ZW"

class PatientPrimaryInsuranceSubscriberGenderEnum(str, Enum):
    UNKNOWN = ""
    MALE = "Male"
    FEMALE = "Female"
    OTHER = "Other"
    UNK = "UNK"
    ASKU = "ASKU"

class PatientPrimaryInsuranceSubscriberStateEnum(str, Enum):
    AL = "AL"
    AK = "AK"
    AS = "AS"
    AZ = "AZ"
    AR = "AR"
    AA = "AA"
    AE = "AE"
    AP = "AP"
    CA = "CA"
    CO = "CO"
    CT = "CT"
    DE = "DE"
    DC = "DC"
    FL = "FL"
    GA = "GA"
    GU = "GU"
    HI = "HI"
    ID = "ID"
    IL = "IL"
    IN = "IN"
    IA = "IA"
    KS = "KS"
    KY = "KY"
    LA = "LA"
    ME = "ME"
    MD = "MD"
    MA = "MA"
    MI = "MI"
    MN = "MN"
    MS = "MS"
    MO = "MO"
    MT = "MT"
    NE = "NE"
    NV = "NV"
    NH = "NH"
    NJ = "NJ"
    NM = "NM"
    NY = "NY"
    NC = "NC"
    ND = "ND"
    MP = "MP"
    OH = "OH"
    OK = "OK"
    OR = "OR"
    PA = "PA"
    PR = "PR"
    RI = "RI"
    SC = "SC"
    SD = "SD"
    TN = "TN"
    TX = "TX"
    UT = "UT"
    VT = "VT"
    VI = "VI"
    VA = "VA"
    WA = "WA"
    WV = "WV"
    WI = "WI"
    WY = "WY"


@dataclass_json
@dataclasses.dataclass
class PatientPrimaryInsurance:
    r"""PatientPrimaryInsurance
    **Warning:** Changing insurance information may make past appointments unbillable. Insurance data is also **unvalidated**; you should use the [`/api/insurances`](#apiinsurances) endpoint to find the appropriate insurance payer.
    """
    
    insurance_claim_office_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_claim_office_number') }})
    insurance_company: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_company') }})
    insurance_group_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_group_name') }})
    insurance_group_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_group_number') }})
    insurance_id_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_id_number') }})
    insurance_payer_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_payer_id') }})
    insurance_plan_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_plan_name') }})
    insurance_plan_type: Optional[PatientPrimaryInsuranceInsurancePlanTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_plan_type') }})
    is_subscriber_the_patient: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('is_subscriber_the_patient') }})
    patient_relationship_to_subscriber: Optional[PatientPrimaryInsurancePatientRelationshipToSubscriberEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('patient_relationship_to_subscriber') }})
    photo_back: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('photo_back') }})
    photo_front: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('photo_front') }})
    subscriber_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_address') }})
    subscriber_city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_city') }})
    subscriber_country: Optional[PatientPrimaryInsuranceSubscriberCountryEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_country') }})
    subscriber_date_of_birth: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_date_of_birth') }})
    subscriber_first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_first_name') }})
    subscriber_gender: Optional[PatientPrimaryInsuranceSubscriberGenderEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_gender') }})
    subscriber_last_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_last_name') }})
    subscriber_middle_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_middle_name') }})
    subscriber_social_security: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_social_security') }})
    subscriber_state: Optional[PatientPrimaryInsuranceSubscriberStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_state') }})
    subscriber_suffix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_suffix') }})
    subscriber_zip_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_zip_code') }})
    
class PatientRaceEnum(str, Enum):
    BLANK = "blank"
    INDIAN = "indian"
    ASIAN = "asian"
    BLACK = "black"
    HAWAIIAN = "hawaiian"
    WHITE = "white"
    OTHER = "other"
    DECLINED = "declined"

class PatientPatientProviderQualifierEnum(str, Enum):
    UNKNOWN = ""
    ZERO_B = "0B"
    ONE_G = "1G"
    G2 = "G2"

class PatientPatientSpecialtyEnum(str, Enum):
    UNKNOWN = ""
    ACUPUNCTURE = "Acupuncture"
    ADVANCED_PRACTICE_MIDWIFE = "Advanced Practice Midwife"
    AESTHETIC_MEDICINE = "Aesthetic Medicine"
    AESTHETICIAN = "Aesthetician"
    ALLERGIST_IMMUNOLOGIST = "Allergist/Immunologist"
    ANESTHESIOLOGIST = "Anesthesiologist"
    CARDIAC_ELECTROPHYSIOLOGIST = "Cardiac Electrophysiologist"
    CARDIOLOGIST = "Cardiologist"
    CARDIOTHORACIC_SURGEON = "Cardiothoracic Surgeon"
    CHILD_ADOLESCENT_PSYCHIATRY = "Child/Adolescent Psychiatry"
    CHIROPRACTOR = "Chiropractor"
    CLINICAL_SOCIAL_WORKER = "Clinical Social Worker"
    COLORECTAL_SURGEON = "Colorectal Surgeon"
    CORREACTOLOGY = "Correactology"
    COSMETIC_MEDICINE = "Cosmetic Medicine"
    COUNSELOR_MENTAL_HEALTH = "Counselor Mental Health"
    COUNSELOR_PROFESSIONAL = "Counselor Professional"
    COUNSELOR = "Counselor"
    DENTIST = "Dentist"
    DIABETOLOGY = "Diabetology"
    DERMATOLOGIST = "Dermatologist"
    DIAGNOSTIC_MEDICAL_SONOGRAPHER = "Diagnostic Medical Sonographer"
    DIETITIAN_REGISTERED = "Dietitian, Registered"
    EAR_NOSE_THROAT_SPECIALIST_ENT_ = "Ear-Nose-Throat Specialist (ENT)"
    EMERGENCY_MEDICINE_PHYSICIAN = "Emergency Medicine Physician"
    ENDOCRINOLOGIST = "Endocrinologist"
    ENDODONTIST = "Endodontist"
    EPIDEMIOLOGIST = "Epidemiologist"
    FAMILY_PRACTITIONER = "Family Practitioner"
    GASTROENTEROLOGIST = "Gastroenterologist"
    GENERAL_PRACTICE = "General Practice"
    GENERAL_SURGEON = "General Surgeon"
    GENETICIST = "Geneticist"
    GERIATRICIAN = "Geriatrician"
    GERONTOLOGIST = "Gerontologist"
    GYNECOLOGIST_NO_OB_ = "Gynecologist (no OB)"
    GYNEGOLOGIC_ONCOLOGIST = "Gynegologic Oncologist"
    HAND_SURGEON = "Hand Surgeon"
    HEMATOLOGIST = "Hematologist"
    HOME_CARE = "Home Care"
    HOSPICE = "Hospice"
    HOSPITALIST = "Hospitalist"
    INFECTIOUS_DISEASE_SPECIALIST = "Infectious Disease Specialist"
    INTEGRATIVE_AND_FUNCTIONAL_MEDICINE = "Integrative and Functional Medicine"
    INTEGRATIVE_MEDICINE = "Integrative Medicine"
    INTERNIST = "Internist"
    INTERVENTIONAL_RADIOLOGY = "Interventional Radiology"
    LABORATORY_MEDICINE_SPECIALIST = "Laboratory Medicine Specialist"
    LASER_SURGERY = "Laser Surgery"
    MASSAGE_THERAPIST = "Massage Therapist"
    NATUROPATHIC_PHYSICIAN = "Naturopathic Physician"
    NEONATOLOGIST = "Neonatologist"
    NEPHROLOGIST = "Nephrologist"
    NEUROLOGIST = "Neurologist"
    NEUROPSYCHOLOGY = "Neuropsychology"
    NEUROSURGEON = "Neurosurgeon"
    NOT_ACTIVELY_PRACTICING = "Not Actively Practicing"
    NUCLEAR_MEDICINE_SPECIALIST = "Nuclear Medicine Specialist"
    NURSE_PRACTITIONER = "Nurse Practitioner"
    NURSING = "Nursing"
    NUTRITIONIST = "Nutritionist"
    OBSTETRICIAN_GYNECOLOGIST = "Obstetrician/Gynecologist"
    OCCUPATIONAL_MEDICINE = "Occupational Medicine"
    OCCUPATIONAL_THERAPIST = "Occupational Therapist"
    ONCOLOGIST = "Oncologist"
    OPHTHALMOLOGIST = "Ophthalmologist"
    OPTOMETRIST = "Optometrist"
    ORAL_SURGEON = "Oral Surgeon"
    OROFACIAL_PAIN = "Orofacial Pain"
    ORTHODONTIST = "Orthodontist"
    ORTHOPEDIC_SURGEON = "Orthopedic Surgeon"
    ORTHOTIST = "Orthotist"
    OTHER = "Other"
    PAIN_MANAGEMENT_SPECIALIST = "Pain Management Specialist"
    PATHOLOGIST = "Pathologist"
    PEDIATRIC_DENTIST = "Pediatric Dentist"
    PEDIATRIC_GASTROENTEROLOGY = "Pediatric Gastroenterology"
    PEDIATRIC_SURGEON = "Pediatric Surgeon"
    PEDIATRICIAN = "Pediatrician"
    PERINATOLOGIST = "Perinatologist"
    PERIODONTIST = "Periodontist"
    PHYSICAL_MEDICINE_AND_REHAB_SPECIALIST = "Physical Medicine and Rehab Specialist"
    PHYSICAL_THERAPIST = "Physical Therapist"
    PHYSICIAN_ASSISTANT = "Physician Assistant"
    PLASTIC_SURGEON = "Plastic Surgeon"
    PODIATRIST = "Podiatrist"
    PREVENTIVE_AGING_MEDICINE = "Preventive-Aging Medicine"
    PREVENTIVE_MEDICINE_OCCUPATIONAL_ENVIRONMENTAL_MEDICINE = "Preventive Medicine/Occupational-Environmental Medicine"
    PRIMARY_CARE_PHYSICIAN = "Primary Care Physician"
    PROSTHETIST = "Prosthetist"
    PROSTHODONTIST = "Prosthodontist"
    PSYCHIATRIST = "Psychiatrist"
    PSYCHOLOGIST = "Psychologist"
    PUBLIC_HEALTH_PROFESSIONAL = "Public Health Professional"
    PULMONOLOGIST = "Pulmonologist"
    RADIATION_ONCOLOGIST = "Radiation Oncologist"
    RADIOLOGIST = "Radiologist"
    REGISTERED_NURSE = "Registered Nurse"
    RELIGIOUS_NONMEDICAL_PRACTITIONER = "Religious Nonmedical Practitioner"
    REPRODUCTIVE_ENDOCRINOLOGIST = "Reproductive Endocrinologist"
    REPRODUCTIVE_MEDICINE = "Reproductive Medicine"
    RHEUMATOLOGIST = "Rheumatologist"
    SLEEP_MEDICINE = "Sleep Medicine"
    SPEECH_LANGUAGE_PATHOLOGIST = "Speech-Language Pathologist"
    SPORTS_MEDICINE_SPECIALIST = "Sports Medicine Specialist"
    UROLOGIST = "Urologist"
    URGENT_CARE = "Urgent Care"
    VASCULAR_SURGEON = "Vascular Surgeon"


@dataclass_json
@dataclasses.dataclass
class PatientPatient:
    address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('address') }})
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('email') }})
    fax: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('fax') }})
    first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('first_name') }})
    last_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('last_name') }})
    middle_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('middle_name') }})
    npi: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('npi') }})
    phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('phone') }})
    provider_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('provider_number') }})
    provider_qualifier: Optional[PatientPatientProviderQualifierEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('provider_qualifier') }})
    specialty: Optional[PatientPatientSpecialtyEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('specialty') }})
    suffix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('suffix') }})
    
class PatientSecondaryInsuranceInsurancePlanTypeEnum(str, Enum):
    UNKNOWN = ""
    AM = "AM"
    BL = "BL"
    CH = "CH"
    CI = "CI"
    SEVENTEEN = "17"
    DS = "DS"
    FOURTEEN = "14"
    FI = "FI"
    HM = "HM"
    SIXTEEN = "16"
    FIFTEEN = "15"
    LM = "LM"
    MC = "MC"
    MA = "MA"
    MB = "MB"
    ZZ = "ZZ"
    OF = "OF"
    ELEVEN = "11"
    THIRTEEN = "13"
    TWELVE = "12"
    TV = "TV"
    VA = "VA"
    WC = "WC"

class PatientSecondaryInsurancePatientRelationshipToSubscriberEnum(str, Enum):
    UNKNOWN = ""
    ONE = "01"
    FOUR = "04"
    FIVE = "05"
    SEVEN = "07"
    TEN = "10"
    FIFTEEN = "15"
    SEVENTEEN = "17"
    NINETEEN = "19"
    TWENTY = "20"
    TWENTY_ONE = "21"
    TWENTY_TWO = "22"
    TWENTY_THREE = "23"
    TWENTY_FOUR = "24"
    TWENTY_NINE = "29"
    THIRTY_TWO = "32"
    THIRTY_THREE = "33"
    THIRTY_SIX = "36"
    THIRTY_NINE = "39"
    FORTY = "40"
    FORTY_ONE = "41"
    FORTY_THREE = "43"
    FIFTY_THREE = "53"
    SEVENTY_SIX = "76"
    G8 = "G8"

class PatientSecondaryInsuranceSubscriberCountryEnum(str, Enum):
    UNKNOWN = ""
    AF = "AF"
    AX = "AX"
    AL = "AL"
    DZ = "DZ"
    AS = "AS"
    AD = "AD"
    AO = "AO"
    AI = "AI"
    AQ = "AQ"
    AG = "AG"
    AR = "AR"
    AM = "AM"
    AW = "AW"
    AU = "AU"
    AT = "AT"
    AZ = "AZ"
    BS = "BS"
    BH = "BH"
    BD = "BD"
    BB = "BB"
    BY = "BY"
    BE = "BE"
    BZ = "BZ"
    BJ = "BJ"
    BM = "BM"
    BT = "BT"
    BO = "BO"
    BQ = "BQ"
    BA = "BA"
    BW = "BW"
    BV = "BV"
    BR = "BR"
    IO = "IO"
    BN = "BN"
    BG = "BG"
    BF = "BF"
    BI = "BI"
    KH = "KH"
    CM = "CM"
    CA = "CA"
    CV = "CV"
    KY = "KY"
    CF = "CF"
    TD = "TD"
    CL = "CL"
    CN = "CN"
    CX = "CX"
    CC = "CC"
    CO = "CO"
    KM = "KM"
    CG = "CG"
    CD = "CD"
    CK = "CK"
    CR = "CR"
    CI = "CI"
    HR = "HR"
    CU = "CU"
    CW = "CW"
    CY = "CY"
    CZ = "CZ"
    CYM = "CYM"
    DK = "DK"
    DJ = "DJ"
    DM = "DM"
    DO = "DO"
    EC = "EC"
    EG = "EG"
    SV = "SV"
    GQ = "GQ"
    ER = "ER"
    EE = "EE"
    ET = "ET"
    FK = "FK"
    FO = "FO"
    FJ = "FJ"
    FI = "FI"
    FR = "FR"
    GF = "GF"
    PF = "PF"
    TF = "TF"
    GA = "GA"
    GM = "GM"
    GE = "GE"
    DE = "DE"
    GH = "GH"
    GI = "GI"
    GR = "GR"
    GL = "GL"
    GD = "GD"
    GP = "GP"
    GU = "GU"
    GT = "GT"
    GG = "GG"
    GN = "GN"
    GW = "GW"
    GY = "GY"
    HT = "HT"
    HM = "HM"
    VA = "VA"
    HN = "HN"
    HK = "HK"
    HU = "HU"
    IS = "IS"
    IN = "IN"
    ID = "ID"
    IR = "IR"
    IQ = "IQ"
    IE = "IE"
    IM = "IM"
    IL = "IL"
    IT = "IT"
    JM = "JM"
    JP = "JP"
    JE = "JE"
    JO = "JO"
    KZ = "KZ"
    KE = "KE"
    KI = "KI"
    KP = "KP"
    KR = "KR"
    XK = "XK"
    KW = "KW"
    KG = "KG"
    LA = "LA"
    LV = "LV"
    LB = "LB"
    LS = "LS"
    LR = "LR"
    LY = "LY"
    LI = "LI"
    LT = "LT"
    LU = "LU"
    MO = "MO"
    MK = "MK"
    MG = "MG"
    MW = "MW"
    MY = "MY"
    MV = "MV"
    ML = "ML"
    MT = "MT"
    MH = "MH"
    MQ = "MQ"
    MR = "MR"
    MU = "MU"
    YT = "YT"
    MX = "MX"
    FM = "FM"
    MD = "MD"
    MC = "MC"
    MN = "MN"
    ME = "ME"
    MS = "MS"
    MA = "MA"
    MZ = "MZ"
    MM = "MM"
    NA = "NA"
    NR = "NR"
    NP = "NP"
    NL = "NL"
    NC = "NC"
    NZ = "NZ"
    NI = "NI"
    NE = "NE"
    NG = "NG"
    NU = "NU"
    NF = "NF"
    MP = "MP"
    NO = "NO"
    OM = "OM"
    PK = "PK"
    PW = "PW"
    PS = "PS"
    PA = "PA"
    PG = "PG"
    PY = "PY"
    PE = "PE"
    PH = "PH"
    PN = "PN"
    PL = "PL"
    PT = "PT"
    PR = "PR"
    QA = "QA"
    RE = "RE"
    RO = "RO"
    RU = "RU"
    RW = "RW"
    BL = "BL"
    SH = "SH"
    KN = "KN"
    LC = "LC"
    MF = "MF"
    PM = "PM"
    VC = "VC"
    WS = "WS"
    SM = "SM"
    ST = "ST"
    SA = "SA"
    SN = "SN"
    RS = "RS"
    SC = "SC"
    SL = "SL"
    SG = "SG"
    SX = "SX"
    SK = "SK"
    SI = "SI"
    SB = "SB"
    SO = "SO"
    ZA = "ZA"
    GS = "GS"
    SS = "SS"
    ES = "ES"
    LK = "LK"
    SD = "SD"
    SR = "SR"
    SJ = "SJ"
    SZ = "SZ"
    SE = "SE"
    CH = "CH"
    SY = "SY"
    TW = "TW"
    TJ = "TJ"
    TZ = "TZ"
    TH = "TH"
    TL = "TL"
    TG = "TG"
    TK = "TK"
    TO = "TO"
    TT = "TT"
    TN = "TN"
    TR = "TR"
    TM = "TM"
    TC = "TC"
    TV = "TV"
    UG = "UG"
    UA = "UA"
    AE = "AE"
    GB = "GB"
    US = "US"
    UM = "UM"
    UY = "UY"
    UZ = "UZ"
    VU = "VU"
    VE = "VE"
    VN = "VN"
    VG = "VG"
    VI = "VI"
    WF = "WF"
    EH = "EH"
    YE = "YE"
    ZM = "ZM"
    ZW = "ZW"

class PatientSecondaryInsuranceSubscriberGenderEnum(str, Enum):
    UNKNOWN = ""
    MALE = "Male"
    FEMALE = "Female"
    OTHER = "Other"
    UNK = "UNK"
    ASKU = "ASKU"

class PatientSecondaryInsuranceSubscriberStateEnum(str, Enum):
    AL = "AL"
    AK = "AK"
    AS = "AS"
    AZ = "AZ"
    AR = "AR"
    AA = "AA"
    AE = "AE"
    AP = "AP"
    CA = "CA"
    CO = "CO"
    CT = "CT"
    DE = "DE"
    DC = "DC"
    FL = "FL"
    GA = "GA"
    GU = "GU"
    HI = "HI"
    ID = "ID"
    IL = "IL"
    IN = "IN"
    IA = "IA"
    KS = "KS"
    KY = "KY"
    LA = "LA"
    ME = "ME"
    MD = "MD"
    MA = "MA"
    MI = "MI"
    MN = "MN"
    MS = "MS"
    MO = "MO"
    MT = "MT"
    NE = "NE"
    NV = "NV"
    NH = "NH"
    NJ = "NJ"
    NM = "NM"
    NY = "NY"
    NC = "NC"
    ND = "ND"
    MP = "MP"
    OH = "OH"
    OK = "OK"
    OR = "OR"
    PA = "PA"
    PR = "PR"
    RI = "RI"
    SC = "SC"
    SD = "SD"
    TN = "TN"
    TX = "TX"
    UT = "UT"
    VT = "VT"
    VI = "VI"
    VA = "VA"
    WA = "WA"
    WV = "WV"
    WI = "WI"
    WY = "WY"


@dataclass_json
@dataclasses.dataclass
class PatientSecondaryInsurance:
    r"""PatientSecondaryInsurance
    **Warning:** Changing insurance information may make past appointments unbillable. Insurance data is also **unvalidated**; you should use the [`/api/insurances`](#apiinsurances) endpoint to find the appropriate insurance payer.
    """
    
    insurance_claim_office_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_claim_office_number') }})
    insurance_company: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_company') }})
    insurance_group_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_group_name') }})
    insurance_group_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_group_number') }})
    insurance_id_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_id_number') }})
    insurance_payer_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_payer_id') }})
    insurance_plan_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_plan_name') }})
    insurance_plan_type: Optional[PatientSecondaryInsuranceInsurancePlanTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_plan_type') }})
    is_subscriber_the_patient: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('is_subscriber_the_patient') }})
    patient_relationship_to_subscriber: Optional[PatientSecondaryInsurancePatientRelationshipToSubscriberEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('patient_relationship_to_subscriber') }})
    photo_back: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('photo_back') }})
    photo_front: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('photo_front') }})
    subscriber_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_address') }})
    subscriber_city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_city') }})
    subscriber_country: Optional[PatientSecondaryInsuranceSubscriberCountryEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_country') }})
    subscriber_date_of_birth: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_date_of_birth') }})
    subscriber_first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_first_name') }})
    subscriber_gender: Optional[PatientSecondaryInsuranceSubscriberGenderEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_gender') }})
    subscriber_last_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_last_name') }})
    subscriber_middle_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_middle_name') }})
    subscriber_social_security: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_social_security') }})
    subscriber_state: Optional[PatientSecondaryInsuranceSubscriberStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_state') }})
    subscriber_suffix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_suffix') }})
    subscriber_zip_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_zip_code') }})
    
class PatientTertiaryInsuranceInsurancePlanTypeEnum(str, Enum):
    UNKNOWN = ""
    AM = "AM"
    BL = "BL"
    CH = "CH"
    CI = "CI"
    SEVENTEEN = "17"
    DS = "DS"
    FOURTEEN = "14"
    FI = "FI"
    HM = "HM"
    SIXTEEN = "16"
    FIFTEEN = "15"
    LM = "LM"
    MC = "MC"
    MA = "MA"
    MB = "MB"
    ZZ = "ZZ"
    OF = "OF"
    ELEVEN = "11"
    THIRTEEN = "13"
    TWELVE = "12"
    TV = "TV"
    VA = "VA"
    WC = "WC"

class PatientTertiaryInsurancePatientRelationshipToSubscriberEnum(str, Enum):
    UNKNOWN = ""
    ONE = "01"
    FOUR = "04"
    FIVE = "05"
    SEVEN = "07"
    TEN = "10"
    FIFTEEN = "15"
    SEVENTEEN = "17"
    NINETEEN = "19"
    TWENTY = "20"
    TWENTY_ONE = "21"
    TWENTY_TWO = "22"
    TWENTY_THREE = "23"
    TWENTY_FOUR = "24"
    TWENTY_NINE = "29"
    THIRTY_TWO = "32"
    THIRTY_THREE = "33"
    THIRTY_SIX = "36"
    THIRTY_NINE = "39"
    FORTY = "40"
    FORTY_ONE = "41"
    FORTY_THREE = "43"
    FIFTY_THREE = "53"
    SEVENTY_SIX = "76"
    G8 = "G8"

class PatientTertiaryInsuranceSubscriberCountryEnum(str, Enum):
    UNKNOWN = ""
    AF = "AF"
    AX = "AX"
    AL = "AL"
    DZ = "DZ"
    AS = "AS"
    AD = "AD"
    AO = "AO"
    AI = "AI"
    AQ = "AQ"
    AG = "AG"
    AR = "AR"
    AM = "AM"
    AW = "AW"
    AU = "AU"
    AT = "AT"
    AZ = "AZ"
    BS = "BS"
    BH = "BH"
    BD = "BD"
    BB = "BB"
    BY = "BY"
    BE = "BE"
    BZ = "BZ"
    BJ = "BJ"
    BM = "BM"
    BT = "BT"
    BO = "BO"
    BQ = "BQ"
    BA = "BA"
    BW = "BW"
    BV = "BV"
    BR = "BR"
    IO = "IO"
    BN = "BN"
    BG = "BG"
    BF = "BF"
    BI = "BI"
    KH = "KH"
    CM = "CM"
    CA = "CA"
    CV = "CV"
    KY = "KY"
    CF = "CF"
    TD = "TD"
    CL = "CL"
    CN = "CN"
    CX = "CX"
    CC = "CC"
    CO = "CO"
    KM = "KM"
    CG = "CG"
    CD = "CD"
    CK = "CK"
    CR = "CR"
    CI = "CI"
    HR = "HR"
    CU = "CU"
    CW = "CW"
    CY = "CY"
    CZ = "CZ"
    CYM = "CYM"
    DK = "DK"
    DJ = "DJ"
    DM = "DM"
    DO = "DO"
    EC = "EC"
    EG = "EG"
    SV = "SV"
    GQ = "GQ"
    ER = "ER"
    EE = "EE"
    ET = "ET"
    FK = "FK"
    FO = "FO"
    FJ = "FJ"
    FI = "FI"
    FR = "FR"
    GF = "GF"
    PF = "PF"
    TF = "TF"
    GA = "GA"
    GM = "GM"
    GE = "GE"
    DE = "DE"
    GH = "GH"
    GI = "GI"
    GR = "GR"
    GL = "GL"
    GD = "GD"
    GP = "GP"
    GU = "GU"
    GT = "GT"
    GG = "GG"
    GN = "GN"
    GW = "GW"
    GY = "GY"
    HT = "HT"
    HM = "HM"
    VA = "VA"
    HN = "HN"
    HK = "HK"
    HU = "HU"
    IS = "IS"
    IN = "IN"
    ID = "ID"
    IR = "IR"
    IQ = "IQ"
    IE = "IE"
    IM = "IM"
    IL = "IL"
    IT = "IT"
    JM = "JM"
    JP = "JP"
    JE = "JE"
    JO = "JO"
    KZ = "KZ"
    KE = "KE"
    KI = "KI"
    KP = "KP"
    KR = "KR"
    XK = "XK"
    KW = "KW"
    KG = "KG"
    LA = "LA"
    LV = "LV"
    LB = "LB"
    LS = "LS"
    LR = "LR"
    LY = "LY"
    LI = "LI"
    LT = "LT"
    LU = "LU"
    MO = "MO"
    MK = "MK"
    MG = "MG"
    MW = "MW"
    MY = "MY"
    MV = "MV"
    ML = "ML"
    MT = "MT"
    MH = "MH"
    MQ = "MQ"
    MR = "MR"
    MU = "MU"
    YT = "YT"
    MX = "MX"
    FM = "FM"
    MD = "MD"
    MC = "MC"
    MN = "MN"
    ME = "ME"
    MS = "MS"
    MA = "MA"
    MZ = "MZ"
    MM = "MM"
    NA = "NA"
    NR = "NR"
    NP = "NP"
    NL = "NL"
    NC = "NC"
    NZ = "NZ"
    NI = "NI"
    NE = "NE"
    NG = "NG"
    NU = "NU"
    NF = "NF"
    MP = "MP"
    NO = "NO"
    OM = "OM"
    PK = "PK"
    PW = "PW"
    PS = "PS"
    PA = "PA"
    PG = "PG"
    PY = "PY"
    PE = "PE"
    PH = "PH"
    PN = "PN"
    PL = "PL"
    PT = "PT"
    PR = "PR"
    QA = "QA"
    RE = "RE"
    RO = "RO"
    RU = "RU"
    RW = "RW"
    BL = "BL"
    SH = "SH"
    KN = "KN"
    LC = "LC"
    MF = "MF"
    PM = "PM"
    VC = "VC"
    WS = "WS"
    SM = "SM"
    ST = "ST"
    SA = "SA"
    SN = "SN"
    RS = "RS"
    SC = "SC"
    SL = "SL"
    SG = "SG"
    SX = "SX"
    SK = "SK"
    SI = "SI"
    SB = "SB"
    SO = "SO"
    ZA = "ZA"
    GS = "GS"
    SS = "SS"
    ES = "ES"
    LK = "LK"
    SD = "SD"
    SR = "SR"
    SJ = "SJ"
    SZ = "SZ"
    SE = "SE"
    CH = "CH"
    SY = "SY"
    TW = "TW"
    TJ = "TJ"
    TZ = "TZ"
    TH = "TH"
    TL = "TL"
    TG = "TG"
    TK = "TK"
    TO = "TO"
    TT = "TT"
    TN = "TN"
    TR = "TR"
    TM = "TM"
    TC = "TC"
    TV = "TV"
    UG = "UG"
    UA = "UA"
    AE = "AE"
    GB = "GB"
    US = "US"
    UM = "UM"
    UY = "UY"
    UZ = "UZ"
    VU = "VU"
    VE = "VE"
    VN = "VN"
    VG = "VG"
    VI = "VI"
    WF = "WF"
    EH = "EH"
    YE = "YE"
    ZM = "ZM"
    ZW = "ZW"

class PatientTertiaryInsuranceSubscriberGenderEnum(str, Enum):
    UNKNOWN = ""
    MALE = "Male"
    FEMALE = "Female"
    OTHER = "Other"
    UNK = "UNK"
    ASKU = "ASKU"

class PatientTertiaryInsuranceSubscriberStateEnum(str, Enum):
    AL = "AL"
    AK = "AK"
    AS = "AS"
    AZ = "AZ"
    AR = "AR"
    AA = "AA"
    AE = "AE"
    AP = "AP"
    CA = "CA"
    CO = "CO"
    CT = "CT"
    DE = "DE"
    DC = "DC"
    FL = "FL"
    GA = "GA"
    GU = "GU"
    HI = "HI"
    ID = "ID"
    IL = "IL"
    IN = "IN"
    IA = "IA"
    KS = "KS"
    KY = "KY"
    LA = "LA"
    ME = "ME"
    MD = "MD"
    MA = "MA"
    MI = "MI"
    MN = "MN"
    MS = "MS"
    MO = "MO"
    MT = "MT"
    NE = "NE"
    NV = "NV"
    NH = "NH"
    NJ = "NJ"
    NM = "NM"
    NY = "NY"
    NC = "NC"
    ND = "ND"
    MP = "MP"
    OH = "OH"
    OK = "OK"
    OR = "OR"
    PA = "PA"
    PR = "PR"
    RI = "RI"
    SC = "SC"
    SD = "SD"
    TN = "TN"
    TX = "TX"
    UT = "UT"
    VT = "VT"
    VI = "VI"
    VA = "VA"
    WA = "WA"
    WV = "WV"
    WI = "WI"
    WY = "WY"


@dataclass_json
@dataclasses.dataclass
class PatientTertiaryInsurance:
    r"""PatientTertiaryInsurance
    **Warning:** Changing insurance information may make past appointments unbillable. Insurance data is also **unvalidated**; you should use the [`/api/insurances`](#apiinsurances) endpoint to find the appropriate insurance payer.
    """
    
    insurance_claim_office_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_claim_office_number') }})
    insurance_company: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_company') }})
    insurance_group_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_group_name') }})
    insurance_group_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_group_number') }})
    insurance_id_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_id_number') }})
    insurance_payer_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_payer_id') }})
    insurance_plan_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_plan_name') }})
    insurance_plan_type: Optional[PatientTertiaryInsuranceInsurancePlanTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('insurance_plan_type') }})
    is_subscriber_the_patient: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('is_subscriber_the_patient') }})
    patient_relationship_to_subscriber: Optional[PatientTertiaryInsurancePatientRelationshipToSubscriberEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('patient_relationship_to_subscriber') }})
    photo_back: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('photo_back') }})
    photo_front: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('photo_front') }})
    subscriber_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_address') }})
    subscriber_city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_city') }})
    subscriber_country: Optional[PatientTertiaryInsuranceSubscriberCountryEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_country') }})
    subscriber_date_of_birth: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_date_of_birth') }})
    subscriber_first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_first_name') }})
    subscriber_gender: Optional[PatientTertiaryInsuranceSubscriberGenderEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_gender') }})
    subscriber_last_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_last_name') }})
    subscriber_middle_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_middle_name') }})
    subscriber_social_security: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_social_security') }})
    subscriber_state: Optional[PatientTertiaryInsuranceSubscriberStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_state') }})
    subscriber_suffix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_suffix') }})
    subscriber_zip_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('subscriber_zip_code') }})
    
class PatientWorkerCompInsuranceWorkersCompPayerStateEnum(str, Enum):
    AL = "AL"
    AK = "AK"
    AS = "AS"
    AZ = "AZ"
    AR = "AR"
    AA = "AA"
    AE = "AE"
    AP = "AP"
    CA = "CA"
    CO = "CO"
    CT = "CT"
    DE = "DE"
    DC = "DC"
    FL = "FL"
    GA = "GA"
    GU = "GU"
    HI = "HI"
    ID = "ID"
    IL = "IL"
    IN = "IN"
    IA = "IA"
    KS = "KS"
    KY = "KY"
    LA = "LA"
    ME = "ME"
    MD = "MD"
    MA = "MA"
    MI = "MI"
    MN = "MN"
    MS = "MS"
    MO = "MO"
    MT = "MT"
    NE = "NE"
    NV = "NV"
    NH = "NH"
    NJ = "NJ"
    NM = "NM"
    NY = "NY"
    NC = "NC"
    ND = "ND"
    MP = "MP"
    OH = "OH"
    OK = "OK"
    OR = "OR"
    PA = "PA"
    PR = "PR"
    RI = "RI"
    SC = "SC"
    SD = "SD"
    TN = "TN"
    TX = "TX"
    UT = "UT"
    VT = "VT"
    VI = "VI"
    VA = "VA"
    WA = "WA"
    WV = "WV"
    WI = "WI"
    WY = "WY"

class PatientWorkerCompInsuranceWorkersCompStateOfOccurrenceEnum(str, Enum):
    AL = "AL"
    AK = "AK"
    AS = "AS"
    AZ = "AZ"
    AR = "AR"
    AA = "AA"
    AE = "AE"
    AP = "AP"
    CA = "CA"
    CO = "CO"
    CT = "CT"
    DE = "DE"
    DC = "DC"
    FL = "FL"
    GA = "GA"
    GU = "GU"
    HI = "HI"
    ID = "ID"
    IL = "IL"
    IN = "IN"
    IA = "IA"
    KS = "KS"
    KY = "KY"
    LA = "LA"
    ME = "ME"
    MD = "MD"
    MA = "MA"
    MI = "MI"
    MN = "MN"
    MS = "MS"
    MO = "MO"
    MT = "MT"
    NE = "NE"
    NV = "NV"
    NH = "NH"
    NJ = "NJ"
    NM = "NM"
    NY = "NY"
    NC = "NC"
    ND = "ND"
    MP = "MP"
    OH = "OH"
    OK = "OK"
    OR = "OR"
    PA = "PA"
    PR = "PR"
    RI = "RI"
    SC = "SC"
    SD = "SD"
    TN = "TN"
    TX = "TX"
    UT = "UT"
    VT = "VT"
    VI = "VI"
    VA = "VA"
    WA = "WA"
    WV = "WV"
    WI = "WI"
    WY = "WY"


@dataclass_json
@dataclasses.dataclass
class PatientWorkerCompInsurance:
    property_and_casualty_agency_claim_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('property_and_casualty_agency_claim_number') }})
    workers_comp_carrier_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workers_comp_carrier_code') }})
    workers_comp_case_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workers_comp_case_number') }})
    workers_comp_company: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workers_comp_company') }})
    workers_comp_date_of_accident: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workers_comp_date_of_accident') }})
    workers_comp_group_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workers_comp_group_name') }})
    workers_comp_group_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workers_comp_group_number') }})
    workers_comp_notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workers_comp_notes') }})
    workers_comp_payer_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workers_comp_payer_address') }})
    workers_comp_payer_city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workers_comp_payer_city') }})
    workers_comp_payer_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workers_comp_payer_id') }})
    workers_comp_payer_state: Optional[PatientWorkerCompInsuranceWorkersCompPayerStateEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workers_comp_payer_state') }})
    workers_comp_payer_zip: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workers_comp_payer_zip') }})
    workers_comp_state_of_occurrence: Optional[PatientWorkerCompInsuranceWorkersCompStateOfOccurrenceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workers_comp_state_of_occurrence') }})
    workers_comp_wcb: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workers_comp_wcb') }})
    workers_comp_wcb_rating_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workers_comp_wcb_rating_code') }})
    

@dataclass_json
@dataclasses.dataclass
class Patient:
    doctor: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.field_name('doctor') }})
    gender: PatientGenderEnum = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.field_name('gender') }})
    address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('address') }})
    auto_accident_insurance: Optional[PatientAutoAccidentInsurance] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('auto_accident_insurance') }})
    cell_phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('cell_phone') }})
    chart_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('chart_id') }})
    city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('city') }})
    copay: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('copay') }})
    custom_demographics: Optional[list[PatientCustomPatientFieldValue]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('custom_demographics') }})
    date_of_birth: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('date_of_birth') }})
    date_of_first_appointment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('date_of_first_appointment') }})
    date_of_last_appointment: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('date_of_last_appointment') }})
    default_pharmacy: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('default_pharmacy') }})
    disable_sms_messages: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('disable_sms_messages') }})
    email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('email') }})
    emergency_contact_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('emergency_contact_name') }})
    emergency_contact_phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('emergency_contact_phone') }})
    emergency_contact_relation: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('emergency_contact_relation') }})
    employer: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('employer') }})
    employer_address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('employer_address') }})
    employer_city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('employer_city') }})
    employer_state: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('employer_state') }})
    employer_zip_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('employer_zip_code') }})
    ethnicity: Optional[PatientEthnicityEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('ethnicity') }})
    first_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('first_name') }})
    home_phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('home_phone') }})
    id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('id') }})
    last_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('last_name') }})
    middle_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('middle_name') }})
    nick_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('nick_name') }})
    office_phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('office_phone') }})
    offices: Optional[list[int]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('offices') }})
    patient_flags: Optional[list[PatientPatientFlagType]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('patient_flags') }})
    patient_flags_attached: Optional[list[PatientPatientFlag]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('patient_flags_attached') }})
    patient_payment_profile: Optional[PatientPatientPaymentProfileEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('patient_payment_profile') }})
    patient_photo: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('patient_photo') }})
    patient_photo_date: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('patient_photo_date') }})
    patient_status: Optional[PatientPatientStatusEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('patient_status') }})
    preferred_language: Optional[PatientPreferredLanguageEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('preferred_language') }})
    primary_care_physician: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('primary_care_physician') }})
    primary_insurance: Optional[PatientPrimaryInsurance] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('primary_insurance') }})
    race: Optional[PatientRaceEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('race') }})
    referring_doctor: Optional[PatientPatient] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('referring_doctor') }})
    referring_source: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('referring_source') }})
    responsible_party_email: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('responsible_party_email') }})
    responsible_party_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('responsible_party_name') }})
    responsible_party_phone: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('responsible_party_phone') }})
    responsible_party_relation: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('responsible_party_relation') }})
    secondary_insurance: Optional[PatientSecondaryInsurance] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('secondary_insurance') }})
    social_security_number: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('social_security_number') }})
    state: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('state') }})
    tertiary_insurance: Optional[PatientTertiaryInsurance] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('tertiary_insurance') }})
    updated_at: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('updated_at') }})
    workers_comp_insurance: Optional[PatientWorkerCompInsurance] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('workers_comp_insurance') }})
    zip_code: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.field_name('zip_code') }})
    
