"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import amount as shared_amount
from ..shared import fee as shared_fee
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class OrderLineItem:
    r"""This type is used to show the fees that are deducted from a seller payout for each line item in an order."""
    
    fee_basis_amount: Optional[shared_amount.Amount] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('feeBasisAmount'), 'exclude': lambda f: f is None }})
    r"""This type is used to express the dollar value and currency used for any transaction retrieved with the <strong>Finances API</strong>, including an order total, a seller payout, a buyer refund, or a seller credit."""  
    line_item_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lineItemId'), 'exclude': lambda f: f is None }})
    r"""The unique identifier of an order line item."""  
    marketplace_fees: Optional[list[shared_fee.Fee]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('marketplaceFees'), 'exclude': lambda f: f is None }})
    r"""An array of all fees accrued for the order line item and deducted from a seller payout."""  
    