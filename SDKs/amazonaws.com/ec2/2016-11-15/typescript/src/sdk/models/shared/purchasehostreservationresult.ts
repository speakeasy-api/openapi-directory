/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The currency in which the <code>totalUpfrontPrice</code> and <code>totalHourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.
 */
export enum PurchaseHostReservationResultCurrencyCodeEnum {
  Usd = "USD",
}

/**
 * The currency in which the <code>UpfrontPrice</code> and <code>HourlyPrice</code> amounts are specified. At this time, the only supported currency is <code>USD</code>.
 */
export enum PurchaseHostReservationResultPurchaseCurrencyCodeEnum {
  Usd = "USD",
}

/**
 * The payment option for the reservation.
 */
export enum PurchaseHostReservationResultPurchasePaymentOptionEnum {
  AllUpfront = "AllUpfront",
  PartialUpfront = "PartialUpfront",
  NoUpfront = "NoUpfront",
}

/**
 * Describes the result of the purchase.
 */
export class PurchaseHostReservationResultPurchase extends SpeakeasyBase {
  @SpeakeasyMetadata()
  currencyCode?: PurchaseHostReservationResultPurchaseCurrencyCodeEnum;

  @SpeakeasyMetadata()
  duration?: number;

  @SpeakeasyMetadata()
  hostIdSet?: string[];

  @SpeakeasyMetadata()
  hostReservationId?: string;

  @SpeakeasyMetadata()
  hourlyPrice?: string;

  @SpeakeasyMetadata()
  instanceFamily?: string;

  @SpeakeasyMetadata()
  paymentOption?: PurchaseHostReservationResultPurchasePaymentOptionEnum;

  @SpeakeasyMetadata()
  upfrontPrice?: string;
}

/**
 * Success
 */
export class PurchaseHostReservationResult extends SpeakeasyBase {
  @SpeakeasyMetadata()
  clientToken?: string;

  @SpeakeasyMetadata()
  currencyCode?: PurchaseHostReservationResultCurrencyCodeEnum;

  @SpeakeasyMetadata({ elemType: PurchaseHostReservationResultPurchase })
  purchase?: PurchaseHostReservationResultPurchase[];

  @SpeakeasyMetadata()
  totalHourlyPrice?: string;

  @SpeakeasyMetadata()
  totalUpfrontPrice?: string;
}
