/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * ConsumerConfigInput - Configuration information for a private service access connection.
 */
public class ConsumerConfigInput {
    /**
     * Represents one or multiple Cloud SQL configurations.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cloudsqlConfigs")
    public CloudSQLConfig[] cloudsqlConfigs;
    public ConsumerConfigInput withCloudsqlConfigs(CloudSQLConfig[] cloudsqlConfigs) {
        this.cloudsqlConfigs = cloudsqlConfigs;
        return this;
    }
    
    /**
     * Export custom routes flag value for peering from consumer to producer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("consumerExportCustomRoutes")
    public Boolean consumerExportCustomRoutes;
    public ConsumerConfigInput withConsumerExportCustomRoutes(Boolean consumerExportCustomRoutes) {
        this.consumerExportCustomRoutes = consumerExportCustomRoutes;
        return this;
    }
    
    /**
     * Export subnet routes with public ip flag value for peering from consumer to producer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("consumerExportSubnetRoutesWithPublicIp")
    public Boolean consumerExportSubnetRoutesWithPublicIp;
    public ConsumerConfigInput withConsumerExportSubnetRoutesWithPublicIp(Boolean consumerExportSubnetRoutesWithPublicIp) {
        this.consumerExportSubnetRoutesWithPublicIp = consumerExportSubnetRoutesWithPublicIp;
        return this;
    }
    
    /**
     * Import custom routes flag value for peering from consumer to producer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("consumerImportCustomRoutes")
    public Boolean consumerImportCustomRoutes;
    public ConsumerConfigInput withConsumerImportCustomRoutes(Boolean consumerImportCustomRoutes) {
        this.consumerImportCustomRoutes = consumerImportCustomRoutes;
        return this;
    }
    
    /**
     * Import subnet routes with public ip flag value for peering from consumer to producer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("consumerImportSubnetRoutesWithPublicIp")
    public Boolean consumerImportSubnetRoutesWithPublicIp;
    public ConsumerConfigInput withConsumerImportSubnetRoutesWithPublicIp(Boolean consumerImportSubnetRoutesWithPublicIp) {
        this.consumerImportSubnetRoutesWithPublicIp = consumerImportSubnetRoutesWithPublicIp;
        return this;
    }
    
    /**
     * Export custom routes flag value for peering from producer to consumer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("producerExportCustomRoutes")
    public Boolean producerExportCustomRoutes;
    public ConsumerConfigInput withProducerExportCustomRoutes(Boolean producerExportCustomRoutes) {
        this.producerExportCustomRoutes = producerExportCustomRoutes;
        return this;
    }
    
    /**
     * Export subnet routes with public ip flag value for peering from producer to consumer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("producerExportSubnetRoutesWithPublicIp")
    public Boolean producerExportSubnetRoutesWithPublicIp;
    public ConsumerConfigInput withProducerExportSubnetRoutesWithPublicIp(Boolean producerExportSubnetRoutesWithPublicIp) {
        this.producerExportSubnetRoutesWithPublicIp = producerExportSubnetRoutesWithPublicIp;
        return this;
    }
    
    /**
     * Import custom routes flag value for peering from producer to consumer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("producerImportCustomRoutes")
    public Boolean producerImportCustomRoutes;
    public ConsumerConfigInput withProducerImportCustomRoutes(Boolean producerImportCustomRoutes) {
        this.producerImportCustomRoutes = producerImportCustomRoutes;
        return this;
    }
    
    /**
     * Import subnet routes with public ip flag value for peering from producer to consumer.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("producerImportSubnetRoutesWithPublicIp")
    public Boolean producerImportSubnetRoutesWithPublicIp;
    public ConsumerConfigInput withProducerImportSubnetRoutesWithPublicIp(Boolean producerImportSubnetRoutesWithPublicIp) {
        this.producerImportSubnetRoutesWithPublicIp = producerImportSubnetRoutesWithPublicIp;
        return this;
    }
    
}
