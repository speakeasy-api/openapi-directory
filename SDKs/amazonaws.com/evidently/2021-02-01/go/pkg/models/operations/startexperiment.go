// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
	"time"
)

type StartExperimentPathParams struct {
	// The name of the experiment to start.
	Experiment string `pathParam:"style=simple,explode=false,name=experiment"`
	// The name or ARN of the project that contains the experiment to start.
	Project string `pathParam:"style=simple,explode=false,name=project"`
}

type StartExperimentHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

type StartExperimentRequestBody struct {
	// The date and time to end the experiment. This must be no more than 30 days after the experiment starts.
	AnalysisCompleteTime time.Time `json:"analysisCompleteTime"`
}

type StartExperimentRequest struct {
	PathParams StartExperimentPathParams
	Headers    StartExperimentHeaders
	Request    StartExperimentRequestBody `request:"mediaType=application/json"`
}

type StartExperimentResponse struct {
	// AccessDeniedException
	AccessDeniedException interface{}
	// ConflictException
	ConflictException interface{}
	ContentType       string
	// ResourceNotFoundException
	ResourceNotFoundException interface{}
	// ServiceQuotaExceededException
	ServiceQuotaExceededException interface{}
	// Success
	StartExperimentResponse *shared.StartExperimentResponse
	StatusCode              int
	RawResponse             *http.Response
	// ThrottlingException
	ThrottlingException interface{}
	// ValidationException
	ValidationException interface{}
}
