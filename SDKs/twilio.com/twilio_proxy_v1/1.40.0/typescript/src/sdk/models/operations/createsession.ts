/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";
export const CreateSessionServerList = ["https://proxy.twilio.com"] as const;

export class CreateSessionSecurity extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=password",
  })
  password: string;

  @SpeakeasyMetadata({
    data: "security, scheme=true;type=http;subtype=basic;name=username",
  })
  username: string;
}

export class CreateSessionCreateSessionRequest extends SpeakeasyBase {
  /**
   * The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date when the Session should expire. If this is value is present, it overrides the `ttl` value.
   */
  @SpeakeasyMetadata({
    data: "form, name=DateExpiry;dateTimeFormat=YYYY-MM-DDThh:mm:ss.sssZ",
  })
  dateExpiry?: Date;

  @SpeakeasyMetadata({ data: "form, name=Mode" })
  mode?: shared.SessionEnumModeEnum;

  /**
   * The Participant objects to include in the new session.
   */
  @SpeakeasyMetadata({ data: "form, name=Participants" })
  participants?: any[];

  @SpeakeasyMetadata({ data: "form, name=Status" })
  status?: shared.SessionEnumStatusEnum;

  /**
   * The time, in seconds, when the session will expire. The time is measured from the last Session create or the Session's last Interaction.
   */
  @SpeakeasyMetadata({ data: "form, name=Ttl" })
  ttl?: number;

  /**
   * An application-defined string that uniquely identifies the resource. This value must be 191 characters or fewer in length and be unique. **This value should not have PII.**
   */
  @SpeakeasyMetadata({ data: "form, name=UniqueName" })
  uniqueName?: string;
}

export class CreateSessionRequest extends SpeakeasyBase {
  @SpeakeasyMetadata({
    data: "request, media_type=application/x-www-form-urlencoded",
  })
  requestBody?: CreateSessionCreateSessionRequest;

  /**
   * The SID of the parent [Service](https://www.twilio.com/docs/proxy/api/service) resource.
   */
  @SpeakeasyMetadata({
    data: "pathParam, style=simple;explode=false;name=ServiceSid",
  })
  serviceSid: string;
}

export class CreateSessionResponse extends SpeakeasyBase {
  @SpeakeasyMetadata()
  contentType: string;

  @SpeakeasyMetadata()
  statusCode: number;

  @SpeakeasyMetadata()
  rawResponse?: AxiosResponse;

  /**
   * Created
   */
  @SpeakeasyMetadata()
  proxyV1ServiceSession?: shared.ProxyV1ServiceSession;
}
