/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import org.openapis.openapi.utils.SpeakeasyMetadata;

public class ListSitesQueryParams {
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=MaxResults")
    public Long maxResults;
    public ListSitesQueryParams withMaxResults(Long maxResults) {
        this.maxResults = maxResults;
        return this;
    }
    
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=NextToken")
    public String nextToken;
    public ListSitesQueryParams withNextToken(String nextToken) {
        this.nextToken = nextToken;
        return this;
    }
    
    /**
     * Filters the results by city.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=OperatingAddressCityFilter")
    public String[] operatingAddressCityFilter;
    public ListSitesQueryParams withOperatingAddressCityFilter(String[] operatingAddressCityFilter) {
        this.operatingAddressCityFilter = operatingAddressCityFilter;
        return this;
    }
    
    /**
     * Filters the results by country code.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=OperatingAddressCountryCodeFilter")
    public String[] operatingAddressCountryCodeFilter;
    public ListSitesQueryParams withOperatingAddressCountryCodeFilter(String[] operatingAddressCountryCodeFilter) {
        this.operatingAddressCountryCodeFilter = operatingAddressCountryCodeFilter;
        return this;
    }
    
    /**
     * Filters the results by state or region.
     */
    @SpeakeasyMetadata("queryParam:style=form,explode=true,name=OperatingAddressStateOrRegionFilter")
    public String[] operatingAddressStateOrRegionFilter;
    public ListSitesQueryParams withOperatingAddressStateOrRegionFilter(String[] operatingAddressStateOrRegionFilter) {
        this.operatingAddressStateOrRegionFilter = operatingAddressStateOrRegionFilter;
        return this;
    }
    
}
