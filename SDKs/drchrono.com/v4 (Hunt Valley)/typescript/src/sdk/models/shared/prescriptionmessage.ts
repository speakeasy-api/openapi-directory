/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Possible values are `Outgoing` and `Incoming`.
 */
export enum PrescriptionMessageMessageDirectionEnum {
  I = "I",
  O = "O",
}

/**
 * OK
 */
export class PrescriptionMessage extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "created_at" })
  createdAt?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "doctor" })
  doctor?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Data sent along with `NewRx`, `RefillRequest`, and `RefillResponses` messages. The format varies, but most likely it will contain `BenefitsCoordination` section with insurance info and `MedicationPrescribed` with medication info. `Patient`, `Pharmacy`, and `Prescriber` are also usually present.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "json_data" })
  jsonData?: string;

  /**
   * Possible values are `Outgoing` and `Incoming`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message_direction" })
  messageDirection?: PrescriptionMessageMessageDirectionEnum;

  /**
   * Message status for Incoming and Outgoing values. Success message for message_type are: `NewRx` : `Sent`, `RefillRequest` : `Received`, `RefillResponse` : `Sent`.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message_status" })
  messageStatus?: string;

  /**
   * Possible values are `NewRx` for outgoing new prescriptions, `RefillRequest` for incoming refill requests, `RefillResponse` for outgoing refill responses, `Error` for incoming errors, `Status` and `Verify` for incoming status reports from Surescripts.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "message_type" })
  messageType?: string;

  /**
   * Refers to the parent message, used for refill responses and incoming error/status reports.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "parent_message" })
  parentMessage?: string;

  /**
   * An optional field which refers to a patient.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "patient" })
  patient?: number;

  /**
   * NCPDPID allocated #ID of the Pharmacy
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pharmacy" })
  pharmacy?: string;
}
