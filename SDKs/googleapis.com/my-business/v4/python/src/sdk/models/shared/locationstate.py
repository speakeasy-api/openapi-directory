"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LocationStateInput:
    r"""Contains a set of booleans that reflect the [state of a Location.](https://support.google.com/business/answer/3480862)"""
    
    can_delete: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('canDelete'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location can be deleted using the Google My Business API."""  
    can_update: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('canUpdate'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location can be updated."""  
    has_pending_edits: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hasPendingEdits'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether any of this Location's properties are in the edit pending state."""  
    has_pending_verification: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hasPendingVerification'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location has pending verification requests."""  
    is_disabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isDisabled'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location is disabled."""  
    is_disconnected: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isDisconnected'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location is disconnected from a place on Google Maps."""  
    is_duplicate: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isDuplicate'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location is a duplicate of another location."""  
    is_google_updated: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isGoogleUpdated'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the place ID associated with this location has updates."""  
    is_local_post_api_disabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isLocalPostApiDisabled'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether [accounts.locations.localPosts](/my-business/reference/rest/v4/accounts.locations.localPosts) is disabled for this location."""  
    is_pending_review: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isPendingReview'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the review of the location is pending."""  
    is_published: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isPublished'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location is published."""  
    is_suspended: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isSuspended'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location is suspended. Suspended locations are not visible to end users in Google products. If you believe this was a mistake, see the [help center article] (https://support.google.com/business/answer/4569145)."""  
    is_verified: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isVerified'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location is verified."""  
    needs_reverification: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('needsReverification'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location requires reverification."""  
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LocationState:
    r"""Contains a set of booleans that reflect the [state of a Location.](https://support.google.com/business/answer/3480862)"""
    
    can_delete: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('canDelete'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location can be deleted using the Google My Business API."""  
    can_have_food_menus: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('canHaveFoodMenus'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates if the listing is eligible for food menu."""  
    can_modify_service_list: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('canModifyServiceList'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates if the listing can modify a ServiceList."""  
    can_operate_health_data: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('canOperateHealthData'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location can operate on Health data."""  
    can_operate_lodging_data: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('canOperateLodgingData'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location can operate on Lodging data."""  
    can_update: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('canUpdate'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location can be updated."""  
    has_pending_edits: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hasPendingEdits'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether any of this Location's properties are in the edit pending state."""  
    has_pending_verification: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('hasPendingVerification'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location has pending verification requests."""  
    is_disabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isDisabled'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location is disabled."""  
    is_disconnected: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isDisconnected'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location is disconnected from a place on Google Maps."""  
    is_duplicate: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isDuplicate'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location is a duplicate of another location."""  
    is_google_updated: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isGoogleUpdated'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the place ID associated with this location has updates."""  
    is_local_post_api_disabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isLocalPostApiDisabled'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether [accounts.locations.localPosts](/my-business/reference/rest/v4/accounts.locations.localPosts) is disabled for this location."""  
    is_pending_review: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isPendingReview'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the review of the location is pending."""  
    is_published: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isPublished'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location is published."""  
    is_suspended: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isSuspended'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location is suspended. Suspended locations are not visible to end users in Google products. If you believe this was a mistake, see the [help center article] (https://support.google.com/business/answer/4569145)."""  
    is_verified: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('isVerified'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location is verified."""  
    needs_reverification: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('needsReverification'), 'exclude': lambda f: f is None }})
    r"""Output only. Indicates whether the location requires reverification."""  
    