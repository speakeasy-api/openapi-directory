/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LoggingConfiguration } from "./loggingconfiguration";
import { TracingConfiguration } from "./tracingconfiguration";
import { Expose, Transform, Type } from "class-transformer";

/**
 * Success
 */
export class DescribeStateMachineForExecutionOutput extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "definition" })
  definition: string;

  @SpeakeasyMetadata()
  @Expose({ name: "label" })
  label?: string;

  /**
   * The <code>LoggingConfiguration</code> data type is used to set CloudWatch Logs options.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "loggingConfiguration" })
  @Type(() => LoggingConfiguration)
  loggingConfiguration?: LoggingConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "mapRunArn" })
  mapRunArn?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name: string;

  @SpeakeasyMetadata()
  @Expose({ name: "roleArn" })
  roleArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "stateMachineArn" })
  stateMachineArn: string;

  @SpeakeasyMetadata()
  @Expose({ name: "tracingConfiguration" })
  @Type(() => TracingConfiguration)
  tracingConfiguration?: TracingConfiguration;

  @SpeakeasyMetadata()
  @Expose({ name: "updateDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  updateDate: Date;
}
