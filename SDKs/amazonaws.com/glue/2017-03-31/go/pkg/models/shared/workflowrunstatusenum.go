// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type WorkflowRunStatusEnum string

const (
	WorkflowRunStatusEnumRunning   WorkflowRunStatusEnum = "RUNNING"
	WorkflowRunStatusEnumCompleted WorkflowRunStatusEnum = "COMPLETED"
	WorkflowRunStatusEnumStopping  WorkflowRunStatusEnum = "STOPPING"
	WorkflowRunStatusEnumStopped   WorkflowRunStatusEnum = "STOPPED"
	WorkflowRunStatusEnumError     WorkflowRunStatusEnum = "ERROR"
)

func (e WorkflowRunStatusEnum) ToPointer() *WorkflowRunStatusEnum {
	return &e
}

func (e *WorkflowRunStatusEnum) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "RUNNING":
		fallthrough
	case "COMPLETED":
		fallthrough
	case "STOPPING":
		fallthrough
	case "STOPPED":
		fallthrough
	case "ERROR":
		*e = WorkflowRunStatusEnum(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkflowRunStatusEnum: %v", v)
	}
}
