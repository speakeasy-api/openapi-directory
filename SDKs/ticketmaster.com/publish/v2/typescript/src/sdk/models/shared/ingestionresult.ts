/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Status of the result
 */
export enum IngestionResultStatusEnum {
  Error = "Error",
  SuccessWarning = "SuccessWarning",
  Success = "Success",
}

/**
 * This class defines the IngestionResult on the Publish API
 */
export class IngestionResult extends SpeakeasyBase {
  /**
   * Id of the entity ingested in the discovery api
   */
  @SpeakeasyMetadata()
  id?: string;

  /**
   * List properties that are ignored in the validation
   */
  @SpeakeasyMetadata()
  ignoredProperties?: Record<string, Record<string, any>>;

  /**
   * List of invalid properties
   */
  @SpeakeasyMetadata()
  invalidProperties?: Record<string, Record<string, any>>;

  /**
   * List of invalid values
   */
  @SpeakeasyMetadata()
  invalidValues?: Record<string, Record<string, any>>;

  /**
   * List of properties that should be present in your entity to ease its dicovery
   */
  @SpeakeasyMetadata()
  missingProperties?: Record<string, Record<string, any>>;

  /**
   * Status of the result
   */
  @SpeakeasyMetadata()
  status: IngestionResultStatusEnum;

  /**
   * List of unknown properties that will be dropped
   */
  @SpeakeasyMetadata()
  unknownProperties?: Record<string, Record<string, any>>;
}
