/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Application } from "./application";
import { Expose, Type } from "class-transformer";

/**
 * Template for a collection of Applications.
 */
export class ApplicationsListResponse extends SpeakeasyBase {
  /**
   * The list of applications that support data transfer and are also installed for the customer.
   */
  @SpeakeasyMetadata({ elemType: Application })
  @Expose({ name: "applications" })
  @Type(() => Application)
  applications?: Application[];

  /**
   * ETag of the resource.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "etag" })
  etag?: string;

  /**
   * Identifies the resource as a collection of Applications.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "kind" })
  kind?: string;

  /**
   * Token to specify the next page in the list.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "nextPageToken" })
  nextPageToken?: string;
}
