/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Entitlement - Specifies an entitlement. Entitlements control access to specific applications within a stack, based on user attributes. Entitlements apply to SAML 2.0 federated user identities. Amazon AppStream 2.0 user pool and streaming URL users are entitled to all applications in a stack. Entitlements don't apply to the desktop stream view application, or to applications managed by a dynamic app provider using the Dynamic Application Framework.
 */
public class Entitlement {
    @JsonProperty("AppVisibility")
    public AppVisibilityEnum appVisibility;

    public Entitlement withAppVisibility(AppVisibilityEnum appVisibility) {
        this.appVisibility = appVisibility;
        return this;
    }
    
    @JsonProperty("Attributes")
    public EntitlementAttribute[] attributes;

    public Entitlement withAttributes(EntitlementAttribute[] attributes) {
        this.attributes = attributes;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("CreatedTime")
    public OffsetDateTime createdTime;

    public Entitlement withCreatedTime(OffsetDateTime createdTime) {
        this.createdTime = createdTime;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("Description")
    public String description;

    public Entitlement withDescription(String description) {
        this.description = description;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("LastModifiedTime")
    public OffsetDateTime lastModifiedTime;

    public Entitlement withLastModifiedTime(OffsetDateTime lastModifiedTime) {
        this.lastModifiedTime = lastModifiedTime;
        return this;
    }
    
    @JsonProperty("Name")
    public String name;

    public Entitlement withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("StackName")
    public String stackName;

    public Entitlement withStackName(String stackName) {
        this.stackName = stackName;
        return this;
    }
    
    public Entitlement(@JsonProperty("AppVisibility") AppVisibilityEnum appVisibility, @JsonProperty("Attributes") EntitlementAttribute[] attributes, @JsonProperty("Name") String name, @JsonProperty("StackName") String stackName) {
        this.appVisibility = appVisibility;
        this.attributes = attributes;
        this.name = name;
        this.stackName = stackName;
  }
}
