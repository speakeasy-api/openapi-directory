"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import inventorysourcedisplaycreativeconfig as shared_inventorysourcedisplaycreativeconfig
from ..shared import inventorysourcevideocreativeconfig as shared_inventorysourcevideocreativeconfig
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class CreativeConfigCreativeTypeEnum(str, Enum):
    r"""The type of creative that can be assigned to the inventory source. Only the following types are supported: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_VIDEO`"""
    CREATIVE_TYPE_UNSPECIFIED = 'CREATIVE_TYPE_UNSPECIFIED'
    CREATIVE_TYPE_STANDARD = 'CREATIVE_TYPE_STANDARD'
    CREATIVE_TYPE_EXPANDABLE = 'CREATIVE_TYPE_EXPANDABLE'
    CREATIVE_TYPE_VIDEO = 'CREATIVE_TYPE_VIDEO'
    CREATIVE_TYPE_NATIVE = 'CREATIVE_TYPE_NATIVE'
    CREATIVE_TYPE_TEMPLATED_APP_INSTALL = 'CREATIVE_TYPE_TEMPLATED_APP_INSTALL'
    CREATIVE_TYPE_NATIVE_SITE_SQUARE = 'CREATIVE_TYPE_NATIVE_SITE_SQUARE'
    CREATIVE_TYPE_TEMPLATED_APP_INSTALL_INTERSTITIAL = 'CREATIVE_TYPE_TEMPLATED_APP_INSTALL_INTERSTITIAL'
    CREATIVE_TYPE_LIGHTBOX = 'CREATIVE_TYPE_LIGHTBOX'
    CREATIVE_TYPE_NATIVE_APP_INSTALL = 'CREATIVE_TYPE_NATIVE_APP_INSTALL'
    CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE = 'CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE'
    CREATIVE_TYPE_AUDIO = 'CREATIVE_TYPE_AUDIO'
    CREATIVE_TYPE_PUBLISHER_HOSTED = 'CREATIVE_TYPE_PUBLISHER_HOSTED'
    CREATIVE_TYPE_NATIVE_VIDEO = 'CREATIVE_TYPE_NATIVE_VIDEO'
    CREATIVE_TYPE_TEMPLATED_APP_INSTALL_VIDEO = 'CREATIVE_TYPE_TEMPLATED_APP_INSTALL_VIDEO'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class CreativeConfig:
    r"""Creative requirements configuration for the inventory source."""
    
    creative_type: Optional[CreativeConfigCreativeTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('creativeType'), 'exclude': lambda f: f is None }})
    r"""The type of creative that can be assigned to the inventory source. Only the following types are supported: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_VIDEO`"""  
    display_creative_config: Optional[shared_inventorysourcedisplaycreativeconfig.InventorySourceDisplayCreativeConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('displayCreativeConfig'), 'exclude': lambda f: f is None }})
    r"""The configuration for display creatives."""  
    video_creative_config: Optional[shared_inventorysourcevideocreativeconfig.InventorySourceVideoCreativeConfig] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('videoCreativeConfig'), 'exclude': lambda f: f is None }})
    r"""The configuration for video creatives."""  
    