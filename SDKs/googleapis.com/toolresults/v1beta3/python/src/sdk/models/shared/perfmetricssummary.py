"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import appstarttime as shared_appstarttime
from ..shared import graphicsstats as shared_graphicsstats
from ..shared import perfenvironment as shared_perfenvironment
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Optional

class PerfMetricsSummaryPerfMetricsEnum(str, Enum):
    PERF_METRIC_TYPE_UNSPECIFIED = 'perfMetricTypeUnspecified'
    MEMORY = 'memory'
    CPU = 'cpu'
    NETWORK = 'network'
    GRAPHICS = 'graphics'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class PerfMetricsSummary:
    r"""A summary of perf metrics collected and performance environment info"""
    
    app_start_time: Optional[shared_appstarttime.AppStartTime] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('appStartTime'), 'exclude': lambda f: f is None }})  
    execution_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('executionId'), 'exclude': lambda f: f is None }})
    r"""A tool results execution ID. @OutputOnly"""  
    graphics_stats: Optional[shared_graphicsstats.GraphicsStats] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('graphicsStats'), 'exclude': lambda f: f is None }})
    r"""Graphics statistics for the App. The information is collected from 'adb shell dumpsys graphicsstats'. For more info see: https://developer.android.com/training/testing/performance.html Statistics will only be present for API 23+."""  
    history_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('historyId'), 'exclude': lambda f: f is None }})
    r"""A tool results history ID. @OutputOnly"""  
    perf_environment: Optional[shared_perfenvironment.PerfEnvironment] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('perfEnvironment'), 'exclude': lambda f: f is None }})
    r"""Encapsulates performance environment info"""  
    perf_metrics: Optional[list[PerfMetricsSummaryPerfMetricsEnum]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('perfMetrics'), 'exclude': lambda f: f is None }})
    r"""Set of resource collected"""  
    project_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('projectId'), 'exclude': lambda f: f is None }})
    r"""The cloud project @OutputOnly"""  
    step_id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stepId'), 'exclude': lambda f: f is None }})
    r"""A tool results step ID. @OutputOnly"""  
    