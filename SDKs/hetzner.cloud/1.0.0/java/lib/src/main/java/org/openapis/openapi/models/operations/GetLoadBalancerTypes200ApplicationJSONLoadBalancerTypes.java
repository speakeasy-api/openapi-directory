/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.operations;

import com.fasterxml.jackson.annotation.JsonProperty;

public class GetLoadBalancerTypes200ApplicationJSONLoadBalancerTypes {
    /**
     * Point in time when the Load Balancer type is deprecated (in ISO-8601 format)
     */
    @JsonProperty("deprecated")
    public String deprecated;

    public GetLoadBalancerTypes200ApplicationJSONLoadBalancerTypes withDeprecated(String deprecated) {
        this.deprecated = deprecated;
        return this;
    }
    
    /**
     * Description of the Load Balancer type
     */
    @JsonProperty("description")
    public String description;

    public GetLoadBalancerTypes200ApplicationJSONLoadBalancerTypes withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * ID of the Load Balancer type
     */
    @JsonProperty("id")
    public Double id;

    public GetLoadBalancerTypes200ApplicationJSONLoadBalancerTypes withId(Double id) {
        this.id = id;
        return this;
    }
    
    /**
     * Number of SSL Certificates that can be assigned to a single Load Balancer
     */
    @JsonProperty("max_assigned_certificates")
    public Double maxAssignedCertificates;

    public GetLoadBalancerTypes200ApplicationJSONLoadBalancerTypes withMaxAssignedCertificates(Double maxAssignedCertificates) {
        this.maxAssignedCertificates = maxAssignedCertificates;
        return this;
    }
    
    /**
     * Number of maximum simultaneous open connections
     */
    @JsonProperty("max_connections")
    public Double maxConnections;

    public GetLoadBalancerTypes200ApplicationJSONLoadBalancerTypes withMaxConnections(Double maxConnections) {
        this.maxConnections = maxConnections;
        return this;
    }
    
    /**
     * Number of services a Load Balancer of this type can have
     */
    @JsonProperty("max_services")
    public Double maxServices;

    public GetLoadBalancerTypes200ApplicationJSONLoadBalancerTypes withMaxServices(Double maxServices) {
        this.maxServices = maxServices;
        return this;
    }
    
    /**
     * Number of targets a single Load Balancer can have
     */
    @JsonProperty("max_targets")
    public Double maxTargets;

    public GetLoadBalancerTypes200ApplicationJSONLoadBalancerTypes withMaxTargets(Double maxTargets) {
        this.maxTargets = maxTargets;
        return this;
    }
    
    /**
     * Unique identifier of the Load Balancer type
     */
    @JsonProperty("name")
    public String name;

    public GetLoadBalancerTypes200ApplicationJSONLoadBalancerTypes withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Prices in different network zones
     */
    @JsonProperty("prices")
    public GetLoadBalancerTypes200ApplicationJSONLoadBalancerTypesPrices[] prices;

    public GetLoadBalancerTypes200ApplicationJSONLoadBalancerTypes withPrices(GetLoadBalancerTypes200ApplicationJSONLoadBalancerTypesPrices[] prices) {
        this.prices = prices;
        return this;
    }
    
    public GetLoadBalancerTypes200ApplicationJSONLoadBalancerTypes(@JsonProperty("deprecated") String deprecated, @JsonProperty("description") String description, @JsonProperty("id") Double id, @JsonProperty("max_assigned_certificates") Double maxAssignedCertificates, @JsonProperty("max_connections") Double maxConnections, @JsonProperty("max_services") Double maxServices, @JsonProperty("max_targets") Double maxTargets, @JsonProperty("name") String name, @JsonProperty("prices") GetLoadBalancerTypes200ApplicationJSONLoadBalancerTypesPrices[] prices) {
        this.deprecated = deprecated;
        this.description = description;
        this.id = id;
        this.maxAssignedCertificates = maxAssignedCertificates;
        this.maxConnections = maxConnections;
        this.maxServices = maxServices;
        this.maxTargets = maxTargets;
        this.name = name;
        this.prices = prices;
  }
}
