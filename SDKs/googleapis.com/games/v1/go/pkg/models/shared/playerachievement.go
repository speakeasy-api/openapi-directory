// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// PlayerAchievementAchievementStateEnum - The state of the achievement.
type PlayerAchievementAchievementStateEnum string

const (
	PlayerAchievementAchievementStateEnumStateUnspecified PlayerAchievementAchievementStateEnum = "STATE_UNSPECIFIED"
	PlayerAchievementAchievementStateEnumHidden           PlayerAchievementAchievementStateEnum = "HIDDEN"
	PlayerAchievementAchievementStateEnumRevealed         PlayerAchievementAchievementStateEnum = "REVEALED"
	PlayerAchievementAchievementStateEnumUnlocked         PlayerAchievementAchievementStateEnum = "UNLOCKED"
)

func (e *PlayerAchievementAchievementStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "STATE_UNSPECIFIED":
		fallthrough
	case "HIDDEN":
		fallthrough
	case "REVEALED":
		fallthrough
	case "UNLOCKED":
		*e = PlayerAchievementAchievementStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for PlayerAchievementAchievementStateEnum: %s", s)
	}
}

// PlayerAchievement - An achievement object.
type PlayerAchievement struct {
	// The state of the achievement.
	AchievementState *PlayerAchievementAchievementStateEnum `json:"achievementState,omitempty"`
	// The current steps for an incremental achievement.
	CurrentSteps *int `json:"currentSteps,omitempty"`
	// Experience points earned for the achievement. This field is absent for achievements that have not yet been unlocked and 0 for achievements that have been unlocked by testers but that are unpublished.
	ExperiencePoints *string `json:"experiencePoints,omitempty"`
	// The current steps for an incremental achievement as a string.
	FormattedCurrentStepsString *string `json:"formattedCurrentStepsString,omitempty"`
	// The ID of the achievement.
	ID *string `json:"id,omitempty"`
	// Uniquely identifies the type of this resource. Value is always the fixed string `games#playerAchievement`.
	Kind *string `json:"kind,omitempty"`
	// The timestamp of the last modification to this achievement's state.
	LastUpdatedTimestamp *string `json:"lastUpdatedTimestamp,omitempty"`
}
