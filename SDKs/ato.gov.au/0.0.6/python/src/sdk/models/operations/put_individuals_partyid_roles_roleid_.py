"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..shared import invalid_argument as shared_invalid_argument
from ..shared import not_found as shared_not_found
from ..shared import party_role as shared_party_role
from ..shared import unauthenticated as shared_unauthenticated
from typing import Optional


@dataclasses.dataclass
class PutIndividualsPartyIDRolesRoleIDRequest:
    
    api_key: str = dataclasses.field(metadata={'header': { 'field_name': 'apiKey', 'style': 'simple', 'explode': False }})
    r"""The API key."""  
    party_role_input: shared_party_role.PartyRoleInput = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    r"""Role resource"""  
    party_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'partyId', 'style': 'simple', 'explode': False }})
    r"""The party identifier."""  
    role_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'roleId', 'style': 'simple', 'explode': False }})
    r"""The role identifier."""  
    

@dataclasses.dataclass
class PutIndividualsPartyIDRolesRoleIDResponse:
    
    content_type: str = dataclasses.field()  
    status_code: int = dataclasses.field()  
    invalid_argument: Optional[shared_invalid_argument.InvalidArgument] = dataclasses.field(default=None)
    r"""The client specified an invalid argument"""  
    not_found: Optional[shared_not_found.NotFound] = dataclasses.field(default=None)
    r"""The specified resource was not found"""  
    party_role: Optional[shared_party_role.PartyRole] = dataclasses.field(default=None)
    r"""Role was updated"""  
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)  
    unauthenticated: Optional[shared_unauthenticated.Unauthenticated] = dataclasses.field(default=None)
    r"""Request not authenticated due to missing, invalid, or expired token"""  
    