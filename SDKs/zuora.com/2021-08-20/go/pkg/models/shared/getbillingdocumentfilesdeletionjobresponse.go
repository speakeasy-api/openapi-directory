// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// GETBillingDocumentFilesDeletionJobResponseStatusEnum - The status of the billing document file deletion job.
type GETBillingDocumentFilesDeletionJobResponseStatusEnum string

const (
	GETBillingDocumentFilesDeletionJobResponseStatusEnumPending    GETBillingDocumentFilesDeletionJobResponseStatusEnum = "Pending"
	GETBillingDocumentFilesDeletionJobResponseStatusEnumProcessing GETBillingDocumentFilesDeletionJobResponseStatusEnum = "Processing"
	GETBillingDocumentFilesDeletionJobResponseStatusEnumCompleted  GETBillingDocumentFilesDeletionJobResponseStatusEnum = "Completed"
	GETBillingDocumentFilesDeletionJobResponseStatusEnumError      GETBillingDocumentFilesDeletionJobResponseStatusEnum = "Error"
)

func (e *GETBillingDocumentFilesDeletionJobResponseStatusEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "Pending":
		fallthrough
	case "Processing":
		fallthrough
	case "Completed":
		fallthrough
	case "Error":
		*e = GETBillingDocumentFilesDeletionJobResponseStatusEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for GETBillingDocumentFilesDeletionJobResponseStatusEnum: %s", s)
	}
}

type GETBillingDocumentFilesDeletionJobResponse struct {
	// The unique ID of the billing document file deletion job.
	//
	ID *string `json:"id,omitempty"`
	// The status of the billing document file deletion job.
	//
	Status *GETBillingDocumentFilesDeletionJobResponseStatusEnum `json:"status,omitempty"`
	// Returns `true` if the request was processed successfully.
	Success *bool `json:"success,omitempty"`
}
