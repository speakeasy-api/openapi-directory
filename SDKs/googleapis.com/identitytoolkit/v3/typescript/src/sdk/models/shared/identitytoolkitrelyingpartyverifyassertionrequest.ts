/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Request to verify the IDP assertion.
 */
export class IdentitytoolkitRelyingpartyVerifyAssertionRequest extends SpeakeasyBase {
  /**
   * When it's true, automatically creates a new account if the user doesn't exist. When it's false, allows existing user to sign in normally and throws exception if the user doesn't exist.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "autoCreate" })
  autoCreate?: boolean;

  /**
   * GCP project number of the requesting delegated app. Currently only intended for Firebase V1 migration.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "delegatedProjectNumber" })
  delegatedProjectNumber?: string;

  /**
   * The GITKit token of the authenticated user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "idToken" })
  idToken?: string;

  /**
   * Instance id token of the app.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "instanceId" })
  instanceId?: string;

  /**
   * The GITKit token for the non-trusted IDP pending to be confirmed by the user.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "pendingIdToken" })
  pendingIdToken?: string;

  /**
   * The post body if the request is a HTTP POST.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "postBody" })
  postBody?: string;

  /**
   * The URI to which the IDP redirects the user back. It may contain federated login result params added by the IDP.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "requestUri" })
  requestUri?: string;

  /**
   * Whether return 200 and IDP credential rather than throw exception when federated id is already linked.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "returnIdpCredential" })
  returnIdpCredential?: boolean;

  /**
   * Whether to return refresh tokens.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "returnRefreshToken" })
  returnRefreshToken?: boolean;

  /**
   * Whether return sts id token and refresh token instead of gitkit token.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "returnSecureToken" })
  returnSecureToken?: boolean;

  /**
   * Session ID, which should match the one in previous createAuthUri request.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "sessionId" })
  sessionId?: string;

  /**
   * For multi-tenant use cases, in order to construct sign-in URL with the correct IDP parameters, Firebear needs to know which Tenant to retrieve IDP configs from.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tenantId" })
  tenantId?: string;

  /**
   * Tenant project number to be used for idp discovery.
   */
  @SpeakeasyMetadata()
  @Expose({ name: "tenantProjectNumber" })
  tenantProjectNumber?: string;
}
