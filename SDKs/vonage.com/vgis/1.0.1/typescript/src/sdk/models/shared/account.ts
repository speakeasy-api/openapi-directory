/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

/**
 * Status of the account
 */
export enum AccountStatusEnum {
  Pending = "PENDING",
  Active = "ACTIVE",
  Deleted = "DELETED",
  Archived = "ARCHIVED",
}

export class AccountUcisHealth extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "message" })
  message?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: string;
}

export class AccountUcis extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "health" })
  @Type(() => AccountUcisHealth)
  health?: AccountUcisHealth;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "type" })
  type?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ucpAccountId" })
  ucpAccountId?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "ucpLabel" })
  ucpLabel?: string;
}

/**
 * Successful
 */
export class Account extends SpeakeasyBase {
  /**
   * Unique identifier of the account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  /**
   * Name of the account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  /**
   * Organization of the account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "org" })
  org?: string;

  /**
   * Status of the account
   */
  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: AccountStatusEnum;

  @SpeakeasyMetadata({ elemType: AccountUcis })
  @Expose({ name: "ucis" })
  @Type(() => AccountUcis)
  ucis?: AccountUcis[];
}
