/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * Environment - Represents a Google Tag Manager Environment. Note that a user can create, delete and update environments of type USER, but can only update the enable_debug and url fields of environments of other types.
 */
public class Environment {
    /**
     * GTM Account ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("accountId")
    public String accountId;
    public Environment withAccountId(String accountId) {
        this.accountId = accountId;
        return this;
    }
    
    /**
     * The environment authorization code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizationCode")
    public String authorizationCode;
    public Environment withAuthorizationCode(String authorizationCode) {
        this.authorizationCode = authorizationCode;
        return this;
    }
    
    /**
     * The last update time-stamp for the authorization code.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("authorizationTimestamp")
    public String authorizationTimestamp;
    public Environment withAuthorizationTimestamp(String authorizationTimestamp) {
        this.authorizationTimestamp = authorizationTimestamp;
        return this;
    }
    
    /**
     * GTM Container ID.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containerId")
    public String containerId;
    public Environment withContainerId(String containerId) {
        this.containerId = containerId;
        return this;
    }
    
    /**
     * Represents a link to a container version.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("containerVersionId")
    public String containerVersionId;
    public Environment withContainerVersionId(String containerVersionId) {
        this.containerVersionId = containerVersionId;
        return this;
    }
    
    /**
     * The environment description. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("description")
    public String description;
    public Environment withDescription(String description) {
        this.description = description;
        return this;
    }
    
    /**
     * Whether or not to enable debug by default for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("enableDebug")
    public Boolean enableDebug;
    public Environment withEnableDebug(Boolean enableDebug) {
        this.enableDebug = enableDebug;
        return this;
    }
    
    /**
     * GTM Environment ID uniquely identifies the GTM Environment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("environmentId")
    public String environmentId;
    public Environment withEnvironmentId(String environmentId) {
        this.environmentId = environmentId;
        return this;
    }
    
    /**
     * The fingerprint of the GTM environment as computed at storage time. This value is recomputed whenever the environment is modified.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fingerprint")
    public String fingerprint;
    public Environment withFingerprint(String fingerprint) {
        this.fingerprint = fingerprint;
        return this;
    }
    
    /**
     * The environment display name. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public String name;
    public Environment withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * GTM Environment's API relative path.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("path")
    public String path;
    public Environment withPath(String path) {
        this.path = path;
        return this;
    }
    
    /**
     * Auto generated link to the tag manager UI
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("tagManagerUrl")
    public String tagManagerUrl;
    public Environment withTagManagerUrl(String tagManagerUrl) {
        this.tagManagerUrl = tagManagerUrl;
        return this;
    }
    
    /**
     * The type of this environment.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("type")
    public EnvironmentTypeEnum type;
    public Environment withType(EnvironmentTypeEnum type) {
        this.type = type;
        return this;
    }
    
    /**
     * Default preview page url for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;
    public Environment withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * Represents a link to a quick preview of a workspace.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspaceId")
    public String workspaceId;
    public Environment withWorkspaceId(String workspaceId) {
        this.workspaceId = workspaceId;
        return this;
    }
    
}
