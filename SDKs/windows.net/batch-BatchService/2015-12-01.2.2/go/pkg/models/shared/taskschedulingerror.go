// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// TaskSchedulingErrorCategoryEnum - Gets or sets the category of the task scheduling error.
type TaskSchedulingErrorCategoryEnum string

const (
	TaskSchedulingErrorCategoryEnumUsererror   TaskSchedulingErrorCategoryEnum = "usererror"
	TaskSchedulingErrorCategoryEnumServererror TaskSchedulingErrorCategoryEnum = "servererror"
	TaskSchedulingErrorCategoryEnumUnmapped    TaskSchedulingErrorCategoryEnum = "unmapped"
)

func (e *TaskSchedulingErrorCategoryEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "usererror":
		fallthrough
	case "servererror":
		fallthrough
	case "unmapped":
		*e = TaskSchedulingErrorCategoryEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for TaskSchedulingErrorCategoryEnum: %s", s)
	}
}

// TaskSchedulingError - Information about an error when scheduling a task.
type TaskSchedulingError struct {
	// Gets or sets the category of the task scheduling error.
	Category TaskSchedulingErrorCategoryEnum `json:"category"`
	// Gets or sets an identifier for the task scheduling error.  Codes are invariant and are intended to be consumed programmatically.
	Code *string `json:"code,omitempty"`
	// Gets or sets the list of additional error details related to the scheduling error.
	Details []NameValuePair `json:"details,omitempty"`
	// Gets or sets a message describing the task scheduling error, intended to be suitable for display in a user interface.
	Message *string `json:"message,omitempty"`
}
