"use strict";
/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateRouteTableResult = exports.CreateRouteTableResultRouteTable = exports.CreateRouteTableResultRouteTableTags = exports.CreateRouteTableResultRouteTableRoutes = exports.CreateRouteTableResultRouteTableRoutesStateEnum = exports.CreateRouteTableResultRouteTableRoutesOriginEnum = exports.CreateRouteTableResultRouteTablePropagatingVgws = exports.CreateRouteTableResultRouteTableAssociations = exports.CreateRouteTableResultRouteTableAssociationsAssociationState = exports.CreateRouteTableResultRouteTableAssociationsAssociationStateStateEnum = void 0;
var utils_1 = require("../../../internal/utils");
/**
 * The state of the association.
 */
var CreateRouteTableResultRouteTableAssociationsAssociationStateStateEnum;
(function (CreateRouteTableResultRouteTableAssociationsAssociationStateStateEnum) {
    CreateRouteTableResultRouteTableAssociationsAssociationStateStateEnum["Associating"] = "associating";
    CreateRouteTableResultRouteTableAssociationsAssociationStateStateEnum["Associated"] = "associated";
    CreateRouteTableResultRouteTableAssociationsAssociationStateStateEnum["Disassociating"] = "disassociating";
    CreateRouteTableResultRouteTableAssociationsAssociationStateStateEnum["Disassociated"] = "disassociated";
    CreateRouteTableResultRouteTableAssociationsAssociationStateStateEnum["Failed"] = "failed";
})(CreateRouteTableResultRouteTableAssociationsAssociationStateStateEnum = exports.CreateRouteTableResultRouteTableAssociationsAssociationStateStateEnum || (exports.CreateRouteTableResultRouteTableAssociationsAssociationStateStateEnum = {}));
/**
 * The state of the association.
 */
var CreateRouteTableResultRouteTableAssociationsAssociationState = /** @class */ (function (_super) {
    __extends(CreateRouteTableResultRouteTableAssociationsAssociationState, _super);
    function CreateRouteTableResultRouteTableAssociationsAssociationState() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableAssociationsAssociationState.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableAssociationsAssociationState.prototype, "statusMessage", void 0);
    return CreateRouteTableResultRouteTableAssociationsAssociationState;
}(utils_1.SpeakeasyBase));
exports.CreateRouteTableResultRouteTableAssociationsAssociationState = CreateRouteTableResultRouteTableAssociationsAssociationState;
/**
 * Describes an association between a route table and a subnet or gateway.
 */
var CreateRouteTableResultRouteTableAssociations = /** @class */ (function (_super) {
    __extends(CreateRouteTableResultRouteTableAssociations, _super);
    function CreateRouteTableResultRouteTableAssociations() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateRouteTableResultRouteTableAssociationsAssociationState)
    ], CreateRouteTableResultRouteTableAssociations.prototype, "associationState", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableAssociations.prototype, "gatewayId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", Boolean)
    ], CreateRouteTableResultRouteTableAssociations.prototype, "main", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableAssociations.prototype, "routeTableAssociationId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableAssociations.prototype, "routeTableId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableAssociations.prototype, "subnetId", void 0);
    return CreateRouteTableResultRouteTableAssociations;
}(utils_1.SpeakeasyBase));
exports.CreateRouteTableResultRouteTableAssociations = CreateRouteTableResultRouteTableAssociations;
/**
 * Describes a virtual private gateway propagating route.
 */
var CreateRouteTableResultRouteTablePropagatingVgws = /** @class */ (function (_super) {
    __extends(CreateRouteTableResultRouteTablePropagatingVgws, _super);
    function CreateRouteTableResultRouteTablePropagatingVgws() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTablePropagatingVgws.prototype, "gatewayId", void 0);
    return CreateRouteTableResultRouteTablePropagatingVgws;
}(utils_1.SpeakeasyBase));
exports.CreateRouteTableResultRouteTablePropagatingVgws = CreateRouteTableResultRouteTablePropagatingVgws;
/**
 * <p>Describes how the route was created.</p> <ul> <li> <p> <code>CreateRouteTable</code> - The route was automatically created when the route table was created.</p> </li> <li> <p> <code>CreateRoute</code> - The route was manually added to the route table.</p> </li> <li> <p> <code>EnableVgwRoutePropagation</code> - The route was propagated by route propagation.</p> </li> </ul>
 */
var CreateRouteTableResultRouteTableRoutesOriginEnum;
(function (CreateRouteTableResultRouteTableRoutesOriginEnum) {
    CreateRouteTableResultRouteTableRoutesOriginEnum["CreateRouteTable"] = "CreateRouteTable";
    CreateRouteTableResultRouteTableRoutesOriginEnum["CreateRoute"] = "CreateRoute";
    CreateRouteTableResultRouteTableRoutesOriginEnum["EnableVgwRoutePropagation"] = "EnableVgwRoutePropagation";
})(CreateRouteTableResultRouteTableRoutesOriginEnum = exports.CreateRouteTableResultRouteTableRoutesOriginEnum || (exports.CreateRouteTableResultRouteTableRoutesOriginEnum = {}));
/**
 * The state of the route. The <code>blackhole</code> state indicates that the route's target isn't available (for example, the specified gateway isn't attached to the VPC, or the specified NAT instance has been terminated).
 */
var CreateRouteTableResultRouteTableRoutesStateEnum;
(function (CreateRouteTableResultRouteTableRoutesStateEnum) {
    CreateRouteTableResultRouteTableRoutesStateEnum["Active"] = "active";
    CreateRouteTableResultRouteTableRoutesStateEnum["Blackhole"] = "blackhole";
})(CreateRouteTableResultRouteTableRoutesStateEnum = exports.CreateRouteTableResultRouteTableRoutesStateEnum || (exports.CreateRouteTableResultRouteTableRoutesStateEnum = {}));
/**
 * Describes a route in a route table.
 */
var CreateRouteTableResultRouteTableRoutes = /** @class */ (function (_super) {
    __extends(CreateRouteTableResultRouteTableRoutes, _super);
    function CreateRouteTableResultRouteTableRoutes() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableRoutes.prototype, "carrierGatewayId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableRoutes.prototype, "coreNetworkArn", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableRoutes.prototype, "destinationCidrBlock", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableRoutes.prototype, "destinationIpv6CidrBlock", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableRoutes.prototype, "destinationPrefixListId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableRoutes.prototype, "egressOnlyInternetGatewayId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableRoutes.prototype, "gatewayId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableRoutes.prototype, "instanceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableRoutes.prototype, "instanceOwnerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableRoutes.prototype, "localGatewayId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableRoutes.prototype, "natGatewayId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableRoutes.prototype, "networkInterfaceId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableRoutes.prototype, "origin", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableRoutes.prototype, "state", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableRoutes.prototype, "transitGatewayId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableRoutes.prototype, "vpcPeeringConnectionId", void 0);
    return CreateRouteTableResultRouteTableRoutes;
}(utils_1.SpeakeasyBase));
exports.CreateRouteTableResultRouteTableRoutes = CreateRouteTableResultRouteTableRoutes;
/**
 * Describes a tag.
 */
var CreateRouteTableResultRouteTableTags = /** @class */ (function (_super) {
    __extends(CreateRouteTableResultRouteTableTags, _super);
    function CreateRouteTableResultRouteTableTags() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableTags.prototype, "key", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTableTags.prototype, "value", void 0);
    return CreateRouteTableResultRouteTableTags;
}(utils_1.SpeakeasyBase));
exports.CreateRouteTableResultRouteTableTags = CreateRouteTableResultRouteTableTags;
/**
 * Information about the route table.
 */
var CreateRouteTableResultRouteTable = /** @class */ (function (_super) {
    __extends(CreateRouteTableResultRouteTable, _super);
    function CreateRouteTableResultRouteTable() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: CreateRouteTableResultRouteTableAssociations }),
        __metadata("design:type", Array)
    ], CreateRouteTableResultRouteTable.prototype, "associations", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTable.prototype, "ownerId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({
            elemType: CreateRouteTableResultRouteTablePropagatingVgws,
        }),
        __metadata("design:type", Array)
    ], CreateRouteTableResultRouteTable.prototype, "propagatingVgws", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTable.prototype, "routeTableId", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: CreateRouteTableResultRouteTableRoutes }),
        __metadata("design:type", Array)
    ], CreateRouteTableResultRouteTable.prototype, "routes", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)({ elemType: CreateRouteTableResultRouteTableTags }),
        __metadata("design:type", Array)
    ], CreateRouteTableResultRouteTable.prototype, "tags", void 0);
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", String)
    ], CreateRouteTableResultRouteTable.prototype, "vpcId", void 0);
    return CreateRouteTableResultRouteTable;
}(utils_1.SpeakeasyBase));
exports.CreateRouteTableResultRouteTable = CreateRouteTableResultRouteTable;
/**
 * Success
 */
var CreateRouteTableResult = /** @class */ (function (_super) {
    __extends(CreateRouteTableResult, _super);
    function CreateRouteTableResult() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, utils_1.SpeakeasyMetadata)(),
        __metadata("design:type", CreateRouteTableResultRouteTable)
    ], CreateRouteTableResult.prototype, "routeTable", void 0);
    return CreateRouteTableResult;
}(utils_1.SpeakeasyBase));
exports.CreateRouteTableResult = CreateRouteTableResult;
