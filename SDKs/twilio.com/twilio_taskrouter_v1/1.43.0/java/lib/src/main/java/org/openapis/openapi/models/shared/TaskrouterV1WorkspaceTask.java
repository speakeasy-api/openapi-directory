/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * TaskrouterV1WorkspaceTask - Created
 */
public class TaskrouterV1WorkspaceTask {
    /**
     * The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Task resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("account_sid")
    public String accountSid;

    public TaskrouterV1WorkspaceTask withAccountSid(String accountSid) {
        this.accountSid = accountSid;
        return this;
    }
    
    /**
     * An object that contains the [addon](https://www.twilio.com/docs/taskrouter/marketplace) data for all installed addons.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("addons")
    public String addons;

    public TaskrouterV1WorkspaceTask withAddons(String addons) {
        this.addons = addons;
        return this;
    }
    
    /**
     * The number of seconds since the Task was created.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("age")
    public Long age;

    public TaskrouterV1WorkspaceTask withAge(Long age) {
        this.age = age;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("assignment_status")
    public TaskEnumStatusEnum assignmentStatus;

    public TaskrouterV1WorkspaceTask withAssignmentStatus(TaskEnumStatusEnum assignmentStatus) {
        this.assignmentStatus = assignmentStatus;
        return this;
    }
    
    /**
     * The JSON string with custom attributes of the work. **Note** If this property has been assigned a value, it will only be displayed in FETCH action that returns a single resource. Otherwise, it will be null.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("attributes")
    public String attributes;

    public TaskrouterV1WorkspaceTask withAttributes(String attributes) {
        this.attributes = attributes;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_created")
    public OffsetDateTime dateCreated;

    public TaskrouterV1WorkspaceTask withDateCreated(OffsetDateTime dateCreated) {
        this.dateCreated = dateCreated;
        return this;
    }
    
    /**
     * The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("date_updated")
    public OffsetDateTime dateUpdated;

    public TaskrouterV1WorkspaceTask withDateUpdated(OffsetDateTime dateUpdated) {
        this.dateUpdated = dateUpdated;
        return this;
    }
    
    /**
     * The URLs of related resources.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("links")
    public java.util.Map<String, Object> links;

    public TaskrouterV1WorkspaceTask withLinks(java.util.Map<String, Object> links) {
        this.links = links;
        return this;
    }
    
    /**
     * The current priority score of the Task as assigned to a Worker by the workflow. Tasks with higher priority values will be assigned before Tasks with lower values.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("priority")
    public Long priority;

    public TaskrouterV1WorkspaceTask withPriority(Long priority) {
        this.priority = priority;
        return this;
    }
    
    /**
     * The reason the Task was canceled or completed, if applicable.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("reason")
    public String reason;

    public TaskrouterV1WorkspaceTask withReason(String reason) {
        this.reason = reason;
        return this;
    }
    
    /**
     * The unique string that we created to identify the Task resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sid")
    public String sid;

    public TaskrouterV1WorkspaceTask withSid(String sid) {
        this.sid = sid;
        return this;
    }
    
    /**
     * The SID of the TaskChannel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("task_channel_sid")
    public String taskChannelSid;

    public TaskrouterV1WorkspaceTask withTaskChannelSid(String taskChannelSid) {
        this.taskChannelSid = taskChannelSid;
        return this;
    }
    
    /**
     * The unique name of the TaskChannel.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("task_channel_unique_name")
    public String taskChannelUniqueName;

    public TaskrouterV1WorkspaceTask withTaskChannelUniqueName(String taskChannelUniqueName) {
        this.taskChannelUniqueName = taskChannelUniqueName;
        return this;
    }
    
    /**
     * The date and time in GMT when the Task entered the TaskQueue, specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("task_queue_entered_date")
    public OffsetDateTime taskQueueEnteredDate;

    public TaskrouterV1WorkspaceTask withTaskQueueEnteredDate(OffsetDateTime taskQueueEnteredDate) {
        this.taskQueueEnteredDate = taskQueueEnteredDate;
        return this;
    }
    
    /**
     * The friendly name of the TaskQueue.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("task_queue_friendly_name")
    public String taskQueueFriendlyName;

    public TaskrouterV1WorkspaceTask withTaskQueueFriendlyName(String taskQueueFriendlyName) {
        this.taskQueueFriendlyName = taskQueueFriendlyName;
        return this;
    }
    
    /**
     * The SID of the TaskQueue.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("task_queue_sid")
    public String taskQueueSid;

    public TaskrouterV1WorkspaceTask withTaskQueueSid(String taskQueueSid) {
        this.taskQueueSid = taskQueueSid;
        return this;
    }
    
    /**
     * The amount of time in seconds that the Task can live before being assigned.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeout")
    public Long timeout;

    public TaskrouterV1WorkspaceTask withTimeout(Long timeout) {
        this.timeout = timeout;
        return this;
    }
    
    /**
     * The absolute URL of the Task resource.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("url")
    public String url;

    public TaskrouterV1WorkspaceTask withUrl(String url) {
        this.url = url;
        return this;
    }
    
    /**
     * The friendly name of the Workflow that is controlling the Task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workflow_friendly_name")
    public String workflowFriendlyName;

    public TaskrouterV1WorkspaceTask withWorkflowFriendlyName(String workflowFriendlyName) {
        this.workflowFriendlyName = workflowFriendlyName;
        return this;
    }
    
    /**
     * The SID of the Workflow that is controlling the Task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workflow_sid")
    public String workflowSid;

    public TaskrouterV1WorkspaceTask withWorkflowSid(String workflowSid) {
        this.workflowSid = workflowSid;
        return this;
    }
    
    /**
     * The SID of the Workspace that contains the Task.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("workspace_sid")
    public String workspaceSid;

    public TaskrouterV1WorkspaceTask withWorkspaceSid(String workspaceSid) {
        this.workspaceSid = workspaceSid;
        return this;
    }
    
    public TaskrouterV1WorkspaceTask(){}
}
