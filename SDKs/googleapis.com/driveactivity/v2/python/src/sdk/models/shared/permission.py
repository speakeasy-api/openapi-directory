"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import domain as shared_domain
from ..shared import group as shared_group
from ..shared import user as shared_user
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from sdk import utils
from typing import Any, Optional

class PermissionRoleEnum(str, Enum):
    r"""Indicates the [Google Drive permissions role](https://developers.google.com/drive/web/manage-sharing#roles). The role determines a user's ability to read, write, and comment on items."""
    ROLE_UNSPECIFIED = 'ROLE_UNSPECIFIED'
    OWNER = 'OWNER'
    ORGANIZER = 'ORGANIZER'
    FILE_ORGANIZER = 'FILE_ORGANIZER'
    EDITOR = 'EDITOR'
    COMMENTER = 'COMMENTER'
    VIEWER = 'VIEWER'
    PUBLISHED_VIEWER = 'PUBLISHED_VIEWER'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Permission:
    r"""The permission setting of an object."""
    
    allow_discovery: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('allowDiscovery'), 'exclude': lambda f: f is None }})
    r"""If true, the item can be discovered (e.g. in the user's \\"Shared with me\\" collection) without needing a link to the item."""  
    anyone: Optional[dict[str, Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('anyone'), 'exclude': lambda f: f is None }})
    r"""Represents any user (including a logged out user)."""  
    domain: Optional[shared_domain.Domain] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domain'), 'exclude': lambda f: f is None }})
    r"""Information about a domain."""  
    group: Optional[shared_group.Group] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('group'), 'exclude': lambda f: f is None }})
    r"""Information about a group."""  
    role: Optional[PermissionRoleEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('role'), 'exclude': lambda f: f is None }})
    r"""Indicates the [Google Drive permissions role](https://developers.google.com/drive/web/manage-sharing#roles). The role determines a user's ability to read, write, and comment on items."""  
    user: Optional[shared_user.User] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('user'), 'exclude': lambda f: f is None }})
    r"""Information about an end user."""  
    