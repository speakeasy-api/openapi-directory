"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class LastAdminUserRoom:
    r"""Room information"""
    
    id: int = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id') }})
    r"""Room ID"""  
    last_admin_in_group: bool = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastAdminInGroup') }})
    r"""Determines whether user is last admin of a room due to being the last member of last admin group"""  
    name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name') }})
    r"""Room name"""  
    parent_path: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentPath') }})
    r"""Parent node path
    
    `/` if node is a root node (room)
    """  
    last_admin_in_group_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('lastAdminInGroupId'), 'exclude': lambda f: f is None }})
    r"""ID of the last admin group where the user is the only remaining member
    
    (returned only if `lastAdminInGroup` is `true`)
    """  
    parent_id: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('parentId'), 'exclude': lambda f: f is None }})
    r"""Parent room ID"""  
    