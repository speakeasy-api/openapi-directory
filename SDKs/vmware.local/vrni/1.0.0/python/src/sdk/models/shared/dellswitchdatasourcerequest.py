"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from ..shared import dellswitchtype_enum as shared_dellswitchtype_enum
from ..shared import passwordcredentials as shared_passwordcredentials
from dataclasses_json import Undefined, dataclass_json
from sdk import utils
from typing import Optional


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DellSwitchDataSourceRequest:
    
    nickname: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nickname') }})  
    proxy_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('proxy_id') }})
    r"""proxy vm which should register this vcenter"""  
    credentials: Optional[shared_passwordcredentials.PasswordCredentials] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('credentials'), 'exclude': lambda f: f is None }})  
    enabled: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('enabled'), 'exclude': lambda f: f is None }})  
    fqdn: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fqdn'), 'exclude': lambda f: f is None }})  
    ip: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('ip'), 'exclude': lambda f: f is None }})  
    notes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('notes'), 'exclude': lambda f: f is None }})  
    switch_type: Optional[shared_dellswitchtype_enum.DellSwitchTypeEnum] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('switch_type'), 'exclude': lambda f: f is None }})  
    