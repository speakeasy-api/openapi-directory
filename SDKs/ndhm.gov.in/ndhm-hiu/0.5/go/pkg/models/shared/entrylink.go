// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

// EntryLinkMediaEnum - mimetype of the content.
type EntryLinkMediaEnum string

const (
	EntryLinkMediaEnumApplicationFhirPlusJSON EntryLinkMediaEnum = "application/fhir+json"
)

func (e *EntryLinkMediaEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "application/fhir+json":
		*e = EntryLinkMediaEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for EntryLinkMediaEnum: %s", s)
	}
}

type EntryLink struct {
	// care context reference number.
	CareContextReference string `json:"careContextReference"`
	// Md5 checksum of the content before encryption
	Checksum string `json:"checksum"`
	// Encrypted content
	Link string `json:"link"`
	// mimetype of the content.
	Media EntryLinkMediaEnum `json:"media"`
}
