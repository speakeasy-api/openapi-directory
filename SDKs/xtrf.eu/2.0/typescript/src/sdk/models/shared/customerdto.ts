/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AddressDTO } from "./addressdto";
import { ContactDTO } from "./contactdto";
import { CustomerAccountingDTO } from "./customeraccountingdto";
import { CustomerPersonDTO } from "./customerpersondto";
import { CustomerResponsiblePersonsDTO } from "./customerresponsiblepersonsdto";
import { CustomFieldDTO } from "./customfielddto";
import { Expose, Transform, Type } from "class-transformer";

export enum CustomerDTOStatusEnum {
  Active = "ACTIVE",
  Inactive = "INACTIVE",
  Potential = "POTENTIAL",
}

/**
 * Created user object
 */
export class CustomerDTO extends SpeakeasyBase {
  @SpeakeasyMetadata()
  @Expose({ name: "accountOnCustomerServer" })
  accountOnCustomerServer?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "accounting" })
  @Type(() => CustomerAccountingDTO)
  accounting?: CustomerAccountingDTO;

  @SpeakeasyMetadata()
  @Expose({ name: "billingAddress" })
  @Type(() => AddressDTO)
  billingAddress?: AddressDTO;

  @SpeakeasyMetadata()
  @Expose({ name: "branchId" })
  branchId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "categoriesIds" })
  categoriesIds?: number[];

  @SpeakeasyMetadata()
  @Expose({ name: "clientFirstProjectDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  clientFirstProjectDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "clientFirstQuoteDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  clientFirstQuoteDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "clientLastProjectDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  clientLastProjectDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "clientLastQuoteDate" })
  @Transform(({ value }) => new Date(value), { toClassOnly: true })
  clientLastQuoteDate?: Date;

  @SpeakeasyMetadata()
  @Expose({ name: "clientNumberOfProjects" })
  clientNumberOfProjects?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "clientNumberOfQuotes" })
  clientNumberOfQuotes?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "contact" })
  @Type(() => ContactDTO)
  contact?: ContactDTO;

  @SpeakeasyMetadata()
  @Expose({ name: "contractNumber" })
  contractNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "correspondenceAddress" })
  @Type(() => AddressDTO)
  correspondenceAddress?: AddressDTO;

  @SpeakeasyMetadata({ elemType: CustomFieldDTO })
  @Expose({ name: "customFields" })
  @Type(() => CustomFieldDTO)
  customFields?: CustomFieldDTO[];

  @SpeakeasyMetadata()
  @Expose({ name: "fullName" })
  fullName?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "id" })
  id?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "idNumber" })
  idNumber?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "industriesIds" })
  industriesIds?: number[];

  @SpeakeasyMetadata()
  @Expose({ name: "leadSourceId" })
  leadSourceId?: number;

  @SpeakeasyMetadata()
  @Expose({ name: "limitAccessToPeopleResponsible" })
  limitAccessToPeopleResponsible?: boolean;

  @SpeakeasyMetadata()
  @Expose({ name: "name" })
  name?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "notes" })
  notes?: string;

  @SpeakeasyMetadata({ elemType: CustomerPersonDTO })
  @Expose({ name: "persons" })
  @Type(() => CustomerPersonDTO)
  persons?: CustomerPersonDTO[];

  @SpeakeasyMetadata()
  @Expose({ name: "responsiblePersons" })
  @Type(() => CustomerResponsiblePersonsDTO)
  responsiblePersons?: CustomerResponsiblePersonsDTO;

  @SpeakeasyMetadata()
  @Expose({ name: "salesNotes" })
  salesNotes?: string;

  @SpeakeasyMetadata()
  @Expose({ name: "status" })
  status?: CustomerDTOStatusEnum;
}
