// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SyncJobStateEnum string

const (
	SyncJobStateEnumCreating     SyncJobStateEnum = "CREATING"
	SyncJobStateEnumInitializing SyncJobStateEnum = "INITIALIZING"
	SyncJobStateEnumActive       SyncJobStateEnum = "ACTIVE"
	SyncJobStateEnumDeleting     SyncJobStateEnum = "DELETING"
	SyncJobStateEnumError        SyncJobStateEnum = "ERROR"
)

func (e *SyncJobStateEnum) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return err
	}
	switch s {
	case "CREATING":
		fallthrough
	case "INITIALIZING":
		fallthrough
	case "ACTIVE":
		fallthrough
	case "DELETING":
		fallthrough
	case "ERROR":
		*e = SyncJobStateEnum(s)
		return nil
	default:
		return fmt.Errorf("invalid value for SyncJobStateEnum: %s", s)
	}
}
