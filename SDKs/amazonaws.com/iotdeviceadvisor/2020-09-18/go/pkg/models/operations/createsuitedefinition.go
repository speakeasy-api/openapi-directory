// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package operations

import (
	"net/http"
	"openapi/pkg/models/shared"
)

type CreateSuiteDefinitionHeaders struct {
	XAmzAlgorithm     *string `header:"style=simple,explode=false,name=X-Amz-Algorithm"`
	XAmzContentSha256 *string `header:"style=simple,explode=false,name=X-Amz-Content-Sha256"`
	XAmzCredential    *string `header:"style=simple,explode=false,name=X-Amz-Credential"`
	XAmzDate          *string `header:"style=simple,explode=false,name=X-Amz-Date"`
	XAmzSecurityToken *string `header:"style=simple,explode=false,name=X-Amz-Security-Token"`
	XAmzSignature     *string `header:"style=simple,explode=false,name=X-Amz-Signature"`
	XAmzSignedHeaders *string `header:"style=simple,explode=false,name=X-Amz-SignedHeaders"`
}

// CreateSuiteDefinitionRequestBodySuiteDefinitionConfiguration - Gets the suite definition configuration.
type CreateSuiteDefinitionRequestBodySuiteDefinitionConfiguration struct {
	DevicePermissionRoleArn  *string                  `json:"devicePermissionRoleArn,omitempty"`
	Devices                  []shared.DeviceUnderTest `json:"devices,omitempty"`
	IntendedForQualification *bool                    `json:"intendedForQualification,omitempty"`
	IsLongDurationTest       *bool                    `json:"isLongDurationTest,omitempty"`
	Protocol                 *shared.ProtocolEnum     `json:"protocol,omitempty"`
	RootGroup                *string                  `json:"rootGroup,omitempty"`
	SuiteDefinitionName      *string                  `json:"suiteDefinitionName,omitempty"`
}

type CreateSuiteDefinitionRequestBody struct {
	// Gets the suite definition configuration.
	SuiteDefinitionConfiguration CreateSuiteDefinitionRequestBodySuiteDefinitionConfiguration `json:"suiteDefinitionConfiguration"`
	// The tags to be attached to the suite definition.
	Tags map[string]string `json:"tags,omitempty"`
}

type CreateSuiteDefinitionRequest struct {
	Headers CreateSuiteDefinitionHeaders
	Request CreateSuiteDefinitionRequestBody `request:"mediaType=application/json"`
}

type CreateSuiteDefinitionResponse struct {
	ContentType string
	// Success
	CreateSuiteDefinitionResponse *shared.CreateSuiteDefinitionResponse
	// InternalServerException
	InternalServerException interface{}
	StatusCode              int
	RawResponse             *http.Response
	// ValidationException
	ValidationException interface{}
}
