<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


/**
 * ConnectionInput - Fields that need to be updated on the resource
 * 
 * @package OpenAPI\OpenAPI\Models\Shared
 * @access public
 */
class ConnectionInput
{
    /**
     * $configuration
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\ConnectionConfigurationInput> $configuration
     */
	#[\JMS\Serializer\Annotation\SerializedName('configuration')]
    #[\JMS\Serializer\Annotation\Type('array<OpenAPI\OpenAPI\Models\Shared\ConnectionConfigurationInput>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $configuration = null;
    
    /**
     * Whether the connection is enabled or not. You can enable or disable a connection using the Update Connection API.
     * 
     * @var ?bool $enabled
     */
	#[\JMS\Serializer\Annotation\SerializedName('enabled')]
    #[\JMS\Serializer\Annotation\Type('bool')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?bool $enabled = null;
    
    /**
     * Attach your own consumer specific metadata
     * 
     * @var ?array<string, mixed> $metadata
     */
	#[\JMS\Serializer\Annotation\SerializedName('metadata')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $metadata = null;
    
    /**
     * Connection settings. Values will persist to `form_fields` with corresponding id
     * 
     * @var ?array<string, mixed> $settings
     */
	#[\JMS\Serializer\Annotation\SerializedName('settings')]
    #[\JMS\Serializer\Annotation\Type('array<string, mixed>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $settings = null;
    
	public function __construct()
	{
		$this->configuration = null;
		$this->enabled = null;
		$this->metadata = null;
		$this->settings = null;
	}
}
