<?php

/**
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

declare(strict_types=1);

namespace OpenAPI\OpenAPI\Models\Shared;


class TransactionRuleInfo
{
	#[\JMS\Serializer\Annotation\SerializedName('amount')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\Amount')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?Amount $amount = null;
    
    /**
     * The unique identifier of the [balance platform](https://docs.adyen.com/api-explorer/#/balanceplatform/v1/get/balancePlatforms/{id}__queryParam_id) to which the rule applies.
     * 
     * @var ?string $balancePlatformId
     */
	#[\JMS\Serializer\Annotation\SerializedName('balancePlatformId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $balancePlatformId = null;
    
    /**
     * List of countries to which the rule applies. For example: **["NL","US"]**.
     * 
     * @var ?array<string> $countries
     */
	#[\JMS\Serializer\Annotation\SerializedName('countries')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $countries = null;
    
    /**
     * Your description for the transaction rule, maximum 300 characters.
     * 
     * @var string $description
     */
	#[\JMS\Serializer\Annotation\SerializedName('description')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $description;
    
    /**
     * The date when the rule will stop being evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.
     * 
     * 
     * If not provided, the rule will be evaluated until the rule status is set to **inactive**.
     * 
     * @var ?string $endDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('endDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $endDate = null;
    
    /**
     * List of point-of-sale entry modes to which the rule applies.
     * 
     * 
     * Possible values: **manual**, **chip**, **magstripe**, **contactless**, **cof**, **token**, **server**, **barcode**, **ocr**.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TransactionRuleInfoEntryModesEnum> $entryModes
     */
	#[\JMS\Serializer\Annotation\SerializedName('entryModes')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\TransactionRuleInfoEntryModesEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $entryModes = null;
    
	#[\JMS\Serializer\Annotation\SerializedName('interval')]
    #[\JMS\Serializer\Annotation\Type('OpenAPI\OpenAPI\Models\Shared\TransactionRuleInterval')]
    public TransactionRuleInterval $interval;
    
    /**
     * The maximum number of transactions that a payment instrument can be used for in the period specified in the `interval.type`.
     * 
     * @var ?int $maxTransactions
     */
	#[\JMS\Serializer\Annotation\SerializedName('maxTransactions')]
    #[\JMS\Serializer\Annotation\Type('int')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?int $maxTransactions = null;
    
    /**
     * List of Merchant Category Codes (MCCs) to which the rule applies.
     * 
     * @var ?array<string> $mccs
     */
	#[\JMS\Serializer\Annotation\SerializedName('mccs')]
    #[\JMS\Serializer\Annotation\Type('array<string>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $mccs = null;
    
    /**
     * The unique identifier of the [payment instrument group](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/paymentInstrumentGroups__resParam_id) to which the rule applies.
     * 
     * @var ?string $paymentInstrumentGroupId
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentInstrumentGroupId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentInstrumentGroupId = null;
    
    /**
     * The unique identifier of the [payment instrument](https://docs.adyen.com/api-explorer/#/balanceplatform/latest/post/paymentInstruments__resParam_id) to which the rule applies.
     * 
     * @var ?string $paymentInstrumentId
     */
	#[\JMS\Serializer\Annotation\SerializedName('paymentInstrumentId')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $paymentInstrumentId = null;
    
    /**
     * List of processing types to which the rule applies.
     * 
     * 
     * Possible values: **atmWithdraw**, **pos**, **ecommerce**, **moto**, **recurring**, **balanceInquiry**.
     * 
     * @var ?array<\OpenAPI\OpenAPI\Models\Shared\TransactionRuleInfoProcessingTypesEnum> $processingTypes
     */
	#[\JMS\Serializer\Annotation\SerializedName('processingTypes')]
    #[\JMS\Serializer\Annotation\Type('array<enum<OpenAPI\OpenAPI\Models\Shared\TransactionRuleInfoProcessingTypesEnum>>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?array $processingTypes = null;
    
    /**
     * Your reference for the transaction rule, maximum 150 characters.
     * 
     * @var string $reference
     */
	#[\JMS\Serializer\Annotation\SerializedName('reference')]
    #[\JMS\Serializer\Annotation\Type('string')]
    public string $reference;
    
    /**
     * The date when the rule will start to be evaluated, in ISO 8601 extended offset date-time format. For example, **2020-12-18T10:15:30+01:00**.
     * 
     * 
     * If not provided when creating a transaction rule, the `startDate` is set to the date when the rule status is set to **active**. 
     * 
     * 
     * 
     * @var ?string $startDate
     */
	#[\JMS\Serializer\Annotation\SerializedName('startDate')]
    #[\JMS\Serializer\Annotation\Type('string')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?string $startDate = null;
    
    /**
     * The status of the transaction rule. If you provide a `startDate` in the request, the rule is automatically created 
     * 
     * with an **active** status. 
     * 
     * Possible values: **active**, **inactive**.
     * 
     * @var ?\OpenAPI\OpenAPI\Models\Shared\TransactionRuleInfoStatusEnum $status
     */
	#[\JMS\Serializer\Annotation\SerializedName('status')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TransactionRuleInfoStatusEnum>')]
    #[\JMS\Serializer\Annotation\SkipWhenEmpty]
    public ?TransactionRuleInfoStatusEnum $status = null;
    
    /**
     * Type of conditions provided in the rule.
     * 
     * 
     * Possible values:
     *   * **allowList**: The rule provides categories (such as country and MCC) where payments must be allowed.
     *  * **blockList**: The rule provides categories (such as country and MCC) where payments must be blocked.
     *  * **maxUsage**: The rule sets limits for the maximum amount or maximum number of transactions for the lifetime of the payment instrument.
     *  * **velocity**: The rule sets limits for the maximum amount or maximum number of transactions for a given time interval.
     * 
     * 
     * @var \OpenAPI\OpenAPI\Models\Shared\TransactionRuleInfoTypeEnum $type
     */
	#[\JMS\Serializer\Annotation\SerializedName('type')]
    #[\JMS\Serializer\Annotation\Type('enum<OpenAPI\OpenAPI\Models\Shared\TransactionRuleInfoTypeEnum>')]
    public TransactionRuleInfoTypeEnum $type;
    
	public function __construct()
	{
		$this->amount = null;
		$this->balancePlatformId = null;
		$this->countries = null;
		$this->description = "";
		$this->endDate = null;
		$this->entryModes = null;
		$this->interval = new \OpenAPI\OpenAPI\Models\Shared\TransactionRuleInterval();
		$this->maxTransactions = null;
		$this->mccs = null;
		$this->paymentInstrumentGroupId = null;
		$this->paymentInstrumentId = null;
		$this->processingTypes = null;
		$this->reference = "";
		$this->startDate = null;
		$this->status = null;
		$this->type = \OpenAPI\OpenAPI\Models\Shared\TransactionRuleInfoTypeEnum::ALLOW_LIST;
	}
}
