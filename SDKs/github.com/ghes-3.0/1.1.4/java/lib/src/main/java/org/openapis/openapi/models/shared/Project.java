/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package org.openapis.openapi.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;
import org.openapis.openapi.utils.DateTimeDeserializer;
import org.openapis.openapi.utils.DateTimeSerializer;

/**
 * Project - Projects are a way to organize columns and cards of work.
 */
public class Project {
    /**
     * Body of the project
     */
    @JsonProperty("body")
    public String body;

    public Project withBody(String body) {
        this.body = body;
        return this;
    }
    
    @JsonProperty("columns_url")
    public String columnsUrl;

    public Project withColumnsUrl(String columnsUrl) {
        this.columnsUrl = columnsUrl;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("created_at")
    public OffsetDateTime createdAt;

    public Project withCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }
    
    /**
     * Simple User
     */
    @JsonProperty("creator")
    public NullableSimpleUser creator;

    public Project withCreator(NullableSimpleUser creator) {
        this.creator = creator;
        return this;
    }
    
    @JsonProperty("html_url")
    public String htmlUrl;

    public Project withHtmlUrl(String htmlUrl) {
        this.htmlUrl = htmlUrl;
        return this;
    }
    
    @JsonProperty("id")
    public Long id;

    public Project withId(Long id) {
        this.id = id;
        return this;
    }
    
    /**
     * Name of the project
     */
    @JsonProperty("name")
    public String name;

    public Project withName(String name) {
        this.name = name;
        return this;
    }
    
    @JsonProperty("node_id")
    public String nodeId;

    public Project withNodeId(String nodeId) {
        this.nodeId = nodeId;
        return this;
    }
    
    @JsonProperty("number")
    public Long number;

    public Project withNumber(Long number) {
        this.number = number;
        return this;
    }
    
    /**
     * The baseline permission that all organization members have on this project. Only present if owner is an organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("organization_permission")
    public ProjectOrganizationPermissionEnum organizationPermission;

    public Project withOrganizationPermission(ProjectOrganizationPermissionEnum organizationPermission) {
        this.organizationPermission = organizationPermission;
        return this;
    }
    
    @JsonProperty("owner_url")
    public String ownerUrl;

    public Project withOwnerUrl(String ownerUrl) {
        this.ownerUrl = ownerUrl;
        return this;
    }
    
    /**
     * Whether or not this project can be seen by everyone. Only present if owner is an organization.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("private")
    public Boolean private_;

    public Project withPrivate(Boolean private_) {
        this.private_ = private_;
        return this;
    }
    
    /**
     * State of the project; either 'open' or 'closed'
     */
    @JsonProperty("state")
    public String state;

    public Project withState(String state) {
        this.state = state;
        return this;
    }
    
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("updated_at")
    public OffsetDateTime updatedAt;

    public Project withUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }
    
    @JsonProperty("url")
    public String url;

    public Project withUrl(String url) {
        this.url = url;
        return this;
    }
    
    public Project(@JsonProperty("body") String body, @JsonProperty("columns_url") String columnsUrl, @JsonProperty("created_at") OffsetDateTime createdAt, @JsonProperty("creator") NullableSimpleUser creator, @JsonProperty("html_url") String htmlUrl, @JsonProperty("id") Long id, @JsonProperty("name") String name, @JsonProperty("node_id") String nodeId, @JsonProperty("number") Long number, @JsonProperty("owner_url") String ownerUrl, @JsonProperty("state") String state, @JsonProperty("updated_at") OffsetDateTime updatedAt, @JsonProperty("url") String url) {
        this.body = body;
        this.columnsUrl = columnsUrl;
        this.createdAt = createdAt;
        this.creator = creator;
        this.htmlUrl = htmlUrl;
        this.id = id;
        this.name = name;
        this.nodeId = nodeId;
        this.number = number;
        this.ownerUrl = ownerUrl;
        this.state = state;
        this.updatedAt = updatedAt;
        this.url = url;
  }
}
